"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DashboardClientFeedbackResponse = exports.DashboardClientFeedback200ApplicationJSON = exports.DashboardClientFeedback200ApplicationJSONClientFeedbacks = exports.DashboardClientFeedback200ApplicationXML = exports.DashboardClientFeedback200ApplicationXMLClientFeedbacks = exports.DashboardClientFeedbackRequest = exports.DashboardClientFeedbackSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var DashboardClientFeedbackSecurity = /** @class */ (function (_super) {
    __extends(DashboardClientFeedbackSecurity, _super);
    function DashboardClientFeedbackSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], DashboardClientFeedbackSecurity.prototype, "oAuth", void 0);
    return DashboardClientFeedbackSecurity;
}(utils_1.SpeakeasyBase));
exports.DashboardClientFeedbackSecurity = DashboardClientFeedbackSecurity;
var DashboardClientFeedbackRequest = /** @class */ (function (_super) {
    __extends(DashboardClientFeedbackRequest, _super);
    function DashboardClientFeedbackRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
        }),
        __metadata("design:type", Date)
    ], DashboardClientFeedbackRequest.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
        }),
        __metadata("design:type", Date)
    ], DashboardClientFeedbackRequest.prototype, "to", void 0);
    return DashboardClientFeedbackRequest;
}(utils_1.SpeakeasyBase));
exports.DashboardClientFeedbackRequest = DashboardClientFeedbackRequest;
var DashboardClientFeedback200ApplicationXMLClientFeedbacks = /** @class */ (function (_super) {
    __extends(DashboardClientFeedback200ApplicationXMLClientFeedbacks, _super);
    function DashboardClientFeedback200ApplicationXMLClientFeedbacks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardClientFeedback200ApplicationXMLClientFeedbacks.prototype, "feedbackId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardClientFeedback200ApplicationXMLClientFeedbacks.prototype, "feedbackName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardClientFeedback200ApplicationXMLClientFeedbacks.prototype, "participantsCount", void 0);
    return DashboardClientFeedback200ApplicationXMLClientFeedbacks;
}(utils_1.SpeakeasyBase));
exports.DashboardClientFeedback200ApplicationXMLClientFeedbacks = DashboardClientFeedback200ApplicationXMLClientFeedbacks;
/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Client Feedback details returned.
 */
var DashboardClientFeedback200ApplicationXML = /** @class */ (function (_super) {
    __extends(DashboardClientFeedback200ApplicationXML, _super);
    function DashboardClientFeedback200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DashboardClientFeedback200ApplicationXMLClientFeedbacks,
        }),
        __metadata("design:type", Array)
    ], DashboardClientFeedback200ApplicationXML.prototype, "clientFeedbacks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DashboardClientFeedback200ApplicationXML.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DashboardClientFeedback200ApplicationXML.prototype, "to", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardClientFeedback200ApplicationXML.prototype, "totalRecords", void 0);
    return DashboardClientFeedback200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.DashboardClientFeedback200ApplicationXML = DashboardClientFeedback200ApplicationXML;
var DashboardClientFeedback200ApplicationJSONClientFeedbacks = /** @class */ (function (_super) {
    __extends(DashboardClientFeedback200ApplicationJSONClientFeedbacks, _super);
    function DashboardClientFeedback200ApplicationJSONClientFeedbacks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "feedback_id" }),
        __metadata("design:type", String)
    ], DashboardClientFeedback200ApplicationJSONClientFeedbacks.prototype, "feedbackId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "feedback_name" }),
        __metadata("design:type", String)
    ], DashboardClientFeedback200ApplicationJSONClientFeedbacks.prototype, "feedbackName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "participants_count" }),
        __metadata("design:type", Number)
    ], DashboardClientFeedback200ApplicationJSONClientFeedbacks.prototype, "participantsCount", void 0);
    return DashboardClientFeedback200ApplicationJSONClientFeedbacks;
}(utils_1.SpeakeasyBase));
exports.DashboardClientFeedback200ApplicationJSONClientFeedbacks = DashboardClientFeedback200ApplicationJSONClientFeedbacks;
/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Client Feedback details returned.
 */
var DashboardClientFeedback200ApplicationJSON = /** @class */ (function (_super) {
    __extends(DashboardClientFeedback200ApplicationJSON, _super);
    function DashboardClientFeedback200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DashboardClientFeedback200ApplicationJSONClientFeedbacks,
        }),
        (0, class_transformer_1.Expose)({ name: "client_feedbacks" }),
        (0, class_transformer_1.Type)(function () { return DashboardClientFeedback200ApplicationJSONClientFeedbacks; }),
        __metadata("design:type", Array)
    ], DashboardClientFeedback200ApplicationJSON.prototype, "clientFeedbacks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "from" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DashboardClientFeedback200ApplicationJSON.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "to" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DashboardClientFeedback200ApplicationJSON.prototype, "to", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_records" }),
        __metadata("design:type", Number)
    ], DashboardClientFeedback200ApplicationJSON.prototype, "totalRecords", void 0);
    return DashboardClientFeedback200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.DashboardClientFeedback200ApplicationJSON = DashboardClientFeedback200ApplicationJSON;
var DashboardClientFeedbackResponse = /** @class */ (function (_super) {
    __extends(DashboardClientFeedbackResponse, _super);
    function DashboardClientFeedbackResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], DashboardClientFeedbackResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DashboardClientFeedbackResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DashboardClientFeedbackResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], DashboardClientFeedbackResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DashboardClientFeedback200ApplicationJSON)
    ], DashboardClientFeedbackResponse.prototype, "dashboardClientFeedback200ApplicationJSONObject", void 0);
    return DashboardClientFeedbackResponse;
}(utils_1.SpeakeasyBase));
exports.DashboardClientFeedbackResponse = DashboardClientFeedbackResponse;
