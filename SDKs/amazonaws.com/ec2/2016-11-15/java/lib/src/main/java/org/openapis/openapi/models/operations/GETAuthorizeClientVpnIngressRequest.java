/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETAuthorizeClientVpnIngressRequest {
    /**
     * The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if &lt;code&gt;AuthorizeAllGroups&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; or not specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AccessGroupId")
    public String accessGroupId;

    public GETAuthorizeClientVpnIngressRequest withAccessGroupId(String accessGroupId) {
        this.accessGroupId = accessGroupId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETAuthorizeClientVpnIngressActionEnum action;

    public GETAuthorizeClientVpnIngressRequest withAction(GETAuthorizeClientVpnIngressActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Indicates whether to grant access to all clients. Specify &lt;code&gt;true&lt;/code&gt; to grant all clients who successfully establish a VPN connection access to the network. Must be set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AccessGroupId&lt;/code&gt; is not specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AuthorizeAllGroups")
    public Boolean authorizeAllGroups;

    public GETAuthorizeClientVpnIngressRequest withAuthorizeAllGroups(Boolean authorizeAllGroups) {
        this.authorizeAllGroups = authorizeAllGroups;
        return this;
    }
    
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html"&gt;How to ensure idempotency&lt;/a&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientToken")
    public String clientToken;

    public GETAuthorizeClientVpnIngressRequest withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The ID of the Client VPN endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientVpnEndpointId")
    public String clientVpnEndpointId;

    public GETAuthorizeClientVpnIngressRequest withClientVpnEndpointId(String clientVpnEndpointId) {
        this.clientVpnEndpointId = clientVpnEndpointId;
        return this;
    }
    
    /**
     * A brief description of the authorization rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Description")
    public String description;

    public GETAuthorizeClientVpnIngressRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;

    public GETAuthorizeClientVpnIngressRequest withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The IPv4 address range, in CIDR notation, of the network for which access is being authorized.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TargetNetworkCidr")
    public String targetNetworkCidr;

    public GETAuthorizeClientVpnIngressRequest withTargetNetworkCidr(String targetNetworkCidr) {
        this.targetNetworkCidr = targetNetworkCidr;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETAuthorizeClientVpnIngressVersionEnum version;

    public GETAuthorizeClientVpnIngressRequest withVersion(GETAuthorizeClientVpnIngressVersionEnum version) {
        this.version = version;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;

    public GETAuthorizeClientVpnIngressRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;

    public GETAuthorizeClientVpnIngressRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;

    public GETAuthorizeClientVpnIngressRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;

    public GETAuthorizeClientVpnIngressRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;

    public GETAuthorizeClientVpnIngressRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;

    public GETAuthorizeClientVpnIngressRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;

    public GETAuthorizeClientVpnIngressRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    public GETAuthorizeClientVpnIngressRequest(@JsonProperty("Action") GETAuthorizeClientVpnIngressActionEnum action, @JsonProperty("ClientVpnEndpointId") String clientVpnEndpointId, @JsonProperty("TargetNetworkCidr") String targetNetworkCidr, @JsonProperty("Version") GETAuthorizeClientVpnIngressVersionEnum version) {
        this.action = action;
        this.clientVpnEndpointId = clientVpnEndpointId;
        this.targetNetworkCidr = targetNetworkCidr;
        this.version = version;
  }
}
