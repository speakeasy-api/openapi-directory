/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { KeySchema } from "./keyschema";
import { ProvisionedThroughputDescription } from "./provisionedthroughputdescription";
import { TableStatusEnum } from "./tablestatusenum";
import { Expose, Transform, Type } from "class-transformer";

export class TableDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ItemCount" })
  itemCount?: number;

  /**
   * The KeySchema identifies the primary key as a one attribute primary key (hash) or a composite two attribute (hash-and-range) primary key. Single attribute primary keys have one index value: a <code>HashKeyElement</code>. A composite hash-and-range primary key contains two attribute values: a <code>HashKeyElement</code> and a <code>RangeKeyElement</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "KeySchema" })
  @Type(() => KeySchema)
  keySchema?: KeySchema;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisionedThroughput" })
  @Type(() => ProvisionedThroughputDescription)
  provisionedThroughput?: ProvisionedThroughputDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableSizeBytes" })
  tableSizeBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TableStatus" })
  tableStatus?: TableStatusEnum;
}
