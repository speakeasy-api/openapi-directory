/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The value stream kind.
 */
export enum ValueDescriptorMetricKindEnum {
  MetricKindUnspecified = "METRIC_KIND_UNSPECIFIED",
  Gauge = "GAUGE",
  Delta = "DELTA",
  Cumulative = "CUMULATIVE",
}

/**
 * The value type.
 */
export enum ValueDescriptorValueTypeEnum {
  ValueTypeUnspecified = "VALUE_TYPE_UNSPECIFIED",
  Bool = "BOOL",
  Int64 = "INT64",
  Double = "DOUBLE",
  String = "STRING",
  Distribution = "DISTRIBUTION",
  Money = "MONEY",
}

/**
 * A descriptor for the value columns in a data point.
 */
export class ValueDescriptor extends SpeakeasyBase {
  /**
   * The value key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * The value stream kind.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metricKind" })
  metricKind?: ValueDescriptorMetricKindEnum;

  /**
   * The unit in which time_series point values are reported. unit follows the UCUM format for units as seen in https://unitsofmeasure.org/ucum.html. unit is only valid if value_type is INTEGER, DOUBLE, DISTRIBUTION.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: string;

  /**
   * The value type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valueType" })
  valueType?: ValueDescriptorValueTypeEnum;
}
