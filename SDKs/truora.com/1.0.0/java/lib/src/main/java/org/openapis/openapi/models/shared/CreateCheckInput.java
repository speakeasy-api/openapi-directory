/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * CreateCheckInput - Represents paramaters required to create a background check
 */
public class CreateCheckInput {
    /**
     * Person birth certificate
     */
    @SpeakeasyMetadata("form:name=birth_certificate")
    public String birthCertificate;

    public CreateCheckInput withBirthCertificate(String birthCertificate) {
        this.birthCertificate = birthCertificate;
        return this;
    }
    
    /**
     * Company name "Don't forget this required field to complete background checks in Brazil"
     */
    @SpeakeasyMetadata("form:name=company_name")
    public String companyName;

    public CreateCheckInput withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Document country
     */
    @SpeakeasyMetadata("form:name=country")
    public CreateCheckInputCountryEnum country;

    public CreateCheckInput withCountry(CreateCheckInputCountryEnum country) {
        this.country = country;
        return this;
    }
    
    /**
     * Person birthdate. This date is used to get some additional information about a person and to filter homonyms in some cases. YYYY-MM-DD format, Required for complete background checks in Brazil
     */
    @SpeakeasyMetadata("form:name=date_of_birth")
    public LocalDate dateOfBirth;

    public CreateCheckInput withDateOfBirth(LocalDate dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }
    
    /**
     * Diplomatic ID
     */
    @SpeakeasyMetadata("form:name=diplomatic_id")
    public String diplomaticId;

    public CreateCheckInput withDiplomaticId(String diplomaticId) {
        this.diplomaticId = diplomaticId;
        return this;
    }
    
    /**
     * Driver's license number
     */
    @SpeakeasyMetadata("form:name=driver_license")
    public String driverLicense;

    public CreateCheckInput withDriverLicense(String driverLicense) {
        this.driverLicense = driverLicense;
        return this;
    }
    
    /**
     * Colombian escrow
     */
    @SpeakeasyMetadata("form:name=escrow")
    public String escrow;

    public CreateCheckInput withEscrow(String escrow) {
        this.escrow = escrow;
        return this;
    }
    
    /**
     * Person or entity first name. If the document type and number are not provided, the report might include homonyms. Required when searching by first name, Required in order to get complete background checks in Brazil
     */
    @SpeakeasyMetadata("form:name=first_name")
    public String firstName;

    public CreateCheckInput withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Forces a new background check creation when true. Reuses recently created background checks otherwise
     */
    @SpeakeasyMetadata("form:name=force_creation")
    public Boolean forceCreation;

    public CreateCheckInput withForceCreation(Boolean forceCreation) {
        this.forceCreation = forceCreation;
        return this;
    }
    
    /**
     * Person foreign ID
     */
    @SpeakeasyMetadata("form:name=foreign_id")
    public String foreignId;

    public CreateCheckInput withForeignId(String foreignId) {
        this.foreignId = foreignId;
        return this;
    }
    
    /**
     * Person document issue date in "YYYY-mm-dd" format (e.g. 2008-12-31) . This date is used to get some additional information about a person in some cases
     */
    @SpeakeasyMetadata("form:name=issue_date")
    public LocalDate issueDate;

    public CreateCheckInput withIssueDate(LocalDate issueDate) {
        this.issueDate = issueDate;
        return this;
    }
    
    /**
     * Person or entity last name. If the document type and number are not provided, the report might include homonyms. Required when searching by last name. Required in order to get complete background checks in Brazil
     */
    @SpeakeasyMetadata("form:name=last_name")
    public String lastName;

    public CreateCheckInput withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Vehicle license plate
     */
    @SpeakeasyMetadata("form:name=license_plate")
    public String licensePlate;

    public CreateCheckInput withLicensePlate(String licensePlate) {
        this.licensePlate = licensePlate;
        return this;
    }
    
    /**
     * National ID
     */
    @SpeakeasyMetadata("form:name=national_id")
    public String nationalId;

    public CreateCheckInput withNationalId(String nationalId) {
        this.nationalId = nationalId;
        return this;
    }
    
    /**
     * Country of birth
     */
    @SpeakeasyMetadata("form:name=native_country")
    public String nativeCountry;

    public CreateCheckInput withNativeCountry(String nativeCountry) {
        this.nativeCountry = nativeCountry;
        return this;
    }
    
    /**
     * National ID of the vehicle owner
     */
    @SpeakeasyMetadata("form:name=owner_document_id")
    public String ownerDocumentId;

    public CreateCheckInput withOwnerDocumentId(String ownerDocumentId) {
        this.ownerDocumentId = ownerDocumentId;
        return this;
    }
    
    /**
     * National ID, foreign ID, or tax ID
     */
    @SpeakeasyMetadata("form:name=owner_document_type")
    public String ownerDocumentType;

    public CreateCheckInput withOwnerDocumentType(String ownerDocumentType) {
        this.ownerDocumentType = ownerDocumentType;
        return this;
    }
    
    /**
     * Person passport
     */
    @SpeakeasyMetadata("form:name=passport")
    public String passport;

    public CreateCheckInput withPassport(String passport) {
        this.passport = passport;
        return this;
    }
    
    /**
     * Payment day of a vehicle circulation permit (Chile only)
     */
    @SpeakeasyMetadata("form:name=payment_date")
    public LocalDate paymentDate;

    public CreateCheckInput withPaymentDate(LocalDate paymentDate) {
        this.paymentDate = paymentDate;
        return this;
    }
    
    /**
     * ID for Venezuelans working in Colombia
     */
    @SpeakeasyMetadata("form:name=pep")
    public String pep;

    public CreateCheckInput withPep(String pep) {
        this.pep = pep;
        return this;
    }
    
    /**
     * Person phone number. Required by law to notify the person their background is being checked
     */
    @SpeakeasyMetadata("form:name=phone_number")
    public String phoneNumber;

    public CreateCheckInput withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * Professional ID card
     */
    @SpeakeasyMetadata("form:name=professional_card")
    public String professionalCard;

    public CreateCheckInput withProfessionalCard(String professionalCard) {
        this.professionalCard = professionalCard;
        return this;
    }
    
    /**
     * ID for Venezuelans working in Peru
     */
    @SpeakeasyMetadata("form:name=ptp")
    public String ptp;

    public CreateCheckInput withPtp(String ptp) {
        this.ptp = ptp;
        return this;
    }
    
    /**
     * Region where the background is to be checked in addition to the region where the person is from. By default, background checks in Brazil are performed in the region where the person is from. Required for Brazil only. Allowed values are: DF: Distrito Federal, AC: Acre, AL: Alagoas, AP: Amap\u00e1, AM: Amazonas, BA: Bah\u00eda, CE: Cear\u00e1, ES: Esp\u00edrito Santo, GO: Goi\u00e1s, MA: Maranh\u00e3o, MT: Mato Grosso, MS: Mato Grosso do Sul, MG: Minas Gerais, PA: Par\u00e1, PB: Para\u00edba, PR: Paran\u00e1, PE: Pernambuco, PI: Piau\u00ed, RJ: R\u00edo de Janeiro, RN: R\u00edo Grande do Norte, RS: R\u00edo Grande do Sul, RO: Rond\u00f4nia, RR: Roraima, SC: Santa Catarina, SP: S\u00e3o Paulo, SE: Sergipe, TO : Tocantins.
     */
    @SpeakeasyMetadata("form:name=region")
    public CreateCheckInputRegionEnum region;

    public CreateCheckInput withRegion(CreateCheckInputRegionEnum region) {
        this.region = region;
        return this;
    }
    
    /**
     * Report ID the background check will be inserted into
     */
    @SpeakeasyMetadata("form:name=report_id")
    public String reportId;

    public CreateCheckInput withReportId(String reportId) {
        this.reportId = reportId;
        return this;
    }
    
    /**
     *  Used for the RG (Registro Geral) identification in Brazil. This identification has different formats according to the state that issues the document. It can have numbers and letters but other characters (- * , . ) are omitted, Required in order to get complete background checks in Brazil
     */
    @SpeakeasyMetadata("form:name=state_id")
    public String stateId;

    public CreateCheckInput withStateId(String stateId) {
        this.stateId = stateId;
        return this;
    }
    
    /**
     * Company ID used for tax payments
     */
    @SpeakeasyMetadata("form:name=tax_id")
    public String taxId;

    public CreateCheckInput withTaxId(String taxId) {
        this.taxId = taxId;
        return this;
    }
    
    /**
     * Background check type
     */
    @SpeakeasyMetadata("form:name=type")
    public CreateCheckInputTypeEnum type;

    public CreateCheckInput withType(CreateCheckInputTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Indicates whether the person subject to the validation authorized the validation. Must be true in order to proceed [Required for API key V1 or later]
     */
    @SpeakeasyMetadata("form:name=user_authorized")
    public Boolean userAuthorized;

    public CreateCheckInput withUserAuthorized(Boolean userAuthorized) {
        this.userAuthorized = userAuthorized;
        return this;
    }
    
    /**
     * Vehicle license plate
     */
    @SpeakeasyMetadata("form:name=vehicle_id")
    public String vehicleId;

    public CreateCheckInput withVehicleId(String vehicleId) {
        this.vehicleId = vehicleId;
        return this;
    }
    
    /**
     * Verification code registered for criminal records in Peru only
     */
    @SpeakeasyMetadata("form:name=verification_code")
    public String verificationCode;

    public CreateCheckInput withVerificationCode(String verificationCode) {
        this.verificationCode = verificationCode;
        return this;
    }
    
    /**
     * Indicates whether the check score is to be periodically revised and its frequency. It can be daily, weekly, monthly, yearly or have a custom frequency written as a number accompanied by d: day, w: week, m: month, y: year for instance: 3d: every three days, 2w: every two weeks. Ignore this field if the check is only to be performed once
     */
    @SpeakeasyMetadata("form:name=watch")
    public String watch;

    public CreateCheckInput withWatch(String watch) {
        this.watch = watch;
        return this;
    }
    
    public CreateCheckInput(@JsonProperty("country") CreateCheckInputCountryEnum country, @JsonProperty("type") CreateCheckInputTypeEnum type) {
        this.country = country;
        this.type = type;
  }
}
