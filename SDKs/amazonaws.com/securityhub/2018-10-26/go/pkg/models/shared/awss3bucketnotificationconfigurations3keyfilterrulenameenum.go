// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnum string

const (
	AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnumPrefix AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnum = "Prefix"
	AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnumSuffix AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnum = "Suffix"
)

func (e AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnum) ToPointer() *AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnum {
	return &e
}

func (e *AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Prefix":
		fallthrough
	case "Suffix":
		*e = AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AwsS3BucketNotificationConfigurationS3KeyFilterRuleNameEnum: %v", v)
	}
}
