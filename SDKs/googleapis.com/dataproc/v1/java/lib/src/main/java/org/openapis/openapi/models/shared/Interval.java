/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Interval - Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive).The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
 */
public class Interval {
    /**
     * Optional. Exclusive end of the interval.If specified, a Timestamp matching this interval will have to be before the end.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public Interval withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Optional. Inclusive start of the interval.If specified, a Timestamp matching this interval will have to be the same or after the start.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public Interval withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    public Interval(){}
}
