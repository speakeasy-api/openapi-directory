<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SpriteSheet - Sprite sheet configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SpriteSheet
{
    /**
     * The maximum number of sprites per row in a sprite sheet. The default is 0, which indicates no maximum limit.
     * 
     * @var ?int $columnCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $columnCount = null;
    
    /**
     * End time in seconds, relative to the output file timeline. When `end_time_offset` is not specified, the sprites are generated until the end of the output file.
     * 
     * @var ?string $endTimeOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('endTimeOffset')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endTimeOffset = null;
    
    /**
     * Required. File name prefix for the generated sprite sheets. Each sprite sheet has an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `"sprite_sheet0000000123.jpeg"`.
     * 
     * @var ?string $filePrefix
     */
	#[\JMS\Serializer\Annotation\SerializedName('filePrefix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filePrefix = null;
    
    /**
     * Format type. The default is `"jpeg"`. Supported formats: - 'jpeg'
     * 
     * @var ?string $format
     */
	#[\JMS\Serializer\Annotation\SerializedName('format')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $format = null;
    
    /**
     * Starting from `0s`, create sprites at regular intervals. Specify the interval value in seconds.
     * 
     * @var ?string $interval
     */
	#[\JMS\Serializer\Annotation\SerializedName('interval')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $interval = null;
    
    /**
     * The quality of the generated sprite sheet. Enter a value between 1 and 100, where 1 is the lowest quality and 100 is the highest quality. The default is 100. A high quality value corresponds to a low image data compression ratio.
     * 
     * @var ?int $quality
     */
	#[\JMS\Serializer\Annotation\SerializedName('quality')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $quality = null;
    
    /**
     * The maximum number of rows per sprite sheet. When the sprite sheet is full, a new sprite sheet is created. The default is 0, which indicates no maximum limit.
     * 
     * @var ?int $rowCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('rowCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $rowCount = null;
    
    /**
     * Required. The height of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_height_pixels field or the SpriteSheet.sprite_width_pixels field, but not both (the API will automatically calculate the missing field).
     * 
     * @var ?int $spriteHeightPixels
     */
	#[\JMS\Serializer\Annotation\SerializedName('spriteHeightPixels')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $spriteHeightPixels = null;
    
    /**
     * Required. The width of sprite in pixels. Must be an even integer. To preserve the source aspect ratio, set the SpriteSheet.sprite_width_pixels field or the SpriteSheet.sprite_height_pixels field, but not both (the API will automatically calculate the missing field).
     * 
     * @var ?int $spriteWidthPixels
     */
	#[\JMS\Serializer\Annotation\SerializedName('spriteWidthPixels')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $spriteWidthPixels = null;
    
    /**
     * Start time in seconds, relative to the output file timeline. Determines the first sprite to pick. The default is `0s`.
     * 
     * @var ?string $startTimeOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTimeOffset')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTimeOffset = null;
    
    /**
     * Total number of sprites. Create the specified number of sprites distributed evenly across the timeline of the output media. The default is 100.
     * 
     * @var ?int $totalCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalCount = null;
    
	public function __construct()
	{
		$this->columnCount = null;
		$this->endTimeOffset = null;
		$this->filePrefix = null;
		$this->format = null;
		$this->interval = null;
		$this->quality = null;
		$this->rowCount = null;
		$this->spriteHeightPixels = null;
		$this->spriteWidthPixels = null;
		$this->startTimeOffset = null;
		$this->totalCount = null;
	}
}
