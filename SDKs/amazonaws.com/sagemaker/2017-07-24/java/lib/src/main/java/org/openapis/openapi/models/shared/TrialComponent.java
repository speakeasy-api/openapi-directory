/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TrialComponent - The properties of a trial component as returned by the &lt;a&gt;Search&lt;/a&gt; API.
 */
public class TrialComponent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedBy")
    public UserContext createdBy;
    public TrialComponent withCreatedBy(UserContext createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public TrialComponent withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisplayName")
    public String displayName;
    public TrialComponent withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;
    public TrialComponent withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputArtifacts")
    public java.util.Map<String, TrialComponentArtifact> inputArtifacts;
    public TrialComponent withInputArtifacts(java.util.Map<String, TrialComponentArtifact> inputArtifacts) {
        this.inputArtifacts = inputArtifacts;
        return this;
    }
    
    /**
     * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastModifiedBy")
    public UserContext lastModifiedBy;
    public TrialComponent withLastModifiedBy(UserContext lastModifiedBy) {
        this.lastModifiedBy = lastModifiedBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;
    public TrialComponent withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LineageGroupArn")
    public String lineageGroupArn;
    public TrialComponent withLineageGroupArn(String lineageGroupArn) {
        this.lineageGroupArn = lineageGroupArn;
        return this;
    }
    
    /**
     * Metadata properties of the tracking entity, trial, or trial component.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetadataProperties")
    public MetadataProperties metadataProperties;
    public TrialComponent withMetadataProperties(MetadataProperties metadataProperties) {
        this.metadataProperties = metadataProperties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Metrics")
    public TrialComponentMetricSummary[] metrics;
    public TrialComponent withMetrics(TrialComponentMetricSummary[] metrics) {
        this.metrics = metrics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputArtifacts")
    public java.util.Map<String, TrialComponentArtifact> outputArtifacts;
    public TrialComponent withOutputArtifacts(java.util.Map<String, TrialComponentArtifact> outputArtifacts) {
        this.outputArtifacts = outputArtifacts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Parameters")
    public java.util.Map<String, TrialComponentParameterValue> parameters;
    public TrialComponent withParameters(java.util.Map<String, TrialComponentParameterValue> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Parents")
    public Parent[] parents;
    public TrialComponent withParents(Parent[] parents) {
        this.parents = parents;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RunName")
    public String runName;
    public TrialComponent withRunName(String runName) {
        this.runName = runName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Source")
    public TrialComponentSource source;
    public TrialComponent withSource(TrialComponentSource source) {
        this.source = source;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceDetail")
    public TrialComponentSourceDetail sourceDetail;
    public TrialComponent withSourceDetail(TrialComponentSourceDetail sourceDetail) {
        this.sourceDetail = sourceDetail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;
    public TrialComponent withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The status of the trial component.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public TrialComponentStatus status;
    public TrialComponent withStatus(TrialComponentStatus status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public TrialComponent withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrialComponentArn")
    public String trialComponentArn;
    public TrialComponent withTrialComponentArn(String trialComponentArn) {
        this.trialComponentArn = trialComponentArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrialComponentName")
    public String trialComponentName;
    public TrialComponent withTrialComponentName(String trialComponentName) {
        this.trialComponentName = trialComponentName;
        return this;
    }
    
}
