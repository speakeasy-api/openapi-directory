"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import libraryresponse as shared_libraryresponse
from typing import Optional


@dataclasses.dataclass
class GetLibrarySecurity:
    
    zettle_oauth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetLibraryRequest:
    
    organization_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationUuid', 'style': 'simple', 'explode': False }})  
    all: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'all', 'style': 'form', 'explode': True }})  
    event_log_uuid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'eventLogUuid', 'style': 'form', 'explode': True }})  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})  
    offset: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetLibraryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    library_response: Optional[shared_libraryresponse.LibraryResponse] = dataclasses.field(default=None)
    r"""List of library items"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    