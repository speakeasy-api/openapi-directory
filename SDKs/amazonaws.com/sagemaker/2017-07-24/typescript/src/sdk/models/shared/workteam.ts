/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MemberDefinition } from "./memberdefinition";
import { NotificationConfiguration } from "./notificationconfiguration";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides details about a labeling work team.
 */
export class Workteam extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDate?: Date;

  @SpeakeasyMetadata({ elemType: MemberDefinition })
  @Expose({ name: "MemberDefinitions" })
  @Type(() => MemberDefinition)
  memberDefinitions: MemberDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationConfiguration" })
  @Type(() => NotificationConfiguration)
  notificationConfiguration?: NotificationConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductListingIds" })
  productListingIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SubDomain" })
  subDomain?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkforceArn" })
  workforceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkteamArn" })
  workteamArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkteamName" })
  workteamName: string;
}
