/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class WebhookLog extends SpeakeasyBase {
  /**
   * ID of the log
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * ID of the service
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_service" })
  idService?: number;

  /**
   * ID of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_user" })
  idUser?: number;

  /**
   * ID of the webhook data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_webhook_data" })
  idWebhookData?: number;

  /**
   * If the log is an error, do not retry to push before this timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_try" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextTry?: Date;

  /**
   * Return code of the reply to the hook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response_code" })
  responseCode?: number;

  /**
   * Timestamp of the reply to the hook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  responseDate?: Date;

  /**
   * Timestamp when the hook was sent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;
}
