/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { CurrencyEnum } from "./currencyenum";
import { InvoiceLineItem, InvoiceLineItemInput } from "./invoicelineitem";
import { LinkedCustomer, LinkedCustomerInput } from "./linkedcustomer";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Invoice status
 */
export enum InvoiceStatusEnum {
  Draft = "draft",
  Submitted = "submitted",
  Authorised = "authorised",
  PartiallyPaid = "partially_paid",
  Paid = "paid",
  Void = "void",
  Credit = "credit",
  Deleted = "deleted",
}

/**
 * Invoice type
 */
export enum InvoiceInvoiceTypeEnum {
  Standard = "standard",
  Credit = "credit",
  Service = "service",
  Product = "product",
  Supplier = "supplier",
  Other = "other",
}

export class InvoiceInput extends SpeakeasyBase {
  /**
   * Balance of invoice due.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "billing_address" })
  @Type(() => Address)
  billingAddress?: Address;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * Currency Exchange Rate at the time entity was recorded/generated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency_rate" })
  currencyRate?: number;

  /**
   * The customer this entity is linked to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customer" })
  @Type(() => LinkedCustomerInput)
  customer?: LinkedCustomerInput;

  /**
   * Customer memo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customer_memo" })
  customerMemo?: string;

  /**
   * Amount of deposit made to this invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deposit" })
  deposit?: number;

  /**
   * Discount amount applied to this invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_amount" })
  discountAmount?: number;

  /**
   * Discount percentage applied to this invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_percentage" })
  discountPercentage?: number;

  /**
   * The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "due_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueDate?: Date;

  /**
   * Date invoice was issued - YYYY-MM-DD.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoice_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  invoiceDate?: Date;

  /**
   * Invoice sent to contact/customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoice_sent" })
  invoiceSent?: boolean;

  @SpeakeasyMetadata({ elemType: InvoiceLineItemInput })
  @Expose({ name: "line_items" })
  @Type(() => InvoiceLineItemInput)
  lineItems?: InvoiceLineItemInput[];

  /**
   * Invoice number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "po_number" })
  poNumber?: string;

  /**
   * Optional invoice reference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shipping_address" })
  @Type(() => Address)
  shippingAddress?: Address;

  /**
   * URL link to a source document - shown as 'Go to [appName]' in the downstream app. Currently only supported for Xero.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_document_url" })
  sourceDocumentUrl?: string;

  /**
   * Invoice status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: InvoiceStatusEnum;

  /**
   * Sub-total amount, normally before tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_total" })
  subTotal?: number;

  /**
   * Applicable tax id/code override if tax is not supplied on a line item basis.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_code" })
  taxCode?: string;

  /**
   * Amounts are including tax
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_inclusive" })
  taxInclusive?: boolean;

  /**
   * Optional invoice template
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template_id" })
  templateId?: string;

  /**
   * Terms of payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "terms" })
  terms?: string;

  /**
   * Total amount of invoice, including tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  /**
   * Total tax amount applied to this invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_tax" })
  totalTax?: number;

  /**
   * Invoice type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: InvoiceInvoiceTypeEnum;
}

export class Invoice extends SpeakeasyBase {
  /**
   * Balance of invoice due.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "billing_address" })
  @Type(() => Address)
  billingAddress?: Address;

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * Currency Exchange Rate at the time entity was recorded/generated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency_rate" })
  currencyRate?: number;

  /**
   * The customer this entity is linked to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customer" })
  @Type(() => LinkedCustomer)
  customer?: LinkedCustomer;

  /**
   * Customer memo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customer_memo" })
  customerMemo?: string;

  /**
   * Amount of deposit made to this invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deposit" })
  deposit?: number;

  /**
   * Discount amount applied to this invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_amount" })
  discountAmount?: number;

  /**
   * Discount percentage applied to this invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_percentage" })
  discountPercentage?: number;

  /**
   * The third-party API ID of original entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downstream_id" })
  downstreamId?: string;

  /**
   * The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "due_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueDate?: Date;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Date invoice was issued - YYYY-MM-DD.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoice_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  invoiceDate?: Date;

  /**
   * Invoice sent to contact/customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoice_sent" })
  invoiceSent?: boolean;

  @SpeakeasyMetadata({ elemType: InvoiceLineItem })
  @Expose({ name: "line_items" })
  @Type(() => InvoiceLineItem)
  lineItems?: InvoiceLineItem[];

  /**
   * Invoice number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "po_number" })
  poNumber?: string;

  /**
   * Optional invoice reference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shipping_address" })
  @Type(() => Address)
  shippingAddress?: Address;

  /**
   * URL link to a source document - shown as 'Go to [appName]' in the downstream app. Currently only supported for Xero.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_document_url" })
  sourceDocumentUrl?: string;

  /**
   * Invoice status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: InvoiceStatusEnum;

  /**
   * Sub-total amount, normally before tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_total" })
  subTotal?: number;

  /**
   * Applicable tax id/code override if tax is not supplied on a line item basis.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_code" })
  taxCode?: string;

  /**
   * Amounts are including tax
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_inclusive" })
  taxInclusive?: boolean;

  /**
   * Optional invoice template
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template_id" })
  templateId?: string;

  /**
   * Terms of payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "terms" })
  terms?: string;

  /**
   * Total amount of invoice, including tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  /**
   * Total tax amount applied to this invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_tax" })
  totalTax?: number;

  /**
   * Invoice type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: InvoiceInvoiceTypeEnum;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;
}
