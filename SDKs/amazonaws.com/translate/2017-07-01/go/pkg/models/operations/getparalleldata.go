// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetParallelDataXAmzTargetEnum
type GetParallelDataXAmzTargetEnum string

const (
	GetParallelDataXAmzTargetEnumAwsShineFrontendService20170701GetParallelData GetParallelDataXAmzTargetEnum = "AWSShineFrontendService_20170701.GetParallelData"
)

func (e GetParallelDataXAmzTargetEnum) ToPointer() *GetParallelDataXAmzTargetEnum {
	return &e
}

func (e *GetParallelDataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSShineFrontendService_20170701.GetParallelData":
		*e = GetParallelDataXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetParallelDataXAmzTargetEnum: %v", v)
	}
}

type GetParallelDataRequest struct {
	GetParallelDataRequest shared.GetParallelDataRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             GetParallelDataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetParallelDataResponse struct {
	ContentType string
	// Success
	GetParallelDataResponse *shared.GetParallelDataResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
