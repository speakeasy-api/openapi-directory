"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountLimit:
    r"""Limits that are related to concurrency and storage. All file and storage sizes are in bytes."""
    
    code_size_unzipped: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CodeSizeUnzipped'), 'exclude': lambda f: f is None }})  
    code_size_zipped: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CodeSizeZipped'), 'exclude': lambda f: f is None }})  
    concurrent_executions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConcurrentExecutions'), 'exclude': lambda f: f is None }})  
    total_code_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalCodeSize'), 'exclude': lambda f: f is None }})  
    unreserved_concurrent_executions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnreservedConcurrentExecutions'), 'exclude': lambda f: f is None }})  
    