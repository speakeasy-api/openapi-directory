// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetNetworkApplianceSettingsRequest struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

// GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum - Client tracking method of a network
type GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum string

const (
	GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnumIPAddress              GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum = "IP address"
	GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnumMacAddress             GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum = "MAC address"
	GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnumUniqueClientIdentifier GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum = "Unique client identifier"
)

func (e GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum) ToPointer() *GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum {
	return &e
}

func (e *GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IP address":
		fallthrough
	case "MAC address":
		fallthrough
	case "Unique client identifier":
		*e = GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum: %v", v)
	}
}

// GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum - Deployment mode of a network
type GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum string

const (
	GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnumPassthrough GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum = "passthrough"
	GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnumRouted      GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum = "routed"
)

func (e GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum) ToPointer() *GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum {
	return &e
}

func (e *GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "passthrough":
		fallthrough
	case "routed":
		*e = GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum: %v", v)
	}
}

// GetNetworkApplianceSettings200ApplicationJSONDynamicDNS - Dynamic DNS settings for a network
type GetNetworkApplianceSettings200ApplicationJSONDynamicDNS struct {
	// Dynamic DNS enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Dynamic DNS url prefix. DDNS must be enabled to update
	Prefix *string `json:"prefix,omitempty"`
	// Dynamic DNS url. DDNS must be enabled to update
	URL *string `json:"url,omitempty"`
}

// GetNetworkApplianceSettings200ApplicationJSON - Successful operation
type GetNetworkApplianceSettings200ApplicationJSON struct {
	// Client tracking method of a network
	ClientTrackingMethod *GetNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum `json:"clientTrackingMethod,omitempty"`
	// Deployment mode of a network
	DeploymentMode *GetNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum `json:"deploymentMode,omitempty"`
	// Dynamic DNS settings for a network
	DynamicDNS *GetNetworkApplianceSettings200ApplicationJSONDynamicDNS `json:"dynamicDns,omitempty"`
}

type GetNetworkApplianceSettingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkApplianceSettings200ApplicationJSONObject *GetNetworkApplianceSettings200ApplicationJSON
}
