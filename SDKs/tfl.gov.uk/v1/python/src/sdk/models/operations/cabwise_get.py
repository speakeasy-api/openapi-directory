"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class CabwiseGetRequest:
    
    lat: float = dataclasses.field(metadata={'query_param': { 'field_name': 'lat', 'style': 'form', 'explode': True }})
    r"""Latitude"""  
    lon: float = dataclasses.field(metadata={'query_param': { 'field_name': 'lon', 'style': 'form', 'explode': True }})
    r"""Longitude"""  
    force_xml: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'forceXml', 'style': 'form', 'explode': True }})
    r"""Force Xml"""  
    legacy_format: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'legacyFormat', 'style': 'form', 'explode': True }})
    r"""Legacy Format"""  
    max_results: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxResults', 'style': 'form', 'explode': True }})
    r"""An optional parameter to limit the number of results return. Default and maximum is 20."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""Trading name of operating company"""  
    optype: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'optype', 'style': 'form', 'explode': True }})
    r"""Operator Type e.g Minicab, Executive, Limousine"""  
    radius: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'radius', 'style': 'form', 'explode': True }})
    r"""The radius of the bounding circle in metres"""  
    twenty_four_seven_only: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'twentyFourSevenOnly', 'style': 'form', 'explode': True }})
    r"""Twenty Four Seven Only"""  
    wc: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'wc', 'style': 'form', 'explode': True }})
    r"""Wheelchair accessible"""  
    

@dataclasses.dataclass
class CabwiseGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    system_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""OK"""  
    