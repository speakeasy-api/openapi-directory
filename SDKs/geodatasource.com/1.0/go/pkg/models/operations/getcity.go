// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetCityFormatEnum
type GetCityFormatEnum string

const (
	GetCityFormatEnumJSON GetCityFormatEnum = "json"
	GetCityFormatEnumXML  GetCityFormatEnum = "xml"
)

func (e GetCityFormatEnum) ToPointer() *GetCityFormatEnum {
	return &e
}

func (e *GetCityFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = GetCityFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCityFormatEnum: %v", v)
	}
}

type GetCityRequest struct {
	Format *GetCityFormatEnum `queryParam:"style=form,explode=true,name=format"`
	Key    string             `queryParam:"style=form,explode=true,name=key"`
	Lat    float64            `queryParam:"style=form,explode=true,name=lat"`
	Lng    float64            `queryParam:"style=form,explode=true,name=lng"`
}

type GetCityResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Get response from longitude latitude lookup
	GetCity200ApplicationJSONString *string
}
