// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CommitComparisonStatusEnum string

const (
	CommitComparisonStatusEnumDiverged  CommitComparisonStatusEnum = "diverged"
	CommitComparisonStatusEnumAhead     CommitComparisonStatusEnum = "ahead"
	CommitComparisonStatusEnumBehind    CommitComparisonStatusEnum = "behind"
	CommitComparisonStatusEnumIdentical CommitComparisonStatusEnum = "identical"
)

func (e CommitComparisonStatusEnum) ToPointer() *CommitComparisonStatusEnum {
	return &e
}

func (e *CommitComparisonStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "diverged":
		fallthrough
	case "ahead":
		fallthrough
	case "behind":
		fallthrough
	case "identical":
		*e = CommitComparisonStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CommitComparisonStatusEnum: %v", v)
	}
}

// CommitComparison - Commit Comparison
type CommitComparison struct {
	AheadBy int64 `json:"ahead_by"`
	// Commit
	BaseCommit Commit      `json:"base_commit"`
	BehindBy   int64       `json:"behind_by"`
	Commits    []Commit    `json:"commits"`
	DiffURL    string      `json:"diff_url"`
	Files      []DiffEntry `json:"files,omitempty"`
	HTMLURL    string      `json:"html_url"`
	// Commit
	MergeBaseCommit Commit                     `json:"merge_base_commit"`
	PatchURL        string                     `json:"patch_url"`
	PermalinkURL    string                     `json:"permalink_url"`
	Status          CommitComparisonStatusEnum `json:"status"`
	TotalCommits    int64                      `json:"total_commits"`
	URL             string                     `json:"url"`
}
