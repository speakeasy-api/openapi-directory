<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * APIBillingPeriodUsageOut - The current billing period.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class APIBillingPeriodUsageOut
{
    /**
     * User API Key.
     * 
     * @var ?string $apiKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('apiKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiKey = null;
    
    /**
     * Current period billing status ex OPEN.
     * 
     * @var ?string $billingStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $billingStatus = null;
    
    /**
     * Current period hard limit (reaching the limit sends an email notification and blocks the API Key).
     * 
     * @var ?int $hardLimit
     */
	#[\JMS\Serializer\Annotation\SerializedName('hardLimit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hardLimit = null;
    
    /**
     * Datetime when the the plan's current period endend.
     * 
     * @var ?int $periodEnded
     */
	#[\JMS\Serializer\Annotation\SerializedName('periodEnded')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $periodEnded = null;
    
    /**
     * Datetime when the the plan's current period started.
     * 
     * @var ?int $periodStarted
     */
	#[\JMS\Serializer\Annotation\SerializedName('periodStarted')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $periodStarted = null;
    
    /**
     * Current period soft limit (reaching the limit sends an email notification).
     * 
     * @var ?int $softLimit
     */
	#[\JMS\Serializer\Annotation\SerializedName('softLimit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $softLimit = null;
    
    /**
     * Datetime when the the plan's current period endend (in Stripe). Internal and Stripe periodicity should ~coincide.
     * 
     * @var ?int $stripeCurrentPeriodEnd
     */
	#[\JMS\Serializer\Annotation\SerializedName('stripeCurrentPeriodEnd')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stripeCurrentPeriodEnd = null;
    
    /**
     * Datetime when the the plan's current period started (in Stripe). Internal and Stripe periodicity should ~coincide.
     * 
     * @var ?int $stripeCurrentPeriodStart
     */
	#[\JMS\Serializer\Annotation\SerializedName('stripeCurrentPeriodStart')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stripeCurrentPeriodStart = null;
    
    /**
     * Datetime when the user subscribed to the plan.
     * 
     * @var ?int $subscriptionStarted
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriptionStarted')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subscriptionStarted = null;
    
    /**
     * Current period usage in units (NB some API endpoints use more than one unit).
     * 
     * @var ?int $usage
     */
	#[\JMS\Serializer\Annotation\SerializedName('usage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $usage = null;
    
	public function __construct()
	{
		$this->apiKey = null;
		$this->billingStatus = null;
		$this->hardLimit = null;
		$this->periodEnded = null;
		$this->periodStarted = null;
		$this->softLimit = null;
		$this->stripeCurrentPeriodEnd = null;
		$this->stripeCurrentPeriodStart = null;
		$this->subscriptionStarted = null;
		$this->usage = null;
	}
}
