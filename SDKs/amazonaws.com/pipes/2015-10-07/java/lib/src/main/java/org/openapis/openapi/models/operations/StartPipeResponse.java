/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class StartPipeResponse {
    /**
     * ConflictException
     */
    
    public Object conflictException;

    public StartPipeResponse withConflictException(Object conflictException) {
        this.conflictException = conflictException;
        return this;
    }
    
    
    public String contentType;

    public StartPipeResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InternalException
     */
    
    public Object internalException;

    public StartPipeResponse withInternalException(Object internalException) {
        this.internalException = internalException;
        return this;
    }
    
    /**
     * NotFoundException
     */
    
    public Object notFoundException;

    public StartPipeResponse withNotFoundException(Object notFoundException) {
        this.notFoundException = notFoundException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.StartPipeResponse startPipeResponse;

    public StartPipeResponse withStartPipeResponse(org.openapis.openapi.models.shared.StartPipeResponse startPipeResponse) {
        this.startPipeResponse = startPipeResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public StartPipeResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public StartPipeResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ThrottlingException
     */
    
    public Object throttlingException;

    public StartPipeResponse withThrottlingException(Object throttlingException) {
        this.throttlingException = throttlingException;
        return this;
    }
    
    /**
     * ValidationException
     */
    
    public Object validationException;

    public StartPipeResponse withValidationException(Object validationException) {
        this.validationException = validationException;
        return this;
    }
    
    public StartPipeResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
