// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SendableDocumentDocumentTypeEnum - The type of document to be sent.
type SendableDocumentDocumentTypeEnum string

const (
	SendableDocumentDocumentTypeEnumInvoice         SendableDocumentDocumentTypeEnum = "invoice"
	SendableDocumentDocumentTypeEnumInvoiceResponse SendableDocumentDocumentTypeEnum = "invoice_response"
)

func (e *SendableDocumentDocumentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invoice":
		fallthrough
	case "invoice_response":
		*e = SendableDocumentDocumentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SendableDocumentDocumentTypeEnum: %s", s)
	}
}

// SendableDocument - The document to send.
type SendableDocument struct {
	// The type of document to be sent.
	DocumentType SendableDocumentDocumentTypeEnum `json:"documentType"`
	// The invoice to send.  Provide either invoice, or invoiceData, but not both.
	Invoice *Invoice `json:"invoice,omitempty"`
	// The invoice response to send.
	InvoiceResponse *DocumentInvoiceResponse `json:"invoiceResponse,omitempty"`
	// A document to send, in base64 encoded format.
	RawDocumentData *RawDocumentData `json:"rawDocumentData,omitempty"`
}
