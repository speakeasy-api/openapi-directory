<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ScoreRevisionCreation - A new created revision
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ScoreRevisionCreation
{
    /**
     * Must be set to `true` if the revision was created automatically.
     * 
     * 
     * 
     * @var ?bool $autosave
     */
	#[\JMS\Serializer\Annotation\SerializedName('autosave')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autosave = null;
    
    /**
     * The data of the score file. It must be a MusicXML 3 file (`vnd.recordare.musicxml` or `vnd.recordare.musicxml+xml`), a MIDI file (`audio/midi`) or a Flat.json (aka Adagio.json) file.
     * 
     * Binary payloads (`vnd.recordare.musicxml` and `audio/midi`) can be encoded in Base64, in this case the `dataEncoding` property must match the encoding used for the API request.
     * 
     * 
     * @var string $data
     */
	#[\JMS\Serializer\Annotation\SerializedName('data')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $data;
    
    /**
     * The optional encoding of the score data. This property must match the encoding used for the `data` property.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ScoreRevisionCreationDataEncodingEnum $dataEncoding
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataEncoding')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ScoreRevisionCreationDataEncodingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScoreRevisionCreationDataEncodingEnum $dataEncoding = null;
    
    /**
     * A description associated to the revision
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	public function __construct()
	{
		$this->autosave = null;
		$this->data = "";
		$this->dataEncoding = null;
		$this->description = null;
	}
}
