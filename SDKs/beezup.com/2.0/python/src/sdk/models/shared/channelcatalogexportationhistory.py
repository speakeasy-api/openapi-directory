"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import beezup_common_paginationresult as shared_beezup_common_paginationresult
from ..shared import channelcatalogexportationhistorylinks as shared_channelcatalogexportationhistorylinks
from ..shared import channelcatalogexportationreporting as shared_channelcatalogexportationreporting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelCatalogExportationHistory:
    r"""Channel catalog exportation history"""
    
    exportations: list[shared_channelcatalogexportationreporting.ChannelCatalogExportationReporting] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exportations') }})  
    links: shared_channelcatalogexportationhistorylinks.ChannelCatalogExportationHistoryLinks = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links') }})  
    pagination_result: Optional[shared_beezup_common_paginationresult.BeezUPCommonPaginationResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paginationResult'), 'exclude': lambda f: f is None }})  
    