/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JwtLocation - Specifies a location to extract JWT from an API request.
 */
public class JwtLocation {
    /**
     * Specifies cookie name to extract JWT token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cookie")
    public String cookie;
    public JwtLocation withCookie(String cookie) {
        this.cookie = cookie;
        return this;
    }
    
    /**
     * Specifies HTTP header name to extract JWT token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("header")
    public String header;
    public JwtLocation withHeader(String header) {
        this.header = header;
        return this;
    }
    
    /**
     * Specifies URL query parameter name to extract JWT token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query")
    public String query;
    public JwtLocation withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * The value prefix. The value format is "value_prefix{token}" Only applies to "in" header type. Must be empty for "in" query type. If not empty, the header value has to match (case sensitive) this prefix. If not matched, JWT will not be extracted. If matched, JWT will be extracted after the prefix is removed. For example, for "Authorization: Bearer {JWT}", value_prefix="Bearer " with a space at the end.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("valuePrefix")
    public String valuePrefix;
    public JwtLocation withValuePrefix(String valuePrefix) {
        this.valuePrefix = valuePrefix;
        return this;
    }
    
}
