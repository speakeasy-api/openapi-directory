/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountReference16CH } from "./accountreference16ch";
import { Amount } from "./amount";
import { PurposeCodeEnum } from "./purposecodeenum";
import { RemittanceInformationStructured } from "./remittanceinformationstructured";
import { ReportExchangeRate } from "./reportexchangerate";
import { Expose, Type } from "class-transformer";

export class EntryDetailsElement extends SpeakeasyBase {
  /**
   * Identification of a Cheque.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "checkId" })
  checkId?: string;

  /**
   * Reference to an account by either
   *
   * @remarks
   *   * IBAN, of a payment accounts, or
   *   * otherAccountIdentification, for payment accounts if there is no IBAN
   * adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creditorAccount" })
  @Type(() => AccountReference16CH)
  creditorAccount?: AccountReference16CH;

  /**
   * BICFI
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creditorAgent" })
  creditorAgent?: string;

  /**
   * Identification of Creditors, e.g. a SEPA Creditor ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creditorId" })
  creditorId?: string;

  /**
   * Creditor name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creditorName" })
  creditorName?: string;

  /**
   * Array of exchange rates.
   */
  @SpeakeasyMetadata({ elemType: ReportExchangeRate })
  @Expose({ name: "currencyExchange" })
  @Type(() => ReportExchangeRate)
  currencyExchange?: ReportExchangeRate[];

  /**
   * Reference to an account by either
   *
   * @remarks
   *   * IBAN, of a payment accounts, or
   *   * otherAccountIdentification, for payment accounts if there is no IBAN
   * adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debtorAccount" })
  @Type(() => AccountReference16CH)
  debtorAccount?: AccountReference16CH;

  /**
   * BICFI
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debtorAgent" })
  debtorAgent?: string;

  /**
   * Debtor name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debtorName" })
  debtorName?: string;

  /**
   * Unique end to end identity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endToEndId" })
  endToEndId?: string;

  /**
   * Identification of Mandates, e.g. a SEPA Mandate ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mandateId" })
  mandateId?: string;

  /**
   * ExternalPurpose1Code from ISO 20022.
   *
   * @remarks
   *
   * Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purposeCode" })
  purposeCode?: PurposeCodeEnum;

  /**
   * Structured remittance information.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remittanceInformationStructured" })
  @Type(() => RemittanceInformationStructured)
  remittanceInformationStructured?: RemittanceInformationStructured;

  /**
   * Array of structured remittance information.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: RemittanceInformationStructured })
  @Expose({ name: "remittanceInformationStructuredArray" })
  @Type(() => RemittanceInformationStructured)
  remittanceInformationStructuredArray?: RemittanceInformationStructured[];

  /**
   * Unstructured remittance information.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remittanceInformationUnstructured" })
  remittanceInformationUnstructured?: string;

  /**
   * Array of unstructured remittance information.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remittanceInformationUnstructuredArray" })
  remittanceInformationUnstructuredArray?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "transactionAmount" })
  @Type(() => Amount)
  transactionAmount: Amount;

  /**
   * Ultimate creditor.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ultimateCreditor" })
  ultimateCreditor?: string;

  /**
   * Ultimate debtor.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ultimateDebtor" })
  ultimateDebtor?: string;
}
