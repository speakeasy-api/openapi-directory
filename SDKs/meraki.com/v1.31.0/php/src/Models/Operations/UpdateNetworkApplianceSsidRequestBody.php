<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateNetworkApplianceSsidRequestBody
{
    /**
     * The association control method for the SSID ('open', 'psk', '8021x-meraki' or '8021x-radius').
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyAuthModeEnum $authMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('authMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyAuthModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkApplianceSsidRequestBodyAuthModeEnum $authMode = null;
    
    /**
     * The VLAN ID of the VLAN associated to this SSID. This parameter is only valid if the network is in routed mode.
     * 
     * @var ?int $defaultVlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultVlanId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $defaultVlanId = null;
    
    /**
     * DHCP Enforced Deauthentication enables the disassociation of wireless clients in addition to Mandatory DHCP. This param is only valid on firmware versions >= MX 17.0 where the associated LAN has Mandatory DHCP Enabled 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyDhcpEnforcedDeauthentication $dhcpEnforcedDeauthentication
     */
	#[\JMS\Serializer\Annotation\SerializedName('dhcpEnforcedDeauthentication')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyDhcpEnforcedDeauthentication')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkApplianceSsidRequestBodyDhcpEnforcedDeauthentication $dhcpEnforcedDeauthentication = null;
    
    /**
     * Whether or not the SSID is enabled.
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyEncryptionModeEnum $encryptionMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptionMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyEncryptionModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkApplianceSsidRequestBodyEncryptionModeEnum $encryptionMode = null;
    
    /**
     * The name of the SSID.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The passkey for the SSID. This param is only valid if the authMode is 'psk'.
     * 
     * @var ?string $psk
     */
	#[\JMS\Serializer\Annotation\SerializedName('psk')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $psk = null;
    
    /**
     * The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is '8021x-radius'.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyRadiusServers> $radiusServers
     */
	#[\JMS\Serializer\Annotation\SerializedName('radiusServers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyRadiusServers>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $radiusServers = null;
    
    /**
     * Boolean indicating whether the MX should advertise or hide this SSID.
     * 
     * @var ?bool $visible
     */
	#[\JMS\Serializer\Annotation\SerializedName('visible')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $visible = null;
    
    /**
     * The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only', 'WPA3 Transition Mode' or 'WPA3 only'). This param is only valid if (1) the authMode is 'psk' & the encryptionMode is 'wpa' OR (2) the authMode is '8021x-meraki' OR (3) the authMode is '8021x-radius'
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyWpaEncryptionModeEnum $wpaEncryptionMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('wpaEncryptionMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkApplianceSsidRequestBodyWpaEncryptionModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkApplianceSsidRequestBodyWpaEncryptionModeEnum $wpaEncryptionMode = null;
    
	public function __construct()
	{
		$this->authMode = null;
		$this->defaultVlanId = null;
		$this->dhcpEnforcedDeauthentication = null;
		$this->enabled = null;
		$this->encryptionMode = null;
		$this->name = null;
		$this->psk = null;
		$this->radiusServers = null;
		$this->visible = null;
		$this->wpaEncryptionMode = null;
	}
}
