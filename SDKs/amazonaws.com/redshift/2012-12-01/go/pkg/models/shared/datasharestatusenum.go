// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataShareStatusEnum string

const (
	DataShareStatusEnumActive               DataShareStatusEnum = "ACTIVE"
	DataShareStatusEnumPendingAuthorization DataShareStatusEnum = "PENDING_AUTHORIZATION"
	DataShareStatusEnumAuthorized           DataShareStatusEnum = "AUTHORIZED"
	DataShareStatusEnumDeauthorized         DataShareStatusEnum = "DEAUTHORIZED"
	DataShareStatusEnumRejected             DataShareStatusEnum = "REJECTED"
	DataShareStatusEnumAvailable            DataShareStatusEnum = "AVAILABLE"
)

func (e DataShareStatusEnum) ToPointer() *DataShareStatusEnum {
	return &e
}

func (e *DataShareStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "PENDING_AUTHORIZATION":
		fallthrough
	case "AUTHORIZED":
		fallthrough
	case "DEAUTHORIZED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "AVAILABLE":
		*e = DataShareStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataShareStatusEnum: %v", v)
	}
}
