"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrdersCustomBatchRequestEntryRejectReturnLineItem:
    
    line_item_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lineItemId'), 'exclude': lambda f: f is None }})
    r"""The ID of the line item to return. Either lineItemId or productId is required."""  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productId'), 'exclude': lambda f: f is None }})
    r"""The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."""  
    quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity'), 'exclude': lambda f: f is None }})
    r"""The quantity to return and refund."""  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""The reason for the return. Acceptable values are: - \\"`damagedOrUsed`\\" - \\"`missingComponent`\\" - \\"`notEligible`\\" - \\"`other`\\" - \\"`outOfReturnWindow`\\" """  
    reason_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reasonText'), 'exclude': lambda f: f is None }})
    r"""The explanation of the reason."""  
    