// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PermissionEnum string

const (
	PermissionEnumAll                PermissionEnum = "ALL"
	PermissionEnumSelect             PermissionEnum = "SELECT"
	PermissionEnumAlter              PermissionEnum = "ALTER"
	PermissionEnumDrop               PermissionEnum = "DROP"
	PermissionEnumDelete             PermissionEnum = "DELETE"
	PermissionEnumInsert             PermissionEnum = "INSERT"
	PermissionEnumDescribe           PermissionEnum = "DESCRIBE"
	PermissionEnumCreateDatabase     PermissionEnum = "CREATE_DATABASE"
	PermissionEnumCreateTable        PermissionEnum = "CREATE_TABLE"
	PermissionEnumDataLocationAccess PermissionEnum = "DATA_LOCATION_ACCESS"
	PermissionEnumCreateTag          PermissionEnum = "CREATE_TAG"
	PermissionEnumAssociate          PermissionEnum = "ASSOCIATE"
)

func (e *PermissionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALL":
		fallthrough
	case "SELECT":
		fallthrough
	case "ALTER":
		fallthrough
	case "DROP":
		fallthrough
	case "DELETE":
		fallthrough
	case "INSERT":
		fallthrough
	case "DESCRIBE":
		fallthrough
	case "CREATE_DATABASE":
		fallthrough
	case "CREATE_TABLE":
		fallthrough
	case "DATA_LOCATION_ACCESS":
		fallthrough
	case "CREATE_TAG":
		fallthrough
	case "ASSOCIATE":
		*e = PermissionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PermissionEnum: %s", s)
	}
}
