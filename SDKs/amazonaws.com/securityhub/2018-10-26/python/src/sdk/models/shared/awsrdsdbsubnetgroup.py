"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsrdsdbsubnetgroupsubnet as shared_awsrdsdbsubnetgroupsubnet
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsRdsDbSubnetGroup:
    r"""Information about the subnet group for the database instance."""
    
    db_subnet_group_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DbSubnetGroupArn'), 'exclude': lambda f: f is None }})  
    db_subnet_group_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DbSubnetGroupDescription'), 'exclude': lambda f: f is None }})  
    db_subnet_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DbSubnetGroupName'), 'exclude': lambda f: f is None }})  
    subnet_group_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubnetGroupStatus'), 'exclude': lambda f: f is None }})  
    subnets: Optional[list[shared_awsrdsdbsubnetgroupsubnet.AwsRdsDbSubnetGroupSubnet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Subnets'), 'exclude': lambda f: f is None }})  
    vpc_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcId'), 'exclude': lambda f: f is None }})  
    