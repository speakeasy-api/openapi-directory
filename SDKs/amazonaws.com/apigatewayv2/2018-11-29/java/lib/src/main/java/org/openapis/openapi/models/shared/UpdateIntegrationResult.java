/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateIntegrationResult - Success
 */
public class UpdateIntegrationResult {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApiGatewayManaged")
    public Boolean apiGatewayManaged;
    public UpdateIntegrationResult withApiGatewayManaged(Boolean apiGatewayManaged) {
        this.apiGatewayManaged = apiGatewayManaged;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConnectionId")
    public String connectionId;
    public UpdateIntegrationResult withConnectionId(String connectionId) {
        this.connectionId = connectionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConnectionType")
    public UpdateIntegrationResultConnectionTypeEnum connectionType;
    public UpdateIntegrationResult withConnectionType(UpdateIntegrationResultConnectionTypeEnum connectionType) {
        this.connectionType = connectionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ContentHandlingStrategy")
    public UpdateIntegrationResultContentHandlingStrategyEnum contentHandlingStrategy;
    public UpdateIntegrationResult withContentHandlingStrategy(UpdateIntegrationResultContentHandlingStrategyEnum contentHandlingStrategy) {
        this.contentHandlingStrategy = contentHandlingStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CredentialsArn")
    public String credentialsArn;
    public UpdateIntegrationResult withCredentialsArn(String credentialsArn) {
        this.credentialsArn = credentialsArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public UpdateIntegrationResult withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId")
    public String integrationId;
    public UpdateIntegrationResult withIntegrationId(String integrationId) {
        this.integrationId = integrationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationMethod")
    public String integrationMethod;
    public UpdateIntegrationResult withIntegrationMethod(String integrationMethod) {
        this.integrationMethod = integrationMethod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationResponseSelectionExpression")
    public String integrationResponseSelectionExpression;
    public UpdateIntegrationResult withIntegrationResponseSelectionExpression(String integrationResponseSelectionExpression) {
        this.integrationResponseSelectionExpression = integrationResponseSelectionExpression;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationSubtype")
    public String integrationSubtype;
    public UpdateIntegrationResult withIntegrationSubtype(String integrationSubtype) {
        this.integrationSubtype = integrationSubtype;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationType")
    public UpdateIntegrationResultIntegrationTypeEnum integrationType;
    public UpdateIntegrationResult withIntegrationType(UpdateIntegrationResultIntegrationTypeEnum integrationType) {
        this.integrationType = integrationType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationUri")
    public String integrationUri;
    public UpdateIntegrationResult withIntegrationUri(String integrationUri) {
        this.integrationUri = integrationUri;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassthroughBehavior")
    public UpdateIntegrationResultPassthroughBehaviorEnum passthroughBehavior;
    public UpdateIntegrationResult withPassthroughBehavior(UpdateIntegrationResultPassthroughBehaviorEnum passthroughBehavior) {
        this.passthroughBehavior = passthroughBehavior;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PayloadFormatVersion")
    public String payloadFormatVersion;
    public UpdateIntegrationResult withPayloadFormatVersion(String payloadFormatVersion) {
        this.payloadFormatVersion = payloadFormatVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequestParameters")
    public java.util.Map<String, String> requestParameters;
    public UpdateIntegrationResult withRequestParameters(java.util.Map<String, String> requestParameters) {
        this.requestParameters = requestParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequestTemplates")
    public java.util.Map<String, String> requestTemplates;
    public UpdateIntegrationResult withRequestTemplates(java.util.Map<String, String> requestTemplates) {
        this.requestTemplates = requestTemplates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResponseParameters")
    public java.util.Map<String, java.util.Map<String, String>> responseParameters;
    public UpdateIntegrationResult withResponseParameters(java.util.Map<String, java.util.Map<String, String>> responseParameters) {
        this.responseParameters = responseParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TemplateSelectionExpression")
    public String templateSelectionExpression;
    public UpdateIntegrationResult withTemplateSelectionExpression(String templateSelectionExpression) {
        this.templateSelectionExpression = templateSelectionExpression;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeoutInMillis")
    public Long timeoutInMillis;
    public UpdateIntegrationResult withTimeoutInMillis(Long timeoutInMillis) {
        this.timeoutInMillis = timeoutInMillis;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TlsConfig")
    public UpdateIntegrationResultTlsConfig tlsConfig;
    public UpdateIntegrationResult withTlsConfig(UpdateIntegrationResultTlsConfig tlsConfig) {
        this.tlsConfig = tlsConfig;
        return this;
    }
    
}
