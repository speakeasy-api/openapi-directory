/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NADashboardData } from "./nadashboarddata";
import { NAPlace } from "./naplace";
import { Expose, Type } from "class-transformer";

export class NAHealthyHomeCoach extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cipher_id" })
  cipherId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "co2_calibrating" })
  co2Calibrating?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "dashboard_data" })
  @Type(() => NADashboardData)
  dashboardData?: NADashboardData;

  @SpeakeasyMetadata()
  @Expose({ name: "data_type" })
  dataType?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "date_setup" })
  dateSetup?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_setup" })
  lastSetup?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_status_store" })
  lastStatusStore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_upgrade" })
  lastUpgrade?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "place" })
  @Type(() => NAPlace)
  place?: NAPlace;

  /**
   * Included in every device or module. It defines the type of the device/module. Its values are among :
   *
   * @remarks
   * NHC: Healthy Home Coach
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * It contains the current wifi status. The different thresholds to take into account are
   *
   * @remarks
   * RSSI_THRESHOLD_0 = 86 bad signal
   * RSSI_THRESHOLD_1 = 71 middle quality signal
   * RSSI_THRESHOLD_2 = 56 good signal
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wifi_status" })
  wifiStatus?: number;
}
