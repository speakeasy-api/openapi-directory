/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IngredientObjectItemsPortions - An object containing information on a specific food portion found in this item
 */
public class IngredientObjectItemsPortions {
    /**
     * The number of observations on which the measure is based
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_points")
    public Long dataPoints;
    public IngredientObjectItemsPortions withDataPoints(Long dataPoints) {
        this.dataPoints = dataPoints;
        return this;
    }
    
    /**
     * Comments that provide more specificity on the measure. For example, for a pizza measure the dissemination text might be 1 slice is 1/8th of a 14 inch pizza.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public IngredientObjectItemsPortions withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Comments on any unusual aspects of the measure. Examples might includes caveats on the usage of a measure, or reasons why a measure gram weight is an unexpected value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("footnote")
    public String footnote;
    public IngredientObjectItemsPortions withFootnote(String footnote) {
        this.footnote = footnote;
        return this;
    }
    
    /**
     * The weight of the measure in grams
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gram_weight")
    public Double gramWeight;
    public IngredientObjectItemsPortions withGramWeight(Double gramWeight) {
        this.gramWeight = gramWeight;
        return this;
    }
    
    /**
     * The unit used for measure (e.g. if mesure is 3 tsp, the unit is tsp)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measurement_unit")
    public String measurementUnit;
    public IngredientObjectItemsPortions withMeasurementUnit(String measurementUnit) {
        this.measurementUnit = measurementUnit;
        return this;
    }
    
    /**
     * Qualifier of the measure (e.g. related to food shape or form) (e.g. melted, crushed, diced)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifier")
    public String modifier;
    public IngredientObjectItemsPortions withModifier(String modifier) {
        this.modifier = modifier;
        return this;
    }
    
}
