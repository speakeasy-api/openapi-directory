/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GETListsDateListJsonSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=api-key",
  })
  apiKey: string;
}

/**
 * The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type.
 */
export enum GETListsDateListJsonSortOrderEnum {
  Asc = "ASC",
  Desc = "DESC",
}

export class GETListsDateListJsonRequest extends SpeakeasyBase {
  /**
   * YYYY-MM-DD
   *
   * @remarks
   *
   * The week-ending date for the sales reflected on list-name. Times best-seller lists are compiled using available book sale data. The bestsellers-date may be significantly earlier than published-date. For additional information, see the explanation at the bottom of any best-seller list page on NYTimes.com (example: Hardcover Fiction, published Dec. 5 but reflecting sales to Nov. 29).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=bestsellers-date",
  })
  bestsellersDate?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=date",
  })
  date: string;

  /**
   * International Standard Book Number, 10 or 13 digits
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=isbn" })
  isbn?: number;

  /**
   * Name of the Best Sellers List. You can get the full list from /lists/names.json
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=list",
  })
  list: string;

  /**
   * The name of the Times best-seller list. To get valid values, use a list names request.
   *
   * @remarks
   *
   * Be sure to replace spaces with hyphens (e.g., e-book-fiction or hardcover-fiction, not E-Book Fiction or Hardcover Fiction). (The parameter is not case sensitive.)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=list-name",
  })
  listName?: string;

  /**
   * Sets the starting point of the result set
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * YYYY-MM-DD
   *
   * @remarks
   *
   * The date the best-seller list was published on NYTimes.com (compare bestsellers-date)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=published-date;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  publishedDate?: Date;

  /**
   * The rank of the best seller on list-name as of bestsellers-date
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=rank" })
  rank?: string;

  /**
   * The rank of the best seller on list-name one week prior to bestsellers-date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=rank-last-week",
  })
  rankLastWeek?: number;

  /**
   * The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort-order",
  })
  sortOrder?: GETListsDateListJsonSortOrderEnum;

  /**
   * The number of weeks that the best seller has been on list-name, as of bestsellers-date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=weeks-on-list",
  })
  weeksOnList?: number;
}

export class GETListsDateListJson200ApplicationJSONResultsBooksIsbns extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "isbn10" })
  isbn10?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isbn13" })
  isbn13?: string;
}

export class GETListsDateListJson200ApplicationJSONResultsBooks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "age_group" })
  ageGroup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "amazon_product_url" })
  amazonProductUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "article_chapter_link" })
  articleChapterLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "asterisk" })
  asterisk?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  author?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "book_image" })
  bookImage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "book_review_link" })
  bookReviewLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor" })
  contributor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contributor_note" })
  contributorNote?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dagger" })
  dagger?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "first_chapter_link" })
  firstChapterLink?: string;

  @SpeakeasyMetadata({
    elemType: GETListsDateListJson200ApplicationJSONResultsBooksIsbns,
  })
  @Expose({ name: "isbns" })
  @Type(() => GETListsDateListJson200ApplicationJSONResultsBooksIsbns)
  isbns?: GETListsDateListJson200ApplicationJSONResultsBooksIsbns[];

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_isbn10" })
  primaryIsbn10?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_isbn13" })
  primaryIsbn13?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publisher" })
  publisher?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rank" })
  rank?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "rank_last_week" })
  rankLastWeek?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sunday_review_link" })
  sundayReviewLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "weeks_on_list" })
  weeksOnList?: number;
}

export class GETListsDateListJson200ApplicationJSONResults extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bestsellers_date" })
  bestsellersDate?: string;

  @SpeakeasyMetadata({
    elemType: GETListsDateListJson200ApplicationJSONResultsBooks,
  })
  @Expose({ name: "books" })
  @Type(() => GETListsDateListJson200ApplicationJSONResultsBooks)
  books?: GETListsDateListJson200ApplicationJSONResultsBooks[];

  @SpeakeasyMetadata()
  @Expose({ name: "corrections" })
  corrections?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "list_name" })
  listName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "normal_list_ends_at" })
  normalListEndsAt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "published_date" })
  publishedDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  updated?: string;
}

export class GETListsDateListJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_modified" })
  lastModified?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "num_results" })
  numResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "results" })
  @Type(() => GETListsDateListJson200ApplicationJSONResults)
  results?: GETListsDateListJson200ApplicationJSONResults;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class GETListsDateListJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  getListsDateListJSON200ApplicationJSONObject?: GETListsDateListJson200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
