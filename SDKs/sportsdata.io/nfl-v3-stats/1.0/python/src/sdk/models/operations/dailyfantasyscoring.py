"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import dailyfantasyscoring as shared_dailyfantasyscoring
from enum import Enum
from typing import Optional

class DailyFantasyScoringFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""
    XML = 'XML'
    JSON = 'JSON'


@dataclasses.dataclass
class DailyFantasyScoringRequest:
    
    date_: str = dataclasses.field(metadata={'path_param': { 'field_name': 'date', 'style': 'simple', 'explode': False }})
    r"""The date of the contest for which you're pulling players
              <code>2014-SEP-21</code>,
              <code>2014-NOV-15</code>, etc
    """  
    format: DailyFantasyScoringFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""  
    

@dataclasses.dataclass
class DailyFantasyScoringResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    daily_fantasy_scorings: Optional[list[shared_dailyfantasyscoring.DailyFantasyScoring]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    