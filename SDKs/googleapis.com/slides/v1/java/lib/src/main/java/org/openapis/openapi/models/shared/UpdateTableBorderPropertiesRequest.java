/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateTableBorderPropertiesRequest - Updates the properties of the table borders in a Table.
 */
public class UpdateTableBorderPropertiesRequest {
    /**
     * The border position in the table range the updates should apply to. If a border position is not specified, the updates will apply to all borders in the table range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("borderPosition")
    public UpdateTableBorderPropertiesRequestBorderPositionEnum borderPosition;

    public UpdateTableBorderPropertiesRequest withBorderPosition(UpdateTableBorderPropertiesRequestBorderPositionEnum borderPosition) {
        this.borderPosition = borderPosition;
        return this;
    }
    
    /**
     * The fields that should be updated. At least one field must be specified. The root `tableBorderProperties` is implied and should not be specified. A single `"*"` can be used as short-hand for listing every field. For example to update the table border solid fill color, set `fields` to `"tableBorderFill.solidFill.color"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public String fields;

    public UpdateTableBorderPropertiesRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The object ID of the table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectId")
    public String objectId;

    public UpdateTableBorderPropertiesRequest withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * The border styling properties of the TableBorderCell.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableBorderProperties")
    public TableBorderProperties tableBorderProperties;

    public UpdateTableBorderPropertiesRequest withTableBorderProperties(TableBorderProperties tableBorderProperties) {
        this.tableBorderProperties = tableBorderProperties;
        return this;
    }
    
    /**
     * A table range represents a reference to a subset of a table. It's important to note that the cells specified by a table range do not necessarily form a rectangle. For example, let's say we have a 3 x 3 table where all the cells of the last row are merged together. The table looks like this: [ ] A table range with location = (0, 0), row span = 3 and column span = 2 specifies the following cells: x x [ x x x ]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableRange")
    public TableRange tableRange;

    public UpdateTableBorderPropertiesRequest withTableRange(TableRange tableRange) {
        this.tableRange = tableRange;
        return this;
    }
    
    public UpdateTableBorderPropertiesRequest(){}
}
