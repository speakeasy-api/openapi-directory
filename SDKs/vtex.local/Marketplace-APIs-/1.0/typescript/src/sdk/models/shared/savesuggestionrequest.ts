/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Image } from "./image";
import { ProductSpecification } from "./productspecification";
import { SkuSpecification } from "./skuspecification";
import { Expose, Type } from "class-transformer";

export class SaveSuggestionRequestPricing extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Currency" })
  currency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrencySymbol" })
  currencySymbol?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SalePrice" })
  salePrice?: number;
}

export class SaveSuggestionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AvailableQuantity" })
  availableQuantity: number;

  /**
   * Name of the brand to which this SKU belongs. It must match the brand created in the marketplace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BrandName" })
  brandName: string;

  /**
   * Full path to the SKU's category. It should be written as {department}/{category}. For example: if the department is **Appliances** and the category is **Oven**, the full path should be 'Appliances/Oven'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CategoryFullPath" })
  categoryFullPath: string;

  /**
   * SKU reference code. Mandatory if the RefId is not informed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EAN" })
  ean: string;

  /**
   * Height of the SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Height" })
  height: number;

  /**
   * Array containing the URLs and names the SKU images.
   */
  @SpeakeasyMetadata({ elemType: Image })
  @Expose({ name: "Images" })
  @Type(() => Image)
  images: Image[];

  /**
   * Length of the SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Length" })
  length: number;

  /**
   * Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value `un`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MeasurementUnit" })
  measurementUnit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Pricing" })
  @Type(() => SaveSuggestionRequestPricing)
  pricing: SaveSuggestionRequestPricing;

  /**
   * Product Description containing the main information about the product (not the SKU).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductDescription" })
  productDescription: string;

  /**
   * Product ID in seller's account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId: string;

  /**
   * Name of the suggested product. This field has a limit of 150 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductName" })
  productName: string;

  /**
   * Array containing the names and values of the product specifications.
   */
  @SpeakeasyMetadata({ elemType: ProductSpecification })
  @Expose({ name: "ProductSpecifications" })
  @Type(() => ProductSpecification)
  productSpecifications?: ProductSpecification[];

  /**
   * SKU reference code. Mandotory if the EAN is not informed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RefId" })
  refId: string;

  /**
   * ID of the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SellerId" })
  sellerId: string;

  /**
   * ID of the SKU registered in the seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SellerStockKeepingUnitId" })
  sellerStockKeepingUnitId?: number;

  /**
   * Name of the suggested SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SkuName" })
  skuName: string;

  /**
   * Array containing the names and values of the SKU specifications.
   */
  @SpeakeasyMetadata({ elemType: SkuSpecification })
  @Expose({ name: "SkuSpecifications" })
  @Type(() => SkuSpecification)
  skuSpecifications?: SkuSpecification[];

  /**
   * Unit multiplier for this SKU. If this information doesn't apply, you should use the default value `1`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UnitMultiplier" })
  unitMultiplier?: number;

  /**
   * Weight of the SKU in grams.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Weight" })
  weight: number;

  /**
   * Width of the SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Width" })
  width: number;
}
