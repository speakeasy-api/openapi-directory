// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaxSettingsUpdateRequestTaxationModeEnum string

const (
	TaxSettingsUpdateRequestTaxationModeEnumExclusive TaxSettingsUpdateRequestTaxationModeEnum = "EXCLUSIVE"
	TaxSettingsUpdateRequestTaxationModeEnumInclusive TaxSettingsUpdateRequestTaxationModeEnum = "INCLUSIVE"
)

func (e *TaxSettingsUpdateRequestTaxationModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCLUSIVE":
		fallthrough
	case "INCLUSIVE":
		*e = TaxSettingsUpdateRequestTaxationModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaxSettingsUpdateRequestTaxationModeEnum: %s", s)
	}
}

type TaxSettingsUpdateRequest struct {
	TaxationMode TaxSettingsUpdateRequestTaxationModeEnum `json:"taxationMode"`
}
