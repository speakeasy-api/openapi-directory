/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Ad } from "./ad";
import { Expose, Type } from "class-transformer";

/**
 * A complex type that contains information about how a seller can improve their listing configurations. The AD object contains Promoted Listings recommendations and information, which the seller can use to improve buyer conversions. The response can also contain an optional message about the returned data.
 */
export class MarketingRecommendation extends SpeakeasyBase {
  /**
   * A complex type that contains recommendations and information on how to configure Promoted Listings ad campaigns.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ad" })
  @Type(() => Ad)
  ad?: Ad;

  /**
   * A message that can conditionally accompany the listing information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}
