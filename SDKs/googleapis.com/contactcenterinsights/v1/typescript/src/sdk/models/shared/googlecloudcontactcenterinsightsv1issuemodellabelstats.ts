/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats } from "./googlecloudcontactcenterinsightsv1issuemodellabelstatsissuestats";
import { Expose, Transform } from "class-transformer";

/**
 * Aggregated statistics about an issue model.
 */
export class GoogleCloudContactcenterinsightsV1IssueModelLabelStats extends SpeakeasyBase {
  /**
   * Number of conversations the issue model has analyzed at this point in time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "analyzedConversationsCount" })
  analyzedConversationsCount?: string;

  /**
   * Statistics on each issue. Key is the issue's resource name.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats,
  })
  @Expose({ name: "issueStats" })
  @Transform(
    ({ value }) => {
      const obj: Record<
        string,
        GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      > = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  issueStats?: Record<
    string,
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
  >;

  /**
   * Number of analyzed conversations for which no issue was applicable at this point in time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unclassifiedConversationsCount" })
  unclassifiedConversationsCount?: string;
}
