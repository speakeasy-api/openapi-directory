"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import proto2enumdescriptorproto as shared_proto2enumdescriptorproto
from ..shared import proto2fielddescriptorproto as shared_proto2fielddescriptorproto
from ..shared import proto2oneofdescriptorproto as shared_proto2oneofdescriptorproto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Proto2DescriptorProto:
    r"""Describes a message type."""
    
    enum_type: Optional[list[shared_proto2enumdescriptorproto.Proto2EnumDescriptorProto]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enumType'), 'exclude': lambda f: f is None }})  
    field: Optional[list[shared_proto2fielddescriptorproto.Proto2FieldDescriptorProto]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    nested_type: Optional[list[Proto2DescriptorProto]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nestedType'), 'exclude': lambda f: f is None }})  
    oneof_decl: Optional[list[shared_proto2oneofdescriptorproto.Proto2OneofDescriptorProto]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oneofDecl'), 'exclude': lambda f: f is None }})  
    