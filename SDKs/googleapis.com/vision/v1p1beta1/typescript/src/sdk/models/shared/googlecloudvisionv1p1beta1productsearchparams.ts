/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudVisionV1p1beta1BoundingPoly } from "./googlecloudvisionv1p1beta1boundingpoly";
import { Expose, Type } from "class-transformer";

/**
 * Parameters for a product search request.
 */
export class GoogleCloudVisionV1p1beta1ProductSearchParams extends SpeakeasyBase {
  /**
   * A bounding polygon for the detected image annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boundingPoly" })
  @Type(() => GoogleCloudVisionV1p1beta1BoundingPoly)
  boundingPoly?: GoogleCloudVisionV1p1beta1BoundingPoly;

  /**
   * The filtering expression. This can be used to restrict search results based on Product labels. We currently support an AND of OR of key-value expressions, where each expression within an OR must have the same key. An '=' should be used to connect the key and value. For example, "(color = red OR color = blue) AND brand = Google" is acceptable, but "(color = red OR brand = Google)" is not acceptable. "color: red" is not acceptable because it uses a ':' instead of an '='.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  filter?: string;

  /**
   * The list of product categories to search in. Currently, we only consider the first category, and either "homegoods-v2", "apparel-v2", "toys-v2", "packagedgoods-v1", or "general-v1" should be specified. The legacy categories "homegoods", "apparel", and "toys" are still supported but will be deprecated. For new products, please use "homegoods-v2", "apparel-v2", or "toys-v2" for better product search accuracy. It is recommended to migrate existing products to these categories as well.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCategories" })
  productCategories?: string[];

  /**
   * The resource name of a ProductSet to be searched for similar images. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productSet" })
  productSet?: string;
}
