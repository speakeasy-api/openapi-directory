// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SearchResponseChecksStatusEnum string

const (
	SearchResponseChecksStatusEnumValid   SearchResponseChecksStatusEnum = "VALID"
	SearchResponseChecksStatusEnumInvalid SearchResponseChecksStatusEnum = "INVALID"
)

func (e *SearchResponseChecksStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VALID":
		fallthrough
	case "INVALID":
		*e = SearchResponseChecksStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchResponseChecksStatusEnum: %s", s)
	}
}

type SearchResponseChecks struct {
	// The code supplied with this check request
	Code *string `json:"code,omitempty"`
	// The date and time this check was received (in the format YYYY-MM-DD HH:MM:SS)
	DateReceived *string `json:"date_received,omitempty"`
	// The IP address, if available (this field is no longer used).
	IPAddress *string                         `json:"ip_address,omitempty"`
	Status    *SearchResponseChecksStatusEnum `json:"status,omitempty"`
}

type SearchResponseEventsTypeEnum string

const (
	SearchResponseEventsTypeEnumTts SearchResponseEventsTypeEnum = "tts"
	SearchResponseEventsTypeEnumSms SearchResponseEventsTypeEnum = "sms"
)

func (e *SearchResponseEventsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tts":
		fallthrough
	case "sms":
		*e = SearchResponseEventsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchResponseEventsTypeEnum: %s", s)
	}
}

type SearchResponseEvents struct {
	ID   *string                       `json:"id,omitempty"`
	Type *SearchResponseEventsTypeEnum `json:"type,omitempty"`
}

// SearchResponseStatusEnum - Code | Description
// -- | --
// IN PROGRESS | The search is still in progress.
// SUCCESS | Your user entered a correct verification code.
// FAILED | Your user entered an incorrect code more than three times.
// EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed.
// CANCELLED | The verification process was cancelled by a Verify control request.
type SearchResponseStatusEnum string

const (
	SearchResponseStatusEnumInProgress SearchResponseStatusEnum = "IN PROGRESS"
	SearchResponseStatusEnumSuccess    SearchResponseStatusEnum = "SUCCESS"
	SearchResponseStatusEnumFailed     SearchResponseStatusEnum = "FAILED"
	SearchResponseStatusEnumExpired    SearchResponseStatusEnum = "EXPIRED"
	SearchResponseStatusEnumCancelled  SearchResponseStatusEnum = "CANCELLED"
)

func (e *SearchResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IN PROGRESS":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "CANCELLED":
		*e = SearchResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchResponseStatusEnum: %s", s)
	}
}

// SearchResponse - Success
type SearchResponse struct {
	// The Vonage account ID the request was for.
	AccountID *string `json:"account_id,omitempty"`
	// The list of checks made for this verification and their outcomes.
	Checks []SearchResponseChecks `json:"checks,omitempty"`
	// The currency code.
	Currency *string `json:"currency,omitempty"`
	// The date and time the verification request was completed. This response parameter is in the following format YYYY-MM-DD HH:MM:SS.
	DateFinalized *string `json:"date_finalized,omitempty"`
	// The date and time the verification request was submitted, in the following format YYYY-MM-DD HH:MM:SS.
	DateSubmitted *string `json:"date_submitted,omitempty"`
	// This field may not be present, depending on your pricing model. The
	// value indicates the cost (in EUR) of the calls made and messages sent
	// for the verification process. This value may be updated during and
	// shortly after the request completes because user input events can
	// overlap with message/call events. When this field is present, the total
	// cost of the verification is the sum of this field and the `price` field.
	//
	EstimatedPriceMessagesSent *string `json:"estimated_price_messages_sent,omitempty"`
	// The events that have taken place to verify this number, and their unique identifiers.
	Events []SearchResponseEvents `json:"events,omitempty"`
	// The time the first verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.
	FirstEventDate *string `json:"first_event_date,omitempty"`
	// The time the last verification attempt was made, in the following format YYYY-MM-DD HH:MM:SS.
	LastEventDate *string `json:"last_event_date,omitempty"`
	// The phone number this verification request was used for.
	Number *string `json:"number,omitempty"`
	// The cost incurred for this verification request.
	Price *string `json:"price,omitempty"`
	// The `request_id` that you received in the response to the Verify request and used in the Verify search request.
	RequestID *string `json:"request_id,omitempty"`
	// The `sender_id` you provided in the Verify request.
	SenderID *string `json:"sender_id,omitempty"`
	// Code | Description
	// -- | --
	// IN PROGRESS | The search is still in progress.
	// SUCCESS | Your user entered a correct verification code.
	// FAILED | Your user entered an incorrect code more than three times.
	// EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed.
	// CANCELLED | The verification process was cancelled by a Verify control request.
	//
	Status *SearchResponseStatusEnum `json:"status,omitempty"`
}
