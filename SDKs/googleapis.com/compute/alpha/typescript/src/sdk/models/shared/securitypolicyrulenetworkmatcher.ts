/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch } from "./securitypolicyrulenetworkmatcheruserdefinedfieldmatch";
import { Expose, Type } from "class-transformer";

/**
 * Represents a match condition that incoming network traffic is evaluated against.
 */
export class SecurityPolicyRuleNetworkMatcher extends SpeakeasyBase {
  /**
   * Destination IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destIpRanges" })
  destIpRanges?: string[];

  /**
   * Destination port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destPorts" })
  destPorts?: string[];

  /**
   * IPv4 protocol / IPv6 next header (after extension headers). Each element can be an 8-bit unsigned decimal number (e.g. "6"), range (e.g. "253-254"), or one of the following protocol names: "tcp", "udp", "icmp", "esp", "ah", "ipip", or "sctp".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipProtocols" })
  ipProtocols?: string[];

  /**
   * BGP Autonomous System Number associated with the source IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "srcAsns" })
  srcAsns?: number[];

  /**
   * Source IPv4/IPv6 addresses or CIDR prefixes, in standard text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "srcIpRanges" })
  srcIpRanges?: string[];

  /**
   * Source port numbers for TCP/UDP/SCTP. Each element can be a 16-bit unsigned decimal number (e.g. "80") or range (e.g. "0-1023").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "srcPorts" })
  srcPorts?: string[];

  /**
   * Two-letter ISO 3166-1 alpha-2 country code associated with the source IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "srcRegionCodes" })
  srcRegionCodes?: string[];

  /**
   * User-defined fields. Each element names a defined field and lists the matching values for that field.
   */
  @SpeakeasyMetadata({
    elemType: SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch,
  })
  @Expose({ name: "userDefinedFields" })
  @Type(() => SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch)
  userDefinedFields?: SecurityPolicyRuleNetworkMatcherUserDefinedFieldMatch[];
}
