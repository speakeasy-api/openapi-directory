/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Error type.
 */
export enum PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum {
  NotFound = "not_found",
  Unauthorized = "unauthorized",
  ChildManifest = "child_manifest",
}

export class PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrors extends SpeakeasyBase {
  /**
   * Digest of the image that caused the error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "digest" })
  digest?: string;

  /**
   * Error type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrorsErrorEnum;

  /**
   * Name of the repository of the image that caused the error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  repository?: string;
}

/**
 * Warning type.
 */
export enum PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum {
  IsActive = "is_active",
  CurrentTag = "current_tag",
}

export class PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarnings extends SpeakeasyBase {
  /**
   * Digest of the image that caused the warning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "digest" })
  digest?: string;

  /**
   * Name of the repository of the image that caused the warning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  repository?: string;

  /**
   * Current tags if warning is `current_tag`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * Warning type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warning" })
  warning?: PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarningsWarningEnum;
}

export class PostNamespacesDeleteImagesResponseErrorErrinfoDetails extends SpeakeasyBase {
  /**
   * Errors from validating delete request. These cannot be ignored.
   */
  @SpeakeasyMetadata({
    elemType: PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrors,
  })
  @Expose({ name: "errors" })
  @Type(() => PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrors)
  errors?: PostNamespacesDeleteImagesResponseErrorErrinfoDetailsErrors[];

  /**
   * Warnings that can be ignored.
   *
   * @remarks
   *
   * These warnings include:
   *
   * - is_active: warning when attempting to delete an image that is marked as
   * active.
   * - current_tag: warning when attempting to delete an image that has one or
   * more current tags in the repository.
   *
   * Warnings can be copied from the response to the request.
   *
   */
  @SpeakeasyMetadata({
    elemType: PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarnings,
  })
  @Expose({ name: "warnings" })
  @Type(() => PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarnings)
  warnings?: PostNamespacesDeleteImagesResponseErrorErrinfoDetailsWarnings[];
}

/**
 * Context information for an error used for diagnostics.
 */
export class PostNamespacesDeleteImagesResponseErrorErrinfo extends SpeakeasyBase {
  /**
   * ID of docker user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_call_docker_id" })
  apiCallDockerId?: string;

  /**
   * Name of the API operation called.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_call_name" })
  apiCallName?: string;

  /**
   * Date/time of call start.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_call_start" })
  apiCallStart?: string;

  /**
   * Unique ID for this call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_call_txnid" })
  apiCallTxnid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  @Type(() => PostNamespacesDeleteImagesResponseErrorErrinfoDetails)
  details?: PostNamespacesDeleteImagesResponseErrorErrinfoDetails;

  /**
   * Type of error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Deletion not possible.
 */
export class PostNamespacesDeleteImagesResponseError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "errinfo" })
  @Type(() => PostNamespacesDeleteImagesResponseErrorErrinfo)
  errinfo?: PostNamespacesDeleteImagesResponseErrorErrinfo;

  /**
   * The error message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Unique ID for this call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "txnid" })
  txnid?: string;
}
