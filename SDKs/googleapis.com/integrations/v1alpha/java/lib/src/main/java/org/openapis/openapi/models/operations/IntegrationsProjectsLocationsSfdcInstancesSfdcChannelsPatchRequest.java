/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    @SpeakeasyMetadata("request:mediaType=application/json")
    public org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcChannelInput googleCloudIntegrationsV1alphaSfdcChannelInput;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withGoogleCloudIntegrationsV1alphaSfdcChannelInput(org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcChannelInput googleCloudIntegrationsV1alphaSfdcChannelInput) {
        this.googleCloudIntegrationsV1alphaSfdcChannelInput = googleCloudIntegrationsV1alphaSfdcChannelInput;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * 'passphrase' should be left unset if private key is not encrypted. Note that 'passphrase' is not the password for web server, but an extra layer of security to protected private key.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=clientCertificate.passphrase")
    public String clientCertificatePassphrase;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withClientCertificatePassphrase(String clientCertificatePassphrase) {
        this.clientCertificatePassphrase = clientCertificatePassphrase;
        return this;
    }
    
    /**
     * The ssl certificate encoded in PEM format. This string must include the begin header and end footer lines. For example, -----BEGIN CERTIFICATE----- MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1 JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr 5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=clientCertificate.sslCertificate")
    public String clientCertificateSslCertificate;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withClientCertificateSslCertificate(String clientCertificateSslCertificate) {
        this.clientCertificateSslCertificate = clientCertificateSslCertificate;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Resource name of the SFDC channel projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=name")
    public String name;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Field mask specifying the fields in the above SfdcChannel that have been modified and need to be updated.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updateMask")
    public String updateMask;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;

    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
    public IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest(@JsonProperty("name") String name) {
        this.name = name;
  }
}
