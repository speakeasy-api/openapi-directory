<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TargetArtifact - The artifacts produced by a target render operation.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TargetArtifact
{
    /**
     * Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.
     * 
     * @var ?string $artifactUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('artifactUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $artifactUri = null;
    
    /**
     * Output only. File path of the rendered manifest relative to the URI.
     * 
     * @var ?string $manifestPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('manifestPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $manifestPath = null;
    
    /**
     * Output only. Map from the phase ID to the phase artifacts for the `Target`.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\PhaseArtifact> $phaseArtifacts
     */
	#[\JMS\Serializer\Annotation\SerializedName('phaseArtifacts')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\PhaseArtifact>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $phaseArtifacts = null;
    
    /**
     * Output only. File path of the resolved Skaffold configuration relative to the URI.
     * 
     * @var ?string $skaffoldConfigPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('skaffoldConfigPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $skaffoldConfigPath = null;
    
	public function __construct()
	{
		$this->artifactUri = null;
		$this->manifestPath = null;
		$this->phaseArtifacts = null;
		$this->skaffoldConfigPath = null;
	}
}
