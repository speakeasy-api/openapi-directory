// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateCustomerPathParams struct {
	// Customer ID
	CustomerID int64 `pathParam:"style=simple,explode=false,name=customer_id"`
}

// UpdateCustomerXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type UpdateCustomerXSdsDateFormatEnum string

const (
	UpdateCustomerXSdsDateFormatEnumUtc    UpdateCustomerXSdsDateFormatEnum = "UTC"
	UpdateCustomerXSdsDateFormatEnumLocal  UpdateCustomerXSdsDateFormatEnum = "LOCAL"
	UpdateCustomerXSdsDateFormatEnumOffset UpdateCustomerXSdsDateFormatEnum = "OFFSET"
	UpdateCustomerXSdsDateFormatEnumEpoch  UpdateCustomerXSdsDateFormatEnum = "EPOCH"
	UpdateCustomerXSdsDateFormatEnumLeet   UpdateCustomerXSdsDateFormatEnum = "LEET"
)

func (e *UpdateCustomerXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = UpdateCustomerXSdsDateFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCustomerXSdsDateFormatEnum: %s", s)
	}
}

type UpdateCustomerHeaders struct {
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *UpdateCustomerXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
	// Service Authentication token
	XSdsServiceToken *string `header:"style=simple,explode=false,name=X-Sds-Service-Token"`
}

type UpdateCustomerRequest struct {
	PathParams UpdateCustomerPathParams
	Headers    UpdateCustomerHeaders
	Request    shared.UpdateCustomerRequest `request:"mediaType=application/json"`
}

type UpdateCustomerResponse struct {
	ContentType string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// OK
	UpdateCustomerResponse *shared.UpdateCustomerResponse
}
