// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopMatchmakingXAmzTargetEnum
type StopMatchmakingXAmzTargetEnum string

const (
	StopMatchmakingXAmzTargetEnumGameLiftStopMatchmaking StopMatchmakingXAmzTargetEnum = "GameLift.StopMatchmaking"
)

func (e *StopMatchmakingXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GameLift.StopMatchmaking":
		*e = StopMatchmakingXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopMatchmakingXAmzTargetEnum: %s", s)
	}
}

type StopMatchmakingRequest struct {
	StopMatchmakingInput shared.StopMatchmakingInput   `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           StopMatchmakingXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopMatchmakingResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// Success
	StopMatchmakingOutput map[string]interface{}
	// UnsupportedRegionException
	UnsupportedRegionException interface{}
}
