// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type TagAPIGetByIDPathParams struct {
	// Tag ID (required).
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// TagAPIGetByIDFieldsEnum - List of optional fields (optional).
type TagAPIGetByIDFieldsEnum string

const (
	TagAPIGetByIDFieldsEnumNone                  TagAPIGetByIDFieldsEnum = "None"
	TagAPIGetByIDFieldsEnumAdditionalNames       TagAPIGetByIDFieldsEnum = "AdditionalNames"
	TagAPIGetByIDFieldsEnumAliasedTo             TagAPIGetByIDFieldsEnum = "AliasedTo"
	TagAPIGetByIDFieldsEnumDescription           TagAPIGetByIDFieldsEnum = "Description"
	TagAPIGetByIDFieldsEnumMainPicture           TagAPIGetByIDFieldsEnum = "MainPicture"
	TagAPIGetByIDFieldsEnumNames                 TagAPIGetByIDFieldsEnum = "Names"
	TagAPIGetByIDFieldsEnumParent                TagAPIGetByIDFieldsEnum = "Parent"
	TagAPIGetByIDFieldsEnumRelatedTags           TagAPIGetByIDFieldsEnum = "RelatedTags"
	TagAPIGetByIDFieldsEnumTranslatedDescription TagAPIGetByIDFieldsEnum = "TranslatedDescription"
	TagAPIGetByIDFieldsEnumWebLinks              TagAPIGetByIDFieldsEnum = "WebLinks"
)

func (e *TagAPIGetByIDFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "AliasedTo":
		fallthrough
	case "Description":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "Parent":
		fallthrough
	case "RelatedTags":
		fallthrough
	case "TranslatedDescription":
		fallthrough
	case "WebLinks":
		*e = TagAPIGetByIDFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagAPIGetByIDFieldsEnum: %s", s)
	}
}

// TagAPIGetByIDLangEnum - Content language preference (optional).
type TagAPIGetByIDLangEnum string

const (
	TagAPIGetByIDLangEnumDefault  TagAPIGetByIDLangEnum = "Default"
	TagAPIGetByIDLangEnumJapanese TagAPIGetByIDLangEnum = "Japanese"
	TagAPIGetByIDLangEnumRomaji   TagAPIGetByIDLangEnum = "Romaji"
	TagAPIGetByIDLangEnumEnglish  TagAPIGetByIDLangEnum = "English"
)

func (e *TagAPIGetByIDLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = TagAPIGetByIDLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagAPIGetByIDLangEnum: %s", s)
	}
}

type TagAPIGetByIDQueryParams struct {
	// List of optional fields (optional).
	Fields *TagAPIGetByIDFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Content language preference (optional).
	Lang *TagAPIGetByIDLangEnum `queryParam:"style=form,explode=true,name=lang"`
}

type TagAPIGetByIDRequest struct {
	PathParams  TagAPIGetByIDPathParams
	QueryParams TagAPIGetByIDQueryParams
}

type TagAPIGetByIDResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TagForAPIContract *shared.TagForAPIContract
}
