/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NumericBucketingResult } from "./numericbucketingresult";
import { Expose, Type } from "class-transformer";

/**
 * Type of the request, corresponding to CompensationHistogramRequest.type.
 */
export enum CompensationHistogramResultTypeEnum {
  CompensationHistogramRequestTypeUnspecified = "COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED",
  Base = "BASE",
  AnnualizedBase = "ANNUALIZED_BASE",
  AnnualizedTotal = "ANNUALIZED_TOTAL",
}

/**
 * Output only. Compensation based histogram result.
 */
export class CompensationHistogramResult extends SpeakeasyBase {
  /**
   * Output only. Custom numeric bucketing result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  @Type(() => NumericBucketingResult)
  result?: NumericBucketingResult;

  /**
   * Type of the request, corresponding to CompensationHistogramRequest.type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CompensationHistogramResultTypeEnum;
}
