// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FailureReasonEnum string

const (
	FailureReasonEnumNoAvailableContacts            FailureReasonEnum = "NO_AVAILABLE_CONTACTS"
	FailureReasonEnumAdditionalVerificationRequired FailureReasonEnum = "ADDITIONAL_VERIFICATION_REQUIRED"
	FailureReasonEnumDomainNotAllowed               FailureReasonEnum = "DOMAIN_NOT_ALLOWED"
	FailureReasonEnumInvalidPublicDomain            FailureReasonEnum = "INVALID_PUBLIC_DOMAIN"
	FailureReasonEnumDomainValidationDenied         FailureReasonEnum = "DOMAIN_VALIDATION_DENIED"
	FailureReasonEnumCaaError                       FailureReasonEnum = "CAA_ERROR"
	FailureReasonEnumPcaLimitExceeded               FailureReasonEnum = "PCA_LIMIT_EXCEEDED"
	FailureReasonEnumPcaInvalidArn                  FailureReasonEnum = "PCA_INVALID_ARN"
	FailureReasonEnumPcaInvalidState                FailureReasonEnum = "PCA_INVALID_STATE"
	FailureReasonEnumPcaRequestFailed               FailureReasonEnum = "PCA_REQUEST_FAILED"
	FailureReasonEnumPcaNameConstraintsValidation   FailureReasonEnum = "PCA_NAME_CONSTRAINTS_VALIDATION"
	FailureReasonEnumPcaResourceNotFound            FailureReasonEnum = "PCA_RESOURCE_NOT_FOUND"
	FailureReasonEnumPcaInvalidArgs                 FailureReasonEnum = "PCA_INVALID_ARGS"
	FailureReasonEnumPcaInvalidDuration             FailureReasonEnum = "PCA_INVALID_DURATION"
	FailureReasonEnumPcaAccessDenied                FailureReasonEnum = "PCA_ACCESS_DENIED"
	FailureReasonEnumSlrNotFound                    FailureReasonEnum = "SLR_NOT_FOUND"
	FailureReasonEnumOther                          FailureReasonEnum = "OTHER"
)

func (e FailureReasonEnum) ToPointer() *FailureReasonEnum {
	return &e
}

func (e *FailureReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NO_AVAILABLE_CONTACTS":
		fallthrough
	case "ADDITIONAL_VERIFICATION_REQUIRED":
		fallthrough
	case "DOMAIN_NOT_ALLOWED":
		fallthrough
	case "INVALID_PUBLIC_DOMAIN":
		fallthrough
	case "DOMAIN_VALIDATION_DENIED":
		fallthrough
	case "CAA_ERROR":
		fallthrough
	case "PCA_LIMIT_EXCEEDED":
		fallthrough
	case "PCA_INVALID_ARN":
		fallthrough
	case "PCA_INVALID_STATE":
		fallthrough
	case "PCA_REQUEST_FAILED":
		fallthrough
	case "PCA_NAME_CONSTRAINTS_VALIDATION":
		fallthrough
	case "PCA_RESOURCE_NOT_FOUND":
		fallthrough
	case "PCA_INVALID_ARGS":
		fallthrough
	case "PCA_INVALID_DURATION":
		fallthrough
	case "PCA_ACCESS_DENIED":
		fallthrough
	case "SLR_NOT_FOUND":
		fallthrough
	case "OTHER":
		*e = FailureReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailureReasonEnum: %v", v)
	}
}
