<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class QueryMssqlDbRequest
{
    /**
     * Filter by the `id` of an Always On Availability Group.
     * 
     * @var ?string $availabilityGroupId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=availability_group_id')]
    public ?string $availabilityGroupId = null;
    
    /**
     * Filter by effective SLA domain.
     * 
     * @var ?string $effectiveSlaDomainId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=effective_sla_domain_id')]
    public ?string $effectiveSlaDomainId = null;
    
    /**
     * Include backup task information in response.
     * 
     * @var ?bool $includeBackupTaskInfo
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include_backup_task_info')]
    public ?bool $includeBackupTaskInfo = null;
    
    /**
     * Filter by Microsoft SQL instance.
     * 
     * @var ?string $instanceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=instance_id')]
    public ?string $instanceId = null;
    
    /**
     * Filter database summary information by the value of the `isLiveMount` field.
     * 
     * @var ?bool $isLiveMount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_live_mount')]
    public ?bool $isLiveMount = null;
    
    /**
     * Filter database summary information by the value of the `isLogShippingSecondary` field.
     * 
     * @var ?bool $isLogShippingSecondary
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_log_shipping_secondary')]
    public ?bool $isLogShippingSecondary = null;
    
    /**
     * Filter database summary information by the value of the `isRelic` field.
     * 
     * @var ?bool $isRelic
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_relic')]
    public ?bool $isRelic = null;
    
    /**
     * Limit the number of matches returned.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Filter by a substring of the database name.
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * An integer that specifies a number of initial matches to ignore.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Filter by primary cluster.
     * 
     * @var ?string $primaryClusterId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=primary_cluster_id')]
    public ?string $primaryClusterId = null;
    
    /**
     * SLA Assignment of the database.
     * 
     * @var ?string $slaAssignment
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sla_assignment')]
    public ?string $slaAssignment = null;
    
    /**
     * Specifies the SQL Server Database attribute to use in sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\QueryMssqlDbSortByEnum $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?QueryMssqlDbSortByEnum $sortBy = null;
    
    /**
     * Sort order, either ascending or descending.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\QueryMssqlDbSortOrderEnum $sortOrder
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_order')]
    public ?QueryMssqlDbSortOrderEnum $sortOrder = null;
    
	public function __construct()
	{
		$this->availabilityGroupId = null;
		$this->effectiveSlaDomainId = null;
		$this->includeBackupTaskInfo = null;
		$this->instanceId = null;
		$this->isLiveMount = null;
		$this->isLogShippingSecondary = null;
		$this->isRelic = null;
		$this->limit = null;
		$this->name = null;
		$this->offset = null;
		$this->primaryClusterId = null;
		$this->slaAssignment = null;
		$this->sortBy = null;
		$this->sortOrder = null;
	}
}
