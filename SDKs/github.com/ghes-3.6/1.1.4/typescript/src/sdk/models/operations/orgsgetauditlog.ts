/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class OrgsGetAuditLogRequest extends SpeakeasyBase {
  /**
   * A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.6/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=after" })
  after?: string;

  /**
   * A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.6/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=before",
  })
  before?: string;

  /**
   * The event types to include:
   *
   * @remarks
   *
   * - `web` - returns web (non-Git) events.
   * - `git` - returns Git events.
   * - `all` - returns both web and Git events.
   *
   * The default is `web`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include",
  })
  include?: shared.AuditLogIncludeEnum;

  /**
   * The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.
   *
   * @remarks
   *
   * The default is `desc`.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: shared.AuditLogOrderEnum;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * Page number of the results to fetch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results per page (max 100).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-server@3.6/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=phrase",
  })
  phrase?: string;
}

export class OrgsGetAuditLogResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata({ elemType: shared.AuditLogEvent })
  auditLogEvents?: shared.AuditLogEvent[];
}
