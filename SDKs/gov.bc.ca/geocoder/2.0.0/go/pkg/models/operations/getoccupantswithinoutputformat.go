// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetOccupantsWithinOutputFormatLocationDescriptorEnum - Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
type GetOccupantsWithinOutputFormatLocationDescriptorEnum string

const (
	GetOccupantsWithinOutputFormatLocationDescriptorEnumAny            GetOccupantsWithinOutputFormatLocationDescriptorEnum = "any"
	GetOccupantsWithinOutputFormatLocationDescriptorEnumAccessPoint    GetOccupantsWithinOutputFormatLocationDescriptorEnum = "accessPoint"
	GetOccupantsWithinOutputFormatLocationDescriptorEnumFrontDoorPoint GetOccupantsWithinOutputFormatLocationDescriptorEnum = "frontDoorPoint"
	GetOccupantsWithinOutputFormatLocationDescriptorEnumParcelPoint    GetOccupantsWithinOutputFormatLocationDescriptorEnum = "parcelPoint"
	GetOccupantsWithinOutputFormatLocationDescriptorEnumRooftopPoint   GetOccupantsWithinOutputFormatLocationDescriptorEnum = "rooftopPoint"
	GetOccupantsWithinOutputFormatLocationDescriptorEnumRoutingPoint   GetOccupantsWithinOutputFormatLocationDescriptorEnum = "routingPoint"
)

func (e *GetOccupantsWithinOutputFormatLocationDescriptorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "any":
		fallthrough
	case "accessPoint":
		fallthrough
	case "frontDoorPoint":
		fallthrough
	case "parcelPoint":
		fallthrough
	case "rooftopPoint":
		fallthrough
	case "routingPoint":
		*e = GetOccupantsWithinOutputFormatLocationDescriptorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsWithinOutputFormatLocationDescriptorEnum: %s", s)
	}
}

// GetOccupantsWithinOutputFormatOutputFormatEnum - Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
//
// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
type GetOccupantsWithinOutputFormatOutputFormatEnum string

const (
	GetOccupantsWithinOutputFormatOutputFormatEnumJSON    GetOccupantsWithinOutputFormatOutputFormatEnum = "json"
	GetOccupantsWithinOutputFormatOutputFormatEnumGeojson GetOccupantsWithinOutputFormatOutputFormatEnum = "geojson"
	GetOccupantsWithinOutputFormatOutputFormatEnumXhtml   GetOccupantsWithinOutputFormatOutputFormatEnum = "xhtml"
	GetOccupantsWithinOutputFormatOutputFormatEnumKml     GetOccupantsWithinOutputFormatOutputFormatEnum = "kml"
	GetOccupantsWithinOutputFormatOutputFormatEnumGml     GetOccupantsWithinOutputFormatOutputFormatEnum = "gml"
	GetOccupantsWithinOutputFormatOutputFormatEnumCsv     GetOccupantsWithinOutputFormatOutputFormatEnum = "csv"
	GetOccupantsWithinOutputFormatOutputFormatEnumShpz    GetOccupantsWithinOutputFormatOutputFormatEnum = "shpz"
)

func (e *GetOccupantsWithinOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "geojson":
		fallthrough
	case "xhtml":
		fallthrough
	case "kml":
		fallthrough
	case "gml":
		fallthrough
	case "csv":
		fallthrough
	case "shpz":
		*e = GetOccupantsWithinOutputFormatOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsWithinOutputFormatOutputFormatEnum: %s", s)
	}
}

// GetOccupantsWithinOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
type GetOccupantsWithinOutputFormatOutputSrsEnum string

const (
	GetOccupantsWithinOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  GetOccupantsWithinOutputFormatOutputSrsEnum = "4326"
	GetOccupantsWithinOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    GetOccupantsWithinOutputFormatOutputSrsEnum = "4269"
	GetOccupantsWithinOutputFormatOutputSrsEnumThreeThousandAndFive                  GetOccupantsWithinOutputFormatOutputSrsEnum = "3005"
	GetOccupantsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  GetOccupantsWithinOutputFormatOutputSrsEnum = "26907"
	GetOccupantsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  GetOccupantsWithinOutputFormatOutputSrsEnum = "26908"
	GetOccupantsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   GetOccupantsWithinOutputFormatOutputSrsEnum = "26909"
	GetOccupantsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    GetOccupantsWithinOutputFormatOutputSrsEnum = "26910"
	GetOccupantsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven GetOccupantsWithinOutputFormatOutputSrsEnum = "26911"
)

func (e *GetOccupantsWithinOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "4326":
		fallthrough
	case "4269":
		fallthrough
	case "3005":
		fallthrough
	case "26907":
		fallthrough
	case "26908":
		fallthrough
	case "26909":
		fallthrough
	case "26910":
		fallthrough
	case "26911":
		*e = GetOccupantsWithinOutputFormatOutputSrsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsWithinOutputFormatOutputSrsEnum: %s", s)
	}
}

type GetOccupantsWithinOutputFormatRequest struct {
	// A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a>
	Bbox string `queryParam:"style=form,explode=true,name=bbox"`
	// If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
	Brief *bool `queryParam:"style=form,explode=true,name=brief"`
	// Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
	LocationDescriptor *GetOccupantsWithinOutputFormatLocationDescriptorEnum `queryParam:"style=form,explode=true,name=locationDescriptor"`
	// The maximum number of search results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
	//
	// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
	OutputFormat GetOccupantsWithinOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *GetOccupantsWithinOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
	// The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
	SetBack *int64 `queryParam:"style=form,explode=true,name=setBack"`
	// Example: schools;courts;employment<br>A list of tags separated by semicolons.
	Tags *string `queryParam:"style=form,explode=true,name=tags"`
}

type GetOccupantsWithinOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
