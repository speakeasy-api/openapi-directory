/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Document } from "./document";
import { Mark } from "./mark";
import { Expose, Transform, Type } from "class-transformer";

export class SubmissionMarkResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assessmentId" })
  assessmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentItemDetails" })
  assessmentItemDetails?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentItemName" })
  assessmentItemName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "courseName" })
  courseName?: string;

  @SpeakeasyMetadata({ elemType: Document })
  @Expose({ name: "files" })
  @Type(() => Document)
  files?: Document[];

  @SpeakeasyMetadata()
  @Expose({ name: "html" })
  html?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "learnerEmail" })
  learnerEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "learnerFirstName" })
  learnerFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "learnerLastName" })
  learnerLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "learnerPersonId" })
  learnerPersonId?: string;

  @SpeakeasyMetadata({ elemType: Mark })
  @Expose({ name: "marks" })
  @Type(() => Mark)
  marks?: Mark[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "submissionDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submissionDateTime?: Date;
}
