// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConfigRuleStateEnum string

const (
	ConfigRuleStateEnumActive          ConfigRuleStateEnum = "ACTIVE"
	ConfigRuleStateEnumDeleting        ConfigRuleStateEnum = "DELETING"
	ConfigRuleStateEnumDeletingResults ConfigRuleStateEnum = "DELETING_RESULTS"
	ConfigRuleStateEnumEvaluating      ConfigRuleStateEnum = "EVALUATING"
)

func (e ConfigRuleStateEnum) ToPointer() *ConfigRuleStateEnum {
	return &e
}

func (e *ConfigRuleStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETING_RESULTS":
		fallthrough
	case "EVALUATING":
		*e = ConfigRuleStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigRuleStateEnum: %v", v)
	}
}
