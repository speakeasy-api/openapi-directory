"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ThirdPartyDependenciesData:
    r"""Third-party dependency information"""
    
    artifact_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('artifactId') }})
    r"""Third party dependencies artifactId"""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""Third party dependencies description"""  
    group_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupId') }})
    r"""Third party dependencies groupId"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Third party dependencies id"""  
    licenses: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('licenses') }})
    r"""Third party dependencies licenses type"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Third party dependencies name"""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Third party dependencies type"""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""Third party dependencies url"""  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})
    r"""Third party dependencies version"""  
    