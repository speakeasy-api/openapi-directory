/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ServiceMeshAnalysisMessage } from "./servicemeshanalysismessage";
import { ServiceMeshControlPlaneManagement } from "./servicemeshcontrolplanemanagement";
import { ServiceMeshDataPlaneManagement } from "./servicemeshdataplanemanagement";
import { Expose, Type } from "class-transformer";

/**
 * **Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.
 */
export class ServiceMeshMembershipState extends SpeakeasyBase {
  /**
   * Output only. Results of running Service Mesh analyzers.
   */
  @SpeakeasyMetadata({ elemType: ServiceMeshAnalysisMessage })
  @Expose({ name: "analysisMessages" })
  @Type(() => ServiceMeshAnalysisMessage)
  analysisMessages?: ServiceMeshAnalysisMessage[];

  /**
   * The API version (i.e. Istio CRD version) for configuring service mesh in this cluster. This version is influenced by the `default_channel` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configApiVersion" })
  configApiVersion?: string;

  /**
   * Status of control plane management.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "controlPlaneManagement" })
  @Type(() => ServiceMeshControlPlaneManagement)
  controlPlaneManagement?: ServiceMeshControlPlaneManagement;

  /**
   * Status of data plane management. Only reported per-member.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataPlaneManagement" })
  @Type(() => ServiceMeshDataPlaneManagement)
  dataPlaneManagement?: ServiceMeshDataPlaneManagement;
}
