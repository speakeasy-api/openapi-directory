// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SearchRequest struct {
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The query string needs to be url encoded and is made up of the following options:
	// - Search term. This is just a string. Usually it would be the first item in the query.
	// - `@<username>`: Use the `@` followed by the username to specify posts by this user.
	// - `#<category>`: Use the `#` followed by the category slug to search within this category.
	// - `tags:`: `api,solved` or for posts that have all the specified tags `api+solved`.
	// - `before:`: `yyyy-mm-dd`
	// - `after:`: `yyyy-mm-dd`
	// - `order:`: `latest`, `likes`, `views`, `latest_topic`
	// - `assigned:`: username (without `@`)
	// - `in:`: `title`, `likes`, `personal`, `messages`, `seen`, `unseen`, `posted`, `created`, `watching`, `tracking`, `bookmarks`, `assigned`, `unassigned`, `first`, `pinned`, `wiki`
	// - `with:`: `images`
	// - `status:`: `open`, `closed`, `public`, `archived`, `noreplies`, `single_user`, `solved`, `unsolved`
	// - `group:`: group_name or group_id
	// - `group_messages:`: group_name or group_id
	// - `min_posts:`: 1
	// - `max_posts:`: 10
	// - `min_views:`: 1
	// - `max_views:`: 10
	//
	// If you are using cURL you can use the `-G` and the `--data-urlencode` flags to encode the query:
	//
	// ```
	// curl -i -sS -X GET -G "http://localhost:4200/search.json" \
	// --data-urlencode 'q=wordpress @scossar #fun after:2020-01-01'
	// ```
	//
	Q *string `queryParam:"style=form,explode=true,name=q"`
}

type Search200ApplicationJSONGroupedSearchResult struct {
	CanCreateTopic      bool          `json:"can_create_topic"`
	CategoryIds         []interface{} `json:"category_ids"`
	Error               string        `json:"error"`
	GroupIds            []interface{} `json:"group_ids"`
	MoreCategories      string        `json:"more_categories"`
	MoreFullPageResults string        `json:"more_full_page_results"`
	MorePosts           string        `json:"more_posts"`
	MoreUsers           string        `json:"more_users"`
	PostIds             []interface{} `json:"post_ids"`
	SearchLogID         int64         `json:"search_log_id"`
	TagIds              []interface{} `json:"tag_ids"`
	Term                string        `json:"term"`
	UserIds             []interface{} `json:"user_ids"`
}

// Search200ApplicationJSON - success response
type Search200ApplicationJSON struct {
	Categories          []interface{}                               `json:"categories"`
	GroupedSearchResult Search200ApplicationJSONGroupedSearchResult `json:"grouped_search_result"`
	Groups              []interface{}                               `json:"groups"`
	Posts               []interface{}                               `json:"posts"`
	Tags                []interface{}                               `json:"tags"`
	Users               []interface{}                               `json:"users"`
}

type SearchResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success response
	Search200ApplicationJSONObject *Search200ApplicationJSON
}
