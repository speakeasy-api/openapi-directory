// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PollItemsRequestStatusCodesEnum string

const (
	PollItemsRequestStatusCodesEnumCodeUnspecified PollItemsRequestStatusCodesEnum = "CODE_UNSPECIFIED"
	PollItemsRequestStatusCodesEnumError           PollItemsRequestStatusCodesEnum = "ERROR"
	PollItemsRequestStatusCodesEnumModified        PollItemsRequestStatusCodesEnum = "MODIFIED"
	PollItemsRequestStatusCodesEnumNewItem         PollItemsRequestStatusCodesEnum = "NEW_ITEM"
	PollItemsRequestStatusCodesEnumAccepted        PollItemsRequestStatusCodesEnum = "ACCEPTED"
)

func (e *PollItemsRequestStatusCodesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CODE_UNSPECIFIED":
		fallthrough
	case "ERROR":
		fallthrough
	case "MODIFIED":
		fallthrough
	case "NEW_ITEM":
		fallthrough
	case "ACCEPTED":
		*e = PollItemsRequestStatusCodesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PollItemsRequestStatusCodesEnum: %s", s)
	}
}

type PollItemsRequest struct {
	// The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
	ConnectorName *string `json:"connectorName,omitempty"`
	// Shared request debug options for all cloudsearch RPC methods.
	DebugOptions *DebugOptions `json:"debugOptions,omitempty"`
	// Maximum number of items to return. The maximum value is 100 and the default value is 20.
	Limit *int `json:"limit,omitempty"`
	// Queue name to fetch items from. If unspecified, PollItems will fetch from 'default' queue. The maximum length is 100 characters.
	Queue *string `json:"queue,omitempty"`
	// Limit the items polled to the ones with these statuses.
	StatusCodes []PollItemsRequestStatusCodesEnum `json:"statusCodes,omitempty"`
}
