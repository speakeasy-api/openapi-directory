/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Proto2EnumDescriptorProto } from "./proto2enumdescriptorproto";
import { Proto2FieldDescriptorProto } from "./proto2fielddescriptorproto";
import { Proto2OneofDescriptorProto } from "./proto2oneofdescriptorproto";
import { Expose, Type } from "class-transformer";

/**
 * Describes a message type.
 */
export class Proto2DescriptorProto extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Proto2EnumDescriptorProto })
  @Expose({ name: "enumType" })
  @Type(() => Proto2EnumDescriptorProto)
  enumType?: Proto2EnumDescriptorProto[];

  @SpeakeasyMetadata({ elemType: Proto2FieldDescriptorProto })
  @Expose({ name: "field" })
  @Type(() => Proto2FieldDescriptorProto)
  field?: Proto2FieldDescriptorProto[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: Proto2DescriptorProto })
  @Expose({ name: "nestedType" })
  @Type(() => Proto2DescriptorProto)
  nestedType?: Proto2DescriptorProto[];

  @SpeakeasyMetadata({ elemType: Proto2OneofDescriptorProto })
  @Expose({ name: "oneofDecl" })
  @Type(() => Proto2OneofDescriptorProto)
  oneofDecl?: Proto2OneofDescriptorProto[];
}
