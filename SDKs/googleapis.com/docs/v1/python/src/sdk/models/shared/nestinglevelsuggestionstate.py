"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import textstylesuggestionstate as shared_textstylesuggestionstate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NestingLevelSuggestionState:
    r"""A mask that indicates which of the fields on the base NestingLevel have been changed in this suggestion. For any field set to true, there's a new suggested value."""
    
    bullet_alignment_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bulletAlignmentSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to bullet_alignment."""  
    glyph_format_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('glyphFormatSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to glyph_format."""  
    glyph_symbol_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('glyphSymbolSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to glyph_symbol."""  
    glyph_type_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('glyphTypeSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to glyph_type."""  
    indent_first_line_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indentFirstLineSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to indent_first_line."""  
    indent_start_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indentStartSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to indent_start."""  
    start_number_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startNumberSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to start_number."""  
    text_style_suggestion_state: Optional[shared_textstylesuggestionstate.TextStyleSuggestionState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textStyleSuggestionState'), 'exclude': lambda f: f is None }})
    r"""A mask that indicates which of the fields on the base TextStyle have been changed in this suggestion. For any field set to true, there's a new suggested value."""  
    