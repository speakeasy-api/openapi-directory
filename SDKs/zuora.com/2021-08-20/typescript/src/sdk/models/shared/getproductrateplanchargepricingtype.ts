/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GETProductRatePlanChargePricingTierType } from "./getproductrateplanchargepricingtiertype";
import { Expose, Type } from "class-transformer";

export class GETProductRatePlanChargePricingType extends SpeakeasyBase {
  /**
   * Currency used by the charge model. For example: USD or EUR
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Value subtracted from price in currency specified. Used only when the charge model is DiscountFixedAmount.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discountAmount" })
  discountAmount?: string;

  /**
   * Percent discount applied to the price. Used only when the charge model is DiscountPercentage.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discountPercentage" })
  discountPercentage?: string;

  /**
   * Specifies the number of units in the base set of units when the charge model is Overage.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includedUnits" })
  includedUnits?: string;

  /**
   * Price per unit when base set of units is exceeded. Used only when charge model is Overage or Tiered with Overage.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overagePrice" })
  overagePrice?: string;

  /**
   * The decimal value that applies when the charge model is not tiered
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;

  /**
   * Container for one or many defined tier ranges with distinct pricing.  Applies when model is `Tiered`, `TieredWithOverage`, or `Volume`
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETProductRatePlanChargePricingTierType })
  @Expose({ name: "tiers" })
  @Type(() => GETProductRatePlanChargePricingTierType)
  tiers?: GETProductRatePlanChargePricingTierType[];
}
