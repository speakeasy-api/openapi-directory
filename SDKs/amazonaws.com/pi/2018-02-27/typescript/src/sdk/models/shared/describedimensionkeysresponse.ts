/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DimensionKeyDescription } from "./dimensionkeydescription";
import { ResponsePartitionKey } from "./responsepartitionkey";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeDimensionKeysResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AlignedEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  alignedEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "AlignedStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  alignedStartTime?: Date;

  @SpeakeasyMetadata({ elemType: DimensionKeyDescription })
  @Expose({ name: "Keys" })
  @Type(() => DimensionKeyDescription)
  keys?: DimensionKeyDescription[];

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: ResponsePartitionKey })
  @Expose({ name: "PartitionKeys" })
  @Type(() => ResponsePartitionKey)
  partitionKeys?: ResponsePartitionKey[];
}
