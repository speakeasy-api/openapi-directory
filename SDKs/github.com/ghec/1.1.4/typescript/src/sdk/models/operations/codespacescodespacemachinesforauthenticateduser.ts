/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CodespacesCodespaceMachinesForAuthenticatedUserRequest extends SpeakeasyBase {
  /**
   * The name of the codespace.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=codespace_name",
  })
  codespaceName: string;
}

/**
 * Response
 */
export class CodespacesCodespaceMachinesForAuthenticatedUser200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.CodespaceMachine })
  @Expose({ name: "machines" })
  @Type(() => shared.CodespaceMachine)
  machines: shared.CodespaceMachine[];

  @SpeakeasyMetadata()
  @Expose({ name: "total_count" })
  totalCount: number;
}

export class CodespacesCodespaceMachinesForAuthenticatedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  codespacesCodespaceMachinesForAuthenticatedUser200ApplicationJSONObject?: CodespacesCodespaceMachinesForAuthenticatedUser200ApplicationJSON;
}
