/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Describes the security group that is referenced in the rule.
 */
export class DescribeSecurityGroupRulesResultSecurityGroupRulesReferencedGroupInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  peeringStatus?: string;

  @SpeakeasyMetadata()
  userId?: string;

  @SpeakeasyMetadata()
  vpcId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * Describes a tag.
 */
export class DescribeSecurityGroupRulesResultSecurityGroupRulesTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a security group rule.
 */
export class DescribeSecurityGroupRulesResultSecurityGroupRules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidrIpv4?: string;

  @SpeakeasyMetadata()
  cidrIpv6?: string;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupOwnerId?: string;

  @SpeakeasyMetadata()
  ipProtocol?: string;

  @SpeakeasyMetadata()
  isEgress?: boolean;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  referencedGroupInfo?: DescribeSecurityGroupRulesResultSecurityGroupRulesReferencedGroupInfo;

  @SpeakeasyMetadata()
  securityGroupRuleId?: string;

  @SpeakeasyMetadata({
    elemType: DescribeSecurityGroupRulesResultSecurityGroupRulesTags,
  })
  tags?: DescribeSecurityGroupRulesResultSecurityGroupRulesTags[];

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * Success
 */
export class DescribeSecurityGroupRulesResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType: DescribeSecurityGroupRulesResultSecurityGroupRules,
  })
  securityGroupRules?: DescribeSecurityGroupRulesResultSecurityGroupRules[];
}
