// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteConfigurationSetActionEnum
type POSTDeleteConfigurationSetActionEnum string

const (
	POSTDeleteConfigurationSetActionEnumDeleteConfigurationSet POSTDeleteConfigurationSetActionEnum = "DeleteConfigurationSet"
)

func (e *POSTDeleteConfigurationSetActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteConfigurationSet":
		*e = POSTDeleteConfigurationSetActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteConfigurationSetActionEnum: %s", s)
	}
}

// POSTDeleteConfigurationSetVersionEnum
type POSTDeleteConfigurationSetVersionEnum string

const (
	POSTDeleteConfigurationSetVersionEnumTwoThousandAndTen1201 POSTDeleteConfigurationSetVersionEnum = "2010-12-01"
)

func (e *POSTDeleteConfigurationSetVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = POSTDeleteConfigurationSetVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteConfigurationSetVersionEnum: %s", s)
	}
}

type POSTDeleteConfigurationSetQueryParams struct {
	Action  POSTDeleteConfigurationSetActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDeleteConfigurationSetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDeleteConfigurationSetHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteConfigurationSetRequest struct {
	QueryParams POSTDeleteConfigurationSetQueryParams
	Headers     POSTDeleteConfigurationSetHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDeleteConfigurationSetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
