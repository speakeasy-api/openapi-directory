/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ApiVersion extends SpeakeasyBase {
  /**
   * Timestamp when the version was added
   */
  @SpeakeasyMetadata()
  @Expose({ name: "added" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  added: Date;

  /**
   * Copy of `externalDocs` section from OpenAPI definition
   */
  @SpeakeasyMetadata()
  @Expose({ name: "externalDocs" })
  externalDocs?: Record<string, any>;

  /**
   * Copy of `info` section from OpenAPI definition
   */
  @SpeakeasyMetadata()
  @Expose({ name: "info" })
  info: Record<string, any>;

  /**
   * The value of the `openapi` or `swagger` property of the source definition
   */
  @SpeakeasyMetadata()
  @Expose({ name: "openapiVer" })
  openapiVer: string;

  /**
   * URL to OpenAPI definition in JSON format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "swaggerUrl" })
  swaggerUrl: string;

  /**
   * URL to OpenAPI definition in YAML format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "swaggerYamlUrl" })
  swaggerYamlUrl: string;

  /**
   * Timestamp when the version was updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated: Date;
}
