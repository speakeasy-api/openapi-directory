/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Break - A record of an employee's break during a shift.
 */
public class Break {
    /**
     * The `BreakType` that this `Break` was templated on.
     */
    @JsonProperty("break_type_id")
    public String breakTypeId;
    public Break withBreakTypeId(String breakTypeId) {
        this.breakTypeId = breakTypeId;
        return this;
    }
    
    /**
     * RFC 3339; follows the same timezone information as `Shift`. Precision up to
     * the minute is respected; seconds are truncated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_at")
    public String endAt;
    public Break withEndAt(String endAt) {
        this.endAt = endAt;
        return this;
    }
    
    /**
     * Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of
     * the break.
     */
    @JsonProperty("expected_duration")
    public String expectedDuration;
    public Break withExpectedDuration(String expectedDuration) {
        this.expectedDuration = expectedDuration;
        return this;
    }
    
    /**
     * The UUID for this object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Break withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether this break counts towards time worked for compensation
     * purposes.
     */
    @JsonProperty("is_paid")
    public Boolean isPaid;
    public Break withIsPaid(Boolean isPaid) {
        this.isPaid = isPaid;
        return this;
    }
    
    /**
     * A human-readable name.
     */
    @JsonProperty("name")
    public String name;
    public Break withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * RFC 3339; follows the same timezone information as `Shift`. Precision up to
     * the minute is respected; seconds are truncated.
     */
    @JsonProperty("start_at")
    public String startAt;
    public Break withStartAt(String startAt) {
        this.startAt = startAt;
        return this;
    }
    
}
