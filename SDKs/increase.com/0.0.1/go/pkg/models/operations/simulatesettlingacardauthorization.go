// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SimulateSettlingACardAuthorizationDefaultApplicationJSON13StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine SimulateSettlingACardAuthorizationDefaultApplicationJSON13StatusEnum = "429"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON13TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON13TypeEnumRateLimitedError SimulateSettlingACardAuthorizationDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON13 struct {
	Detail     string                                                               `json:"detail"`
	RetryAfter *int64                                                               `json:"retry_after,omitempty"`
	Status     SimulateSettlingACardAuthorizationDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                               `json:"title"`
	Type       SimulateSettlingACardAuthorizationDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON12StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON12StatusEnumFourHundredAndThree SimulateSettlingACardAuthorizationDefaultApplicationJSON12StatusEnum = "403"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON12TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON12TypeEnumPrivateFeatureError SimulateSettlingACardAuthorizationDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON12 struct {
	Detail string                                                               `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON11StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON11StatusEnumFourHundredAndFour SimulateSettlingACardAuthorizationDefaultApplicationJSON11StatusEnum = "404"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON11TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON11TypeEnumObjectNotFoundError SimulateSettlingACardAuthorizationDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON11 struct {
	Detail string                                                               `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON10StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON10StatusEnumFourHundred SimulateSettlingACardAuthorizationDefaultApplicationJSON10StatusEnum = "400"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON10TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON10TypeEnumMalformedRequestError SimulateSettlingACardAuthorizationDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON10 struct {
	Detail string                                                               `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON9StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON9StatusEnumFourHundred SimulateSettlingACardAuthorizationDefaultApplicationJSON9StatusEnum = "400"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON9TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON9TypeEnumInvalidParametersError SimulateSettlingACardAuthorizationDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                            `json:"errors,omitempty"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON8StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON8StatusEnumFourHundredAndNine SimulateSettlingACardAuthorizationDefaultApplicationJSON8StatusEnum = "409"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON8TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON8TypeEnumInvalidOperationError SimulateSettlingACardAuthorizationDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON8 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON7StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON7StatusEnumFourHundredAndOne SimulateSettlingACardAuthorizationDefaultApplicationJSON7StatusEnum = "401"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON7TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON7TypeEnumInvalidAPIKeyError SimulateSettlingACardAuthorizationDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON7 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON6StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON6StatusEnumFiveHundred SimulateSettlingACardAuthorizationDefaultApplicationJSON6StatusEnum = "500"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON6TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON6TypeEnumInternalServerError SimulateSettlingACardAuthorizationDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON6 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON5StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON5StatusEnumFourHundredAndThree SimulateSettlingACardAuthorizationDefaultApplicationJSON5StatusEnum = "403"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON5TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON5TypeEnumInsufficientPermissionsError SimulateSettlingACardAuthorizationDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON5 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON4StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo SimulateSettlingACardAuthorizationDefaultApplicationJSON4StatusEnum = "422"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON4TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError SimulateSettlingACardAuthorizationDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON4 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON3StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON3StatusEnumFourHundredAndNine SimulateSettlingACardAuthorizationDefaultApplicationJSON3StatusEnum = "409"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON3TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON3TypeEnumIdempotencyConflictError SimulateSettlingACardAuthorizationDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON3 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON2StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON2StatusEnumFourHundredAndThree SimulateSettlingACardAuthorizationDefaultApplicationJSON2StatusEnum = "403"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON2TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON2TypeEnumEnvironmentMismatchError SimulateSettlingACardAuthorizationDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON2 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON1StatusEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON1StatusEnumFourHundredAndFour SimulateSettlingACardAuthorizationDefaultApplicationJSON1StatusEnum = "404"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON1TypeEnum string

const (
	SimulateSettlingACardAuthorizationDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError SimulateSettlingACardAuthorizationDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *SimulateSettlingACardAuthorizationDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = SimulateSettlingACardAuthorizationDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulateSettlingACardAuthorizationDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type SimulateSettlingACardAuthorizationDefaultApplicationJSON1 struct {
	Detail string                                                              `json:"detail"`
	Status SimulateSettlingACardAuthorizationDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                              `json:"title"`
	Type   SimulateSettlingACardAuthorizationDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type SimulateSettlingACardAuthorizationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Transaction
	Transaction *shared.Transaction
}
