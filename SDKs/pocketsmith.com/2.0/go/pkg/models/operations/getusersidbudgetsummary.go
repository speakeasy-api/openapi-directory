// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUsersIDBudgetSummaryPeriodEnum - The period to analyse in, one of `weeks`, `months` or `years`. Also supported is `event`, although event period analysis is only possible when the budget events gathered align, so in this case where all categories are analysed together, it's highly unlikely that event period analysis will be possible.
type GetUsersIDBudgetSummaryPeriodEnum string

const (
	GetUsersIDBudgetSummaryPeriodEnumWeeks  GetUsersIDBudgetSummaryPeriodEnum = "weeks"
	GetUsersIDBudgetSummaryPeriodEnumMonths GetUsersIDBudgetSummaryPeriodEnum = "months"
	GetUsersIDBudgetSummaryPeriodEnumYears  GetUsersIDBudgetSummaryPeriodEnum = "years"
	GetUsersIDBudgetSummaryPeriodEnumEvent  GetUsersIDBudgetSummaryPeriodEnum = "event"
)

func (e *GetUsersIDBudgetSummaryPeriodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "weeks":
		fallthrough
	case "months":
		fallthrough
	case "years":
		fallthrough
	case "event":
		*e = GetUsersIDBudgetSummaryPeriodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUsersIDBudgetSummaryPeriodEnum: %s", s)
	}
}

type GetUsersIDBudgetSummaryRequest struct {
	// The date to stop analysing the budget from. This will be bumped out to make full periods as necessary.
	EndDate string `queryParam:"style=form,explode=true,name=end_date"`
	// The unique identifier of the user.
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
	// The period interval, e.g. if the interval is 2 and the period is weeks, the budget will be analysed fortnightly.
	Interval int64 `queryParam:"style=form,explode=true,name=interval"`
	// The period to analyse in, one of `weeks`, `months` or `years`. Also supported is `event`, although event period analysis is only possible when the budget events gathered align, so in this case where all categories are analysed together, it's highly unlikely that event period analysis will be possible.
	Period GetUsersIDBudgetSummaryPeriodEnum `queryParam:"style=form,explode=true,name=period"`
	// The date to start analysing the budget from. This will be bumped out to make full periods as necessary.
	StartDate string `queryParam:"style=form,explode=true,name=start_date"`
}

type GetUsersIDBudgetSummaryResponse struct {
	// Success
	BudgetAnalysisPackages []shared.BudgetAnalysisPackage
	ContentType            string
	// Bad Request
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
