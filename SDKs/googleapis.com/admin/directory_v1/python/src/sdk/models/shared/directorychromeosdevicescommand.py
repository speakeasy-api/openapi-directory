"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import directorychromeosdevicescommandresult as shared_directorychromeosdevicescommandresult
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DirectoryChromeosdevicesCommandStateEnum(str, Enum):
    r"""Indicates the command state."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    PENDING = 'PENDING'
    EXPIRED = 'EXPIRED'
    CANCELLED = 'CANCELLED'
    SENT_TO_CLIENT = 'SENT_TO_CLIENT'
    ACKED_BY_CLIENT = 'ACKED_BY_CLIENT'
    EXECUTED_BY_CLIENT = 'EXECUTED_BY_CLIENT'

class DirectoryChromeosdevicesCommandTypeEnum(str, Enum):
    r"""The type of the command."""
    COMMAND_TYPE_UNSPECIFIED = 'COMMAND_TYPE_UNSPECIFIED'
    REBOOT = 'REBOOT'
    TAKE_A_SCREENSHOT = 'TAKE_A_SCREENSHOT'
    SET_VOLUME = 'SET_VOLUME'
    WIPE_USERS = 'WIPE_USERS'
    REMOTE_POWERWASH = 'REMOTE_POWERWASH'
    DEVICE_START_CRD_SESSION = 'DEVICE_START_CRD_SESSION'
    CAPTURE_LOGS = 'CAPTURE_LOGS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DirectoryChromeosdevicesCommand:
    r"""Information regarding a command that was issued to a device."""
    
    command_expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commandExpireTime'), 'exclude': lambda f: f is None }})
    r"""The time at which the command will expire. If the device doesn't execute the command within this time the command will become expired."""  
    command_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commandId'), 'exclude': lambda f: f is None }})
    r"""Unique ID of a device command."""  
    command_result: Optional[shared_directorychromeosdevicescommandresult.DirectoryChromeosdevicesCommandResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commandResult'), 'exclude': lambda f: f is None }})
    r"""The result of executing a command."""  
    issue_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issueTime'), 'exclude': lambda f: f is None }})
    r"""The timestamp when the command was issued by the admin."""  
    payload: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payload'), 'exclude': lambda f: f is None }})
    r"""The payload that the command specified, if any."""  
    state: Optional[DirectoryChromeosdevicesCommandStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Indicates the command state."""  
    type: Optional[DirectoryChromeosdevicesCommandTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the command."""  
    