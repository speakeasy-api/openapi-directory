// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum string

const (
	PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnumConfidential PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum = "confidential"
	PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnumRegular      PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum = "regular"
	PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnumPublic       PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum = "public"
)

func (e PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum) ToPointer() *PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum {
	return &e
}

func (e *PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum: %v", v)
	}
}

// PatchSpacesSpaceIDFoldersIDAccountingYearRequestBody - Accounting year to modify (except name, class and archivaldate)
type PatchSpacesSpaceIDFoldersIDAccountingYearRequestBody struct {
	About         *string                                                        `json:"About,omitempty"`
	Comment       *string                                                        `json:"Comment,omitempty"`
	End           *string                                                        `json:"End,omitempty"`
	Home          *bool                                                          `json:"Home,omitempty"`
	Keywords      []string                                                       `json:"Keywords,omitempty"`
	Level         *PatchSpacesSpaceIDFoldersIDAccountingYearRequestBodyLevelEnum `json:"Level,omitempty"`
	NetIncome     *float64                                                       `json:"NetIncome,omitempty"`
	NetPosition   *float64                                                       `json:"NetPosition,omitempty"`
	Start         *string                                                        `json:"Start,omitempty"`
	Tax           *float64                                                       `json:"Tax,omitempty"`
	TaxableIncome *float64                                                       `json:"TaxableIncome,omitempty"`
	Turnover      *float64                                                       `json:"Turnover,omitempty"`
}

type PatchSpacesSpaceIDFoldersIDAccountingYearRequest struct {
	// Accounting year to modify (except name, class and archivaldate)
	RequestBody PatchSpacesSpaceIDFoldersIDAccountingYearRequestBody `request:"mediaType=application/json"`
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDFoldersIDAccountingYearResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
