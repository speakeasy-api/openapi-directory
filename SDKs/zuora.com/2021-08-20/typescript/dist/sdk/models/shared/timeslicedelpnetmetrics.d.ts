import { SpeakeasyBase } from "../../../internal/utils";
/**
 * Specify the reason why the metrics are generated by the certain order action.
 *
 * @remarks
 *
 */
export declare enum TimeSlicedElpNetMetricsGeneratedReasonEnum {
    IncreaseQuantity = "IncreaseQuantity",
    DecreaseQuantity = "DecreaseQuantity",
    ChangePrice = "ChangePrice",
    Extension = "Extension",
    Contraction = "Contraction"
}
/**
 * The type for ELP is always "Regular".
 */
export declare enum TimeSlicedElpNetMetricsTypeEnum {
    Regular = "Regular",
    Discount = "Discount"
}
export declare class TimeSlicedElpNetMetrics extends SpeakeasyBase {
    /**
     * The extended list price which is calculated by the original product catalog list price multiplied by the delta quantity.
     */
    amount?: number;
    /**
     * The latest date that the metric applies.
     */
    endDate?: Date;
    /**
     * Specify the reason why the metrics are generated by the certain order action.
     *
     * @remarks
     *
     */
    generatedReason?: TimeSlicedElpNetMetricsGeneratedReasonEnum;
    /**
     * The acount number of the billing account that is billed for the subscription.
     */
    invoiceOwner?: string;
    /**
     * The ID of the order item referenced by the order metrics.
     */
    orderItemId?: string;
    /**
     * The earliest date that the metric applies.
     */
    startDate?: Date;
    /**
     * The acount number of the billing account that owns the subscription.
     */
    subscriptionOwner?: string;
    /**
     * The tax amount in the metric when the tax permission is enabled.
     */
    tax?: number;
    termNumber?: number;
    /**
     * The type for ELP is always "Regular".
     */
    type?: TimeSlicedElpNetMetricsTypeEnum;
}
