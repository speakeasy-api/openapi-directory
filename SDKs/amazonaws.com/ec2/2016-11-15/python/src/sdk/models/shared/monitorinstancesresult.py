"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum(str, Enum):
    r"""Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled."""
    DISABLED = 'disabled'
    DISABLING = 'disabling'
    ENABLED = 'enabled'
    PENDING = 'pending'


@dataclasses.dataclass
class MonitorInstancesResultInstanceMonitoringsMonitoring:
    r"""The monitoring for the instance."""
    
    state: Optional[MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class MonitorInstancesResultInstanceMonitorings:
    r"""Describes the monitoring of an instance."""
    
    instance_id: Optional[str] = dataclasses.field(default=None)  
    monitoring: Optional[MonitorInstancesResultInstanceMonitoringsMonitoring] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class MonitorInstancesResult:
    r"""Success"""
    
    instance_monitorings: Optional[list[MonitorInstancesResultInstanceMonitorings]] = dataclasses.field(default=None)  
    