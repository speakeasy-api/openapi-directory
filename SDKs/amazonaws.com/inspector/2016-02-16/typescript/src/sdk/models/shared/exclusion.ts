/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attribute } from "./attribute";
import { Scope } from "./scope";
import { Expose, Type } from "class-transformer";

/**
 * Contains information about what was excluded from an assessment run.
 */
export class Exclusion extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "attributes" })
  @Type(() => Attribute)
  attributes?: Attribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendation" })
  recommendation: string;

  @SpeakeasyMetadata({ elemType: Scope })
  @Expose({ name: "scopes" })
  @Type(() => Scope)
  scopes: Scope[];

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}
