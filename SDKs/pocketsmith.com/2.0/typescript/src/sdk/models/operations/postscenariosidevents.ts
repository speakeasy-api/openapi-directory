/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The repeat type of the event.
 */
export enum PostScenariosIdEventsRequestBodyRepeatTypeEnum {
  Once = "once",
  Daily = "daily",
  Weekly = "weekly",
  Fortnightly = "fortnightly",
  Monthly = "monthly",
  Yearly = "yearly",
  EachWeekday = "each weekday",
}

export class PostScenariosIdEventsRequestBody extends SpeakeasyBase {
  /**
   * The amount of the event. A positive amount is a credit, and a negative amount is a debit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * The unique identifier of the category for the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category_id" })
  categoryId: number;

  /**
   * The starting date of the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date: string;

  /**
   * A note for the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  /**
   * The repeat interval of the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repeat_interval" })
  repeatInterval?: number;

  /**
   * The repeat type of the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repeat_type" })
  repeatType: PostScenariosIdEventsRequestBodyRepeatTypeEnum;
}

export class PostScenariosIdEventsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostScenariosIdEventsRequestBody;

  /**
   * The unique identifier of the scenario.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

export class PostScenariosIdEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Not Allowed
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  event?: shared.Event;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
