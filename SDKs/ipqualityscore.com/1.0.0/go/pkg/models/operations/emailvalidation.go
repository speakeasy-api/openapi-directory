// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type EmailValidationRequest struct {
	// (Required) USER_EMAIL_HERE
	UserEmailHere string `pathParam:"style=simple,explode=false,name=USER_EMAIL_HERE"`
	// (Required) YOUR_API_KEY_HERE
	YourAPIKeyHere string `pathParam:"style=simple,explode=false,name=YOUR_API_KEY_HERE"`
}

// EmailValidation500ApplicationJSON - Unexpected error
type EmailValidation500ApplicationJSON struct {
	Message   *string `json:"message,omitempty"`
	RequestID *string `json:"request_id,omitempty"`
	Success   *bool   `json:"success,omitempty"`
}

// EmailValidation400ApplicationJSON - Bad Request
type EmailValidation400ApplicationJSON struct {
	Message   *string `json:"message,omitempty"`
	RequestID *string `json:"request_id,omitempty"`
	Success   *bool   `json:"success,omitempty"`
}

type EmailValidation200ApplicationJSONAssociatedNames struct {
	Names  []string `json:"names,omitempty"`
	Status *string  `json:"status,omitempty"`
}

type EmailValidation200ApplicationJSONAssociatedPhoneNumbers struct {
	PhoneNumbers []string `json:"phone_numbers,omitempty"`
	Status       *string  `json:"status,omitempty"`
}

type EmailValidation200ApplicationJSONDomainAge struct {
	Human     *string  `json:"human,omitempty"`
	Iso       *string  `json:"iso,omitempty"`
	Timestamp *float64 `json:"timestamp,omitempty"`
}

type EmailValidation200ApplicationJSONFirstSeen struct {
	Human     *string  `json:"human,omitempty"`
	Iso       *string  `json:"iso,omitempty"`
	Timestamp *float64 `json:"timestamp,omitempty"`
}

// EmailValidation200ApplicationJSON - Successful response
type EmailValidation200ApplicationJSON struct {
	AssociatedNames        *EmailValidation200ApplicationJSONAssociatedNames        `json:"associated_names,omitempty"`
	AssociatedPhoneNumbers *EmailValidation200ApplicationJSONAssociatedPhoneNumbers `json:"associated_phone_numbers,omitempty"`
	CatchAll               *bool                                                    `json:"catch_all,omitempty"`
	Common                 *bool                                                    `json:"common,omitempty"`
	Deliverability         *string                                                  `json:"deliverability,omitempty"`
	Disposable             *bool                                                    `json:"disposable,omitempty"`
	DNSValid               *bool                                                    `json:"dns_valid,omitempty"`
	DomainAge              *EmailValidation200ApplicationJSONDomainAge              `json:"domain_age,omitempty"`
	DomainVelocity         *string                                                  `json:"domain_velocity,omitempty"`
	FirstName              *string                                                  `json:"first_name,omitempty"`
	FirstSeen              *EmailValidation200ApplicationJSONFirstSeen              `json:"first_seen,omitempty"`
	FraudScore             *float64                                                 `json:"fraud_score,omitempty"`
	FrequentComplainer     *bool                                                    `json:"frequent_complainer,omitempty"`
	Generic                *bool                                                    `json:"generic,omitempty"`
	Honeypot               *bool                                                    `json:"honeypot,omitempty"`
	Leaked                 *bool                                                    `json:"leaked,omitempty"`
	Message                *string                                                  `json:"message,omitempty"`
	OverallScore           *float64                                                 `json:"overall_score,omitempty"`
	RecentAbuse            *bool                                                    `json:"recent_abuse,omitempty"`
	RequestID              *string                                                  `json:"request_id,omitempty"`
	SanitizedEmail         *string                                                  `json:"sanitized_email,omitempty"`
	SMTPScore              *float64                                                 `json:"smtp_score,omitempty"`
	SpamTrapScore          *string                                                  `json:"spam_trap_score,omitempty"`
	Success                *bool                                                    `json:"success,omitempty"`
	SuggestedDomain        *string                                                  `json:"suggested_domain,omitempty"`
	Suspect                *bool                                                    `json:"suspect,omitempty"`
	TimedOut               *bool                                                    `json:"timed_out,omitempty"`
	UserActivity           *string                                                  `json:"user_activity,omitempty"`
	Valid                  *bool                                                    `json:"valid,omitempty"`
}

type EmailValidationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	EmailValidation200ApplicationJSONObject *EmailValidation200ApplicationJSON
	// Bad Request
	EmailValidation400ApplicationJSONObject *EmailValidation400ApplicationJSON
	// Unexpected error
	EmailValidation500ApplicationJSONObject *EmailValidation500ApplicationJSON
}
