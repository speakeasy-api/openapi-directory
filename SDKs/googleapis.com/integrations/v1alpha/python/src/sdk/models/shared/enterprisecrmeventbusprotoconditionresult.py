"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmEventbusProtoConditionResult:
    r"""Contains the combined condition calculation results."""
    
    current_task_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentTaskNumber'), 'exclude': lambda f: f is None }})
    r"""the current task number."""  
    next_task_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextTaskNumber'), 'exclude': lambda f: f is None }})
    r"""the next task number."""  
    result: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    r"""the result comes out after evaluate the combined condition. True if there's no combined condition specified."""  
    