/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer - Identity details of the player
 */
public class DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer {
    /**
     * Details about the player as they are known on BungieNet. This will be undefined if the player has marked their credential private, or does not have a BungieNet account.
     */
    
    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayerBungieNetUserInfo bungieNetUserInfo;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withBungieNetUserInfo(DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayerBungieNetUserInfo bungieNetUserInfo) {
        this.bungieNetUserInfo = bungieNetUserInfo;
        return this;
    }
    
    /**
     * Class of the character if applicable and available.
     */
    
    public String characterClass;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withCharacterClass(String characterClass) {
        this.characterClass = characterClass;
        return this;
    }
    
    /**
     * Level of the character if available. Zero if it is not available.
     */
    
    public Integer characterLevel;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withCharacterLevel(Integer characterLevel) {
        this.characterLevel = characterLevel;
        return this;
    }
    
    /**
     * Current clan name for the player. This value may be null or an empty string if the user does not have a clan.
     */
    
    public String clanName;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withClanName(String clanName) {
        this.clanName = clanName;
        return this;
    }
    
    /**
     * Current clan tag for the player. This value may be null or an empty string if the user does not have a clan.
     */
    
    public String clanTag;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withClanTag(String clanTag) {
        this.clanTag = clanTag;
        return this;
    }
    
    
    public Long classHash;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withClassHash(Long classHash) {
        this.classHash = classHash;
        return this;
    }
    
    /**
     * Details about the player as they are known in game (platform display name, Destiny emblem)
     */
    
    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayerDestinyUserInfo destinyUserInfo;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withDestinyUserInfo(DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayerDestinyUserInfo destinyUserInfo) {
        this.destinyUserInfo = destinyUserInfo;
        return this;
    }
    
    /**
     * If we know the emblem's hash, this can be used to look up the player's emblem at the time of a match when receiving PGCR data, or otherwise their currently equipped emblem (if we are able to obtain it).
     */
    
    public Long emblemHash;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withEmblemHash(Long emblemHash) {
        this.emblemHash = emblemHash;
        return this;
    }
    
    
    public Long genderHash;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withGenderHash(Long genderHash) {
        this.genderHash = genderHash;
        return this;
    }
    
    /**
     * Light Level of the character if available. Zero if it is not available.
     */
    
    public Integer lightLevel;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withLightLevel(Integer lightLevel) {
        this.lightLevel = lightLevel;
        return this;
    }
    
    
    public Long raceHash;

    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer withRaceHash(Long raceHash) {
        this.raceHash = raceHash;
        return this;
    }
    
    public DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer(){}
}
