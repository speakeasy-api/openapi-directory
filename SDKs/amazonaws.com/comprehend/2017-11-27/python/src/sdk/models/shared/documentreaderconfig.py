"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import documentreadaction_enum as shared_documentreadaction_enum
from ..shared import documentreadfeaturetypes_enum as shared_documentreadfeaturetypes_enum
from ..shared import documentreadmode_enum as shared_documentreadmode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentReaderConfig:
    r"""<p>Provides configuration parameters to override the default actions for extracting text from PDF documents and image files. </p> <p> By default, Amazon Comprehend performs the following actions to extract text from files, based on the input file type: </p> <ul> <li> <p> <b>Word files</b> - Amazon Comprehend parser extracts the text. </p> </li> <li> <p> <b>Digital PDF files</b> - Amazon Comprehend parser extracts the text. </p> </li> <li> <p> <b>Image files and scanned PDF files</b> - Amazon Comprehend uses the Amazon Textract <code>DetectDocumentText</code> API to extract the text. </p> </li> </ul> <p> <code>DocumentReaderConfig</code> does not apply to plain text files or Word files.</p> <p> For image files and PDF documents, you can override these default actions using the fields listed below. For more information, see <a href=\\"https://docs.aws.amazon.com/comprehend/latest/dg/detecting-cer.html#detecting-cer-pdf\\"> Setting text extraction options</a>. </p>"""
    
    document_read_action: shared_documentreadaction_enum.DocumentReadActionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentReadAction') }})  
    document_read_mode: Optional[shared_documentreadmode_enum.DocumentReadModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentReadMode'), 'exclude': lambda f: f is None }})  
    feature_types: Optional[list[shared_documentreadfeaturetypes_enum.DocumentReadFeatureTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureTypes'), 'exclude': lambda f: f is None }})  
    