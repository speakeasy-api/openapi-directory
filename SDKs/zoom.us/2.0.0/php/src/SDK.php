<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - The Zoom API allows developers to access information from Zoom. You can use this API to build private services or public applications on the [Zoom App Marketplace](http://marketplace.zoom.us). To learn how to get your credentials and create private/public applications, read our [Authorization Guide](https://marketplace.zoom.us/docs/guides/authorization/credentials).
 * 
 * All endpoints are available via `https` and are located at `api.zoom.us/v2/`.
 * 
 * For instance you can list all users on an account via `https://api.zoom.us/v2/users/`.
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 */
class SDK
{
	public const SERVERS = [
		'https://api.zoom.us/v2',
	];
  	
    /**
     * Account operations
     * 
     * @var Accounts $$accounts
     */
	public Accounts $accounts;
	
    /**
     * Billing operations
     * 
     * @var Billing $$billing
     */
	public Billing $billing;
	
	public ChatChannels $chatChannels;
	
	public ChatChannelsAccountLevel $chatChannelsAccountLevel;
	
    /**
     * Chat Messages operations
     * 
     * @var ChatMessages $$chatMessages
     */
	public ChatMessages $chatMessages;
	
	public ChatbotMessages $chatbotMessages;
	
    /**
     * Cloud Recording operations
     * 
     * @var CloudRecording $$cloudRecording
     */
	public CloudRecording $cloudRecording;
	
	public CommonAreaPhones $commonAreaPhones;
	
    /**
     * Contacts operations
     * 
     * @var Contacts $$contacts
     */
	public Contacts $contacts;
	
    /**
     * Dashboard operations
     * 
     * @var Dashboards $$dashboards
     */
	public Dashboards $dashboards;
	
	public DeprecatedAPIEndpoints $deprecatedAPIEndpoints;
	
    /**
     * H323 Device operations
     * 
     * @var Devices $$devices
     */
	public Devices $devices;
	
    /**
     * Group operations
     * 
     * @var Groups $$groups
     */
	public Groups $groups;
	
    /**
     * IM Chat operations
     * 
     * @var IMChat $$imChat
     */
	public IMChat $imChat;
	
    /**
     * IM Group operations
     * 
     * @var IMGroups $$imGroups
     */
	public IMGroups $imGroups;
	
    /**
     * Meeting operations
     * 
     * @var Meetings $$meetings
     */
	public Meetings $meetings;
	
    /**
     * PAC operations
     * 
     * @var Pac $$pac
     */
	public Pac $pac;
	
	public Phone $phone;
	
	public PhoneAutoReceptionists $phoneAutoReceptionists;
	
	public PhoneBlockedList $phoneBlockedList;
	
	public PhoneCallQueues $phoneCallQueues;
	
	public PhoneDevices $phoneDevices;
	
	public PhoneReports $phoneReports;
	
	public PhoneSharedLineGroups $phoneSharedLineGroups;
	
	public PhoneSite $phoneSite;
	
    /**
     * Report operations
     * 
     * @var Reports $$reports
     */
	public Reports $reports;
	
    /**
     * User Roles
     * 
     * @var Roles $$roles
     */
	public Roles $roles;
	
    /**
     * ZoomRooms operations
     * 
     * @var Rooms $$rooms
     */
	public Rooms $rooms;
	
	public RoomsAccount $roomsAccount;
	
	public RoomsDevices $roomsDevices;
	
	public RoomsLocation $roomsLocation;
	
	public SIPConnectedAudio $sipConnectedAudio;
	
	public SIPPhone $sipPhone;
	
    /**
     * TSP operations
     * 
     * @var Tsp $$tsp
     */
	public Tsp $tsp;
	
    /**
     * Tracking Field operations
     * 
     * @var TrackingField $$trackingField
     */
	public TrackingField $trackingField;
	
    /**
     * User operations
     * 
     * @var Users $$users
     */
	public Users $users;
	
    /**
     * Webinar operations
     * 
     * @var Webinars $$webinars
     */
	public Webinars $webinars;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	private ?Models\Shared\Security $_security;
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client	 
	 * @param Models\Shared\Security|null $security
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, ?Models\Shared\Security $security, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($security !== null) {
			$this->_security = $security;
			$this->_securityClient = Utils\Utils::configureSecurityClient($this->_defaultClient, $this->_security);
		}
		
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->accounts = new Accounts(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->billing = new Billing(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->chatChannels = new ChatChannels(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->chatChannelsAccountLevel = new ChatChannelsAccountLevel(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->chatMessages = new ChatMessages(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->chatbotMessages = new ChatbotMessages(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->cloudRecording = new CloudRecording(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->commonAreaPhones = new CommonAreaPhones(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->contacts = new Contacts(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->dashboards = new Dashboards(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->deprecatedAPIEndpoints = new DeprecatedAPIEndpoints(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->devices = new Devices(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->groups = new Groups(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->imChat = new IMChat(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->imGroups = new IMGroups(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->meetings = new Meetings(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->pac = new Pac(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->phone = new Phone(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->phoneAutoReceptionists = new PhoneAutoReceptionists(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->phoneBlockedList = new PhoneBlockedList(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->phoneCallQueues = new PhoneCallQueues(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->phoneDevices = new PhoneDevices(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->phoneReports = new PhoneReports(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->phoneSharedLineGroups = new PhoneSharedLineGroups(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->phoneSite = new PhoneSite(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->reports = new Reports(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->roles = new Roles(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->rooms = new Rooms(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->roomsAccount = new RoomsAccount(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->roomsDevices = new RoomsDevices(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->roomsLocation = new RoomsLocation(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->sipConnectedAudio = new SIPConnectedAudio(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->sipPhone = new SIPPhone(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->tsp = new Tsp(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->trackingField = new TrackingField(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->users = new Users(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->webinars = new Webinars(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}