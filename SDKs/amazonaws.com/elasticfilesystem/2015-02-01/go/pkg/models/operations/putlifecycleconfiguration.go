// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PutLifecycleConfigurationRequestBody struct {
	// <p>An array of <code>LifecyclePolicy</code> objects that define the file system's <code>LifecycleConfiguration</code> object. A <code>LifecycleConfiguration</code> object informs EFS lifecycle management and EFS Intelligent-Tiering of the following:</p> <ul> <li> <p>When to move files in the file system from primary storage to the IA storage class.</p> </li> <li> <p>When to move files that are in IA storage to primary storage.</p> </li> </ul> <note> <p>When using the <code>put-lifecycle-configuration</code> CLI command or the <code>PutLifecycleConfiguration</code> API action, Amazon EFS requires that each <code>LifecyclePolicy</code> object have only a single transition. This means that in a request body, <code>LifecyclePolicies</code> must be structured as an array of <code>LifecyclePolicy</code> objects, one object for each transition, <code>TransitionToIA</code>, <code>TransitionToPrimaryStorageClass</code>. See the example requests in the following section for more information.</p> </note>
	LifecyclePolicies []shared.LifecyclePolicy `json:"LifecyclePolicies"`
}

type PutLifecycleConfigurationRequest struct {
	// The ID of the file system for which you are creating the <code>LifecycleConfiguration</code> object (String).
	FileSystemID      string                               `pathParam:"style=simple,explode=false,name=FileSystemId"`
	RequestBody       PutLifecycleConfigurationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutLifecycleConfigurationResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// FileSystemNotFound
	FileSystemNotFound interface{}
	// IncorrectFileSystemLifeCycleState
	IncorrectFileSystemLifeCycleState interface{}
	// InternalServerError
	InternalServerError interface{}
	// Success
	LifecycleConfigurationDescription *shared.LifecycleConfigurationDescription
	StatusCode                        int
	RawResponse                       *http.Response
}
