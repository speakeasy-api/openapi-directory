<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListAccountUsageRecordRequest
{
    /**
     * Only include usage that has occurred on or before this date. Format is [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).
     * 
     * @var ?\DateTime $end
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=End,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $end = null;
    
    /**
     * How to summarize the usage by time. Can be: `daily`, `hourly`, or `all`. A value of `all` returns one Usage Record that describes the usage for the entire period.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AccountUsageRecordEnumGranularityEnum $granularity
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Granularity')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AccountUsageRecordEnumGranularityEnum $granularity = null;
    
    /**
     * The page index. This value is simply for client state.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Page')]
    public ?int $page = null;
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageSize')]
    public ?int $pageSize = null;
    
    /**
     * The page token. This is provided by the API.
     * 
     * @var ?string $pageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageToken')]
    public ?string $pageToken = null;
    
    /**
     * Only include usage that has occurred on or after this date. Format is [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).
     * 
     * @var ?\DateTime $start
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Start,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $start = null;
    
	public function __construct()
	{
		$this->end = null;
		$this->granularity = null;
		$this->page = null;
		$this->pageSize = null;
		$this->pageToken = null;
		$this->start = null;
	}
}
