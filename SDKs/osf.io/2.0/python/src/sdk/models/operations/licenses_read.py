"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class LicensesReadRequest:
    
    license_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'license_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the license."""  
    

@dataclasses.dataclass
class LicensesReadLicenseAttributes:
    r"""The properties of the license."""
    
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the license."""  
    required_fields: Optional[list[str]] = dataclasses.field(default=None)
    r"""Fields required for this license (provided to help front-end validators). Maps to properties on the NodeLicense model."""  
    text: Optional[str] = dataclasses.field(default=None)
    r"""Full text of the license."""  
    

@dataclasses.dataclass
class LicensesReadLicenseLinks:
    r"""URLs to alternative representations of the license."""
    
    self_: Optional[str] = dataclasses.field(default=None)
    r"""A link to the detail page for the license."""  
    

@dataclasses.dataclass
class LicensesReadLicense:
    r"""OK"""
    
    attributes: Optional[LicensesReadLicenseAttributes] = dataclasses.field(default=None)
    r"""The properties of the license."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""The identifier of the license."""  
    links: Optional[LicensesReadLicenseLinks] = dataclasses.field(default=None)
    r"""URLs to alternative representations of the license."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""The type identifier of the license (`license`)."""  
    

@dataclasses.dataclass
class LicensesReadResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    