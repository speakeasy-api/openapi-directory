<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * NodesDraftRegistrationsPartialUpdateDraftRegistrationAttributesInput - The properties of the Draft Registration entity.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class NodesDraftRegistrationsPartialUpdateDraftRegistrationAttributesInput
{
    /**
     * The category of the Draft Registration.
     * 
     * @var ?string $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $category = null;
    
    /**
     * The description of the Draft Registration.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_license')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\NodesDraftRegistrationsPartialUpdateDraftRegistrationAttributesNodeLicense')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NodesDraftRegistrationsPartialUpdateDraftRegistrationAttributesNodeLicense $nodeLicense = null;
    
    /**
     * This is a legacy format for `registration_responses`.
     * 
     * @var ?array<string, mixed> $registrationMetadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('registration_metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $registrationMetadata = null;
    
    /**
     * A dictionary of question IDs and responses from the registration schema.
     * 
     * @var ?array<string, mixed> $registrationResponses
     */
	#[\JMS\Serializer\Annotation\SerializedName('registration_responses')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $registrationResponses = null;
    
    /**
     * The searchable tags of the Draft Registration.
     * 
     * @var ?array<string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * The title of the Draft Registration.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->category = null;
		$this->description = null;
		$this->nodeLicense = null;
		$this->registrationMetadata = null;
		$this->registrationResponses = null;
		$this->tags = null;
		$this->title = null;
	}
}
