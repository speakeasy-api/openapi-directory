"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import oneannouncements_post_responses_400_content_application_1json_schema as shared_oneannouncements_post_responses_400_content_application_1json_schema
from ..shared import oneannouncements_post_responses_403_content_application_1json_schema as shared_oneannouncements_post_responses_403_content_application_1json_schema
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostCallsRequestBodyOptionsPlayAudio:
    
    announcement_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('announcement_id'), 'exclude': lambda f: f is None }})
    r"""Id of announcement audio file which will play to the a leg of the call, i.e. the person that must answer the call first. This plays one or more audio files you have uploaded. The use case being you want to play audio to let the a leg of the call know what the call is about. Imagine a call center agent needs to know that they are calling a customer. These audio files may play a customer account number to the agent for example.
    Have lots of audio files in this array to build up a message
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostCallsRequestBodyOptions:
    
    a_leg_caller_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('a_leg_caller_id'), 'exclude': lambda f: f is None }})
    r"""Change the caller ID shown to the a leg (from)"""  
    a_leg_only: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('a_leg_only'), 'exclude': lambda f: f is None }})
    r"""Do not ring the \\"to\\" number, only the from and show \\"caller_id\\" """  
    cancel_key: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancel_key'), 'exclude': lambda f: f is None }})
    r"""The phone keypad number to press to hangup the call and not place the second leg of the call. Default 2"""  
    connect_key: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connect_key'), 'exclude': lambda f: f is None }})
    r"""The phone keypad number to press in order to place the call to the b leg, i.e. press to confirm. Default 1"""  
    play_audio: Optional[list[PostCallsRequestBodyOptionsPlayAudio]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('play_audio'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostCallsRequestBody:
    r"""Create a phone call and play announcement audio to the \\"from\\" party (a leg)"""
    
    caller_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caller_id') }})
    r"""The caller ID to show the b leg (to)."""  
    from_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from') }})
    r"""The person making the call, i.e the a leg. This person must answer in order for the b leg to be rung"""  
    to: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to') }})
    r"""The b leg of the call, i.e. the person you are calling"""  
    announcement_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('announcement_at'), 'exclude': lambda f: f is None }})
    r"""is in seconds. Just take 120 secs away from the hangup_at time for a announcement to be played 2 mins before the end of the call. If provided announcement_id is required"""  
    announcement_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('announcement_id'), 'exclude': lambda f: f is None }})
    r"""is the announcement id (from https://api.surevoip.co.uk/customers/{customer}/announcements/{announcement_id}) to play for example “your call is about to end in 2 mins”. We only allow a wav file, but we may allow \\"words\\", which will use SureVoIP provided text to speech. If provided announcement_at is required"""  
    hangup_announcement_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hangup_announcement_id'), 'exclude': lambda f: f is None }})
    r"""the id of a thank you announcement or similar. You can manage these as you would with any RESTful resource at https://api.surevoip.co.uk/announcements and https://api.surevoip.co.uk/customers/{customer}/announcements/{announcement_id}. It will be played at the end of the call at hangup. If provided hangup_at is required."""  
    hangup_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hangup_at'), 'exclude': lambda f: f is None }})
    r"""length in seconds from when the call is *answered* to when the system hangs up. If \\"hangup_announcement_id\\" is present, this will be played at hangup"""  
    options: Optional[PostCallsRequestBodyOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostCalls202ApplicationJSON:
    r"""Call creation request accepted."""
    
    call: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Call'), 'exclude': lambda f: f is None }})  
    location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Location'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostCallsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    oneannouncements_post_responses_400_content_application_1json_schema: Optional[shared_oneannouncements_post_responses_400_content_application_1json_schema.OneannouncementsPostResponses400ContentApplication1jsonSchema] = dataclasses.field(default=None)
    r"""Bad data"""  
    oneannouncements_post_responses_403_content_application_1json_schema: Optional[shared_oneannouncements_post_responses_403_content_application_1json_schema.OneannouncementsPostResponses403ContentApplication1jsonSchema] = dataclasses.field(default=None)
    r"""Only customer accounts can create calls."""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    post_calls_202_application_json_object: Optional[PostCalls202ApplicationJSON] = dataclasses.field(default=None)
    r"""Call creation request accepted."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    