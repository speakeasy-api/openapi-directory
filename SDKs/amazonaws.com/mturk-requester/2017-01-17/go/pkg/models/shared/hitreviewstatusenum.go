// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HITReviewStatusEnum string

const (
	HITReviewStatusEnumNotReviewed           HITReviewStatusEnum = "NotReviewed"
	HITReviewStatusEnumMarkedForReview       HITReviewStatusEnum = "MarkedForReview"
	HITReviewStatusEnumReviewedAppropriate   HITReviewStatusEnum = "ReviewedAppropriate"
	HITReviewStatusEnumReviewedInappropriate HITReviewStatusEnum = "ReviewedInappropriate"
)

func (e HITReviewStatusEnum) ToPointer() *HITReviewStatusEnum {
	return &e
}

func (e *HITReviewStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NotReviewed":
		fallthrough
	case "MarkedForReview":
		fallthrough
	case "ReviewedAppropriate":
		fallthrough
	case "ReviewedInappropriate":
		*e = HITReviewStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HITReviewStatusEnum: %v", v)
	}
}
