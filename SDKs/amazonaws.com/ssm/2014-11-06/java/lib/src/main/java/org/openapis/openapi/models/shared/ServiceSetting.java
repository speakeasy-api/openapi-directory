/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ServiceSetting - &lt;p&gt;The service setting data structure.&lt;/p&gt; &lt;p&gt; &lt;code&gt;ServiceSetting&lt;/code&gt; is an account-level setting for an Amazon Web Services service. This setting defines how a user interacts with or uses a service or a feature of a service. For example, if an Amazon Web Services service charges money to the account based on feature or service usage, then the Amazon Web Services service team might create a default setting of "false". This means the user can't use this feature unless they change the setting to "true" and intentionally opt in for a paid feature.&lt;/p&gt; &lt;p&gt;Services map a &lt;code&gt;SettingId&lt;/code&gt; object to a setting value. Amazon Web Services services teams define the default value for a &lt;code&gt;SettingId&lt;/code&gt;. You can't create a new &lt;code&gt;SettingId&lt;/code&gt;, but you can overwrite the default value if you have the &lt;code&gt;ssm:UpdateServiceSetting&lt;/code&gt; permission for the setting. Use the &lt;a&gt;UpdateServiceSetting&lt;/a&gt; API operation to change the default setting. Or, use the &lt;a&gt;ResetServiceSetting&lt;/a&gt; to change the value back to the original value defined by the Amazon Web Services service team.&lt;/p&gt;
 */
public class ServiceSetting {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ARN")
    public String arn;
    public ServiceSetting withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedDate")
    public OffsetDateTime lastModifiedDate;
    public ServiceSetting withLastModifiedDate(OffsetDateTime lastModifiedDate) {
        this.lastModifiedDate = lastModifiedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastModifiedUser")
    public String lastModifiedUser;
    public ServiceSetting withLastModifiedUser(String lastModifiedUser) {
        this.lastModifiedUser = lastModifiedUser;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SettingId")
    public String settingId;
    public ServiceSetting withSettingId(String settingId) {
        this.settingId = settingId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SettingValue")
    public String settingValue;
    public ServiceSetting withSettingValue(String settingValue) {
        this.settingValue = settingValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public ServiceSetting withStatus(String status) {
        this.status = status;
        return this;
    }
    
}
