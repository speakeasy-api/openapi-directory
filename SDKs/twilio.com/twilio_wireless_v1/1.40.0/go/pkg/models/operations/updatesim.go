// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateSimServerList = []string{
	"https://wireless.twilio.com",
}

type UpdateSimSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateSimPathParams struct {
	// The SID or the `unique_name` of the Sim resource to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

// UpdateSimUpdateSimRequestCallbackMethodEnum - The HTTP method we should use to call `callback_url`. Can be: `POST` or `GET`. The default is `POST`.
type UpdateSimUpdateSimRequestCallbackMethodEnum string

const (
	UpdateSimUpdateSimRequestCallbackMethodEnumHead   UpdateSimUpdateSimRequestCallbackMethodEnum = "HEAD"
	UpdateSimUpdateSimRequestCallbackMethodEnumGet    UpdateSimUpdateSimRequestCallbackMethodEnum = "GET"
	UpdateSimUpdateSimRequestCallbackMethodEnumPost   UpdateSimUpdateSimRequestCallbackMethodEnum = "POST"
	UpdateSimUpdateSimRequestCallbackMethodEnumPatch  UpdateSimUpdateSimRequestCallbackMethodEnum = "PATCH"
	UpdateSimUpdateSimRequestCallbackMethodEnumPut    UpdateSimUpdateSimRequestCallbackMethodEnum = "PUT"
	UpdateSimUpdateSimRequestCallbackMethodEnumDelete UpdateSimUpdateSimRequestCallbackMethodEnum = "DELETE"
)

func (e *UpdateSimUpdateSimRequestCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateSimUpdateSimRequestCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSimUpdateSimRequestCallbackMethodEnum: %s", s)
	}
}

// UpdateSimUpdateSimRequestCommandsCallbackMethodEnum - The HTTP method we should use to call `commands_callback_url`. Can be: `POST` or `GET`. The default is `POST`.
type UpdateSimUpdateSimRequestCommandsCallbackMethodEnum string

const (
	UpdateSimUpdateSimRequestCommandsCallbackMethodEnumHead   UpdateSimUpdateSimRequestCommandsCallbackMethodEnum = "HEAD"
	UpdateSimUpdateSimRequestCommandsCallbackMethodEnumGet    UpdateSimUpdateSimRequestCommandsCallbackMethodEnum = "GET"
	UpdateSimUpdateSimRequestCommandsCallbackMethodEnumPost   UpdateSimUpdateSimRequestCommandsCallbackMethodEnum = "POST"
	UpdateSimUpdateSimRequestCommandsCallbackMethodEnumPatch  UpdateSimUpdateSimRequestCommandsCallbackMethodEnum = "PATCH"
	UpdateSimUpdateSimRequestCommandsCallbackMethodEnumPut    UpdateSimUpdateSimRequestCommandsCallbackMethodEnum = "PUT"
	UpdateSimUpdateSimRequestCommandsCallbackMethodEnumDelete UpdateSimUpdateSimRequestCommandsCallbackMethodEnum = "DELETE"
)

func (e *UpdateSimUpdateSimRequestCommandsCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateSimUpdateSimRequestCommandsCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSimUpdateSimRequestCommandsCallbackMethodEnum: %s", s)
	}
}

// UpdateSimUpdateSimRequestSmsFallbackMethodEnum - The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`. Default is `POST`.
type UpdateSimUpdateSimRequestSmsFallbackMethodEnum string

const (
	UpdateSimUpdateSimRequestSmsFallbackMethodEnumHead   UpdateSimUpdateSimRequestSmsFallbackMethodEnum = "HEAD"
	UpdateSimUpdateSimRequestSmsFallbackMethodEnumGet    UpdateSimUpdateSimRequestSmsFallbackMethodEnum = "GET"
	UpdateSimUpdateSimRequestSmsFallbackMethodEnumPost   UpdateSimUpdateSimRequestSmsFallbackMethodEnum = "POST"
	UpdateSimUpdateSimRequestSmsFallbackMethodEnumPatch  UpdateSimUpdateSimRequestSmsFallbackMethodEnum = "PATCH"
	UpdateSimUpdateSimRequestSmsFallbackMethodEnumPut    UpdateSimUpdateSimRequestSmsFallbackMethodEnum = "PUT"
	UpdateSimUpdateSimRequestSmsFallbackMethodEnumDelete UpdateSimUpdateSimRequestSmsFallbackMethodEnum = "DELETE"
)

func (e *UpdateSimUpdateSimRequestSmsFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateSimUpdateSimRequestSmsFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSimUpdateSimRequestSmsFallbackMethodEnum: %s", s)
	}
}

// UpdateSimUpdateSimRequestSmsMethodEnum - The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`. Default is `POST`.
type UpdateSimUpdateSimRequestSmsMethodEnum string

const (
	UpdateSimUpdateSimRequestSmsMethodEnumHead   UpdateSimUpdateSimRequestSmsMethodEnum = "HEAD"
	UpdateSimUpdateSimRequestSmsMethodEnumGet    UpdateSimUpdateSimRequestSmsMethodEnum = "GET"
	UpdateSimUpdateSimRequestSmsMethodEnumPost   UpdateSimUpdateSimRequestSmsMethodEnum = "POST"
	UpdateSimUpdateSimRequestSmsMethodEnumPatch  UpdateSimUpdateSimRequestSmsMethodEnum = "PATCH"
	UpdateSimUpdateSimRequestSmsMethodEnumPut    UpdateSimUpdateSimRequestSmsMethodEnum = "PUT"
	UpdateSimUpdateSimRequestSmsMethodEnumDelete UpdateSimUpdateSimRequestSmsMethodEnum = "DELETE"
)

func (e *UpdateSimUpdateSimRequestSmsMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateSimUpdateSimRequestSmsMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSimUpdateSimRequestSmsMethodEnum: %s", s)
	}
}

// UpdateSimUpdateSimRequestVoiceFallbackMethodEnum - Deprecated.
type UpdateSimUpdateSimRequestVoiceFallbackMethodEnum string

const (
	UpdateSimUpdateSimRequestVoiceFallbackMethodEnumHead   UpdateSimUpdateSimRequestVoiceFallbackMethodEnum = "HEAD"
	UpdateSimUpdateSimRequestVoiceFallbackMethodEnumGet    UpdateSimUpdateSimRequestVoiceFallbackMethodEnum = "GET"
	UpdateSimUpdateSimRequestVoiceFallbackMethodEnumPost   UpdateSimUpdateSimRequestVoiceFallbackMethodEnum = "POST"
	UpdateSimUpdateSimRequestVoiceFallbackMethodEnumPatch  UpdateSimUpdateSimRequestVoiceFallbackMethodEnum = "PATCH"
	UpdateSimUpdateSimRequestVoiceFallbackMethodEnumPut    UpdateSimUpdateSimRequestVoiceFallbackMethodEnum = "PUT"
	UpdateSimUpdateSimRequestVoiceFallbackMethodEnumDelete UpdateSimUpdateSimRequestVoiceFallbackMethodEnum = "DELETE"
)

func (e *UpdateSimUpdateSimRequestVoiceFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateSimUpdateSimRequestVoiceFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSimUpdateSimRequestVoiceFallbackMethodEnum: %s", s)
	}
}

// UpdateSimUpdateSimRequestVoiceMethodEnum - Deprecated.
type UpdateSimUpdateSimRequestVoiceMethodEnum string

const (
	UpdateSimUpdateSimRequestVoiceMethodEnumHead   UpdateSimUpdateSimRequestVoiceMethodEnum = "HEAD"
	UpdateSimUpdateSimRequestVoiceMethodEnumGet    UpdateSimUpdateSimRequestVoiceMethodEnum = "GET"
	UpdateSimUpdateSimRequestVoiceMethodEnumPost   UpdateSimUpdateSimRequestVoiceMethodEnum = "POST"
	UpdateSimUpdateSimRequestVoiceMethodEnumPatch  UpdateSimUpdateSimRequestVoiceMethodEnum = "PATCH"
	UpdateSimUpdateSimRequestVoiceMethodEnumPut    UpdateSimUpdateSimRequestVoiceMethodEnum = "PUT"
	UpdateSimUpdateSimRequestVoiceMethodEnumDelete UpdateSimUpdateSimRequestVoiceMethodEnum = "DELETE"
)

func (e *UpdateSimUpdateSimRequestVoiceMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateSimUpdateSimRequestVoiceMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSimUpdateSimRequestVoiceMethodEnum: %s", s)
	}
}

type UpdateSimUpdateSimRequest struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the Sim resource should belong. The Account SID can only be that of the requesting Account or that of a [Subaccount](https://www.twilio.com/docs/iam/api/subaccounts) of the requesting Account. Only valid when the Sim resource's status is `new`. For more information, see the [Move SIMs between Subaccounts documentation](https://www.twilio.com/docs/wireless/api/sim-resource#move-sims-between-subaccounts).
	AccountSid *string `form:"name=AccountSid"`
	// The HTTP method we should use to call `callback_url`. Can be: `POST` or `GET`. The default is `POST`.
	CallbackMethod *UpdateSimUpdateSimRequestCallbackMethodEnum `form:"name=CallbackMethod"`
	// The URL we should call using the `callback_url` when the SIM has finished updating. When the SIM transitions from `new` to `ready` or from any status to `deactivated`, we call this URL when the status changes to an intermediate status (`ready` or `deactivated`) and again when the status changes to its final status (`active` or `canceled`).
	CallbackURL *string `form:"name=CallbackUrl"`
	// The HTTP method we should use to call `commands_callback_url`. Can be: `POST` or `GET`. The default is `POST`.
	CommandsCallbackMethod *UpdateSimUpdateSimRequestCommandsCallbackMethodEnum `form:"name=CommandsCallbackMethod"`
	// The URL we should call using the `commands_callback_method` when the SIM sends a [Command](https://www.twilio.com/docs/wireless/api/command-resource). Your server should respond with an HTTP status code in the 200 range; any response body is ignored.
	CommandsCallbackURL *string `form:"name=CommandsCallbackUrl"`
	// A descriptive string that you create to describe the Sim resource. It does not need to be unique.
	FriendlyName *string `form:"name=FriendlyName"`
	// The SID or unique name of the [RatePlan resource](https://www.twilio.com/docs/wireless/api/rateplan-resource) to which the Sim resource should be assigned.
	RatePlan    *string                        `form:"name=RatePlan"`
	ResetStatus *shared.SimEnumResetStatusEnum `form:"name=ResetStatus"`
	// The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`. Default is `POST`.
	SmsFallbackMethod *UpdateSimUpdateSimRequestSmsFallbackMethodEnum `form:"name=SmsFallbackMethod"`
	// The URL we should call using the `sms_fallback_method` when an error occurs while retrieving or executing the TwiML requested from `sms_url`.
	SmsFallbackURL *string `form:"name=SmsFallbackUrl"`
	// The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`. Default is `POST`.
	SmsMethod *UpdateSimUpdateSimRequestSmsMethodEnum `form:"name=SmsMethod"`
	// The URL we should call using the `sms_method` when the SIM-connected device sends an SMS message that is not a [Command](https://www.twilio.com/docs/wireless/api/command-resource).
	SmsURL *string                   `form:"name=SmsUrl"`
	Status *shared.SimEnumStatusEnum `form:"name=Status"`
	// An application-defined string that uniquely identifies the resource. It can be used in place of the `sid` in the URL path to address the resource.
	UniqueName *string `form:"name=UniqueName"`
	// Deprecated.
	VoiceFallbackMethod *UpdateSimUpdateSimRequestVoiceFallbackMethodEnum `form:"name=VoiceFallbackMethod"`
	// Deprecated.
	VoiceFallbackURL *string `form:"name=VoiceFallbackUrl"`
	// Deprecated.
	VoiceMethod *UpdateSimUpdateSimRequestVoiceMethodEnum `form:"name=VoiceMethod"`
	// Deprecated.
	VoiceURL *string `form:"name=VoiceUrl"`
}

type UpdateSimRequest struct {
	PathParams UpdateSimPathParams
	Request    *UpdateSimUpdateSimRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateSimSecurity
	ServerURL  *string
}

type UpdateSimResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	WirelessV1Sim *shared.WirelessV1Sim
}
