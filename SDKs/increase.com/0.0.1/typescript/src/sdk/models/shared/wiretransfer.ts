/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.
 */
export class WireTransferTransferApproval extends SpeakeasyBase {
  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was approved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approved_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  approvedAt: Date;
}

/**
 * If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.
 */
export class WireTransferTransferCancellation extends SpeakeasyBase {
  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Transfer was canceled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canceled_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  canceledAt: Date;
}

/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.
 */
export enum WireTransferCurrencyEnum {
  Cad = "CAD",
  Chf = "CHF",
  Eur = "EUR",
  Gbp = "GBP",
  Jpy = "JPY",
  Usd = "USD",
}

/**
 * The transfer's network.
 */
export enum WireTransferNetworkEnum {
  Wire = "wire",
}

/**
 * If your transfer is reversed, this will contain details of the reversal.
 */
export class WireTransferInboundWireReversal extends SpeakeasyBase {
  /**
   * The amount that was reversed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * The description on the reversal message from Fedwire.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Additional financial institution information included in the wire reversal.
   */
  @SpeakeasyMetadata()
  @Expose({
    name: "financial_institution_to_financial_institution_information",
  })
  financialInstitutionToFinancialInstitutionInformation: string;

  /**
   * The Fedwire cycle date for the wire reversal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "input_cycle_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  inputCycleDate: Date;

  /**
   * The Fedwire transaction identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "input_message_accountability_data" })
  inputMessageAccountabilityData: string;

  /**
   * The Fedwire sequence number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "input_sequence_number" })
  inputSequenceNumber: string;

  /**
   * The Fedwire input source identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "input_source" })
  inputSource: string;

  /**
   * The Fedwire cycle date for the wire transfer that was reversed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_message_input_cycle_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  previousMessageInputCycleDate: Date;

  /**
   * The Fedwire transaction identifier for the wire transfer that was reversed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_message_input_message_accountability_data" })
  previousMessageInputMessageAccountabilityData: string;

  /**
   * The Fedwire sequence number for the wire transfer that was reversed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_message_input_sequence_number" })
  previousMessageInputSequenceNumber: string;

  /**
   * The Fedwire input source identifier for the wire transfer that was reversed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_message_input_source" })
  previousMessageInputSource: string;

  /**
   * Information included in the wire reversal for the receiving financial institution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiver_financial_institution_information" })
  receiverFinancialInstitutionInformation: string;
}

/**
 * The lifecycle status of the transfer.
 */
export enum WireTransferStatusEnum {
  Canceled = "canceled",
  RequiresAttention = "requires_attention",
  PendingApproval = "pending_approval",
  Rejected = "rejected",
  Reversed = "reversed",
  Complete = "complete",
  PendingCreating = "pending_creating",
}

/**
 * After the transfer is submitted to Fedwire, this will contain supplemental details.
 */
export class WireTransferWireTransferSubmission extends SpeakeasyBase {
  /**
   * The accountability data for the submission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "input_message_accountability_data" })
  inputMessageAccountabilityData: string;

  /**
   * When this wire transfer was submitted to Fedwire.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submitted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submittedAt: Date;
}

/**
 * A constant representing the object's type. For this resource it will always be `wire_transfer`.
 */
export enum WireTransferTypeEnum {
  WireTransfer = "wire_transfer",
}

/**
 * Wire transfers move funds between your Increase account and any other account accessible by Fedwire.
 */
export class WireTransfer extends SpeakeasyBase {
  /**
   * The Account to which the transfer belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: string;

  /**
   * The destination account number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_number" })
  accountNumber: string;

  /**
   * The transfer amount in USD cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approval" })
  @Type(() => WireTransferTransferApproval)
  approval: WireTransferTransferApproval;

  /**
   * The beneficiary's address line 1.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beneficiary_address_line1" })
  beneficiaryAddressLine1: string;

  /**
   * The beneficiary's address line 2.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beneficiary_address_line2" })
  beneficiaryAddressLine2: string;

  /**
   * The beneficiary's address line 3.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beneficiary_address_line3" })
  beneficiaryAddressLine3: string;

  /**
   * The beneficiary's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beneficiary_name" })
  beneficiaryName: string;

  /**
   * If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cancellation" })
  @Type(() => WireTransferTransferCancellation)
  cancellation: WireTransferTransferCancellation;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For wire transfers this is always equal to `usd`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: WireTransferCurrencyEnum;

  /**
   * The identifier of the External Account the transfer was made to, if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "external_account_id" })
  externalAccountId: string;

  /**
   * The wire transfer's identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The message that will show on the recipient's bank statement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message_to_recipient" })
  messageToRecipient: string;

  /**
   * The transfer's network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network: WireTransferNetworkEnum;

  /**
   * If your transfer is reversed, this will contain details of the reversal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reversal" })
  @Type(() => WireTransferInboundWireReversal)
  reversal: WireTransferInboundWireReversal;

  /**
   * The American Bankers' Association (ABA) Routing Transit Number (RTN).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "routing_number" })
  routingNumber: string;

  /**
   * The lifecycle status of the transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: WireTransferStatusEnum;

  /**
   * After the transfer is submitted to Fedwire, this will contain supplemental details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submission" })
  @Type(() => WireTransferWireTransferSubmission)
  submission: WireTransferWireTransferSubmission;

  /**
   * If the transfer was created from a template, this will be the template's ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template_id" })
  templateId: string;

  /**
   * The ID for the transaction funding the transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;

  /**
   * A constant representing the object's type. For this resource it will always be `wire_transfer`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: WireTransferTypeEnum;
}
