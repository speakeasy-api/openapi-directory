/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Notification } from "./notification";
import { Expose, Type } from "class-transformer";

/**
 * Response object for notifications collection.
 */
export class NotificationCollectionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Notification })
  @Expose({ name: "data" })
  @Type(() => Notification)
  data?: Notification[];

  @SpeakeasyMetadata()
  @Expose({ name: "included" })
  included?: any[];

  /**
   * Http status code of the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "responseStatus" })
  responseStatus?: number;

  /**
   * Number of returned results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnedResults" })
  returnedResults?: number;

  /**
   * Total results found.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalResults" })
  totalResults?: number;
}
