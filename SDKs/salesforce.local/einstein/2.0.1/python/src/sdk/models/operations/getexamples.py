"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import examplelist as shared_examplelist
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetExamplesSecurity:
    
    bearer_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class GetExamplesSourceEnum(str, Enum):
    r"""return examples that were created in the dataset as feedback"""
    ALL = 'all'
    FEEDBACK = 'feedback'
    UPLOAD = 'upload'


@dataclasses.dataclass
class GetExamplesRequest:
    
    dataset_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'datasetId', 'style': 'simple', 'explode': False }})
    r"""Dataset Id"""  
    count: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})
    r"""Number of examples to return."""  
    offset: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Index of the example from which you want to start paging."""  
    source: Optional[GetExamplesSourceEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'source', 'style': 'form', 'explode': True }})
    r"""return examples that were created in the dataset as feedback"""  
    

@dataclasses.dataclass
class GetExamplesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    example_list: Optional[shared_examplelist.ExampleList] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    