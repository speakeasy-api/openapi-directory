"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import failedbatchitem as shared_failedbatchitem
from ..shared import upsertrowsresult as shared_upsertrowsresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchUpsertTableRowsResult:
    r"""Success"""
    
    rows: dict[str, shared_upsertrowsresult.UpsertRowsResult] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rows') }})  
    workbook_cursor: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workbookCursor') }})  
    failed_batch_items: Optional[list[shared_failedbatchitem.FailedBatchItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failedBatchItems'), 'exclude': lambda f: f is None }})  
    