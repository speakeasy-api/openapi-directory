/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PiiTypeEnum } from "./piitypeenum";
import { Expose } from "class-transformer";

/**
 * Specifies a transform that identifies, removes or masks PII data.
 */
export class PIIDetection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EntityTypesToDetect" })
  entityTypesToDetect: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Inputs" })
  inputs: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaskValue" })
  maskValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputColumnName" })
  outputColumnName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PiiType" })
  piiType: PiiTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SampleFraction" })
  sampleFraction?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ThresholdFraction" })
  thresholdFraction?: number;
}
