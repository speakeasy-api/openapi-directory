/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * InvoiceItem - Container for custom fields of an Invoice Item object.
 * 
 */
public class InvoiceItem {
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public InvoiceItem withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the invoice item's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public InvoiceItem withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Date when the invoice item was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public InvoiceItem withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * The accounting code associated with the invoice item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountingCode")
    public String accountingCode;
    public InvoiceItem withAccountingCode(String accountingCode) {
        this.accountingCode = accountingCode;
        return this;
    }
    
    /**
     * The unique ID of the invoice item that the discount charge is applied to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedToItemId")
    public String appliedToItemId;
    public InvoiceItem withAppliedToItemId(String appliedToItemId) {
        this.appliedToItemId = appliedToItemId;
        return this;
    }
    
    /**
     * The amount of the invoice item that is available to credit.        
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableToCreditAmount")
    public Double availableToCreditAmount;
    public InvoiceItem withAvailableToCreditAmount(Double availableToCreditAmount) {
        this.availableToCreditAmount = availableToCreditAmount;
        return this;
    }
    
    /**
     * The balance of the invoice item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balance")
    public String balance;
    public InvoiceItem withBalance(String balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * The booking reference of the invoice item.
     * 
     * **Note:** This field is only available if you have Unified Invoicing enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookingReference")
    public String bookingReference;
    public InvoiceItem withBookingReference(String bookingReference) {
        this.bookingReference = bookingReference;
        return this;
    }
    
    /**
     * The amount of the charge. 
     * 
     * This amount does not include taxes regardless if the charge's tax mode is inclusive or exclusive.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeAmount")
    public String chargeAmount;
    public InvoiceItem withChargeAmount(String chargeAmount) {
        this.chargeAmount = chargeAmount;
        return this;
    }
    
    /**
     * The description of the charge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeDescription")
    public String chargeDescription;
    public InvoiceItem withChargeDescription(String chargeDescription) {
        this.chargeDescription = chargeDescription;
        return this;
    }
    
    /**
     * The unique ID of the charge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeId")
    public String chargeId;
    public InvoiceItem withChargeId(String chargeId) {
        this.chargeId = chargeId;
        return this;
    }
    
    /**
     * The name of the charge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeName")
    public String chargeName;
    public InvoiceItem withChargeName(String chargeName) {
        this.chargeName = chargeName;
        return this;
    }
    
    /**
     * The deferred revenue accounting code associated with the invoice item.
     * 
     * **Note:** This field is only available if you have Zuora Finance enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deferredRevenueAccountingCode")
    public String deferredRevenueAccountingCode;
    public InvoiceItem withDeferredRevenueAccountingCode(String deferredRevenueAccountingCode) {
        this.deferredRevenueAccountingCode = deferredRevenueAccountingCode;
        return this;
    }
    
    /**
     * The description of the invoice item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public InvoiceItem withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Item ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public InvoiceItem withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The type of the invoice item.
     * 
     * **Note:** This field is only available if you have Unified Invoicing enabled. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemType")
    public String itemType;
    public InvoiceItem withItemType(String itemType) {
        this.itemType = itemType;
        return this;
    }
    
    /**
     * Name of the product associated with this item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productName")
    public String productName;
    public InvoiceItem withProductName(String productName) {
        this.productName = productName;
        return this;
    }
    
    /**
     * The ID of the product rate plan charge that the invoice item is created from.
     * 
     * **Note:** This field is only available if you have Unified Invoicing enabled. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productRatePlanChargeId")
    public String productRatePlanChargeId;
    public InvoiceItem withProductRatePlanChargeId(String productRatePlanChargeId) {
        this.productRatePlanChargeId = productRatePlanChargeId;
        return this;
    }
    
    /**
     * The purchase order number associated with the invoice item.
     * 
     * **Note:** This field is only available if you have Unified Invoicing enabled. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseOrderNumber")
    public String purchaseOrderNumber;
    public InvoiceItem withPurchaseOrderNumber(String purchaseOrderNumber) {
        this.purchaseOrderNumber = purchaseOrderNumber;
        return this;
    }
    
    /**
     * The quantity of this item, in the configured unit of measure for the charge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public String quantity;
    public InvoiceItem withQuantity(String quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * The recognized revenue accounting code associated with the invoice item.
     * 
     * **Note:** This field is only available if you have Zuora Finance enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recognizedRevenueAccountingCode")
    public String recognizedRevenueAccountingCode;
    public InvoiceItem withRecognizedRevenueAccountingCode(String recognizedRevenueAccountingCode) {
        this.recognizedRevenueAccountingCode = recognizedRevenueAccountingCode;
        return this;
    }
    
    /**
     * The revenue recognition code.
     * 
     * **Note:** This field is only available if you have Unified Invoicing enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revRecCode")
    public String revRecCode;
    public InvoiceItem withRevRecCode(String revRecCode) {
        this.revRecCode = revRecCode;
        return this;
    }
    
    /**
     * The date when revenue recognition is triggered.
     * 
     * **Note:** This field is only available if you have Unified Invoicing enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revRecTriggerCondition")
    public InvoiceItemRevRecTriggerConditionEnum revRecTriggerCondition;
    public InvoiceItem withRevRecTriggerCondition(InvoiceItemRevRecTriggerConditionEnum revRecTriggerCondition) {
        this.revRecTriggerCondition = revRecTriggerCondition;
        return this;
    }
    
    /**
     * The tevenue recognition rule of the invoice item.
     * 
     * **Note:** This field is only available if you have Zuora Finance enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revenueRecognitionRuleName")
    public String revenueRecognitionRuleName;
    public InvoiceItem withRevenueRecognitionRuleName(String revenueRecognitionRuleName) {
        this.revenueRecognitionRuleName = revenueRecognitionRuleName;
        return this;
    }
    
    /**
     * The end date of the service period for this item, i.e., the last day of the service period, as _yyyy-mm-dd_.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceEndDate")
    public LocalDate serviceEndDate;
    public InvoiceItem withServiceEndDate(LocalDate serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
        return this;
    }
    
    /**
     * The start date of the service period for this item, as _yyyy-mm-dd_. For a one-time fee item, the date of the charge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceStartDate")
    public LocalDate serviceStartDate;
    public InvoiceItem withServiceStartDate(LocalDate serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
        return this;
    }
    
    /**
     * The SKU of the invoice item.
     * 
     * **Note:** This field is only available if you have Unified Invoicing enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;
    public InvoiceItem withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * The ID of the subscription for this item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public InvoiceItem withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * The name of the subscription for this item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionName")
    public String subscriptionName;
    public InvoiceItem withSubscriptionName(String subscriptionName) {
        this.subscriptionName = subscriptionName;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public InvoiceItem withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Tax applied to the charge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxAmount")
    public String taxAmount;
    public InvoiceItem withTaxAmount(String taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * The tax code of the invoice item.
     * **Note** Only when taxation feature is enabled, this field can be presented.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxCode")
    public String taxCode;
    public InvoiceItem withTaxCode(String taxCode) {
        this.taxCode = taxCode;
        return this;
    }
    
    /**
     * The tax mode of the invoice item.
     * **Note** Only when taxation feature is enabled, this field can be presented.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxMode")
    public String taxMode;
    public InvoiceItem withTaxMode(String taxMode) {
        this.taxMode = taxMode;
        return this;
    }
    
    /**
     * Container for the taxation items of the invoice item. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxationItems")
    public InvoiceItemTaxationItems taxationItems;
    public InvoiceItem withTaxationItems(InvoiceItemTaxationItems taxationItems) {
        this.taxationItems = taxationItems;
        return this;
    }
    
    /**
     * Unit used to measure consumption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOfMeasure")
    public String unitOfMeasure;
    public InvoiceItem withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
    /**
     * The per-unit price of the invoice item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPrice")
    public Double unitPrice;
    public InvoiceItem withUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
}
