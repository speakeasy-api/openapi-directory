// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExtensionStatusEnum string

const (
	ExtensionStatusEnumExtended       ExtensionStatusEnum = "EXTENDED"
	ExtensionStatusEnumExtensionError ExtensionStatusEnum = "EXTENSION_ERROR"
	ExtensionStatusEnumNotExtended    ExtensionStatusEnum = "NOT_EXTENDED"
)

func (e *ExtensionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXTENDED":
		fallthrough
	case "EXTENSION_ERROR":
		fallthrough
	case "NOT_EXTENDED":
		*e = ExtensionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExtensionStatusEnum: %s", s)
	}
}
