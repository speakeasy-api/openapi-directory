/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GettablePolicyStateValuesEnum } from "./gettablepolicystatevaluesenum";
import { PolicyDetails } from "./policydetails";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  <b>[All policy types]</b> Detailed information about a snapshot, AMI, or event-based lifecycle policy.
 */
export class LifecyclePolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DateCreated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DateModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateModified?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionRoleArn" })
  executionRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PolicyArn" })
  policyArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PolicyDetails" })
  @Type(() => PolicyDetails)
  policyDetails?: PolicyDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "PolicyId" })
  policyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: GettablePolicyStateValuesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
