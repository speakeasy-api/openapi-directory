/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * JobScheduleStatistics - The lifetime resource usage statistics for a job schedule.
 */
public class JobScheduleStatistics {
    /**
     * Gets or sets the total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in all the jobs created under the schedule.
     */
    @JsonProperty("kernelCPUTime")
    public String kernelCPUTime;
    public JobScheduleStatistics withKernelCPUTime(String kernelCPUTime) {
        this.kernelCPUTime = kernelCPUTime;
        return this;
    }
    
    /**
     * Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdateTime")
    public OffsetDateTime lastUpdateTime;
    public JobScheduleStatistics withLastUpdateTime(OffsetDateTime lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }
    
    /**
     * Gets or sets the total number of tasks that failed during the given time range in jobs created under the schedule. A task fails if it exhausts its maximum retry count without returning exit code 0.
     */
    @JsonProperty("numFailedTasks")
    public Long numFailedTasks;
    public JobScheduleStatistics withNumFailedTasks(Long numFailedTasks) {
        this.numFailedTasks = numFailedTasks;
        return this;
    }
    
    /**
     * Gets or sets the total number of tasks successfully completed during the given time range in jobs created under the schedule.  A task completes successfully if it returns exit code 0.
     */
    @JsonProperty("numSucceededTasks")
    public Long numSucceededTasks;
    public JobScheduleStatistics withNumSucceededTasks(Long numSucceededTasks) {
        this.numSucceededTasks = numSucceededTasks;
        return this;
    }
    
    /**
     * Gets or sets the total number of retries during the given time range on all the tasks in jobs created under the schedule.
     */
    @JsonProperty("numTaskRetries")
    public Long numTaskRetries;
    public JobScheduleStatistics withNumTaskRetries(Long numTaskRetries) {
        this.numTaskRetries = numTaskRetries;
        return this;
    }
    
    /**
     * Gets or sets the total amount of data in GiB of I/O read by all the tasks in all the jobs created under the schedule.
     */
    @JsonProperty("readIOGiB")
    public Double readIOGiB;
    public JobScheduleStatistics withReadIOGiB(Double readIOGiB) {
        this.readIOGiB = readIOGiB;
        return this;
    }
    
    /**
     * Gets or sets the total number of I/O read operations performed by all the tasks in all the jobs created under the schedule.
     */
    @JsonProperty("readIOps")
    public Long readIOps;
    public JobScheduleStatistics withReadIOps(Long readIOps) {
        this.readIOps = readIOps;
        return this;
    }
    
    /**
     * Gets or sets the start time of the time range covered by the statistics.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;
    public JobScheduleStatistics withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Gets or sets the URL for the statistics.
     */
    @JsonProperty("url")
    public String url;
    public JobScheduleStatistics withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Gets or sets the total user mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in all the jobs created under the schedule.
     */
    @JsonProperty("userCPUTime")
    public String userCPUTime;
    public JobScheduleStatistics withUserCPUTime(String userCPUTime) {
        this.userCPUTime = userCPUTime;
        return this;
    }
    
    /**
     * Gets or sets the total wait time of all the tasks in jobs created under the schedule.
     */
    @JsonProperty("waitTime")
    public String waitTime;
    public JobScheduleStatistics withWaitTime(String waitTime) {
        this.waitTime = waitTime;
        return this;
    }
    
    /**
     * Gets or sets the total wall clock time of all the tasks in all the jobs created under the schedule.
     */
    @JsonProperty("wallClockTime")
    public String wallClockTime;
    public JobScheduleStatistics withWallClockTime(String wallClockTime) {
        this.wallClockTime = wallClockTime;
        return this;
    }
    
    /**
     * Gets or sets the total amount of data in GiB of I/O written by all the tasks in all the jobs created under the schedule.
     */
    @JsonProperty("writeIOGiB")
    public Double writeIOGiB;
    public JobScheduleStatistics withWriteIOGiB(Double writeIOGiB) {
        this.writeIOGiB = writeIOGiB;
        return this;
    }
    
    /**
     * Gets or sets the total number of I/O write operations performed by all the tasks in all the jobs created under the schedule.
     */
    @JsonProperty("writeIOps")
    public Long writeIOps;
    public JobScheduleStatistics withWriteIOps(Long writeIOps) {
        this.writeIOps = writeIOps;
        return this;
    }
    
}
