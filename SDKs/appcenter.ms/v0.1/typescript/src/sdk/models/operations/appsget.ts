/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AppsGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class AppsGetRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum AppsGetDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class AppsGetDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: AppsGetDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class AppsGetDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => AppsGetDefaultApplicationJSONError)
  error: AppsGetDefaultApplicationJSONError;
}

export class AppsGet200ApplicationJSONAzureSubscription extends SpeakeasyBase {
  /**
   * If the subscription can be used for billing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_billable" })
  isBillable?: boolean;

  /**
   * If the subscription is used for billing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_billing" })
  isBilling?: boolean;

  /**
   * If the subscription is internal Microsoft subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_microsoft_internal" })
  isMicrosoftInternal?: boolean;

  /**
   * The azure subscription id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription_id" })
  subscriptionId: string;

  /**
   * The name of the azure subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription_name" })
  subscriptionName: string;

  /**
   * The tenant id of the azure subscription belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tenant_id" })
  tenantId: string;
}

export enum AppsGet200ApplicationJSONMemberPermissionsEnum {
  Manager = "manager",
  Developer = "developer",
  Viewer = "viewer",
  Tester = "tester",
}

/**
 * The creation origin of this app
 */
export enum AppsGet200ApplicationJSONOriginEnum {
  Appcenter = "appcenter",
  Hockeyapp = "hockeyapp",
  Codepush = "codepush",
}

/**
 * The OS the app will be running on
 */
export enum AppsGet200ApplicationJSONOsEnum {
  Android = "Android",
  IOS = "iOS",
  MacOS = "macOS",
  Tizen = "Tizen",
  TvOS = "tvOS",
  Windows = "Windows",
  Linux = "Linux",
  Custom = "Custom",
}

/**
 * The owner type. Can either be 'org' or 'user'
 */
export enum AppsGet200ApplicationJSONOwnerTypeEnum {
  Org = "org",
  User = "user",
}

/**
 * The information about the app's owner
 */
export class AppsGet200ApplicationJSONOwner extends SpeakeasyBase {
  /**
   * The avatar URL of the owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl?: string;

  /**
   * The owner's display name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The owner's email address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The unique id (UUID) of the owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The unique name that used to identify the owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The owner type. Can either be 'org' or 'user'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AppsGet200ApplicationJSONOwnerTypeEnum;
}

/**
 * The platform of the app
 */
export enum AppsGet200ApplicationJSONPlatformEnum {
  Java = "Java",
  ObjectiveCSwift = "Objective-C-Swift",
  Uwp = "UWP",
  Cordova = "Cordova",
  ReactNative = "React-Native",
  Unity = "Unity",
  Electron = "Electron",
  Xamarin = "Xamarin",
  Wpf = "WPF",
  WinForms = "WinForms",
  Unknown = "Unknown",
  Custom = "Custom",
}

/**
 * Success
 */
export class AppsGet200ApplicationJSON extends SpeakeasyBase {
  /**
   * A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics
   */
  @SpeakeasyMetadata()
  @Expose({ name: "app_secret" })
  appSecret: string;

  @SpeakeasyMetadata()
  @Expose({ name: "azure_subscription" })
  @Type(() => AppsGet200ApplicationJSONAzureSubscription)
  azureSubscription?: AppsGet200ApplicationJSONAzureSubscription;

  /**
   * The created date of this app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * The description of the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The display name of the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The string representation of the source of the app's icon
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icon_source" })
  iconSource?: string;

  /**
   * The string representation of the URL pointing to the app's icon
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icon_url" })
  iconUrl?: string;

  /**
   * The unique ID (UUID) of the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The permissions of the calling user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member_permissions" })
  memberPermissions?: AppsGet200ApplicationJSONMemberPermissionsEnum[];

  /**
   * The name of the app used in URLs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The creation origin of this app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: AppsGet200ApplicationJSONOriginEnum;

  /**
   * The OS the app will be running on
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os" })
  os: AppsGet200ApplicationJSONOsEnum;

  /**
   * The information about the app's owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => AppsGet200ApplicationJSONOwner)
  owner: AppsGet200ApplicationJSONOwner;

  /**
   * The platform of the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform: AppsGet200ApplicationJSONPlatformEnum;

  /**
   * A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase
   */
  @SpeakeasyMetadata()
  @Expose({ name: "release_type" })
  releaseType?: string;

  /**
   * The last updated date of this app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}

export class AppsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  appsGet200ApplicationJSONObject?: AppsGet200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  appsGetDefaultApplicationJSONObject?: AppsGetDefaultApplicationJSON;
}
