// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GETDescribeEnvironmentsActionEnum
type GETDescribeEnvironmentsActionEnum string

const (
	GETDescribeEnvironmentsActionEnumDescribeEnvironments GETDescribeEnvironmentsActionEnum = "DescribeEnvironments"
)

func (e *GETDescribeEnvironmentsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeEnvironments":
		*e = GETDescribeEnvironmentsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEnvironmentsActionEnum: %s", s)
	}
}

// GETDescribeEnvironmentsVersionEnum
type GETDescribeEnvironmentsVersionEnum string

const (
	GETDescribeEnvironmentsVersionEnumTwoThousandAndTen1201 GETDescribeEnvironmentsVersionEnum = "2010-12-01"
)

func (e *GETDescribeEnvironmentsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETDescribeEnvironmentsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEnvironmentsVersionEnum: %s", s)
	}
}

type GETDescribeEnvironmentsRequest struct {
	Action GETDescribeEnvironmentsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application.
	ApplicationName *string `queryParam:"style=form,explode=true,name=ApplicationName"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified IDs.
	EnvironmentIds []string `queryParam:"style=form,explode=true,name=EnvironmentIds"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that have the specified names.
	EnvironmentNames []string `queryParam:"style=form,explode=true,name=EnvironmentNames"`
	// <p>Indicates whether to include deleted environments:</p> <p> <code>true</code>: Environments that have been deleted after <code>IncludedDeletedBackTo</code> are displayed.</p> <p> <code>false</code>: Do not include deleted environments.</p>
	IncludeDeleted *bool `queryParam:"style=form,explode=true,name=IncludeDeleted"`
	//  If specified when <code>IncludeDeleted</code> is set to <code>true</code>, then environments deleted after this date are displayed.
	IncludedDeletedBackTo *time.Time `queryParam:"style=form,explode=true,name=IncludedDeletedBackTo"`
	// <p>For a paginated request. Specify a maximum number of environments to include in each response.</p> <p>If no <code>MaxRecords</code> is specified, all available environments are retrieved in a single response.</p>
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// <p>For a paginated request. Specify a token from a previous response page to retrieve the next response page. All other parameter values must be identical to the ones specified in the initial request.</p> <p>If no <code>NextToken</code> is specified, the first page is retrieved.</p>
	NextToken *string                            `queryParam:"style=form,explode=true,name=NextToken"`
	Version   GETDescribeEnvironmentsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those that are associated with this application version.
	VersionLabel      *string `queryParam:"style=form,explode=true,name=VersionLabel"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeEnvironmentsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
