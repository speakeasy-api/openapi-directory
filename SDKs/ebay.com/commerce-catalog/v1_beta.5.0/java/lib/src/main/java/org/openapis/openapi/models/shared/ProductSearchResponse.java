/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProductSearchResponse - This type contains the specifications for the collection of products that match the search or filter criteria of a &lt;b&gt;search&lt;/b&gt; call. A maximum of 200 product summaries is returned (the result set), fewer if you include the &lt;b&gt;limit&lt;/b&gt; query parameter in the request. 
 */
public class ProductSearchResponse {
    /**
     * This field is reserved for internal or future use. &lt;!-- The URI of the &lt;b&gt;search&lt;/b&gt; method request that produced this result set. --&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("href")
    public String href;
    public ProductSearchResponse withHref(String href) {
        this.href = href;
        return this;
    }
    
    /**
     * The number of product summaries returned in the response. This is the &lt;i&gt;result set&lt;/i&gt;, a subset of the full collection of products that match the search or filter criteria of this call. If the &lt;b&gt;limit&lt;/b&gt; query parameter was included in the request, this field will have the same value. &lt;br /&gt;&lt;br /&gt; &lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;50&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Integer limit;
    public ProductSearchResponse withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * This field is reserved for internal or future use. &lt;!-- &lt;i&gt;Returned only if&lt;/i&gt; there are more product records to retrieve from the current collection of matching products, this field contains the &lt;b&gt;search&lt;/b&gt; call URI for the next result set. For example, the following URI returns records 41 thru 50 from the collection of matched products: &lt;br /&gt;&lt;br /&gt; &lt;code&gt;&lt;i&gt;path&lt;/i&gt;/product_summary/search?limit=10&amp;offset=40&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;  &lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt; This feature employs a zero-based list, where the first product in the list has an offset of &lt;code&gt;0&lt;/code&gt;.&lt;/span&gt; --&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    public String next;
    public ProductSearchResponse withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * This field is reserved for internal or future use. &lt;!-- The distance (number of records) from the first product in the collection to the first product in this result set. If the &lt;b&gt;offset&lt;/b&gt; query parameter was included in the request, this field will have the same value. The &lt;b&gt;offset&lt;/b&gt; value is used in conjunction with the &lt;b&gt;limit&lt;/b&gt; value to control the pagination of the output. For example, if &lt;b&gt;offset&lt;/b&gt; is set to &lt;code&gt;30&lt;/code&gt; and &lt;b&gt;limit&lt;/b&gt; is set to &lt;code&gt;10&lt;/code&gt;, the call retrieves products 31 thru 40 from the resulting collection of products. &lt;br /&gt;&lt;br /&gt;  &lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt; This feature employs a zero-based list, where the first item in the list has an offset of &lt;code&gt;0&lt;/code&gt;.&lt;/span&gt; &lt;br /&gt;&lt;br /&gt; &lt;b&gt;Default:&lt;/b&gt; &lt;code&gt;0&lt;/code&gt; (zero) --&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Integer offset;
    public ProductSearchResponse withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * This field is reserved for internal or future use.  !-- &lt;i&gt;Not returned if&lt;/i&gt; the currently returned result set is the first set of product records from the current collection of matching products. This field contains the &lt;b&gt;search&lt;/b&gt; call URI for the previous result set. For example, the following URI returns products 21 thru 30 from the collection of products: &lt;br /&gt;&lt;br /&gt; &lt;code&gt;&lt;i&gt;path&lt;/i&gt;/product_summary/search?limit=10&amp;offset=20&lt;/code&gt; &lt;br /&gt;&lt;br /&gt;  &lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt; This feature employs a zero-based list, where the first product in the list has an offset of &lt;code&gt;0&lt;/code&gt;.&lt;/span&gt; &gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev")
    public String prev;
    public ProductSearchResponse withPrev(String prev) {
        this.prev = prev;
        return this;
    }
    
    /**
     * &lt;i&gt;Returned if&lt;/i&gt; the &lt;b&gt;fieldGroups&lt;/b&gt; query parameter was omitted from the request, or if it was included with a value of &lt;code&gt;MATCHING_PRODUCTS&lt;/code&gt; or &lt;code&gt;FULL&lt;/code&gt;. This container provides an array of product summaries in the current result set for products that match the combination of the &lt;b&gt;q&lt;/b&gt;, &lt;b&gt;category_ids&lt;/b&gt;, and &lt;b&gt;aspect_filter&lt;/b&gt; parameters that were provided in the request. Each product summary includes information about the product's identifiers, product images, aspects, the product page URL, and the &lt;b&gt;getProduct&lt;/b&gt; URL for retrieving the product details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productSummaries")
    public ProductSummary[] productSummaries;
    public ProductSearchResponse withProductSummaries(ProductSummary[] productSummaries) {
        this.productSummaries = productSummaries;
        return this;
    }
    
    /**
     * This type identifies a product category and the aspects associated with that category. Each aspect distribution container returns the distribution of values that have been used for the aspect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refinement")
    public Refinement refinement;
    public ProductSearchResponse withRefinement(Refinement refinement) {
        this.refinement = refinement;
        return this;
    }
    
    /**
     * This field is reserved for internal or future use. &lt;!-- The total number of product records in the returned collection of matched products. &gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Integer total;
    public ProductSearchResponse withTotal(Integer total) {
        this.total = total;
        return this;
    }
    
}
