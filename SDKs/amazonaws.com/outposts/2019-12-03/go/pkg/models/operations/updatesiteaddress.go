// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateSiteAddressRequestBodyAddress -  Information about an address.
type UpdateSiteAddressRequestBodyAddress struct {
	AddressLine1       *string `json:"AddressLine1,omitempty"`
	AddressLine2       *string `json:"AddressLine2,omitempty"`
	AddressLine3       *string `json:"AddressLine3,omitempty"`
	City               *string `json:"City,omitempty"`
	ContactName        *string `json:"ContactName,omitempty"`
	ContactPhoneNumber *string `json:"ContactPhoneNumber,omitempty"`
	CountryCode        *string `json:"CountryCode,omitempty"`
	DistrictOrCounty   *string `json:"DistrictOrCounty,omitempty"`
	Municipality       *string `json:"Municipality,omitempty"`
	PostalCode         *string `json:"PostalCode,omitempty"`
	StateOrRegion      *string `json:"StateOrRegion,omitempty"`
}

// UpdateSiteAddressRequestBodyAddressTypeEnum -  The type of the address.
type UpdateSiteAddressRequestBodyAddressTypeEnum string

const (
	UpdateSiteAddressRequestBodyAddressTypeEnumShippingAddress  UpdateSiteAddressRequestBodyAddressTypeEnum = "SHIPPING_ADDRESS"
	UpdateSiteAddressRequestBodyAddressTypeEnumOperatingAddress UpdateSiteAddressRequestBodyAddressTypeEnum = "OPERATING_ADDRESS"
)

func (e *UpdateSiteAddressRequestBodyAddressTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SHIPPING_ADDRESS":
		fallthrough
	case "OPERATING_ADDRESS":
		*e = UpdateSiteAddressRequestBodyAddressTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSiteAddressRequestBodyAddressTypeEnum: %s", s)
	}
}

type UpdateSiteAddressRequestBody struct {
	//  Information about an address.
	Address UpdateSiteAddressRequestBodyAddress `json:"Address"`
	//  The type of the address.
	AddressType UpdateSiteAddressRequestBodyAddressTypeEnum `json:"AddressType"`
}

type UpdateSiteAddressRequest struct {
	RequestBody UpdateSiteAddressRequestBody `request:"mediaType=application/json"`
	//  The ID or the Amazon Resource Name (ARN) of the site.
	SiteID            string  `pathParam:"style=simple,explode=false,name=SiteId"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateSiteAddressResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// Success
	UpdateSiteAddressOutput *shared.UpdateSiteAddressOutput
	// ValidationException
	ValidationException interface{}
}
