<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class OrderLineItemCommon
{
    /**
     * Specifies the units to measure usage.
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $uom
     */
	#[\JMS\Serializer\Annotation\SerializedName('UOM')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uom = null;
    
    /**
     * The accountingCode for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $accountingCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountingCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountingCode = null;
    
    /**
     * The actual charged amount per unit for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?float $amountPerUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('amountPerUnit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amountPerUnit = null;
    
    /**
     * The target date for the Order Line Item (OLI) to be picked up by bill run for generating invoice.
     * 
     * 
     * To generate invoice for an OLI, you must set this field and set the `itemState` field to `SentToBilling`.
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?\DateTime $billTargetDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('billTargetDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $billTargetDate = null;
    
    /**
     * Container for custom fields of an Order Line Item object.
     * 
     * 
     * 
     * @var ?array<string, mixed> $customFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('customFields')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFields = null;
    
    /**
     * The deferred revenue accounting code for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $deferredRevenueAccountingCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('deferredRevenueAccountingCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deferredRevenueAccountingCode = null;
    
    /**
     * The description of the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The name of the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $itemName
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $itemName = null;
    
    /**
     * The number for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $itemNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $itemNumber = null;
    
    /**
     * The state of the Order Line Item (OLI). See [Order Line Item states, Order states, and state transitions](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Order_Line_Items/AB_Order_Line_Item_States_and_Order_States) for more information.
     * 
     * 
     * To generate invoice for an OLI, you must set this field to `SentToBilling` and set the `billTargetDate` field .
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` or `SentToBilling`state (when the `itemState` field is set as `Executing` or `SentToBilling`).
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OrderLineItemCommonItemStateEnum $itemState
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OrderLineItemCommonItemStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderLineItemCommonItemStateEnum $itemState = null;
    
    /**
     * The type of the Order Line Item (OLI). 
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OrderLineItemCommonItemTypeEnum $itemType
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OrderLineItemCommonItemTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderLineItemCommonItemTypeEnum $itemType = null;
    
    /**
     * The list price per unit for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?float $listPricePerUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('listPricePerUnit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $listPricePerUnit = null;
    
    /**
     * The product code for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $productCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('productCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $productCode = null;
    
    /**
     * Used by customers to specify the Purchase Order Number provided by the buyer.
     * 
     * 
     * You can update this field for an Order Line Item (OLI) only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $purchaseOrderNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('purchaseOrderNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $purchaseOrderNumber = null;
    
    /**
     * The quantity of units, such as the number of authors in a hosted wiki service.
     * 
     * 
     * You can update this field for an Order Line Item (OLI) only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?float $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $quantity = null;
    
    /**
     * The recognized revenue accounting code for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $recognizedRevenueAccountingCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('recognizedRevenueAccountingCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recognizedRevenueAccountingCode = null;
    
    /**
     * The Revenue Recognition rule for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $revenueRecognitionRule
     */
	#[\JMS\Serializer\Annotation\SerializedName('revenueRecognitionRule')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revenueRecognitionRule = null;
    
    /**
     * The tax code for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?string $taxCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxCode = null;
    
    /**
     * The tax mode for the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OrderLineItemCommonTaxModeEnum $taxMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OrderLineItemCommonTaxModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderLineItemCommonTaxModeEnum $taxMode = null;
    
    /**
     * The transaction date of the Order Line Item (OLI).
     * 
     * 
     * You can update this field for an OLI only when the OLI is in the `Executing` state (when the `itemState` field is set as `Executing`).
     * 
     * 
     * @var ?\DateTime $transactionDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $transactionDate = null;
    
	public function __construct()
	{
		$this->uom = null;
		$this->accountingCode = null;
		$this->amountPerUnit = null;
		$this->billTargetDate = null;
		$this->customFields = null;
		$this->deferredRevenueAccountingCode = null;
		$this->description = null;
		$this->itemName = null;
		$this->itemNumber = null;
		$this->itemState = null;
		$this->itemType = null;
		$this->listPricePerUnit = null;
		$this->productCode = null;
		$this->purchaseOrderNumber = null;
		$this->quantity = null;
		$this->recognizedRevenueAccountingCode = null;
		$this->revenueRecognitionRule = null;
		$this->taxCode = null;
		$this->taxMode = null;
		$this->transactionDate = null;
	}
}
