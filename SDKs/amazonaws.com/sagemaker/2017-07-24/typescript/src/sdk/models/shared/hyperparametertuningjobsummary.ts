/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HyperParameterTuningJobStatusEnum } from "./hyperparametertuningjobstatusenum";
import { HyperParameterTuningJobStrategyTypeEnum } from "./hyperparametertuningjobstrategytypeenum";
import { ObjectiveStatusCounters } from "./objectivestatuscounters";
import { ResourceLimits } from "./resourcelimits";
import { TrainingJobStatusCounters } from "./trainingjobstatuscounters";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides summary information about a hyperparameter tuning job.
 */
export class HyperParameterTuningJobSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  hyperParameterTuningEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningJobArn" })
  hyperParameterTuningJobArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningJobName" })
  hyperParameterTuningJobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HyperParameterTuningJobStatus" })
  hyperParameterTuningJobStatus: HyperParameterTuningJobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ObjectiveStatusCounters" })
  @Type(() => ObjectiveStatusCounters)
  objectiveStatusCounters: ObjectiveStatusCounters;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceLimits" })
  @Type(() => ResourceLimits)
  resourceLimits?: ResourceLimits;

  @SpeakeasyMetadata()
  @Expose({ name: "Strategy" })
  strategy: HyperParameterTuningJobStrategyTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingJobStatusCounters" })
  @Type(() => TrainingJobStatusCounters)
  trainingJobStatusCounters: TrainingJobStatusCounters;
}
