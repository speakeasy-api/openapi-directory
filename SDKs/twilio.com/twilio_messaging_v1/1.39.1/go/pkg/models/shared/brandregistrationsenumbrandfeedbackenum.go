// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BrandRegistrationsEnumBrandFeedbackEnum string

const (
	BrandRegistrationsEnumBrandFeedbackEnumTaxID            BrandRegistrationsEnumBrandFeedbackEnum = "TAX_ID"
	BrandRegistrationsEnumBrandFeedbackEnumStockSymbol      BrandRegistrationsEnumBrandFeedbackEnum = "STOCK_SYMBOL"
	BrandRegistrationsEnumBrandFeedbackEnumNonprofit        BrandRegistrationsEnumBrandFeedbackEnum = "NONPROFIT"
	BrandRegistrationsEnumBrandFeedbackEnumGovernmentEntity BrandRegistrationsEnumBrandFeedbackEnum = "GOVERNMENT_ENTITY"
	BrandRegistrationsEnumBrandFeedbackEnumOthers           BrandRegistrationsEnumBrandFeedbackEnum = "OTHERS"
)

func (e *BrandRegistrationsEnumBrandFeedbackEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TAX_ID":
		fallthrough
	case "STOCK_SYMBOL":
		fallthrough
	case "NONPROFIT":
		fallthrough
	case "GOVERNMENT_ENTITY":
		fallthrough
	case "OTHERS":
		*e = BrandRegistrationsEnumBrandFeedbackEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BrandRegistrationsEnumBrandFeedbackEnum: %s", s)
	}
}
