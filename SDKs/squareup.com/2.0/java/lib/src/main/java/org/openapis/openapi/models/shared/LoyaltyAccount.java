/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LoyaltyAccount - Describes a loyalty account. For more information, see
 * [Manage Loyalty Accounts Using the Loyalty API](https://developer.squareup.com/docs/loyalty-api/overview).
 */
public class LoyaltyAccount {
    /**
     * The available point balance in the loyalty account. If points are scheduled to expire, they are listed in the `expiring_point_deadlines` field.
     * 
     * Your application should be able to handle loyalty accounts that have a negative point balance (`balance` is less than 0). This might occur if a seller makes a manual adjustment or as a result of a refund or exchange.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balance")
    public Long balance;

    public LoyaltyAccount withBalance(Long balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * The timestamp when the loyalty account was created, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;

    public LoyaltyAccount withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The Square-assigned ID of the [customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) that is associated with the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer_id")
    public String customerId;

    public LoyaltyAccount withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * The timestamp when enrollment occurred, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enrolled_at")
    public String enrolledAt;

    public LoyaltyAccount withEnrolledAt(String enrolledAt) {
        this.enrolledAt = enrolledAt;
        return this;
    }
    
    /**
     * The schedule for when points expire in the loyalty account balance. This field is present only if the account has points that are scheduled to expire. 
     * 
     * The total number of points in this field equals the number of points in the `balance` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiring_point_deadlines")
    public LoyaltyAccountExpiringPointDeadline[] expiringPointDeadlines;

    public LoyaltyAccount withExpiringPointDeadlines(LoyaltyAccountExpiringPointDeadline[] expiringPointDeadlines) {
        this.expiringPointDeadlines = expiringPointDeadlines;
        return this;
    }
    
    /**
     * The Square-assigned ID of the loyalty account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public LoyaltyAccount withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The total points accrued during the lifetime of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lifetime_points")
    public Long lifetimePoints;

    public LoyaltyAccount withLifetimePoints(Long lifetimePoints) {
        this.lifetimePoints = lifetimePoints;
        return this;
    }
    
    /**
     * Represents the mapping that associates a loyalty account with a buyer. 
     * 
     * Currently, a loyalty account can only be mapped to a buyer by phone number. For more information, see 
     * [Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mapping")
    public LoyaltyAccountMapping mapping;

    public LoyaltyAccount withMapping(LoyaltyAccountMapping mapping) {
        this.mapping = mapping;
        return this;
    }
    
    /**
     * The Square-assigned ID of the [loyalty program](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgram) to which the account belongs.
     */
    @JsonProperty("program_id")
    public String programId;

    public LoyaltyAccount withProgramId(String programId) {
        this.programId = programId;
        return this;
    }
    
    /**
     * The timestamp when the loyalty account was last updated, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;

    public LoyaltyAccount withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public LoyaltyAccount(@JsonProperty("program_id") String programId) {
        this.programId = programId;
  }
}
