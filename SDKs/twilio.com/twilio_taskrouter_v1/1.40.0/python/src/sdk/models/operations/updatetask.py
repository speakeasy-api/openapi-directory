"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import task_enum_status_enum as shared_task_enum_status_enum
from ..shared import taskrouter_v1_workspace_task as shared_taskrouter_v1_workspace_task
from typing import Optional

UPDATE_TASK_SERVERS = [
	"https://taskrouter.twilio.com",
]


@dataclasses.dataclass
class UpdateTaskSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateTaskUpdateTaskRequest:
    
    assignment_status: Optional[shared_task_enum_status_enum.TaskEnumStatusEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'AssignmentStatus' }})  
    attributes: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Attributes' }})
    r"""The JSON string that describes the custom attributes of the task."""  
    priority: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Priority' }})
    r"""The Task's new priority value. When supplied, the Task takes on the specified priority unless it matches a Workflow Target with a Priority set. Value can be 0 to 2^31^ (2,147,483,647)."""  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Reason' }})
    r"""The reason that the Task was canceled or completed. This parameter is required only if the Task is canceled or completed. Setting this value queues the task for deletion and logs the reason."""  
    task_channel: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'TaskChannel' }})
    r"""When MultiTasking is enabled, specify the TaskChannel with the task to update. Can be the TaskChannel's SID or its `unique_name`, such as `voice`, `sms`, or `default`."""  
    

@dataclasses.dataclass
class UpdateTaskRequest:
    
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Task resource to update."""  
    workspace_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'WorkspaceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Workspace with the Task to update."""  
    if_match: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'If-Match', 'style': 'simple', 'explode': False }})
    r"""If provided, applies this mutation if (and only if) the [ETag](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag) header of the Task matches the provided value. This matches the semantics of (and is implemented with) the HTTP [If-Match header](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match)."""  
    request_body: Optional[UpdateTaskUpdateTaskRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateTaskResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    taskrouter_v1_workspace_task: Optional[shared_taskrouter_v1_workspace_task.TaskrouterV1WorkspaceTask] = dataclasses.field(default=None)
    r"""OK"""  
    