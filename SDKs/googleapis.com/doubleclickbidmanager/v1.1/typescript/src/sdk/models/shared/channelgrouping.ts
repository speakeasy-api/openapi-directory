/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Rule } from "./rule";
import { Expose, Type } from "class-transformer";

/**
 * A channel grouping defines a set of rules that can be used to categorize events in a path report.
 */
export class ChannelGrouping extends SpeakeasyBase {
  /**
   * The name to apply to an event that does not match any of the rules in the channel grouping.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fallbackName" })
  fallbackName?: string;

  /**
   * Channel Grouping name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Rules within Channel Grouping. There is a limit of 100 rules that can be set per channel grouping.
   */
  @SpeakeasyMetadata({ elemType: Rule })
  @Expose({ name: "rules" })
  @Type(() => Rule)
  rules?: Rule[];
}
