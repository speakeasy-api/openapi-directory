// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUrlsAreaEnum - Analysis context to execute the query
type GetUrlsAreaEnum string

const (
	GetUrlsAreaEnumCurrent              GetUrlsAreaEnum = "current"
	GetUrlsAreaEnumDisappeared          GetUrlsAreaEnum = "disappeared"
	GetUrlsAreaEnumNew                  GetUrlsAreaEnum = "new"
	GetUrlsAreaEnumSearchEnginesOrphans GetUrlsAreaEnum = "search_engines_orphans"
)

func (e *GetUrlsAreaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "current":
		fallthrough
	case "disappeared":
		fallthrough
	case "new":
		fallthrough
	case "search_engines_orphans":
		*e = GetUrlsAreaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUrlsAreaEnum: %s", s)
	}
}

type GetUrlsRequest struct {
	UrlsQuery *shared.UrlsQuery `request:"mediaType=application/json"`
	// Analysis' identifier
	AnalysisSlug string `pathParam:"style=simple,explode=false,name=analysis_slug"`
	// Analysis context to execute the query
	Area *GetUrlsAreaEnum `queryParam:"style=form,explode=true,name=area"`
	// Page Number
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// Project's identifier
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project_slug"`
	// Page Size
	Size *int `queryParam:"style=form,explode=true,name=size"`
	// User's identifier
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

// GetUrls200ApplicationJSON - Successful operation
type GetUrls200ApplicationJSON struct {
	Count    *int64                   `json:"count,omitempty"`
	Next     *string                  `json:"next,omitempty"`
	Page     *int64                   `json:"page,omitempty"`
	Previous *string                  `json:"previous,omitempty"`
	Results  []map[string]interface{} `json:"results,omitempty"`
	Size     *int64                   `json:"size,omitempty"`
}

type GetUrlsResponse struct {
	ContentType string
	// error payload
	DefaultPayload *shared.DefaultPayload
	StatusCode     int
	RawResponse    *http.Response
	// Successful operation
	GetUrls200ApplicationJSONObject *GetUrls200ApplicationJSON
}
