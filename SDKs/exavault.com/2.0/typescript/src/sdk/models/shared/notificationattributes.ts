/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NotificationRecipient } from "./notificationrecipient";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Action that triggers notification.
 */
export enum NotificationAttributesActionEnum {
  Upload = "upload",
  Download = "download",
  Delete = "delete",
  All = "all",
}

/**
 * Whether or not an email will send when the notification is triggered.
 */
export enum NotificationAttributesSendEmailEnum {
  True = "true",
  False = "false",
}

/**
 * Type of the resource the notification is attached to.
 */
export enum NotificationAttributesTypeEnum {
  File = "file",
  Folder = "folder",
  SharedFolder = "shared_folder",
  SendReceipt = "send_receipt",
  ShareReceipt = "share_receipt",
  FileDrop = "file_drop",
}

/**
 * Attributes for the notification including the path, recipients, and share data.
 */
export class NotificationAttributes extends SpeakeasyBase {
  /**
   * Action that triggers notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: NotificationAttributesActionEnum;

  /**
   * Timestamp of notifiction creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Custom message that will be sent to the notification recipients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Timestamp of notification modification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modified?: Date;

  /**
   * Name of the item that the notification is set on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Path to the item that the notification is set on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * Human readable description of the notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readableDescription" })
  readableDescription?: string;

  /**
   * Human readable description of the notification without item path.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readableDescriptionWithoutPath" })
  readableDescriptionWithoutPath?: string;

  /**
   * Notification recipients.
   */
  @SpeakeasyMetadata({ elemType: NotificationRecipient })
  @Expose({ name: "recipients" })
  @Type(() => NotificationRecipient)
  recipients?: NotificationRecipient[];

  /**
   * Whether or not an email will send when the notification is triggered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sendEmail" })
  sendEmail?: NotificationAttributesSendEmailEnum;

  /**
   * ID of the share that the notification belogns to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shareId" })
  shareId?: string;

  /**
   * Type of the resource the notification is attached to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: NotificationAttributesTypeEnum;

  /**
   * ID of the user that the notification belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;

  /**
   * Detail on which users can trigger the notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usernames" })
  usernames?: string[];
}
