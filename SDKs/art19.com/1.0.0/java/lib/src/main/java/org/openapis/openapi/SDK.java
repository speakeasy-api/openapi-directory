/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * The ART19 Content API conforms to the [JSON:API specification](http://jsonapi.org).
 * 
 * API requests **MUST** use the HTTP Accept header:
 * 
 * `Accept: application/vnd.api+json`
 * 
 * API requests **MUST** be authenticated using the HTTP Authorization header:
 * 
 * `Authorization: Token token="your-token", credential="your-credential"`
 * 
 * ## General Notes
 * 
 * Some query parameters use unencoded [ and ] characters simply for readability. Defaults, examples, and
 * possible values are additionally rendered in double quotes for readability. In practice, query parameters should
 * not have quotes around the values (e.g., `foo=bar` is valid, not `foo="bar"`), and both query parameter keys
 * and values must be percent-encoded, per the requirements in [RFC 3986 \u00a7 3.4](https://tools.ietf.org/html/rfc3986#section-3.4).
 * 
 * ## Rate Limiting
 * 
 * In order to provide a fair distribution of available resources, all API calls are subject to rate limits.
 * If you exceed the number of API calls per minute granted to your credential, a `429 Too Many Requests`
 * error response will be returned.
 * 
 * In that case, a `Retry-After` header MAY be included in the response, describing the number of seconds
 * after which a request can be retried.
 * 
 * If you run into a high number of 429 errors, please reach out to ART19 Support to adjust your rate limit.
 * 
 * ### Example
 * 
 * In the following example the request can be retried after waiting for 21 seconds:
 * 
 *     HTTP/1.1 429 Too Many Requests
 *     Content-Type: text/html
 *     Retry-After: 21
 * 
 * ## Pagination
 * 
 * Requests to collection endpoints **SHOULD** provide pagination parameters.
 * Some endpoints **REQUIRE** pagination parameters to be provided.
 * Whenever pagination is provided, it **MUST** be valid.
 * Failing to provide pagination when it is required or providing wrong or incomplete pagination
 * always results in a `400 Bad Request` error response.
 * 
 * The page numbering starts with `1` and the maximum page size (if not otherwise documented
 * on an endpoint) is `100`. Pagination **MUST NOT** be specified if requesting a list of IDs (using an `ids[]` parameter).
 * 
 * Providing invalid values for page number or page size, as well as providing only a page number or only a page size,
 * is considered an error. Pagination is provided like this:
 * 
 * `page[number]=1&amp;page[size]=25`
 * 
 * Responses conform to the [JSON:API specification's pagination section](https://jsonapi.org/format/#fetching-pagination)
 * by including pagination links. Your requested page size will be carried into the pagination links.
 * 
 * ## Sorting
 * 
 * Requests to collection endpoints usually accept a `sort` parameter. Please refer to the
 * [JSON:API Specification's sorting section](https://jsonapi.org/format/#fetching-sorting) for further details.
 * 
 * ## Relationship Linking
 * 
 * Currently, resources return all of their relationships, in no particular order, pursuant to how relationships
 * should be returned [according to the JSON:API specification](https://jsonapi.org/format/#document-resource-object-relationships). Consumers of this API
 * **MUST NOT** make assumptions about the order of these collections. Even though this data is not currently paginated, consumers **MUST** support
 * paginating relationships per the JSON:API specification if this data is important for their application.
 * 
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        "https://art19.com",
	};
  	
    public Classification classification;
    public ClassificationInclusion classificationInclusion;
    public Credit credit;
    public Episode episode;
    public Image image;
    public MediaAsset mediaAsset;
    public Network network;
    public Person person;
    public Season season;
    public Series series;	

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private org.openapis.openapi.models.shared.Security _security;
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		private org.openapis.openapi.models.shared.Security security;
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Configures the SDK to use the provided security details.
		 * @param security The security details to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setSecurity(org.openapis.openapi.models.shared.Security security) {
			this.security = security;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.security, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, org.openapis.openapi.models.shared.Security security, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (security != null) {
			this._security = security;
			this._securityClient = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, this._security);
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}
		
		
		this.classification = new Classification(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.classificationInclusion = new ClassificationInclusion(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.credit = new Credit(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.episode = new Episode(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.image = new Image(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.mediaAsset = new MediaAsset(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.network = new Network(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.person = new Person(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.season = new Season(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.series = new Series(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
	}
}