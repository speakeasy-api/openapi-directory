<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WorkweekConfig - Sets the day of the week and hour of the day that a business starts a
 * 
 * workweek. This is used to calculate overtime pay.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WorkweekConfig
{
    /**
     * A read-only timestamp in RFC 3339 format; presented in UTC.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The UUID for this object.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The local time at which a business week ends. Represented as a
     * 
     * string in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are
     * truncated).
     * 
     * @var string $startOfDayLocalTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_of_day_local_time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $startOfDayLocalTime;
    
    /**
     * The day of the week on which a business week ends for
     * 
     * compensation purposes.
     * 
     * @var string $startOfWeek
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_of_week')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $startOfWeek;
    
    /**
     * A read-only timestamp in RFC 3339 format; presented in UTC.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
    /**
     * Used for resolving concurrency issues. The request fails if the version
     * 
     * provided does not match the server version at the time of the request. If not provided,
     * Square executes a blind write; potentially overwriting data from another
     * write.
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->id = null;
		$this->startOfDayLocalTime = "";
		$this->startOfWeek = "";
		$this->updatedAt = null;
		$this->version = null;
	}
}
