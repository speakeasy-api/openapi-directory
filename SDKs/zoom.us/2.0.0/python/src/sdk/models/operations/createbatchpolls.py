"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateBatchPollsApplicationJSONQuestionsTypeEnum(str, Enum):
    r"""Question type:<br>`single` - Single choice<br>`mutliple` - Multiple choice"""
    SINGLE = 'single'
    MULTIPLE = 'multiple'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchPollsApplicationJSONQuestions:
    
    answers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answers'), 'exclude': lambda f: f is None }})
    r"""Possible answers for the question."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the question."""  
    type: Optional[CreateBatchPollsApplicationJSONQuestionsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Question type:<br>`single` - Single choice<br>`mutliple` - Multiple choice"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchPollsApplicationJSON:
    r"""Batch Meeting poll object"""
    
    questions: Optional[list[CreateBatchPollsApplicationJSONQuestions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('questions'), 'exclude': lambda f: f is None }})  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Meeting Poll Title."""  
    

@dataclasses.dataclass
class CreateBatchPollsRequest:
    
    meeting_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'meetingId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[CreateBatchPollsApplicationJSON] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""Batch Meeting poll object"""  
    
class CreateBatchPolls201ApplicationXMLPollsQuestionsTypeEnum(str, Enum):
    r"""Poll question and answer type."""
    SINGLE = 'single'
    MULTIPLE = 'multiple'


@dataclasses.dataclass
class CreateBatchPolls201ApplicationXMLPollsQuestions:
    
    answers: Optional[list[str]] = dataclasses.field(default=None)
    r"""Answers to questons"""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of question."""  
    type: Optional[CreateBatchPolls201ApplicationXMLPollsQuestionsTypeEnum] = dataclasses.field(default=None)
    r"""Poll question and answer type."""  
    
class CreateBatchPolls201ApplicationXMLPollsStatusEnum(str, Enum):
    r"""Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results"""
    NOTSTART = 'notstart'
    STARTED = 'started'
    ENDED = 'ended'
    SHARING = 'sharing'


@dataclasses.dataclass
class CreateBatchPolls201ApplicationXMLPolls:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Meeting Poll ID"""  
    questions: Optional[list[CreateBatchPolls201ApplicationXMLPollsQuestions]] = dataclasses.field(default=None)  
    status: Optional[CreateBatchPolls201ApplicationXMLPollsStatusEnum] = dataclasses.field(default=None)
    r"""Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results"""  
    title: Optional[str] = dataclasses.field(default=None)
    r"""Title for the Poll"""  
    

@dataclasses.dataclass
class CreateBatchPolls201ApplicationXML:
    r"""**HTTP Status Code:** `201` <br>
    Meeting Poll Created
    """
    
    polls: Optional[list[CreateBatchPolls201ApplicationXMLPolls]] = dataclasses.field(default=None)  
    
class CreateBatchPolls201ApplicationJSONPollsQuestionsTypeEnum(str, Enum):
    r"""Poll question and answer type."""
    SINGLE = 'single'
    MULTIPLE = 'multiple'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchPolls201ApplicationJSONPollsQuestions:
    
    answers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answers'), 'exclude': lambda f: f is None }})
    r"""Answers to questons"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of question."""  
    type: Optional[CreateBatchPolls201ApplicationJSONPollsQuestionsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Poll question and answer type."""  
    
class CreateBatchPolls201ApplicationJSONPollsStatusEnum(str, Enum):
    r"""Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results"""
    NOTSTART = 'notstart'
    STARTED = 'started'
    ENDED = 'ended'
    SHARING = 'sharing'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchPolls201ApplicationJSONPolls:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Meeting Poll ID"""  
    questions: Optional[list[CreateBatchPolls201ApplicationJSONPollsQuestions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('questions'), 'exclude': lambda f: f is None }})  
    status: Optional[CreateBatchPolls201ApplicationJSONPollsStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Title for the Poll"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchPolls201ApplicationJSON:
    r"""**HTTP Status Code:** `201` <br>
    Meeting Poll Created
    """
    
    polls: Optional[list[CreateBatchPolls201ApplicationJSONPolls]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('polls'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class CreateBatchPollsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    create_batch_polls_201_application_json_object: Optional[CreateBatchPolls201ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `201` <br>
    Meeting Poll Created
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    