// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FailedItemErrorCodeEnum string

const (
	FailedItemErrorCodeEnumInvalidArn       FailedItemErrorCodeEnum = "INVALID_ARN"
	FailedItemErrorCodeEnumDuplicateArn     FailedItemErrorCodeEnum = "DUPLICATE_ARN"
	FailedItemErrorCodeEnumItemDoesNotExist FailedItemErrorCodeEnum = "ITEM_DOES_NOT_EXIST"
	FailedItemErrorCodeEnumAccessDenied     FailedItemErrorCodeEnum = "ACCESS_DENIED"
	FailedItemErrorCodeEnumLimitExceeded    FailedItemErrorCodeEnum = "LIMIT_EXCEEDED"
	FailedItemErrorCodeEnumInternalError    FailedItemErrorCodeEnum = "INTERNAL_ERROR"
)

func (e *FailedItemErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INVALID_ARN":
		fallthrough
	case "DUPLICATE_ARN":
		fallthrough
	case "ITEM_DOES_NOT_EXIST":
		fallthrough
	case "ACCESS_DENIED":
		fallthrough
	case "LIMIT_EXCEEDED":
		fallthrough
	case "INTERNAL_ERROR":
		*e = FailedItemErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FailedItemErrorCodeEnum: %s", s)
	}
}
