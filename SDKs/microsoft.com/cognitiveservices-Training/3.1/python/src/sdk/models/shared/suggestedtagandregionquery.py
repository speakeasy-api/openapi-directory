"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import storedsuggestedtagandregion as shared_storedsuggestedtagandregion
from ..shared import suggestedtagandregionquerytoken as shared_suggestedtagandregionquerytoken
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuggestedTagAndRegionQuery:
    r"""The array of result images and token containing session and continuation Ids for the next query."""
    
    results: Optional[list[shared_storedsuggestedtagandregion.StoredSuggestedTagAndRegion]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})
    r"""Result of a suggested tags and regions request of the untagged image."""  
    token: Optional[shared_suggestedtagandregionquerytoken.SuggestedTagAndRegionQueryToken] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token'), 'exclude': lambda f: f is None }})
    r"""Contains properties we need to fetch suggested tags for. For the first call, Session and continuation set to null.
    Then on subsequent calls, uses the session/continuation from the previous SuggestedTagAndRegionQuery result to fetch additional results.
    """  
    