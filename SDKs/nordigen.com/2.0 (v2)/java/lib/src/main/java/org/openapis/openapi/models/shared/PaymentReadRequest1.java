/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * PaymentReadRequest1 - PaymentReadSerializer.
 */
public class PaymentReadRequest1 {
    /**
     * Registered creditor account
     */
    @SpeakeasyMetadata("form:name=creditor_account multipartForm:name=creditor_account")
    public String creditorAccount;

    public PaymentReadRequest1 withCreditorAccount(String creditorAccount) {
        this.creditorAccount = creditorAccount;
        return this;
    }
    
    /**
     * Creditor account
     */
    @SpeakeasyMetadata("form:name=creditor_object,json multipartForm:name=creditor_object,json")
    public CreditorAccountWriteRequest creditorObject;

    public PaymentReadRequest1 withCreditorObject(CreditorAccountWriteRequest creditorObject) {
        this.creditorObject = creditorObject;
        return this;
    }
    
    /**
     * Payment Custom Payment ID
     */
    @SpeakeasyMetadata("form:name=custom_payment_id multipartForm:name=custom_payment_id")
    public String customPaymentId;

    public PaymentReadRequest1 withCustomPaymentId(String customPaymentId) {
        this.customPaymentId = customPaymentId;
        return this;
    }
    
    /**
     * Debtor account write serializer.
     */
    @SpeakeasyMetadata("form:name=debtor_account,json multipartForm:name=debtor_account,json")
    public DebtorAccountWriteRequest debtorAccount;

    public PaymentReadRequest1 withDebtorAccount(DebtorAccountWriteRequest debtorAccount) {
        this.debtorAccount = debtorAccount;
        return this;
    }
    
    /**
     * Payment description
     */
    @SpeakeasyMetadata("form:name=description multipartForm:name=description")
    public String description;

    public PaymentReadRequest1 withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Institution ID for Payment
     */
    @SpeakeasyMetadata("form:name=institution_id multipartForm:name=institution_id")
    public String institutionId;

    public PaymentReadRequest1 withInstitutionId(String institutionId) {
        this.institutionId = institutionId;
        return this;
    }
    
    /**
     * Instructed amount
     */
    @SpeakeasyMetadata("form:name=instructed_amount,json multipartForm:name=instructed_amount,json")
    public InstructedAmountRequest instructedAmount;

    public PaymentReadRequest1 withInstructedAmount(InstructedAmountRequest instructedAmount) {
        this.instructedAmount = instructedAmount;
        return this;
    }
    
    /**
     * Payment product
     * 
     * * `T2P` - target-2-payments
     * * `SCT` - sepa-credit-transfers
     * * `ISCT` - instant-sepa-credit-transfer
     * * `CBCT` - cross-border-credit-transfers
     * * `BACS` - Back Payment Scheme
     * * `CHAPS` - CHAPS Payment Scheme
     * * `FPS` - Faster Payment Scheme
     * * `SWIFT` - Swift Payment Service
     * * `BT` - Balance Transfer
     * * `MT` - Money Transfer
     */
    @SpeakeasyMetadata("form:name=payment_product multipartForm:name=payment_product")
    public Object paymentProduct;

    public PaymentReadRequest1 withPaymentProduct(Object paymentProduct) {
        this.paymentProduct = paymentProduct;
        return this;
    }
    
    /**
     * Redirect URL to your application after payment is done
     */
    @SpeakeasyMetadata("form:name=redirect multipartForm:name=redirect")
    public String redirect;

    public PaymentReadRequest1 withRedirect(String redirect) {
        this.redirect = redirect;
        return this;
    }
    
    public PaymentReadRequest1(@JsonProperty("debtor_account") DebtorAccountWriteRequest debtorAccount, @JsonProperty("instructed_amount") InstructedAmountRequest instructedAmount, @JsonProperty("redirect") String redirect) {
        this.debtorAccount = debtorAccount;
        this.instructedAmount = instructedAmount;
        this.redirect = redirect;
  }
}
