"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProxyModifyFeatureStatusEnum(str, Enum):
    r"""Status of the feature."""
    ACTIVE = 'Active'
    INACTIVE = 'Inactive'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProxyModifyFeature:
    r"""Container for custom fields of a Feature object."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""Description of the feature."""  
    feature_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureCode'), 'exclude': lambda f: f is None }})
    r"""Unique code of the feature."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""Name of the feature."""  
    status: Optional[ProxyModifyFeatureStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})
    r"""Status of the feature."""  
    