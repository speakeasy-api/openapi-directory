// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProfileRoleEnum string

const (
	ProfileRoleEnumAdmin ProfileRoleEnum = "admin"
	ProfileRoleEnumSer   ProfileRoleEnum = "ser"
)

func (e ProfileRoleEnum) ToPointer() *ProfileRoleEnum {
	return &e
}

func (e *ProfileRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "admin":
		fallthrough
	case "ser":
		*e = ProfileRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProfileRoleEnum: %v", v)
	}
}

// Profile - Successful GET on Profile resource
type Profile struct {
	Admin  bool            `json:"admin"`
	Conf   *string         `json:"conf,omitempty"`
	Email  string          `json:"email"`
	ID     int64           `json:"id"`
	IDUser int64           `json:"id_user"`
	Lang   *string         `json:"lang,omitempty"`
	Role   ProfileRoleEnum `json:"role"`
	Statut int64           `json:"statut"`
}
