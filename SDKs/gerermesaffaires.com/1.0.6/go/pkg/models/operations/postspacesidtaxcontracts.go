// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSpacesIDTaxContractsSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostSpacesIDTaxContractsPathParams struct {
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type PostSpacesIDTaxContractsRequestBodyLevelEnum string

const (
	PostSpacesIDTaxContractsRequestBodyLevelEnumConfidential PostSpacesIDTaxContractsRequestBodyLevelEnum = "confidential"
	PostSpacesIDTaxContractsRequestBodyLevelEnumRegular      PostSpacesIDTaxContractsRequestBodyLevelEnum = "regular"
	PostSpacesIDTaxContractsRequestBodyLevelEnumPublic       PostSpacesIDTaxContractsRequestBodyLevelEnum = "public"
)

func (e *PostSpacesIDTaxContractsRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesIDTaxContractsRequestBodyLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesIDTaxContractsRequestBodyLevelEnum: %s", s)
	}
}

// PostSpacesIDTaxContractsRequestBody - Tax contract to add
type PostSpacesIDTaxContractsRequestBody struct {
	About       *string                                       `json:"About,omitempty"`
	Comment     *string                                       `json:"Comment,omitempty"`
	Designation string                                        `json:"Designation"`
	End         *string                                       `json:"End,omitempty"`
	Home        *bool                                         `json:"Home,omitempty"`
	Keywords    []string                                      `json:"Keywords,omitempty"`
	Level       *PostSpacesIDTaxContractsRequestBodyLevelEnum `json:"Level,omitempty"`
	Start       *string                                       `json:"Start,omitempty"`
}

type PostSpacesIDTaxContractsRequest struct {
	PathParams PostSpacesIDTaxContractsPathParams
	// Tax contract to add
	Request  PostSpacesIDTaxContractsRequestBody `request:"mediaType=application/json"`
	Security PostSpacesIDTaxContractsSecurity
}

// PostSpacesIDTaxContracts201ApplicationJSON - Id of the tax contract created
type PostSpacesIDTaxContracts201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesIDTaxContractsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of the tax contract created
	PostSpacesIDTaxContracts201ApplicationJSONObject *PostSpacesIDTaxContracts201ApplicationJSON
}
