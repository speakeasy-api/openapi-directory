// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SearchCodeSortEnum - Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub Enterprise Server search infrastructure. Default: [best match](https://docs.github.com/enterprise-server@3.5/rest/reference/search#ranking-search-results)
type SearchCodeSortEnum string

const (
	SearchCodeSortEnumIndexed SearchCodeSortEnum = "indexed"
)

func (e *SearchCodeSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "indexed":
		*e = SearchCodeSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchCodeSortEnum: %s", s)
	}
}

type SearchCodeRequest struct {
	// Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.
	Order *shared.OrderEnum `queryParam:"style=form,explode=true,name=order"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub Enterprise Server. The REST API supports the same qualifiers as the web interface for GitHub Enterprise Server. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@3.5/rest/reference/search#constructing-a-search-query). See "[Searching code](https://docs.github.com/enterprise-server@3.5/search-github/searching-on-github/searching-code)" for a detailed list of qualifiers.
	Q string `queryParam:"style=form,explode=true,name=q"`
	// Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub Enterprise Server search infrastructure. Default: [best match](https://docs.github.com/enterprise-server@3.5/rest/reference/search#ranking-search-results)
	Sort *SearchCodeSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

// SearchCode503ApplicationJSON - Service unavailable
type SearchCode503ApplicationJSON struct {
	Code             *string `json:"code,omitempty"`
	DocumentationURL *string `json:"documentation_url,omitempty"`
	Message          *string `json:"message,omitempty"`
}

// SearchCode200ApplicationJSON - Response
type SearchCode200ApplicationJSON struct {
	IncompleteResults bool                          `json:"incomplete_results"`
	Items             []shared.CodeSearchResultItem `json:"items"`
	TotalCount        int64                         `json:"total_count"`
}

type SearchCodeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Forbidden
	BasicError *shared.BasicError
	// Response
	SearchCode200ApplicationJSONObject *SearchCode200ApplicationJSON
	// Service unavailable
	SearchCode503ApplicationJSONObject *SearchCode503ApplicationJSON
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
