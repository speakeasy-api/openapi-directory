/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class TimeSlicedNetMetricsForEvergreen {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public TimeSlicedNetMetricsForEvergreen withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discountChargeNumber")
    public String discountChargeNumber;
    public TimeSlicedNetMetricsForEvergreen withDiscountChargeNumber(String discountChargeNumber) {
        this.discountChargeNumber = discountChargeNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("endDate")
    public LocalDate endDate;
    public TimeSlicedNetMetricsForEvergreen withEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The acount number of the billing account that is billed for the subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceOwner")
    public String invoiceOwner;
    public TimeSlicedNetMetricsForEvergreen withInvoiceOwner(String invoiceOwner) {
        this.invoiceOwner = invoiceOwner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("startDate")
    public LocalDate startDate;
    public TimeSlicedNetMetricsForEvergreen withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * The acount number of the billing account that owns the subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionOwner")
    public String subscriptionOwner;
    public TimeSlicedNetMetricsForEvergreen withSubscriptionOwner(String subscriptionOwner) {
        this.subscriptionOwner = subscriptionOwner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("termNumber")
    public Double termNumber;
    public TimeSlicedNetMetricsForEvergreen withTermNumber(Double termNumber) {
        this.termNumber = termNumber;
        return this;
    }
    
    /**
     * Indicates whether this metrics is for a regular charge or a discount. charge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public TimeSlicedNetMetricsForEvergreenTypeEnum type;
    public TimeSlicedNetMetricsForEvergreen withType(TimeSlicedNetMetricsForEvergreenTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
