"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import forum_postsearchresponse as shared_forum_postsearchresponse
from typing import Optional


@dataclasses.dataclass
class ForumGetPostsThreadedPagedFromChildRequest:
    
    child_post_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'childPostId', 'style': 'simple', 'explode': False }})  
    page: int = dataclasses.field(metadata={'path_param': { 'field_name': 'page', 'style': 'simple', 'explode': False }})  
    page_size: int = dataclasses.field(metadata={'path_param': { 'field_name': 'pageSize', 'style': 'simple', 'explode': False }})  
    reply_size: int = dataclasses.field(metadata={'path_param': { 'field_name': 'replySize', 'style': 'simple', 'explode': False }})  
    root_thread_mode: bool = dataclasses.field(metadata={'path_param': { 'field_name': 'rootThreadMode', 'style': 'simple', 'explode': False }})  
    sort_mode: int = dataclasses.field(metadata={'path_param': { 'field_name': 'sortMode', 'style': 'simple', 'explode': False }})  
    showbanned: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'showbanned', 'style': 'form', 'explode': True }})
    r"""If this value is not null or empty, banned posts are requested to be returned"""  
    

@dataclasses.dataclass
class ForumGetPostsThreadedPagedFromChild200Wildcard:
    r"""Look at the Response property for more information about the nature of this response"""
    
    detailed_error_trace: Optional[str] = dataclasses.field(default=None)  
    error_code: Optional[int] = dataclasses.field(default=None)  
    error_status: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    message_data: Optional[dict[str, str]] = dataclasses.field(default=None)  
    response: Optional[shared_forum_postsearchresponse.ForumPostSearchResponse] = dataclasses.field(default=None)  
    throttle_seconds: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ForumGetPostsThreadedPagedFromChildResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    