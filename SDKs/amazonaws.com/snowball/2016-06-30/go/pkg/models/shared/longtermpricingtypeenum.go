// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LongTermPricingTypeEnum string

const (
	LongTermPricingTypeEnumOneYear   LongTermPricingTypeEnum = "OneYear"
	LongTermPricingTypeEnumThreeYear LongTermPricingTypeEnum = "ThreeYear"
	LongTermPricingTypeEnumOneMonth  LongTermPricingTypeEnum = "OneMonth"
)

func (e LongTermPricingTypeEnum) ToPointer() *LongTermPricingTypeEnum {
	return &e
}

func (e *LongTermPricingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OneYear":
		fallthrough
	case "ThreeYear":
		fallthrough
	case "OneMonth":
		*e = LongTermPricingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LongTermPricingTypeEnum: %v", v)
	}
}
