/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoParameterValueType } from "./enterprisecrmeventbusprotoparametervaluetype";
import { Expose, Type } from "class-transformer";

/**
 * Key-value pair of EventBus parameters.
 */
export class EnterpriseCrmEventbusProtoParameterEntry extends SpeakeasyBase {
  /**
   * Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the integration definition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * LINT.IfChange To support various types of parameter values. Next available id: 14
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  @Type(() => EnterpriseCrmEventbusProtoParameterValueType)
  value?: EnterpriseCrmEventbusProtoParameterValueType;
}
