/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBodyDevices extends SpeakeasyBase {
  /**
   * Import ID from the Import operation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceId" })
  deviceId: string;

  /**
   * Network Id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "networkId" })
  networkId: string;

  /**
   * Device UDI certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "udi" })
  udi: string;
}

export class CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBody extends SpeakeasyBase {
  /**
   * A set of device imports to commit
   */
  @SpeakeasyMetadata({
    elemType:
      CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBodyDevices,
  })
  @Expose({ name: "devices" })
  @Type(
    () =>
      CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBodyDevices
  )
  devices: CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBodyDevices[];
}

export class CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;
}

export class CreateOrganizationInventoryOnboardingCloudMonitoringImport201ApplicationJSON extends SpeakeasyBase {
  /**
   * Unique id associated with the import of the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "importId" })
  importId?: string;

  /**
   * Response method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Cloud monitor import status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class CreateOrganizationInventoryOnboardingCloudMonitoringImportResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({
    elemType:
      CreateOrganizationInventoryOnboardingCloudMonitoringImport201ApplicationJSON,
  })
  createOrganizationInventoryOnboardingCloudMonitoringImport201ApplicationJSONObjects?: CreateOrganizationInventoryOnboardingCloudMonitoringImport201ApplicationJSON[];
}
