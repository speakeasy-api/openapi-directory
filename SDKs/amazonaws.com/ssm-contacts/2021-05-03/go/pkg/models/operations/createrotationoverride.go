// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateRotationOverrideXAmzTargetEnum
type CreateRotationOverrideXAmzTargetEnum string

const (
	CreateRotationOverrideXAmzTargetEnumSsmContactsCreateRotationOverride CreateRotationOverrideXAmzTargetEnum = "SSMContacts.CreateRotationOverride"
)

func (e CreateRotationOverrideXAmzTargetEnum) ToPointer() *CreateRotationOverrideXAmzTargetEnum {
	return &e
}

func (e *CreateRotationOverrideXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SSMContacts.CreateRotationOverride":
		*e = CreateRotationOverrideXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRotationOverrideXAmzTargetEnum: %v", v)
	}
}

type CreateRotationOverrideRequest struct {
	CreateRotationOverrideRequest shared.CreateRotationOverrideRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    CreateRotationOverrideXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateRotationOverrideResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateRotationOverrideResult *shared.CreateRotationOverrideResult
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
