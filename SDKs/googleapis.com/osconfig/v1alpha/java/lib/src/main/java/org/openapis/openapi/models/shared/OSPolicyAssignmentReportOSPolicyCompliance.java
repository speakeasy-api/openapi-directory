/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OSPolicyAssignmentReportOSPolicyCompliance - Compliance data for an OS policy
 */
public class OSPolicyAssignmentReportOSPolicyCompliance {
    /**
     * The compliance state of the OS policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complianceState")
    public OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum complianceState;

    public OSPolicyAssignmentReportOSPolicyCompliance withComplianceState(OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum complianceState) {
        this.complianceState = complianceState;
        return this;
    }
    
    /**
     * The reason for the OS policy to be in an unknown compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. If populated, the field can contain one of the following values: * `vm-not-running`: The VM was not running. * `os-policies-not-supported-by-agent`: The version of the OS Config agent running on the VM does not support running OS policies. * `no-agent-detected`: The OS Config agent is not detected for the VM. * `resource-execution-errors`: The OS Config agent encountered errors while executing one or more resources in the policy. See `os_policy_resource_compliances` for details. * `task-timeout`: The task sent to the agent to apply the policy timed out. * `unexpected-agent-state`: The OS Config agent did not report the final status of the task that attempted to apply the policy. Instead, the agent unexpectedly started working on a different task. This mostly happens when the agent or VM unexpectedly restarts while applying OS policies. * `internal-service-errors`: Internal service errors were encountered while attempting to apply the policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complianceStateReason")
    public String complianceStateReason;

    public OSPolicyAssignmentReportOSPolicyCompliance withComplianceStateReason(String complianceStateReason) {
        this.complianceStateReason = complianceStateReason;
        return this;
    }
    
    /**
     * The OS policy id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osPolicyId")
    public String osPolicyId;

    public OSPolicyAssignmentReportOSPolicyCompliance withOsPolicyId(String osPolicyId) {
        this.osPolicyId = osPolicyId;
        return this;
    }
    
    /**
     * Compliance data for each resource within the policy that is applied to the VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osPolicyResourceCompliances")
    public OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance[] osPolicyResourceCompliances;

    public OSPolicyAssignmentReportOSPolicyCompliance withOsPolicyResourceCompliances(OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance[] osPolicyResourceCompliances) {
        this.osPolicyResourceCompliances = osPolicyResourceCompliances;
        return this;
    }
    
    public OSPolicyAssignmentReportOSPolicyCompliance(){}
}
