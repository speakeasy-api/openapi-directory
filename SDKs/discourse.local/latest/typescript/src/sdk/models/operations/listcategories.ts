/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum ListCategoriesIncludeSubcategoriesEnum {
  True = "true",
}

export class ListCategoriesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_subcategories",
  })
  includeSubcategories?: ListCategoriesIncludeSubcategoriesEnum;
}

export class ListCategories200ApplicationJSONCategoryListCategories extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "can_edit" })
  canEdit: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  color: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_list_filter" })
  defaultListFilter: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_top_period" })
  defaultTopPeriod: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_view" })
  defaultView: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description_excerpt" })
  descriptionExcerpt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description_text" })
  descriptionText: string;

  @SpeakeasyMetadata()
  @Expose({ name: "has_children" })
  hasChildren: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_uncategorized" })
  isUncategorized?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "minimum_required_tags" })
  minimumRequiredTags: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "navigate_to_first_post_after_read" })
  navigateToFirstPostAfterRead: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "notification_level" })
  notificationLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_featured_topics" })
  numFeaturedTopics: number;

  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  permission: number;

  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position: number;

  @SpeakeasyMetadata()
  @Expose({ name: "post_count" })
  postCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "read_restricted" })
  readRestricted: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "show_subcategory_list" })
  showSubcategoryList: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sort_ascending" })
  sortAscending: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sort_order" })
  sortOrder: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subcategory_ids" })
  subcategoryIds: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "subcategory_list" })
  subcategoryList?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "subcategory_list_style" })
  subcategoryListStyle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "text_color" })
  textColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_count" })
  topicCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_template" })
  topicTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_url" })
  topicUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topics_all_time" })
  topicsAllTime: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topics_day" })
  topicsDay: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topics_month" })
  topicsMonth: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topics_week" })
  topicsWeek: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topics_year" })
  topicsYear: number;

  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_background" })
  uploadedBackground: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_logo" })
  uploadedLogo: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_logo_dark" })
  uploadedLogoDark: string;
}

export class ListCategories200ApplicationJSONCategoryList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "can_create_category" })
  canCreateCategory: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_create_topic" })
  canCreateTopic: boolean;

  @SpeakeasyMetadata({
    elemType: ListCategories200ApplicationJSONCategoryListCategories,
  })
  @Expose({ name: "categories" })
  @Type(() => ListCategories200ApplicationJSONCategoryListCategories)
  categories: ListCategories200ApplicationJSONCategoryListCategories[];
}

/**
 * success response
 */
export class ListCategories200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category_list" })
  @Type(() => ListCategories200ApplicationJSONCategoryList)
  categoryList: ListCategories200ApplicationJSONCategoryList;
}

export class ListCategoriesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success response
   */
  @SpeakeasyMetadata()
  listCategories200ApplicationJSONObject?: ListCategories200ApplicationJSON;
}
