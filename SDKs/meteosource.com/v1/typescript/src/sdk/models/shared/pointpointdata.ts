/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PointPointAlerts } from "./pointpointalerts";
import { PointPointCurrentData } from "./pointpointcurrentdata";
import { PointPointDaily } from "./pointpointdaily";
import { PointPointHourly } from "./pointpointhourly";
import { PointPointMinutely } from "./pointpointminutely";
import { Expose, Type } from "class-transformer";

/**
 * Successful Response
 */
export class PointPointData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "alerts" })
  @Type(() => PointPointAlerts)
  alerts: PointPointAlerts;

  @SpeakeasyMetadata()
  @Expose({ name: "current" })
  @Type(() => PointPointCurrentData)
  current?: PointPointCurrentData;

  @SpeakeasyMetadata()
  @Expose({ name: "daily" })
  @Type(() => PointPointDaily)
  daily?: PointPointDaily;

  /**
   * Elevation above sea level in metres (for units 'metric', 'uk', 'ca') or feet (for units 'us')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "elevation" })
  elevation: number;

  @SpeakeasyMetadata()
  @Expose({ name: "hourly" })
  @Type(() => PointPointHourly)
  hourly?: PointPointHourly;

  /**
   * Latitude of the point, always in the format <float><N/S>, for example ``23.5S``
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lat" })
  lat: string;

  /**
   * Longitude of the point, always in the format <float><E/W>, for example ``23.5W``
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lon" })
  lon: string;

  @SpeakeasyMetadata()
  @Expose({ name: "minutely" })
  @Type(() => PointPointMinutely)
  minutely?: PointPointMinutely;

  /**
   * Name of the timezone in format like 'Europe/London'. Available only when the place is specified through place ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;

  /**
   * Unit system (metric, uk, ca or us)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "units" })
  units: string;
}
