/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DescribeTaskExecutionResponse - DescribeTaskExecutionResponse
 */
public class DescribeTaskExecutionResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BytesCompressed")
    public Long bytesCompressed;
    public DescribeTaskExecutionResponse withBytesCompressed(Long bytesCompressed) {
        this.bytesCompressed = bytesCompressed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BytesTransferred")
    public Long bytesTransferred;
    public DescribeTaskExecutionResponse withBytesTransferred(Long bytesTransferred) {
        this.bytesTransferred = bytesTransferred;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BytesWritten")
    public Long bytesWritten;
    public DescribeTaskExecutionResponse withBytesWritten(Long bytesWritten) {
        this.bytesWritten = bytesWritten;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EstimatedBytesToTransfer")
    public Long estimatedBytesToTransfer;
    public DescribeTaskExecutionResponse withEstimatedBytesToTransfer(Long estimatedBytesToTransfer) {
        this.estimatedBytesToTransfer = estimatedBytesToTransfer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EstimatedFilesToTransfer")
    public Long estimatedFilesToTransfer;
    public DescribeTaskExecutionResponse withEstimatedFilesToTransfer(Long estimatedFilesToTransfer) {
        this.estimatedFilesToTransfer = estimatedFilesToTransfer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Excludes")
    public FilterRule[] excludes;
    public DescribeTaskExecutionResponse withExcludes(FilterRule[] excludes) {
        this.excludes = excludes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FilesTransferred")
    public Long filesTransferred;
    public DescribeTaskExecutionResponse withFilesTransferred(Long filesTransferred) {
        this.filesTransferred = filesTransferred;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Includes")
    public FilterRule[] includes;
    public DescribeTaskExecutionResponse withIncludes(FilterRule[] includes) {
        this.includes = includes;
        return this;
    }
    
    /**
     * &lt;p&gt;Configures your DataSync task settings. These options include how DataSync handles files, objects, and their associated metadata. You also can specify how DataSync verifies data integrity, set bandwidth limits for your task, among other options.&lt;/p&gt; &lt;p&gt;Each task setting has a default value. Unless you need to, you don't have to configure any of these &lt;code&gt;Options&lt;/code&gt; before starting your task.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Options")
    public Options options;
    public DescribeTaskExecutionResponse withOptions(Options options) {
        this.options = options;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Result")
    public TaskExecutionResultDetail result;
    public DescribeTaskExecutionResponse withResult(TaskExecutionResultDetail result) {
        this.result = result;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;
    public DescribeTaskExecutionResponse withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public TaskExecutionStatusEnum status;
    public DescribeTaskExecutionResponse withStatus(TaskExecutionStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaskExecutionArn")
    public String taskExecutionArn;
    public DescribeTaskExecutionResponse withTaskExecutionArn(String taskExecutionArn) {
        this.taskExecutionArn = taskExecutionArn;
        return this;
    }
    
}
