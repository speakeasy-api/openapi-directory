// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// KeyVersionSpecAlgorithmEnum - The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
type KeyVersionSpecAlgorithmEnum string

const (
	KeyVersionSpecAlgorithmEnumSignHashAlgorithmUnspecified KeyVersionSpecAlgorithmEnum = "SIGN_HASH_ALGORITHM_UNSPECIFIED"
	KeyVersionSpecAlgorithmEnumRsaPss2048Sha256             KeyVersionSpecAlgorithmEnum = "RSA_PSS_2048_SHA256"
	KeyVersionSpecAlgorithmEnumRsaPss3072Sha256             KeyVersionSpecAlgorithmEnum = "RSA_PSS_3072_SHA256"
	KeyVersionSpecAlgorithmEnumRsaPss4096Sha256             KeyVersionSpecAlgorithmEnum = "RSA_PSS_4096_SHA256"
	KeyVersionSpecAlgorithmEnumRsaPkcs12048Sha256           KeyVersionSpecAlgorithmEnum = "RSA_PKCS1_2048_SHA256"
	KeyVersionSpecAlgorithmEnumRsaPkcs13072Sha256           KeyVersionSpecAlgorithmEnum = "RSA_PKCS1_3072_SHA256"
	KeyVersionSpecAlgorithmEnumRsaPkcs14096Sha256           KeyVersionSpecAlgorithmEnum = "RSA_PKCS1_4096_SHA256"
	KeyVersionSpecAlgorithmEnumEcP256Sha256                 KeyVersionSpecAlgorithmEnum = "EC_P256_SHA256"
	KeyVersionSpecAlgorithmEnumEcP384Sha384                 KeyVersionSpecAlgorithmEnum = "EC_P384_SHA384"
)

func (e KeyVersionSpecAlgorithmEnum) ToPointer() *KeyVersionSpecAlgorithmEnum {
	return &e
}

func (e *KeyVersionSpecAlgorithmEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGN_HASH_ALGORITHM_UNSPECIFIED":
		fallthrough
	case "RSA_PSS_2048_SHA256":
		fallthrough
	case "RSA_PSS_3072_SHA256":
		fallthrough
	case "RSA_PSS_4096_SHA256":
		fallthrough
	case "RSA_PKCS1_2048_SHA256":
		fallthrough
	case "RSA_PKCS1_3072_SHA256":
		fallthrough
	case "RSA_PKCS1_4096_SHA256":
		fallthrough
	case "EC_P256_SHA256":
		fallthrough
	case "EC_P384_SHA384":
		*e = KeyVersionSpecAlgorithmEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyVersionSpecAlgorithmEnum: %v", v)
	}
}

// KeyVersionSpec - A Cloud KMS key configuration that a CertificateAuthority will use.
type KeyVersionSpec struct {
	// The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
	Algorithm *KeyVersionSpecAlgorithmEnum `json:"algorithm,omitempty"`
	// The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`. This option enables full flexibility in the key's capabilities and properties.
	CloudKmsKeyVersion *string `json:"cloudKmsKeyVersion,omitempty"`
}
