"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getassessmentreportrequest as shared_getassessmentreportrequest
from ..shared import getassessmentreportresponse as shared_getassessmentreportresponse
from enum import Enum
from typing import Any, Optional

class GetAssessmentReportXAmzTargetEnum(str, Enum):
    INSPECTOR_SERVICE_GET_ASSESSMENT_REPORT = 'InspectorService.GetAssessmentReport'


@dataclasses.dataclass
class GetAssessmentReportRequest:
    
    get_assessment_report_request: shared_getassessmentreportrequest.GetAssessmentReportRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: GetAssessmentReportXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GetAssessmentReportResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    access_denied_exception: Optional[Any] = dataclasses.field(default=None)
    r"""AccessDeniedException"""  
    assessment_run_in_progress_exception: Optional[Any] = dataclasses.field(default=None)
    r"""AssessmentRunInProgressException"""  
    get_assessment_report_response: Optional[shared_getassessmentreportresponse.GetAssessmentReportResponse] = dataclasses.field(default=None)
    r"""Success"""  
    internal_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InternalException"""  
    invalid_input_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidInputException"""  
    no_such_entity_exception: Optional[Any] = dataclasses.field(default=None)
    r"""NoSuchEntityException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    service_temporarily_unavailable_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceTemporarilyUnavailableException"""  
    unsupported_feature_exception: Optional[Any] = dataclasses.field(default=None)
    r"""UnsupportedFeatureException"""  
    