"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gatewayoption as shared_gatewayoption
from ..shared import refundinvoicepayment as shared_refundinvoicepayment
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProxyCreateRefundGatewayOptionData:
    r"""A field used to pass gateway options. Zuora allows you to pass in special gateway-specific parameters for payments that go through the Adyen, Autorize.et, CyberSource, Merchant eSolutions, Orbital (Chase Paymentech), QValent, Vantiv, and Verifi gateways.
    
    For each of these special parameters, you supply the name-value pair and Zuora passes it to the gateway. This allows you to add functionality that's supported by a specific gateway but currently not supported by Zuora.
    """
    
    gateway_option: list[shared_gatewayoption.GatewayOption] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GatewayOption') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProxyCreateRefundRefundInvoicePaymentData:
    r"""Container for the refund invoice payment data. This field is only required if you apply a full or partical refund against a payment attached to muliple invoices."""
    
    refund_invoice_payment: list[shared_refundinvoicepayment.RefundInvoicePayment] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RefundInvoicePayment') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProxyCreateRefund:
    r"""Container for custom fields of a Refund object."""
    
    amount: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Amount') }})
    r"""The amount of the refund. The amount can't exceed the amount of the associated payment. If the original payment was applied to a single invoice, you can create a partial refund by specifying an amount in this field or through the UI. If the payment was applied to multiple invoices, you can create a partial refund by using the `RefundInvoicePaymentData` field of this operation or through the UI.
    **Character limit**: 16 **Values**: a valid currency amount
    """  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})
    r"""Specifies if the refund is electronic or external.
    **Character limit**: 10 **Values**:
    
    - `Electronic`
    - `External`
    """  
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountId'), 'exclude': lambda f: f is None }})
    r"""The ID of the account associated with this refund. This field is only required if you create a non-referenced refund. Don't specify a value for any other type of refund; Zuora associates the refund automatically with the account from the associated payment.
    **Character limit**: 32 **Values**: a valid account ID
    """  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Comment'), 'exclude': lambda f: f is None }})
    r"""Use this field to record comments about the refund.
    **Character limit**: 255 **Values**: a string of 255 characters or fewer
    """  
    gateway_option_data: Optional[ProxyCreateRefundGatewayOptionData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GatewayOptionData'), 'exclude': lambda f: f is None }})
    r"""A field used to pass gateway options. Zuora allows you to pass in special gateway-specific parameters for payments that go through the Adyen, Autorize.et, CyberSource, Merchant eSolutions, Orbital (Chase Paymentech), QValent, Vantiv, and Verifi gateways.
    
    For each of these special parameters, you supply the name-value pair and Zuora passes it to the gateway. This allows you to add functionality that's supported by a specific gateway but currently not supported by Zuora.
    """  
    gateway_state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GatewayState'), 'exclude': lambda f: f is None }})
    r"""The status of the payment in the gateway.
    **Character limit**: 19 **Values**: automatically generated
    """  
    integration_id_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IntegrationId__NS'), 'exclude': lambda f: f is None }})
    r"""ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    integration_status_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IntegrationStatus__NS'), 'exclude': lambda f: f is None }})
    r"""Status of the refund's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    method_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MethodType'), 'exclude': lambda f: f is None }})
    r"""Indicates how an external refund was issued to a customer. This field is only required if the `Type` field is set to ` External`. You can issue an external refund on an electronic payment. **Character limit**: 30 **Values**:
    
    - `ACH`
    - `Cash`
    - `Check`
    - `CreditCard`
    - `Other`
    - `PayPal`
    - `WireTransfer`
    - `DebitCard`
    - `CreditCardReferenceTransaction`
    """  
    origin_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Origin__NS'), 'exclude': lambda f: f is None }})
    r"""Origin of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    payment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaymentId'), 'exclude': lambda f: f is None }})
    r"""The unique ID of the payment associated with this refund. Don't specify a value for this field if you're creating an electronic non-referenced refund.
    **Character limit**: 32 **Values**: a valid payment ID
    """  
    payment_method_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaymentMethodId'), 'exclude': lambda f: f is None }})
    r"""The unique ID of the payment method that the customer used to make the payment. This field is only required if you create a non-referenced refund.
    **Character limit**: 32 **V****alues**: a valid payment method ID
    """  
    reason_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReasonCode'), 'exclude': lambda f: f is None }})
    r"""A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.
    **Character limit**: 32 **V****alues**: a valid reason code
    """  
    refund_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RefundDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date of the refund, in `yyyy-mm-dd` format. The date of the refund cannot be before the payment date. This field is only required if the `Type` field is set to ` External`. Zuora automatically generates this field for electronic refunds.
    
    With the Future Dated Credit Balance Adjustment feature enabled, you can create a non-referenced refund with a refund date. 
    * For external refunds, you can specify any date.
    * For electronic refunds, you can only set the date to the date when the API operation is called or one day later.
    """  
    refund_invoice_payment_data: Optional[ProxyCreateRefundRefundInvoicePaymentData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RefundInvoicePaymentData'), 'exclude': lambda f: f is None }})
    r"""Container for the refund invoice payment data. This field is only required if you apply a full or partical refund against a payment attached to muliple invoices."""  
    soft_descriptor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoftDescriptor'), 'exclude': lambda f: f is None }})
    r"""A payment gateway-specific field that maps Zuora to other gateways . **Character limit**: 35 **Values**:
    
    - 3-byte company identifier &quot;*&quot; 18-byte descriptor
    - 7-byte company identifier &quot;*&quot; 14-byte descriptor
    - 12-byte company identifier &quot;*&quot; 9-byte descriptor
    """  
    soft_descriptor_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoftDescriptorPhone'), 'exclude': lambda f: f is None }})
    r"""A payment gateway-specific field that maps Zuora to other gateways . **Character limit**: 20 **Values**:
    
    - Customer service phone number formatted as: `NNN-NNN-NNNN` or `NNN-AAAAAAA`
    - URL (non-e-Commerce): Transactions sent with a URL do not qualify for the best interchange rate
    - Email address
    """  
    source_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceType'), 'exclude': lambda f: f is None }})
    r"""Specifies whether the refund is a refund payment or a credit balance. This field is only required if you create a non-referenced refund. If you creating an non-referenced refund, then set this value to `CreditBalance`.
    **Note**: If you have the Invoice Settlement feature enabled, the value of this field can only be set to `Payment`.
    **Character limit**: 13 **Values**:
    
    - `Payment`
    - `CreditBalance`
    """  
    sync_date_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SyncDate__NS'), 'exclude': lambda f: f is None }})
    r"""Date when the refund was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    syncto_net_suite_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SynctoNetSuite__NS'), 'exclude': lambda f: f is None }})
    r"""Specifies whether the refund should be synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    