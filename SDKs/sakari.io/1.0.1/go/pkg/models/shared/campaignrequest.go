// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CampaignRequestFilters struct {
	Attributes []string `json:"attributes,omitempty"`
	Contacts   []string `json:"contacts,omitempty"`
	Tags       []string `json:"tags,omitempty"`
}

// CampaignRequestTriggerCodeEnum - Campaign type specifies how it sources contacts and what event triggers its execution  Sort order
//   - `M` - Manual
//   - `S` - Scheduled
//   - `FU` - File Upload
type CampaignRequestTriggerCodeEnum string

const (
	CampaignRequestTriggerCodeEnumM  CampaignRequestTriggerCodeEnum = "M"
	CampaignRequestTriggerCodeEnumS  CampaignRequestTriggerCodeEnum = "S"
	CampaignRequestTriggerCodeEnumFu CampaignRequestTriggerCodeEnum = "FU"
)

func (e *CampaignRequestTriggerCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "M":
		fallthrough
	case "S":
		fallthrough
	case "FU":
		*e = CampaignRequestTriggerCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CampaignRequestTriggerCodeEnum: %s", s)
	}
}

type CampaignRequestTrigger struct {
	// Campaign type specifies how it sources contacts and what event triggers its execution  Sort order
	//   * `M` - Manual
	//   * `S` - Scheduled
	//   * `FU` - File Upload
	//
	Code *CampaignRequestTriggerCodeEnum `json:"code,omitempty"`
}

type CampaignRequest struct {
	Filters  *CampaignRequestFilters `json:"filters,omitempty"`
	Template *string                 `json:"template,omitempty"`
	Trigger  *CampaignRequestTrigger `json:"trigger,omitempty"`
}
