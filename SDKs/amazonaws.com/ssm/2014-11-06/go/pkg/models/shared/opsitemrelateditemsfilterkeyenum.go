// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OpsItemRelatedItemsFilterKeyEnum string

const (
	OpsItemRelatedItemsFilterKeyEnumResourceType  OpsItemRelatedItemsFilterKeyEnum = "ResourceType"
	OpsItemRelatedItemsFilterKeyEnumAssociationID OpsItemRelatedItemsFilterKeyEnum = "AssociationId"
	OpsItemRelatedItemsFilterKeyEnumResourceURI   OpsItemRelatedItemsFilterKeyEnum = "ResourceUri"
)

func (e OpsItemRelatedItemsFilterKeyEnum) ToPointer() *OpsItemRelatedItemsFilterKeyEnum {
	return &e
}

func (e *OpsItemRelatedItemsFilterKeyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ResourceType":
		fallthrough
	case "AssociationId":
		fallthrough
	case "ResourceUri":
		*e = OpsItemRelatedItemsFilterKeyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OpsItemRelatedItemsFilterKeyEnum: %v", v)
	}
}
