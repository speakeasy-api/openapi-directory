// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FeatureStatusEnum string

const (
	FeatureStatusEnumEnabled               FeatureStatusEnum = "ENABLED"
	FeatureStatusEnumDisabled              FeatureStatusEnum = "DISABLED"
	FeatureStatusEnumUnsupported           FeatureStatusEnum = "UNSUPPORTED"
	FeatureStatusEnumEnabledPendingReboot  FeatureStatusEnum = "ENABLED_PENDING_REBOOT"
	FeatureStatusEnumDisabledPendingReboot FeatureStatusEnum = "DISABLED_PENDING_REBOOT"
	FeatureStatusEnumUnknown               FeatureStatusEnum = "UNKNOWN"
)

func (e *FeatureStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "UNSUPPORTED":
		fallthrough
	case "ENABLED_PENDING_REBOOT":
		fallthrough
	case "DISABLED_PENDING_REBOOT":
		fallthrough
	case "UNKNOWN":
		*e = FeatureStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FeatureStatusEnum: %s", s)
	}
}
