// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GamesPlayersListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

// GamesPlayersListCollectionEnum - Collection of players being retrieved
type GamesPlayersListCollectionEnum string

const (
	GamesPlayersListCollectionEnumConnected  GamesPlayersListCollectionEnum = "CONNECTED"
	GamesPlayersListCollectionEnumVisible    GamesPlayersListCollectionEnum = "VISIBLE"
	GamesPlayersListCollectionEnumFriendsAll GamesPlayersListCollectionEnum = "FRIENDS_ALL"
)

func (e *GamesPlayersListCollectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONNECTED":
		fallthrough
	case "VISIBLE":
		fallthrough
	case "FRIENDS_ALL":
		*e = GamesPlayersListCollectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GamesPlayersListCollectionEnum: %s", s)
	}
}

type GamesPlayersListPathParams struct {
	// Collection of players being retrieved
	Collection GamesPlayersListCollectionEnum `pathParam:"style=simple,explode=false,name=collection"`
}

type GamesPlayersListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The preferred language to use for strings returned by this method.
	Language *string `queryParam:"style=form,explode=true,name=language"`
	// The maximum number of player resources to return in the response, used for paging. For any response, the actual number of player resources returned may be less than the specified `maxResults`.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The token returned by the previous request.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type GamesPlayersListRequest struct {
	PathParams  GamesPlayersListPathParams
	QueryParams GamesPlayersListQueryParams
	Security    GamesPlayersListSecurity
}

type GamesPlayersListResponse struct {
	ContentType string
	// Successful response
	PlayerListResponse *shared.PlayerListResponse
	StatusCode         int
	RawResponse        *http.Response
}
