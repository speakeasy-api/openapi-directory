// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FindingEnum string

const (
	FindingEnumUnderprovisioned FindingEnum = "Underprovisioned"
	FindingEnumOverprovisioned  FindingEnum = "Overprovisioned"
	FindingEnumOptimized        FindingEnum = "Optimized"
	FindingEnumNotOptimized     FindingEnum = "NotOptimized"
)

func (e FindingEnum) ToPointer() *FindingEnum {
	return &e
}

func (e *FindingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Underprovisioned":
		fallthrough
	case "Overprovisioned":
		fallthrough
	case "Optimized":
		fallthrough
	case "NotOptimized":
		*e = FindingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindingEnum: %v", v)
	}
}
