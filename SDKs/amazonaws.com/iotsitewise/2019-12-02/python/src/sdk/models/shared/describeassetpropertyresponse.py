"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import compositemodelproperty as shared_compositemodelproperty
from ..shared import property as shared_property
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeAssetPropertyResponse:
    r"""Success"""
    
    asset_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetId') }})  
    asset_model_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetModelId') }})  
    asset_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetName') }})  
    asset_property: Optional[shared_property.Property] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetProperty'), 'exclude': lambda f: f is None }})  
    composite_model: Optional[shared_compositemodelproperty.CompositeModelProperty] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compositeModel'), 'exclude': lambda f: f is None }})  
    