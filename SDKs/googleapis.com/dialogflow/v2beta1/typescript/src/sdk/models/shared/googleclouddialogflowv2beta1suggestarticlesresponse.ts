/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDialogflowV2beta1ArticleAnswer } from "./googleclouddialogflowv2beta1articleanswer";
import { Expose, Type } from "class-transformer";

/**
 * The response message for Participants.SuggestArticles.
 */
export class GoogleCloudDialogflowV2beta1SuggestArticlesResponse extends SpeakeasyBase {
  /**
   * Output only. Articles ordered by score in descending order.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDialogflowV2beta1ArticleAnswer })
  @Expose({ name: "articleAnswers" })
  @Type(() => GoogleCloudDialogflowV2beta1ArticleAnswer)
  articleAnswers?: GoogleCloudDialogflowV2beta1ArticleAnswer[];

  /**
   * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesResponse.context_size field in the request if there aren't that many messages in the conversation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contextSize" })
  contextSize?: number;

  /**
   * The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latestMessage" })
  latestMessage?: string;
}
