/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoToken } from "./enterprisecrmeventbusprototoken";
import { Expose, Type } from "class-transformer";

/**
 * Email address along with optional name and tokens. These tokens will be substituted for the variables in the form of [{var_name}], where var_name could be any string of no more than 32 bytes.
 */
export class EnterpriseCrmEventbusProtoAddress extends SpeakeasyBase {
  /**
   * Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: EnterpriseCrmEventbusProtoToken })
  @Expose({ name: "tokens" })
  @Type(() => EnterpriseCrmEventbusProtoToken)
  tokens?: EnterpriseCrmEventbusProtoToken[];
}
