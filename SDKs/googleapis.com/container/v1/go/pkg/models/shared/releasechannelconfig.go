// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReleaseChannelConfigChannelEnum - The release channel this configuration applies to.
type ReleaseChannelConfigChannelEnum string

const (
	ReleaseChannelConfigChannelEnumUnspecified ReleaseChannelConfigChannelEnum = "UNSPECIFIED"
	ReleaseChannelConfigChannelEnumRapid       ReleaseChannelConfigChannelEnum = "RAPID"
	ReleaseChannelConfigChannelEnumRegular     ReleaseChannelConfigChannelEnum = "REGULAR"
	ReleaseChannelConfigChannelEnumStable      ReleaseChannelConfigChannelEnum = "STABLE"
)

func (e *ReleaseChannelConfigChannelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED":
		fallthrough
	case "RAPID":
		fallthrough
	case "REGULAR":
		fallthrough
	case "STABLE":
		*e = ReleaseChannelConfigChannelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseChannelConfigChannelEnum: %s", s)
	}
}

// ReleaseChannelConfig - ReleaseChannelConfig exposes configuration for a release channel.
type ReleaseChannelConfig struct {
	// The release channel this configuration applies to.
	Channel *ReleaseChannelConfigChannelEnum `json:"channel,omitempty"`
	// The default version for newly created clusters on the channel.
	DefaultVersion *string `json:"defaultVersion,omitempty"`
	// List of valid versions for the channel.
	ValidVersions []string `json:"validVersions,omitempty"`
}
