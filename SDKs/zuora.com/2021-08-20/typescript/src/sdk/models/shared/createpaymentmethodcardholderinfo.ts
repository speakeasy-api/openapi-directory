/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Container for cardholder information. If provided, Zuora will
 *
 * @remarks
 * only use this information for this card. Otherwise, Zuora will use
 * the account''s existing bill-to contact information for this card.
 *
 */
export class CreatePaymentMethodCardholderInfo extends SpeakeasyBase {
  /**
   * First address line, 255 characters or less.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressLine1" })
  addressLine1?: string;

  /**
   * Second address line, 255 characters or less.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressLine2" })
  addressLine2?: string;

  /**
   * The card holder's full name as it appears on the card, e.g., "John J Smith", 50 characters or less.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cardHolderName" })
  cardHolderName: string;

  /**
   * City, 40 characters or less.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Country, must be a valid country name or abbreviation.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Card holder's email address, 80 characters or less.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Phone number, 40 characters or less.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * State; must be a valid state name or 2-character abbreviation.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Zip code, 20 characters or less.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zipCode" })
  zipCode?: string;
}
