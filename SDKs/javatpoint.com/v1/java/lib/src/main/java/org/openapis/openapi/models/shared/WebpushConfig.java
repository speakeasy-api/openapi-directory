/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WebpushConfig - [Webpush protocol](https://tools.ietf.org/html/rfc8030) options.
 */
public class WebpushConfig {
    /**
     * Arbitrary key/value payload. If present, it will override google.firebase.fcm.v1.Message.data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public java.util.Map<String, String> data;

    public WebpushConfig withData(java.util.Map<String, String> data) {
        this.data = data;
        return this;
    }
    
    /**
     * Options for features provided by the FCM SDK for Web.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fcmOptions")
    public WebpushFcmOptions fcmOptions;

    public WebpushConfig withFcmOptions(WebpushFcmOptions fcmOptions) {
        this.fcmOptions = fcmOptions;
        return this;
    }
    
    /**
     * HTTP headers defined in webpush protocol. Refer to [Webpush protocol](https://tools.ietf.org/html/rfc8030#section-5) for supported headers, e.g. "TTL": "15".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public java.util.Map<String, String> headers;

    public WebpushConfig withHeaders(java.util.Map<String, String> headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * Web Notification options as a JSON object. Supports Notification instance properties as defined in [Web Notification API](https://developer.mozilla.org/en-US/docs/Web/API/Notification). If present, "title" and "body" fields override [google.firebase.fcm.v1.Notification.title] and [google.firebase.fcm.v1.Notification.body].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notification")
    public java.util.Map<String, Object> notification;

    public WebpushConfig withNotification(java.util.Map<String, Object> notification) {
        this.notification = notification;
        return this;
    }
    
    public WebpushConfig(){}
}
