/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorAssociationEnum } from "./authorassociationenum";
import { NullableIntegration } from "./nullableintegration";
import { ReactionRollup } from "./reactionrollup";
import { SimpleUser } from "./simpleuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Timeline Comment Event
 */
export class TimelineCommentEvent extends SpeakeasyBase {
  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actor" })
  @Type(() => SimpleUser)
  actor: SimpleUser;

  /**
   * How the author is associated with the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "author_association" })
  authorAssociation: AuthorAssociationEnum;

  /**
   * Contents of the issue comment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body_html" })
  bodyHtml?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body_text" })
  bodyText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * Unique identifier of the issue comment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "issue_url" })
  issueUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  /**
   * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "performed_via_github_app" })
  @Type(() => NullableIntegration)
  performedViaGithubApp?: NullableIntegration;

  @SpeakeasyMetadata()
  @Expose({ name: "reactions" })
  @Type(() => ReactionRollup)
  reactions?: ReactionRollup;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * URL for the issue comment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => SimpleUser)
  user: SimpleUser;
}
