// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type StartProtectedQueryPathParams struct {
	// A unique identifier for the membership to run this query against. Currently accepts a membership ID.
	MembershipIdentifier string `pathParam:"style=simple,explode=false,name=membershipIdentifier"`
}

type StartProtectedQueryHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// StartProtectedQueryRequestBodyResultConfiguration - Contains configurations for protected query results.
type StartProtectedQueryRequestBodyResultConfiguration struct {
	OutputConfiguration *shared.ProtectedQueryOutputConfiguration `json:"outputConfiguration,omitempty"`
}

// StartProtectedQueryRequestBodySQLParameters - The parameters for the SQL type Protected Query.
type StartProtectedQueryRequestBodySQLParameters struct {
	QueryString *string `json:"queryString,omitempty"`
}

// StartProtectedQueryRequestBodyTypeEnum - The type of the protected query to be started.
type StartProtectedQueryRequestBodyTypeEnum string

const (
	StartProtectedQueryRequestBodyTypeEnumSQL StartProtectedQueryRequestBodyTypeEnum = "SQL"
)

func (e *StartProtectedQueryRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SQL":
		*e = StartProtectedQueryRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartProtectedQueryRequestBodyTypeEnum: %s", s)
	}
}

type StartProtectedQueryRequestBody struct {
	// Contains configurations for protected query results.
	ResultConfiguration StartProtectedQueryRequestBodyResultConfiguration `json:"resultConfiguration"`
	// The parameters for the SQL type Protected Query.
	SQLParameters StartProtectedQueryRequestBodySQLParameters `json:"sqlParameters"`
	// The type of the protected query to be started.
	Type StartProtectedQueryRequestBodyTypeEnum `json:"type"`
}

type StartProtectedQueryRequest struct {
	PathParams StartProtectedQueryPathParams
	Headers    StartProtectedQueryHeaders
	Request    StartProtectedQueryRequestBody `request:"mediaType=application/json"`
}

type StartProtectedQueryResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	StartProtectedQueryOutput *shared.StartProtectedQueryOutput
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
