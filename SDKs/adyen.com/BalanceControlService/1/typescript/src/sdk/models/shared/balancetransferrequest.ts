/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Amount } from "./amount";
import { Expose, Type } from "class-transformer";

/**
 * The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.
 */
export enum BalanceTransferRequestTypeEnum {
  Tax = "tax",
  Fee = "fee",
  TerminalSale = "terminalSale",
  Credit = "credit",
  Debit = "debit",
  Adjustment = "adjustment",
}

export class BalanceTransferRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => Amount)
  amount: Amount;

  /**
   * A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The unique identifier of the source merchant account from which funds are deducted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromMerchant" })
  fromMerchant: string;

  /**
   * A reference for the balance transfer. If you don't provide this in the request, Adyen generates a unique reference.
   *
   * @remarks
   * Maximum length: 80 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * The unique identifier of the destination merchant account from which funds are transferred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toMerchant" })
  toMerchant: string;

  /**
   * The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: BalanceTransferRequestTypeEnum;
}
