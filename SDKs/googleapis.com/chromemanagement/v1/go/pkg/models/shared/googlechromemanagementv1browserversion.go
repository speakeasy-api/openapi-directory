// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleChromeManagementV1BrowserVersionChannelEnum - Output only. The release channel of the installed browser.
type GoogleChromeManagementV1BrowserVersionChannelEnum string

const (
	GoogleChromeManagementV1BrowserVersionChannelEnumReleaseChannelUnspecified GoogleChromeManagementV1BrowserVersionChannelEnum = "RELEASE_CHANNEL_UNSPECIFIED"
	GoogleChromeManagementV1BrowserVersionChannelEnumCanary                    GoogleChromeManagementV1BrowserVersionChannelEnum = "CANARY"
	GoogleChromeManagementV1BrowserVersionChannelEnumDev                       GoogleChromeManagementV1BrowserVersionChannelEnum = "DEV"
	GoogleChromeManagementV1BrowserVersionChannelEnumBeta                      GoogleChromeManagementV1BrowserVersionChannelEnum = "BETA"
	GoogleChromeManagementV1BrowserVersionChannelEnumStable                    GoogleChromeManagementV1BrowserVersionChannelEnum = "STABLE"
)

func (e *GoogleChromeManagementV1BrowserVersionChannelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RELEASE_CHANNEL_UNSPECIFIED":
		fallthrough
	case "CANARY":
		fallthrough
	case "DEV":
		fallthrough
	case "BETA":
		fallthrough
	case "STABLE":
		*e = GoogleChromeManagementV1BrowserVersionChannelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleChromeManagementV1BrowserVersionChannelEnum: %s", s)
	}
}

// GoogleChromeManagementV1BrowserVersionSystemEnum - Output only. The device operating system.
type GoogleChromeManagementV1BrowserVersionSystemEnum string

const (
	GoogleChromeManagementV1BrowserVersionSystemEnumDeviceSystemUnspecified GoogleChromeManagementV1BrowserVersionSystemEnum = "DEVICE_SYSTEM_UNSPECIFIED"
	GoogleChromeManagementV1BrowserVersionSystemEnumSystemOther             GoogleChromeManagementV1BrowserVersionSystemEnum = "SYSTEM_OTHER"
	GoogleChromeManagementV1BrowserVersionSystemEnumSystemAndroid           GoogleChromeManagementV1BrowserVersionSystemEnum = "SYSTEM_ANDROID"
	GoogleChromeManagementV1BrowserVersionSystemEnumSystemIos               GoogleChromeManagementV1BrowserVersionSystemEnum = "SYSTEM_IOS"
	GoogleChromeManagementV1BrowserVersionSystemEnumSystemCros              GoogleChromeManagementV1BrowserVersionSystemEnum = "SYSTEM_CROS"
	GoogleChromeManagementV1BrowserVersionSystemEnumSystemWindows           GoogleChromeManagementV1BrowserVersionSystemEnum = "SYSTEM_WINDOWS"
	GoogleChromeManagementV1BrowserVersionSystemEnumSystemMac               GoogleChromeManagementV1BrowserVersionSystemEnum = "SYSTEM_MAC"
	GoogleChromeManagementV1BrowserVersionSystemEnumSystemLinux             GoogleChromeManagementV1BrowserVersionSystemEnum = "SYSTEM_LINUX"
)

func (e *GoogleChromeManagementV1BrowserVersionSystemEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEVICE_SYSTEM_UNSPECIFIED":
		fallthrough
	case "SYSTEM_OTHER":
		fallthrough
	case "SYSTEM_ANDROID":
		fallthrough
	case "SYSTEM_IOS":
		fallthrough
	case "SYSTEM_CROS":
		fallthrough
	case "SYSTEM_WINDOWS":
		fallthrough
	case "SYSTEM_MAC":
		fallthrough
	case "SYSTEM_LINUX":
		*e = GoogleChromeManagementV1BrowserVersionSystemEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleChromeManagementV1BrowserVersionSystemEnum: %s", s)
	}
}

// GoogleChromeManagementV1BrowserVersion - Describes a browser version and its install count.
type GoogleChromeManagementV1BrowserVersion struct {
	// Output only. The release channel of the installed browser.
	Channel *GoogleChromeManagementV1BrowserVersionChannelEnum `json:"channel,omitempty"`
	// Output only. Count grouped by device_system and major version
	Count *string `json:"count,omitempty"`
	// Output only. Version of the system-specified operating system.
	DeviceOsVersion *string `json:"deviceOsVersion,omitempty"`
	// Output only. The device operating system.
	System *GoogleChromeManagementV1BrowserVersionSystemEnum `json:"system,omitempty"`
	// Output only. The full version of the installed browser.
	Version *string `json:"version,omitempty"`
}
