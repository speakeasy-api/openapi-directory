/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDialogflowV2beta1EnvironmentInput - You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).
 */
public class GoogleCloudDialogflowV2beta1EnvironmentInput {
    /**
     * Optional. The agent version loaded into this environment. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("agentVersion")
    public String agentVersion;

    public GoogleCloudDialogflowV2beta1EnvironmentInput withAgentVersion(String agentVersion) {
        this.agentVersion = agentVersion;
        return this;
    }
    
    /**
     * Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public GoogleCloudDialogflowV2beta1EnvironmentInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday. For more information, see the [fulfillment guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fulfillment")
    public GoogleCloudDialogflowV2beta1Fulfillment fulfillment;

    public GoogleCloudDialogflowV2beta1EnvironmentInput withFulfillment(GoogleCloudDialogflowV2beta1Fulfillment fulfillment) {
        this.fulfillment = fulfillment;
        return this;
    }
    
    /**
     * Instructs the speech synthesizer on how to generate the output audio content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textToSpeechSettings")
    public GoogleCloudDialogflowV2beta1TextToSpeechSettings textToSpeechSettings;

    public GoogleCloudDialogflowV2beta1EnvironmentInput withTextToSpeechSettings(GoogleCloudDialogflowV2beta1TextToSpeechSettings textToSpeechSettings) {
        this.textToSpeechSettings = textToSpeechSettings;
        return this;
    }
    
    public GoogleCloudDialogflowV2beta1EnvironmentInput(){}
}
