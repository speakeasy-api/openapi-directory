<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Integration - GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Integration
{
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('client_secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientSecret = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * The list of events for the GitHub app
     * 
     * @var array<string> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $events;
    
	#[\JMS\Serializer\Annotation\SerializedName('external_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $externalUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $htmlUrl;
    
    /**
     * Unique identifier of the GitHub app
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * The number of installations associated with the GitHub app
     * 
     * @var ?int $installationsCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('installations_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $installationsCount = null;
    
    /**
     * The name of the GitHub app
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
    /**
     * Simple User
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $owner
     */
	#[\JMS\Serializer\Annotation\SerializedName('owner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $owner;
    
	#[\JMS\Serializer\Annotation\SerializedName('pem')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pem = null;
    
    /**
     * The set of permissions for the GitHub app
     * 
     * @var array<string, string> $permissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissions')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $permissions;
    
    /**
     * The slug name of the GitHub app
     * 
     * @var ?string $slug
     */
	#[\JMS\Serializer\Annotation\SerializedName('slug')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $slug = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('webhook_secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webhookSecret = null;
    
	public function __construct()
	{
		$this->clientId = null;
		$this->clientSecret = null;
		$this->createdAt = new \DateTime();
		$this->description = "";
		$this->events = [];
		$this->externalUrl = "";
		$this->htmlUrl = "";
		$this->id = 0;
		$this->installationsCount = null;
		$this->name = "";
		$this->nodeId = "";
		$this->owner = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
		$this->pem = null;
		$this->permissions = [];
		$this->slug = null;
		$this->updatedAt = new \DateTime();
		$this->webhookSecret = null;
	}
}
