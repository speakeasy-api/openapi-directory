/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas {
    /**
     * This object contains information about the delivery window available to the shopper.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableDeliveryWindows")
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasAvailableDeliveryWindows availableDeliveryWindows;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withAvailableDeliveryWindows(CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasAvailableDeliveryWindows availableDeliveryWindows) {
        this.availableDeliveryWindows = availableDeliveryWindows;
        return this;
    }
    
    /**
     * Delivery channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryChannel")
    public String deliveryChannel;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withDeliveryChannel(String deliveryChannel) {
        this.deliveryChannel = deliveryChannel;
        return this;
    }
    
    /**
     * Information on each delivery ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryIds")
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryIds[] deliveryIds;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withDeliveryIds(CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryIds[] deliveryIds) {
        this.deliveryIds = deliveryIds;
        return this;
    }
    
    /**
     * In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryWindow")
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryWindow deliveryWindow;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withDeliveryWindow(CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryWindow deliveryWindow) {
        this.deliveryWindow = deliveryWindow;
        return this;
    }
    
    /**
     * SLA ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * List price in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listPrice")
    public Long listPrice;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withListPrice(Long listPrice) {
        this.listPrice = listPrice;
        return this;
    }
    
    /**
     * Estimate date of delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lockTTL")
    public String lockTTL;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withLockTTL(String lockTTL) {
        this.lockTTL = lockTTL;
        return this;
    }
    
    /**
     * SLA name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Pickup point distance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupDistance")
    public Long pickupDistance;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withPickupDistance(Long pickupDistance) {
        this.pickupDistance = pickupDistance;
        return this;
    }
    
    /**
     * Pickup point ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupPointId")
    public String pickupPointId;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withPickupPointId(String pickupPointId) {
        this.pickupPointId = pickupPointId;
        return this;
    }
    
    /**
     * Information on the pickup store.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupStoreInfo")
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasPickupStoreInfo pickupStoreInfo;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withPickupStoreInfo(CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasPickupStoreInfo pickupStoreInfo) {
        this.pickupStoreInfo = pickupStoreInfo;
        return this;
    }
    
    /**
     * Polygon name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("polygonName")
    public String polygonName;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withPolygonName(String polygonName) {
        this.polygonName = polygonName;
        return this;
    }
    
    /**
     * Price in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Long price;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withPrice(Long price) {
        this.price = price;
        return this;
    }
    
    /**
     * Shipping estimate. For instance, "three business days" will be represented as `3bd`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingEstimate")
    public String shippingEstimate;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withShippingEstimate(String shippingEstimate) {
        this.shippingEstimate = shippingEstimate;
        return this;
    }
    
    /**
     * Shipping estimate date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingEstimateDate")
    public String shippingEstimateDate;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withShippingEstimateDate(String shippingEstimateDate) {
        this.shippingEstimateDate = shippingEstimateDate;
        return this;
    }
    
    /**
     * Tax in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax")
    public Long tax;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withTax(Long tax) {
        this.tax = tax;
        return this;
    }
    
    /**
     * Transit time. For instance, "three business days" is represented as `3bd`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transitTime")
    public String transitTime;
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas withTransitTime(String transitTime) {
        this.transitTime = transitTime;
        return this;
    }
    
}
