/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Summary - Represents a background check summary
 */
public class Summary {
    /**
     * Person date of birth in RFC3339 format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_of_birth")
    public OffsetDateTime dateOfBirth;
    public Summary withDateOfBirth(OffsetDateTime dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }
    
    /**
     * Person date of death
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("death_date")
    public OffsetDateTime deathDate;
    public Summary withDeathDate(OffsetDateTime deathDate) {
        this.deathDate = deathDate;
        return this;
    }
    
    /**
     * Person driver's license
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drivers_license")
    public String driversLicense;
    public Summary withDriversLicense(String driversLicense) {
        this.driversLicense = driversLicense;
        return this;
    }
    
    /**
     * Person gender
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public SummaryGenderEnum gender;
    public Summary withGender(SummaryGenderEnum gender) {
        this.gender = gender;
        return this;
    }
    
    /**
     * Indicates whether a person was found, found as dead or not found at all
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identity_status")
    public SummaryIdentityStatusEnum identityStatus;
    public Summary withIdentityStatus(SummaryIdentityStatusEnum identityStatus) {
        this.identityStatus = identityStatus;
        return this;
    }
    
    /**
     * Names found during the background check process
     */
    @JsonProperty("names_found")
    public NameFound[] namesFound;
    public Summary withNamesFound(NameFound[] namesFound) {
        this.namesFound = namesFound;
        return this;
    }
    
    /**
     * Social security number of the person (Mexico)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nss")
    public String nss;
    public Summary withNss(String nss) {
        this.nss = nss;
        return this;
    }
    
    /**
     * Federal taxpayer registration number of the person
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rfc")
    public String rfc;
    public Summary withRfc(String rfc) {
        this.rfc = rfc;
        return this;
    }
    
}
