<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Token - Represents the smallest syntactic building block of the text.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Token
{
    /**
     * Represents dependency parse tree information for a token. (For more information on dependency labels, see http://www.aclweb.org/anthology/P13-2017
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DependencyEdge $dependencyEdge
     */
	#[\JMS\Serializer\Annotation\SerializedName('dependencyEdge')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DependencyEdge')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DependencyEdge $dependencyEdge = null;
    
    /**
     * [Lemma](https://en.wikipedia.org/wiki/Lemma_%28morphology%29) of the token.
     * 
     * @var ?string $lemma
     */
	#[\JMS\Serializer\Annotation\SerializedName('lemma')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lemma = null;
    
    /**
     * Represents part of speech information for a token. Parts of speech are as defined in http://www.lrec-conf.org/proceedings/lrec2012/pdf/274_Paper.pdf
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PartOfSpeech $partOfSpeech
     */
	#[\JMS\Serializer\Annotation\SerializedName('partOfSpeech')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PartOfSpeech')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartOfSpeech $partOfSpeech = null;
    
    /**
     * Represents an output piece of text.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TextSpan $text
     */
	#[\JMS\Serializer\Annotation\SerializedName('text')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TextSpan')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TextSpan $text = null;
    
	public function __construct()
	{
		$this->dependencyEdge = null;
		$this->lemma = null;
		$this->partOfSpeech = null;
		$this->text = null;
	}
}
