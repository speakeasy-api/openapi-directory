// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AppleMappingDeleteSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type AppleMappingDeleteRequest struct {
	RequestBody *string `request:"mediaType=application/json"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AppleMappingDeleteDefaultApplicationJSONCodeEnum string

const (
	AppleMappingDeleteDefaultApplicationJSONCodeEnumBadRequest          AppleMappingDeleteDefaultApplicationJSONCodeEnum = "BadRequest"
	AppleMappingDeleteDefaultApplicationJSONCodeEnumConflict            AppleMappingDeleteDefaultApplicationJSONCodeEnum = "Conflict"
	AppleMappingDeleteDefaultApplicationJSONCodeEnumNotAcceptable       AppleMappingDeleteDefaultApplicationJSONCodeEnum = "NotAcceptable"
	AppleMappingDeleteDefaultApplicationJSONCodeEnumNotFound            AppleMappingDeleteDefaultApplicationJSONCodeEnum = "NotFound"
	AppleMappingDeleteDefaultApplicationJSONCodeEnumInternalServerError AppleMappingDeleteDefaultApplicationJSONCodeEnum = "InternalServerError"
	AppleMappingDeleteDefaultApplicationJSONCodeEnumUnauthorized        AppleMappingDeleteDefaultApplicationJSONCodeEnum = "Unauthorized"
	AppleMappingDeleteDefaultApplicationJSONCodeEnumTooManyRequests     AppleMappingDeleteDefaultApplicationJSONCodeEnum = "TooManyRequests"
)

func (e AppleMappingDeleteDefaultApplicationJSONCodeEnum) ToPointer() *AppleMappingDeleteDefaultApplicationJSONCodeEnum {
	return &e
}

func (e *AppleMappingDeleteDefaultApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppleMappingDeleteDefaultApplicationJSONCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppleMappingDeleteDefaultApplicationJSONCodeEnum: %v", v)
	}
}

// AppleMappingDeleteDefaultApplicationJSON - Error
type AppleMappingDeleteDefaultApplicationJSON struct {
	Code    AppleMappingDeleteDefaultApplicationJSONCodeEnum `json:"code"`
	Message string                                           `json:"message"`
}

type AppleMappingDeleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	AppleMappingDeleteDefaultApplicationJSONObject *AppleMappingDeleteDefaultApplicationJSON
}
