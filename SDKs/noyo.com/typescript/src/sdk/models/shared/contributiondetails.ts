/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of contribution rule
 */
export enum ContributionDetailsContributionRuleTypeEnum {
  FixedDollar = "fixed_dollar",
  Percent = "percent",
}

/**
 * The source of the contribution, either employee_amount or employer_amount
 */
export enum ContributionDetailsContributionSourceEnum {
  EmployeeAmount = "employee_amount",
  EmployerAmount = "employer_amount",
}

/**
 * Where this particular contribution rule is applied, either employee or dependents
 */
export enum ContributionDetailsContributionTargetEnum {
  Dependents = "dependents",
  Employee = "employee",
}

export class ContributionDetails extends SpeakeasyBase {
  /**
   * The contribution rule
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contribution_rule" })
  contributionRule: string;

  /**
   * The type of contribution rule
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contribution_rule_type" })
  contributionRuleType: ContributionDetailsContributionRuleTypeEnum;

  /**
   * The source of the contribution, either employee_amount or employer_amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contribution_source" })
  contributionSource: ContributionDetailsContributionSourceEnum;

  /**
   * Where this particular contribution rule is applied, either employee or dependents
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contribution_target" })
  contributionTarget: ContributionDetailsContributionTargetEnum;
}
