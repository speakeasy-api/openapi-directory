/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * License agreement to use for licensing
 */
export enum LicenseEditorialVideoContentLicenseEnum {
  PremierEditorialVideoDigitalOnly = "premier_editorial_video_digital_only",
  PremierEditorialVideoAllMedia = "premier_editorial_video_all_media",
  PremierEditorialVideoAllMediaSingleTerritory = "premier_editorial_video_all_media_single_territory",
  PremierEditorialVideoComp = "premier_editorial_video_comp",
}

/**
 * Asset size to download
 */
export enum LicenseEditorialVideoContentSizeEnum {
  Original = "original",
}

/**
 * Individual editorial video content to license
 */
export class LicenseEditorialVideoContent extends SpeakeasyBase {
  /**
   * Editorial ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "editorial_id" })
  editorialId: string;

  /**
   * License agreement to use for licensing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "license" })
  license: LicenseEditorialVideoContentLicenseEnum;

  /**
   * Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, any>;

  /**
   * Asset size to download
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: LicenseEditorialVideoContentSizeEnum;
}
