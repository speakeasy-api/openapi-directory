/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata - Metadata for global schema behavior.
 */
public class GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata {
    /**
     * If true, on a given page, there can be multiple `document` annotations covering it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentAllowMultipleLabels")
    public Boolean documentAllowMultipleLabels;
    public GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata withDocumentAllowMultipleLabels(Boolean documentAllowMultipleLabels) {
        this.documentAllowMultipleLabels = documentAllowMultipleLabels;
        return this;
    }
    
    /**
     * If true, a `document` entity type can be applied to subdocument ( splitting). Otherwise, it can only be applied to the entire document (classification).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentSplitter")
    public Boolean documentSplitter;
    public GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata withDocumentSplitter(Boolean documentSplitter) {
        this.documentSplitter = documentSplitter;
        return this;
    }
    
    /**
     * If set, all the nested entities must be prefixed with the parents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prefixedNamingOnProperties")
    public Boolean prefixedNamingOnProperties;
    public GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata withPrefixedNamingOnProperties(Boolean prefixedNamingOnProperties) {
        this.prefixedNamingOnProperties = prefixedNamingOnProperties;
        return this;
    }
    
    /**
     * If set, we will skip the naming format validation in the schema. So the string values in `DocumentSchema.EntityType.name` and `DocumentSchema.EntityType.Property.name` will not be checked.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skipNamingValidation")
    public Boolean skipNamingValidation;
    public GoogleCloudDocumentaiV1beta3DocumentSchemaMetadata withSkipNamingValidation(Boolean skipNamingValidation) {
        this.skipNamingValidation = skipNamingValidation;
        return this;
    }
    
}
