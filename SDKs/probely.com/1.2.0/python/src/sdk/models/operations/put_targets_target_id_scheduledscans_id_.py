"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from ..shared import recurrence_enum as shared_recurrence_enum
from ..shared import scheduled as shared_scheduled
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutTargetsTargetIDScheduledscansIDRequestBody:
    
    date_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_time'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date time of next scan"""  
    recurrence: Optional[shared_recurrence_enum.RecurrenceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recurrence'), 'exclude': lambda f: f is None }})
    r"""Scan recurrence:
      * d - daily
      * w - weekly
      * m - monthly
      * q - quarterly
      * '' - no recurrence
    """  
    

@dataclasses.dataclass
class PutTargetsTargetIDScheduledscansIDRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Object Id"""  
    request_body: PutTargetsTargetIDScheduledscansIDRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    target_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'target_id', 'style': 'simple', 'explode': False }})
    r"""Target id"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutTargetsTargetIDScheduledscansID404ApplicationJSON:
    r"""Not found"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Not found."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutTargetsTargetIDScheduledscansID403ApplicationJSON:
    r"""Not allowed to perform operation"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Error message."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutTargetsTargetIDScheduledscansID401ApplicationJSON:
    r"""Access token is missing or invalid"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutTargetsTargetIDScheduledscansID400ApplicationJSON:
    r"""Bad Request"""
    
    less_than_field_name_greater_than: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('<field name>'), 'exclude': lambda f: f is None }})  
    non_field_errors: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('non_field_errors'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PutTargetsTargetIDScheduledscansIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    put_targets_target_id_scheduledscans_id_400_application_json_object: Optional[PutTargetsTargetIDScheduledscansID400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad Request"""  
    put_targets_target_id_scheduledscans_id_401_application_json_object: Optional[PutTargetsTargetIDScheduledscansID401ApplicationJSON] = dataclasses.field(default=None)
    r"""Access token is missing or invalid"""  
    put_targets_target_id_scheduledscans_id_403_application_json_object: Optional[PutTargetsTargetIDScheduledscansID403ApplicationJSON] = dataclasses.field(default=None)
    r"""Not allowed to perform operation"""  
    put_targets_target_id_scheduledscans_id_404_application_json_object: Optional[PutTargetsTargetIDScheduledscansID404ApplicationJSON] = dataclasses.field(default=None)
    r"""Not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    scheduled: Optional[shared_scheduled.Scheduled] = dataclasses.field(default=None)
    r"""Scheduled scan object"""  
    