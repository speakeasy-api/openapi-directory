// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GrpcRetryPolicyEventEnum string

const (
	GrpcRetryPolicyEventEnumCancelled         GrpcRetryPolicyEventEnum = "cancelled"
	GrpcRetryPolicyEventEnumDeadlineExceeded  GrpcRetryPolicyEventEnum = "deadline-exceeded"
	GrpcRetryPolicyEventEnumInternal          GrpcRetryPolicyEventEnum = "internal"
	GrpcRetryPolicyEventEnumResourceExhausted GrpcRetryPolicyEventEnum = "resource-exhausted"
	GrpcRetryPolicyEventEnumUnavailable       GrpcRetryPolicyEventEnum = "unavailable"
)

func (e GrpcRetryPolicyEventEnum) ToPointer() *GrpcRetryPolicyEventEnum {
	return &e
}

func (e *GrpcRetryPolicyEventEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cancelled":
		fallthrough
	case "deadline-exceeded":
		fallthrough
	case "internal":
		fallthrough
	case "resource-exhausted":
		fallthrough
	case "unavailable":
		*e = GrpcRetryPolicyEventEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrpcRetryPolicyEventEnum: %v", v)
	}
}
