"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import backupretentionpolicy as shared_backupretentionpolicy
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateClusterRequest:
    
    hsm_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HsmType') }})  
    subnet_ids: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubnetIds') }})  
    backup_retention_policy: Optional[shared_backupretentionpolicy.BackupRetentionPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BackupRetentionPolicy'), 'exclude': lambda f: f is None }})  
    source_backup_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceBackupId'), 'exclude': lambda f: f is None }})  
    tag_list: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TagList'), 'exclude': lambda f: f is None }})  
    