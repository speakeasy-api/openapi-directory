/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EndpointInfo } from "./endpointinfo";
import { EndpointInputConfiguration } from "./endpointinputconfiguration";
import { RecommendationJobContainerConfig } from "./recommendationjobcontainerconfig";
import { RecommendationJobResourceLimit } from "./recommendationjobresourcelimit";
import { RecommendationJobVpcConfig } from "./recommendationjobvpcconfig";
import { TrafficPattern } from "./trafficpattern";
import { Expose, Type } from "class-transformer";

/**
 * The input configuration of the recommendation job.
 */
export class RecommendationJobInputConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ContainerConfig" })
  @Type(() => RecommendationJobContainerConfig)
  containerConfig?: RecommendationJobContainerConfig;

  @SpeakeasyMetadata({ elemType: EndpointInputConfiguration })
  @Expose({ name: "EndpointConfigurations" })
  @Type(() => EndpointInputConfiguration)
  endpointConfigurations?: EndpointInputConfiguration[];

  @SpeakeasyMetadata({ elemType: EndpointInfo })
  @Expose({ name: "Endpoints" })
  @Type(() => EndpointInfo)
  endpoints?: EndpointInfo[];

  @SpeakeasyMetadata()
  @Expose({ name: "JobDurationInSeconds" })
  jobDurationInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelName" })
  modelName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageVersionArn" })
  modelPackageVersionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceLimit" })
  @Type(() => RecommendationJobResourceLimit)
  resourceLimit?: RecommendationJobResourceLimit;

  @SpeakeasyMetadata()
  @Expose({ name: "TrafficPattern" })
  @Type(() => TrafficPattern)
  trafficPattern?: TrafficPattern;

  @SpeakeasyMetadata()
  @Expose({ name: "VolumeKmsKeyId" })
  volumeKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfig" })
  @Type(() => RecommendationJobVpcConfig)
  vpcConfig?: RecommendationJobVpcConfig;
}
