<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateSubscriptionTerms - Container for the terms and renewal settings of the subscription.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateSubscriptionTerms
{
    /**
     * Specifies whether the subscription automatically renews at the end of the each term. Only applicable if the type of the first term is `TERMED`.
     * 
     * 
     * 
     * @var ?bool $autoRenew
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoRenew')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoRenew = null;
    
    /**
     * Information about the first term of the subscription.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CreateSubscriptionTermsInitialTerm $initialTerm
     */
	#[\JMS\Serializer\Annotation\SerializedName('initialTerm')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CreateSubscriptionTermsInitialTerm')]
    public CreateSubscriptionTermsInitialTerm $initialTerm;
    
    /**
     * Specifies the type of the terms that follow the first term if the subscription is renewed. Only applicable if the type of the first term is `TERMED`.
     * 
     * 
     * * `RENEW_WITH_SPECIFIC_TERM` - Each renewal term has a predefined duration. The first entry in `renewalTerms` specifies the duration of the second term of the subscription, the second entry in `renewalTerms` specifies the duration of the third term of the subscription, and so on. The last entry in `renewalTerms` specifies the ultimate duration of each renewal term.
     * * `RENEW_TO_EVERGREEN` - The second term of the subscription does not have a predefined duration.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateSubscriptionTermsRenewalSettingEnum $renewalSetting
     */
	#[\JMS\Serializer\Annotation\SerializedName('renewalSetting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateSubscriptionTermsRenewalSettingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateSubscriptionTermsRenewalSettingEnum $renewalSetting = null;
    
    /**
     * List of renewal terms of the subscription. Only applicable if the type of the first term is `TERMED` and the value of the `renewalSetting` field is `RENEW_WITH_SPECIFIC_TERM`.
     * 
     * 
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\RenewalTerm> $renewalTerms
     */
	#[\JMS\Serializer\Annotation\SerializedName('renewalTerms')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RenewalTerm>')]
    public array $renewalTerms;
    
	public function __construct()
	{
		$this->autoRenew = null;
		$this->initialTerm = new \OpenAPI\OpenAPI\Models\Shared\CreateSubscriptionTermsInitialTerm();
		$this->renewalSetting = null;
		$this->renewalTerms = [];
	}
}
