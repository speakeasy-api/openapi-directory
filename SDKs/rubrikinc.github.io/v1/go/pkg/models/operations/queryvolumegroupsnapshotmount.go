// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryVolumeGroupSnapshotMountSortByEnum - The Volume Group mount attribute used in sorting the responses. Valid choices are name, sourceHostName, snapshotDate, and mountedDate.
type QueryVolumeGroupSnapshotMountSortByEnum string

const (
	QueryVolumeGroupSnapshotMountSortByEnumName           QueryVolumeGroupSnapshotMountSortByEnum = "name"
	QueryVolumeGroupSnapshotMountSortByEnumSourceHostName QueryVolumeGroupSnapshotMountSortByEnum = "sourceHostName"
	QueryVolumeGroupSnapshotMountSortByEnumSnapshotDate   QueryVolumeGroupSnapshotMountSortByEnum = "snapshotDate"
	QueryVolumeGroupSnapshotMountSortByEnumMountedDate    QueryVolumeGroupSnapshotMountSortByEnum = "mountedDate"
)

func (e QueryVolumeGroupSnapshotMountSortByEnum) ToPointer() *QueryVolumeGroupSnapshotMountSortByEnum {
	return &e
}

func (e *QueryVolumeGroupSnapshotMountSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "sourceHostName":
		fallthrough
	case "snapshotDate":
		fallthrough
	case "mountedDate":
		*e = QueryVolumeGroupSnapshotMountSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVolumeGroupSnapshotMountSortByEnum: %v", v)
	}
}

// QueryVolumeGroupSnapshotMountSortOrderEnum - The order to sort the responses. Valid choices are asc (ascending) or desc (descending).
type QueryVolumeGroupSnapshotMountSortOrderEnum string

const (
	QueryVolumeGroupSnapshotMountSortOrderEnumAsc  QueryVolumeGroupSnapshotMountSortOrderEnum = "asc"
	QueryVolumeGroupSnapshotMountSortOrderEnumDesc QueryVolumeGroupSnapshotMountSortOrderEnum = "desc"
)

func (e QueryVolumeGroupSnapshotMountSortOrderEnum) ToPointer() *QueryVolumeGroupSnapshotMountSortOrderEnum {
	return &e
}

func (e *QueryVolumeGroupSnapshotMountSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryVolumeGroupSnapshotMountSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVolumeGroupSnapshotMountSortOrderEnum: %v", v)
	}
}

type QueryVolumeGroupSnapshotMountRequest struct {
	// Limit the number of matches returned. The default value is 25.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Ignore these many matches in the beginning.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// The Volume Group mount attribute used in sorting the responses. Valid choices are name, sourceHostName, snapshotDate, and mountedDate.
	SortBy *QueryVolumeGroupSnapshotMountSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// The order to sort the responses. Valid choices are asc (ascending) or desc (descending).
	SortOrder *QueryVolumeGroupSnapshotMountSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
	// A prefix of the source host name. The prefix is used as a response filter when available.
	SourceHostName *string `queryParam:"style=form,explode=true,name=source_host_name"`
	// The ID of the source Volume Group.
	SourceVolumeGroupID *string `queryParam:"style=form,explode=true,name=source_volume_group_id"`
}

type QueryVolumeGroupSnapshotMountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Returns summary information for all mounts.
	VolumeGroupMountSummaryListResponse *shared.VolumeGroupMountSummaryListResponse
}
