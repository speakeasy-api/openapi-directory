/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Page - A page in a presentation.
 */
public class Page {
    /**
     * The properties of Page are only relevant for pages with page_type LAYOUT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("layoutProperties")
    public LayoutProperties layoutProperties;
    public Page withLayoutProperties(LayoutProperties layoutProperties) {
        this.layoutProperties = layoutProperties;
        return this;
    }
    
    /**
     * The properties of Page that are only relevant for pages with page_type MASTER.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterProperties")
    public MasterProperties masterProperties;
    public Page withMasterProperties(MasterProperties masterProperties) {
        this.masterProperties = masterProperties;
        return this;
    }
    
    /**
     * The properties of Page that are only relevant for pages with page_type NOTES.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notesProperties")
    public NotesProperties notesProperties;
    public Page withNotesProperties(NotesProperties notesProperties) {
        this.notesProperties = notesProperties;
        return this;
    }
    
    /**
     * The object ID for this page. Object IDs used by Page and PageElement share the same namespace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectId")
    public String objectId;
    public Page withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * The page elements rendered on the page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageElements")
    public PageElement[] pageElements;
    public Page withPageElements(PageElement[] pageElements) {
        this.pageElements = pageElements;
        return this;
    }
    
    /**
     * The properties of the Page. The page will inherit properties from the parent page. Depending on the page type the hierarchy is defined in either SlideProperties or LayoutProperties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageProperties")
    public PageProperties pageProperties;
    public Page withPageProperties(PageProperties pageProperties) {
        this.pageProperties = pageProperties;
        return this;
    }
    
    /**
     * The type of the page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageType")
    public PagePageTypeEnum pageType;
    public Page withPageType(PagePageTypeEnum pageType) {
        this.pageType = pageType;
        return this;
    }
    
    /**
     * Output only. The revision ID of the presentation. Can be used in update requests to assert the presentation revision hasn't changed since the last read operation. Only populated if the user has edit access to the presentation. The revision ID is not a sequential number but an opaque string. The format of the revision ID might change over time. A returned revision ID is only guaranteed to be valid for 24 hours after it has been returned and cannot be shared across users. If the revision ID is unchanged between calls, then the presentation has not changed. Conversely, a changed ID (for the same presentation and user) usually means the presentation has been updated. However, a changed ID can also be due to internal factors such as ID format changes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revisionId")
    public String revisionId;
    public Page withRevisionId(String revisionId) {
        this.revisionId = revisionId;
        return this;
    }
    
    /**
     * The properties of Page that are only relevant for pages with page_type SLIDE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slideProperties")
    public SlideProperties slideProperties;
    public Page withSlideProperties(SlideProperties slideProperties) {
        this.slideProperties = slideProperties;
        return this;
    }
    
}
