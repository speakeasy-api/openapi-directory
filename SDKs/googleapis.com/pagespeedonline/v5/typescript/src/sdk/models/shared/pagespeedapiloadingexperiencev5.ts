/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { UserPageLoadMetricV5 } from "./userpageloadmetricv5";
import { Expose, Transform } from "class-transformer";

/**
 * The CrUX loading experience object that contains CrUX data breakdowns.
 */
export class PagespeedApiLoadingExperienceV5 extends SpeakeasyBase {
  /**
   * The url, pattern or origin which the metrics are on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The requested URL, which may differ from the resolved "id".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "initial_url" })
  initialUrl?: string;

  /**
   * The map of .
   */
  @SpeakeasyMetadata({ elemType: UserPageLoadMetricV5 })
  @Expose({ name: "metrics" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, UserPageLoadMetricV5> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], UserPageLoadMetricV5);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  metrics?: Record<string, UserPageLoadMetricV5>;

  /**
   * True if the result is an origin fallback from a page, false otherwise.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin_fallback" })
  originFallback?: boolean;

  /**
   * The human readable speed "category" of the id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overall_category" })
  overallCategory?: string;
}
