<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Environment - A Cloud Shell environment, which is defined as the combination of a Docker image specifying what is installed on the environment and a home directory containing the user's data that will remain across sessions. Each user has at least an environment with the ID "default".
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Environment
{
    /**
     * Required. Immutable. Full path to the Docker image used to run this environment, e.g. "gcr.io/dev-con/cloud-devshell:latest".
     * 
     * @var ?string $dockerImage
     */
	#[\JMS\Serializer\Annotation\SerializedName('dockerImage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dockerImage = null;
    
    /**
     * Output only. The environment's identifier, unique among the user's environments.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Immutable. Full name of this resource, in the format `users/{owner_email}/environments/{environment_id}`. `{owner_email}` is the email address of the user to whom this environment belongs, and `{environment_id}` is the identifier of this environment. For example, `users/someone@example.com/environments/default`.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. Public keys associated with the environment. Clients can connect to this environment via SSH only if they possess a private key corresponding to at least one of these public keys. Keys can be added to or removed from the environment using the AddPublicKey and RemovePublicKey methods.
     * 
     * @var ?array<string> $publicKeys
     */
	#[\JMS\Serializer\Annotation\SerializedName('publicKeys')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $publicKeys = null;
    
    /**
     * Output only. Host to which clients can connect to initiate SSH sessions with the environment.
     * 
     * @var ?string $sshHost
     */
	#[\JMS\Serializer\Annotation\SerializedName('sshHost')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sshHost = null;
    
    /**
     * Output only. Port to which clients can connect to initiate SSH sessions with the environment.
     * 
     * @var ?int $sshPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sshPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sshPort = null;
    
    /**
     * Output only. Username that clients should use when initiating SSH sessions with the environment.
     * 
     * @var ?string $sshUsername
     */
	#[\JMS\Serializer\Annotation\SerializedName('sshUsername')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sshUsername = null;
    
    /**
     * Output only. Current execution state of this environment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnvironmentStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EnvironmentStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnvironmentStateEnum $state = null;
    
    /**
     * Output only. Host to which clients can connect to initiate HTTPS or WSS connections with the environment.
     * 
     * @var ?string $webHost
     */
	#[\JMS\Serializer\Annotation\SerializedName('webHost')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webHost = null;
    
	public function __construct()
	{
		$this->dockerImage = null;
		$this->id = null;
		$this->name = null;
		$this->publicKeys = null;
		$this->sshHost = null;
		$this->sshPort = null;
		$this->sshUsername = null;
		$this->state = null;
		$this->webHost = null;
	}
}
