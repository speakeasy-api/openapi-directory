<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ManagedZoneForwardingConfigNameServerTarget
{
    /**
     * Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ManagedZoneForwardingConfigNameServerTargetForwardingPathEnum $forwardingPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('forwardingPath')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ManagedZoneForwardingConfigNameServerTargetForwardingPathEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZoneForwardingConfigNameServerTargetForwardingPathEnum $forwardingPath = null;
    
    /**
     * IPv4 address of a target name server.
     * 
     * @var ?string $ipv4Address
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipv4Address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipv4Address = null;
    
    /**
     * IPv6 address of a target name server. Does not accept both fields (ipv4 & ipv6) being populated. Public preview as of November 2022.
     * 
     * @var ?string $ipv6Address
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipv6Address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipv6Address = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
	public function __construct()
	{
		$this->forwardingPath = null;
		$this->ipv4Address = null;
		$this->ipv6Address = null;
		$this->kind = null;
	}
}
