"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import qospolicy as shared_qospolicy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VlanAttachment:
    r"""VLAN attachment details."""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Immutable. The identifier of the attachment within vrf."""  
    pairing_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pairingKey'), 'exclude': lambda f: f is None }})
    r"""Input only. Pairing key."""  
    peer_ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('peerIp'), 'exclude': lambda f: f is None }})
    r"""The peer IP of the attachment."""  
    peer_vlan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('peerVlanId'), 'exclude': lambda f: f is None }})
    r"""The peer vlan ID of the attachment."""  
    qos_policy: Optional[shared_qospolicy.QosPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qosPolicy'), 'exclude': lambda f: f is None }})
    r"""QOS policy parameters."""  
    router_ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routerIp'), 'exclude': lambda f: f is None }})
    r"""The router IP of the attachment."""  
    