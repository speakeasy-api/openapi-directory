/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CustomEvent - Custom
 */
public class CustomEvent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    public CustomEventLinks links;

    public CustomEvent withLinks(CustomEventLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * The body of your `custom` event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    public java.util.Map<String, Object> body;

    public CustomEvent withBody(java.util.Map<String, Object> body) {
        this.body = body;
        return this;
    }
    
    /**
     * The member ID of the sender
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;

    public CustomEvent withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * The ID of the event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public CustomEvent withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The time that the event happened
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;

    public CustomEvent withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * The event type (`custom:&lt;YOUR_IDENTIFIER&gt;`)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public CustomEvent withType(String type) {
        this.type = type;
        return this;
    }
    
    public CustomEvent(){}
}
