<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PlayerRound
{
	#[\JMS\Serializer\Annotation\SerializedName('BackNineStart')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $backNineStart = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Birdies')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $birdies = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('BogeyFree')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $bogeyFree = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Bogeys')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bogeys = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('BounceBackCount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $bounceBackCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ConsecutiveBirdieOrBetterCount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $consecutiveBirdieOrBetterCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Day')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $day = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DoubleBogeys')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $doubleBogeys = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DoubleEagles')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $doubleEagles = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Eagles')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $eagles = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('HoleInOnes')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $holeInOnes = null;
    
    /**
     * $holes
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PlayerHole> $holes
     */
	#[\JMS\Serializer\Annotation\SerializedName('Holes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PlayerHole>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $holes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('IncludesFiveOrMoreBirdiesOrBetter')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $includesFiveOrMoreBirdiesOrBetter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('IncludesStreakOfFiveBirdiesOrBetter')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $includesStreakOfFiveBirdiesOrBetter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('IncludesStreakOfFourBirdiesOrBetter')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $includesStreakOfFourBirdiesOrBetter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('IncludesStreakOfSixBirdiesOrBetter')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $includesStreakOfSixBirdiesOrBetter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('IncludesStreakOfThreeBirdiesOrBetter')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $includesStreakOfThreeBirdiesOrBetter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LongestBirdieOrBetterStreak')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $longestBirdieOrBetterStreak = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $number = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Par')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $par = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Pars')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $pars = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('PlayerRoundID')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $playerRoundID = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('PlayerTournamentID')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $playerTournamentID = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Score')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $score = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('TeeTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $teeTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('TripleBogeys')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $tripleBogeys = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('WorseThanDoubleBogey')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $worseThanDoubleBogey = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('WorseThanTripleBogey')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $worseThanTripleBogey = null;
    
	public function __construct()
	{
		$this->backNineStart = null;
		$this->birdies = null;
		$this->bogeyFree = null;
		$this->bogeys = null;
		$this->bounceBackCount = null;
		$this->consecutiveBirdieOrBetterCount = null;
		$this->day = null;
		$this->doubleBogeys = null;
		$this->doubleEagles = null;
		$this->eagles = null;
		$this->holeInOnes = null;
		$this->holes = null;
		$this->includesFiveOrMoreBirdiesOrBetter = null;
		$this->includesStreakOfFiveBirdiesOrBetter = null;
		$this->includesStreakOfFourBirdiesOrBetter = null;
		$this->includesStreakOfSixBirdiesOrBetter = null;
		$this->includesStreakOfThreeBirdiesOrBetter = null;
		$this->longestBirdieOrBetterStreak = null;
		$this->number = null;
		$this->par = null;
		$this->pars = null;
		$this->playerRoundID = null;
		$this->playerTournamentID = null;
		$this->score = null;
		$this->teeTime = null;
		$this->tripleBogeys = null;
		$this->worseThanDoubleBogey = null;
		$this->worseThanTripleBogey = null;
	}
}
