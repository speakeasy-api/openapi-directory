/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDeleteInstanceEventWindowQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDeleteInstanceEventWindowActionEnum action;
    public GETDeleteInstanceEventWindowQueryParams withAction(GETDeleteInstanceEventWindowActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETDeleteInstanceEventWindowQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * Specify &lt;code&gt;true&lt;/code&gt; to force delete the event window. Use the force delete parameter if the event window is currently associated with targets.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ForceDelete")
    public Boolean forceDelete;
    public GETDeleteInstanceEventWindowQueryParams withForceDelete(Boolean forceDelete) {
        this.forceDelete = forceDelete;
        return this;
    }
    
    /**
     * The ID of the event window.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=InstanceEventWindowId")
    public String instanceEventWindowId;
    public GETDeleteInstanceEventWindowQueryParams withInstanceEventWindowId(String instanceEventWindowId) {
        this.instanceEventWindowId = instanceEventWindowId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDeleteInstanceEventWindowVersionEnum version;
    public GETDeleteInstanceEventWindowQueryParams withVersion(GETDeleteInstanceEventWindowVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
