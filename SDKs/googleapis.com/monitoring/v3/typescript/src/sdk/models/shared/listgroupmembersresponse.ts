/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MonitoredResource } from "./monitoredresource";
import { Expose, Type } from "class-transformer";

/**
 * The ListGroupMembers response.
 */
export class ListGroupMembersResponse extends SpeakeasyBase {
  /**
   * A set of monitored resources in the group.
   */
  @SpeakeasyMetadata({ elemType: MonitoredResource })
  @Expose({ name: "members" })
  @Type(() => MonitoredResource)
  members?: MonitoredResource[];

  /**
   * If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The total number of elements matching this request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSize" })
  totalSize?: number;
}
