/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Group - Google Groups provide your users the ability to send messages to groups of people using the group's email address. For more information about common tasks, see the [Developer's Guide](https://developers.google.com/admin-sdk/directory/v1/guides/manage-groups). For information about other types of groups, see the [Cloud Identity Groups API documentation](https://cloud.google.com/identity/docs/groups). Note: The user calling the API (or being impersonated by a service account) must have an assigned [role](https://developers.google.com/admin-sdk/directory/v1/guides/manage-roles) that includes Admin API Groups permissions, such as Super Admin or Groups Admin.
 */
public class Group {
    /**
     * Read-only. Value is `true` if this group was created by an administrator rather than a user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminCreated")
    public Boolean adminCreated;

    public Group withAdminCreated(Boolean adminCreated) {
        this.adminCreated = adminCreated;
        return this;
    }
    
    /**
     * Read-only. The list of a group's alias email addresses. To add, update, or remove a group's aliases, use the `groups.aliases` methods. If edited in a group's POST or PUT request, the edit is ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aliases")
    public String[] aliases;

    public Group withAliases(String[] aliases) {
        this.aliases = aliases;
        return this;
    }
    
    /**
     * An extended description to help users determine the purpose of a group. For example, you can include information about who should join the group, the types of messages to send to the group, links to FAQs about the group, or related groups. Maximum length is `4,096` characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Group withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The number of users that are direct members of the group. If a group is a member (child) of this group (the parent), members of the child group are not counted in the `directMembersCount` property of the parent group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directMembersCount")
    public String directMembersCount;

    public Group withDirectMembersCount(String directMembersCount) {
        this.directMembersCount = directMembersCount;
        return this;
    }
    
    /**
     * The group's email address. If your account has multiple domains, select the appropriate domain for the email address. The `email` must be unique. This property is required when creating a group. Group email addresses are subject to the same character usage rules as usernames, see the [help center](https://support.google.com/a/answer/9193374) for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public Group withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Group withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Read-only. The unique ID of a group. A group `id` can be used as a group request URI's `groupKey`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Group withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The type of the API resource. For Groups resources, the value is `admin#directory#group`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Group withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The group's display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Group withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Read-only. The list of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group. This is a read-only property returned in the API's response for a group. If edited in a group's POST or PUT request, the edit is ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonEditableAliases")
    public String[] nonEditableAliases;

    public Group withNonEditableAliases(String[] nonEditableAliases) {
        this.nonEditableAliases = nonEditableAliases;
        return this;
    }
    
    public Group(){}
}
