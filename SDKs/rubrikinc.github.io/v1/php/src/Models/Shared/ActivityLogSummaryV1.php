<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ActivityLogSummaryV1
{
    /**
     * The serialized AfterId of the response, if any.
     * 
     * @var ?string $afterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('afterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $afterId = null;
    
    /**
     * List of the events in the event series.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EventSummaryV1> $eventDetailList
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventDetailList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EventSummaryV1>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eventDetailList = null;
    
    /**
     * Status of an event series.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventSeriesStatusV1Enum $eventSeriesStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventSeriesStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EventSeriesStatusV1Enum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventSeriesStatusV1Enum $eventSeriesStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('latestEvent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EventSummaryV1')]
    public EventSummaryV1 $latestEvent;
    
    /**
     * The number of events in the same series as the specified event that have the warning status.
     * 
     * @var int $warningCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('warningCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $warningCount;
    
	public function __construct()
	{
		$this->afterId = null;
		$this->eventDetailList = null;
		$this->eventSeriesStatus = null;
		$this->latestEvent = new \OpenAPI\OpenAPI\Models\Shared\EventSummaryV1();
		$this->warningCount = 0;
	}
}
