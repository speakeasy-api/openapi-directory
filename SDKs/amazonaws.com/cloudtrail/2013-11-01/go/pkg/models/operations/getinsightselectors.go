// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetInsightSelectorsXAmzTargetEnum
type GetInsightSelectorsXAmzTargetEnum string

const (
	GetInsightSelectorsXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101GetInsightSelectors GetInsightSelectorsXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetInsightSelectors"
)

func (e GetInsightSelectorsXAmzTargetEnum) ToPointer() *GetInsightSelectorsXAmzTargetEnum {
	return &e
}

func (e *GetInsightSelectorsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetInsightSelectors":
		*e = GetInsightSelectorsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetInsightSelectorsXAmzTargetEnum: %v", v)
	}
}

type GetInsightSelectorsRequest struct {
	GetInsightSelectorsRequest shared.GetInsightSelectorsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 GetInsightSelectorsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetInsightSelectorsResponse struct {
	// CloudTrailARNInvalidException
	CloudTrailARNInvalidException interface{}
	ContentType                   string
	// Success
	GetInsightSelectorsResponse *shared.GetInsightSelectorsResponse
	// InsightNotEnabledException
	InsightNotEnabledException interface{}
	// InvalidTrailNameException
	InvalidTrailNameException interface{}
	// NoManagementAccountSLRExistsException
	NoManagementAccountSLRExistsException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// TrailNotFoundException
	TrailNotFoundException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
