// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReportingErrorCodeEnum string

const (
	ReportingErrorCodeEnumInternalError            ReportingErrorCodeEnum = "INTERNAL_ERROR"
	ReportingErrorCodeEnumInvalidPermissions       ReportingErrorCodeEnum = "INVALID_PERMISSIONS"
	ReportingErrorCodeEnumNoFindingsFound          ReportingErrorCodeEnum = "NO_FINDINGS_FOUND"
	ReportingErrorCodeEnumBucketNotFound           ReportingErrorCodeEnum = "BUCKET_NOT_FOUND"
	ReportingErrorCodeEnumIncompatibleBucketRegion ReportingErrorCodeEnum = "INCOMPATIBLE_BUCKET_REGION"
	ReportingErrorCodeEnumMalformedKmsKey          ReportingErrorCodeEnum = "MALFORMED_KMS_KEY"
)

func (e ReportingErrorCodeEnum) ToPointer() *ReportingErrorCodeEnum {
	return &e
}

func (e *ReportingErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INTERNAL_ERROR":
		fallthrough
	case "INVALID_PERMISSIONS":
		fallthrough
	case "NO_FINDINGS_FOUND":
		fallthrough
	case "BUCKET_NOT_FOUND":
		fallthrough
	case "INCOMPATIBLE_BUCKET_REGION":
		fallthrough
	case "MALFORMED_KMS_KEY":
		*e = ReportingErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReportingErrorCodeEnum: %v", v)
	}
}
