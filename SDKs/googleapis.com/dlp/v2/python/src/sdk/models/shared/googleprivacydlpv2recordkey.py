"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2bigquerykey as shared_googleprivacydlpv2bigquerykey
from ..shared import googleprivacydlpv2datastorekey as shared_googleprivacydlpv2datastorekey
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2RecordKey:
    r"""Message for a unique key indicating a record that contains a finding."""
    
    big_query_key: Optional[shared_googleprivacydlpv2bigquerykey.GooglePrivacyDlpV2BigQueryKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigQueryKey'), 'exclude': lambda f: f is None }})
    r"""Row key for identifying a record in BigQuery table."""  
    datastore_key: Optional[shared_googleprivacydlpv2datastorekey.GooglePrivacyDlpV2DatastoreKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datastoreKey'), 'exclude': lambda f: f is None }})
    r"""Record key for a finding in Cloud Datastore."""  
    id_values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idValues'), 'exclude': lambda f: f is None }})
    r"""Values of identifying columns in the given row. Order of values matches the order of `identifying_fields` specified in the scanning request."""  
    