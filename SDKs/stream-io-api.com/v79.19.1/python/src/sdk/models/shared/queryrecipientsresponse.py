"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import campaign as shared_campaign
from ..shared import recipient as shared_recipient
from ..shared import segment as shared_segment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryRecipientsResponse:
    r"""Successful response"""
    
    campaigns: dict[str, shared_campaign.Campaign] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('campaigns') }})  
    channels: dict[str, dict[str, Any]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channels') }})  
    duration: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration') }})
    r"""Duration of the request in human-readable format"""  
    recipients: list[shared_recipient.Recipient] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipients') }})  
    segments: dict[str, shared_segment.Segment] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segments') }})  
    users: dict[str, dict[str, Any]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('users') }})  
    