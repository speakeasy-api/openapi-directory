/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StandardError {
    @JsonProperty("category")
    public ErrorCategory category;
    public StandardError withCategory(ErrorCategory category) {
        this.category = category;
        return this;
    }
    
    @JsonProperty("context")
    public java.util.Map<String, String[]> context;
    public StandardError withContext(java.util.Map<String, String[]> context) {
        this.context = context;
        return this;
    }
    
    @JsonProperty("errors")
    public ErrorDetail[] errors;
    public StandardError withErrors(ErrorDetail[] errors) {
        this.errors = errors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public StandardError withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("links")
    public java.util.Map<String, String> links;
    public StandardError withLinks(java.util.Map<String, String> links) {
        this.links = links;
        return this;
    }
    
    @JsonProperty("message")
    public String message;
    public StandardError withMessage(String message) {
        this.message = message;
        return this;
    }
    
    @JsonProperty("status")
    public String status;
    public StandardError withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subCategory")
    public java.util.Map<String, Object> subCategory;
    public StandardError withSubCategory(java.util.Map<String, Object> subCategory) {
        this.subCategory = subCategory;
        return this;
    }
    
}
