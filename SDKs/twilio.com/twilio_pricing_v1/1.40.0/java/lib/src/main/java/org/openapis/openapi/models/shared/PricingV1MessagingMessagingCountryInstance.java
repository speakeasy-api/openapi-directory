/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PricingV1MessagingMessagingCountryInstance - OK
 */
public class PricingV1MessagingMessagingCountryInstance {
    /**
     * The name of the country.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public PricingV1MessagingMessagingCountryInstance withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The list of [InboundPrice](https://www.twilio.com/docs/sms/api/pricing#inbound-price) records that describe the price to receive an inbound SMS to the different Twilio phone number types supported in this country
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inbound_sms_prices")
    public PricingV1MessagingMessagingCountryInstanceInboundSmsPrices[] inboundSmsPrices;
    public PricingV1MessagingMessagingCountryInstance withInboundSmsPrices(PricingV1MessagingMessagingCountryInstanceInboundSmsPrices[] inboundSmsPrices) {
        this.inboundSmsPrices = inboundSmsPrices;
        return this;
    }
    
    /**
     * The [ISO country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iso_country")
    public String isoCountry;
    public PricingV1MessagingMessagingCountryInstance withIsoCountry(String isoCountry) {
        this.isoCountry = isoCountry;
        return this;
    }
    
    /**
     * The list of [OutboundSMSPrice](https://www.twilio.com/docs/sms/api/pricing#outbound-sms-price) records that represent the price to send a message for each MCC/MNC applicable in this country.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outbound_sms_prices")
    public PricingV1MessagingMessagingCountryInstanceOutboundSmsPrices[] outboundSmsPrices;
    public PricingV1MessagingMessagingCountryInstance withOutboundSmsPrices(PricingV1MessagingMessagingCountryInstanceOutboundSmsPrices[] outboundSmsPrices) {
        this.outboundSmsPrices = outboundSmsPrices;
        return this;
    }
    
    /**
     * The currency in which prices are measured, specified in [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format (e.g. `usd`, `eur`, `jpy`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price_unit")
    public String priceUnit;
    public PricingV1MessagingMessagingCountryInstance withPriceUnit(String priceUnit) {
        this.priceUnit = priceUnit;
        return this;
    }
    
    /**
     * The absolute URL of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public PricingV1MessagingMessagingCountryInstance withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
