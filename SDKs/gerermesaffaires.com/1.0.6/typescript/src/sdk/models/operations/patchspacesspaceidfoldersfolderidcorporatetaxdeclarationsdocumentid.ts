/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum PatchSpacesSpaceIdFoldersFolderIdCorporateTaxDeclarationsDocumentIdRequestBodyOrderEnum {
  OnestAdvance = "1st advance",
  TwondAdvance = "2nd advance",
  ThreerdAdvance = "3rd advance",
  FourthAdvance = "4th advance",
  Regularization = "regularization",
}

/**
 * A Corporate Tax Declaration to modify
 */
export class PatchSpacesSpaceIdFoldersFolderIdCorporateTaxDeclarationsDocumentIdRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DeclarationDate" })
  declarationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Order" })
  order?: PatchSpacesSpaceIdFoldersFolderIdCorporateTaxDeclarationsDocumentIdRequestBodyOrderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Rate" })
  rate?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TaxBase" })
  taxBase?: number;
}

export class PatchSpacesSpaceIdFoldersFolderIdCorporateTaxDeclarationsDocumentIdRequest extends SpeakeasyBase {
  /**
   * A Corporate Tax Declaration to modify
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PatchSpacesSpaceIdFoldersFolderIdCorporateTaxDeclarationsDocumentIdRequestBody;

  /**
   * Id of the document
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=documentId",
  })
  documentId: string;

  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=folderId",
  })
  folderId: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class PatchSpacesSpaceIdFoldersFolderIdCorporateTaxDeclarationsDocumentIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
