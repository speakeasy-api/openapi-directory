/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TeamDiscussionComment - A reply to a discussion within a team.
 */
public class TeamDiscussionComment {
    /**
     * A GitHub user.
     */
    @JsonProperty("author")
    public NullableSimpleUser author;

    public TeamDiscussionComment withAuthor(NullableSimpleUser author) {
        this.author = author;
        return this;
    }
    
    /**
     * The main text of the comment.
     */
    @JsonProperty("body")
    public String body;

    public TeamDiscussionComment withBody(String body) {
        this.body = body;
        return this;
    }
    
    @JsonProperty("body_html")
    public String bodyHtml;

    public TeamDiscussionComment withBodyHtml(String bodyHtml) {
        this.bodyHtml = bodyHtml;
        return this;
    }
    
    /**
     * The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.
     */
    @JsonProperty("body_version")
    public String bodyVersion;

    public TeamDiscussionComment withBodyVersion(String bodyVersion) {
        this.bodyVersion = bodyVersion;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public TeamDiscussionComment withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("discussion_url")
    public String discussionUrl;

    public TeamDiscussionComment withDiscussionUrl(String discussionUrl) {
        this.discussionUrl = discussionUrl;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;

    public TeamDiscussionComment withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_edited_at")
    public OffsetDateTime lastEditedAt;

    public TeamDiscussionComment withLastEditedAt(OffsetDateTime lastEditedAt) {
        this.lastEditedAt = lastEditedAt;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;

    public TeamDiscussionComment withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * The unique sequence number of a team discussion comment.
     */
    @JsonProperty("number")
    public Long number;

    public TeamDiscussionComment withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reactions")
    public ReactionRollup reactions;

    public TeamDiscussionComment withReactions(ReactionRollup reactions) {
        this.reactions = reactions;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public TeamDiscussionComment withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("url")
    public String url;

    public TeamDiscussionComment withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public TeamDiscussionComment(@JsonProperty("author") NullableSimpleUser author, @JsonProperty("body") String body, @JsonProperty("body_html") String bodyHtml, @JsonProperty("body_version") String bodyVersion, @JsonProperty("created_at") OffsetDateTime createdAt, @JsonProperty("discussion_url") String discussionUrl, @JsonProperty("html_url") String htmlUrl, @JsonProperty("last_edited_at") OffsetDateTime lastEditedAt, @JsonProperty("node_id") String nodeId, @JsonProperty("number") Long number, @JsonProperty("updated_at") OffsetDateTime updatedAt, @JsonProperty("url") String url) {
        this.author = author;
        this.body = body;
        this.bodyHtml = bodyHtml;
        this.bodyVersion = bodyVersion;
        this.createdAt = createdAt;
        this.discussionUrl = discussionUrl;
        this.htmlUrl = htmlUrl;
        this.lastEditedAt = lastEditedAt;
        this.nodeId = nodeId;
        this.number = number;
        this.updatedAt = updatedAt;
        this.url = url;
  }
}
