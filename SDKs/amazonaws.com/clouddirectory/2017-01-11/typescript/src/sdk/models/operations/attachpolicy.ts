/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The reference that identifies an object.
 */
export class AttachPolicyRequestBodyObjectReference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Selector" })
  selector?: string;
}

/**
 * The reference that identifies an object.
 */
export class AttachPolicyRequestBodyPolicyReference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Selector" })
  selector?: string;
}

export class AttachPolicyRequestBody extends SpeakeasyBase {
  /**
   * The reference that identifies an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ObjectReference" })
  @Type(() => AttachPolicyRequestBodyObjectReference)
  objectReference: AttachPolicyRequestBodyObjectReference;

  /**
   * The reference that identifies an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PolicyReference" })
  @Type(() => AttachPolicyRequestBodyPolicyReference)
  policyReference: AttachPolicyRequestBodyPolicyReference;
}

export class AttachPolicyRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: AttachPolicyRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The Amazon Resource Name (ARN) that is associated with the <a>Directory</a> where both objects reside. For more information, see <a>arns</a>.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-amz-data-partition",
  })
  xAmzDataPartition: string;
}

export class AttachPolicyResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  attachPolicyResponse?: Record<string, any>;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * DirectoryNotEnabledException
   */
  @SpeakeasyMetadata()
  directoryNotEnabledException?: any;

  /**
   * InternalServiceException
   */
  @SpeakeasyMetadata()
  internalServiceException?: any;

  /**
   * InvalidArnException
   */
  @SpeakeasyMetadata()
  invalidArnException?: any;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  /**
   * NotPolicyException
   */
  @SpeakeasyMetadata()
  notPolicyException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * RetryableConflictException
   */
  @SpeakeasyMetadata()
  retryableConflictException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
