<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BioObject - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BioObject
{
    /**
     * association counts
     * 
     * @var ?array<string, mixed> $associationCounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('association_counts')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $associationCounts = null;
    
    /**
     * $category
     * 
     * @var ?array<string> $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $category = null;
    
    /**
     * $consider
     * 
     * @var ?array<string> $consider
     */
	#[\JMS\Serializer\Annotation\SerializedName('consider')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $consider = null;
    
    /**
     * True if the node is deprecated/obsoleted.
     * 
     * @var ?bool $deprecated
     */
	#[\JMS\Serializer\Annotation\SerializedName('deprecated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deprecated = null;
    
    /**
     * Descriptive text for the entity. For ontology classes, this will be a definition.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * ID or CURIE e.g. MGI:1201606
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * IRI
     * 
     * @var ?string $iri
     */
	#[\JMS\Serializer\Annotation\SerializedName('iri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iri = null;
    
    /**
     * RDFS Label
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * $replacedBy
     * 
     * @var ?array<string> $replacedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('replaced_by')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $replacedBy = null;
    
    /**
     * list of synonyms or alternate labels
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SynonymPropertyValue> $synonyms
     */
	#[\JMS\Serializer\Annotation\SerializedName('synonyms')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SynonymPropertyValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $synonyms = null;
    
    /**
     * Taxon to which the object belongs
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Taxon $taxon
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxon')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Taxon')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Taxon $taxon = null;
    
    /**
     * $types
     * 
     * @var ?array<string> $types
     */
	#[\JMS\Serializer\Annotation\SerializedName('types')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $types = null;
    
    /**
     * Database cross-references. These are usually CURIEs, but may also be URLs. E.g. ENSEMBL:ENSG00000099940 
     * 
     * @var ?array<string> $xrefs
     */
	#[\JMS\Serializer\Annotation\SerializedName('xrefs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $xrefs = null;
    
	public function __construct()
	{
		$this->associationCounts = null;
		$this->category = null;
		$this->consider = null;
		$this->deprecated = null;
		$this->description = null;
		$this->id = "";
		$this->iri = null;
		$this->label = null;
		$this->replacedBy = null;
		$this->synonyms = null;
		$this->taxon = null;
		$this->types = null;
		$this->xrefs = null;
	}
}
