"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import daterange as shared_daterange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FixedPrice:
    
    list_price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listPrice') }})
    r"""Trade Policy List Price Value."""  
    min_quantity: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minQuantity') }})
    r"""Trade Policy Fixed Price Minimum Item Quantity."""  
    trade_policy_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tradePolicyId') }})
    r"""Trade Policy ID."""  
    value: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""Trade Policy Fixed Price Value."""  
    date_range: Optional[shared_daterange.DateRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateRange'), 'exclude': lambda f: f is None }})
    r"""Trade Policy Fixed Price Validity Period Object."""  
    