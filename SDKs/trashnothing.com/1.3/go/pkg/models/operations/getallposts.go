// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetAllPostsSecurity struct {
	APIKey         *shared.SchemeAPIKey         `security:"scheme,type=apiKey,subtype=query"`
	Oauth2Code     *shared.SchemeOauth2Code     `security:"scheme,type=oauth2"`
	Oauth2Implicit *shared.SchemeOauth2Implicit `security:"scheme,type=oauth2"`
}

type GetAllPostsQueryParams struct {
	// Only posts older than this UTC date and time will be returned. The UTC date and time used must be within a day or less of date_min. And the date and time must be rounded to the nearest second.
	//
	DateMax time.Time `queryParam:"style=form,explode=true,name=date_max"`
	// Only posts newer than or equal to this UTC date and time will be returned. The UTC date and time used must be within a day or less of date_max. And the date and time must be within the last 30 days. And the date and time must be rounded to the nearest second.
	//
	DateMin time.Time `queryParam:"style=form,explode=true,name=date_min"`
	// Client device pixel ratio used to determine thumbnail size (default 1.0).
	DevicePixelRatio *float64 `queryParam:"style=form,explode=true,name=device_pixel_ratio"`
	// The page of posts to return.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of posts to return per page (must be >= 1 and <= 50).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// A comma separated list of the post types to return.  The available post types are: offer, wanted
	//
	Types string `queryParam:"style=form,explode=true,name=types"`
}

type GetAllPostsRequest struct {
	QueryParams GetAllPostsQueryParams
	Security    GetAllPostsSecurity
}

// GetAllPosts200ApplicationJSON - The posts.
type GetAllPosts200ApplicationJSON struct {
	Posts []shared.Post `json:"posts,omitempty"`
}

type GetAllPostsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The posts.
	GetAllPosts200ApplicationJSONObject *GetAllPosts200ApplicationJSON
}
