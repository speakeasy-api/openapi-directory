// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type WebriskHashesSearchSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type WebriskHashesSearchThreatTypesEnum string

const (
	WebriskHashesSearchThreatTypesEnumThreatTypeUnspecified             WebriskHashesSearchThreatTypesEnum = "THREAT_TYPE_UNSPECIFIED"
	WebriskHashesSearchThreatTypesEnumMalware                           WebriskHashesSearchThreatTypesEnum = "MALWARE"
	WebriskHashesSearchThreatTypesEnumSocialEngineering                 WebriskHashesSearchThreatTypesEnum = "SOCIAL_ENGINEERING"
	WebriskHashesSearchThreatTypesEnumUnwantedSoftware                  WebriskHashesSearchThreatTypesEnum = "UNWANTED_SOFTWARE"
	WebriskHashesSearchThreatTypesEnumSocialEngineeringExtendedCoverage WebriskHashesSearchThreatTypesEnum = "SOCIAL_ENGINEERING_EXTENDED_COVERAGE"
)

func (e *WebriskHashesSearchThreatTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "THREAT_TYPE_UNSPECIFIED":
		fallthrough
	case "MALWARE":
		fallthrough
	case "SOCIAL_ENGINEERING":
		fallthrough
	case "UNWANTED_SOFTWARE":
		fallthrough
	case "SOCIAL_ENGINEERING_EXTENDED_COVERAGE":
		*e = WebriskHashesSearchThreatTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WebriskHashesSearchThreatTypesEnum: %s", s)
	}
}

type WebriskHashesSearchRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. For JSON requests, this field is base64-encoded. Note that if this parameter is provided by a URI, it must be encoded using the web safe base64 variant (RFC 4648).
	HashPrefix *string `queryParam:"style=form,explode=true,name=hashPrefix"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Required. The ThreatLists to search in. Multiple ThreatLists may be specified.
	ThreatTypes []WebriskHashesSearchThreatTypesEnum `queryParam:"style=form,explode=true,name=threatTypes"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type WebriskHashesSearchResponse struct {
	ContentType string
	// Successful response
	GoogleCloudWebriskV1SearchHashesResponse *shared.GoogleCloudWebriskV1SearchHashesResponse
	StatusCode                               int
	RawResponse                              *http.Response
}
