/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType {
    /**
     * Point in time when the Load Balancer type is deprecated (in ISO-8601 format)
     */
    @JsonProperty("deprecated")
    public String deprecated;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withDeprecated(String deprecated) {
        this.deprecated = deprecated;
        return this;
    }
    
    /**
     * Description of the Load Balancer type
     */
    @JsonProperty("description")
    public String description;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * ID of the Load Balancer type
     */
    @JsonProperty("id")
    public Double id;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withId(Double id) {
        this.id = id;
        return this;
    }
    
    /**
     * Number of SSL Certificates that can be assigned to a single Load Balancer
     */
    @JsonProperty("max_assigned_certificates")
    public Double maxAssignedCertificates;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withMaxAssignedCertificates(Double maxAssignedCertificates) {
        this.maxAssignedCertificates = maxAssignedCertificates;
        return this;
    }
    
    /**
     * Number of maximum simultaneous open connections
     */
    @JsonProperty("max_connections")
    public Double maxConnections;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withMaxConnections(Double maxConnections) {
        this.maxConnections = maxConnections;
        return this;
    }
    
    /**
     * Number of services a Load Balancer of this type can have
     */
    @JsonProperty("max_services")
    public Double maxServices;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withMaxServices(Double maxServices) {
        this.maxServices = maxServices;
        return this;
    }
    
    /**
     * Number of targets a single Load Balancer can have
     */
    @JsonProperty("max_targets")
    public Double maxTargets;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withMaxTargets(Double maxTargets) {
        this.maxTargets = maxTargets;
        return this;
    }
    
    /**
     * Unique identifier of the Load Balancer type
     */
    @JsonProperty("name")
    public String name;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Prices in different network zones
     */
    @JsonProperty("prices")
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerTypePrices[] prices;
    public GetLoadBalancerTypesId200ApplicationJSONLoadBalancerType withPrices(GetLoadBalancerTypesId200ApplicationJSONLoadBalancerTypePrices[] prices) {
        this.prices = prices;
        return this;
    }
    
}
