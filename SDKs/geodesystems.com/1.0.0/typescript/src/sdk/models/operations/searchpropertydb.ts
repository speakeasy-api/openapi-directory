/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class SearchPropertydbRequest extends SpeakeasyBase {
  /**
   * Archive change date from
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=changedate.from;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  changedateFrom?: Date;

  /**
   * Archive change date to
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=changedate.to;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  changedateTo?: Date;

  /**
   * Archive create date from
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdate.from;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  createdateFrom?: Date;

  /**
   * Archive create date to
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdate.to;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  createdateTo?: Date;

  /**
   * Search description
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=description",
  })
  description?: string;

  /**
   * File suffix
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filesuffix",
  })
  filesuffix?: string;

  /**
   * From date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fromdate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  fromdate?: Date;

  /**
   * Parent entry
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=group" })
  group?: string;

  /**
   * Max number of results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=max" })
  max?: number;

  /**
   * Northern bounds of search
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxlatitude",
  })
  maxlatitude?: number;

  /**
   * Eastern bounds of search
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxlongitude",
  })
  maxlongitude?: number;

  /**
   * Southern bounds of search
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minlatitude",
  })
  minlatitude?: number;

  /**
   * Western bounds of search
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minlongitude",
  })
  minlongitude?: number;

  /**
   * Search name
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Address
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.address",
  })
  searchDbPropertydbAddress?: string;

  /**
   * Building Type
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.building_type",
  })
  searchDbPropertydbBuildingType?: string;

  /**
   * City
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.city",
  })
  searchDbPropertydbCity?: string;

  /**
   * Building Sq Ft
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.house_size",
  })
  searchDbPropertydbHouseSize?: number;

  /**
   * Location
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.location",
  })
  searchDbPropertydbLocation?: string;

  /**
   * Lot Size Acres
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.lot_acres",
  })
  searchDbPropertydbLotAcres?: number;

  /**
   * Lot Size Sq Ft
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.lot_sqft",
  })
  searchDbPropertydbLotSqft?: number;

  /**
   * Owner
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.owner",
  })
  searchDbPropertydbOwner?: string;

  /**
   * $-sqft
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.price_sqft",
  })
  searchDbPropertydbPriceSqft?: number;

  /**
   * Property ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.property_id",
  })
  searchDbPropertydbPropertyId?: string;

  /**
   * State
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.state",
  })
  searchDbPropertydbState?: string;

  /**
   * Property Value
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search.db_propertydb.value",
  })
  searchDbPropertydbValue?: number;

  /**
   * Number to skip
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=skip" })
  skip?: number;

  /**
   * Search text
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=text" })
  text?: string;

  /**
   * To date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=todate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  todate?: Date;
}

export class SearchPropertydbResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
