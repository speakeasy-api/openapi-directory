"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudchannelv1parameter as shared_googlecloudchannelv1parameter
from ..shared import googlecloudchannelv1provisionedservice as shared_googlecloudchannelv1provisionedservice
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudChannelV1EntitlementChangeActivationReasonEnum(str, Enum):
    r"""The Entitlement's activation reason"""
    ACTIVATION_REASON_UNSPECIFIED = 'ACTIVATION_REASON_UNSPECIFIED'
    RESELLER_REVOKED_SUSPENSION = 'RESELLER_REVOKED_SUSPENSION'
    CUSTOMER_ACCEPTED_PENDING_TOS = 'CUSTOMER_ACCEPTED_PENDING_TOS'
    RENEWAL_SETTINGS_CHANGED = 'RENEWAL_SETTINGS_CHANGED'
    OTHER_ACTIVATION_REASON = 'OTHER_ACTIVATION_REASON'

class GoogleCloudChannelV1EntitlementChangeCancellationReasonEnum(str, Enum):
    r"""Cancellation reason for the Entitlement."""
    CANCELLATION_REASON_UNSPECIFIED = 'CANCELLATION_REASON_UNSPECIFIED'
    SERVICE_TERMINATED = 'SERVICE_TERMINATED'
    RELATIONSHIP_ENDED = 'RELATIONSHIP_ENDED'
    PARTIAL_TRANSFER = 'PARTIAL_TRANSFER'

class GoogleCloudChannelV1EntitlementChangeChangeTypeEnum(str, Enum):
    r"""The change action type."""
    CHANGE_TYPE_UNSPECIFIED = 'CHANGE_TYPE_UNSPECIFIED'
    CREATED = 'CREATED'
    PRICE_PLAN_SWITCHED = 'PRICE_PLAN_SWITCHED'
    COMMITMENT_CHANGED = 'COMMITMENT_CHANGED'
    RENEWED = 'RENEWED'
    SUSPENDED = 'SUSPENDED'
    ACTIVATED = 'ACTIVATED'
    CANCELLED = 'CANCELLED'
    SKU_CHANGED = 'SKU_CHANGED'
    RENEWAL_SETTING_CHANGED = 'RENEWAL_SETTING_CHANGED'
    PAID_SUBSCRIPTION_STARTED = 'PAID_SUBSCRIPTION_STARTED'
    LICENSE_CAP_CHANGED = 'LICENSE_CAP_CHANGED'
    SUSPENSION_DETAILS_CHANGED = 'SUSPENSION_DETAILS_CHANGED'
    TRIAL_END_DATE_EXTENDED = 'TRIAL_END_DATE_EXTENDED'
    TRIAL_STARTED = 'TRIAL_STARTED'

class GoogleCloudChannelV1EntitlementChangeOperatorTypeEnum(str, Enum):
    r"""Operator type responsible for the change."""
    OPERATOR_TYPE_UNSPECIFIED = 'OPERATOR_TYPE_UNSPECIFIED'
    CUSTOMER_SERVICE_REPRESENTATIVE = 'CUSTOMER_SERVICE_REPRESENTATIVE'
    SYSTEM = 'SYSTEM'
    CUSTOMER = 'CUSTOMER'
    RESELLER = 'RESELLER'

class GoogleCloudChannelV1EntitlementChangeSuspensionReasonEnum(str, Enum):
    r"""Suspension reason for the Entitlement."""
    SUSPENSION_REASON_UNSPECIFIED = 'SUSPENSION_REASON_UNSPECIFIED'
    RESELLER_INITIATED = 'RESELLER_INITIATED'
    TRIAL_ENDED = 'TRIAL_ENDED'
    RENEWAL_WITH_TYPE_CANCEL = 'RENEWAL_WITH_TYPE_CANCEL'
    PENDING_TOS_ACCEPTANCE = 'PENDING_TOS_ACCEPTANCE'
    OTHER = 'OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudChannelV1EntitlementChange:
    r"""Change event entry for Entitlement order history"""
    
    activation_reason: Optional[GoogleCloudChannelV1EntitlementChangeActivationReasonEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activationReason'), 'exclude': lambda f: f is None }})
    r"""The Entitlement's activation reason"""  
    cancellation_reason: Optional[GoogleCloudChannelV1EntitlementChangeCancellationReasonEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancellationReason'), 'exclude': lambda f: f is None }})
    r"""Cancellation reason for the Entitlement."""  
    change_type: Optional[GoogleCloudChannelV1EntitlementChangeChangeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('changeType'), 'exclude': lambda f: f is None }})
    r"""The change action type."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""The submitted time of the change."""  
    entitlement: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entitlement'), 'exclude': lambda f: f is None }})
    r"""Required. Resource name of an entitlement in the form: accounts/{account_id}/customers/{customer_id}/entitlements/{entitlement_id}"""  
    offer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offer'), 'exclude': lambda f: f is None }})
    r"""Required. Resource name of the Offer at the time of change. Takes the form: accounts/{account_id}/offers/{offer_id}."""  
    operator: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operator'), 'exclude': lambda f: f is None }})
    r"""Human-readable identifier that shows what operator made a change. When the operator_type is RESELLER, this is the user's email address. For all other operator types, this is empty."""  
    operator_type: Optional[GoogleCloudChannelV1EntitlementChangeOperatorTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operatorType'), 'exclude': lambda f: f is None }})
    r"""Operator type responsible for the change."""  
    other_change_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('otherChangeReason'), 'exclude': lambda f: f is None }})
    r"""e.g. purchase_number change reason, entered by CRS."""  
    parameters: Optional[list[shared_googlecloudchannelv1parameter.GoogleCloudChannelV1Parameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""Extended parameters, such as: purchase_order_number, gcp_details; internal_correlation_id, long_running_operation_id, order_id; etc."""  
    provisioned_service: Optional[shared_googlecloudchannelv1provisionedservice.GoogleCloudChannelV1ProvisionedService] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provisionedService'), 'exclude': lambda f: f is None }})
    r"""Service provisioned for an entitlement."""  
    suspension_reason: Optional[GoogleCloudChannelV1EntitlementChangeSuspensionReasonEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suspensionReason'), 'exclude': lambda f: f is None }})
    r"""Suspension reason for the Entitlement."""  
    