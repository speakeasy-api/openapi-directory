"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ServingPerformanceMetrics:
    r"""Basic performance metrics that can be attached to a server response."""
    
    query_encode_ms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryEncodeMs'), 'exclude': lambda f: f is None }})
    r"""How long it took to encode the query."""  
    rerank_ms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rerankMs'), 'exclude': lambda f: f is None }})
    r"""How long it took to rerank the results."""  
    retrieval_ms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retrievalMs'), 'exclude': lambda f: f is None }})
    r"""How long it took to retrieve relevant results."""  
    userdata_retrieval_ms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userdataRetrievalMs'), 'exclude': lambda f: f is None }})
    r"""How long it took to retrieve user data."""  
    