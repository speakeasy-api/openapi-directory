/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BlockReference } from "./blockreference";
import { EntityTypeEnum } from "./entitytypeenum";
import { Expose, Type } from "class-transformer";

/**
 * <p>Provides information about an entity. </p> <p> </p>
 */
export class Entity extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BeginOffset" })
  beginOffset?: number;

  @SpeakeasyMetadata({ elemType: BlockReference })
  @Expose({ name: "BlockReferences" })
  @Type(() => BlockReference)
  blockReferences?: BlockReference[];

  @SpeakeasyMetadata()
  @Expose({ name: "EndOffset" })
  endOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Score" })
  score?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Text" })
  text?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: EntityTypeEnum;
}
