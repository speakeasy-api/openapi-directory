/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { HrefType } from "./hreftype";
import { TppMessage406AIS } from "./tppmessage406ais";
import { Expose, Transform, Type } from "class-transformer";

/**
 * NextGen specific definition of reporting error information in case of a HTTP error code 406.
 *
 * @remarks
 *
 */
export class Error406NGAIS extends SpeakeasyBase {
  /**
   * A _link object with all availabel link types.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: HrefType })
  @Expose({ name: "_links" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, HrefType> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], HrefType);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  links?: Record<string, HrefType>;

  @SpeakeasyMetadata({ elemType: TppMessage406AIS })
  @Expose({ name: "tppMessages" })
  @Type(() => TppMessage406AIS)
  tppMessages?: TppMessage406AIS[];
}
