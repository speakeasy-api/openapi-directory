// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisassociateDelegationSignerFromDomainXAmzTargetEnum
type DisassociateDelegationSignerFromDomainXAmzTargetEnum string

const (
	DisassociateDelegationSignerFromDomainXAmzTargetEnumRoute53DomainsV20140515DisassociateDelegationSignerFromDomain DisassociateDelegationSignerFromDomainXAmzTargetEnum = "Route53Domains_v20140515.DisassociateDelegationSignerFromDomain"
)

func (e DisassociateDelegationSignerFromDomainXAmzTargetEnum) ToPointer() *DisassociateDelegationSignerFromDomainXAmzTargetEnum {
	return &e
}

func (e *DisassociateDelegationSignerFromDomainXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Route53Domains_v20140515.DisassociateDelegationSignerFromDomain":
		*e = DisassociateDelegationSignerFromDomainXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateDelegationSignerFromDomainXAmzTargetEnum: %v", v)
	}
}

type DisassociateDelegationSignerFromDomainRequest struct {
	DisassociateDelegationSignerFromDomainRequest shared.DisassociateDelegationSignerFromDomainRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                 *string                                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                             *string                                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                                *string                                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                      *string                                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                             *string                                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                 *string                                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                             *string                                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                    DisassociateDelegationSignerFromDomainXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisassociateDelegationSignerFromDomainResponse struct {
	ContentType string
	// Success
	DisassociateDelegationSignerFromDomainResponse *shared.DisassociateDelegationSignerFromDomainResponse
	// DuplicateRequest
	DuplicateRequest interface{}
	// InvalidInput
	InvalidInput interface{}
	// OperationLimitExceeded
	OperationLimitExceeded interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TLDRulesViolation
	TLDRulesViolation interface{}
	// UnsupportedTLD
	UnsupportedTLD interface{}
}
