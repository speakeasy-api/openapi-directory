/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ProjectTemplateInstantiateProjectRequest {
    /**
     * *Optional*. If set to `true`, the endpoint returns an "Unprocessable Entity" error if you fail to provide a calendar date value for any date variable. If set to `false`, a default date is used for each unfulfilled date variable (e.g., the current date is used as the Start Date of a project).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_strict")
    public Boolean isStrict;

    public ProjectTemplateInstantiateProjectRequest withIsStrict(Boolean isStrict) {
        this.isStrict = isStrict;
        return this;
    }
    
    /**
     * The name of the new project.
     */
    @JsonProperty("name")
    public String name;

    public ProjectTemplateInstantiateProjectRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Sets the project to public to its team.
     */
    @JsonProperty("public")
    public Boolean public_;

    public ProjectTemplateInstantiateProjectRequest withPublic(Boolean public_) {
        this.public_ = public_;
        return this;
    }
    
    /**
     * Array of mappings of date variables to calendar dates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requested_dates")
    public DateVariableRequest[] requestedDates;

    public ProjectTemplateInstantiateProjectRequest withRequestedDates(DateVariableRequest[] requestedDates) {
        this.requestedDates = requestedDates;
        return this;
    }
    
    /**
     * *Conditional*. Sets the team of the new project. If the project template exists in an _organization_, you must specify a value for `team` and not `workspace`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("team")
    public String team;

    public ProjectTemplateInstantiateProjectRequest withTeam(String team) {
        this.team = team;
        return this;
    }
    
    /**
     * *Conditional*. Sets the workspace of the new project. If the project template exists in a _workspace_, you must specify a value for `workspace` and not `team`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspace")
    public String workspace;

    public ProjectTemplateInstantiateProjectRequest withWorkspace(String workspace) {
        this.workspace = workspace;
        return this;
    }
    
    public ProjectTemplateInstantiateProjectRequest(@JsonProperty("name") String name, @JsonProperty("public") Boolean public_) {
        this.name = name;
        this.public_ = public_;
  }
}
