/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DiscoverableParticipant - A participant to be discovered.
 */
public class DiscoverableParticipant {
    /**
     * An array of document types to discover. The default is '["invoice", "creditnote"]'. This is ignored when only checking existence.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentTypes")public DiscoverableParticipantDocumentTypesEnum[] documentTypes;
    public DiscoverableParticipant withDocumentTypes(DiscoverableParticipantDocumentTypesEnum[] documentTypes) {
        this.documentTypes = documentTypes;
        return this;
    }
    
    /**
     * The actual identifier.
     */
    @JsonProperty("identifier")public String identifier;
    public DiscoverableParticipant withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }
    
    /**
     * The meta scheme of the identifier. For Peppol this is always 'iso6523-actorid-upis'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metaScheme")public String metaScheme;
    public DiscoverableParticipant withMetaScheme(String metaScheme) {
        this.metaScheme = metaScheme;
        return this;
    }
    
    /**
     * The network to check. Currently only 'peppol' is supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")public String network;
    public DiscoverableParticipant withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * The scheme of the identifier. See &lt;&lt;_receiver_identifiers_list&gt;&gt; for a list.
     */
    @JsonProperty("scheme")public String scheme;
    public DiscoverableParticipant withScheme(String scheme) {
        this.scheme = scheme;
        return this;
    }
    
}
