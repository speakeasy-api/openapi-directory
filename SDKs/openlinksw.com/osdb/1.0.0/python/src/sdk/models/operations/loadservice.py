"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errormodel as shared_errormodel
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LoadServiceRequestBody:
    r"""Service to register with OSDB"""
    
    service_description_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_description_url') }})
    r"""The URL of the resource containing the service description to load."""  
    service_moniker: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_moniker'), 'exclude': lambda f: f is None }})
    r"""Service ID to be used to uniquely identify the service. (Optional: Required for anonymous services or to override the service name in the service description.)"""  
    
class LoadService200ApplicationJSONStatusEnum(str, Enum):
    SUCCESS = 'success'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LoadService200ApplicationJSON:
    r"""loadService response"""
    
    api: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api') }})
    r"""The path of the REST API method"""  
    method: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method') }})
    r"""The name of the REST API method"""  
    response: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response') }})
    r"""Confirmation message"""  
    status: LoadService200ApplicationJSONStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    

@dataclasses.dataclass
class LoadServiceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_model: Optional[shared_errormodel.ErrorModel] = dataclasses.field(default=None)
    r"""Error response"""  
    load_service_200_application_json_object: Optional[LoadService200ApplicationJSON] = dataclasses.field(default=None)
    r"""loadService response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    