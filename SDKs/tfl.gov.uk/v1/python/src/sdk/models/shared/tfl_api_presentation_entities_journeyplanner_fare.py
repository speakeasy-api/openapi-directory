"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tfl_api_presentation_entities_journeyplanner_faretap as shared_tfl_api_presentation_entities_journeyplanner_faretap
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TflAPIPresentationEntitiesJourneyPlannerFare:
    
    charge_level: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargeLevel'), 'exclude': lambda f: f is None }})  
    charge_profile_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargeProfileName'), 'exclude': lambda f: f is None }})  
    cost: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cost'), 'exclude': lambda f: f is None }})  
    high_zone: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('highZone'), 'exclude': lambda f: f is None }})  
    is_hopper_fare: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isHopperFare'), 'exclude': lambda f: f is None }})  
    low_zone: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lowZone'), 'exclude': lambda f: f is None }})  
    off_peak: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offPeak'), 'exclude': lambda f: f is None }})  
    peak: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('peak'), 'exclude': lambda f: f is None }})  
    taps: Optional[list[shared_tfl_api_presentation_entities_journeyplanner_faretap.TflAPIPresentationEntitiesJourneyPlannerFareTap]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taps'), 'exclude': lambda f: f is None }})  
    