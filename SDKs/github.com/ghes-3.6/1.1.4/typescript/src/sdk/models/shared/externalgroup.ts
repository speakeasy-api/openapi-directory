/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ExternalGroupMembers extends SpeakeasyBase {
  /**
   * An email attached to a user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member_email" })
  memberEmail: string;

  /**
   * The internal user ID of the identity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member_id" })
  memberId: number;

  /**
   * The handle/login for the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member_login" })
  memberLogin: string;

  /**
   * The user display name/profile name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member_name" })
  memberName: string;
}

export class ExternalGroupTeams extends SpeakeasyBase {
  /**
   * The id for a team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "team_id" })
  teamId: number;

  /**
   * The name of the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "team_name" })
  teamName: string;
}

/**
 * Information about an external group's usage and its members
 */
export class ExternalGroup extends SpeakeasyBase {
  /**
   * The internal ID of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId: number;

  /**
   * The display name for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_name" })
  groupName: string;

  /**
   * An array of external members linked to this group
   */
  @SpeakeasyMetadata({ elemType: ExternalGroupMembers })
  @Expose({ name: "members" })
  @Type(() => ExternalGroupMembers)
  members: ExternalGroupMembers[];

  /**
   * An array of teams linked to this group
   */
  @SpeakeasyMetadata({ elemType: ExternalGroupTeams })
  @Expose({ name: "teams" })
  @Type(() => ExternalGroupTeams)
  teams: ExternalGroupTeams[];

  /**
   * The date when the group was last updated_at
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}
