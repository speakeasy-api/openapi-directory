// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScanRunErrorTraceCodeEnum - Output only. Indicates the error reason code.
type ScanRunErrorTraceCodeEnum string

const (
	ScanRunErrorTraceCodeEnumCodeUnspecified             ScanRunErrorTraceCodeEnum = "CODE_UNSPECIFIED"
	ScanRunErrorTraceCodeEnumInternalError               ScanRunErrorTraceCodeEnum = "INTERNAL_ERROR"
	ScanRunErrorTraceCodeEnumScanConfigIssue             ScanRunErrorTraceCodeEnum = "SCAN_CONFIG_ISSUE"
	ScanRunErrorTraceCodeEnumAuthenticationConfigIssue   ScanRunErrorTraceCodeEnum = "AUTHENTICATION_CONFIG_ISSUE"
	ScanRunErrorTraceCodeEnumTimedOutWhileScanning       ScanRunErrorTraceCodeEnum = "TIMED_OUT_WHILE_SCANNING"
	ScanRunErrorTraceCodeEnumTooManyRedirects            ScanRunErrorTraceCodeEnum = "TOO_MANY_REDIRECTS"
	ScanRunErrorTraceCodeEnumTooManyHTTPErrors           ScanRunErrorTraceCodeEnum = "TOO_MANY_HTTP_ERRORS"
	ScanRunErrorTraceCodeEnumStartingUrlsCrawlHTTPErrors ScanRunErrorTraceCodeEnum = "STARTING_URLS_CRAWL_HTTP_ERRORS"
)

func (e *ScanRunErrorTraceCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CODE_UNSPECIFIED":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "SCAN_CONFIG_ISSUE":
		fallthrough
	case "AUTHENTICATION_CONFIG_ISSUE":
		fallthrough
	case "TIMED_OUT_WHILE_SCANNING":
		fallthrough
	case "TOO_MANY_REDIRECTS":
		fallthrough
	case "TOO_MANY_HTTP_ERRORS":
		fallthrough
	case "STARTING_URLS_CRAWL_HTTP_ERRORS":
		*e = ScanRunErrorTraceCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanRunErrorTraceCodeEnum: %s", s)
	}
}

// ScanRunErrorTrace - Output only. Defines an error trace message for a ScanRun.
type ScanRunErrorTrace struct {
	// Output only. Indicates the error reason code.
	Code *ScanRunErrorTraceCodeEnum `json:"code,omitempty"`
	// Output only. If the scan encounters TOO_MANY_HTTP_ERRORS, this field indicates the most common HTTP error code, if such is available. For example, if this code is 404, the scan has encountered too many NOT_FOUND responses.
	MostCommonHTTPErrorCode *int `json:"mostCommonHttpErrorCode,omitempty"`
	// Defines a custom error message used by CreateScanConfig and UpdateScanConfig APIs when scan configuration validation fails. It is also reported as part of a ScanRunErrorTrace message if scan validation fails due to a scan configuration error.
	ScanConfigError *ScanConfigError `json:"scanConfigError,omitempty"`
}
