/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CostEstimationResourceCollectionFilter } from "./costestimationresourcecollectionfilter";
import { CostEstimationStatusEnum } from "./costestimationstatusenum";
import { CostEstimationTimeRange } from "./costestimationtimerange";
import { ServiceResourceCost } from "./serviceresourcecost";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class GetCostEstimationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ServiceResourceCost })
  @Expose({ name: "Costs" })
  @Type(() => ServiceResourceCost)
  costs?: ServiceResourceCost[];

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceCollection" })
  @Type(() => CostEstimationResourceCollectionFilter)
  resourceCollection?: CostEstimationResourceCollectionFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: CostEstimationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeRange" })
  @Type(() => CostEstimationTimeRange)
  timeRange?: CostEstimationTimeRange;

  @SpeakeasyMetadata()
  @Expose({ name: "TotalCost" })
  totalCost?: number;
}
