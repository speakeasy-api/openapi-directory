/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InferenceSpecification } from "./inferencespecification";
import { ModelApprovalStatusEnum } from "./modelapprovalstatusenum";
import { ModelPackageStatusEnum } from "./modelpackagestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides summary information about the model package.
 */
export class BatchDescribeModelPackageSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  /**
   * Defines how to perform inference generation after a training job is run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSpecification" })
  @Type(() => InferenceSpecification)
  inferenceSpecification: InferenceSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelApprovalStatus" })
  modelApprovalStatus?: ModelApprovalStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageArn" })
  modelPackageArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageDescription" })
  modelPackageDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageGroupName" })
  modelPackageGroupName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageStatus" })
  modelPackageStatus: ModelPackageStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageVersion" })
  modelPackageVersion?: number;
}
