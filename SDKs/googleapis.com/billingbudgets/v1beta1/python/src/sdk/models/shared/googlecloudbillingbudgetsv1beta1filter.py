"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudbillingbudgetsv1beta1customperiod as shared_googlecloudbillingbudgetsv1beta1customperiod
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriodEnum(str, Enum):
    r"""Optional. Specifies to track usage for recurring calendar period. For example, assume that CalendarPeriod.QUARTER is set. The budget will track usage from April 1 to June 30, when the current calendar month is April, May, June. After that, it will track usage from July 1 to September 30 when the current calendar month is July, August, September, so on."""
    CALENDAR_PERIOD_UNSPECIFIED = 'CALENDAR_PERIOD_UNSPECIFIED'
    MONTH = 'MONTH'
    QUARTER = 'QUARTER'
    YEAR = 'YEAR'

class GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatmentEnum(str, Enum):
    r"""Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`."""
    CREDIT_TYPES_TREATMENT_UNSPECIFIED = 'CREDIT_TYPES_TREATMENT_UNSPECIFIED'
    INCLUDE_ALL_CREDITS = 'INCLUDE_ALL_CREDITS'
    EXCLUDE_ALL_CREDITS = 'EXCLUDE_ALL_CREDITS'
    INCLUDE_SPECIFIED_CREDITS = 'INCLUDE_SPECIFIED_CREDITS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudBillingBudgetsV1beta1Filter:
    r"""A filter for a budget, limiting the scope of the cost to calculate."""
    
    calendar_period: Optional[GoogleCloudBillingBudgetsV1beta1FilterCalendarPeriodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calendarPeriod'), 'exclude': lambda f: f is None }})
    r"""Optional. Specifies to track usage for recurring calendar period. For example, assume that CalendarPeriod.QUARTER is set. The budget will track usage from April 1 to June 30, when the current calendar month is April, May, June. After that, it will track usage from July 1 to September 30 when the current calendar month is July, August, September, so on."""  
    credit_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditTypes'), 'exclude': lambda f: f is None }})
    r"""Optional. If Filter.credit_types_treatment is INCLUDE_SPECIFIED_CREDITS, this is a list of credit types to be subtracted from gross cost to determine the spend for threshold calculations. See [a list of acceptable credit type values](https://cloud.google.com/billing/docs/how-to/export-data-bigquery-tables#credits-type). If Filter.credit_types_treatment is **not** INCLUDE_SPECIFIED_CREDITS, this field must be empty."""  
    credit_types_treatment: Optional[GoogleCloudBillingBudgetsV1beta1FilterCreditTypesTreatmentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditTypesTreatment'), 'exclude': lambda f: f is None }})
    r"""Optional. If not set, default behavior is `INCLUDE_ALL_CREDITS`."""  
    custom_period: Optional[shared_googlecloudbillingbudgetsv1beta1customperiod.GoogleCloudBillingBudgetsV1beta1CustomPeriod] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customPeriod'), 'exclude': lambda f: f is None }})
    r"""All date times begin at 12 AM US and Canadian Pacific Time (UTC-8)."""  
    labels: Optional[dict[str, list[Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Optional. A single label and value pair specifying that usage from only this set of labeled resources should be included in the budget. If omitted, the report will include all labeled and unlabeled usage. An object containing a single `\\"key\\": value` pair. Example: `{ \\"name\\": \\"wrench\\" }`. _Currently, multiple entries or multiple values per entry are not allowed._"""  
    projects: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projects'), 'exclude': lambda f: f is None }})
    r"""Optional. A set of projects of the form `projects/{project}`, specifying that usage from only this set of projects should be included in the budget. If omitted, the report will include all usage for the billing account, regardless of which project the usage occurred on."""  
    services: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('services'), 'exclude': lambda f: f is None }})
    r"""Optional. A set of services of the form `services/{service_id}`, specifying that usage from only this set of services should be included in the budget. If omitted, the report will include usage for all the services. The service names are available through the Catalog API: https://cloud.google.com/billing/v1/how-tos/catalog-api."""  
    subaccounts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subaccounts'), 'exclude': lambda f: f is None }})
    r"""Optional. A set of subaccounts of the form `billingAccounts/{account_id}`, specifying that usage from only this set of subaccounts should be included in the budget. If a subaccount is set to the name of the parent account, usage from the parent account will be included. If omitted, the report will include usage from the parent account and all subaccounts, if they exist."""  
    