/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { V1Money } from "./v1money";
import { Expose, Type } from "class-transformer";

/**
 * V1CreateRefundRequest
 */
export class V1CreateRefundRequest extends SpeakeasyBase {
  /**
   * The ID of the payment to refund. If you are creating a `PARTIAL`
   *
   * @remarks
   * refund for a split tender payment, instead provide the id of the
   * particular tender you want to refund.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_id" })
  paymentId: string;

  /**
   * The reason for the refund.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason: string;

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_money" })
  @Type(() => V1Money)
  refundedMoney?: V1Money;

  /**
   * An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_idempotence_key" })
  requestIdempotenceKey?: string;

  /**
   * The type of refund (FULL or PARTIAL).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
