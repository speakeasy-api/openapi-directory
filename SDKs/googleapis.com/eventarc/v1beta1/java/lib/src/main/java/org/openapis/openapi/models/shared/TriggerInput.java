/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TriggerInput - A representation of the trigger resource.
 */
public class TriggerInput {
    /**
     * Represents a target of an invocation over HTTP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destination")
    public Destination destination;
    public TriggerInput withDestination(Destination destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * Optional. User labels attached to the triggers that can be used to group resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public TriggerInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Required. Unordered list. The criteria by which events are filtered. Only events that match with this criteria will be sent to the destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("matchingCriteria")
    public MatchingCriteria[] matchingCriteria;
    public TriggerInput withMatchingCriteria(MatchingCriteria[] matchingCriteria) {
        this.matchingCriteria = matchingCriteria;
        return this;
    }
    
    /**
     * Required. The resource name of the trigger. Must be unique within the location on the project and must in `projects/{project}/locations/{location}/triggers/{trigger}` format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public TriggerInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional. The IAM service account email associated with the trigger. The service account represents the identity of the trigger. The principal who calls this API must have `iam.serviceAccounts.actAs` permission in the service account. See https://cloud.google.com/iam/docs/understanding-service-accounts?hl=en#sa_common for more information. For Cloud Run destinations, this service account is used to generate identity tokens when invoking the service. See https://cloud.google.com/run/docs/triggering/pubsub-push#create-service-account for information on how to invoke authenticated Cloud Run services. In order to create Audit Log triggers, the service account should also have 'eventarc.events.receiveAuditLogV1Written' permission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;
    public TriggerInput withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Represents the transport intermediaries created for the trigger in order to deliver events.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transport")
    public TransportInput transport;
    public TriggerInput withTransport(TransportInput transport) {
        this.transport = transport;
        return this;
    }
    
}
