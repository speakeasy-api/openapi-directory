/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A record of an employee's break during a shift.
 */
export class Break extends SpeakeasyBase {
  /**
   * The `BreakType` that this `Break` was templated on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "break_type_id" })
  breakTypeId: string;

  /**
   * RFC 3339; follows the same timezone information as `Shift`. Precision up to
   *
   * @remarks
   * the minute is respected; seconds are truncated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_at" })
  endAt?: string;

  /**
   * Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of
   *
   * @remarks
   * the break.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expected_duration" })
  expectedDuration: string;

  /**
   * The UUID for this object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Whether this break counts towards time worked for compensation
   *
   * @remarks
   * purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_paid" })
  isPaid: boolean;

  /**
   * A human-readable name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * RFC 3339; follows the same timezone information as `Shift`. Precision up to
   *
   * @remarks
   * the minute is respected; seconds are truncated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_at" })
  startAt: string;
}
