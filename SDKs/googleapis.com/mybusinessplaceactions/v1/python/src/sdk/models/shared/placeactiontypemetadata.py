"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PlaceActionTypeMetadataPlaceActionTypeEnum(str, Enum):
    r"""The place action type."""
    PLACE_ACTION_TYPE_UNSPECIFIED = 'PLACE_ACTION_TYPE_UNSPECIFIED'
    APPOINTMENT = 'APPOINTMENT'
    ONLINE_APPOINTMENT = 'ONLINE_APPOINTMENT'
    DINING_RESERVATION = 'DINING_RESERVATION'
    FOOD_ORDERING = 'FOOD_ORDERING'
    FOOD_DELIVERY = 'FOOD_DELIVERY'
    FOOD_TAKEOUT = 'FOOD_TAKEOUT'
    SHOP_ONLINE = 'SHOP_ONLINE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlaceActionTypeMetadata:
    r"""Metadata for supported place action types."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The localized display name for the attribute, if available; otherwise, the English display name."""  
    place_action_type: Optional[PlaceActionTypeMetadataPlaceActionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('placeActionType'), 'exclude': lambda f: f is None }})
    r"""The place action type."""  
    