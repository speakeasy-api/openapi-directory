"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sensitivityinspectiontemplateexcludes as shared_sensitivityinspectiontemplateexcludes
from ..shared import sensitivityinspectiontemplateincludes as shared_sensitivityinspectiontemplateincludes
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetSensitivityInspectionTemplateResponse:
    r"""Success"""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    excludes: Optional[shared_sensitivityinspectiontemplateexcludes.SensitivityInspectionTemplateExcludes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('excludes'), 'exclude': lambda f: f is None }})  
    includes: Optional[shared_sensitivityinspectiontemplateincludes.SensitivityInspectionTemplateIncludes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includes'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    sensitivity_inspection_template_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sensitivityInspectionTemplateId'), 'exclude': lambda f: f is None }})  
    