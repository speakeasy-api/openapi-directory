"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import analysisruleaggregation as shared_analysisruleaggregation
from ..shared import analysisrulelist as shared_analysisrulelist
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfiguredTableAnalysisRulePolicyV1:
    r"""Controls on the query specifications that can be run on a configured table."""
    
    aggregation: Optional[shared_analysisruleaggregation.AnalysisRuleAggregation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregation'), 'exclude': lambda f: f is None }})  
    list_: Optional[shared_analysisrulelist.AnalysisRuleList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('list'), 'exclude': lambda f: f is None }})  
    