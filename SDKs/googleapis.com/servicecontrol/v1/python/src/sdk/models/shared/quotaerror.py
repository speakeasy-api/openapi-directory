"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import status as shared_status
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class QuotaErrorCodeEnum(str, Enum):
    r"""Error code."""
    UNSPECIFIED = 'UNSPECIFIED'
    RESOURCE_EXHAUSTED = 'RESOURCE_EXHAUSTED'
    OUT_OF_RANGE = 'OUT_OF_RANGE'
    BILLING_NOT_ACTIVE = 'BILLING_NOT_ACTIVE'
    PROJECT_DELETED = 'PROJECT_DELETED'
    API_KEY_INVALID = 'API_KEY_INVALID'
    API_KEY_EXPIRED = 'API_KEY_EXPIRED'
    SPATULA_HEADER_INVALID = 'SPATULA_HEADER_INVALID'
    LOAS_ROLE_INVALID = 'LOAS_ROLE_INVALID'
    NO_LOAS_PROJECT = 'NO_LOAS_PROJECT'
    PROJECT_STATUS_UNAVAILABLE = 'PROJECT_STATUS_UNAVAILABLE'
    SERVICE_STATUS_UNAVAILABLE = 'SERVICE_STATUS_UNAVAILABLE'
    BILLING_STATUS_UNAVAILABLE = 'BILLING_STATUS_UNAVAILABLE'
    QUOTA_SYSTEM_UNAVAILABLE = 'QUOTA_SYSTEM_UNAVAILABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QuotaError:
    r"""Represents error information for QuotaOperation."""
    
    code: Optional[QuotaErrorCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Error code."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Free-form text that provides details on the cause of the error."""  
    status: Optional[shared_status.Status] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."""  
    subject: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subject'), 'exclude': lambda f: f is None }})
    r"""Subject to whom this error applies. See the specific enum for more details on this field. For example, \\"clientip:\\" or \\"project:\\"."""  
    