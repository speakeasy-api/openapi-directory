// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateApplicationXAmzTargetEnum
type UpdateApplicationXAmzTargetEnum string

const (
	UpdateApplicationXAmzTargetEnumAwsPoseidonServiceV20151101UpdateApplication UpdateApplicationXAmzTargetEnum = "AWSPoseidonService_V2015_11_01.UpdateApplication"
)

func (e UpdateApplicationXAmzTargetEnum) ToPointer() *UpdateApplicationXAmzTargetEnum {
	return &e
}

func (e *UpdateApplicationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSPoseidonService_V2015_11_01.UpdateApplication":
		*e = UpdateApplicationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApplicationXAmzTargetEnum: %v", v)
	}
}

type UpdateApplicationRequest struct {
	UpdateApplicationRequest shared.UpdateApplicationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               UpdateApplicationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateApplicationResponse struct {
	// AuthorizationErrorException
	AuthorizationErrorException interface{}
	ContentType                 string
	// HomeRegionNotSetException
	HomeRegionNotSetException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ServerInternalErrorException
	ServerInternalErrorException interface{}
	// Success
	UpdateApplicationResponse map[string]interface{}
}
