// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AddApplicationOutputXAmzTargetEnum
type AddApplicationOutputXAmzTargetEnum string

const (
	AddApplicationOutputXAmzTargetEnumKinesisAnalytics20150814AddApplicationOutput AddApplicationOutputXAmzTargetEnum = "KinesisAnalytics_20150814.AddApplicationOutput"
)

func (e AddApplicationOutputXAmzTargetEnum) ToPointer() *AddApplicationOutputXAmzTargetEnum {
	return &e
}

func (e *AddApplicationOutputXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KinesisAnalytics_20150814.AddApplicationOutput":
		*e = AddApplicationOutputXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddApplicationOutputXAmzTargetEnum: %v", v)
	}
}

type AddApplicationOutputRequest struct {
	AddApplicationOutputRequest shared.AddApplicationOutputRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  AddApplicationOutputXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AddApplicationOutputResponse struct {
	// Success
	AddApplicationOutputResponse map[string]interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
