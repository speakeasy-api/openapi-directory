"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InstanceGroupsScopedList = exports.InstanceGroupsScopedListWarning = exports.InstanceGroupsScopedListWarningData = exports.InstanceGroupsScopedListWarningCodeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var instancegroup_1 = require("./instancegroup");
var class_transformer_1 = require("class-transformer");
/**
 * [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
 */
var InstanceGroupsScopedListWarningCodeEnum;
(function (InstanceGroupsScopedListWarningCodeEnum) {
    InstanceGroupsScopedListWarningCodeEnum["CleanupFailed"] = "CLEANUP_FAILED";
    InstanceGroupsScopedListWarningCodeEnum["DeprecatedResourceUsed"] = "DEPRECATED_RESOURCE_USED";
    InstanceGroupsScopedListWarningCodeEnum["DeprecatedTypeUsed"] = "DEPRECATED_TYPE_USED";
    InstanceGroupsScopedListWarningCodeEnum["DiskSizeLargerThanImageSize"] = "DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
    InstanceGroupsScopedListWarningCodeEnum["ExperimentalTypeUsed"] = "EXPERIMENTAL_TYPE_USED";
    InstanceGroupsScopedListWarningCodeEnum["ExternalApiWarning"] = "EXTERNAL_API_WARNING";
    InstanceGroupsScopedListWarningCodeEnum["FieldValueOverriden"] = "FIELD_VALUE_OVERRIDEN";
    InstanceGroupsScopedListWarningCodeEnum["InjectedKernelsDeprecated"] = "INJECTED_KERNELS_DEPRECATED";
    InstanceGroupsScopedListWarningCodeEnum["InvalidHealthCheckForDynamicWieghtedLb"] = "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
    InstanceGroupsScopedListWarningCodeEnum["LargeDeploymentWarning"] = "LARGE_DEPLOYMENT_WARNING";
    InstanceGroupsScopedListWarningCodeEnum["MissingTypeDependency"] = "MISSING_TYPE_DEPENDENCY";
    InstanceGroupsScopedListWarningCodeEnum["NextHopAddressNotAssigned"] = "NEXT_HOP_ADDRESS_NOT_ASSIGNED";
    InstanceGroupsScopedListWarningCodeEnum["NextHopCannotIpForward"] = "NEXT_HOP_CANNOT_IP_FORWARD";
    InstanceGroupsScopedListWarningCodeEnum["NextHopInstanceHasNoIpv6Interface"] = "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
    InstanceGroupsScopedListWarningCodeEnum["NextHopInstanceNotFound"] = "NEXT_HOP_INSTANCE_NOT_FOUND";
    InstanceGroupsScopedListWarningCodeEnum["NextHopInstanceNotOnNetwork"] = "NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
    InstanceGroupsScopedListWarningCodeEnum["NextHopNotRunning"] = "NEXT_HOP_NOT_RUNNING";
    InstanceGroupsScopedListWarningCodeEnum["NotCriticalError"] = "NOT_CRITICAL_ERROR";
    InstanceGroupsScopedListWarningCodeEnum["NoResultsOnPage"] = "NO_RESULTS_ON_PAGE";
    InstanceGroupsScopedListWarningCodeEnum["PartialSuccess"] = "PARTIAL_SUCCESS";
    InstanceGroupsScopedListWarningCodeEnum["RequiredTosAgreement"] = "REQUIRED_TOS_AGREEMENT";
    InstanceGroupsScopedListWarningCodeEnum["ResourceInUseByOtherResourceWarning"] = "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
    InstanceGroupsScopedListWarningCodeEnum["ResourceNotDeleted"] = "RESOURCE_NOT_DELETED";
    InstanceGroupsScopedListWarningCodeEnum["SchemaValidationIgnored"] = "SCHEMA_VALIDATION_IGNORED";
    InstanceGroupsScopedListWarningCodeEnum["SingleInstancePropertyTemplate"] = "SINGLE_INSTANCE_PROPERTY_TEMPLATE";
    InstanceGroupsScopedListWarningCodeEnum["UndeclaredProperties"] = "UNDECLARED_PROPERTIES";
    InstanceGroupsScopedListWarningCodeEnum["Unreachable"] = "UNREACHABLE";
})(InstanceGroupsScopedListWarningCodeEnum = exports.InstanceGroupsScopedListWarningCodeEnum || (exports.InstanceGroupsScopedListWarningCodeEnum = {}));
var InstanceGroupsScopedListWarningData = /** @class */ (function (_super) {
    __extends(InstanceGroupsScopedListWarningData, _super);
    function InstanceGroupsScopedListWarningData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], InstanceGroupsScopedListWarningData.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], InstanceGroupsScopedListWarningData.prototype, "value", void 0);
    return InstanceGroupsScopedListWarningData;
}(utils_1.SpeakeasyBase));
exports.InstanceGroupsScopedListWarningData = InstanceGroupsScopedListWarningData;
/**
 * [Output Only] An informational warning that replaces the list of instance groups when the list is empty.
 */
var InstanceGroupsScopedListWarning = /** @class */ (function (_super) {
    __extends(InstanceGroupsScopedListWarning, _super);
    function InstanceGroupsScopedListWarning() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], InstanceGroupsScopedListWarning.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: InstanceGroupsScopedListWarningData }),
        (0, class_transformer_1.Expose)({ name: "data" }),
        (0, class_transformer_1.Type)(function () { return InstanceGroupsScopedListWarningData; }),
        __metadata("design:type", Array)
    ], InstanceGroupsScopedListWarning.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], InstanceGroupsScopedListWarning.prototype, "message", void 0);
    return InstanceGroupsScopedListWarning;
}(utils_1.SpeakeasyBase));
exports.InstanceGroupsScopedListWarning = InstanceGroupsScopedListWarning;
var InstanceGroupsScopedList = /** @class */ (function (_super) {
    __extends(InstanceGroupsScopedList, _super);
    function InstanceGroupsScopedList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: instancegroup_1.InstanceGroup }),
        (0, class_transformer_1.Expose)({ name: "instanceGroups" }),
        (0, class_transformer_1.Type)(function () { return instancegroup_1.InstanceGroup; }),
        __metadata("design:type", Array)
    ], InstanceGroupsScopedList.prototype, "instanceGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "warning" }),
        (0, class_transformer_1.Type)(function () { return InstanceGroupsScopedListWarning; }),
        __metadata("design:type", InstanceGroupsScopedListWarning)
    ], InstanceGroupsScopedList.prototype, "warning", void 0);
    return InstanceGroupsScopedList;
}(utils_1.SpeakeasyBase));
exports.InstanceGroupsScopedList = InstanceGroupsScopedList;
