/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The updated status of the security standard control.
 */
export enum UpdateStandardsControlRequestBodyControlStatusEnum {
  Enabled = "ENABLED",
  Disabled = "DISABLED",
}

export class UpdateStandardsControlRequestBody extends SpeakeasyBase {
  /**
   * The updated status of the security standard control.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ControlStatus" })
  controlStatus?: UpdateStandardsControlRequestBodyControlStatusEnum;

  /**
   * A description of the reason why you are disabling a security standard control. If you are disabling a control, then this is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DisabledReason" })
  disabledReason?: string;
}

export class UpdateStandardsControlRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateStandardsControlRequestBody;

  /**
   * The ARN of the security standard control to enable or disable.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=StandardsControlArn",
  })
  standardsControlArn: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateStandardsControlResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalException
   */
  @SpeakeasyMetadata()
  internalException?: any;

  /**
   * InvalidAccessException
   */
  @SpeakeasyMetadata()
  invalidAccessException?: any;

  /**
   * InvalidInputException
   */
  @SpeakeasyMetadata()
  invalidInputException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateStandardsControlResponse?: Record<string, any>;
}
