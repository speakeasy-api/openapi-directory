"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class GetUnmaskedProfileByVersionRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent."""  
    profile_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'profileId', 'style': 'simple', 'explode': False }})
    r"""ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."""  
    profile_version_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'profileVersionId', 'style': 'simple', 'explode': False }})
    r"""ID of the version of the client's profile as returned by endpoints that create or update profile information in the `version` field."""  
    reason: str = dataclasses.field(metadata={'query_param': { 'field_name': 'reason', 'style': 'form', 'explode': True }})
    r"""Reason for requesting unmasked data."""  
    

@dataclasses.dataclass
class GetUnmaskedProfileByVersionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_unmasked_profile_by_version_200_application_json_anies: Optional[list[Any]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    