/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { InAppProductListing } from "./inappproductlisting";
import { Price } from "./price";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Successful response
 */
export class InAppProduct extends SpeakeasyBase {
  /**
   * The default language of the localized data, as defined by BCP 47. e.g. "en-US", "en-GB".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultLanguage" })
  defaultLanguage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultPrice" })
  @Type(() => Price)
  defaultPrice?: Price;

  /**
   * Grace period of the subscription, specified in ISO 8601 format. It will allow developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values = "P3D" (three days), "P7D" (seven days), "P14D" (fourteen days), and "P30D" (thirty days)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gracePeriod" })
  gracePeriod?: string;

  /**
   * List of localized title and description data.
   */
  @SpeakeasyMetadata({ elemType: InAppProductListing })
  @Expose({ name: "listings" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, InAppProductListing> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], InAppProductListing);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  listings?: Record<string, InAppProductListing>;

  /**
   * The package name of the parent app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "packageName" })
  packageName?: string;

  /**
   * Prices per buyer region. None of these prices should be zero. In-app products can never be free.
   */
  @SpeakeasyMetadata({ elemType: Price })
  @Expose({ name: "prices" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Price> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], Price);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  prices?: Record<string, Price>;

  /**
   * Purchase type enum value. Unmodifiable after creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purchaseType" })
  purchaseType?: string;

  /**
   * The stock-keeping-unit (SKU) of the product, unique within an app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Subscription period, specified in ISO 8601 format. Acceptable values are "P1W" (one week), "P1M" (one month), "P3M" (three months), "P6M" (six months), and "P1Y" (one year).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionPeriod" })
  subscriptionPeriod?: string;

  /**
   * Trial period, specified in ISO 8601 format. Acceptable values are anything between "P7D" (seven days) and "P999D" (999 days). Seasonal subscriptions cannot have a trial period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trialPeriod" })
  trialPeriod?: string;
}
