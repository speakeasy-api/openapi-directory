/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PagespeedonlinePagespeedapiRunpagespeedSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export enum PagespeedonlinePagespeedapiRunpagespeedCategoryEnum {
  CategoryUnspecified = "CATEGORY_UNSPECIFIED",
  Accessibility = "ACCESSIBILITY",
  BestPractices = "BEST_PRACTICES",
  Performance = "PERFORMANCE",
  Pwa = "PWA",
  Seo = "SEO",
}

/**
 * The analysis strategy (desktop or mobile) to use, and desktop is the default
 */
export enum PagespeedonlinePagespeedapiRunpagespeedStrategyEnum {
  StrategyUnspecified = "STRATEGY_UNSPECIFIED",
  Desktop = "DESKTOP",
  Mobile = "MOBILE",
}

export class PagespeedonlinePagespeedapiRunpagespeedRequest extends SpeakeasyBase {
  /**
   * V1 error format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=$.xgafv",
  })
  dollarXgafv?: shared.XgafvEnum;

  /**
   * OAuth access token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=access_token",
  })
  accessToken?: string;

  /**
   * Data format for response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=alt" })
  alt?: shared.AltEnum;

  /**
   * JSONP
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callback",
  })
  callback?: string;

  /**
   * The captcha token passed when filling out a captcha.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=captchaToken",
  })
  captchaToken?: string;

  /**
   * A Lighthouse category to run; if none are given, only Performance category will be run
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=category",
  })
  category?: PagespeedonlinePagespeedapiRunpagespeedCategoryEnum[];

  /**
   * Selector specifying which fields to include in a partial response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * The locale used to localize formatted results
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locale",
  })
  locale?: string;

  /**
   * OAuth 2.0 token for the current user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oauth_token",
  })
  oauthToken?: string;

  /**
   * Returns response with indentations and line breaks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=prettyPrint",
  })
  prettyPrint?: boolean;

  /**
   * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quotaUser",
  })
  quotaUser?: string;

  /**
   * The analysis strategy (desktop or mobile) to use, and desktop is the default
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=strategy",
  })
  strategy?: PagespeedonlinePagespeedapiRunpagespeedStrategyEnum;

  /**
   * Legacy upload protocol for media (e.g. "media", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=uploadType",
  })
  uploadType?: string;

  /**
   * Upload protocol for media (e.g. "raw", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=upload_protocol",
  })
  uploadProtocol?: string;

  /**
   * Required. The URL to fetch and analyze
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=url" })
  url: string;

  /**
   * Campaign name for analytics.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=utm_campaign",
  })
  utmCampaign?: string;

  /**
   * Campaign source for analytics.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=utm_source",
  })
  utmSource?: string;
}

export class PagespeedonlinePagespeedapiRunpagespeedResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  pagespeedApiPagespeedResponseV5?: shared.PagespeedApiPagespeedResponseV5;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
