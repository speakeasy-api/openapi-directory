/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EmployeeTaxSetup - Add tax form, 1099 exempt reasons and notes, and 943 agricultural employee information. Once the employee receives wages, this information cannot be updated. Add or update SUI tax state, retirement plan, and statutory information.
 */
public class EmployeeTaxSetup {
    /**
     * Notes for FITW exemption.&lt;br  /&gt; Max length: 250
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fitwExemptNotes")
    public String fitwExemptNotes;
    public EmployeeTaxSetup withFitwExemptNotes(String fitwExemptNotes) {
        this.fitwExemptNotes = fitwExemptNotes;
        return this;
    }
    
    /**
     * Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fitwExemptReason")
    public String fitwExemptReason;
    public EmployeeTaxSetup withFitwExemptReason(String fitwExemptReason) {
        this.fitwExemptReason = fitwExemptReason;
        return this;
    }
    
    /**
     * Notes for FUTA exemption.&lt;br  /&gt; Max length: 250
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("futaExemptNotes")
    public String futaExemptNotes;
    public EmployeeTaxSetup withFutaExemptNotes(String futaExemptNotes) {
        this.futaExemptNotes = futaExemptNotes;
        return this;
    }
    
    /**
     * Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).&lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("futaExemptReason")
    public String futaExemptReason;
    public EmployeeTaxSetup withFutaExemptReason(String futaExemptReason) {
        this.futaExemptReason = futaExemptReason;
        return this;
    }
    
    /**
     * Indicates if employee in agriculture or farming.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEmployee943")
    public Boolean isEmployee943;
    public EmployeeTaxSetup withIsEmployee943(Boolean isEmployee943) {
        this.isEmployee943 = isEmployee943;
        return this;
    }
    
    /**
     * Indicates if employee is eligible for pension.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isPension")
    public Boolean isPension;
    public EmployeeTaxSetup withIsPension(Boolean isPension) {
        this.isPension = isPension;
        return this;
    }
    
    /**
     * Indicates if employee is statutory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isStatutory")
    public Boolean isStatutory;
    public EmployeeTaxSetup withIsStatutory(Boolean isStatutory) {
        this.isStatutory = isStatutory;
        return this;
    }
    
    /**
     * Notes for Medicare exemption.&lt;br  /&gt; Max length: 250
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("medExemptNotes")
    public String medExemptNotes;
    public EmployeeTaxSetup withMedExemptNotes(String medExemptNotes) {
        this.medExemptNotes = medExemptNotes;
        return this;
    }
    
    /**
     * Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).&lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("medExemptReason")
    public String medExemptReason;
    public EmployeeTaxSetup withMedExemptReason(String medExemptReason) {
        this.medExemptReason = medExemptReason;
        return this;
    }
    
    /**
     * Notes for SITW exemption.&lt;br  /&gt; Max length: 250
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sitwExemptNotes")
    public String sitwExemptNotes;
    public EmployeeTaxSetup withSitwExemptNotes(String sitwExemptNotes) {
        this.sitwExemptNotes = sitwExemptNotes;
        return this;
    }
    
    /**
     * Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sitwExemptReason")
    public String sitwExemptReason;
    public EmployeeTaxSetup withSitwExemptReason(String sitwExemptReason) {
        this.sitwExemptReason = sitwExemptReason;
        return this;
    }
    
    /**
     * Notes for Social Security exemption.&lt;br  /&gt; Max length: 250
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssExemptNotes")
    public String ssExemptNotes;
    public EmployeeTaxSetup withSsExemptNotes(String ssExemptNotes) {
        this.ssExemptNotes = ssExemptNotes;
        return this;
    }
    
    /**
     * Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssExemptReason")
    public String ssExemptReason;
    public EmployeeTaxSetup withSsExemptReason(String ssExemptReason) {
        this.ssExemptReason = ssExemptReason;
        return this;
    }
    
    /**
     * Notes for SUI exemption.&lt;br  /&gt; Max length: 250
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suiExemptNotes")
    public String suiExemptNotes;
    public EmployeeTaxSetup withSuiExemptNotes(String suiExemptNotes) {
        this.suiExemptNotes = suiExemptNotes;
        return this;
    }
    
    /**
     * Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). &lt;br  /&gt; Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suiExemptReason")
    public String suiExemptReason;
    public EmployeeTaxSetup withSuiExemptReason(String suiExemptReason) {
        this.suiExemptReason = suiExemptReason;
        return this;
    }
    
    /**
     * Employee SUI (State Unemployment Insurance) state. &lt;br  /&gt;Max length: 2
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suiState")
    public String suiState;
    public EmployeeTaxSetup withSuiState(String suiState) {
        this.suiState = suiState;
        return this;
    }
    
    /**
     * Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). &lt;br  /&gt;Max length: 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxDistributionCode1099R")
    public String taxDistributionCode1099R;
    public EmployeeTaxSetup withTaxDistributionCode1099R(String taxDistributionCode1099R) {
        this.taxDistributionCode1099R = taxDistributionCode1099R;
        return this;
    }
    
    /**
     * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. &lt;br  /&gt;Max length: 15
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxForm")
    public String taxForm;
    public EmployeeTaxSetup withTaxForm(String taxForm) {
        this.taxForm = taxForm;
        return this;
    }
    
}
