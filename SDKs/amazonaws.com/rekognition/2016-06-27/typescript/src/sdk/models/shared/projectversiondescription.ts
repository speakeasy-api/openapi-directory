/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EvaluationResult } from "./evaluationresult";
import { GroundTruthManifest } from "./groundtruthmanifest";
import { OutputConfig } from "./outputconfig";
import { ProjectVersionStatusEnum } from "./projectversionstatusenum";
import { TestingDataResult } from "./testingdataresult";
import { TrainingDataResult } from "./trainingdataresult";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A description of a version of an Amazon Rekognition Custom Labels model.
 */
export class ProjectVersionDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BillableTrainingTimeInSeconds" })
  billableTrainingTimeInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationResult" })
  @Type(() => EvaluationResult)
  evaluationResult?: EvaluationResult;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ManifestSummary" })
  @Type(() => GroundTruthManifest)
  manifestSummary?: GroundTruthManifest;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxInferenceUnits" })
  maxInferenceUnits?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MinInferenceUnits" })
  minInferenceUnits?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputConfig" })
  @Type(() => OutputConfig)
  outputConfig?: OutputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ProjectVersionArn" })
  projectVersionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceProjectVersionArn" })
  sourceProjectVersionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ProjectVersionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TestingDataResult" })
  @Type(() => TestingDataResult)
  testingDataResult?: TestingDataResult;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingDataResult" })
  @Type(() => TrainingDataResult)
  trainingDataResult?: TrainingDataResult;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingEndTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainingEndTimestamp?: Date;
}
