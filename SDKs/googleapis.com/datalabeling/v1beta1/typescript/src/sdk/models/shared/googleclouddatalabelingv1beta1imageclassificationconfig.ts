/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Optional. The type of how to aggregate answers.
 */
export enum GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum {
  StringAggregationTypeUnspecified = "STRING_AGGREGATION_TYPE_UNSPECIFIED",
  MajorityVote = "MAJORITY_VOTE",
  UnanimousVote = "UNANIMOUS_VOTE",
  NoAggregation = "NO_AGGREGATION",
}

/**
 * Config for image classification human labeling task.
 */
export class GoogleCloudDatalabelingV1beta1ImageClassificationConfig extends SpeakeasyBase {
  /**
   * Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowMultiLabel" })
  allowMultiLabel?: boolean;

  /**
   * Required. Annotation spec set resource name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotationSpecSet" })
  annotationSpecSet?: string;

  /**
   * Optional. The type of how to aggregate answers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answerAggregationType" })
  answerAggregationType?: GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum;
}
