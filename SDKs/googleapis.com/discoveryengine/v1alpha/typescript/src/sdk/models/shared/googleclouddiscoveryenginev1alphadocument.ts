/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Document captures all raw metadata information of items to be recommended or searched.
 */
export class GoogleCloudDiscoveryengineV1alphaDocument extends SpeakeasyBase {
  /**
   * Immutable. The identifier of the document. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The JSON string representation of the document. It should conform to the registered schema or an INVALID_ARGUMENT error is thrown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jsonData" })
  jsonData?: string;

  /**
   * Immutable. The full resource name of the document. Format: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`. This field must be a UTF-8 encoded string with a length limit of 1024 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The identifier of the parent document. Currently supports at most two level document hierarchy. Id should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentDocumentId" })
  parentDocumentId?: string;

  /**
   * The identifier of the schema located in the same data store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemaId" })
  schemaId?: string;

  /**
   * The structured JSON data for the document. It should conform to the registered schema or an INVALID_ARGUMENT error is thrown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "structData" })
  structData?: Record<string, any>;
}
