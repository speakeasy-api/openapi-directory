/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Location - A location. See the [help center article] (https://support.google.com/business/answer/3038177) for a detailed description of these fields, or the [category endpoint](/my-business/reference/rest/v4/categories) for a list of valid business categories.
 */
public class Location {
    /**
     * Additional information that is surfaced in AdWords.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adWordsLocationExtensions")
    public AdWordsLocationExtensions adWordsLocationExtensions;
    public Location withAdWordsLocationExtensions(AdWordsLocationExtensions adWordsLocationExtensions) {
        this.adWordsLocationExtensions = adWordsLocationExtensions;
        return this;
    }
    
    /**
     * Additional categories to describe your business. Categories help your customers find accurate, specific results for services they're interested in. To keep your business information accurate and live, make sure that you use as few categories as possible to describe your overall core business. Choose categories that are as specific as possible, but representative of your main business.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalCategories")
    public Category[] additionalCategories;
    public Location withAdditionalCategories(Category[] additionalCategories) {
        this.additionalCategories = additionalCategories;
        return this;
    }
    
    /**
     * Up to two phone numbers (mobile or landline, no fax) at which your business can be called, in addition to your primary phone number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalPhones")
    public String[] additionalPhones;
    public Location withAdditionalPhones(String[] additionalPhones) {
        this.additionalPhones = additionalPhones;
        return this;
    }
    
    /**
     * Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public PostalAddress address;
    public Location withAddress(PostalAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Attributes for this location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public Attribute[] attributes;
    public Location withAttributes(Attribute[] attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * A collection of free-form strings to allow you to tag your business. These labels are NOT user facing; only you can see them. Limited to 255 characters (per label).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public String[] labels;
    public Location withLabels(String[] labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The language of the location. Set during creation and not updateable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCode")
    public String languageCode;
    public Location withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latlng")
    public LatLng latlng;
    public Location withLatlng(LatLng latlng) {
        this.latlng = latlng;
        return this;
    }
    
    /**
     * Alternate/surrogate key references for a location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationKey")
    public LocationKey locationKey;
    public Location withLocationKey(LocationKey locationKey) {
        this.locationKey = locationKey;
        return this;
    }
    
    /**
     * Location name should reflect your business's real-world name, as used consistently on your storefront, website, and stationery, and as known to customers. Any additional information, when relevant, can be included in other fields of the resource (for example, `Address`, `Categories`). Don't add unnecessary information to your name (for example, prefer "Google" over "Google Inc. - Mountain View Corporate Headquarters"). Don't include marketing taglines, store codes, special characters, hours or closed/open status, phone numbers, website URLs, service/product information, location/address or directions, or containment information (for example, "Chase ATM in Duane Reade").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationName")
    public String locationName;
    public Location withLocationName(String locationName) {
        this.locationName = locationName;
        return this;
    }
    
    /**
     * Contains a set of booleans that reflect the [state of a Location.](https://support.google.com/business/answer/3480862)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationState")
    public LocationState locationState;
    public Location withLocationState(LocationState locationState) {
        this.locationState = locationState;
        return this;
    }
    
    /**
     * Additional non-user-editable information about the location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public Metadata metadata;
    public Location withMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * More hours for a business's different departments or specific customers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("moreHours")
    public MoreHours[] moreHours;
    public Location withMoreHours(MoreHours[] moreHours) {
        this.moreHours = moreHours;
        return this;
    }
    
    /**
     * Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}` In the context of matches, this field will not be populated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Location withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Information related to the opening state of the business.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openInfo")
    public OpenInfo openInfo;
    public Location withOpenInfo(OpenInfo openInfo) {
        this.openInfo = openInfo;
        return this;
    }
    
    /**
     * Price list information for this location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceLists")
    public PriceList[] priceLists;
    public Location withPriceLists(PriceList[] priceLists) {
        this.priceLists = priceLists;
        return this;
    }
    
    /**
     * A category describing what this business is (not what it does). For a list of valid category IDs, and the mappings to their human-readable names, see [categories.list](https://developers.google.com/my-business/reference/rest/v4/categories/list).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryCategory")
    public Category primaryCategory;
    public Location withPrimaryCategory(Category primaryCategory) {
        this.primaryCategory = primaryCategory;
        return this;
    }
    
    /**
     * A phone number that connects to your individual business location as directly as possible. Use a local phone number instead of a central, call center helpline number whenever possible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryPhone")
    public String primaryPhone;
    public Location withPrimaryPhone(String primaryPhone) {
        this.primaryPhone = primaryPhone;
        return this;
    }
    
    /**
     * All information pertaining to the location's profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profile")
    public Profile profile;
    public Location withProfile(Profile profile) {
        this.profile = profile;
        return this;
    }
    
    /**
     * Represents the time periods that this location is open for business. Holds a collection of TimePeriod instances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regularHours")
    public BusinessHours regularHours;
    public Location withRegularHours(BusinessHours regularHours) {
        this.regularHours = regularHours;
        return this;
    }
    
    /**
     * Information of all parent and children locations related to this one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relationshipData")
    public RelationshipData relationshipData;
    public Location withRelationshipData(RelationshipData relationshipData) {
        this.relationshipData = relationshipData;
        return this;
    }
    
    /**
     * Service area businesses provide their service at the customer's location (for example, a locksmith or plumber).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceArea")
    public ServiceAreaBusiness serviceArea;
    public Location withServiceArea(ServiceAreaBusiness serviceArea) {
        this.serviceArea = serviceArea;
        return this;
    }
    
    /**
     * Represents a set of time periods when a location's operational hours differ from its normal business hours.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specialHours")
    public SpecialHours specialHours;
    public Location withSpecialHours(SpecialHours specialHours) {
        this.specialHours = specialHours;
        return this;
    }
    
    /**
     * External identifier for this location, which must be unique inside a given account. This is a means of associating the location with your own records.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeCode")
    public String storeCode;
    public Location withStoreCode(String storeCode) {
        this.storeCode = storeCode;
        return this;
    }
    
    /**
     * A URL for this business. If possible, use a URL that represents this individual business location instead of a generic website/URL that represents all locations, or the brand.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("websiteUrl")
    public String websiteUrl;
    public Location withWebsiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
        return this;
    }
    
}
