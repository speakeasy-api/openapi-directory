// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUserIDXAmzTargetEnum
type GetUserIDXAmzTargetEnum string

const (
	GetUserIDXAmzTargetEnumAwsIdentityStoreGetUserID GetUserIDXAmzTargetEnum = "AWSIdentityStore.GetUserId"
)

func (e GetUserIDXAmzTargetEnum) ToPointer() *GetUserIDXAmzTargetEnum {
	return &e
}

func (e *GetUserIDXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSIdentityStore.GetUserId":
		*e = GetUserIDXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserIDXAmzTargetEnum: %v", v)
	}
}

type GetUserIDRequest struct {
	GetUserIDRequest  shared.GetUserIDRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetUserIDXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetUserIDResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetUserIDResponse *shared.GetUserIDResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
