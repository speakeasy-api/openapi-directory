// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AddApplicationReferenceDataSourceXAmzTargetEnum
type AddApplicationReferenceDataSourceXAmzTargetEnum string

const (
	AddApplicationReferenceDataSourceXAmzTargetEnumKinesisAnalytics20180523AddApplicationReferenceDataSource AddApplicationReferenceDataSourceXAmzTargetEnum = "KinesisAnalytics_20180523.AddApplicationReferenceDataSource"
)

func (e AddApplicationReferenceDataSourceXAmzTargetEnum) ToPointer() *AddApplicationReferenceDataSourceXAmzTargetEnum {
	return &e
}

func (e *AddApplicationReferenceDataSourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KinesisAnalytics_20180523.AddApplicationReferenceDataSource":
		*e = AddApplicationReferenceDataSourceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AddApplicationReferenceDataSourceXAmzTargetEnum: %v", v)
	}
}

type AddApplicationReferenceDataSourceRequest struct {
	AddApplicationReferenceDataSourceRequest shared.AddApplicationReferenceDataSourceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                            *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                        *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                           *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                 *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                        *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                            *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                        *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                               AddApplicationReferenceDataSourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AddApplicationReferenceDataSourceResponse struct {
	// Success
	AddApplicationReferenceDataSourceResponse *shared.AddApplicationReferenceDataSourceResponse
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
