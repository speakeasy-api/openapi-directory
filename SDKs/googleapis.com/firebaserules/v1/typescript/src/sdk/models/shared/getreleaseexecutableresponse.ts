/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The Rules runtime version of the executable.
 */
export enum GetReleaseExecutableResponseExecutableVersionEnum {
  ReleaseExecutableVersionUnspecified = "RELEASE_EXECUTABLE_VERSION_UNSPECIFIED",
  FirebaseRulesExecutableV1 = "FIREBASE_RULES_EXECUTABLE_V1",
  FirebaseRulesExecutableV2 = "FIREBASE_RULES_EXECUTABLE_V2",
}

/**
 * `Language` used to generate the executable bytes.
 */
export enum GetReleaseExecutableResponseLanguageEnum {
  LanguageUnspecified = "LANGUAGE_UNSPECIFIED",
  FirebaseRules = "FIREBASE_RULES",
  EventFlowTriggers = "EVENT_FLOW_TRIGGERS",
}

/**
 * The response for FirebaseRulesService.GetReleaseExecutable
 */
export class GetReleaseExecutableResponse extends SpeakeasyBase {
  /**
   * Executable view of the `Ruleset` referenced by the `Release`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executable" })
  executable?: string;

  /**
   * The Rules runtime version of the executable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executableVersion" })
  executableVersion?: GetReleaseExecutableResponseExecutableVersionEnum;

  /**
   * `Language` used to generate the executable bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: GetReleaseExecutableResponseLanguageEnum;

  /**
   * `Ruleset` name associated with the `Release` executable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rulesetName" })
  rulesetName?: string;

  /**
   * Optional, indicates the freshness of the result. The response is guaranteed to be the latest within an interval up to the sync_time (inclusive).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syncTime" })
  syncTime?: string;

  /**
   * Timestamp for the most recent `Release.update_time`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
