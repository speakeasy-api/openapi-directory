/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetUsersRequest extends SpeakeasyBase {
  /**
   * Restrict results to the users who have contributed to this assignment.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=assignment",
  })
  assignment?: string;

  /**
   * Restrict results to the users who have submitted a contribution with a public location located within this country.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country",
  })
  country?: string;

  /**
   * Restrict results to the users who a linked profile of this type.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=linkedProfile",
  })
  linkedProfile?: string;

  /**
   * Restrict results to the users who have submitted at least this many contributions.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minimumContributions",
  })
  minimumContributions?: number;

  /**
   * Restrict results to the users who are owned by of this owner.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ownedBy",
  })
  ownedBy?: string;

  /**
   * Limit results to users who have submitted at least one contribution after this date time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=submittedAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  submittedAfter?: Date;

  /**
   * Limit results to users who have submitted at least one contribution before this date time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=submittedBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  submittedBefore?: Date;

  /**
   * Restrict results to the user with this username.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=username",
  })
  username?: string;
}

export class GetUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of users
   */
  @SpeakeasyMetadata({ elemType: shared.User })
  users?: shared.User[];
}
