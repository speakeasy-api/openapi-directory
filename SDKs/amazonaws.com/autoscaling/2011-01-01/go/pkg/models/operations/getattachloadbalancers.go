// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAttachLoadBalancersActionEnum
type GETAttachLoadBalancersActionEnum string

const (
	GETAttachLoadBalancersActionEnumAttachLoadBalancers GETAttachLoadBalancersActionEnum = "AttachLoadBalancers"
)

func (e *GETAttachLoadBalancersActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AttachLoadBalancers":
		*e = GETAttachLoadBalancersActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAttachLoadBalancersActionEnum: %s", s)
	}
}

// GETAttachLoadBalancersVersionEnum
type GETAttachLoadBalancersVersionEnum string

const (
	GETAttachLoadBalancersVersionEnumTwoThousandAndEleven0101 GETAttachLoadBalancersVersionEnum = "2011-01-01"
)

func (e *GETAttachLoadBalancersVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETAttachLoadBalancersVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAttachLoadBalancersVersionEnum: %s", s)
	}
}

type GETAttachLoadBalancersQueryParams struct {
	Action GETAttachLoadBalancersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The names of the load balancers. You can specify up to 10 load balancers.
	LoadBalancerNames []string                          `queryParam:"style=form,explode=true,name=LoadBalancerNames"`
	Version           GETAttachLoadBalancersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETAttachLoadBalancersHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAttachLoadBalancersRequest struct {
	QueryParams GETAttachLoadBalancersQueryParams
	Headers     GETAttachLoadBalancersHeaders
}

type GETAttachLoadBalancersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
