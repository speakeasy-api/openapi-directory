/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PatchSpacesIdRequestBodyLogo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Content64Encoded" })
  content64Encoded?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}

/**
 * Space to modify (except private)
 */
export class PatchSpacesIdRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Logo" })
  @Type(() => PatchSpacesIdRequestBodyLogo)
  logo?: PatchSpacesIdRequestBodyLogo;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateSpaceId" })
  templateSpaceId?: string;
}

export class PatchSpacesIdRequest extends SpeakeasyBase {
  /**
   * Space to modify (except private)
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchSpacesIdRequestBody;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class PatchSpacesIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
