/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * User - OK
 */
public class User {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("administrator")
    public Boolean administrator;

    public User withAdministrator(Boolean administrator) {
        this.administrator = administrator;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public java.util.Map<String, Object> attributes;

    public User withAttributes(java.util.Map<String, Object> attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coordinateFormat")
    public String coordinateFormat;

    public User withCoordinateFormat(String coordinateFormat) {
        this.coordinateFormat = coordinateFormat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceLimit")
    public Long deviceLimit;

    public User withDeviceLimit(Long deviceLimit) {
        this.deviceLimit = deviceLimit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceReadonly")
    public Boolean deviceReadonly;

    public User withDeviceReadonly(Boolean deviceReadonly) {
        this.deviceReadonly = deviceReadonly;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled")
    public Boolean disabled;

    public User withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public User withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expirationTime")
    public OffsetDateTime expirationTime;

    public User withExpirationTime(OffsetDateTime expirationTime) {
        this.expirationTime = expirationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public User withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latitude")
    public Double latitude;

    public User withLatitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limitCommands")
    public Boolean limitCommands;

    public User withLimitCommands(Boolean limitCommands) {
        this.limitCommands = limitCommands;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longitude")
    public Double longitude;

    public User withLongitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("map")
    public String map;

    public User withMap(String map) {
        this.map = map;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public User withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;

    public User withPassword(String password) {
        this.password = password;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;

    public User withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("poiLayer")
    public String poiLayer;

    public User withPoiLayer(String poiLayer) {
        this.poiLayer = poiLayer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readonly")
    public Boolean readonly;

    public User withReadonly(Boolean readonly) {
        this.readonly = readonly;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("twelveHourFormat")
    public Boolean twelveHourFormat;

    public User withTwelveHourFormat(Boolean twelveHourFormat) {
        this.twelveHourFormat = twelveHourFormat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userLimit")
    public Long userLimit;

    public User withUserLimit(Long userLimit) {
        this.userLimit = userLimit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zoom")
    public Long zoom;

    public User withZoom(Long zoom) {
        this.zoom = zoom;
        return this;
    }
    
    public User(){}
}
