// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OrganizationConfigRuleTriggerTypeEnum string

const (
	OrganizationConfigRuleTriggerTypeEnumConfigurationItemChangeNotification          OrganizationConfigRuleTriggerTypeEnum = "ConfigurationItemChangeNotification"
	OrganizationConfigRuleTriggerTypeEnumOversizedConfigurationItemChangeNotification OrganizationConfigRuleTriggerTypeEnum = "OversizedConfigurationItemChangeNotification"
	OrganizationConfigRuleTriggerTypeEnumScheduledNotification                        OrganizationConfigRuleTriggerTypeEnum = "ScheduledNotification"
)

func (e OrganizationConfigRuleTriggerTypeEnum) ToPointer() *OrganizationConfigRuleTriggerTypeEnum {
	return &e
}

func (e *OrganizationConfigRuleTriggerTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ConfigurationItemChangeNotification":
		fallthrough
	case "OversizedConfigurationItemChangeNotification":
		fallthrough
	case "ScheduledNotification":
		*e = OrganizationConfigRuleTriggerTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationConfigRuleTriggerTypeEnum: %v", v)
	}
}
