/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DirectionEnum } from "./directionenum";
import { QueryFilters } from "./queryfilters";
import { Expose, Type } from "class-transformer";

export class QueryLineageRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Direction" })
  direction?: DirectionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Filters" })
  @Type(() => QueryFilters)
  filters?: QueryFilters;

  @SpeakeasyMetadata()
  @Expose({ name: "IncludeEdges" })
  includeEdges?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxDepth" })
  maxDepth?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartArns" })
  startArns?: string[];
}
