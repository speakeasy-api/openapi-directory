/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScoreModification - Edit the score metadata
 */
public class ScoreModification {
    /**
     * The arranger of the score
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arranger")
    public String arranger;
    public ScoreModification withArranger(String arranger) {
        this.arranger = arranger;
        return this;
    }
    
    /**
     * The composer of the score
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("composer")
    public String composer;
    public ScoreModification withComposer(String composer) {
        this.composer = composer;
        return this;
    }
    
    /**
     * The type of creation (an orginal, an arrangement)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationType")
    public ScoreCreationTypeEnum creationType;
    public ScoreModification withCreationType(ScoreCreationTypeEnum creationType) {
        this.creationType = creationType;
        return this;
    }
    
    /**
     * Description of the creation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ScoreModification withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * License of the creation. Read more about the Creative Commons licenses on https://creativecommons.org/licenses/
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("license")
    public ScoreLicenseEnum license;
    public ScoreModification withLicense(ScoreLicenseEnum license) {
        this.license = license;
        return this;
    }
    
    /**
     * The rights info written on the score
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenseText")
    public String licenseText;
    public ScoreModification withLicenseText(String licenseText) {
        this.licenseText = licenseText;
        return this;
    }
    
    /**
     * The lyricist of the score
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lyricist")
    public String lyricist;
    public ScoreModification withLyricist(String lyricist) {
        this.lyricist = lyricist;
        return this;
    }
    
    /**
     * The score main privacy mode.
     * 
     * - `public`: The score is public on the Internet. This one can be accessible at the url `https://flat.io/score/{score}` and can be modified and administred by specified collaborators users.
     * - `private`: The score is private and can be only accessed, modified and administred by specified collaborators users.
     * - `privateLink`: The score is private but can be accessed using a private link `htmlUrl` or the private key in the property `sharingKey`.
     * - `organizationPublic`: _Available only with [Flat for Education](https://flat.io/edu)._ The score is public in the organization: users of the same organization can access to this one. The score can be modified and administred by specified collaborators users.
     * 
     * The score can also be individually shared to a set of users or groups using the different collaborators API methods.
     * 
     * When a file is synchronized from an external source (e.g. Google Drive) and the sharing options are changed on the source, Flat will chose the best privacy mode for the file.
     * 
     * When using a [Flat for Education](https://flat.io/edu) account, some of the modes may not be available if disabled by an administrator of the organization (e.g. by default the `public` mode is not available).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privacy")
    public ScorePrivacyEnum privacy;
    public ScoreModification withPrivacy(ScorePrivacyEnum privacy) {
        this.privacy = privacy;
        return this;
    }
    
    /**
     * When using the `privacy` mode `privateLink`, this property can be used to set a custom sharing key, otherwise a new key will be generated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sharingKey")
    public String sharingKey;
    public ScoreModification withSharingKey(String sharingKey) {
        this.sharingKey = sharingKey;
        return this;
    }
    
    /**
     * The subtitle of the score
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtitle")
    public String subtitle;
    public ScoreModification withSubtitle(String subtitle) {
        this.subtitle = subtitle;
        return this;
    }
    
    /**
     * Tags describing the score
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;
    public ScoreModification withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The title of the score
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public ScoreModification withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
