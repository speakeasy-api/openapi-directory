/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AnalyticsEventPropertiesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class AnalyticsEventPropertiesRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The id of the event.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=event_name",
  })
  eventName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

/**
 * The status code return by the API. It can be 400 or 403 or 500.
 */
export enum AnalyticsEventPropertiesDefaultApplicationJSONErrorCodeEnum {
  FourHundred = "400",
  FourHundredAndThree = "403",
  FiveHundred = "500",
}

export class AnalyticsEventPropertiesDefaultApplicationJSONError extends SpeakeasyBase {
  /**
   * The status code return by the API. It can be 400 or 403 or 500.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: AnalyticsEventPropertiesDefaultApplicationJSONErrorCodeEnum;

  /**
   * The reason for the request failed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

/**
 * Error
 */
export class AnalyticsEventPropertiesDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => AnalyticsEventPropertiesDefaultApplicationJSONError)
  error?: AnalyticsEventPropertiesDefaultApplicationJSONError;
}

/**
 * Event properties during the time range.
 */
export class AnalyticsEventProperties200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "event_properties" })
  eventProperties?: string[];
}

export class AnalyticsEventPropertiesResponse extends SpeakeasyBase {
  /**
   * Event properties.
   */
  @SpeakeasyMetadata()
  analyticsEventProperties200ApplicationJSONObject?: AnalyticsEventProperties200ApplicationJSON;

  /**
   * Error code with reason.
   */
  @SpeakeasyMetadata()
  analyticsEventPropertiesDefaultApplicationJSONObject?: AnalyticsEventPropertiesDefaultApplicationJSON;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
