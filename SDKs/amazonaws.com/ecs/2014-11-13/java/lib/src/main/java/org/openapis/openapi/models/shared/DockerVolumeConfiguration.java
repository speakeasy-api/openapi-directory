/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DockerVolumeConfiguration - This parameter is specified when you're using Docker volumes. Docker volumes are only supported when you're using the EC2 launch type. Windows containers only support the use of the &lt;code&gt;local&lt;/code&gt; driver. To use bind mounts, specify a &lt;code&gt;host&lt;/code&gt; instead.
 */
public class DockerVolumeConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoprovision")
    public Boolean autoprovision;

    public DockerVolumeConfiguration withAutoprovision(Boolean autoprovision) {
        this.autoprovision = autoprovision;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("driver")
    public String driver;

    public DockerVolumeConfiguration withDriver(String driver) {
        this.driver = driver;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("driverOpts")
    public java.util.Map<String, String> driverOpts;

    public DockerVolumeConfiguration withDriverOpts(java.util.Map<String, String> driverOpts) {
        this.driverOpts = driverOpts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public DockerVolumeConfiguration withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public ScopeEnum scope;

    public DockerVolumeConfiguration withScope(ScopeEnum scope) {
        this.scope = scope;
        return this;
    }
    
    public DockerVolumeConfiguration(){}
}
