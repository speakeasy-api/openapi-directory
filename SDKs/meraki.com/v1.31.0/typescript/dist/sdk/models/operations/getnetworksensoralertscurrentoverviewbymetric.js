"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNetworkSensorAlertsCurrentOverviewByMetricResponse = exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON = exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum = exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts = exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise = exports.GetNetworkSensorAlertsCurrentOverviewByMetricRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetNetworkSensorAlertsCurrentOverviewByMetricRequest = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsCurrentOverviewByMetricRequest, _super);
    function GetNetworkSensorAlertsCurrentOverviewByMetricRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], GetNetworkSensorAlertsCurrentOverviewByMetricRequest.prototype, "networkId", void 0);
    return GetNetworkSensorAlertsCurrentOverviewByMetricRequest;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsCurrentOverviewByMetricRequest = GetNetworkSensorAlertsCurrentOverviewByMetricRequest;
/**
 * Object containing the number of sensors that are currently alerting due to noise readings
 */
var GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise, _super);
    function GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ambient" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise.prototype, "ambient", void 0);
    return GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise = GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise;
/**
 * Counts of currently alerting sensors, aggregated by alerting metric
 */
var GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts, _super);
    function GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "door" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts.prototype, "door", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "humidity" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts.prototype, "humidity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "indoorAirQuality" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts.prototype, "indoorAirQuality", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "noise" }),
        (0, class_transformer_1.Type)(function () {
            return GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise;
        }),
        __metadata("design:type", GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCountsNoise)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts.prototype, "noise", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pm25" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts.prototype, "pm25", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "temperature" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts.prototype, "temperature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tvoc" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts.prototype, "tvoc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "water" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts.prototype, "water", void 0);
    return GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts = GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts;
var GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum;
(function (GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum) {
    GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum["Door"] = "door";
    GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum["Humidity"] = "humidity";
    GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum["IndoorAirQuality"] = "indoorAirQuality";
    GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum["Noise"] = "noise";
    GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum["Pm25"] = "pm25";
    GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum["Temperature"] = "temperature";
    GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum["Tvoc"] = "tvoc";
    GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum["Water"] = "water";
})(GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum = exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum || (exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONSupportedMetricsEnum = {}));
/**
 * Successful operation
 */
var GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON, _super);
    function GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "counts" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts; }),
        __metadata("design:type", GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONCounts)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON.prototype, "counts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportedMetrics" }),
        __metadata("design:type", Array)
    ], GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON.prototype, "supportedMetrics", void 0);
    return GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON = GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON;
var GetNetworkSensorAlertsCurrentOverviewByMetricResponse = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsCurrentOverviewByMetricResponse, _super);
    function GetNetworkSensorAlertsCurrentOverviewByMetricResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetNetworkSensorAlertsCurrentOverviewByMetricResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsCurrentOverviewByMetricResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetNetworkSensorAlertsCurrentOverviewByMetricResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSON)
    ], GetNetworkSensorAlertsCurrentOverviewByMetricResponse.prototype, "getNetworkSensorAlertsCurrentOverviewByMetric200ApplicationJSONObject", void 0);
    return GetNetworkSensorAlertsCurrentOverviewByMetricResponse;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsCurrentOverviewByMetricResponse = GetNetworkSensorAlertsCurrentOverviewByMetricResponse;
