"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ConfigManagementConfigSyncDeploymentStateAdmissionWebhookEnum(str, Enum):
    r"""Deployment state of admission-webhook"""
    DEPLOYMENT_STATE_UNSPECIFIED = 'DEPLOYMENT_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLED = 'INSTALLED'
    ERROR = 'ERROR'

class ConfigManagementConfigSyncDeploymentStateGitSyncEnum(str, Enum):
    r"""Deployment state of the git-sync pod"""
    DEPLOYMENT_STATE_UNSPECIFIED = 'DEPLOYMENT_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLED = 'INSTALLED'
    ERROR = 'ERROR'

class ConfigManagementConfigSyncDeploymentStateImporterEnum(str, Enum):
    r"""Deployment state of the importer pod"""
    DEPLOYMENT_STATE_UNSPECIFIED = 'DEPLOYMENT_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLED = 'INSTALLED'
    ERROR = 'ERROR'

class ConfigManagementConfigSyncDeploymentStateMonitorEnum(str, Enum):
    r"""Deployment state of the monitor pod"""
    DEPLOYMENT_STATE_UNSPECIFIED = 'DEPLOYMENT_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLED = 'INSTALLED'
    ERROR = 'ERROR'

class ConfigManagementConfigSyncDeploymentStateReconcilerManagerEnum(str, Enum):
    r"""Deployment state of reconciler-manager pod"""
    DEPLOYMENT_STATE_UNSPECIFIED = 'DEPLOYMENT_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLED = 'INSTALLED'
    ERROR = 'ERROR'

class ConfigManagementConfigSyncDeploymentStateRootReconcilerEnum(str, Enum):
    r"""Deployment state of root-reconciler"""
    DEPLOYMENT_STATE_UNSPECIFIED = 'DEPLOYMENT_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLED = 'INSTALLED'
    ERROR = 'ERROR'

class ConfigManagementConfigSyncDeploymentStateSyncerEnum(str, Enum):
    r"""Deployment state of the syncer pod"""
    DEPLOYMENT_STATE_UNSPECIFIED = 'DEPLOYMENT_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLED = 'INSTALLED'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfigManagementConfigSyncDeploymentState:
    r"""The state of ConfigSync's deployment on a cluster"""
    
    admission_webhook: Optional[ConfigManagementConfigSyncDeploymentStateAdmissionWebhookEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('admissionWebhook'), 'exclude': lambda f: f is None }})
    r"""Deployment state of admission-webhook"""  
    git_sync: Optional[ConfigManagementConfigSyncDeploymentStateGitSyncEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gitSync'), 'exclude': lambda f: f is None }})
    r"""Deployment state of the git-sync pod"""  
    importer: Optional[ConfigManagementConfigSyncDeploymentStateImporterEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('importer'), 'exclude': lambda f: f is None }})
    r"""Deployment state of the importer pod"""  
    monitor: Optional[ConfigManagementConfigSyncDeploymentStateMonitorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monitor'), 'exclude': lambda f: f is None }})
    r"""Deployment state of the monitor pod"""  
    reconciler_manager: Optional[ConfigManagementConfigSyncDeploymentStateReconcilerManagerEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reconcilerManager'), 'exclude': lambda f: f is None }})
    r"""Deployment state of reconciler-manager pod"""  
    root_reconciler: Optional[ConfigManagementConfigSyncDeploymentStateRootReconcilerEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rootReconciler'), 'exclude': lambda f: f is None }})
    r"""Deployment state of root-reconciler"""  
    syncer: Optional[ConfigManagementConfigSyncDeploymentStateSyncerEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('syncer'), 'exclude': lambda f: f is None }})
    r"""Deployment state of the syncer pod"""  
    