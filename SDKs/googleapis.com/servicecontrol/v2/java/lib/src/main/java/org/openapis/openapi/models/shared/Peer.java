/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Peer - This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.
 */
public class Peer {
    /**
     * The IP address of the peer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip")
    public String ip;

    public Peer withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    /**
     * The labels associated with the peer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Peer withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The network port of the peer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public String port;

    public Peer withPort(String port) {
        this.port = port;
        return this;
    }
    
    /**
     * The identity of this peer. Similar to `Request.auth.principal`, but relative to the peer instead of the request. For example, the identity associated with a load balancer that forwarded the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principal")
    public String principal;

    public Peer withPrincipal(String principal) {
        this.principal = principal;
        return this;
    }
    
    /**
     * The CLDR country/region code associated with the above IP address. If the IP address is private, the `region_code` should reflect the physical location where this peer is running.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionCode")
    public String regionCode;

    public Peer withRegionCode(String regionCode) {
        this.regionCode = regionCode;
        return this;
    }
    
    public Peer(){}
}
