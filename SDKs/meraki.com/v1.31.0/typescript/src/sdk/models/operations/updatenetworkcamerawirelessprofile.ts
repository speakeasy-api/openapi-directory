/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
 */
export class UpdateNetworkCameraWirelessProfileRequestBodyIdentity extends SpeakeasyBase {
  /**
   * The password of the identity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * The username of the identity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

/**
 * The auth mode of the SSID. It can be set to ('psk', '8021x-radius').
 */
export enum UpdateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum {
  EightThousandAndTwentyOnexRadius = "8021x-radius",
  Psk = "psk",
}

/**
 * The details of the SSID config.
 */
export class UpdateNetworkCameraWirelessProfileRequestBodySsid extends SpeakeasyBase {
  /**
   * The auth mode of the SSID. It can be set to ('psk', '8021x-radius').
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authMode" })
  authMode?: UpdateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum;

  /**
   * The encryption mode of the SSID. It can be set to ('wpa', 'wpa-eap'). With 'wpa' mode, the authMode should be 'psk' and with 'wpa-eap' the authMode should be '8021x-radius'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionMode" })
  encryptionMode?: string;

  /**
   * The name of the SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The pre-shared key of the SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "psk" })
  psk?: string;
}

export class UpdateNetworkCameraWirelessProfileRequestBody extends SpeakeasyBase {
  /**
   * The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identity" })
  @Type(() => UpdateNetworkCameraWirelessProfileRequestBodyIdentity)
  identity?: UpdateNetworkCameraWirelessProfileRequestBodyIdentity;

  /**
   * The name of the camera wireless profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The details of the SSID config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ssid" })
  @Type(() => UpdateNetworkCameraWirelessProfileRequestBodySsid)
  ssid?: UpdateNetworkCameraWirelessProfileRequestBodySsid;
}

export class UpdateNetworkCameraWirelessProfileRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkCameraWirelessProfileRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=wirelessProfileId",
  })
  wirelessProfileId: string;
}

export class UpdateNetworkCameraWirelessProfileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkCameraWirelessProfile200ApplicationJSONObject?: Record<
    string,
    any
  >;
}
