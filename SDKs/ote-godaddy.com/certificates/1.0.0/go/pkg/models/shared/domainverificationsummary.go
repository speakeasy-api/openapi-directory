// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DomainVerificationSummaryStatusEnum - Domain verification status:
//   - `AWAITING` - Verification pending customer input
//   - `INVALID` - SAN connected to a cancelled request
//   - `COMPLETED` - Verification completed
//   - `FAILED_VERIFICATION` - Verification failed
//   - `PENDING_POSSIBLE_FRAUD` - Flagged for a system level fraud review
//   - `VERIFIED_POSSIBLE_FRAUD` - Fraud detection reviewed but verified
//   - `DROPPED` - SAN dropped from request
//   - `REVOKED_CERT` - Certificate revoked
//   - `DROPPED_GOOGLE_SAFE_BROWSING` - SAN dropped from request due to Google Safe Browsing check
//   - `DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION` - SAN dropped from request due to Certificate Authorization Authority DNS record check
type DomainVerificationSummaryStatusEnum string

const (
	DomainVerificationSummaryStatusEnumCompleted                                DomainVerificationSummaryStatusEnum = "COMPLETED"
	DomainVerificationSummaryStatusEnumFailedVerification                       DomainVerificationSummaryStatusEnum = "FAILED_VERIFICATION"
	DomainVerificationSummaryStatusEnumVerifiedPossibleFraud                    DomainVerificationSummaryStatusEnum = "VERIFIED_POSSIBLE_FRAUD"
	DomainVerificationSummaryStatusEnumDropped                                  DomainVerificationSummaryStatusEnum = "DROPPED"
	DomainVerificationSummaryStatusEnumDroppedCertificateAuthorityAuthorization DomainVerificationSummaryStatusEnum = "DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION"
	DomainVerificationSummaryStatusEnumDroppedGoogleSafeBrowsing                DomainVerificationSummaryStatusEnum = "DROPPED_GOOGLE_SAFE_BROWSING"
	DomainVerificationSummaryStatusEnumInvalid                                  DomainVerificationSummaryStatusEnum = "INVALID"
	DomainVerificationSummaryStatusEnumAwaiting                                 DomainVerificationSummaryStatusEnum = "AWAITING"
	DomainVerificationSummaryStatusEnumPendingPossibleFraud                     DomainVerificationSummaryStatusEnum = "PENDING_POSSIBLE_FRAUD"
	DomainVerificationSummaryStatusEnumRevokedCertificate                       DomainVerificationSummaryStatusEnum = "REVOKED_CERTIFICATE"
)

func (e DomainVerificationSummaryStatusEnum) ToPointer() *DomainVerificationSummaryStatusEnum {
	return &e
}

func (e *DomainVerificationSummaryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPLETED":
		fallthrough
	case "FAILED_VERIFICATION":
		fallthrough
	case "VERIFIED_POSSIBLE_FRAUD":
		fallthrough
	case "DROPPED":
		fallthrough
	case "DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION":
		fallthrough
	case "DROPPED_GOOGLE_SAFE_BROWSING":
		fallthrough
	case "INVALID":
		fallthrough
	case "AWAITING":
		fallthrough
	case "PENDING_POSSIBLE_FRAUD":
		fallthrough
	case "REVOKED_CERTIFICATE":
		*e = DomainVerificationSummaryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DomainVerificationSummaryStatusEnum: %v", v)
	}
}

// DomainVerificationSummaryTypeEnum - Domain verification type:
//   - `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN` - Domain verified using domain control verification email sent to admin@<your.domain.com>
//   - `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR` - Domain verified using domain control verification email sent to administrator@<your.domain.com>
//   - `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER` - Domain verified using domain control verification email sent to hostmaster@<your.domain.com>
//   - `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER` - Domain verified using domain control verification email sent to postmaster@<your.domain.com>
//   - `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER` - Domain verified using domain control verification email sent to webmaster@<your.domain.com>
//   - `DOMAIN_ACCESS_EMAIL` - Domain verified using a domain access email
//   - `DOMAIN_ACCESS_LETTER` - Customer completed a domain access letter which was used for domain verification
//   - `DOMAIN_CONTROL_EMAIL` - Domain verified using HTML file or DNS zone file text value
//   - `DOMAIN_ZONE_CONTROL` - DNS zone file containing a pre-generated text value used for domain verification
//   - `MANUAL_DOMAIN_ACCESS_EMAIL` - DAE sent to an email address manually entered by a rep
//   - `PREVIOUS_DOMAIN_ACCESS_EMAIL` - Customers domain access email for a prior certificate request was used for domain verification
//   - `REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER` - Representative reviewed a customer provided domain access letter and verified domain
//   - `REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL` - Representative verified domain using a manual domain zone control check
//   - `REGISTRATION_AUTHORITY_OVERRIDE` - Representative verified domain using alternative methods
//   - `REGISTRATION_AUTHORITY_WEBSITE_CONTROL` - Representative verified domain using a manual website control check
//   - `CUSTOMER_OWNED` - Validated customer account information used for domain control verification
//   - `WEBSITE_CONTROL` - HTML file in root website directory containing pre-generated value used for domain control verification
type DomainVerificationSummaryTypeEnum string

const (
	DomainVerificationSummaryTypeEnumDomainControlEmail                         DomainVerificationSummaryTypeEnum = "DOMAIN_CONTROL_EMAIL"
	DomainVerificationSummaryTypeEnumAutoGeneratedDomainAccessEmailAdmin        DomainVerificationSummaryTypeEnum = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN"
	DomainVerificationSummaryTypeEnumAutoGeneratedDomainAccessEmailAdminstrator DomainVerificationSummaryTypeEnum = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR"
	DomainVerificationSummaryTypeEnumAutoGeneratedDomainAccessEmailHostMaster   DomainVerificationSummaryTypeEnum = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER"
	DomainVerificationSummaryTypeEnumAutoGeneratedDomainAccessEmailPostMaster   DomainVerificationSummaryTypeEnum = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER"
	DomainVerificationSummaryTypeEnumAutoGeneratedDomainAccessEmailWebMaster    DomainVerificationSummaryTypeEnum = "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER"
	DomainVerificationSummaryTypeEnumDomainAccessEmail                          DomainVerificationSummaryTypeEnum = "DOMAIN_ACCESS_EMAIL"
	DomainVerificationSummaryTypeEnumDomainAccessLetter                         DomainVerificationSummaryTypeEnum = "DOMAIN_ACCESS_LETTER"
	DomainVerificationSummaryTypeEnumDomainZoneControl                          DomainVerificationSummaryTypeEnum = "DOMAIN_ZONE_CONTROL"
	DomainVerificationSummaryTypeEnumManualDomainAccessEmail                    DomainVerificationSummaryTypeEnum = "MANUAL_DOMAIN_ACCESS_EMAIL"
	DomainVerificationSummaryTypeEnumPreviousDomainAccessEmail                  DomainVerificationSummaryTypeEnum = "PREVIOUS_DOMAIN_ACCESS_EMAIL"
	DomainVerificationSummaryTypeEnumRegistrationAuthorityDomainAccessLetter    DomainVerificationSummaryTypeEnum = "REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER"
	DomainVerificationSummaryTypeEnumRegistrationAuthorityDomainZoneControl     DomainVerificationSummaryTypeEnum = "REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL"
	DomainVerificationSummaryTypeEnumRegistrationAuthorityOverride              DomainVerificationSummaryTypeEnum = "REGISTRATION_AUTHORITY_OVERRIDE"
	DomainVerificationSummaryTypeEnumRegistrationAuthorityWebsiteControl        DomainVerificationSummaryTypeEnum = "REGISTRATION_AUTHORITY_WEBSITE_CONTROL"
	DomainVerificationSummaryTypeEnumCustomerOwned                              DomainVerificationSummaryTypeEnum = "CUSTOMER_OWNED"
	DomainVerificationSummaryTypeEnumWebsiteControl                             DomainVerificationSummaryTypeEnum = "WEBSITE_CONTROL"
)

func (e DomainVerificationSummaryTypeEnum) ToPointer() *DomainVerificationSummaryTypeEnum {
	return &e
}

func (e *DomainVerificationSummaryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DOMAIN_CONTROL_EMAIL":
		fallthrough
	case "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN":
		fallthrough
	case "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR":
		fallthrough
	case "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER":
		fallthrough
	case "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER":
		fallthrough
	case "AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER":
		fallthrough
	case "DOMAIN_ACCESS_EMAIL":
		fallthrough
	case "DOMAIN_ACCESS_LETTER":
		fallthrough
	case "DOMAIN_ZONE_CONTROL":
		fallthrough
	case "MANUAL_DOMAIN_ACCESS_EMAIL":
		fallthrough
	case "PREVIOUS_DOMAIN_ACCESS_EMAIL":
		fallthrough
	case "REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER":
		fallthrough
	case "REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL":
		fallthrough
	case "REGISTRATION_AUTHORITY_OVERRIDE":
		fallthrough
	case "REGISTRATION_AUTHORITY_WEBSITE_CONTROL":
		fallthrough
	case "CUSTOMER_OWNED":
		fallthrough
	case "WEBSITE_CONTROL":
		*e = DomainVerificationSummaryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DomainVerificationSummaryTypeEnum: %v", v)
	}
}

// DomainVerificationSummaryUsageEnum - Type of domain name used for domain verification
type DomainVerificationSummaryUsageEnum string

const (
	DomainVerificationSummaryUsageEnumCommonName             DomainVerificationSummaryUsageEnum = "COMMON_NAME"
	DomainVerificationSummaryUsageEnumSubjectAlternativeName DomainVerificationSummaryUsageEnum = "SUBJECT_ALTERNATIVE_NAME"
)

func (e DomainVerificationSummaryUsageEnum) ToPointer() *DomainVerificationSummaryUsageEnum {
	return &e
}

func (e *DomainVerificationSummaryUsageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMMON_NAME":
		fallthrough
	case "SUBJECT_ALTERNATIVE_NAME":
		*e = DomainVerificationSummaryUsageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DomainVerificationSummaryUsageEnum: %v", v)
	}
}

type DomainVerificationSummary struct {
	// Timestamp indicating when the domain verification process was started
	CreatedAt string `json:"createdAt"`
	// DCE verification type token (if DCE verification type).
	DceToken *string `json:"dceToken,omitempty"`
	// Domain name
	Domain string `json:"domain"`
	// A unique identifier that can be leveraged for retrieving domain verification related information. Primarily used when troubleshooting a request
	DomainEntityID int64 `json:"domainEntityId"`
	// Timestamp indicating when the domain verification process was last updated
	ModifiedAt string `json:"modifiedAt"`
	// Domain verification status:
	//   * `AWAITING` - Verification pending customer input
	//   * `INVALID` - SAN connected to a cancelled request
	//   * `COMPLETED` - Verification completed
	//   * `FAILED_VERIFICATION` - Verification failed
	//   * `PENDING_POSSIBLE_FRAUD` - Flagged for a system level fraud review
	//   * `VERIFIED_POSSIBLE_FRAUD` - Fraud detection reviewed but verified
	//   * `DROPPED` - SAN dropped from request
	//   * `REVOKED_CERT` - Certificate revoked
	//   * `DROPPED_GOOGLE_SAFE_BROWSING` - SAN dropped from request due to Google Safe Browsing check
	//   * `DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION` - SAN dropped from request due to Certificate Authorization Authority DNS record check
	//
	Status DomainVerificationSummaryStatusEnum `json:"status"`
	// Domain verification type:
	//   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN` - Domain verified using domain control verification email sent to admin@<your.domain.com>
	//   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR` - Domain verified using domain control verification email sent to administrator@<your.domain.com>
	//   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER` - Domain verified using domain control verification email sent to hostmaster@<your.domain.com>
	//   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER` - Domain verified using domain control verification email sent to postmaster@<your.domain.com>
	//   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER` - Domain verified using domain control verification email sent to webmaster@<your.domain.com>
	//   * `DOMAIN_ACCESS_EMAIL` - Domain verified using a domain access email
	//   * `DOMAIN_ACCESS_LETTER` - Customer completed a domain access letter which was used for domain verification
	//   * `DOMAIN_CONTROL_EMAIL` - Domain verified using HTML file or DNS zone file text value
	//   * `DOMAIN_ZONE_CONTROL` - DNS zone file containing a pre-generated text value used for domain verification
	//   * `MANUAL_DOMAIN_ACCESS_EMAIL` - DAE sent to an email address manually entered by a rep
	//   * `PREVIOUS_DOMAIN_ACCESS_EMAIL` - Customers domain access email for a prior certificate request was used for domain verification
	//   * `REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER` - Representative reviewed a customer provided domain access letter and verified domain
	//   * `REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL` - Representative verified domain using a manual domain zone control check
	//   * `REGISTRATION_AUTHORITY_OVERRIDE` - Representative verified domain using alternative methods
	//   * `REGISTRATION_AUTHORITY_WEBSITE_CONTROL` - Representative verified domain using a manual website control check
	//   * `CUSTOMER_OWNED` - Validated customer account information used for domain control verification
	//   * `WEBSITE_CONTROL` - HTML file in root website directory containing pre-generated value used for domain control verification
	//
	Type DomainVerificationSummaryTypeEnum `json:"type"`
	// Type of domain name used for domain verification
	Usage DomainVerificationSummaryUsageEnum `json:"usage"`
}
