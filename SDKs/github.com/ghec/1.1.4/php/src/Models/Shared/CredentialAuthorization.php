<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CredentialAuthorization - Credential Authorization
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CredentialAuthorization
{
    /**
     * The expiry for the token. This will only be present when the credential is a token.
     * 
     * @var ?\DateTime $authorizedCredentialExpiresAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorized_credential_expires_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $authorizedCredentialExpiresAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('authorized_credential_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $authorizedCredentialId;
    
    /**
     * The note given to the token. This will only be present when the credential is a token.
     * 
     * @var ?string $authorizedCredentialNote
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorized_credential_note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authorizedCredentialNote = null;
    
    /**
     * The title given to the ssh key. This will only be present when the credential is an ssh key.
     * 
     * @var ?string $authorizedCredentialTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorized_credential_title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authorizedCredentialTitle = null;
    
    /**
     * Date when the credential was last accessed. May be null if it was never accessed
     * 
     * @var \DateTime $credentialAccessedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('credential_accessed_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $credentialAccessedAt;
    
    /**
     * Date when the credential was authorized for use.
     * 
     * @var \DateTime $credentialAuthorizedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('credential_authorized_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $credentialAuthorizedAt;
    
    /**
     * Unique identifier for the credential.
     * 
     * @var int $credentialId
     */
	#[\JMS\Serializer\Annotation\SerializedName('credential_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $credentialId;
    
    /**
     * Human-readable description of the credential type.
     * 
     * @var string $credentialType
     */
	#[\JMS\Serializer\Annotation\SerializedName('credential_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $credentialType;
    
    /**
     * Unique string to distinguish the credential. Only included in responses with credential_type of SSH Key.
     * 
     * @var ?string $fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
    /**
     * User login that owns the underlying credential.
     * 
     * @var string $login
     */
	#[\JMS\Serializer\Annotation\SerializedName('login')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $login;
    
    /**
     * List of oauth scopes the token has been granted.
     * 
     * @var ?array<string> $scopes
     */
	#[\JMS\Serializer\Annotation\SerializedName('scopes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scopes = null;
    
    /**
     * Last eight characters of the credential. Only included in responses with credential_type of personal access token.
     * 
     * @var ?string $tokenLastEight
     */
	#[\JMS\Serializer\Annotation\SerializedName('token_last_eight')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tokenLastEight = null;
    
	public function __construct()
	{
		$this->authorizedCredentialExpiresAt = null;
		$this->authorizedCredentialId = 0;
		$this->authorizedCredentialNote = null;
		$this->authorizedCredentialTitle = null;
		$this->credentialAccessedAt = new \DateTime();
		$this->credentialAuthorizedAt = new \DateTime();
		$this->credentialId = 0;
		$this->credentialType = "";
		$this->fingerprint = null;
		$this->login = "";
		$this->scopes = null;
		$this->tokenLastEight = null;
	}
}
