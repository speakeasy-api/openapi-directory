/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Column } from "./column";
import { StorageDescriptor } from "./storagedescriptor";
import { TableIdentifier } from "./tableidentifier";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a collection of related data organized in columns and rows.
 */
export class Table extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CatalogId" })
  catalogId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseName" })
  databaseName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsRegisteredWithLakeFormation" })
  isRegisteredWithLakeFormation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LastAccessTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAccessTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastAnalyzedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAnalyzedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Parameters" })
  parameters?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: Column })
  @Expose({ name: "PartitionKeys" })
  @Type(() => Column)
  partitionKeys?: Column[];

  @SpeakeasyMetadata()
  @Expose({ name: "Retention" })
  retention?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StorageDescriptor" })
  @Type(() => StorageDescriptor)
  storageDescriptor?: StorageDescriptor;

  @SpeakeasyMetadata()
  @Expose({ name: "TableType" })
  tableType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TargetTable" })
  @Type(() => TableIdentifier)
  targetTable?: TableIdentifier;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "VersionId" })
  versionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ViewExpandedText" })
  viewExpandedText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ViewOriginalText" })
  viewOriginalText?: string;
}
