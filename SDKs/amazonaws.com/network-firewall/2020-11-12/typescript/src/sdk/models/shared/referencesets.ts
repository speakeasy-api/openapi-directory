/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { IPSetReference } from "./ipsetreference";
import { Expose, Transform } from "class-transformer";

/**
 * Contains a set of IP set references.
 */
export class ReferenceSets extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: IPSetReference })
  @Expose({ name: "IPSetReferences" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, IPSetReference> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], IPSetReference);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  ipSetReferences?: Record<string, IPSetReference>;
}
