<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PostVolumesCreateVolumeRequest
{
    /**
     * Auto-mount Volume after attach. `server` must be provided.
     * 
     * @var ?bool $automount
     */
	#[\JMS\Serializer\Annotation\SerializedName('automount')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $automount = null;
    
    /**
     * Format Volume after creation. One of: `xfs`, `ext4`
     * 
     * @var ?string $format
     */
	#[\JMS\Serializer\Annotation\SerializedName('format')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $format = null;
    
    /**
     * User-defined labels (key-value pairs)
     * 
     * @var ?array<string, mixed> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Location to create the Volume in (can be omitted if Server is specified)
     * 
     * @var ?string $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
    /**
     * Name of the volume
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Server to which to attach the Volume once it's created (Volume will be created in the same Location as the server)
     * 
     * @var ?int $server
     */
	#[\JMS\Serializer\Annotation\SerializedName('server')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $server = null;
    
    /**
     * Size of the Volume in GB
     * 
     * @var int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $size;
    
	public function __construct()
	{
		$this->automount = null;
		$this->format = null;
		$this->labels = null;
		$this->location = null;
		$this->name = "";
		$this->server = null;
		$this->size = 0;
	}
}
