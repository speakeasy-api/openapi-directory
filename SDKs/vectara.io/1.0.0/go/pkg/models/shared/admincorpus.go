// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type AdminCorpus struct {
	CustomDimensions []AdminDimension `json:"customDimensions,omitempty"`
	// A description for the corpus.
	Description *string `json:"description,omitempty"`
	// The time at which the corpus was provisioned.
	DtProvision *string `json:"dtProvision,omitempty"`
	// Whether the corpus is enabled for use or not.
	Enabled *bool `json:"enabled,omitempty"`
	// This is an advanced setting for changing the underlying model type.  The
	// default value is "1", which is Vectara's high-performing global model.
	// Underlying models may be swapped for some paying customers by contacting
	// our support team.
	EncoderID *string `json:"encoderId,omitempty"`
	// Encryption is on by default and cannot be turned off.
	Encrypted        *bool                  `json:"encrypted,omitempty"`
	FilterAttributes []AdminFilterAttribute `json:"filterAttributes,omitempty"`
	// The Corpus ID.
	ID *int64 `json:"id,omitempty"`
	// An optional maximum size of the metadata that each document can contain.
	MetadataMaxBytes *int64 `json:"metadataMaxBytes,omitempty"`
	// The name of the corpus.
	Name *string `json:"name,omitempty"`
	// The default query encoder is designed for normal question-answering types
	// of queries when the text contains the answer.  Swapping the index encoder
	// is generally rare, but can be used to help directly match questions to
	// questions.  This can be useful if you have a FAQ dataset and you want to
	// directly match the user question to the question in the FAQ.
	SwapIenc *bool `json:"swapIenc,omitempty"`
	SwapQenc *bool `json:"swapQenc,omitempty"`
	// When a corpus is "textless", Vectara does not store the original text.
	// Instead, Vectara converts the text to vectors and only retains metadata.
	Textless *bool `json:"textless,omitempty"`
}
