/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateNotificationRuleRequestBody {
    /**
     * The Amazon Resource Name (ARN) of the notification rule.
     */
    @JsonProperty("Arn")
    public String arn;

    public UpdateNotificationRuleRequestBody withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    /**
     * The level of detail to include in the notifications for this resource. BASIC will include only the contents of the event as it would appear in Amazon CloudWatch. FULL will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DetailType")
    public UpdateNotificationRuleRequestBodyDetailTypeEnum detailType;

    public UpdateNotificationRuleRequestBody withDetailType(UpdateNotificationRuleRequestBodyDetailTypeEnum detailType) {
        this.detailType = detailType;
        return this;
    }
    
    /**
     * A list of event types associated with this notification rule. For a complete list of event types and IDs, see &lt;a href="https://docs.aws.amazon.com/codestar-notifications/latest/userguide/concepts.html#concepts-api"&gt;Notification concepts&lt;/a&gt; in the &lt;i&gt;Developer Tools Console User Guide&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EventTypeIds")
    public String[] eventTypeIds;

    public UpdateNotificationRuleRequestBody withEventTypeIds(String[] eventTypeIds) {
        this.eventTypeIds = eventTypeIds;
        return this;
    }
    
    /**
     * The name of the notification rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public UpdateNotificationRuleRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The status of the notification rule. Valid statuses include enabled (sending notifications) or disabled (not sending notifications).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public UpdateNotificationRuleRequestBodyStatusEnum status;

    public UpdateNotificationRuleRequestBody withStatus(UpdateNotificationRuleRequestBodyStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The address and type of the targets to receive notifications from this notification rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Targets")
    public org.openapis.openapi.models.shared.Target[] targets;

    public UpdateNotificationRuleRequestBody withTargets(org.openapis.openapi.models.shared.Target[] targets) {
        this.targets = targets;
        return this;
    }
    
    public UpdateNotificationRuleRequestBody(@JsonProperty("Arn") String arn) {
        this.arn = arn;
  }
}
