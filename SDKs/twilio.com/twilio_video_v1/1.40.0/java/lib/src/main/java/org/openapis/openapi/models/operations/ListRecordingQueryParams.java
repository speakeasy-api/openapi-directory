/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListRecordingQueryParams {
    /**
     * Read only recordings that started on or after this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time with time zone.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateCreatedAfter")
    public OffsetDateTime dateCreatedAfter;
    public ListRecordingQueryParams withDateCreatedAfter(OffsetDateTime dateCreatedAfter) {
        this.dateCreatedAfter = dateCreatedAfter;
        return this;
    }
    
    /**
     * Read only recordings that started before this [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time with time zone, given as `YYYY-MM-DDThh:mm:ss+|-hh:mm` or `YYYY-MM-DDThh:mm:ssZ`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateCreatedBefore")
    public OffsetDateTime dateCreatedBefore;
    public ListRecordingQueryParams withDateCreatedBefore(OffsetDateTime dateCreatedBefore) {
        this.dateCreatedBefore = dateCreatedBefore;
        return this;
    }
    
    /**
     * Read only recordings with this `grouping_sid`, which may include a `participant_sid` and/or a `room_sid`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=GroupingSid")
    public String[] groupingSid;
    public ListRecordingQueryParams withGroupingSid(String[] groupingSid) {
        this.groupingSid = groupingSid;
        return this;
    }
    
    /**
     * Read only recordings that have this media type. Can be either `audio` or `video`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MediaType")
    public org.openapis.openapi.models.shared.RecordingEnumTypeEnum mediaType;
    public ListRecordingQueryParams withMediaType(org.openapis.openapi.models.shared.RecordingEnumTypeEnum mediaType) {
        this.mediaType = mediaType;
        return this;
    }
    
    /**
     * The page index. This value is simply for client state.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Page")
    public Long page;
    public ListRecordingQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PageSize")
    public Long pageSize;
    public ListRecordingQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The page token. This is provided by the API.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PageToken")
    public String pageToken;
    public ListRecordingQueryParams withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Read only the recordings that have this `source_sid`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SourceSid")
    public String sourceSid;
    public ListRecordingQueryParams withSourceSid(String sourceSid) {
        this.sourceSid = sourceSid;
        return this;
    }
    
    /**
     * Read only the recordings that have this status. Can be: `processing`, `completed`, or `deleted`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Status")
    public org.openapis.openapi.models.shared.RecordingEnumStatusEnum status;
    public ListRecordingQueryParams withStatus(org.openapis.openapi.models.shared.RecordingEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
