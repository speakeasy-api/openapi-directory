/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetGroupsByIdsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=api_key",
  })
  apiKey?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2Code?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2Implicit?: string;
}

export class GetGroupsByIdsRequest extends SpeakeasyBase {
  /**
   * The IDs of the groups to retrieve.  If more than 20 group IDs are passed, only the first 20 groups will be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=group_ids",
  })
  groupIds: string;
}

export class GetGroupsByIdsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The groups.
   */
  @SpeakeasyMetadata({ elemType: shared.Group })
  groups?: shared.Group[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
