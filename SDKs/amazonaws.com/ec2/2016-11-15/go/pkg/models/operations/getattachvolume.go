// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAttachVolumeActionEnum
type GETAttachVolumeActionEnum string

const (
	GETAttachVolumeActionEnumAttachVolume GETAttachVolumeActionEnum = "AttachVolume"
)

func (e *GETAttachVolumeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AttachVolume":
		*e = GETAttachVolumeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAttachVolumeActionEnum: %s", s)
	}
}

// GETAttachVolumeVersionEnum
type GETAttachVolumeVersionEnum string

const (
	GETAttachVolumeVersionEnumTwoThousandAndSixteen1115 GETAttachVolumeVersionEnum = "2016-11-15"
)

func (e *GETAttachVolumeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETAttachVolumeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAttachVolumeVersionEnum: %s", s)
	}
}

type GETAttachVolumeRequest struct {
	Action GETAttachVolumeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The device name (for example, <code>/dev/sdh</code> or <code>xvdh</code>).
	Device string `queryParam:"style=form,explode=true,name=Device"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the instance.
	InstanceID string                     `queryParam:"style=form,explode=true,name=InstanceId"`
	Version    GETAttachVolumeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the EBS volume. The volume and instance must be within the same Availability Zone.
	VolumeID          string  `queryParam:"style=form,explode=true,name=VolumeId"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAttachVolumeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
