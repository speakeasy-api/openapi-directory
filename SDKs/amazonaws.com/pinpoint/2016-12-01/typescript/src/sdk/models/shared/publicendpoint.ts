/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelTypeEnum } from "./channeltypeenum";
import { EndpointDemographic } from "./endpointdemographic";
import { EndpointLocation } from "./endpointlocation";
import { EndpointUser } from "./endpointuser";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the properties and attributes of an endpoint that's associated with an event.
 */
export class PublicEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Attributes" })
  attributes?: Record<string, string[]>;

  @SpeakeasyMetadata()
  @Expose({ name: "ChannelType" })
  channelType?: ChannelTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Demographic" })
  @Type(() => EndpointDemographic)
  demographic?: EndpointDemographic;

  @SpeakeasyMetadata()
  @Expose({ name: "EffectiveDate" })
  effectiveDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointStatus" })
  endpointStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Location" })
  @Type(() => EndpointLocation)
  location?: EndpointLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "Metrics" })
  metrics?: Record<string, number>;

  @SpeakeasyMetadata()
  @Expose({ name: "OptOut" })
  optOut?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestId" })
  requestId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "User" })
  @Type(() => EndpointUser)
  user?: EndpointUser;
}
