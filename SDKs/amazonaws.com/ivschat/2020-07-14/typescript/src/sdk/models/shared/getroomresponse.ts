/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MessageReviewHandler } from "./messagereviewhandler";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetRoomResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "loggingConfigurationIdentifiers" })
  loggingConfigurationIdentifiers?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "maximumMessageLength" })
  maximumMessageLength?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maximumMessageRatePerSecond" })
  maximumMessageRatePerSecond?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "messageReviewHandler" })
  @Type(() => MessageReviewHandler)
  messageReviewHandler?: MessageReviewHandler;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime?: Date;
}
