"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BankAccount:
    r"""Represents a bank account. For more information about
    linking a bank account to a Square account, see 
    [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
    """
    
    account_number_suffix: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_number_suffix') }})
    r"""The last few digits of the account number."""  
    account_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_type') }})
    r"""The financial purpose of the associated bank account."""  
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})
    r"""The ISO 3166 Alpha-2 country code where the bank account is based."""  
    creditable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditable') }})
    r"""Indicates whether it is possible for Square to send money to this bank account."""  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})
    r"""The 3-character ISO 4217 currency code indicating the operating
    currency of the bank account. For example, the currency code for US dollars
    is `USD`.
    """  
    debitable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debitable') }})
    r"""Indicates whether it is possible for Square to take money from this
    bank account.
    """  
    holder_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('holder_name') }})
    r"""Name of the account holder. This name must match the name
    on the targeted bank account record.
    """  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The unique, Square-issued identifier for the bank account."""  
    primary_bank_identification_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primary_bank_identification_number') }})
    r"""Primary identifier for the bank. For more information, see
    [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
    """  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Read-only. The current verification status of this BankAccount object."""  
    bank_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bank_name'), 'exclude': lambda f: f is None }})
    r"""Read only. Name of actual financial institution.
    For example \"Bank of America\".
    """  
    debit_mandate_reference_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debit_mandate_reference_id'), 'exclude': lambda f: f is None }})
    r"""Reference identifier that will be displayed to UK bank account owners
    when collecting direct debit authorization. Only required for UK bank accounts.
    """  
    fingerprint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fingerprint'), 'exclude': lambda f: f is None }})
    r"""A Square-assigned, unique identifier for the bank account based on the
    account information. The account fingerprint can be used to compare account
    entries and determine if the they represent the same real-world bank account.
    """  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_id'), 'exclude': lambda f: f is None }})
    r"""The location to which the bank account belongs."""  
    reference_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference_id'), 'exclude': lambda f: f is None }})
    r"""Client-provided identifier for linking the banking account to an entity
    in a third-party system (for example, a bank account number or a user identifier).
    """  
    secondary_bank_identification_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secondary_bank_identification_number'), 'exclude': lambda f: f is None }})
    r"""Secondary identifier for the bank. For more information, see
    [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
    """  
    version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""The current version of the `BankAccount`."""  
    