<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest - The request to analyze conversations in bulk.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest
{
    /**
     * Required. Percentage of selected conversation to analyze, between [0, 100].
     * 
     * @var ?float $analysisPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('analysisPercentage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $analysisPercentage = null;
    
    /**
     * Selector of all available annotators and phrase matchers to run.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudContactcenterinsightsV1AnnotatorSelector $annotatorSelector
     */
	#[\JMS\Serializer\Annotation\SerializedName('annotatorSelector')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudContactcenterinsightsV1AnnotatorSelector')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudContactcenterinsightsV1AnnotatorSelector $annotatorSelector = null;
    
    /**
     * Required. Filter used to select the subset of conversations to analyze.
     * 
     * @var ?string $filter
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filter = null;
    
    /**
     * Required. The parent resource to create analyses in.
     * 
     * @var ?string $parent
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parent = null;
    
	public function __construct()
	{
		$this->analysisPercentage = null;
		$this->annotatorSelector = null;
		$this->filter = null;
		$this->parent = null;
	}
}
