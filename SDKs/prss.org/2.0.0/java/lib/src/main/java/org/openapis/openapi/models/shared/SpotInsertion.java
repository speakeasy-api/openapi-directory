/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SpotInsertion - A spot insertion for playing a series of spots when a cue is received during a program.
 */
public class SpotInsertion {
    /**
     * The ID of the broadcast service for the spot insertion.
     */
    @JsonProperty("broadcastServiceId")
    public Long broadcastServiceId;

    public SpotInsertion withBroadcastServiceId(Long broadcastServiceId) {
        this.broadcastServiceId = broadcastServiceId;
        return this;
    }
    
    /**
     * The date and time the spot insertion was created. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;

    public SpotInsertion withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The cue that triggers the spot insertion.
     */
    @JsonProperty("cue")
    public String cue;

    public SpotInsertion withCue(String cue) {
        this.cue = cue;
        return this;
    }
    
    /**
     * The ID of the customer who owns the spot insertion. Set to the logged-in customer at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public Long customerId;

    public SpotInsertion withCustomerId(Long customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * The duration of the spot insertion.
     */
    @JsonProperty("duration")
    public Integer duration;

    public SpotInsertion withDuration(Integer duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * The date the spot insertion ends. The time will be set to midnight Eastern Time.
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("endDate")
    public LocalDate endDate;

    public SpotInsertion withEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The unique ID of the spot insertion. Generated at creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public SpotInsertion withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the program for the spot insertion.
     */
    @JsonProperty("programId")
    public Long programId;

    public SpotInsertion withProgramId(Long programId) {
        this.programId = programId;
        return this;
    }
    
    /**
     * The ordered list of spot IDs to play.
     */
    @JsonProperty("spots")
    public Long[] spots;

    public SpotInsertion withSpots(Long[] spots) {
        this.spots = spots;
        return this;
    }
    
    /**
     * The date the spot insertion can start. The time will be set to midnight Eastern Time.
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("startDate")
    public LocalDate startDate;

    public SpotInsertion withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    public SpotInsertion(@JsonProperty("broadcastServiceId") Long broadcastServiceId, @JsonProperty("cue") String cue, @JsonProperty("duration") Integer duration, @JsonProperty("endDate") LocalDate endDate, @JsonProperty("programId") Long programId, @JsonProperty("spots") Long[] spots, @JsonProperty("startDate") LocalDate startDate) {
        this.broadcastServiceId = broadcastServiceId;
        this.cue = cue;
        this.duration = duration;
        this.endDate = endDate;
        this.programId = programId;
        this.spots = spots;
        this.startDate = startDate;
  }
}
