/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class KeyUsageQueryParams {
    /**
     * An end date/time in the form of a UNIX Timestamp in milliseconds, e.g. `1418556452651`. If no end time is provided, the current time will be used.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=end")
    public Integer end;
    public KeyUsageQueryParams withEnd(Integer end) {
        this.end = end;
        return this;
    }
    
    /**
     * Sublicensed keys only. This will restrict the analysed dataset to a specific licensee.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=licensee")
    public String licensee;
    public KeyUsageQueryParams withLicensee(String licensee) {
        this.licensee = licensee;
        return this;
    }
    
    /**
     * A start date/time in the form of a UNIX Timestamp in milliseconds, e.g. `1418556452651`. If no start time is provided, the start time will be assigned to a time 21 days prior to the end time.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=start")
    public Integer start;
    public KeyUsageQueryParams withStart(Integer start) {
        this.start = start;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=tags")
    public String tags;
    public KeyUsageQueryParams withTags(String tags) {
        this.tags = tags;
        return this;
    }
    
}
