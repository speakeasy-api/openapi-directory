/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class GlobalHookConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "content_type" })
  contentType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "insecure_ssl" })
  insecureSsl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Response
 */
export class GlobalHook extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => GlobalHookConfig)
  config?: GlobalHookConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ping_url" })
  pingUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
