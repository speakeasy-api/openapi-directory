"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifyInstanceAttributeRequest = exports.ModifyInstanceAttributeRequestUserData = exports.ModifyInstanceAttributeRequestSriovNetSupport = exports.ModifyInstanceAttributeRequestRamdisk = exports.ModifyInstanceAttributeRequestKernel = exports.ModifyInstanceAttributeRequestInstanceType = exports.ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior = exports.ModifyInstanceAttributeRequestEnaSupport = exports.ModifyInstanceAttributeRequestEbsOptimized = exports.ModifyInstanceAttributeRequestDisableApiTermination = exports.ModifyInstanceAttributeRequestBlockDeviceMappings = exports.ModifyInstanceAttributeRequestBlockDeviceMappingsEbs = exports.ModifyInstanceAttributeRequestAttributeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var attributebooleanvalue_1 = require("./attributebooleanvalue");
/**
 * <p>The name of the attribute to modify.</p> <important> <p>You can modify the following attributes only: <code>disableApiTermination</code> | <code>instanceType</code> | <code>kernel</code> | <code>ramdisk</code> | <code>instanceInitiatedShutdownBehavior</code> | <code>blockDeviceMapping</code> | <code>userData</code> | <code>sourceDestCheck</code> | <code>groupSet</code> | <code>ebsOptimized</code> | <code>sriovNetSupport</code> | <code>enaSupport</code> | <code>nvmeSupport</code> | <code>disableApiStop</code> | <code>enclaveOptions</code> </p> </important>
 */
var ModifyInstanceAttributeRequestAttributeEnum;
(function (ModifyInstanceAttributeRequestAttributeEnum) {
    ModifyInstanceAttributeRequestAttributeEnum["InstanceType"] = "instanceType";
    ModifyInstanceAttributeRequestAttributeEnum["Kernel"] = "kernel";
    ModifyInstanceAttributeRequestAttributeEnum["Ramdisk"] = "ramdisk";
    ModifyInstanceAttributeRequestAttributeEnum["UserData"] = "userData";
    ModifyInstanceAttributeRequestAttributeEnum["DisableApiTermination"] = "disableApiTermination";
    ModifyInstanceAttributeRequestAttributeEnum["InstanceInitiatedShutdownBehavior"] = "instanceInitiatedShutdownBehavior";
    ModifyInstanceAttributeRequestAttributeEnum["RootDeviceName"] = "rootDeviceName";
    ModifyInstanceAttributeRequestAttributeEnum["BlockDeviceMapping"] = "blockDeviceMapping";
    ModifyInstanceAttributeRequestAttributeEnum["ProductCodes"] = "productCodes";
    ModifyInstanceAttributeRequestAttributeEnum["SourceDestCheck"] = "sourceDestCheck";
    ModifyInstanceAttributeRequestAttributeEnum["GroupSet"] = "groupSet";
    ModifyInstanceAttributeRequestAttributeEnum["EbsOptimized"] = "ebsOptimized";
    ModifyInstanceAttributeRequestAttributeEnum["SriovNetSupport"] = "sriovNetSupport";
    ModifyInstanceAttributeRequestAttributeEnum["EnaSupport"] = "enaSupport";
    ModifyInstanceAttributeRequestAttributeEnum["EnclaveOptions"] = "enclaveOptions";
    ModifyInstanceAttributeRequestAttributeEnum["DisableApiStop"] = "disableApiStop";
})(ModifyInstanceAttributeRequestAttributeEnum = exports.ModifyInstanceAttributeRequestAttributeEnum || (exports.ModifyInstanceAttributeRequestAttributeEnum = {}));
/**
 * Parameters used to automatically set up EBS volumes when the instance is launched.
 */
var ModifyInstanceAttributeRequestBlockDeviceMappingsEbs = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestBlockDeviceMappingsEbs, _super);
    function ModifyInstanceAttributeRequestBlockDeviceMappingsEbs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyInstanceAttributeRequestBlockDeviceMappingsEbs.prototype, "deleteOnTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestBlockDeviceMappingsEbs.prototype, "volumeId", void 0);
    return ModifyInstanceAttributeRequestBlockDeviceMappingsEbs;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestBlockDeviceMappingsEbs = ModifyInstanceAttributeRequestBlockDeviceMappingsEbs;
/**
 * Describes a block device mapping entry.
 */
var ModifyInstanceAttributeRequestBlockDeviceMappings = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestBlockDeviceMappings, _super);
    function ModifyInstanceAttributeRequestBlockDeviceMappings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestBlockDeviceMappings.prototype, "deviceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestBlockDeviceMappingsEbs)
    ], ModifyInstanceAttributeRequestBlockDeviceMappings.prototype, "ebs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestBlockDeviceMappings.prototype, "noDevice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestBlockDeviceMappings.prototype, "virtualName", void 0);
    return ModifyInstanceAttributeRequestBlockDeviceMappings;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestBlockDeviceMappings = ModifyInstanceAttributeRequestBlockDeviceMappings;
/**
 * If the value is <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. You cannot use this parameter for Spot Instances.
 */
var ModifyInstanceAttributeRequestDisableApiTermination = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestDisableApiTermination, _super);
    function ModifyInstanceAttributeRequestDisableApiTermination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyInstanceAttributeRequestDisableApiTermination.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestDisableApiTermination;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestDisableApiTermination = ModifyInstanceAttributeRequestDisableApiTermination;
/**
 * Specifies whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.
 */
var ModifyInstanceAttributeRequestEbsOptimized = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestEbsOptimized, _super);
    function ModifyInstanceAttributeRequestEbsOptimized() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyInstanceAttributeRequestEbsOptimized.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestEbsOptimized;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestEbsOptimized = ModifyInstanceAttributeRequestEbsOptimized;
/**
 * <p>Set to <code>true</code> to enable enhanced networking with ENA for the instance.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
 */
var ModifyInstanceAttributeRequestEnaSupport = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestEnaSupport, _super);
    function ModifyInstanceAttributeRequestEnaSupport() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyInstanceAttributeRequestEnaSupport.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestEnaSupport;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestEnaSupport = ModifyInstanceAttributeRequestEnaSupport;
/**
 * Specifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
 */
var ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior, _super);
    function ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior = ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior;
/**
 * Changes the instance type to the specified value. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html">Instance types</a> in the <i>Amazon EC2 User Guide</i>. If the instance type is not valid, the error returned is <code>InvalidInstanceAttributeValue</code>.
 */
var ModifyInstanceAttributeRequestInstanceType = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestInstanceType, _super);
    function ModifyInstanceAttributeRequestInstanceType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestInstanceType.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestInstanceType;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestInstanceType = ModifyInstanceAttributeRequestInstanceType;
/**
 * Changes the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.
 */
var ModifyInstanceAttributeRequestKernel = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestKernel, _super);
    function ModifyInstanceAttributeRequestKernel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestKernel.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestKernel;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestKernel = ModifyInstanceAttributeRequestKernel;
/**
 * Changes the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html">PV-GRUB</a>.
 */
var ModifyInstanceAttributeRequestRamdisk = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestRamdisk, _super);
    function ModifyInstanceAttributeRequestRamdisk() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestRamdisk.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestRamdisk;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestRamdisk = ModifyInstanceAttributeRequestRamdisk;
/**
 * <p>Set to <code>simple</code> to enable enhanced networking with the Intel 82599 Virtual Function interface for the instance.</p> <p>There is no way to disable enhanced networking with the Intel 82599 Virtual Function interface at this time.</p> <p>This option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.</p>
 */
var ModifyInstanceAttributeRequestSriovNetSupport = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestSriovNetSupport, _super);
    function ModifyInstanceAttributeRequestSriovNetSupport() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestSriovNetSupport.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestSriovNetSupport;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestSriovNetSupport = ModifyInstanceAttributeRequestSriovNetSupport;
/**
 * Changes the instance's user data to the specified value. If you are using an Amazon Web Services SDK or command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text.
 */
var ModifyInstanceAttributeRequestUserData = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequestUserData, _super);
    function ModifyInstanceAttributeRequestUserData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequestUserData.prototype, "value", void 0);
    return ModifyInstanceAttributeRequestUserData;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequestUserData = ModifyInstanceAttributeRequestUserData;
var ModifyInstanceAttributeRequest = /** @class */ (function (_super) {
    __extends(ModifyInstanceAttributeRequest, _super);
    function ModifyInstanceAttributeRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequest.prototype, "attribute", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyInstanceAttributeRequestBlockDeviceMappings,
        }),
        __metadata("design:type", Array)
    ], ModifyInstanceAttributeRequest.prototype, "blockDeviceMappings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", attributebooleanvalue_1.AttributeBooleanValue)
    ], ModifyInstanceAttributeRequest.prototype, "disableApiStop", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestDisableApiTermination)
    ], ModifyInstanceAttributeRequest.prototype, "disableApiTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyInstanceAttributeRequest.prototype, "dryRun", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestEbsOptimized)
    ], ModifyInstanceAttributeRequest.prototype, "ebsOptimized", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestEnaSupport)
    ], ModifyInstanceAttributeRequest.prototype, "enaSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], ModifyInstanceAttributeRequest.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequest.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestInstanceInitiatedShutdownBehavior)
    ], ModifyInstanceAttributeRequest.prototype, "instanceInitiatedShutdownBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestInstanceType)
    ], ModifyInstanceAttributeRequest.prototype, "instanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestKernel)
    ], ModifyInstanceAttributeRequest.prototype, "kernel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestRamdisk)
    ], ModifyInstanceAttributeRequest.prototype, "ramdisk", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", attributebooleanvalue_1.AttributeBooleanValue)
    ], ModifyInstanceAttributeRequest.prototype, "sourceDestCheck", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestSriovNetSupport)
    ], ModifyInstanceAttributeRequest.prototype, "sriovNetSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyInstanceAttributeRequestUserData)
    ], ModifyInstanceAttributeRequest.prototype, "userData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyInstanceAttributeRequest.prototype, "value", void 0);
    return ModifyInstanceAttributeRequest;
}(utils_1.SpeakeasyBase));
exports.ModifyInstanceAttributeRequest = ModifyInstanceAttributeRequest;
