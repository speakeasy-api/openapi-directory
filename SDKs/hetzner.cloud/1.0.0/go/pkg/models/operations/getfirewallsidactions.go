// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetFirewallsIDActionsSortParameterSortEnum - Can be used multiple times.
type GetFirewallsIDActionsSortParameterSortEnum string

const (
	GetFirewallsIDActionsSortParameterSortEnumID           GetFirewallsIDActionsSortParameterSortEnum = "id"
	GetFirewallsIDActionsSortParameterSortEnumIDAsc        GetFirewallsIDActionsSortParameterSortEnum = "id:asc"
	GetFirewallsIDActionsSortParameterSortEnumIDDesc       GetFirewallsIDActionsSortParameterSortEnum = "id:desc"
	GetFirewallsIDActionsSortParameterSortEnumCommand      GetFirewallsIDActionsSortParameterSortEnum = "command"
	GetFirewallsIDActionsSortParameterSortEnumCommandAsc   GetFirewallsIDActionsSortParameterSortEnum = "command:asc"
	GetFirewallsIDActionsSortParameterSortEnumCommandDesc  GetFirewallsIDActionsSortParameterSortEnum = "command:desc"
	GetFirewallsIDActionsSortParameterSortEnumStatus       GetFirewallsIDActionsSortParameterSortEnum = "status"
	GetFirewallsIDActionsSortParameterSortEnumStatusAsc    GetFirewallsIDActionsSortParameterSortEnum = "status:asc"
	GetFirewallsIDActionsSortParameterSortEnumStatusDesc   GetFirewallsIDActionsSortParameterSortEnum = "status:desc"
	GetFirewallsIDActionsSortParameterSortEnumProgress     GetFirewallsIDActionsSortParameterSortEnum = "progress"
	GetFirewallsIDActionsSortParameterSortEnumProgressAsc  GetFirewallsIDActionsSortParameterSortEnum = "progress:asc"
	GetFirewallsIDActionsSortParameterSortEnumProgressDesc GetFirewallsIDActionsSortParameterSortEnum = "progress:desc"
	GetFirewallsIDActionsSortParameterSortEnumStarted      GetFirewallsIDActionsSortParameterSortEnum = "started"
	GetFirewallsIDActionsSortParameterSortEnumStartedAsc   GetFirewallsIDActionsSortParameterSortEnum = "started:asc"
	GetFirewallsIDActionsSortParameterSortEnumStartedDesc  GetFirewallsIDActionsSortParameterSortEnum = "started:desc"
	GetFirewallsIDActionsSortParameterSortEnumFinished     GetFirewallsIDActionsSortParameterSortEnum = "finished"
	GetFirewallsIDActionsSortParameterSortEnumFinishedAsc  GetFirewallsIDActionsSortParameterSortEnum = "finished:asc"
	GetFirewallsIDActionsSortParameterSortEnumFinishedDesc GetFirewallsIDActionsSortParameterSortEnum = "finished:desc"
)

func (e GetFirewallsIDActionsSortParameterSortEnum) ToPointer() *GetFirewallsIDActionsSortParameterSortEnum {
	return &e
}

func (e *GetFirewallsIDActionsSortParameterSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		fallthrough
	case "id:asc":
		fallthrough
	case "id:desc":
		fallthrough
	case "command":
		fallthrough
	case "command:asc":
		fallthrough
	case "command:desc":
		fallthrough
	case "status":
		fallthrough
	case "status:asc":
		fallthrough
	case "status:desc":
		fallthrough
	case "progress":
		fallthrough
	case "progress:asc":
		fallthrough
	case "progress:desc":
		fallthrough
	case "started":
		fallthrough
	case "started:asc":
		fallthrough
	case "started:desc":
		fallthrough
	case "finished":
		fallthrough
	case "finished:asc":
		fallthrough
	case "finished:desc":
		*e = GetFirewallsIDActionsSortParameterSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFirewallsIDActionsSortParameterSortEnum: %v", v)
	}
}

// GetFirewallsIDActionsStatusParameterStatusEnum - Can be used multiple times, the response will contain only Actions with specified statuses
type GetFirewallsIDActionsStatusParameterStatusEnum string

const (
	GetFirewallsIDActionsStatusParameterStatusEnumRunning GetFirewallsIDActionsStatusParameterStatusEnum = "running"
	GetFirewallsIDActionsStatusParameterStatusEnumSuccess GetFirewallsIDActionsStatusParameterStatusEnum = "success"
	GetFirewallsIDActionsStatusParameterStatusEnumError   GetFirewallsIDActionsStatusParameterStatusEnum = "error"
)

func (e GetFirewallsIDActionsStatusParameterStatusEnum) ToPointer() *GetFirewallsIDActionsStatusParameterStatusEnum {
	return &e
}

func (e *GetFirewallsIDActionsStatusParameterStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "running":
		fallthrough
	case "success":
		fallthrough
	case "error":
		*e = GetFirewallsIDActionsStatusParameterStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFirewallsIDActionsStatusParameterStatusEnum: %v", v)
	}
}

type GetFirewallsIDActionsRequest struct {
	// ID of the Resource
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
	// Can be used multiple times.
	Sort *GetFirewallsIDActionsSortParameterSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Can be used multiple times, the response will contain only Actions with specified statuses
	Status *GetFirewallsIDActionsStatusParameterStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

// GetFirewallsIDActionsActionsResponseActionError - Error message for the Action if error occurred, otherwise null
type GetFirewallsIDActionsActionsResponseActionError struct {
	// Fixed machine readable code
	Code string `json:"code"`
	// Humanized error message
	Message string `json:"message"`
}

type GetFirewallsIDActionsActionsResponseActionResources struct {
	// ID of the Resource
	ID int64 `json:"id"`
	// Type of resource referenced
	Type string `json:"type"`
}

// GetFirewallsIDActionsActionsResponseActionStatusEnum - Status of the Action
type GetFirewallsIDActionsActionsResponseActionStatusEnum string

const (
	GetFirewallsIDActionsActionsResponseActionStatusEnumSuccess GetFirewallsIDActionsActionsResponseActionStatusEnum = "success"
	GetFirewallsIDActionsActionsResponseActionStatusEnumRunning GetFirewallsIDActionsActionsResponseActionStatusEnum = "running"
	GetFirewallsIDActionsActionsResponseActionStatusEnumError   GetFirewallsIDActionsActionsResponseActionStatusEnum = "error"
)

func (e GetFirewallsIDActionsActionsResponseActionStatusEnum) ToPointer() *GetFirewallsIDActionsActionsResponseActionStatusEnum {
	return &e
}

func (e *GetFirewallsIDActionsActionsResponseActionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "running":
		fallthrough
	case "error":
		*e = GetFirewallsIDActionsActionsResponseActionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFirewallsIDActionsActionsResponseActionStatusEnum: %v", v)
	}
}

type GetFirewallsIDActionsActionsResponseAction struct {
	// Command executed in the Action
	Command string `json:"command"`
	// Error message for the Action if error occurred, otherwise null
	Error GetFirewallsIDActionsActionsResponseActionError `json:"error"`
	// Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
	Finished string `json:"finished"`
	// ID of the Resource
	ID int64 `json:"id"`
	// Progress of Action in percent
	Progress float64 `json:"progress"`
	// Resources the Action relates to
	Resources []GetFirewallsIDActionsActionsResponseActionResources `json:"resources"`
	// Point in time when the Action was started (in ISO-8601 format)
	Started string `json:"started"`
	// Status of the Action
	Status GetFirewallsIDActionsActionsResponseActionStatusEnum `json:"status"`
}

type GetFirewallsIDActionsActionsResponseMetaPagination struct {
	// ID of the last page available. Can be null if the current page is the last one.
	LastPage float64 `json:"last_page"`
	// ID of the next page. Can be null if the current page is the last one.
	NextPage float64 `json:"next_page"`
	// Current page number
	Page float64 `json:"page"`
	// Maximum number of items shown per page in the response
	PerPage float64 `json:"per_page"`
	// ID of the previous page. Can be null if the current page is the first one.
	PreviousPage float64 `json:"previous_page"`
	// The total number of entries that exist in the database for this query. Nullable if unknown.
	TotalEntries float64 `json:"total_entries"`
}

type GetFirewallsIDActionsActionsResponseMeta struct {
	Pagination GetFirewallsIDActionsActionsResponseMetaPagination `json:"pagination"`
}

// GetFirewallsIDActionsActionsResponse - The `actions` key contains a list of Actions
type GetFirewallsIDActionsActionsResponse struct {
	Actions []GetFirewallsIDActionsActionsResponseAction `json:"actions"`
	Meta    *GetFirewallsIDActionsActionsResponseMeta    `json:"meta,omitempty"`
}

type GetFirewallsIDActionsResponse struct {
	// The `actions` key contains a list of Actions
	ActionsResponse *GetFirewallsIDActionsActionsResponse
	ContentType     string
	StatusCode      int
	RawResponse     *http.Response
}
