/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Grading - Grading for a single question
 */
public class Grading {
    /**
     * The answer key for a question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("correctAnswers")
    public CorrectAnswers correctAnswers;

    public Grading withCorrectAnswers(CorrectAnswers correctAnswers) {
        this.correctAnswers = correctAnswers;
        return this;
    }
    
    /**
     * Feedback for a respondent about their response to a question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("generalFeedback")
    public Feedback generalFeedback;

    public Grading withGeneralFeedback(Feedback generalFeedback) {
        this.generalFeedback = generalFeedback;
        return this;
    }
    
    /**
     * Required. The maximum number of points a respondent can automatically get for a correct answer. This must not be negative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pointValue")
    public Integer pointValue;

    public Grading withPointValue(Integer pointValue) {
        this.pointValue = pointValue;
        return this;
    }
    
    /**
     * Feedback for a respondent about their response to a question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("whenRight")
    public Feedback whenRight;

    public Grading withWhenRight(Feedback whenRight) {
        this.whenRight = whenRight;
        return this;
    }
    
    /**
     * Feedback for a respondent about their response to a question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("whenWrong")
    public Feedback whenWrong;

    public Grading withWhenWrong(Feedback whenWrong) {
        this.whenWrong = whenWrong;
        return this;
    }
    
    public Grading(){}
}
