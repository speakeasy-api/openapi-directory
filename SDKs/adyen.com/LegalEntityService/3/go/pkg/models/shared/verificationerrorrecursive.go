// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VerificationErrorRecursiveCapabilitiesEnum string

const (
	VerificationErrorRecursiveCapabilitiesEnumAcceptExternalFunding                             VerificationErrorRecursiveCapabilitiesEnum = "acceptExternalFunding"
	VerificationErrorRecursiveCapabilitiesEnumAcceptPspFunding                                  VerificationErrorRecursiveCapabilitiesEnum = "acceptPspFunding"
	VerificationErrorRecursiveCapabilitiesEnumAcceptTransactionInRestrictedCountries            VerificationErrorRecursiveCapabilitiesEnum = "acceptTransactionInRestrictedCountries"
	VerificationErrorRecursiveCapabilitiesEnumAcceptTransactionInRestrictedCountriesCommercial  VerificationErrorRecursiveCapabilitiesEnum = "acceptTransactionInRestrictedCountriesCommercial"
	VerificationErrorRecursiveCapabilitiesEnumAcceptTransactionInRestrictedCountriesConsumer    VerificationErrorRecursiveCapabilitiesEnum = "acceptTransactionInRestrictedCountriesConsumer"
	VerificationErrorRecursiveCapabilitiesEnumAcceptTransactionInRestrictedIndustries           VerificationErrorRecursiveCapabilitiesEnum = "acceptTransactionInRestrictedIndustries"
	VerificationErrorRecursiveCapabilitiesEnumAcceptTransactionInRestrictedIndustriesCommercial VerificationErrorRecursiveCapabilitiesEnum = "acceptTransactionInRestrictedIndustriesCommercial"
	VerificationErrorRecursiveCapabilitiesEnumAcceptTransactionInRestrictedIndustriesConsumer   VerificationErrorRecursiveCapabilitiesEnum = "acceptTransactionInRestrictedIndustriesConsumer"
	VerificationErrorRecursiveCapabilitiesEnumAcquiring                                         VerificationErrorRecursiveCapabilitiesEnum = "acquiring"
	VerificationErrorRecursiveCapabilitiesEnumAtmWithdrawal                                     VerificationErrorRecursiveCapabilitiesEnum = "atmWithdrawal"
	VerificationErrorRecursiveCapabilitiesEnumAtmWithdrawalCommercial                           VerificationErrorRecursiveCapabilitiesEnum = "atmWithdrawalCommercial"
	VerificationErrorRecursiveCapabilitiesEnumAtmWithdrawalConsumer                             VerificationErrorRecursiveCapabilitiesEnum = "atmWithdrawalConsumer"
	VerificationErrorRecursiveCapabilitiesEnumAtmWithdrawalInRestrictedCountries                VerificationErrorRecursiveCapabilitiesEnum = "atmWithdrawalInRestrictedCountries"
	VerificationErrorRecursiveCapabilitiesEnumAtmWithdrawalInRestrictedCountriesCommercial      VerificationErrorRecursiveCapabilitiesEnum = "atmWithdrawalInRestrictedCountriesCommercial"
	VerificationErrorRecursiveCapabilitiesEnumAtmWithdrawalInRestrictedCountriesConsumer        VerificationErrorRecursiveCapabilitiesEnum = "atmWithdrawalInRestrictedCountriesConsumer"
	VerificationErrorRecursiveCapabilitiesEnumAuthorisedPaymentInstrumentUser                   VerificationErrorRecursiveCapabilitiesEnum = "authorisedPaymentInstrumentUser"
	VerificationErrorRecursiveCapabilitiesEnumGetGrantOffers                                    VerificationErrorRecursiveCapabilitiesEnum = "getGrantOffers"
	VerificationErrorRecursiveCapabilitiesEnumIssueBankAccount                                  VerificationErrorRecursiveCapabilitiesEnum = "issueBankAccount"
	VerificationErrorRecursiveCapabilitiesEnumIssueCard                                         VerificationErrorRecursiveCapabilitiesEnum = "issueCard"
	VerificationErrorRecursiveCapabilitiesEnumIssueCardCommercial                               VerificationErrorRecursiveCapabilitiesEnum = "issueCardCommercial"
	VerificationErrorRecursiveCapabilitiesEnumIssueCardConsumer                                 VerificationErrorRecursiveCapabilitiesEnum = "issueCardConsumer"
	VerificationErrorRecursiveCapabilitiesEnumLocalAcceptance                                   VerificationErrorRecursiveCapabilitiesEnum = "localAcceptance"
	VerificationErrorRecursiveCapabilitiesEnumPayout                                            VerificationErrorRecursiveCapabilitiesEnum = "payout"
	VerificationErrorRecursiveCapabilitiesEnumPayoutToTransferInstrument                        VerificationErrorRecursiveCapabilitiesEnum = "payoutToTransferInstrument"
	VerificationErrorRecursiveCapabilitiesEnumProcessing                                        VerificationErrorRecursiveCapabilitiesEnum = "processing"
	VerificationErrorRecursiveCapabilitiesEnumReceiveFromBalanceAccount                         VerificationErrorRecursiveCapabilitiesEnum = "receiveFromBalanceAccount"
	VerificationErrorRecursiveCapabilitiesEnumReceiveFromPlatformPayments                       VerificationErrorRecursiveCapabilitiesEnum = "receiveFromPlatformPayments"
	VerificationErrorRecursiveCapabilitiesEnumReceiveFromThirdParty                             VerificationErrorRecursiveCapabilitiesEnum = "receiveFromThirdParty"
	VerificationErrorRecursiveCapabilitiesEnumReceiveFromTransferInstrument                     VerificationErrorRecursiveCapabilitiesEnum = "receiveFromTransferInstrument"
	VerificationErrorRecursiveCapabilitiesEnumReceiveGrants                                     VerificationErrorRecursiveCapabilitiesEnum = "receiveGrants"
	VerificationErrorRecursiveCapabilitiesEnumReceivePayments                                   VerificationErrorRecursiveCapabilitiesEnum = "receivePayments"
	VerificationErrorRecursiveCapabilitiesEnumSendToBalanceAccount                              VerificationErrorRecursiveCapabilitiesEnum = "sendToBalanceAccount"
	VerificationErrorRecursiveCapabilitiesEnumSendToThirdParty                                  VerificationErrorRecursiveCapabilitiesEnum = "sendToThirdParty"
	VerificationErrorRecursiveCapabilitiesEnumSendToTransferInstrument                          VerificationErrorRecursiveCapabilitiesEnum = "sendToTransferInstrument"
	VerificationErrorRecursiveCapabilitiesEnumThirdPartyFunding                                 VerificationErrorRecursiveCapabilitiesEnum = "thirdPartyFunding"
	VerificationErrorRecursiveCapabilitiesEnumUseCard                                           VerificationErrorRecursiveCapabilitiesEnum = "useCard"
	VerificationErrorRecursiveCapabilitiesEnumUseCardCommercial                                 VerificationErrorRecursiveCapabilitiesEnum = "useCardCommercial"
	VerificationErrorRecursiveCapabilitiesEnumUseCardConsumer                                   VerificationErrorRecursiveCapabilitiesEnum = "useCardConsumer"
	VerificationErrorRecursiveCapabilitiesEnumUseCardInRestrictedCountries                      VerificationErrorRecursiveCapabilitiesEnum = "useCardInRestrictedCountries"
	VerificationErrorRecursiveCapabilitiesEnumUseCardInRestrictedCountriesCommercial            VerificationErrorRecursiveCapabilitiesEnum = "useCardInRestrictedCountriesCommercial"
	VerificationErrorRecursiveCapabilitiesEnumUseCardInRestrictedCountriesConsumer              VerificationErrorRecursiveCapabilitiesEnum = "useCardInRestrictedCountriesConsumer"
	VerificationErrorRecursiveCapabilitiesEnumUseCardInRestrictedIndustries                     VerificationErrorRecursiveCapabilitiesEnum = "useCardInRestrictedIndustries"
	VerificationErrorRecursiveCapabilitiesEnumUseCardInRestrictedIndustriesCommercial           VerificationErrorRecursiveCapabilitiesEnum = "useCardInRestrictedIndustriesCommercial"
	VerificationErrorRecursiveCapabilitiesEnumUseCardInRestrictedIndustriesConsumer             VerificationErrorRecursiveCapabilitiesEnum = "useCardInRestrictedIndustriesConsumer"
	VerificationErrorRecursiveCapabilitiesEnumWithdrawFromAtm                                   VerificationErrorRecursiveCapabilitiesEnum = "withdrawFromAtm"
	VerificationErrorRecursiveCapabilitiesEnumWithdrawFromAtmCommercial                         VerificationErrorRecursiveCapabilitiesEnum = "withdrawFromAtmCommercial"
	VerificationErrorRecursiveCapabilitiesEnumWithdrawFromAtmConsumer                           VerificationErrorRecursiveCapabilitiesEnum = "withdrawFromAtmConsumer"
	VerificationErrorRecursiveCapabilitiesEnumWithdrawFromAtmInRestrictedCountries              VerificationErrorRecursiveCapabilitiesEnum = "withdrawFromAtmInRestrictedCountries"
	VerificationErrorRecursiveCapabilitiesEnumWithdrawFromAtmInRestrictedCountriesCommercial    VerificationErrorRecursiveCapabilitiesEnum = "withdrawFromAtmInRestrictedCountriesCommercial"
	VerificationErrorRecursiveCapabilitiesEnumWithdrawFromAtmInRestrictedCountriesConsumer      VerificationErrorRecursiveCapabilitiesEnum = "withdrawFromAtmInRestrictedCountriesConsumer"
)

func (e VerificationErrorRecursiveCapabilitiesEnum) ToPointer() *VerificationErrorRecursiveCapabilitiesEnum {
	return &e
}

func (e *VerificationErrorRecursiveCapabilitiesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "acceptExternalFunding":
		fallthrough
	case "acceptPspFunding":
		fallthrough
	case "acceptTransactionInRestrictedCountries":
		fallthrough
	case "acceptTransactionInRestrictedCountriesCommercial":
		fallthrough
	case "acceptTransactionInRestrictedCountriesConsumer":
		fallthrough
	case "acceptTransactionInRestrictedIndustries":
		fallthrough
	case "acceptTransactionInRestrictedIndustriesCommercial":
		fallthrough
	case "acceptTransactionInRestrictedIndustriesConsumer":
		fallthrough
	case "acquiring":
		fallthrough
	case "atmWithdrawal":
		fallthrough
	case "atmWithdrawalCommercial":
		fallthrough
	case "atmWithdrawalConsumer":
		fallthrough
	case "atmWithdrawalInRestrictedCountries":
		fallthrough
	case "atmWithdrawalInRestrictedCountriesCommercial":
		fallthrough
	case "atmWithdrawalInRestrictedCountriesConsumer":
		fallthrough
	case "authorisedPaymentInstrumentUser":
		fallthrough
	case "getGrantOffers":
		fallthrough
	case "issueBankAccount":
		fallthrough
	case "issueCard":
		fallthrough
	case "issueCardCommercial":
		fallthrough
	case "issueCardConsumer":
		fallthrough
	case "localAcceptance":
		fallthrough
	case "payout":
		fallthrough
	case "payoutToTransferInstrument":
		fallthrough
	case "processing":
		fallthrough
	case "receiveFromBalanceAccount":
		fallthrough
	case "receiveFromPlatformPayments":
		fallthrough
	case "receiveFromThirdParty":
		fallthrough
	case "receiveFromTransferInstrument":
		fallthrough
	case "receiveGrants":
		fallthrough
	case "receivePayments":
		fallthrough
	case "sendToBalanceAccount":
		fallthrough
	case "sendToThirdParty":
		fallthrough
	case "sendToTransferInstrument":
		fallthrough
	case "thirdPartyFunding":
		fallthrough
	case "useCard":
		fallthrough
	case "useCardCommercial":
		fallthrough
	case "useCardConsumer":
		fallthrough
	case "useCardInRestrictedCountries":
		fallthrough
	case "useCardInRestrictedCountriesCommercial":
		fallthrough
	case "useCardInRestrictedCountriesConsumer":
		fallthrough
	case "useCardInRestrictedIndustries":
		fallthrough
	case "useCardInRestrictedIndustriesCommercial":
		fallthrough
	case "useCardInRestrictedIndustriesConsumer":
		fallthrough
	case "withdrawFromAtm":
		fallthrough
	case "withdrawFromAtmCommercial":
		fallthrough
	case "withdrawFromAtmConsumer":
		fallthrough
	case "withdrawFromAtmInRestrictedCountries":
		fallthrough
	case "withdrawFromAtmInRestrictedCountriesCommercial":
		fallthrough
	case "withdrawFromAtmInRestrictedCountriesConsumer":
		*e = VerificationErrorRecursiveCapabilitiesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationErrorRecursiveCapabilitiesEnum: %v", v)
	}
}

// VerificationErrorRecursiveTypeEnum - The type of error.
type VerificationErrorRecursiveTypeEnum string

const (
	VerificationErrorRecursiveTypeEnumDataMissing   VerificationErrorRecursiveTypeEnum = "dataMissing"
	VerificationErrorRecursiveTypeEnumInvalidInput  VerificationErrorRecursiveTypeEnum = "invalidInput"
	VerificationErrorRecursiveTypeEnumPendingStatus VerificationErrorRecursiveTypeEnum = "pendingStatus"
)

func (e VerificationErrorRecursiveTypeEnum) ToPointer() *VerificationErrorRecursiveTypeEnum {
	return &e
}

func (e *VerificationErrorRecursiveTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dataMissing":
		fallthrough
	case "invalidInput":
		fallthrough
	case "pendingStatus":
		*e = VerificationErrorRecursiveTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationErrorRecursiveTypeEnum: %v", v)
	}
}

type VerificationErrorRecursive struct {
	// Contains key-value pairs that specify the actions that the legal entity can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
	Capabilities []VerificationErrorRecursiveCapabilitiesEnum `json:"capabilities,omitempty"`
	// The general error code.
	Code *string `json:"code,omitempty"`
	// The general error message.
	Message *string `json:"message,omitempty"`
	// An object containing possible solutions to fix a verification error.
	RemediatingActions []RemediatingAction `json:"remediatingActions,omitempty"`
	// The type of error.
	Type *VerificationErrorRecursiveTypeEnum `json:"type,omitempty"`
}
