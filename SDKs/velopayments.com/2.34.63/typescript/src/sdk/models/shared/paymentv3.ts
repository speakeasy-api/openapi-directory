/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PayoutPayeeV3 } from "./payoutpayeev3";
import { Expose, Type } from "class-transformer";

export class PaymentV3 extends SpeakeasyBase {
  /**
   * The amount of the payment in minor units
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * Populated only if the payment was automatically withdrawn during instruction for being invalid
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoWithdrawnReasonCode" })
  autoWithdrawnReasonCode?: string;

  /**
   * The currency that the payment was made in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Payee data associated with a payment. Either individual or company must be populated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payee" })
  @Type(() => PayoutPayeeV3)
  payee?: PayoutPayeeV3;

  /**
   * The id of the payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentId" })
  paymentId: string;

  /**
   * <p>Any value here will override the memo value in the parent payout</p>
   *
   * @remarks
   * <p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMemo" })
  paymentMemo?: string;

  /**
   * <p>Metadata about the payment that may be relevant to the specific rails or remote system making the payout</p>
   *
   * @remarks
   * <p>The structure of the data will be dictated by the requirements of the payment rails</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMetadata" })
  paymentMetadata?: string;

  /**
   * A reference identifier for the payor for the given payee payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payorPaymentId" })
  payorPaymentId?: string;

  /**
   * Indicates the 3rd party system involved in making this payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "railsId" })
  railsId?: string;

  /**
   * The remoteId supplied by the payor that identifies the payee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remoteId" })
  remoteId?: string;

  /**
   * <p>The identifier for the remote payments system if not Velo</p>
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remoteSystemId" })
  remoteSystemId?: string;

  /**
   * The identifier of the source account to debit the payment from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceAccountName" })
  sourceAccountName?: string;

  /**
   * Current status of payment. One of the following values: SUBMITTED, ACCEPTED, REJECTED, WITHDRAWN, RETURNED, AWAITING_FUNDS, FUNDED, UNFUNDED, CANCELLED, BANK_PAYMENT_REQUESTED
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * The transmission method of the payment. One of the following values: ACH, SAME_DAY_ACH, WIRE, LOCAL, SWIFT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transmissionType" })
  transmissionType?: string;

  /**
   * Can this paynent be withdrawn
   */
  @SpeakeasyMetadata()
  @Expose({ name: "withdrawable" })
  withdrawable?: boolean;
}
