"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.POSTAccountType = exports.POSTAccountTypeTaxInfo = exports.POSTAccountTypeRunBillingEnum = exports.POSTAccountTypeSynctoNetSuiteNSEnum = exports.POSTAccountTypeCustomerTypeNSEnum = void 0;
var utils_1 = require("../../../internal/utils");
var postaccounttypebilltocontact_1 = require("./postaccounttypebilltocontact");
var postaccounttypecreditcard_1 = require("./postaccounttypecreditcard");
var postaccounttypepaymentmethod_1 = require("./postaccounttypepaymentmethod");
var postaccounttypesoldtocontact_1 = require("./postaccounttypesoldtocontact");
var postaccounttypesubscription_1 = require("./postaccounttypesubscription");
var class_transformer_1 = require("class-transformer");
/**
 * Value of the Customer Type field for the corresponding customer account in NetSuite. The Customer Type field is used when the customer account is created in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
 *
 * @remarks
 *
 */
var POSTAccountTypeCustomerTypeNSEnum;
(function (POSTAccountTypeCustomerTypeNSEnum) {
    POSTAccountTypeCustomerTypeNSEnum["Company"] = "Company";
    POSTAccountTypeCustomerTypeNSEnum["Individual"] = "Individual";
})(POSTAccountTypeCustomerTypeNSEnum = exports.POSTAccountTypeCustomerTypeNSEnum || (exports.POSTAccountTypeCustomerTypeNSEnum = {}));
/**
 * Specifies whether the account should be synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
 *
 * @remarks
 *
 */
var POSTAccountTypeSynctoNetSuiteNSEnum;
(function (POSTAccountTypeSynctoNetSuiteNSEnum) {
    POSTAccountTypeSynctoNetSuiteNSEnum["Yes"] = "Yes";
    POSTAccountTypeSynctoNetSuiteNSEnum["No"] = "No";
})(POSTAccountTypeSynctoNetSuiteNSEnum = exports.POSTAccountTypeSynctoNetSuiteNSEnum || (exports.POSTAccountTypeSynctoNetSuiteNSEnum = {}));
/**
 * Creates an invoice for a subscription. If you have the Invoice Settlement feature enabled, a credit memo might also be created based on the [invoice and credit memo generation rule.](https://knowledgecenter.zuora.com/CB_Billing/Invoice_Settlement/Credit_and_Debit_Memos/Rules_for_Generating_Invoices_and_Credit_Memos).
 *
 * @remarks
 *
 *
 * The billing documents generated
 * in this operation is only for this subscription, not for the entire
 * customer account.
 *
 *
 * Possible values:
 *
 * - `true`: An invoice is created. If you have the Invoice Settlement feature enabled, a credit memo might also be created.
 *
 *
 * - `false`: No invoice is created.
 *
 *
 * **Note:** This field is in Zuora REST API version control. Supported
 * minor versions are `211.0` or later. To use this field in the method,
 * you must set the `zuora-version` parameter to the minor version number
 * in the request header.
 *
 */
var POSTAccountTypeRunBillingEnum;
(function (POSTAccountTypeRunBillingEnum) {
    POSTAccountTypeRunBillingEnum["True"] = "true";
    POSTAccountTypeRunBillingEnum["False"] = "false";
})(POSTAccountTypeRunBillingEnum = exports.POSTAccountTypeRunBillingEnum || (exports.POSTAccountTypeRunBillingEnum = {}));
/**
 * Container for tax exempt information, used to establish the tax exempt status of a customer account.
 *
 * @remarks
 *
 */
var POSTAccountTypeTaxInfo = /** @class */ (function (_super) {
    __extends(POSTAccountTypeTaxInfo, _super);
    function POSTAccountTypeTaxInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "VATId" }),
        __metadata("design:type", String)
    ], POSTAccountTypeTaxInfo.prototype, "vatId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "companyCode" }),
        __metadata("design:type", String)
    ], POSTAccountTypeTaxInfo.prototype, "companyCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exemptCertificateId" }),
        __metadata("design:type", String)
    ], POSTAccountTypeTaxInfo.prototype, "exemptCertificateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exemptCertificateType" }),
        __metadata("design:type", String)
    ], POSTAccountTypeTaxInfo.prototype, "exemptCertificateType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exemptDescription" }),
        __metadata("design:type", String)
    ], POSTAccountTypeTaxInfo.prototype, "exemptDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exemptEffectiveDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTAccountTypeTaxInfo.prototype, "exemptEffectiveDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exemptEntityUseCode" }),
        __metadata("design:type", String)
    ], POSTAccountTypeTaxInfo.prototype, "exemptEntityUseCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exemptExpirationDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTAccountTypeTaxInfo.prototype, "exemptExpirationDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exemptIssuingJurisdiction" }),
        __metadata("design:type", String)
    ], POSTAccountTypeTaxInfo.prototype, "exemptIssuingJurisdiction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exemptStatus" }),
        __metadata("design:type", String)
    ], POSTAccountTypeTaxInfo.prototype, "exemptStatus", void 0);
    return POSTAccountTypeTaxInfo;
}(utils_1.SpeakeasyBase));
exports.POSTAccountTypeTaxInfo = POSTAccountTypeTaxInfo;
/**
 * Container for custom fields of an Account object.
 *
 * @remarks
 *
 */
var POSTAccountType = /** @class */ (function (_super) {
    __extends(POSTAccountType, _super);
    function POSTAccountType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Class__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "classNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CustomerType__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "customerTypeNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Department__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "departmentNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationId__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "integrationIdNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationStatus__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "integrationStatusNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Location__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "locationNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Subsidiary__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "subsidiaryNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SyncDate__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "syncDateNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SynctoNetSuite__NS" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "synctoNetSuiteNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountNumber" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "accountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "additionalEmailAddresses" }),
        __metadata("design:type", Array)
    ], POSTAccountType.prototype, "additionalEmailAddresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "applicationOrder" }),
        __metadata("design:type", Array)
    ], POSTAccountType.prototype, "applicationOrder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "applyCredit" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "applyCredit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "applyCreditBalance" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "applyCreditBalance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoPay" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "autoPay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "batch" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "batch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billCycleDay" }),
        __metadata("design:type", Number)
    ], POSTAccountType.prototype, "billCycleDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billToContact" }),
        (0, class_transformer_1.Type)(function () { return postaccounttypebilltocontact_1.POSTAccountTypeBillToContact; }),
        __metadata("design:type", postaccounttypebilltocontact_1.POSTAccountTypeBillToContact)
    ], POSTAccountType.prototype, "billToContact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "collect" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "collect", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "communicationProfileId" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "communicationProfileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creditCard" }),
        (0, class_transformer_1.Type)(function () { return postaccounttypecreditcard_1.POSTAccountTypeCreditCard; }),
        __metadata("design:type", postaccounttypecreditcard_1.POSTAccountTypeCreditCard)
    ], POSTAccountType.prototype, "creditCard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creditMemoTemplateId" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "creditMemoTemplateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "crmId" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "crmId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "debitMemoTemplateId" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "debitMemoTemplateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "documentDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTAccountType.prototype, "documentDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hpmCreditCardPaymentMethodId" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "hpmCreditCardPaymentMethodId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoice" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "invoice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceCollect" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "invoiceCollect", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceDeliveryPrefsEmail" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "invoiceDeliveryPrefsEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceDeliveryPrefsPrint" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "invoiceDeliveryPrefsPrint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceTargetDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTAccountType.prototype, "invoiceTargetDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceTemplateId" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "invoiceTemplateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parentId" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "parentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentGateway" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "paymentGateway", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethod" }),
        (0, class_transformer_1.Type)(function () { return postaccounttypepaymentmethod_1.POSTAccountTypePaymentMethod; }),
        __metadata("design:type", postaccounttypepaymentmethod_1.POSTAccountTypePaymentMethod)
    ], POSTAccountType.prototype, "paymentMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentTerm" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "paymentTerm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runBilling" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "runBilling", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "salesRep" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "salesRep", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sequenceSetId" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "sequenceSetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "soldToContact" }),
        (0, class_transformer_1.Type)(function () { return postaccounttypesoldtocontact_1.POSTAccountTypeSoldToContact; }),
        __metadata("design:type", postaccounttypesoldtocontact_1.POSTAccountTypeSoldToContact)
    ], POSTAccountType.prototype, "soldToContact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "soldToSameAsBillTo" }),
        __metadata("design:type", Boolean)
    ], POSTAccountType.prototype, "soldToSameAsBillTo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subscription" }),
        (0, class_transformer_1.Type)(function () { return postaccounttypesubscription_1.POSTAccountTypeSubscription; }),
        __metadata("design:type", postaccounttypesubscription_1.POSTAccountTypeSubscription)
    ], POSTAccountType.prototype, "subscription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tagging" }),
        __metadata("design:type", String)
    ], POSTAccountType.prototype, "tagging", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTAccountType.prototype, "targetDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taxInfo" }),
        (0, class_transformer_1.Type)(function () { return POSTAccountTypeTaxInfo; }),
        __metadata("design:type", POSTAccountTypeTaxInfo)
    ], POSTAccountType.prototype, "taxInfo", void 0);
    return POSTAccountType;
}(utils_1.SpeakeasyBase));
exports.POSTAccountType = POSTAccountType;
