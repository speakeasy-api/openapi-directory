/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Successful response
 */
export class Tokeninfo extends SpeakeasyBase {
  /**
   * Who is the intended audience for this token. In general the same as issued_to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audience" })
  audience?: string;

  /**
   * The email address of the user. Present only if the email scope is present in the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The expiry time of the token, as number of seconds left until expiry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_in" })
  expiresIn?: number;

  /**
   * To whom was the token issued to. In general the same as audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issued_to" })
  issuedTo?: string;

  /**
   * The space separated list of scopes granted to this token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * The obfuscated user id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;

  /**
   * Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verified_email" })
  verifiedEmail?: boolean;
}
