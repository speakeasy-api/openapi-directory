/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Extension {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("avg_rating")
    public Float avgRating;
    public Extension withAvgRating(Float avgRating) {
        this.avgRating = avgRating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extension_id")
    public Long extensionId;
    public Extension withExtensionId(Long extensionId) {
        this.extensionId = extensionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("install_count")
    public Long installCount;
    public Extension withInstallCount(Long installCount) {
        this.installCount = installCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev_avg_rating")
    public Float prevAvgRating;
    public Extension withPrevAvgRating(Float prevAvgRating) {
        this.prevAvgRating = prevAvgRating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev_install_count")
    public Long prevInstallCount;
    public Extension withPrevInstallCount(Long prevInstallCount) {
        this.prevInstallCount = prevInstallCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev_rating_count")
    public Long prevRatingCount;
    public Extension withPrevRatingCount(Long prevRatingCount) {
        this.prevRatingCount = prevRatingCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rating_count")
    public Long ratingCount;
    public Extension withRatingCount(Long ratingCount) {
        this.ratingCount = ratingCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("update_ts")
    public OffsetDateTime updateTs;
    public Extension withUpdateTs(OffsetDateTime updateTs) {
        this.updateTs = updateTs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public Extension withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
