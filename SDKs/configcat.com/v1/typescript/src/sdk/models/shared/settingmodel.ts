/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SettingTypeEnum } from "./settingtypeenum";
import { TagModel } from "./tagmodel";
import { Expose, Type } from "class-transformer";

/**
 * When the creation was successful.
 */
export class SettingModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "configId" })
  configId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "configName" })
  configName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hint" })
  hint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "settingId" })
  settingId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "settingType" })
  settingType?: SettingTypeEnum;

  @SpeakeasyMetadata({ elemType: TagModel })
  @Expose({ name: "tags" })
  @Type(() => TagModel)
  tags?: TagModel[];
}
