// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteEdgeDeploymentStageXAmzTargetEnum
type DeleteEdgeDeploymentStageXAmzTargetEnum string

const (
	DeleteEdgeDeploymentStageXAmzTargetEnumSageMakerDeleteEdgeDeploymentStage DeleteEdgeDeploymentStageXAmzTargetEnum = "SageMaker.DeleteEdgeDeploymentStage"
)

func (e *DeleteEdgeDeploymentStageXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SageMaker.DeleteEdgeDeploymentStage":
		*e = DeleteEdgeDeploymentStageXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteEdgeDeploymentStageXAmzTargetEnum: %s", s)
	}
}

type DeleteEdgeDeploymentStageRequest struct {
	DeleteEdgeDeploymentStageRequest shared.DeleteEdgeDeploymentStageRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       DeleteEdgeDeploymentStageXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteEdgeDeploymentStageResponse struct {
	ContentType string
	// ResourceInUse
	ResourceInUse interface{}
	StatusCode    int
	RawResponse   *http.Response
}
