/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TeamEventStatusAlliance } from "./teameventstatusalliance";
import { TeamEventStatusPlayoff } from "./teameventstatusplayoff";
import { TeamEventStatusRank } from "./teameventstatusrank";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class TeamEventStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "alliance" })
  @Type(() => TeamEventStatusAlliance)
  alliance?: TeamEventStatusAlliance;

  /**
   * An HTML formatted string suitable for display to the user containing the team's alliance pick status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alliance_status_str" })
  allianceStatusStr?: string;

  /**
   * TBA match key for the last match the team played in at this event, or null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_match_key" })
  lastMatchKey?: string;

  /**
   * TBA match key for the next match the team is scheduled to play in at this event, or null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_match_key" })
  nextMatchKey?: string;

  /**
   * An HTML formatted string suitable for display to the user containing the team's overall status summary of the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overall_status_str" })
  overallStatusStr?: string;

  /**
   * Playoff status for this team, may be null if the team did not make playoffs, or playoffs have not begun.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "playoff" })
  @Type(() => TeamEventStatusPlayoff)
  playoff?: TeamEventStatusPlayoff;

  /**
   * An HTML formatter string suitable for display to the user containing the team's playoff status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "playoff_status_str" })
  playoffStatusStr?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "qual" })
  @Type(() => TeamEventStatusRank)
  qual?: TeamEventStatusRank;
}
