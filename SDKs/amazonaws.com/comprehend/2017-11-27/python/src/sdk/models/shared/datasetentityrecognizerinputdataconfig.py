"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasetentityrecognizerannotations as shared_datasetentityrecognizerannotations
from ..shared import datasetentityrecognizerdocuments as shared_datasetentityrecognizerdocuments
from ..shared import datasetentityrecognizerentitylist as shared_datasetentityrecognizerentitylist
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatasetEntityRecognizerInputDataConfig:
    r"""Specifies the format and location of the input data. You must provide either the <code>Annotations</code> parameter or the <code>EntityList</code> parameter."""
    
    documents: shared_datasetentityrecognizerdocuments.DatasetEntityRecognizerDocuments = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Documents') }})  
    annotations: Optional[shared_datasetentityrecognizerannotations.DatasetEntityRecognizerAnnotations] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Annotations'), 'exclude': lambda f: f is None }})  
    entity_list: Optional[shared_datasetentityrecognizerentitylist.DatasetEntityRecognizerEntityList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EntityList'), 'exclude': lambda f: f is None }})  
    