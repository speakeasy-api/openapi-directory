/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CalendarNotification {
    /**
     * The method used to deliver the notification. The possible value is:  
     * - "email" - Notifications are sent via email.  
     * Required when adding a notification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("method")
    public String method;

    public CalendarNotification withMethod(String method) {
        this.method = method;
        return this;
    }
    
    /**
     * The type of notification. Possible values are:  
     * - "eventCreation" - Notification sent when a new event is put on the calendar. 
     * - "eventChange" - Notification sent when an event is changed. 
     * - "eventCancellation" - Notification sent when an event is cancelled. 
     * - "eventResponse" - Notification sent when an attendee responds to the event invitation. 
     * - "agenda" - An agenda with the events of the day (sent out in the morning).  
     * Required when adding a notification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public CalendarNotification withType(String type) {
        this.type = type;
        return this;
    }
    
    public CalendarNotification(){}
}
