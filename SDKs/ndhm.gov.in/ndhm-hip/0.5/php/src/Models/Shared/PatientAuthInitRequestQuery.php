<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PatientAuthInitRequestQuery
{
    /**
     * Subjected to CM specific capability
     * 
     *  1. MOBILE_OTP - for SMS OTP
     *  2. DIRECT - for authentication directly with the patient. e.g. Mobile App, SMS
     *  3. AADHAAR_OTP - for auth using OTP sent to Aadhaar number
     *  4. DEMOGRAPHICS - for auth using demographic verification.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuthenticationModeEnum $authMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('authMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuthenticationModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuthenticationModeEnum $authMode = null;
    
    /**
     * id  of the patient understood by the CM
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * what is the purpose of user auth
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PatientAuthPurposeEnum $purpose
     */
	#[\JMS\Serializer\Annotation\SerializedName('purpose')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PatientAuthPurposeEnum>')]
    public PatientAuthPurposeEnum $purpose;
    
    /**
     * identification of requester
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PatientAuthInitRequestQueryRequester $requester
     */
	#[\JMS\Serializer\Annotation\SerializedName('requester')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PatientAuthInitRequestQueryRequester')]
    public PatientAuthInitRequestQueryRequester $requester;
    
	public function __construct()
	{
		$this->authMode = null;
		$this->id = "";
		$this->purpose = \OpenAPI\OpenAPI\Models\Shared\PatientAuthPurposeEnum::LINK;
		$this->requester = new \OpenAPI\OpenAPI\Models\Shared\PatientAuthInitRequestQueryRequester();
	}
}
