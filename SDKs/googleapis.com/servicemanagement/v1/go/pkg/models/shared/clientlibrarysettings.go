// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ClientLibrarySettingsLaunchStageEnum - Launch stage of this version of the API.
type ClientLibrarySettingsLaunchStageEnum string

const (
	ClientLibrarySettingsLaunchStageEnumLaunchStageUnspecified ClientLibrarySettingsLaunchStageEnum = "LAUNCH_STAGE_UNSPECIFIED"
	ClientLibrarySettingsLaunchStageEnumUnimplemented          ClientLibrarySettingsLaunchStageEnum = "UNIMPLEMENTED"
	ClientLibrarySettingsLaunchStageEnumPrelaunch              ClientLibrarySettingsLaunchStageEnum = "PRELAUNCH"
	ClientLibrarySettingsLaunchStageEnumEarlyAccess            ClientLibrarySettingsLaunchStageEnum = "EARLY_ACCESS"
	ClientLibrarySettingsLaunchStageEnumAlpha                  ClientLibrarySettingsLaunchStageEnum = "ALPHA"
	ClientLibrarySettingsLaunchStageEnumBeta                   ClientLibrarySettingsLaunchStageEnum = "BETA"
	ClientLibrarySettingsLaunchStageEnumGa                     ClientLibrarySettingsLaunchStageEnum = "GA"
	ClientLibrarySettingsLaunchStageEnumDeprecated             ClientLibrarySettingsLaunchStageEnum = "DEPRECATED"
)

func (e *ClientLibrarySettingsLaunchStageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LAUNCH_STAGE_UNSPECIFIED":
		fallthrough
	case "UNIMPLEMENTED":
		fallthrough
	case "PRELAUNCH":
		fallthrough
	case "EARLY_ACCESS":
		fallthrough
	case "ALPHA":
		fallthrough
	case "BETA":
		fallthrough
	case "GA":
		fallthrough
	case "DEPRECATED":
		*e = ClientLibrarySettingsLaunchStageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClientLibrarySettingsLaunchStageEnum: %s", s)
	}
}

// ClientLibrarySettings - Details about how and where to publish client libraries.
type ClientLibrarySettings struct {
	// Settings for C++ client libraries.
	CppSettings *CppSettings `json:"cppSettings,omitempty"`
	// Settings for Dotnet client libraries.
	DotnetSettings *DotnetSettings `json:"dotnetSettings,omitempty"`
	// Settings for Go client libraries.
	GoSettings *GoSettings `json:"goSettings,omitempty"`
	// Settings for Java client libraries.
	JavaSettings *JavaSettings `json:"javaSettings,omitempty"`
	// Launch stage of this version of the API.
	LaunchStage *ClientLibrarySettingsLaunchStageEnum `json:"launchStage,omitempty"`
	// Settings for Node client libraries.
	NodeSettings *NodeSettings `json:"nodeSettings,omitempty"`
	// Settings for Php client libraries.
	PhpSettings *PhpSettings `json:"phpSettings,omitempty"`
	// Settings for Python client libraries.
	PythonSettings *PythonSettings `json:"pythonSettings,omitempty"`
	// When using transport=rest, the client request will encode enums as numbers rather than strings.
	RestNumericEnums *bool `json:"restNumericEnums,omitempty"`
	// Settings for Ruby client libraries.
	RubySettings *RubySettings `json:"rubySettings,omitempty"`
	// Version of the API to apply these settings to. This is the full protobuf package for the API, ending in the version element. Examples: "google.cloud.speech.v1" and "google.spanner.admin.database.v1".
	Version *string `json:"version,omitempty"`
}
