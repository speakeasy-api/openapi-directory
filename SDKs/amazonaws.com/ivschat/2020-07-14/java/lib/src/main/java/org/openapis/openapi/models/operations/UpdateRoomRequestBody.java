/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateRoomRequestBody {
    /**
     * Identifier of the room to be updated. Currently this must be an ARN.
     */
    @JsonProperty("identifier")
    public String identifier;
    public UpdateRoomRequestBody withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }
    
    /**
     * Array of logging-configuration identifiers attached to the room.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loggingConfigurationIdentifiers")
    public String[] loggingConfigurationIdentifiers;
    public UpdateRoomRequestBody withLoggingConfigurationIdentifiers(String[] loggingConfigurationIdentifiers) {
        this.loggingConfigurationIdentifiers = loggingConfigurationIdentifiers;
        return this;
    }
    
    /**
     * The maximum number of characters in a single message. Messages are expected to be UTF-8 encoded and this limit applies specifically to rune/code-point count, not number of bytes. Default: 500.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumMessageLength")
    public Long maximumMessageLength;
    public UpdateRoomRequestBody withMaximumMessageLength(Long maximumMessageLength) {
        this.maximumMessageLength = maximumMessageLength;
        return this;
    }
    
    /**
     * Maximum number of messages per second that can be sent to the room (by all clients). Default: 10.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumMessageRatePerSecond")
    public Long maximumMessageRatePerSecond;
    public UpdateRoomRequestBody withMaximumMessageRatePerSecond(Long maximumMessageRatePerSecond) {
        this.maximumMessageRatePerSecond = maximumMessageRatePerSecond;
        return this;
    }
    
    /**
     * Configuration information for optional message review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messageReviewHandler")
    public UpdateRoomRequestBodyMessageReviewHandler messageReviewHandler;
    public UpdateRoomRequestBody withMessageReviewHandler(UpdateRoomRequestBodyMessageReviewHandler messageReviewHandler) {
        this.messageReviewHandler = messageReviewHandler;
        return this;
    }
    
    /**
     * Room name. The value does not need to be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UpdateRoomRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
}
