// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposUpdateInvitationPathParams struct {
	// invitation_id parameter
	InvitationID int64  `pathParam:"style=simple,explode=false,name=invitation_id"`
	Owner        string `pathParam:"style=simple,explode=false,name=owner"`
	Repo         string `pathParam:"style=simple,explode=false,name=repo"`
}

// ReposUpdateInvitationRequestBodyPermissionsEnum - The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.
type ReposUpdateInvitationRequestBodyPermissionsEnum string

const (
	ReposUpdateInvitationRequestBodyPermissionsEnumRead     ReposUpdateInvitationRequestBodyPermissionsEnum = "read"
	ReposUpdateInvitationRequestBodyPermissionsEnumWrite    ReposUpdateInvitationRequestBodyPermissionsEnum = "write"
	ReposUpdateInvitationRequestBodyPermissionsEnumMaintain ReposUpdateInvitationRequestBodyPermissionsEnum = "maintain"
	ReposUpdateInvitationRequestBodyPermissionsEnumTriage   ReposUpdateInvitationRequestBodyPermissionsEnum = "triage"
	ReposUpdateInvitationRequestBodyPermissionsEnumAdmin    ReposUpdateInvitationRequestBodyPermissionsEnum = "admin"
)

func (e *ReposUpdateInvitationRequestBodyPermissionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		fallthrough
	case "write":
		fallthrough
	case "maintain":
		fallthrough
	case "triage":
		fallthrough
	case "admin":
		*e = ReposUpdateInvitationRequestBodyPermissionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReposUpdateInvitationRequestBodyPermissionsEnum: %s", s)
	}
}

type ReposUpdateInvitationRequestBody struct {
	// The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.
	Permissions *ReposUpdateInvitationRequestBodyPermissionsEnum `json:"permissions,omitempty"`
}

type ReposUpdateInvitationRequest struct {
	PathParams ReposUpdateInvitationPathParams
	Request    *ReposUpdateInvitationRequestBody `request:"mediaType=application/json"`
}

type ReposUpdateInvitationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	RepositoryInvitation *shared.RepositoryInvitation
}
