/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle {
    /**
     * In the event that this policy was deprecated in favor of another policy, the fully qualified namespace(s) of the new policies as they will show in PolicyAPI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deprecatedInFavorOf")
    public String[] deprecatedInFavorOf;

    public ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle withDeprecatedInFavorOf(String[] deprecatedInFavorOf) {
        this.deprecatedInFavorOf = deprecatedInFavorOf;
        return this;
    }
    
    /**
     * Description about current life cycle.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endSupport")
    public GoogleTypeDate endSupport;

    public ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle withEndSupport(GoogleTypeDate endSupport) {
        this.endSupport = endSupport;
        return this;
    }
    
    /**
     * Indicate current life cycle stage of the policy API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyApiLifecycleStage")
    public ChromeCrosDpanelAutosettingsProtoPolicyApiLifecyclePolicyApiLifecycleStageEnum policyApiLifecycleStage;

    public ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle withPolicyApiLifecycleStage(ChromeCrosDpanelAutosettingsProtoPolicyApiLifecyclePolicyApiLifecycleStageEnum policyApiLifecycleStage) {
        this.policyApiLifecycleStage = policyApiLifecycleStage;
        return this;
    }
    
    public ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle(){}
}
