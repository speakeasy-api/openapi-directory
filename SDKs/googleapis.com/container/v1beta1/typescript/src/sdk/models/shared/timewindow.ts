/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MaintenanceExclusionOptions } from "./maintenanceexclusionoptions";
import { Expose, Type } from "class-transformer";

/**
 * Represents an arbitrary window of time.
 */
export class TimeWindow extends SpeakeasyBase {
  /**
   * The time that the window ends. The end time should take place after the start time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * Represents the Maintenance exclusion option.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maintenanceExclusionOptions" })
  @Type(() => MaintenanceExclusionOptions)
  maintenanceExclusionOptions?: MaintenanceExclusionOptions;

  /**
   * The time that the window first starts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;
}
