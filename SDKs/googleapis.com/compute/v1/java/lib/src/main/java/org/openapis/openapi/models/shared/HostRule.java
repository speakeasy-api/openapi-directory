/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HostRule - UrlMaps A host-matching rule for a URL. If matched, will use the named PathMatcher to select the BackendService.
 */
public class HostRule {
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public HostRule withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The list of host patterns to match. They must be valid hostnames with optional port numbers in the format host:port. * matches any string of ([a-z0-9-.]*). In that case, * must be the first character, and if followed by anything, the immediate following character must be either - or .. * based matching is not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hosts")
    public String[] hosts;

    public HostRule withHosts(String[] hosts) {
        this.hosts = hosts;
        return this;
    }
    
    /**
     * The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pathMatcher")
    public String pathMatcher;

    public HostRule withPathMatcher(String pathMatcher) {
        this.pathMatcher = pathMatcher;
        return this;
    }
    
    public HostRule(){}
}
