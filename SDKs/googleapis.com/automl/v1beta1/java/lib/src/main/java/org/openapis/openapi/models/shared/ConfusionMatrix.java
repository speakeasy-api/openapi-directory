/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConfusionMatrix - Confusion matrix of the model running the classification.
 */
public class ConfusionMatrix {
    /**
     * Output only. IDs of the annotation specs used in the confusion matrix. For Tables CLASSIFICATION prediction_type only list of annotation_spec_display_name-s is populated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotationSpecId")
    public String[] annotationSpecId;

    public ConfusionMatrix withAnnotationSpecId(String[] annotationSpecId) {
        this.annotationSpecId = annotationSpecId;
        return this;
    }
    
    /**
     * Output only. Display name of the annotation specs used in the confusion matrix, as they were at the moment of the evaluation. For Tables CLASSIFICATION prediction_type-s, distinct values of the target column at the moment of the model evaluation are populated here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String[] displayName;

    public ConfusionMatrix withDisplayName(String[] displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Output only. Rows in the confusion matrix. The number of rows is equal to the size of `annotation_spec_id`. `row[i].example_count[j]` is the number of examples that have ground truth of the `annotation_spec_id[i]` and are predicted as `annotation_spec_id[j]` by the model being evaluated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row")
    public ClassificationEvaluationMetricsConfusionMatrixRow[] row;

    public ConfusionMatrix withRow(ClassificationEvaluationMetricsConfusionMatrixRow[] row) {
        this.row = row;
        return this;
    }
    
    public ConfusionMatrix(){}
}
