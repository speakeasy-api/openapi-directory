"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import customvisionerror as shared_customvisionerror
from ..shared import tagfilter as shared_tagfilter
from typing import Optional


@dataclasses.dataclass
class QuerySuggestedImageCountFormRequest:
    
    iteration_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'iterationId', 'style': 'form', 'explode': True }})
    r"""IterationId to use for the suggested tags and regions."""  
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    tag_filter: shared_tagfilter.TagFilter = dataclasses.field(metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})
    r"""Model that contains tagIds, threshold and projectType to query by."""  
    

@dataclasses.dataclass
class QuerySuggestedImageCountFormResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    custom_vision_error: Optional[shared_customvisionerror.CustomVisionError] = dataclasses.field(default=None)
    r"""Error response"""  
    query_suggested_image_count_form_200_application_json_object: Optional[dict[str, int]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    