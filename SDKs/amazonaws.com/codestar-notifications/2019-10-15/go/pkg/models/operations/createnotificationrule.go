// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateNotificationRuleRequestBodyDetailTypeEnum - The level of detail to include in the notifications for this resource. <code>BASIC</code> will include only the contents of the event as it would appear in Amazon CloudWatch. <code>FULL</code> will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
type CreateNotificationRuleRequestBodyDetailTypeEnum string

const (
	CreateNotificationRuleRequestBodyDetailTypeEnumBasic CreateNotificationRuleRequestBodyDetailTypeEnum = "BASIC"
	CreateNotificationRuleRequestBodyDetailTypeEnumFull  CreateNotificationRuleRequestBodyDetailTypeEnum = "FULL"
)

func (e *CreateNotificationRuleRequestBodyDetailTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BASIC":
		fallthrough
	case "FULL":
		*e = CreateNotificationRuleRequestBodyDetailTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNotificationRuleRequestBodyDetailTypeEnum: %s", s)
	}
}

// CreateNotificationRuleRequestBodyStatusEnum - The status of the notification rule. The default value is <code>ENABLED</code>. If the status is set to <code>DISABLED</code>, notifications aren't sent for the notification rule.
type CreateNotificationRuleRequestBodyStatusEnum string

const (
	CreateNotificationRuleRequestBodyStatusEnumEnabled  CreateNotificationRuleRequestBodyStatusEnum = "ENABLED"
	CreateNotificationRuleRequestBodyStatusEnumDisabled CreateNotificationRuleRequestBodyStatusEnum = "DISABLED"
)

func (e *CreateNotificationRuleRequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		*e = CreateNotificationRuleRequestBodyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNotificationRuleRequestBodyStatusEnum: %s", s)
	}
}

type CreateNotificationRuleRequestBody struct {
	// <p>A unique, client-generated idempotency token that, when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request with the same parameters is received and a token is included, the request returns information about the initial request that used that token.</p> <note> <p>The Amazon Web Services SDKs prepopulate client request tokens. If you are using an Amazon Web Services SDK, an idempotency token is created for you.</p> </note>
	ClientRequestToken *string `json:"ClientRequestToken,omitempty"`
	// The level of detail to include in the notifications for this resource. <code>BASIC</code> will include only the contents of the event as it would appear in Amazon CloudWatch. <code>FULL</code> will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
	DetailType CreateNotificationRuleRequestBodyDetailTypeEnum `json:"DetailType"`
	// A list of event types associated with this notification rule. For a list of allowed events, see <a>EventTypeSummary</a>.
	EventTypeIds []string `json:"EventTypeIds"`
	// The name for the notification rule. Notification rule names must be unique in your Amazon Web Services account.
	Name string `json:"Name"`
	// The Amazon Resource Name (ARN) of the resource to associate with the notification rule. Supported resources include pipelines in CodePipeline, repositories in CodeCommit, and build projects in CodeBuild.
	Resource string `json:"Resource"`
	// The status of the notification rule. The default value is <code>ENABLED</code>. If the status is set to <code>DISABLED</code>, notifications aren't sent for the notification rule.
	Status *CreateNotificationRuleRequestBodyStatusEnum `json:"Status,omitempty"`
	// A list of tags to apply to this notification rule. Key names cannot start with "<code>aws</code>".
	Tags map[string]string `json:"Tags,omitempty"`
	// A list of Amazon Resource Names (ARNs) of Amazon Simple Notification Service topics and Chatbot clients to associate with the notification rule.
	Targets []shared.Target `json:"Targets"`
}

type CreateNotificationRuleRequest struct {
	RequestBody       CreateNotificationRuleRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateNotificationRuleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	// ConfigurationException
	ConfigurationException interface{}
	ContentType            string
	// Success
	CreateNotificationRuleResult *shared.CreateNotificationRuleResult
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ValidationException
	ValidationException interface{}
}
