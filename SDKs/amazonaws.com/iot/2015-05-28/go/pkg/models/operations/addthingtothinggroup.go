// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type AddThingToThingGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type AddThingToThingGroupRequestBody struct {
	// Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.
	OverrideDynamicGroups *bool `json:"overrideDynamicGroups,omitempty"`
	// The ARN of the thing to add to a group.
	ThingArn *string `json:"thingArn,omitempty"`
	// The ARN of the group to which you are adding a thing.
	ThingGroupArn *string `json:"thingGroupArn,omitempty"`
	// The name of the group to which you are adding a thing.
	ThingGroupName *string `json:"thingGroupName,omitempty"`
	// The name of the thing to add to a group.
	ThingName *string `json:"thingName,omitempty"`
}

type AddThingToThingGroupRequest struct {
	Headers AddThingToThingGroupHeaders
	Request AddThingToThingGroupRequestBody `request:"mediaType=application/json"`
}

type AddThingToThingGroupResponse struct {
	// Success
	AddThingToThingGroupResponse map[string]interface{}
	ContentType                  string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
