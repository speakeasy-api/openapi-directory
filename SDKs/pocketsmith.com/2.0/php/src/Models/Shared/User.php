<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * User - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class User
{
    /**
     * Whether the user wants to see all accounts in their base currency instead of the native account currency.
     * 
     * @var ?bool $alwaysShowBaseCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('always_show_base_currency')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $alwaysShowBaseCurrency = null;
    
    /**
     * The user's total number of available accounts.
     * 
     * @var ?int $availableAccounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('available_accounts')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $availableAccounts = null;
    
    /**
     * The user's total number of available budgets.
     * 
     * @var ?int $availableBudgets
     */
	#[\JMS\Serializer\Annotation\SerializedName('available_budgets')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $availableBudgets = null;
    
    /**
     * The URL to the user's avatar.
     * 
     * @var ?string $avatarUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('avatar_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $avatarUrl = null;
    
    /**
     * The user's base currency.
     * 
     * @var ?string $baseCurrencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('base_currency_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $baseCurrencyCode = null;
    
    /**
     * Whether the user has opted in to beta features.
     * 
     * @var ?bool $betaUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('beta_user')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $betaUser = null;
    
    /**
     * When the user signed up.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The user's email address.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Whether the user's forecast recalculation should be deferred.
     * 
     * @var ?bool $forecastDeferRecalculate
     */
	#[\JMS\Serializer\Annotation\SerializedName('forecast_defer_recalculate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $forecastDeferRecalculate = null;
    
    /**
     * The date that the user's forecast ends.
     * 
     * @var ?string $forecastEndDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('forecast_end_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $forecastEndDate = null;
    
    /**
     * When the user's forecast was last accessed.
     * 
     * @var ?string $forecastLastAccessedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('forecast_last_accessed_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $forecastLastAccessedAt = null;
    
    /**
     * When the user's forecast was last updated.
     * 
     * @var ?string $forecastLastUpdatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('forecast_last_updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $forecastLastUpdatedAt = null;
    
    /**
     * Whether the user's forecast needs to be recalculated.
     * 
     * @var ?bool $forecastNeedsRecalculate
     */
	#[\JMS\Serializer\Annotation\SerializedName('forecast_needs_recalculate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $forecastNeedsRecalculate = null;
    
    /**
     * The date that the user's forecast starts.
     * 
     * @var ?string $forecastStartDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('forecast_start_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $forecastStartDate = null;
    
    /**
     * The unique identifier of the user.
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Whether the user wants to review new transactions, transfer transactions or categorisation.
     * 
     * @var ?bool $isReviewingTransactions
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_reviewing_transactions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isReviewingTransactions = null;
    
    /**
     * When the user last interacted with PocketSmith, via any application or the API.
     * 
     * @var ?string $lastActivityAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_activity_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastActivityAt = null;
    
    /**
     * When the user last logged into PocketSmith.
     * 
     * @var ?string $lastLoggedInAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_logged_in_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastLoggedInAt = null;
    
    /**
     * The user's username.
     * 
     * @var ?string $login
     */
	#[\JMS\Serializer\Annotation\SerializedName('login')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $login = null;
    
    /**
     * The full name of the user, although not all users will have a name set.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The user's time zone.
     * 
     * @var ?string $timeZone
     */
	#[\JMS\Serializer\Annotation\SerializedName('time_zone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timeZone = null;
    
    /**
     * When the user was last updated.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
    /**
     * Whether the user has multiple currencies in use across their account.
     * 
     * @var ?bool $usingMultipleCurrencies
     */
	#[\JMS\Serializer\Annotation\SerializedName('using_multiple_currencies')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $usingMultipleCurrencies = null;
    
    /**
     * The day of the week the user wishes their calendars to start on. A number between 0 and 6, where 0 is Sunday and 6 is Saturday.
     * 
     * @var ?int $weekStartDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('week_start_day')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $weekStartDay = null;
    
	public function __construct()
	{
		$this->alwaysShowBaseCurrency = null;
		$this->availableAccounts = null;
		$this->availableBudgets = null;
		$this->avatarUrl = null;
		$this->baseCurrencyCode = null;
		$this->betaUser = null;
		$this->createdAt = null;
		$this->email = null;
		$this->forecastDeferRecalculate = null;
		$this->forecastEndDate = null;
		$this->forecastLastAccessedAt = null;
		$this->forecastLastUpdatedAt = null;
		$this->forecastNeedsRecalculate = null;
		$this->forecastStartDate = null;
		$this->id = null;
		$this->isReviewingTransactions = null;
		$this->lastActivityAt = null;
		$this->lastLoggedInAt = null;
		$this->login = null;
		$this->name = null;
		$this->timeZone = null;
		$this->updatedAt = null;
		$this->usingMultipleCurrencies = null;
		$this->weekStartDay = null;
	}
}
