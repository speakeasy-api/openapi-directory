/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CorridorSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-KEY",
  })
  apiKey: string;
}

export class CorridorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=countryIso2From",
  })
  countryIso2From: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=countryIso2To",
  })
  countryIso2To: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=firstNameFrom",
  })
  firstNameFrom: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=firstNameTo",
  })
  firstNameTo: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=lastNameFrom",
  })
  lastNameFrom: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=lastNameTo",
  })
  lastNameTo: string;
}

export class CorridorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Two classified names.
   */
  @SpeakeasyMetadata()
  corridorOut?: shared.CorridorOut;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
