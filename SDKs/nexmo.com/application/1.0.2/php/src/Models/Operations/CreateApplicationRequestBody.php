<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateApplicationRequestBody
{
    /**
     * The HTTP method used to make the request to `answer_url`. The default value is `GET`.
     * 
     * @var ?string $answerMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('answer_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $answerMethod = null;
    
    /**
     * The URL where your webhook delivers the Nexmo Call Control Object that governs this call. As soon as your user answers a call Nexmo makes a request to `answer_url`. Required for inbound calls only.
     * 
     * @var ?string $answerUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('answer_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $answerUrl = null;
    
    /**
     * You can find your API key in your [account overview](https://dashboard.nexmo.com/account-overview)
     * 
     * @var string $apiKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $apiKey;
    
    /**
     * You can find your API secret in your [account overview](https://dashboard.nexmo.com/account-overview)
     * 
     * @var string $apiSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $apiSecret;
    
    /**
     * The HTTP method used to send event information to `event_url`. The default value is `POST`. For `voice` type applications only.
     * 
     * @var ?string $eventMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventMethod = null;
    
    /**
     * Nexmo sends event information asynchronously to this URL when status changes for `voice` applications. Always required for `voice` applications.
     * 
     * @var ?string $eventUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventUrl = null;
    
    /**
     * The HTTP method used to send event information to `inbound_url`. The default value is `POST`. For `messages` type applications only.
     * 
     * @var ?string $inboundMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('inbound_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $inboundMethod = null;
    
    /**
     * Nexmo sends a request to this URL when an inbound message is received. Required for `messages` type applications only.
     * 
     * @var ?string $inboundUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('inbound_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $inboundUrl = null;
    
    /**
     * The name of your application.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The HTTP method used to send event information to `status_url`. The default value is `POST`. For `messages` type applications only.
     * 
     * @var ?string $statusMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('status_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusMethod = null;
    
    /**
     * Nexmo sends event information asynchronously to this URL when status changes. Required for `messages` type applications only.
     * 
     * @var ?string $statusUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('status_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusUrl = null;
    
    /**
     * The Nexmo product or products that you access with this application. Currently `voice` and `messages` application types are supported.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateApplicationRequestBodyTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateApplicationRequestBodyTypeEnum>')]
    public CreateApplicationRequestBodyTypeEnum $type;
    
	public function __construct()
	{
		$this->answerMethod = null;
		$this->answerUrl = null;
		$this->apiKey = "";
		$this->apiSecret = "";
		$this->eventMethod = null;
		$this->eventUrl = null;
		$this->inboundMethod = null;
		$this->inboundUrl = null;
		$this->name = "";
		$this->statusMethod = null;
		$this->statusUrl = null;
		$this->type = \OpenAPI\OpenAPI\Models\Operations\CreateApplicationRequestBodyTypeEnum::VOICE;
	}
}
