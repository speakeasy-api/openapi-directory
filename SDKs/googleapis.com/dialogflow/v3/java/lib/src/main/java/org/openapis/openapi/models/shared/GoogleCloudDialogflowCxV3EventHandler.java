/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDialogflowCxV3EventHandler - An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.
 */
public class GoogleCloudDialogflowCxV3EventHandler {
    /**
     * Required. The name of the event to handle.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event")
    public String event;

    public GoogleCloudDialogflowCxV3EventHandler withEvent(String event) {
        this.event = event;
        return this;
    }
    
    /**
     * Output only. The unique identifier of this event handler.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleCloudDialogflowCxV3EventHandler withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The target flow to transition to. Format: `projects//locations//agents//flows/`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetFlow")
    public String targetFlow;

    public GoogleCloudDialogflowCxV3EventHandler withTargetFlow(String targetFlow) {
        this.targetFlow = targetFlow;
        return this;
    }
    
    /**
     * The target page to transition to. Format: `projects//locations//agents//flows//pages/`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetPage")
    public String targetPage;

    public GoogleCloudDialogflowCxV3EventHandler withTargetPage(String targetPage) {
        this.targetPage = targetPage;
        return this;
    }
    
    /**
     * A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerFulfillment")
    public GoogleCloudDialogflowCxV3Fulfillment triggerFulfillment;

    public GoogleCloudDialogflowCxV3EventHandler withTriggerFulfillment(GoogleCloudDialogflowCxV3Fulfillment triggerFulfillment) {
        this.triggerFulfillment = triggerFulfillment;
        return this;
    }
    
    public GoogleCloudDialogflowCxV3EventHandler(){}
}
