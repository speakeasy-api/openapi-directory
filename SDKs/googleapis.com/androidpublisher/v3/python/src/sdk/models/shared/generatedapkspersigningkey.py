"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import generatedassetpackslice as shared_generatedassetpackslice
from ..shared import generatedsplitapk as shared_generatedsplitapk
from ..shared import generatedstandaloneapk as shared_generatedstandaloneapk
from ..shared import generateduniversalapk as shared_generateduniversalapk
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GeneratedApksPerSigningKey:
    r"""Download metadata for split, standalone and universal APKs, as well as asset pack slices, signed with a given key."""
    
    certificate_sha256_hash: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateSha256Hash'), 'exclude': lambda f: f is None }})
    r"""SHA256 hash of the APK signing public key certificate."""  
    generated_asset_pack_slices: Optional[list[shared_generatedassetpackslice.GeneratedAssetPackSlice]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('generatedAssetPackSlices'), 'exclude': lambda f: f is None }})
    r"""List of asset pack slices which will be served for this app bundle, signed with a key corresponding to certificate_sha256_hash."""  
    generated_split_apks: Optional[list[shared_generatedsplitapk.GeneratedSplitApk]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('generatedSplitApks'), 'exclude': lambda f: f is None }})
    r"""List of generated split APKs, signed with a key corresponding to certificate_sha256_hash."""  
    generated_standalone_apks: Optional[list[shared_generatedstandaloneapk.GeneratedStandaloneApk]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('generatedStandaloneApks'), 'exclude': lambda f: f is None }})
    r"""List of generated standalone APKs, signed with a key corresponding to certificate_sha256_hash."""  
    generated_universal_apk: Optional[shared_generateduniversalapk.GeneratedUniversalApk] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('generatedUniversalApk'), 'exclude': lambda f: f is None }})
    r"""Download metadata for a universal APK."""  
    