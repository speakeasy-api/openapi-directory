/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. A state message specifying the overall job state.
 */
export enum JobStatusStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Pending = "PENDING",
  SetupDone = "SETUP_DONE",
  Running = "RUNNING",
  CancelPending = "CANCEL_PENDING",
  CancelStarted = "CANCEL_STARTED",
  Cancelled = "CANCELLED",
  Done = "DONE",
  Error = "ERROR",
  AttemptFailure = "ATTEMPT_FAILURE",
}

/**
 * Output only. Additional state information, which includes status reported by the agent.
 */
export enum JobStatusSubstateEnum {
  Unspecified = "UNSPECIFIED",
  Submitted = "SUBMITTED",
  Queued = "QUEUED",
  StaleStatus = "STALE_STATUS",
}

/**
 * Dataproc job status.
 */
export class JobStatus extends SpeakeasyBase {
  /**
   * Optional. Output only. Job state details, such as an error description if the state is ERROR.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: string;

  /**
   * Output only. A state message specifying the overall job state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: JobStatusStateEnum;

  /**
   * Output only. The time when this state was entered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateStartTime" })
  stateStartTime?: string;

  /**
   * Output only. Additional state information, which includes status reported by the agent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "substate" })
  substate?: JobStatusSubstateEnum;
}
