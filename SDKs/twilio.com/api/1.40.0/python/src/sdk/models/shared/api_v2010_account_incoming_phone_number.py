"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import incoming_phone_number_enum_address_requirement_enum as shared_incoming_phone_number_enum_address_requirement_enum
from ..shared import incoming_phone_number_enum_emergency_address_status_enum as shared_incoming_phone_number_enum_emergency_address_status_enum
from ..shared import incoming_phone_number_enum_emergency_status_enum as shared_incoming_phone_number_enum_emergency_status_enum
from ..shared import incoming_phone_number_enum_voice_receive_mode_enum as shared_incoming_phone_number_enum_voice_receive_mode_enum
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIV2010AccountIncomingPhoneNumberCapabilities:
    r"""The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`."""
    
    fax: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fax'), 'exclude': lambda f: f is None }})  
    mms: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mms'), 'exclude': lambda f: f is None }})  
    sms: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms'), 'exclude': lambda f: f is None }})  
    voice: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice'), 'exclude': lambda f: f is None }})  
    
class APIV2010AccountIncomingPhoneNumberSmsFallbackMethodEnum(str, Enum):
    r"""The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class APIV2010AccountIncomingPhoneNumberSmsMethodEnum(str, Enum):
    r"""The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class APIV2010AccountIncomingPhoneNumberStatusCallbackMethodEnum(str, Enum):
    r"""The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class APIV2010AccountIncomingPhoneNumberVoiceFallbackMethodEnum(str, Enum):
    r"""The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class APIV2010AccountIncomingPhoneNumberVoiceMethodEnum(str, Enum):
    r"""The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIV2010AccountIncomingPhoneNumber:
    r"""Created"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created this IncomingPhoneNumber resource."""  
    address_requirements: Optional[shared_incoming_phone_number_enum_address_requirement_enum.IncomingPhoneNumberEnumAddressRequirementEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address_requirements'), 'exclude': lambda f: f is None }})  
    address_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Address resource associated with the phone number."""  
    api_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_version'), 'exclude': lambda f: f is None }})
    r"""The API version used to start a new TwiML session."""  
    beta: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beta'), 'exclude': lambda f: f is None }})
    r"""Whether the phone number is new to the Twilio platform. Can be: `true` or `false`."""  
    bundle_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bundle_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations."""  
    capabilities: Optional[APIV2010AccountIncomingPhoneNumberCapabilities] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capabilities'), 'exclude': lambda f: f is None }})
    r"""The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`."""  
    date_created: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_created'), 'exclude': lambda f: f is None }})
    r"""The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format."""  
    date_updated: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_updated'), 'exclude': lambda f: f is None }})
    r"""The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format."""  
    emergency_address_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emergency_address_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the emergency address configuration that we use for emergency calling from this phone number."""  
    emergency_address_status: Optional[shared_incoming_phone_number_enum_emergency_address_status_enum.IncomingPhoneNumberEnumEmergencyAddressStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emergency_address_status'), 'exclude': lambda f: f is None }})  
    emergency_status: Optional[shared_incoming_phone_number_enum_emergency_status_enum.IncomingPhoneNumberEnumEmergencyStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emergency_status'), 'exclude': lambda f: f is None }})  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('friendly_name'), 'exclude': lambda f: f is None }})
    r"""The string that you assigned to describe the resource."""  
    identity_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identity_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Identity resource that we associate with the phone number. Some regions require an Identity to meet local regulations."""  
    origin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin'), 'exclude': lambda f: f is None }})
    r"""The phone number's origin. `twilio` identifies Twilio-owned phone numbers and `hosted` identifies hosted phone numbers."""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_number'), 'exclude': lambda f: f is None }})
    r"""The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number."""  
    sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sid'), 'exclude': lambda f: f is None }})
    r"""The unique string that that we created to identify this IncomingPhoneNumber resource."""  
    sms_application_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_application_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the application that handles SMS messages sent to the phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application."""  
    sms_fallback_method: Optional[APIV2010AccountIncomingPhoneNumberSmsFallbackMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_fallback_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`."""  
    sms_fallback_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_fallback_url'), 'exclude': lambda f: f is None }})
    r"""The URL that we call when an error occurs while retrieving or executing the TwiML from `sms_url`."""  
    sms_method: Optional[APIV2010AccountIncomingPhoneNumberSmsMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`."""  
    sms_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_url'), 'exclude': lambda f: f is None }})
    r"""The URL we call when the phone number receives an incoming SMS message."""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    status_callback: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_callback'), 'exclude': lambda f: f is None }})
    r"""The URL we call using the `status_callback_method` to send status information to your application."""  
    status_callback_method: Optional[APIV2010AccountIncomingPhoneNumberStatusCallbackMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_callback_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`."""  
    trunk_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trunk_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Trunk that handles calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa."""  
    uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})
    r"""The URI of the resource, relative to `https://api.twilio.com`."""  
    voice_application_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_application_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the application that handles calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa."""  
    voice_caller_id_lookup: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_caller_id_lookup'), 'exclude': lambda f: f is None }})
    r"""Whether we look up the caller's caller-ID name from the CNAM database ($0.01 per look up). Can be: `true` or `false`."""  
    voice_fallback_method: Optional[APIV2010AccountIncomingPhoneNumberVoiceFallbackMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_fallback_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`."""  
    voice_fallback_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_fallback_url'), 'exclude': lambda f: f is None }})
    r"""The URL that we call when an error occurs retrieving or executing the TwiML requested by `url`."""  
    voice_method: Optional[APIV2010AccountIncomingPhoneNumberVoiceMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`."""  
    voice_receive_mode: Optional[shared_incoming_phone_number_enum_voice_receive_mode_enum.IncomingPhoneNumberEnumVoiceReceiveModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_receive_mode'), 'exclude': lambda f: f is None }})  
    voice_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_url'), 'exclude': lambda f: f is None }})
    r"""The URL we call when the phone number receives a call. The `voice_url` will not be used if a `voice_application_sid` or a `trunk_sid` is set."""  
    