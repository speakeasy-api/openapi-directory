// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ViewerCertificateCertificateSourceEnum - <note> <p>This field is deprecated. You can use one of the following: <code>[ACMCertificateArn</code>, <code>IAMCertificateId</code>, or <code>CloudFrontDefaultCertificate]</code>.</p> </note>
type ViewerCertificateCertificateSourceEnum string

const (
	ViewerCertificateCertificateSourceEnumCloudfront ViewerCertificateCertificateSourceEnum = "cloudfront"
	ViewerCertificateCertificateSourceEnumIam        ViewerCertificateCertificateSourceEnum = "iam"
	ViewerCertificateCertificateSourceEnumAcm        ViewerCertificateCertificateSourceEnum = "acm"
)

func (e ViewerCertificateCertificateSourceEnum) ToPointer() *ViewerCertificateCertificateSourceEnum {
	return &e
}

func (e *ViewerCertificateCertificateSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cloudfront":
		fallthrough
	case "iam":
		fallthrough
	case "acm":
		*e = ViewerCertificateCertificateSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ViewerCertificateCertificateSourceEnum: %v", v)
	}
}

// ViewerCertificate - <p>A complex type that specifies the following:</p> <ul> <li> <p>Which SSL/TLS certificate to use when viewers request objects using HTTPS</p> </li> <li> <p>Whether you want CloudFront to use dedicated IP addresses or SNI when you're using alternate domain names in your object names</p> </li> <li> <p>The minimum protocol version that you want CloudFront to use when communicating with viewers</p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html">Using an HTTPS Connection to Access Your Objects</a> in the <i>Amazon Amazon CloudFront Developer Guide</i>.</p>
type ViewerCertificate struct {
	ACMCertificateArn            *string
	Certificate                  *string
	CertificateSource            *ViewerCertificateCertificateSourceEnum
	CloudFrontDefaultCertificate *bool
	IAMCertificateID             *string
	MinimumProtocolVersion       *MinimumProtocolVersionEnum
	SSLSupportMethod             *SSLSupportMethodEnum
}
