/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataPreProcessingConfiguration } from "./datapreprocessingconfiguration";
import { LabelsInputConfiguration } from "./labelsinputconfiguration";
import { ModelStatusEnum } from "./modelstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeModelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DataPreProcessingConfiguration" })
  @Type(() => DataPreProcessingConfiguration)
  dataPreProcessingConfiguration?: DataPreProcessingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "DatasetArn" })
  datasetArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatasetName" })
  datasetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationDataEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  evaluationDataEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationDataStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  evaluationDataStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FailedReason" })
  failedReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LabelsInputConfiguration" })
  @Type(() => LabelsInputConfiguration)
  labelsInputConfiguration?: LabelsInputConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelArn" })
  modelArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelMetrics" })
  modelMetrics?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelName" })
  modelName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OffCondition" })
  offCondition?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Schema" })
  schema?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerSideKmsKeyId" })
  serverSideKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ModelStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingDataEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainingDataEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingDataStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainingDataStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingExecutionEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainingExecutionEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingExecutionStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainingExecutionStartTime?: Date;
}
