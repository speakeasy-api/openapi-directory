// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DevicesByEnergyGetMeterEnergyTypeEnum
type DevicesByEnergyGetMeterEnergyTypeEnum string

const (
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeUnknown       DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeUnknown"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeElectricity   DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeElectricity"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeWater         DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeWater"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeGas           DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeGas"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeHeat          DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeHeat"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeHca           DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeHCA"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeAllMeters     DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeAllMeters"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeTemperature   DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeTemperature"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeMBusGateway   DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeMBusGateway"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeRs485Gateway  DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeRS485Gateway"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeCustomDevice  DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeCustomDevice"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeCompressedAir DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeCompressedAir"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeSolarLog      DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeSolarLog"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeVirtualMeter  DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeVirtualMeter"
	DevicesByEnergyGetMeterEnergyTypeEnumMeterTypeWmBusGateway  DevicesByEnergyGetMeterEnergyTypeEnum = "MeterTypeWMBusGateway"
)

func (e *DevicesByEnergyGetMeterEnergyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MeterTypeUnknown":
		fallthrough
	case "MeterTypeElectricity":
		fallthrough
	case "MeterTypeWater":
		fallthrough
	case "MeterTypeGas":
		fallthrough
	case "MeterTypeHeat":
		fallthrough
	case "MeterTypeHCA":
		fallthrough
	case "MeterTypeAllMeters":
		fallthrough
	case "MeterTypeTemperature":
		fallthrough
	case "MeterTypeMBusGateway":
		fallthrough
	case "MeterTypeRS485Gateway":
		fallthrough
	case "MeterTypeCustomDevice":
		fallthrough
	case "MeterTypeCompressedAir":
		fallthrough
	case "MeterTypeSolarLog":
		fallthrough
	case "MeterTypeVirtualMeter":
		fallthrough
	case "MeterTypeWMBusGateway":
		*e = DevicesByEnergyGetMeterEnergyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DevicesByEnergyGetMeterEnergyTypeEnum: %s", s)
	}
}

type DevicesByEnergyGetRequest struct {
	MeterEnergyType DevicesByEnergyGetMeterEnergyTypeEnum `queryParam:"style=form,explode=true,name=meterEnergyType"`
}

type DevicesByEnergyGetResponse struct {
	Body        []byte
	ContentType string
	// OK
	Devices     []shared.Device
	StatusCode  int
	RawResponse *http.Response
}
