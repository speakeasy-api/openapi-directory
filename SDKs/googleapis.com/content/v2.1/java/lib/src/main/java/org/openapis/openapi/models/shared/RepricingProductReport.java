/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RepricingProductReport - Resource that represents a daily Repricing product report. Each report contains stats for a single type of Repricing rule for a single product on a given day. If there are multiple rules of the same type for the product on that day, the report lists all the rules by rule ids, combines the stats, and paginates the results by date. To retrieve the stats of a particular rule, provide the rule_id in the request.
 */
public class RepricingProductReport {
    /**
     * Total count of Repricer applications. This value captures how many times the rule of this type was applied to this product during this reporting period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationCount")
    public String applicationCount;
    public RepricingProductReport withApplicationCount(String applicationCount) {
        this.applicationCount = applicationCount;
        return this;
    }
    
    /**
     * Stats specific to buybox winning rules for product report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyboxWinningProductStats")
    public RepricingProductReportBuyboxWinningProductStats buyboxWinningProductStats;
    public RepricingProductReport withBuyboxWinningProductStats(RepricingProductReportBuyboxWinningProductStats buyboxWinningProductStats) {
        this.buyboxWinningProductStats = buyboxWinningProductStats;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date")
    public Date date;
    public RepricingProductReport withDate(Date date) {
        this.date = date;
        return this;
    }
    
    /**
     * The price represented as a number and currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("highWatermark")
    public PriceAmount highWatermark;
    public RepricingProductReport withHighWatermark(PriceAmount highWatermark) {
        this.highWatermark = highWatermark;
        return this;
    }
    
    /**
     * List of all reasons the rule did not apply to the product during the specified reporting period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inapplicabilityDetails")
    public InapplicabilityDetails[] inapplicabilityDetails;
    public RepricingProductReport withInapplicabilityDetails(InapplicabilityDetails[] inapplicabilityDetails) {
        this.inapplicabilityDetails = inapplicabilityDetails;
        return this;
    }
    
    /**
     * The price represented as a number and currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lowWatermark")
    public PriceAmount lowWatermark;
    public RepricingProductReport withLowWatermark(PriceAmount lowWatermark) {
        this.lowWatermark = lowWatermark;
        return this;
    }
    
    /**
     * Total unit count of impacted products ordered while the rule was active on the date of the report. This count includes all orders that were started while the rule was active, even if the rule was no longer active when the order was completed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderItemCount")
    public Integer orderItemCount;
    public RepricingProductReport withOrderItemCount(Integer orderItemCount) {
        this.orderItemCount = orderItemCount;
        return this;
    }
    
    /**
     * Ids of the Repricing rule for this report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleIds")
    public String[] ruleIds;
    public RepricingProductReport withRuleIds(String[] ruleIds) {
        this.ruleIds = ruleIds;
        return this;
    }
    
    /**
     * The price represented as a number and currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalGmv")
    public PriceAmount totalGmv;
    public RepricingProductReport withTotalGmv(PriceAmount totalGmv) {
        this.totalGmv = totalGmv;
        return this;
    }
    
    /**
     * Type of the rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public RepricingProductReportTypeEnum type;
    public RepricingProductReport withType(RepricingProductReportTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
