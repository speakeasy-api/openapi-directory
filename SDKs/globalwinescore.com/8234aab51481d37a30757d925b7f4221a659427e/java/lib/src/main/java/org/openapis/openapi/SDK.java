/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * 
 * The GlobalWineScore API is designed as a RESTful API, providing several resources and methods depending on your usage plan.
 * 
 * For further information please refer to &lt;a href="https://www.globalwinescore.com/plans" target="_blank"&gt;our plans&lt;/a&gt;.
 * 
 * # Authentication
 * The API uses token-based authentication.
 * In order to authenticate your requests, you need to include a specific header in each of your requests:
 * 
 * ```
 * Authorization: Token {YOUR-API-TOKEN}
 * ```
 * The word &lt;b&gt;Token&lt;/b&gt; must be written. Your requests must also use the &lt;b&gt;HTTPS&lt;/b&gt; protocol.
 * 
 * If you don't have a token yet, you need to apply for one [here](https://www.globalwinescore.com/api/).
 * 
 * Your personal token can be found under the &lt;a href="https://www.globalwinescore.com/account/api/" target="_blank"&gt;My account &gt; API&lt;/a&gt; section of the GlobalWineScore website
 * 
 * # Format
 * The API provides several rendering formats which you can control using the `Accept` header or `format` query parameter.
 * 
 * - JSON (default): no header or `Accept: application/json`
 * - XML: `Accept: application/xml`
 * # Rate limiting
 * For API requests, the rate limit allows for up to 10 requests per minute.
 * 
 * # Error handling
 * 
 * Whether a request succeeded is indicated by the HTTP status code. A 2xx status code indicates success, whereas a 4xx status code indicates failure.
 * 
 * When a request fails, the response body is still JSON, but always contains a `detail` field with a description of the error, which you can inspect for debugging.
 * 
 * For example, trying to access the API without proper authentication will return code 403 along with the message:
 * 
 * `{"detail": "Authentication credentials were not provided."}`
 * 
 * Found a bug ? send us an email at &lt;a href="mailto:api@globalwinescore.com"&gt;api@globalwinescore.com&lt;/a&gt;
 * 
 * # Ordering
 * 
 * At the moment, GlobalWineScores may be sorted by `date` and `score`. Use "-"
 * to sort in descending order.
 * 
 * # Continuous synchronization
 * 
 * If you need to synchronize your database with our API, you can query our API using `?ordering=-date` to get the newest scores first, which means you won't have to crawl the whole catalog every time :-)
 * 
 * # Quick search interface
 * If you need to search our catalog (e.g. to align it with yours), we're providing you with a handy interface accessible here: &lt;a href="https://api.globalwinescore.com/search/" target="_blank"&gt;https://api.globalwinescore.com/search/&lt;/a&gt;
 * 
 * You need to be logged in (email/password) to access this page, but other than that you can share it with anyone in your team and start searching right away !
 * 
 * # Resources
 * 
 * The details about available endpoints can be found below.
 * You can click on each endpoint to find information about their parameters.
 * 
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        "https://api.globalwinescore.com",
	};
  	
    public GlobalWineScore globalWineScore;	

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private org.openapis.openapi.models.shared.Security _security;
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		private org.openapis.openapi.models.shared.Security security;
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Configures the SDK to use the provided security details.
		 * @param security The security details to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setSecurity(org.openapis.openapi.models.shared.Security security) {
			this.security = security;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.security, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, org.openapis.openapi.models.shared.Security security, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (security != null) {
			this._security = security;
			this._securityClient = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, this._security);
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}

		if (this._serverUrl.endsWith("/")) {
            this._serverUrl = this._serverUrl.substring(0, this._serverUrl.length() - 1);
        }

		
		
		this.globalWineScore = new GlobalWineScore(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
	}
}