// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkBluetoothClientsPathParams struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

type GetNetworkBluetoothClientsQueryParams struct {
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	// Include the connectivity history for this client
	IncludeConnectivityHistory *bool `queryParam:"style=form,explode=true,name=includeConnectivityHistory"`
	// The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
	// The beginning of the timespan for the data. The maximum lookback period is 7 days from today.
	T0 *string `queryParam:"style=form,explode=true,name=t0"`
	// The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.
	Timespan *float32 `queryParam:"style=form,explode=true,name=timespan"`
}

type GetNetworkBluetoothClientsRequest struct {
	PathParams  GetNetworkBluetoothClientsPathParams
	QueryParams GetNetworkBluetoothClientsQueryParams
}

type GetNetworkBluetoothClientsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkBluetoothClients200ApplicationJSONObjects []map[string]interface{}
}
