/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DeleteAChatbotMessage200ApplicationJSON - **HTTP Status Code:** `200` **OK**&lt;br&gt;
 * Message deleted.
 */
public class DeleteAChatbotMessage200ApplicationJSON {
    /**
     * Unique identifier of the message that was deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_id")
    public String messageId;
    public DeleteAChatbotMessage200ApplicationJSON withMessageId(String messageId) {
        this.messageId = messageId;
        return this;
    }
    
    /**
     * The BotJID of the Chatbot app. It can be found in the Chat Subscription Section on the Features page of your App Dashboard
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("robot_jid")
    public String robotJid;
    public DeleteAChatbotMessage200ApplicationJSON withRobotJid(String robotJid) {
        this.robotJid = robotJid;
        return this;
    }
    
    /**
     * The date and time at which the message was deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sent_time")
    public String sentTime;
    public DeleteAChatbotMessage200ApplicationJSON withSentTime(String sentTime) {
        this.sentTime = sentTime;
        return this;
    }
    
    /**
     * The JID of the Channel or User to whom the message was sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to_jid")
    public String toJid;
    public DeleteAChatbotMessage200ApplicationJSON withToJid(String toJid) {
        this.toJid = toJid;
        return this;
    }
    
    /**
     *  The UserJID of the user on whose behalf the message was sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_jid")
    public String userJid;
    public DeleteAChatbotMessage200ApplicationJSON withUserJid(String userJid) {
        this.userJid = userJid;
        return this;
    }
    
}
