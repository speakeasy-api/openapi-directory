/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MagneticStoreWriteProperties } from "./magneticstorewriteproperties";
import { RetentionProperties } from "./retentionproperties";
import { TableStatusEnum } from "./tablestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a database table in Timestream. Tables contain one or more related time series. You can modify the retention duration of the memory store and the magnetic store for a table.
 */
export class Table extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseName" })
  databaseName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MagneticStoreWriteProperties" })
  @Type(() => MagneticStoreWriteProperties)
  magneticStoreWriteProperties?: MagneticStoreWriteProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "RetentionProperties" })
  @Type(() => RetentionProperties)
  retentionProperties?: RetentionProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableStatus" })
  tableStatus?: TableStatusEnum;
}
