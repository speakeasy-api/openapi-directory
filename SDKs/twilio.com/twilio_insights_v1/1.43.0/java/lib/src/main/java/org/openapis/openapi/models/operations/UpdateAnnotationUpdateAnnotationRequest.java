/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class UpdateAnnotationUpdateAnnotationRequest {
    @SpeakeasyMetadata("form:name=AnsweredBy")
    public org.openapis.openapi.models.shared.AnnotationEnumAnsweredByEnum answeredBy;

    public UpdateAnnotationUpdateAnnotationRequest withAnsweredBy(org.openapis.openapi.models.shared.AnnotationEnumAnsweredByEnum answeredBy) {
        this.answeredBy = answeredBy;
        return this;
    }
    
    /**
     * Specify the call score. This is of type integer. Use a range of 1-5 to indicate the call experience score, with the following mapping as a reference for rating the call [5: Excellent, 4: Good, 3 : Fair, 2 : Poor, 1: Bad].
     */
    @SpeakeasyMetadata("form:name=CallScore")
    public Long callScore;

    public UpdateAnnotationUpdateAnnotationRequest withCallScore(Long callScore) {
        this.callScore = callScore;
        return this;
    }
    
    /**
     * Specify any comments pertaining to the call. This of type string with a max limit of 100 characters. Twilio does not treat this field as PII, so don\u2019t put any PII in here.
     */
    @SpeakeasyMetadata("form:name=Comment")
    public String comment;

    public UpdateAnnotationUpdateAnnotationRequest withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=ConnectivityIssue")
    public org.openapis.openapi.models.shared.AnnotationEnumConnectivityIssueEnum connectivityIssue;

    public UpdateAnnotationUpdateAnnotationRequest withConnectivityIssue(org.openapis.openapi.models.shared.AnnotationEnumConnectivityIssueEnum connectivityIssue) {
        this.connectivityIssue = connectivityIssue;
        return this;
    }
    
    /**
     * Associate this call with an incident or support ticket. This is of type string with a max limit of 100 characters. Twilio does not treat this field as PII, so don\u2019t put any PII in here.
     */
    @SpeakeasyMetadata("form:name=Incident")
    public String incident;

    public UpdateAnnotationUpdateAnnotationRequest withIncident(String incident) {
        this.incident = incident;
        return this;
    }
    
    /**
     * Specify if the call had any subjective quality issues. Possible values, one or more of:  no_quality_issue, low_volume, choppy_robotic, echo, dtmf, latency, owa, static_noise. Use comma separated values to indicate multiple quality issues for the same call
     */
    @SpeakeasyMetadata("form:name=QualityIssues")
    public String qualityIssues;

    public UpdateAnnotationUpdateAnnotationRequest withQualityIssues(String qualityIssues) {
        this.qualityIssues = qualityIssues;
        return this;
    }
    
    /**
     * Specify if the call was a spam call. Use this to provide feedback on whether calls placed from your account were marked as spam, or if inbound calls received by your account were unwanted spam. Is of type Boolean: true, false. Use true if the call was a spam call.
     */
    @SpeakeasyMetadata("form:name=Spam")
    public Boolean spam;

    public UpdateAnnotationUpdateAnnotationRequest withSpam(Boolean spam) {
        this.spam = spam;
        return this;
    }
    
    public UpdateAnnotationUpdateAnnotationRequest(){}
}
