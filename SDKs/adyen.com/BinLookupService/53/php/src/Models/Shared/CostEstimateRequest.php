<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CostEstimateRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $amount;
    
	#[\JMS\Serializer\Annotation\SerializedName('assumptions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CostEstimateAssumptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CostEstimateAssumptions $assumptions = null;
    
    /**
     * The card number (4-19 characters) for PCI compliant use cases. Do not use any separators.
     * 
     * 
     * > Either the `cardNumber` or `encryptedCardNumber` field must be provided in a payment request.
     * 
     * @var ?string $cardNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardNumber = null;
    
    /**
     * Encrypted data that stores card information for non PCI-compliant use cases. The encrypted data must be created with the Checkout Card Component or Secured Fields Component, and must contain the `encryptedCardNumber` field.
     * 
     * 
     * > Either the `cardNumber` or `encryptedCardNumber` field must be provided in a payment request.
     * 
     * @var ?string $encryptedCardNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptedCardNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $encryptedCardNumber = null;
    
    /**
     * The merchant account identifier you want to process the (transaction) request with.
     * 
     * @var string $merchantAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAccount;
    
	#[\JMS\Serializer\Annotation\SerializedName('merchantDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MerchantDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MerchantDetails $merchantDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurring')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Recurring')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Recurring $recurring = null;
    
    /**
     * The `recurringDetailReference` you want to use for this cost estimate. The value `LATEST` can be used to select the most recently stored recurring detail.
     * 
     * @var ?string $selectedRecurringDetailReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectedRecurringDetailReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selectedRecurringDetailReference = null;
    
    /**
     * Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
     * 
     * For the web service API, Adyen assumes Ecommerce shopper interaction by default.
     * 
     * This field has the following possible values:
     * * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
     * * `ContAuth` - Card on file and/or subscription transactions, where the card holder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
     * * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
     * * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CostEstimateRequestShopperInteractionEnum $shopperInteraction
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperInteraction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CostEstimateRequestShopperInteractionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CostEstimateRequestShopperInteractionEnum $shopperInteraction = null;
    
    /**
     * Required for recurring payments. 
     * 
     * Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
     * > Your reference must not include personally identifiable information (PII), for example name or email address.
     * 
     * @var ?string $shopperReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shopperReference = null;
    
	public function __construct()
	{
		$this->amount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->assumptions = null;
		$this->cardNumber = null;
		$this->encryptedCardNumber = null;
		$this->merchantAccount = "";
		$this->merchantDetails = null;
		$this->recurring = null;
		$this->selectedRecurringDetailReference = null;
		$this->shopperInteraction = null;
		$this->shopperReference = null;
	}
}
