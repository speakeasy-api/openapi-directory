/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Returns the objects or data listed below if successful. Otherwise, returns an error.
 */
export class GetTrailStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "IsLogging" })
  isLogging?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestCloudWatchLogsDeliveryError" })
  latestCloudWatchLogsDeliveryError?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestCloudWatchLogsDeliveryTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestCloudWatchLogsDeliveryTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestDeliveryAttemptSucceeded" })
  latestDeliveryAttemptSucceeded?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestDeliveryAttemptTime" })
  latestDeliveryAttemptTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestDeliveryError" })
  latestDeliveryError?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestDeliveryTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestDeliveryTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestDigestDeliveryError" })
  latestDigestDeliveryError?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestDigestDeliveryTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestDigestDeliveryTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestNotificationAttemptSucceeded" })
  latestNotificationAttemptSucceeded?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestNotificationAttemptTime" })
  latestNotificationAttemptTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestNotificationError" })
  latestNotificationError?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestNotificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestNotificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StartLoggingTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startLoggingTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StopLoggingTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stopLoggingTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeLoggingStarted" })
  timeLoggingStarted?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeLoggingStopped" })
  timeLoggingStopped?: string;
}
