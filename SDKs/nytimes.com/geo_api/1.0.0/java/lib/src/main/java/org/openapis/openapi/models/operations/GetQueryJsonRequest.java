/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetQueryJsonRequest {
    /**
     * Start date to end date in the following format- YYYY-MM-DD:YYYY-MM-DD
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=date_range")
    public String dateRange;
    public GetQueryJsonRequest withDateRange(String dateRange) {
        this.dateRange = dateRange;
        return this;
    }
    
    /**
     * The elevation of the specified place, in meters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=elevation")
    public Long elevation;
    public GetQueryJsonRequest withElevation(Long elevation) {
        this.elevation = elevation;
        return this;
    }
    
    /**
     * When facets is set to 1, a count of all facets will be included in the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=facets")
    public GetQueryJsonFacetsEnum facets;
    public GetQueryJsonRequest withFacets(GetQueryJsonFacetsEnum facets) {
        this.facets = facets;
        return this;
    }
    
    /**
     * Filters search results based on the facets provided.  For more information on the values you can filter on, see Facets.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public String filter;
    public GetQueryJsonRequest withFilter(String filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * The latitude of the specified place.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=latitude")
    public String latitude;
    public GetQueryJsonRequest withLatitude(String latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * Limits the number of results returned
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public GetQueryJsonRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The longitude of the specified place.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=longitude")
    public String longitude;
    public GetQueryJsonRequest withLongitude(String longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * A displayable name for the specified place.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;
    public GetQueryJsonRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Sets the starting point of the result set
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Long offset;
    public GetQueryJsonRequest withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Search keywords to perform a text search on the fields: web_description, event_name and venue_name. 'AND' searches can be performed by wrapping query terms in quotes. If you do not specify a query, all results will be returned.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query")
    public String query;
    public GetQueryJsonRequest withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * Sorts your results on the fields specified. &lt;br/&gt; `sort_value1+[asc | desc],sort_value2+[asc|desc],[...]`&lt;br/&gt; Appending +asc to a facet or response will sort results on that value in ascending order. Appending +desc to a facet or response  will sort results in descending order. You can sort on multiple fields. You can sort on any facet. For the list of responses you can sort on, see the Sortable Field column in the Response table. &lt;br/&gt;&lt;br/&gt;If you are doing a spatial search with the ll parameter, you can also sort by the distance from the center of the search: dist+[asc | desc] &lt;br/&gt; **Note:** either +asc or +desc is required when using the sort parameter.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GetQueryJsonRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Along with ne, forms a bounded box using the longitude and latitude coordinates specified as the southwest corner. The search results are limited to the resulting box. Two float values, separated by a comma `latitude,longitude` &lt;br/&gt; The ne parameter is required to use this parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sw")
    public String sw;
    public GetQueryJsonRequest withSw(String sw) {
        this.sw = sw;
        return this;
    }
    
}
