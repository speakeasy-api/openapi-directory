"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlesecuritysafebrowsingv4checksum as shared_googlesecuritysafebrowsingv4checksum
from ..shared import googlesecuritysafebrowsingv4threatentryset as shared_googlesecuritysafebrowsingv4threatentryset
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponsePlatformTypeEnum(str, Enum):
    r"""The platform type for which data is returned."""
    PLATFORM_TYPE_UNSPECIFIED = 'PLATFORM_TYPE_UNSPECIFIED'
    WINDOWS = 'WINDOWS'
    LINUX = 'LINUX'
    ANDROID = 'ANDROID'
    OSX = 'OSX'
    IOS = 'IOS'
    ANY_PLATFORM = 'ANY_PLATFORM'
    ALL_PLATFORMS = 'ALL_PLATFORMS'
    CHROME = 'CHROME'

class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponseResponseTypeEnum(str, Enum):
    r"""The type of response. This may indicate that an action is required by the client when the response is received."""
    RESPONSE_TYPE_UNSPECIFIED = 'RESPONSE_TYPE_UNSPECIFIED'
    PARTIAL_UPDATE = 'PARTIAL_UPDATE'
    FULL_UPDATE = 'FULL_UPDATE'

class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponseThreatEntryTypeEnum(str, Enum):
    r"""The format of the threats."""
    THREAT_ENTRY_TYPE_UNSPECIFIED = 'THREAT_ENTRY_TYPE_UNSPECIFIED'
    URL = 'URL'
    EXECUTABLE = 'EXECUTABLE'
    IP_RANGE = 'IP_RANGE'
    CHROME_EXTENSION = 'CHROME_EXTENSION'
    FILENAME = 'FILENAME'
    CERT = 'CERT'

class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponseThreatTypeEnum(str, Enum):
    r"""The threat type for which data is returned."""
    THREAT_TYPE_UNSPECIFIED = 'THREAT_TYPE_UNSPECIFIED'
    MALWARE = 'MALWARE'
    SOCIAL_ENGINEERING = 'SOCIAL_ENGINEERING'
    UNWANTED_SOFTWARE = 'UNWANTED_SOFTWARE'
    POTENTIALLY_HARMFUL_APPLICATION = 'POTENTIALLY_HARMFUL_APPLICATION'
    SOCIAL_ENGINEERING_INTERNAL = 'SOCIAL_ENGINEERING_INTERNAL'
    API_ABUSE = 'API_ABUSE'
    MALICIOUS_BINARY = 'MALICIOUS_BINARY'
    CSD_WHITELIST = 'CSD_WHITELIST'
    CSD_DOWNLOAD_WHITELIST = 'CSD_DOWNLOAD_WHITELIST'
    CLIENT_INCIDENT = 'CLIENT_INCIDENT'
    CLIENT_INCIDENT_WHITELIST = 'CLIENT_INCIDENT_WHITELIST'
    APK_MALWARE_OFFLINE = 'APK_MALWARE_OFFLINE'
    SUBRESOURCE_FILTER = 'SUBRESOURCE_FILTER'
    SUSPICIOUS = 'SUSPICIOUS'
    TRICK_TO_BILL = 'TRICK_TO_BILL'
    HIGH_CONFIDENCE_ALLOWLIST = 'HIGH_CONFIDENCE_ALLOWLIST'
    ACCURACY_TIPS = 'ACCURACY_TIPS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponse:
    r"""An update to an individual list."""
    
    additions: Optional[list[shared_googlesecuritysafebrowsingv4threatentryset.GoogleSecuritySafebrowsingV4ThreatEntrySet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additions'), 'exclude': lambda f: f is None }})
    r"""A set of entries to add to a local threat type's list. Repeated to allow for a combination of compressed and raw data to be sent in a single response."""  
    checksum: Optional[shared_googlesecuritysafebrowsingv4checksum.GoogleSecuritySafebrowsingV4Checksum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checksum'), 'exclude': lambda f: f is None }})
    r"""The expected state of a client's local database."""  
    new_client_state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newClientState'), 'exclude': lambda f: f is None }})
    r"""The new client state, in encrypted format. Opaque to clients."""  
    platform_type: Optional[GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponsePlatformTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platformType'), 'exclude': lambda f: f is None }})
    r"""The platform type for which data is returned."""  
    removals: Optional[list[shared_googlesecuritysafebrowsingv4threatentryset.GoogleSecuritySafebrowsingV4ThreatEntrySet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removals'), 'exclude': lambda f: f is None }})
    r"""A set of entries to remove from a local threat type's list. In practice, this field is empty or contains exactly one ThreatEntrySet."""  
    response_type: Optional[GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponseResponseTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseType'), 'exclude': lambda f: f is None }})
    r"""The type of response. This may indicate that an action is required by the client when the response is received."""  
    threat_entry_type: Optional[GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponseThreatEntryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threatEntryType'), 'exclude': lambda f: f is None }})
    r"""The format of the threats."""  
    threat_type: Optional[GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponseThreatTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threatType'), 'exclude': lambda f: f is None }})
    r"""The threat type for which data is returned."""  
    