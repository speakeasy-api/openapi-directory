"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import repositorymetadata as shared_repositorymetadata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchGetRepositoriesOutput:
    r"""Represents the output of a batch get repositories operation."""
    
    repositories: Optional[list[shared_repositorymetadata.RepositoryMetadata]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repositories'), 'exclude': lambda f: f is None }})  
    repositories_not_found: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repositoriesNotFound'), 'exclude': lambda f: f is None }})  
    