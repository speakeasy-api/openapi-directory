<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class AuditLogEvent
{
    /**
     * The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
     * 
     * @var ?int $atTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('@timestamp')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $atTimestamp = null;
    
    /**
     * A unique identifier for an audit event.
     * 
     * @var ?string $documentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('_document_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $documentId = null;
    
    /**
     * The name of the action that was performed, for example `user.login` or `repo.create`.
     * 
     * @var ?string $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $action = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('active_was')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $activeWas = null;
    
    /**
     * The actor who performed the action.
     * 
     * @var ?string $actor
     */
	#[\JMS\Serializer\Annotation\SerializedName('actor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $actor = null;
    
    /**
     * The id of the actor who performed the action.
     * 
     * @var ?int $actorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('actor_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $actorId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('actor_location')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AuditLogEventActorLocation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditLogEventActorLocation $actorLocation = null;
    
    /**
     * The username of the account being blocked.
     * 
     * @var ?string $blockedUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('blocked_user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $blockedUser = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('business')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $business = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('business_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $businessId = null;
    
    /**
     * $config
     * 
     * @var ?array<array<string, mixed>> $config
     */
	#[\JMS\Serializer\Annotation\SerializedName('config')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $config = null;
    
    /**
     * $configWas
     * 
     * @var ?array<array<string, mixed>> $configWas
     */
	#[\JMS\Serializer\Annotation\SerializedName('config_was')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $configWas = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('content_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $contentType = null;
    
    /**
     * The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
     * 
     * @var ?int $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAt = null;
    
    /**
     * $data
     * 
     * @var ?array<string, mixed> $data
     */
	#[\JMS\Serializer\Annotation\SerializedName('data')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $data = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('deploy_key_fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deployKeyFingerprint = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('emoji')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emoji = null;
    
    /**
     * $events
     * 
     * @var ?array<array<string, mixed>> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
    /**
     * $eventsWere
     * 
     * @var ?array<array<string, mixed>> $eventsWere
     */
	#[\JMS\Serializer\Annotation\SerializedName('events_were')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eventsWere = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('explanation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $explanation = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hook_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hookId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('limited_availability')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $limitedAvailability = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('old_user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $oldUser = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('openssh_public_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $opensshPublicKey = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('operation_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operationType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('org')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $org = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('org_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $orgId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('previous_visibility')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $previousVisibility = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('read_only')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $readOnly = null;
    
    /**
     * The name of the repository.
     * 
     * @var ?string $repo
     */
	#[\JMS\Serializer\Annotation\SerializedName('repo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $repo = null;
    
    /**
     * The name of the repository.
     * 
     * @var ?string $repository
     */
	#[\JMS\Serializer\Annotation\SerializedName('repository')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $repository = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('repository_public')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $repositoryPublic = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('target_login')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetLogin = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('team')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $team = null;
    
    /**
     * The type of protocol (for example, HTTP or SSH) used to transfer Git data.
     * 
     * @var ?int $transportProtocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('transport_protocol')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $transportProtocol = null;
    
    /**
     * A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.
     * 
     * @var ?string $transportProtocolName
     */
	#[\JMS\Serializer\Annotation\SerializedName('transport_protocol_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transportProtocolName = null;
    
    /**
     * The user that was affected by the action performed (if available).
     * 
     * @var ?string $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $user = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $userId = null;
    
    /**
     * The repository visibility, for example `public` or `private`.
     * 
     * @var ?string $visibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('visibility')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $visibility = null;
    
	public function __construct()
	{
		$this->atTimestamp = null;
		$this->documentId = null;
		$this->action = null;
		$this->active = null;
		$this->activeWas = null;
		$this->actor = null;
		$this->actorId = null;
		$this->actorLocation = null;
		$this->blockedUser = null;
		$this->business = null;
		$this->businessId = null;
		$this->config = null;
		$this->configWas = null;
		$this->contentType = null;
		$this->createdAt = null;
		$this->data = null;
		$this->deployKeyFingerprint = null;
		$this->emoji = null;
		$this->events = null;
		$this->eventsWere = null;
		$this->explanation = null;
		$this->fingerprint = null;
		$this->hookId = null;
		$this->limitedAvailability = null;
		$this->message = null;
		$this->name = null;
		$this->oldUser = null;
		$this->opensshPublicKey = null;
		$this->operationType = null;
		$this->org = null;
		$this->orgId = null;
		$this->previousVisibility = null;
		$this->readOnly = null;
		$this->repo = null;
		$this->repository = null;
		$this->repositoryPublic = null;
		$this->targetLogin = null;
		$this->team = null;
		$this->transportProtocol = null;
		$this->transportProtocolName = null;
		$this->user = null;
		$this->userId = null;
		$this->visibility = null;
	}
}
