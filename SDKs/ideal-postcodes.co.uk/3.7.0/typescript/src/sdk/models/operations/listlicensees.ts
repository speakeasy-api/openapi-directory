/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListLicenseesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=key" })
  key: string;

  /**
   * Specify the maximum number of results to return per page. Default and maximum is `100`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=limit",
  })
  limit?: number;

  /**
   * Filter result by licensee name. Query can be shortened to `q=`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=query",
  })
  query?: string;

  /**
   * Specify ID of the licensee after which you would like to list results
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=starting_after",
  })
  startingAfter?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=user_token",
  })
  userToken?: string;
}

export class ListLicenseesResponse extends SpeakeasyBase {
  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  badRequestResponse?: shared.BadRequestResponse;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  licenseesResponse?: shared.LicenseesResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
