/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RDSDatabase } from "./rdsdatabase";
import { RDSDatabaseCredentials } from "./rdsdatabasecredentials";
import { Expose, Type } from "class-transformer";

/**
 * The data specification of an Amazon Relational Database Service (Amazon RDS) <code>DataSource</code>.
 */
export class RDSDataSpec extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataRearrangement" })
  dataRearrangement?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataSchema" })
  dataSchema?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataSchemaUri" })
  dataSchemaUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseCredentials" })
  @Type(() => RDSDatabaseCredentials)
  databaseCredentials: RDSDatabaseCredentials;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseInformation" })
  @Type(() => RDSDatabase)
  databaseInformation: RDSDatabase;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceRole" })
  resourceRole: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3StagingLocation" })
  s3StagingLocation: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityGroupIds" })
  securityGroupIds: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SelectSqlQuery" })
  selectSqlQuery: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceRole" })
  serviceRole: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetId" })
  subnetId: string;
}
