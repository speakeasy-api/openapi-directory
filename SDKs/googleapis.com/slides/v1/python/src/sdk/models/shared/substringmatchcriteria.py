"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubstringMatchCriteria:
    r"""A criteria that matches a specific string of text in a shape or table."""
    
    match_case: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matchCase'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the search should respect case: - `True`: the search is case sensitive. - `False`: the search is case insensitive."""  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""The text to search for in the shape or table."""  
    