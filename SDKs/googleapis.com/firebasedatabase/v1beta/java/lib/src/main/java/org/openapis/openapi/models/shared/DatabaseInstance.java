/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DatabaseInstance - Representation of a Realtime Database instance. Details on interacting with contents of a DatabaseInstance can be found at: https://firebase.google.com/docs/database/rest/start.
 */
public class DatabaseInstance {
    /**
     * Output only. Output Only. The globally unique hostname of the database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseUrl")
    public String databaseUrl;

    public DatabaseInstance withDatabaseUrl(String databaseUrl) {
        this.databaseUrl = databaseUrl;
        return this;
    }
    
    /**
     * The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public DatabaseInstance withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The resource name of the project this instance belongs to. For example: `projects/{project-number}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project")
    public String project;

    public DatabaseInstance withProject(String project) {
        this.project = project;
        return this;
    }
    
    /**
     * Output only. The database's lifecycle state. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public DatabaseInstanceStateEnum state;

    public DatabaseInstance withState(DatabaseInstanceStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Immutable. The database instance type. On creation only USER_DATABASE is allowed, which is also the default when omitted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public DatabaseInstanceTypeEnum type;

    public DatabaseInstance withType(DatabaseInstanceTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public DatabaseInstance(){}
}
