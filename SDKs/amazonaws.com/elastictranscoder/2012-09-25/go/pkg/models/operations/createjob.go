// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateJobHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateJobRequestBodyInput - Information about the file that you're transcoding.
type CreateJobRequestBodyInput struct {
	AspectRatio        *string                    `json:"AspectRatio,omitempty"`
	Container          *string                    `json:"Container,omitempty"`
	DetectedProperties *shared.DetectedProperties `json:"DetectedProperties,omitempty"`
	Encryption         *shared.Encryption         `json:"Encryption,omitempty"`
	FrameRate          *string                    `json:"FrameRate,omitempty"`
	InputCaptions      *shared.InputCaptions      `json:"InputCaptions,omitempty"`
	Interlaced         *string                    `json:"Interlaced,omitempty"`
	Key                *string                    `json:"Key,omitempty"`
	Resolution         *string                    `json:"Resolution,omitempty"`
	TimeSpan           *shared.TimeSpan           `json:"TimeSpan,omitempty"`
}

// CreateJobRequestBodyOutput - The <code>CreateJobOutput</code> structure.
type CreateJobRequestBodyOutput struct {
	AlbumArt            *shared.JobAlbumArt   `json:"AlbumArt,omitempty"`
	Captions            *shared.Captions      `json:"Captions,omitempty"`
	Composition         []shared.Clip         `json:"Composition,omitempty"`
	Encryption          *shared.Encryption    `json:"Encryption,omitempty"`
	Key                 *string               `json:"Key,omitempty"`
	PresetID            *string               `json:"PresetId,omitempty"`
	Rotate              *string               `json:"Rotate,omitempty"`
	SegmentDuration     *string               `json:"SegmentDuration,omitempty"`
	ThumbnailEncryption *shared.Encryption    `json:"ThumbnailEncryption,omitempty"`
	ThumbnailPattern    *string               `json:"ThumbnailPattern,omitempty"`
	Watermarks          []shared.JobWatermark `json:"Watermarks,omitempty"`
}

type CreateJobRequestBody struct {
	// Information about the file that you're transcoding.
	Input *CreateJobRequestBodyInput `json:"Input,omitempty"`
	// A section of the request body that provides information about the files that are being transcoded.
	Inputs []shared.JobInput `json:"Inputs,omitempty"`
	// The <code>CreateJobOutput</code> structure.
	Output *CreateJobRequestBodyOutput `json:"Output,omitempty"`
	// The value, if any, that you want Elastic Transcoder to prepend to the names of all files that this job creates, including output files, thumbnails, and playlists.
	OutputKeyPrefix *string `json:"OutputKeyPrefix,omitempty"`
	//  A section of the request body that provides information about the transcoded (target) files. We recommend that you use the <code>Outputs</code> syntax instead of the <code>Output</code> syntax.
	Outputs []shared.CreateJobOutput `json:"Outputs,omitempty"`
	// The <code>Id</code> of the pipeline that you want Elastic Transcoder to use for transcoding. The pipeline determines several settings, including the Amazon S3 bucket from which Elastic Transcoder gets the files to transcode and the bucket into which Elastic Transcoder puts the transcoded files.
	PipelineID string `json:"PipelineId"`
	// <p>If you specify a preset in <code>PresetId</code> for which the value of <code>Container</code> is fmp4 (Fragmented MP4) or ts (MPEG-TS), Playlists contains information about the master playlists that you want Elastic Transcoder to create.</p> <p>The maximum number of master playlists in a job is 30.</p>
	Playlists []shared.CreateJobPlaylist `json:"Playlists,omitempty"`
	// User-defined metadata that you want to associate with an Elastic Transcoder job. You specify metadata in <code>key/value</code> pairs, and you can add up to 10 <code>key/value</code> pairs per job. Elastic Transcoder does not guarantee that <code>key/value</code> pairs are returned in the same order in which you specify them.
	UserMetadata map[string]string `json:"UserMetadata,omitempty"`
}

type CreateJobRequest struct {
	Headers CreateJobHeaders
	Request CreateJobRequestBody `request:"mediaType=application/json"`
}

type CreateJobResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateJobResponse *shared.CreateJobResponse
	// IncompatibleVersionException
	IncompatibleVersionException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
