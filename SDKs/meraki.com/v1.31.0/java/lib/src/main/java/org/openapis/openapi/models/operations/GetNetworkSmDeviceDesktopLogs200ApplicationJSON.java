/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetNetworkSmDeviceDesktopLogs200ApplicationJSON {
    /**
     * The IP address of the DCHP Server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dhcpServer")
    public String dhcpServer;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withDhcpServer(String dhcpServer) {
        this.dhcpServer = dhcpServer;
        return this;
    }
    
    /**
     * The DNS Server during the connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dnsServer")
    public String dnsServer;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withDnsServer(String dnsServer) {
        this.dnsServer = dnsServer;
        return this;
    }
    
    /**
     * The gateway IP the device was connected to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gateway")
    public String gateway;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withGateway(String gateway) {
        this.gateway = gateway;
        return this;
    }
    
    /**
     * The IP of the device during connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip")
    public String ip;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    /**
     * The time the data was measured at.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measuredAt")
    public String measuredAt;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withMeasuredAt(String measuredAt) {
        this.measuredAt = measuredAt;
        return this;
    }
    
    /**
     * The network device for the device used for connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkDevice")
    public String networkDevice;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withNetworkDevice(String networkDevice) {
        this.networkDevice = networkDevice;
        return this;
    }
    
    /**
     * The network driver for the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkDriver")
    public String networkDriver;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withNetworkDriver(String networkDriver) {
        this.networkDriver = networkDriver;
        return this;
    }
    
    /**
     * The network max transmission unit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkMTU")
    public String networkMTU;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withNetworkMTU(String networkMTU) {
        this.networkMTU = networkMTU;
        return this;
    }
    
    /**
     * The public IP address of the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publicIP")
    public String publicIP;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withPublicIP(String publicIP) {
        this.publicIP = publicIP;
        return this;
    }
    
    /**
     * The subnet of the device connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnet")
    public String subnet;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withSubnet(String subnet) {
        this.subnet = subnet;
        return this;
    }
    
    /**
     * The time the connection was logged.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ts")
    public String ts;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withTs(String ts) {
        this.ts = ts;
        return this;
    }
    
    /**
     * The user during connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public String user;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withUser(String user) {
        this.user = user;
        return this;
    }
    
    /**
     * The type of authentication used by the SSID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiAuth")
    public String wifiAuth;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withWifiAuth(String wifiAuth) {
        this.wifiAuth = wifiAuth;
        return this;
    }
    
    /**
     * The MAC of the access point the device is connected to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiBssid")
    public String wifiBssid;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withWifiBssid(String wifiBssid) {
        this.wifiBssid = wifiBssid;
        return this;
    }
    
    /**
     * Channel through which the connection is routing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiChannel")
    public String wifiChannel;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withWifiChannel(String wifiChannel) {
        this.wifiChannel = wifiChannel;
        return this;
    }
    
    /**
     * The wireless signal power level received by the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiNoise")
    public String wifiNoise;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withWifiNoise(String wifiNoise) {
        this.wifiNoise = wifiNoise;
        return this;
    }
    
    /**
     * The Received Signal Strength Indicator for the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiRssi")
    public String wifiRssi;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withWifiRssi(String wifiRssi) {
        this.wifiRssi = wifiRssi;
        return this;
    }
    
    /**
     * The name of the network the device is connected to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiSsid")
    public String wifiSsid;
    public GetNetworkSmDeviceDesktopLogs200ApplicationJSON withWifiSsid(String wifiSsid) {
        this.wifiSsid = wifiSsid;
        return this;
    }
    
}
