// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type HIPConsentNotificationNotificationConsentDetailCareContexts struct {
	CareContextReference string `json:"careContextReference"`
	PatientReference     string `json:"patientReference"`
}

type HIPConsentNotificationNotificationConsentDetailConsentManager struct {
	ID string `json:"id"`
}

type HIPConsentNotificationNotificationConsentDetailHIP struct {
	ID string `json:"id"`
}

type HIPConsentNotificationNotificationConsentDetail struct {
	CareContexts   []HIPConsentNotificationNotificationConsentDetailCareContexts `json:"careContexts"`
	ConsentID      string                                                        `json:"consentId"`
	ConsentManager HIPConsentNotificationNotificationConsentDetailConsentManager `json:"consentManager"`
	CreatedAt      time.Time                                                     `json:"createdAt"`
	HiTypes        []HITypeEnumEnum                                              `json:"hiTypes"`
	Hip            HIPConsentNotificationNotificationConsentDetailHIP            `json:"hip"`
	Patient        ConsentManagerPatientID                                       `json:"patient"`
	Permission     Permission                                                    `json:"permission"`
	Purpose        UsePurpose                                                    `json:"purpose"`
	SchemaVersion  *string                                                       `json:"schemaVersion,omitempty"`
}

type HIPConsentNotificationNotification struct {
	ConsentDetail HIPConsentNotificationNotificationConsentDetail `json:"consentDetail"`
	ConsentID     string                                          `json:"consentId"`
	Signature     string                                          `json:"signature"`
	Status        ConsentStatusEnum                               `json:"status"`
}

type HIPConsentNotification struct {
	Notification HIPConsentNotificationNotification `json:"notification"`
	// a nonce, unique for each HTTP request
	RequestID string `json:"requestId"`
	// Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
	Timestamp time.Time `json:"timestamp"`
}
