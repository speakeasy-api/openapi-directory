/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DuplicateTimestamps } from "./duplicatetimestamps";
import { InsufficientSensorData } from "./insufficientsensordata";
import { InvalidSensorData } from "./invalidsensordata";
import { MissingSensorData } from "./missingsensordata";
import { UnsupportedTimestamps } from "./unsupportedtimestamps";
import { Expose, Type } from "class-transformer";

/**
 *  DataQualitySummary gives aggregated statistics over all the sensors about a completed ingestion job. It primarily gives more information about statistics over different incorrect data like MissingCompleteSensorData, MissingSensorData, UnsupportedDateFormats, InsufficientSensorData, DuplicateTimeStamps.
 */
export class DataQualitySummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DuplicateTimestamps" })
  @Type(() => DuplicateTimestamps)
  duplicateTimestamps: DuplicateTimestamps;

  @SpeakeasyMetadata()
  @Expose({ name: "InsufficientSensorData" })
  @Type(() => InsufficientSensorData)
  insufficientSensorData: InsufficientSensorData;

  @SpeakeasyMetadata()
  @Expose({ name: "InvalidSensorData" })
  @Type(() => InvalidSensorData)
  invalidSensorData: InvalidSensorData;

  @SpeakeasyMetadata()
  @Expose({ name: "MissingSensorData" })
  @Type(() => MissingSensorData)
  missingSensorData: MissingSensorData;

  @SpeakeasyMetadata()
  @Expose({ name: "UnsupportedTimestamps" })
  @Type(() => UnsupportedTimestamps)
  unsupportedTimestamps: UnsupportedTimestamps;
}
