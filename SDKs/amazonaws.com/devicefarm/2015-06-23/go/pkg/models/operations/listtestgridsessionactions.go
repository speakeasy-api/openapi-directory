// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListTestGridSessionActionsXAmzTargetEnum
type ListTestGridSessionActionsXAmzTargetEnum string

const (
	ListTestGridSessionActionsXAmzTargetEnumDeviceFarm20150623ListTestGridSessionActions ListTestGridSessionActionsXAmzTargetEnum = "DeviceFarm_20150623.ListTestGridSessionActions"
)

func (e ListTestGridSessionActionsXAmzTargetEnum) ToPointer() *ListTestGridSessionActionsXAmzTargetEnum {
	return &e
}

func (e *ListTestGridSessionActionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.ListTestGridSessionActions":
		*e = ListTestGridSessionActionsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTestGridSessionActionsXAmzTargetEnum: %v", v)
	}
}

type ListTestGridSessionActionsRequest struct {
	ListTestGridSessionActionsRequest shared.ListTestGridSessionActionsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        ListTestGridSessionActionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResult *string `queryParam:"style=form,explode=true,name=maxResult"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListTestGridSessionActionsResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// InternalServiceException
	InternalServiceException interface{}
	// Success
	ListTestGridSessionActionsResult *shared.ListTestGridSessionActionsResult
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
