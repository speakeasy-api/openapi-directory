// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateEsimProfileServerList = []string{
	"https://supersim.twilio.com",
}

type CreateEsimProfileSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum - The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
type CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum string

const (
	CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnumHead   CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum = "HEAD"
	CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnumGet    CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum = "GET"
	CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnumPost   CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum = "POST"
	CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnumPatch  CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum = "PATCH"
	CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnumPut    CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum = "PUT"
	CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnumDelete CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum = "DELETE"
)

func (e CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum) ToPointer() *CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum {
	return &e
}

func (e *CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum: %v", v)
	}
}

type CreateEsimProfileCreateEsimProfileRequest struct {
	// The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
	CallbackMethod *CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum `form:"name=CallbackMethod"`
	// The URL we should call using the `callback_method` when the status of the eSIM Profile changes. At this stage of the eSIM Profile pilot, the a request to the URL will only be called when the ESimProfile resource changes from `reserving` to `available`.
	CallbackURL *string `form:"name=CallbackUrl"`
	// Identifier of the eUICC that will claim the eSIM Profile.
	Eid *string `form:"name=Eid"`
	// When set to `true`, a value for `Eid` does not need to be provided. Instead, when the eSIM profile is reserved, a matching ID will be generated and returned via the `matching_id` property. This identifies the specific eSIM profile that can be used by any capable device to claim and download the profile.
	GenerateMatchingID *bool `form:"name=GenerateMatchingId"`
}

type CreateEsimProfileResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	SupersimV1EsimProfile *shared.SupersimV1EsimProfile
}
