<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EnterpriseCrmEventbusProtoEventExecutionSnapshot - Contains the snapshot of the event execution for a given checkpoint. Next available id: 13
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EnterpriseCrmEventbusProtoEventExecutionSnapshot
{
    /**
     * Indicates "right after which checkpoint task's execution" this snapshot is taken.
     * 
     * @var ?string $checkpointTaskNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('checkpointTaskNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $checkpointTaskNumber = null;
    
    /**
     * All of the computed conditions that been calculated.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoConditionResult> $conditionResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('conditionResults')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoConditionResult>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $conditionResults = null;
    
    /**
     * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoEventParameters $diffParams
     */
	#[\JMS\Serializer\Annotation\SerializedName('diffParams')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoEventParameters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoEventParameters $diffParams = null;
    
    /**
     * Points to the event execution info this snapshot belongs to.
     * 
     * @var ?string $eventExecutionInfoId
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventExecutionInfoId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventExecutionInfoId = null;
    
    /**
     * Auto-generated. Used as primary key for EventExecutionSnapshots table.
     * 
     * @var ?string $eventExecutionSnapshotId
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventExecutionSnapshotId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventExecutionSnapshotId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('eventExecutionSnapshotMetadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoEventExecutionSnapshotEventExecutionSnapshotMetadata $eventExecutionSnapshotMetadata = null;
    
    /**
     * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoEventParameters $eventParams
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventParams')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoEventParameters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoEventParameters $eventParams = null;
    
    /**
     * indicate whether snapshot exceeded maximum size before clean up
     * 
     * @var ?bool $exceedMaxSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('exceedMaxSize')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $exceedMaxSize = null;
    
    /**
     * Indicates when this snapshot is taken.
     * 
     * @var ?string $snapshotTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshotTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $snapshotTime = null;
    
    /**
     * All of the task execution details at the given point of time.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoTaskExecutionDetails> $taskExecutionDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskExecutionDetails')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoTaskExecutionDetails>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taskExecutionDetails = null;
    
    /**
     * The task name associated with this snapshot. Could be empty.
     * 
     * @var ?string $taskName
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taskName = null;
    
	public function __construct()
	{
		$this->checkpointTaskNumber = null;
		$this->conditionResults = null;
		$this->diffParams = null;
		$this->eventExecutionInfoId = null;
		$this->eventExecutionSnapshotId = null;
		$this->eventExecutionSnapshotMetadata = null;
		$this->eventParams = null;
		$this->exceedMaxSize = null;
		$this->snapshotTime = null;
		$this->taskExecutionDetails = null;
		$this->taskName = null;
	}
}
