/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TrackEvent - A track event
 */
public class TrackEvent {
    /**
     * Carrier detail code
     */
    @JsonProperty("carrier_detail_code")
    public String carrierDetailCode;
    public TrackEvent withCarrierDetailCode(String carrierDetailCode) {
        this.carrierDetailCode = carrierDetailCode;
        return this;
    }
    
    /**
     * Carrier timestamp for the event, it is assumed to be the local time of where the event occurred.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("carrier_occurred_at")
    public OffsetDateTime carrierOccurredAt;
    public TrackEvent withCarrierOccurredAt(OffsetDateTime carrierOccurredAt) {
        this.carrierOccurredAt = carrierOccurredAt;
        return this;
    }
    
    /**
     * Carrier status code
     */
    @JsonProperty("carrier_status_code")
    public String carrierStatusCode;
    public TrackEvent withCarrierStatusCode(String carrierStatusCode) {
        this.carrierStatusCode = carrierStatusCode;
        return this;
    }
    
    /**
     * carrier status description
     */
    @JsonProperty("carrier_status_description")
    public String carrierStatusDescription;
    public TrackEvent withCarrierStatusDescription(String carrierStatusDescription) {
        this.carrierStatusDescription = carrierStatusDescription;
        return this;
    }
    
    /**
     * City locality
     */
    @JsonProperty("city_locality")
    public String cityLocality;
    public TrackEvent withCityLocality(String cityLocality) {
        this.cityLocality = cityLocality;
        return this;
    }
    
    /**
     * Company Name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_name")
    public String companyName;
    public TrackEvent withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country_code")
    public String countryCode;
    public TrackEvent withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    /**
     * Event description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public TrackEvent withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Event Code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_code")
    public String eventCode;
    public TrackEvent withEventCode(String eventCode) {
        this.eventCode = eventCode;
        return this;
    }
    
    /**
     * Latitude coordinate of tracking event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latitude")
    public Double latitude;
    public TrackEvent withLatitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * Longitude coordinate of tracking event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longitude")
    public Double longitude;
    public TrackEvent withLongitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * Timestamp for carrier event
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("occurred_at")
    public OffsetDateTime occurredAt;
    public TrackEvent withOccurredAt(OffsetDateTime occurredAt) {
        this.occurredAt = occurredAt;
        return this;
    }
    
    /**
     * Postal code
     */
    @JsonProperty("postal_code")
    public String postalCode;
    public TrackEvent withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Signer information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signer")
    public String signer;
    public TrackEvent withSigner(String signer) {
        this.signer = signer;
        return this;
    }
    
    /**
     * State province
     */
    @JsonProperty("state_province")
    public String stateProvince;
    public TrackEvent withStateProvince(String stateProvince) {
        this.stateProvince = stateProvince;
        return this;
    }
    
    @JsonProperty("status_code")
    public StatusCodeEnum statusCode;
    public TrackEvent withStatusCode(StatusCodeEnum statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    /**
     * Event Status Description
     */
    @JsonProperty("status_description")
    public String statusDescription;
    public TrackEvent withStatusDescription(String statusDescription) {
        this.statusDescription = statusDescription;
        return this;
    }
    
}
