// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LabTestStatusEnum - One of `"preliminary"`, `"pending"`, `"correction"`, `"final"` or `"canceled"`. Defaults to `"preliminary"`
type LabTestStatusEnum string

const (
	LabTestStatusEnumP LabTestStatusEnum = "P"
	LabTestStatusEnumI LabTestStatusEnum = "I"
	LabTestStatusEnumC LabTestStatusEnum = "C"
	LabTestStatusEnumF LabTestStatusEnum = "F"
	LabTestStatusEnumX LabTestStatusEnum = "X"
)

func (e *LabTestStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "P":
		fallthrough
	case "I":
		fallthrough
	case "C":
		fallthrough
	case "F":
		fallthrough
	case "X":
		*e = LabTestStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LabTestStatusEnum: %s", s)
	}
}

// LabTest - Created
type LabTest struct {
	Code *string `json:"code,omitempty"`
	// The date the specimen were collected
	CollectionDate *string `json:"collection_date,omitempty"`
	// Short description of the ICD-10 code
	Description *string `json:"description,omitempty"`
	ID          *int64  `json:"id,omitempty"`
	// Notes which are meant for, and read by, the labs
	InternalNotes *string `json:"internal_notes,omitempty"`
	// ID of associated lab order
	LabOrder int64 `json:"lab_order"`
	// Name for the test
	Name *string `json:"name,omitempty"`
	// Notes which are not meant for labs, but are copied on the results.
	ReportNotes         *string  `json:"report_notes,omitempty"`
	SpecimenCondition   *string  `json:"specimen_condition,omitempty"`
	SpecimenSource      *string  `json:"specimen_source,omitempty"`
	SpecimenTotalVolume *float64 `json:"specimen_total_volume,omitempty"`
	// One of `"preliminary"`, `"pending"`, `"correction"`, `"final"` or `"canceled"`. Defaults to `"preliminary"`
	Status *LabTestStatusEnum `json:"status,omitempty"`
}
