"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import keystoreconfig as shared_keystoreconfig
from typing import Optional


@dataclasses.dataclass
class PostRealmClientsIDCertificatesAttrDownloadRequest:
    
    attr: str = dataclasses.field(metadata={'path_param': { 'field_name': 'attr', 'style': 'simple', 'explode': False }})  
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""id of client (not client-id)"""  
    key_store_config: shared_keystoreconfig.KeyStoreConfig = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Keystore configuration as JSON"""  
    realm: str = dataclasses.field(metadata={'path_param': { 'field_name': 'realm', 'style': 'simple', 'explode': False }})
    r"""realm name (not id!)"""  
    

@dataclasses.dataclass
class PostRealmClientsIDCertificatesAttrDownloadResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_realm_clients_id_certificates_attr_download_2_xx_application_octet_stream_byte_string: Optional[str] = dataclasses.field(default=None)
    r"""success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    