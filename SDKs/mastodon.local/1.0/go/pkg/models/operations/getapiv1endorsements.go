// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAPIV1EndorsementsSecurity struct {
	BearerAuth shared.SchemeBearerAuth `security:"scheme,type=http,subtype=bearer"`
}

type GetAPIV1EndorsementsQueryParams struct {
	// Maximum number of results to return. Defaults to 40. Paginate using the HTTP Link header.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Internal parameter. Use HTTP Link header from response for pagination
	MaxID *string `queryParam:"style=form,explode=true,name=max_id"`
	// Internal parameter. Use HTTP Link header from response for pagination.
	SinceID *string `queryParam:"style=form,explode=true,name=since_id"`
}

type GetAPIV1EndorsementsRequest struct {
	QueryParams GetAPIV1EndorsementsQueryParams
	Security    GetAPIV1EndorsementsSecurity
}

type GetAPIV1EndorsementsResponse struct {
	// Success. Because endorsement ids are private, you must parse the HTTP Link header to find next and previous pages.
	Accounts    []shared.Account
	ContentType string
	// Invalid or missing Authorization header
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
