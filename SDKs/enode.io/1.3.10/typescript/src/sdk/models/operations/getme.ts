/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetMe200ApplicationJSONLinkedVendors extends SpeakeasyBase {
  /**
   * Whether the provided credentials are currently valid. A `false` value here indicates that a credential has become invalidated, and [Link User](#operation/postUsersUseridLink) should be used to get new credentials from this user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isValid" })
  isValid?: boolean;

  /**
   * Vendor ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vendor" })
  vendor?: shared.Oneme1vendors1Percent7BvendorPercent7DDeleteParameters0SchemaEnum;
}

/**
 * Successful
 */
export class GetMe200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata({ elemType: GetMe200ApplicationJSONLinkedVendors })
  @Expose({ name: "linkedVendors" })
  @Type(() => GetMe200ApplicationJSONLinkedVendors)
  linkedVendors?: GetMe200ApplicationJSONLinkedVendors[];
}

export class GetMeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful
   */
  @SpeakeasyMetadata()
  getMe200ApplicationJSONObject?: GetMe200ApplicationJSON;
}
