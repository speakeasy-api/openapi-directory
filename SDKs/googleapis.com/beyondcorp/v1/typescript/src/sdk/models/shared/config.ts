/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinationRoute } from "./destinationroute";
import { Expose, Type } from "class-transformer";

/**
 * Required. Immutable. The transport protocol used between the client and the server.
 */
export enum ConfigTransportProtocolEnum {
  TransportProtocolUnspecified = "TRANSPORT_PROTOCOL_UNSPECIFIED",
  Tcp = "TCP",
}

/**
 * The basic ingress config for ClientGateways.
 */
export class Config extends SpeakeasyBase {
  /**
   * Required. The settings used to configure basic ClientGateways.
   */
  @SpeakeasyMetadata({ elemType: DestinationRoute })
  @Expose({ name: "destinationRoutes" })
  @Type(() => DestinationRoute)
  destinationRoutes?: DestinationRoute[];

  /**
   * Required. Immutable. The transport protocol used between the client and the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transportProtocol" })
  transportProtocol?: ConfigTransportProtocolEnum;
}
