/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Enum identifer of provider type.
 */
export enum RegisterEmailResponseProviderEnum {
  Email = "email",
}

/**
 * OK
 */
export class RegisterEmailResponse extends SpeakeasyBase {
  /**
   * An array of ApplicationID strings attached to the value provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "application_ids" })
  applicationIds?: string[];

  /**
   * An optional name to be attached to this binding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Enum identifer of provider type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provider" })
  provider?: RegisterEmailResponseProviderEnum;

  /**
   * Value given to the provider to attach to the Application IDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
