"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReconciliationReportValidationIssue:
    r"""Represents an issue encountered when validating a reconciliation report."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Text description of the issue, typically including what was seen and why it was invalid."""  
    field_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldName'), 'exclude': lambda f: f is None }})
    r"""Name of the invalid field. If no field name is given, this issue applies to the whole line (or file)."""  
    line_num: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lineNum'), 'exclude': lambda f: f is None }})
    r"""The line number on which the issue was detected. If this field is 0, the issue applies to the whole file."""  
    