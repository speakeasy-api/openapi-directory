/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateFeeSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

/**
 * Fee sub transaction type
 */
export enum CreateFeeRootTypeForFeeSubTransactionTypeEnum {
  AncillaryFee = "Ancillary fee",
  ManagementFee = "Management fee",
  AdvisorOngoingFee = "Advisor ongoing fee",
  OneOffAdvisorFee = "One-off advisor fee",
  CustodyFees = "Custody fees",
  Commission = "Commission",
  FeeCredit = "Fee credit",
  FeeRebate = "Fee rebate",
  CommissionRebate = "Commission rebate",
}

/**
 * JSON for the Fee resource type
 */
export class CreateFeeRootTypeForFee extends SpeakeasyBase {
  /**
   * Currency of the Fee.must be a currency configured for the Pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * Pot ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  /**
   * Unique request id to ensure idempotency. (ex: UUID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  /**
   * Fee sub transaction type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_transaction_type" })
  subTransactionType: CreateFeeRootTypeForFeeSubTransactionTypeEnum;

  /**
   * Fee Amount upto 2 decimal places
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_value" })
  transactionValue: string;
}

export class CreateFeeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateFeeRootTypeForFee;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class CreateFee500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class CreateFee429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum CreateFee409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class CreateFee409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreateFee409ApplicationJSONStatusEnum;
}

/**
 * The specified resource was not found
 */
export class CreateFee404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class CreateFee403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class CreateFee401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class CreateFee400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * in = cash payment or pending buy transaction, out= cash out or pending sell transaction.
 */
export enum CreateFeeRootTypeForFeeCreationResponseDirectionEnum {
  In = "in",
  Out = "out",
}

/**
 * Origin of the transaction
 */
export enum CreateFeeRootTypeForFeeCreationResponseOriginEnum {
  Api = "api",
  AdminUi = "admin_ui",
  FileUpload = "file_upload",
  System = "system",
}

export enum CreateFeeRootTypeForFeeCreationResponsePrimaryTransactionTypeEnum {
  Fees = "Fees",
}

/**
 * Sub transaction type
 */
export enum CreateFeeRootTypeForFeeCreationResponseSubTransactionTypeEnum {
  AncillaryFee = "Ancillary fee",
  ManagementFee = "Management fee",
  AdvisorOngoingFee = "Advisor ongoing fee",
  OneOffAdvisorFee = "One-off advisor fee",
  CustodyFees = "Custody fees",
  Commission = "Commission",
  FeeCredit = "Fee credit",
  FeeRebate = "Fee rebate",
  CommissionRebate = "Commission rebate",
}

/**
 * Sub state of the transaction. instructed, confirmed, priced sub_types applicable for pending state and rejected, cancelled, settled sub_types applicable for archived state
 */
export enum CreateFeeRootTypeForFeeCreationResponseSubTypeEnum {
  Instructed = "instructed",
  Confirmed = "confirmed",
  Priced = "priced",
  Rejected = "rejected",
  Settled = "settled",
  Cancelled = "cancelled",
  Scheduled = "scheduled",
}

/**
 * State of the transaction
 */
export enum CreateFeeRootTypeForFeeCreationResponseTypeEnum {
  Pending = "pending",
  Archived = "archived",
}

/**
 * JSON for the Fee creation response
 */
export class CreateFeeRootTypeForFeeCreationResponse extends SpeakeasyBase {
  /**
   * Will indicate the date where this record was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  /**
   * Currency of the Fee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * in = cash payment or pending buy transaction, out= cash out or pending sell transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction: CreateFeeRootTypeForFeeCreationResponseDirectionEnum;

  /**
   * External Transaction Reference
   */
  @SpeakeasyMetadata()
  @Expose({ name: "external_transaction_reference" })
  externalTransactionReference?: string;

  /**
   * investment_product_id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * Origin of the transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: CreateFeeRootTypeForFeeCreationResponseOriginEnum;

  /**
   * Pot ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_transaction_type" })
  primaryTransactionType: CreateFeeRootTypeForFeeCreationResponsePrimaryTransactionTypeEnum;

  /**
   * Intended settlement date of the pending transaction or actual the settled day of the transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "settlement_date" })
  settlementDate?: string;

  /**
   * Sub transaction type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_transaction_type" })
  subTransactionType: CreateFeeRootTypeForFeeCreationResponseSubTransactionTypeEnum;

  /**
   * Sub state of the transaction. instructed, confirmed, priced sub_types applicable for pending state and rejected, cancelled, settled sub_types applicable for archived state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub_type" })
  subType: CreateFeeRootTypeForFeeCreationResponseSubTypeEnum;

  /**
   * Date the transaction was effected
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trade_date" })
  tradeDate?: string;

  /**
   * Unique ID of the fee transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;

  /**
   * Fee Amount upto 2 decimal places
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_value" })
  transactionValue: string;

  /**
   * State of the transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CreateFeeRootTypeForFeeCreationResponseTypeEnum;

  /**
   * Will indicate the date where this record was last changed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;
}

export class CreateFeeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * success
   */
  @SpeakeasyMetadata()
  rootTypeForFeeCreationResponse?: CreateFeeRootTypeForFeeCreationResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  createFee400ApplicationJSONObject?: CreateFee400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  createFee401ApplicationJSONObject?: CreateFee401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  createFee403ApplicationJSONObject?: CreateFee403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  createFee404ApplicationJSONObject?: CreateFee404ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  createFee409ApplicationJSONObject?: CreateFee409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  createFee429ApplicationJSONObject?: CreateFee429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  createFee500ApplicationJSONObject?: CreateFee500ApplicationJSON;
}
