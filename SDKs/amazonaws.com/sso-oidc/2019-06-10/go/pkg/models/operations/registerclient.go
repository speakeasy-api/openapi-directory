// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type RegisterClientHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type RegisterClientRequestBody struct {
	// The friendly name of the client.
	ClientName string `json:"clientName"`
	// The type of client. The service supports only <code>public</code> as a client type. Anything other than public will be rejected by the service.
	ClientType string `json:"clientType"`
	// The list of scopes that are defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.
	Scopes []string `json:"scopes,omitempty"`
}

type RegisterClientRequest struct {
	Headers RegisterClientHeaders
	Request RegisterClientRequestBody `request:"mediaType=application/json"`
}

type RegisterClientResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidClientMetadataException
	InvalidClientMetadataException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// InvalidScopeException
	InvalidScopeException interface{}
	// Success
	RegisterClientResponse *shared.RegisterClientResponse
	StatusCode             int
	RawResponse            *http.Response
}
