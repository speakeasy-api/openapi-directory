/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Logging - Logging configuration of the service. The following example shows how to configure logs to be sent to the producer and consumer projects. In the example, the `activity_history` log is sent to both the producer and consumer projects, whereas the `purchase_history` log is only sent to the producer project. monitored_resources: - type: library.googleapis.com/branch labels: - key: /city description: The city where the library branch is located in. - key: /name description: The name of the branch. logs: - name: activity_history labels: - key: /customer_id - name: purchase_history logging: producer_destinations: - monitored_resource: library.googleapis.com/branch logs: - activity_history - purchase_history consumer_destinations: - monitored_resource: library.googleapis.com/branch logs: - activity_history
 */
public class Logging {
    /**
     * Logging configurations for sending logs to the consumer project. There can be multiple consumer destinations, each one must have a different monitored resource type. A log can be used in at most one consumer destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumerDestinations")
    public LoggingDestination[] consumerDestinations;
    public Logging withConsumerDestinations(LoggingDestination[] consumerDestinations) {
        this.consumerDestinations = consumerDestinations;
        return this;
    }
    
    /**
     * Logging configurations for sending logs to the producer project. There can be multiple producer destinations, each one must have a different monitored resource type. A log can be used in at most one producer destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producerDestinations")
    public LoggingDestination[] producerDestinations;
    public Logging withProducerDestinations(LoggingDestination[] producerDestinations) {
        this.producerDestinations = producerDestinations;
        return this;
    }
    
}
