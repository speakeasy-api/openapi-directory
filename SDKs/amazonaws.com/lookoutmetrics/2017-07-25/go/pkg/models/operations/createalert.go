// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAlertRequestBodyAction - A configuration that specifies the action to perform when anomalies are detected.
type CreateAlertRequestBodyAction struct {
	LambdaConfiguration *shared.LambdaConfiguration `json:"LambdaConfiguration,omitempty"`
	SNSConfiguration    *shared.SNSConfiguration    `json:"SNSConfiguration,omitempty"`
}

// CreateAlertRequestBodyAlertFilters - The configuration of the alert filters.
type CreateAlertRequestBodyAlertFilters struct {
	DimensionFilterList []shared.DimensionFilter `json:"DimensionFilterList,omitempty"`
	MetricList          []string                 `json:"MetricList,omitempty"`
}

type CreateAlertRequestBody struct {
	// A configuration that specifies the action to perform when anomalies are detected.
	Action CreateAlertRequestBodyAction `json:"Action"`
	// A description of the alert.
	AlertDescription *string `json:"AlertDescription,omitempty"`
	// The configuration of the alert filters.
	AlertFilters *CreateAlertRequestBodyAlertFilters `json:"AlertFilters,omitempty"`
	// The name of the alert.
	AlertName string `json:"AlertName"`
	// An integer from 0 to 100 specifying the alert sensitivity threshold.
	AlertSensitivityThreshold *int64 `json:"AlertSensitivityThreshold,omitempty"`
	// The ARN of the detector to which the alert is attached.
	AnomalyDetectorArn string `json:"AnomalyDetectorArn"`
	// A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the alert.
	Tags map[string]string `json:"Tags,omitempty"`
}

type CreateAlertRequest struct {
	RequestBody       CreateAlertRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateAlertResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateAlertResponse *shared.CreateAlertResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// ValidationException
	ValidationException interface{}
}
