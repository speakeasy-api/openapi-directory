"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProxyGetRatePlan:
    r"""Container for custom fields of a Rate Plan object."""
    
    amendment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AmendmentId'), 'exclude': lambda f: f is None }})
    r"""The ID of the amendment associated with the rate plan. This field only applies to amendment rate plans.
    **Character limit**: 32 **Values**: a valid amendment ID
    """  
    amendment_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AmendmentType'), 'exclude': lambda f: f is None }})
    r"""The type of amendment associated with the rate plan. This field only applies to amendment rate plans."""  
    created_by_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedById'), 'exclude': lambda f: f is None }})
    r"""The ID of the Zuora user who created the RatePlan object. **Character limit**: 32 **Values**: automatically generated"""  
    created_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when the `RatePlan` object was last updated. **Character limit**: 29 **Values**: automatically generated"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""Object identifier."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""The name of the rate plan.
    
    **Values**: inherited from `ProductRatePlan.Name`
    """  
    subscription_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubscriptionId'), 'exclude': lambda f: f is None }})
    r"""The ID of the subscription that the rate plan belongs to. **Character limit**: 32 **Values**: a valid subscription ID"""  
    updated_by_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedById'), 'exclude': lambda f: f is None }})
    r"""The ID of the user who last updated the rate plan.
    **Character limit**: 32 **Values**: automatically generated
    """  
    updated_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when the rate plan was last updated.
    **Character limit**: 29 **Values**: automatically generated
    """  
    