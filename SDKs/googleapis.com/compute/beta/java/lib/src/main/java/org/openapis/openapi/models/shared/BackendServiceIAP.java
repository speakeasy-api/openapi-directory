/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BackendServiceIAP - Identity-Aware Proxy
 */
public class BackendServiceIAP {
    /**
     * Whether the serving infrastructure will authenticate and authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields must be non-empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public BackendServiceIAP withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * OAuth2 client ID to use for the authentication flow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oauth2ClientId")
    public String oauth2ClientId;
    public BackendServiceIAP withOauth2ClientId(String oauth2ClientId) {
        this.oauth2ClientId = oauth2ClientId;
        return this;
    }
    
    /**
     * OAuth2 client secret to use for the authentication flow. For security reasons, this value cannot be retrieved via the API. Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field. @InputOnly
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oauth2ClientSecret")
    public String oauth2ClientSecret;
    public BackendServiceIAP withOauth2ClientSecret(String oauth2ClientSecret) {
        this.oauth2ClientSecret = oauth2ClientSecret;
        return this;
    }
    
    /**
     * [Output Only] SHA256 hash value for the field oauth2_client_secret above.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oauth2ClientSecretSha256")
    public String oauth2ClientSecretSha256;
    public BackendServiceIAP withOauth2ClientSecretSha256(String oauth2ClientSecretSha256) {
        this.oauth2ClientSecretSha256 = oauth2ClientSecretSha256;
        return this;
    }
    
}
