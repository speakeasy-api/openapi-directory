<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateNotificationRuleRequestBody
{
    /**
     * <p>A unique, client-generated idempotency token that, when provided in a request, ensures the request cannot be repeated with a changed parameter. If a request with the same parameters is received and a token is included, the request returns information about the initial request that used that token.</p> <note> <p>The Amazon Web Services SDKs prepopulate client request tokens. If you are using an Amazon Web Services SDK, an idempotency token is created for you.</p> </note>
     * 
     * @var ?string $clientRequestToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('ClientRequestToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientRequestToken = null;
    
    /**
     * The level of detail to include in the notifications for this resource. <code>BASIC</code> will include only the contents of the event as it would appear in Amazon CloudWatch. <code>FULL</code> will include any supplemental information provided by AWS CodeStar Notifications and/or the service for the resource for which the notification is created.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateNotificationRuleRequestBodyDetailTypeEnum $detailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('DetailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateNotificationRuleRequestBodyDetailTypeEnum>')]
    public CreateNotificationRuleRequestBodyDetailTypeEnum $detailType;
    
    /**
     * A list of event types associated with this notification rule. For a list of allowed events, see <a>EventTypeSummary</a>.
     * 
     * @var array<string> $eventTypeIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('EventTypeIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $eventTypeIds;
    
    /**
     * The name for the notification rule. Notification rule names must be unique in your Amazon Web Services account.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The Amazon Resource Name (ARN) of the resource to associate with the notification rule. Supported resources include pipelines in CodePipeline, repositories in CodeCommit, and build projects in CodeBuild.
     * 
     * @var string $resource
     */
	#[\JMS\Serializer\Annotation\SerializedName('Resource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $resource;
    
    /**
     * The status of the notification rule. The default value is <code>ENABLED</code>. If the status is set to <code>DISABLED</code>, notifications aren't sent for the notification rule.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNotificationRuleRequestBodyStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateNotificationRuleRequestBodyStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNotificationRuleRequestBodyStatusEnum $status = null;
    
    /**
     * A list of tags to apply to this notification rule. Key names cannot start with "<code>aws</code>". 
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * A list of Amazon Resource Names (ARNs) of Amazon Simple Notification Service topics and Chatbot clients to associate with the notification rule.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Target> $targets
     */
	#[\JMS\Serializer\Annotation\SerializedName('Targets')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Target>')]
    public array $targets;
    
	public function __construct()
	{
		$this->clientRequestToken = null;
		$this->detailType = \OpenAPI\OpenAPI\Models\Operations\CreateNotificationRuleRequestBodyDetailTypeEnum::BASIC;
		$this->eventTypeIds = [];
		$this->name = "";
		$this->resource = "";
		$this->status = null;
		$this->tags = null;
		$this->targets = [];
	}
}
