"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rrsetroutingpolicygeopolicy as shared_rrsetroutingpolicygeopolicy
from ..shared import rrsetroutingpolicyhealthchecktargets as shared_rrsetroutingpolicyhealthchecktargets
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RRSetRoutingPolicyPrimaryBackupPolicy:
    r"""Configures a RRSetRoutingPolicy such that all queries are responded with the primary_targets if they are healthy. And if all of them are unhealthy, then we fallback to a geo localized policy."""
    
    backup_geo_targets: Optional[shared_rrsetroutingpolicygeopolicy.RRSetRoutingPolicyGeoPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('backupGeoTargets'), 'exclude': lambda f: f is None }})
    r"""Configures a RRSetRoutingPolicy that routes based on the geo location of the querying user."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})  
    primary_targets: Optional[shared_rrsetroutingpolicyhealthchecktargets.RRSetRoutingPolicyHealthCheckTargets] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryTargets'), 'exclude': lambda f: f is None }})
    r"""HealthCheckTargets describes endpoints to health-check when responding to Routing Policy queries. Only the healthy endpoints will be included in the response."""  
    trickle_traffic: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trickleTraffic'), 'exclude': lambda f: f is None }})
    r"""When serving state is PRIMARY, this field provides the option of sending a small percentage of the traffic to the backup targets."""  
    