/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateNetworkWirelessSsidSchedulesRequestBodyRanges extends SpeakeasyBase {
  /**
   * Day of when the outage ends. Can be either full day name, or three letter abbreviation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDay" })
  endDay: string;

  /**
   * 24 hour time when the outage ends.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime: string;

  /**
   * Day of when the outage starts. Can be either full day name, or three letter abbreviation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDay" })
  startDay: string;

  /**
   * 24 hour time when the outage starts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime: string;
}

export class UpdateNetworkWirelessSsidSchedulesRequestBodyRangesInSeconds extends SpeakeasyBase {
  /**
   * Seconds since Sunday at midnight when that outage range ends.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end: number;

  /**
   * Seconds since Sunday at midnight when the outage range starts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start: number;
}

export class UpdateNetworkWirelessSsidSchedulesRequestBody extends SpeakeasyBase {
  /**
   * If true, the SSID outage schedule is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * List of outage ranges. Has a start date and time, and end date and time. If this parameter is passed in along with rangesInSeconds parameter, this will take precedence.
   */
  @SpeakeasyMetadata({
    elemType: UpdateNetworkWirelessSsidSchedulesRequestBodyRanges,
  })
  @Expose({ name: "ranges" })
  @Type(() => UpdateNetworkWirelessSsidSchedulesRequestBodyRanges)
  ranges?: UpdateNetworkWirelessSsidSchedulesRequestBodyRanges[];

  /**
   * List of outage ranges in seconds since Sunday at Midnight. Has a start and end. If this parameter is passed in along with the ranges parameter, ranges will take precedence.
   */
  @SpeakeasyMetadata({
    elemType: UpdateNetworkWirelessSsidSchedulesRequestBodyRangesInSeconds,
  })
  @Expose({ name: "rangesInSeconds" })
  @Type(() => UpdateNetworkWirelessSsidSchedulesRequestBodyRangesInSeconds)
  rangesInSeconds?: UpdateNetworkWirelessSsidSchedulesRequestBodyRangesInSeconds[];
}

export class UpdateNetworkWirelessSsidSchedulesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkWirelessSsidSchedulesRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=number",
  })
  number: string;
}

export class UpdateNetworkWirelessSsidSchedulesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkWirelessSsidSchedules200ApplicationJSONObject?: Record<
    string,
    any
  >;
}
