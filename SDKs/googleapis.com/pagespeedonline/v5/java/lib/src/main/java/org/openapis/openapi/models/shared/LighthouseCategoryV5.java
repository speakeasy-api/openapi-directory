/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LighthouseCategoryV5 - A Lighthouse category.
 */
public class LighthouseCategoryV5 {
    /**
     * An array of references to all the audit members of this category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auditRefs")
    public AuditRefs[] auditRefs;

    public LighthouseCategoryV5 withAuditRefs(AuditRefs[] auditRefs) {
        this.auditRefs = auditRefs;
        return this;
    }
    
    /**
     * A more detailed description of the category and its importance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public LighthouseCategoryV5 withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The string identifier of the category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public LighthouseCategoryV5 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A description for the manual audits in the category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manualDescription")
    public String manualDescription;

    public LighthouseCategoryV5 withManualDescription(String manualDescription) {
        this.manualDescription = manualDescription;
        return this;
    }
    
    /**
     * The overall score of the category, the weighted average of all its audits. (The category's score, can be null.)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("score")
    public Object score;

    public LighthouseCategoryV5 withScore(Object score) {
        this.score = score;
        return this;
    }
    
    /**
     * The human-friendly name of the category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public LighthouseCategoryV5 withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public LighthouseCategoryV5(){}
}
