/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CreateProductSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * Vat mode for Product. Supported types: GROSS, NET
 */
export enum CreateProductRequestBodyVatModeEnum {
  Gross = "GROSS",
  Net = "NET",
}

export class CreateProductRequestBody extends SpeakeasyBase {
  /**
   * If set to 'false', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses.
   */
  @SpeakeasyMetadata({ data: "form, name=active" })
  active: boolean;

  /**
   * Product description.
   */
  @SpeakeasyMetadata({ data: "form, name=description" })
  description?: string;

  /**
   * If set to 'true', non-existing Licensees will be created at first validation attempt.
   */
  @SpeakeasyMetadata({ data: "form, name=licenseeAutoCreate" })
  licenseeAutoCreate?: boolean;

  /**
   * Licensing information.
   */
  @SpeakeasyMetadata({ data: "form, name=licensingInfo" })
  licensingInfo?: string;

  /**
   * Product name. Together with the version identifies the Product for the end customer.
   */
  @SpeakeasyMetadata({ data: "form, name=name" })
  name: string;

  /**
   * Unique number that identifies the Product. Vendor can assign this number when creating a Product or let NetLicensing generate one.
   */
  @SpeakeasyMetadata({ data: "form, name=number" })
  number?: string;

  /**
   * Vat mode for Product. Supported types: GROSS, NET
   */
  @SpeakeasyMetadata({ data: "form, name=vatMode" })
  vatMode?: CreateProductRequestBodyVatModeEnum;

  /**
   * Product version. Convenience parameter, additional to the Product name.
   */
  @SpeakeasyMetadata({ data: "form, name=version" })
  version: string;
}

export class CreateProductResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful request
   */
  @SpeakeasyMetadata()
  netlicensing?: shared.Netlicensing;
}
