/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Amount } from "./amount";
import { TransactionRuleInterval } from "./transactionruleinterval";
import { Expose, Type } from "class-transformer";

export enum TransactionRuleEntryModesEnum {
  Barcode = "barcode",
  Chip = "chip",
  Cof = "cof",
  Contactless = "contactless",
  Magstripe = "magstripe",
  Manual = "manual",
  Ocr = "ocr",
  Server = "server",
  Unknown = "unknown",
}

export enum TransactionRuleProcessingTypesEnum {
  AtmWithdraw = "atmWithdraw",
  BalanceInquiry = "balanceInquiry",
  Ecommerce = "ecommerce",
  Moto = "moto",
  Pos = "pos",
  Recurring = "recurring",
  Token = "token",
  Unknown = "unknown",
}

/**
 * The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created
 *
 * @remarks
 * with an **active** status.
 *
 * Possible values: **active**, **inactive**.
 */
export enum TransactionRuleStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

/**
 * Type of conditions provided in the rule.
 *
 * @remarks
 *
 * Possible values:
 *   * **allowList**: The rule provides categories (such as country and MCC) where payments must be allowed.
 *  * **blockList**: The rule provides categories (such as country and MCC) where payments must be blocked.
 *  * **maxUsage**: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.
 *  * **velocity**: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.
 *
 */
export enum TransactionRuleTypeEnum {
  AllowList = "allowList",
  BlockList = "blockList",
  MaxUsage = "maxUsage",
  Velocity = "velocity",
}

/**
 * OK - the request has succeeded.
 */
export class TransactionRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => Amount)
  amount?: Amount;

  /**
   * The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/get/balancePlatforms/{id}__queryParam_id) to which the rule applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balancePlatformId" })
  balancePlatformId?: string;

  /**
   * List of countries to which the rule applies. For example: **["NL","US"]**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countries" })
  countries?: string[];

  /**
   * Your description for the transaction rule, maximum 300 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.
   *
   * @remarks
   *
   * If not provided, the rule will be evaluated until the rule status is set to **inactive**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  endDate?: string;

  /**
   * List of point-of-sale entry modes to which the rule applies.
   *
   * @remarks
   *
   * Possible values: **manual**, **chip**, **magstripe**, **contactless**, **cof**, **token**, **server**, **barcode**, **ocr**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entryModes" })
  entryModes?: TransactionRuleEntryModesEnum[];

  /**
   * The unique identifier of the transaction rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "interval" })
  @Type(() => TransactionRuleInterval)
  interval: TransactionRuleInterval;

  /**
   * The maximum number of transactions that a payment instrument can be used for in the period specified in the `interval.type`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxTransactions" })
  maxTransactions?: number;

  /**
   * List of Merchant Category Codes (MCCs) to which the rule applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mccs" })
  mccs?: string[];

  /**
   * The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstrumentGroups__resParam_id) to which the rule applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentInstrumentGroupId" })
  paymentInstrumentGroupId?: string;

  /**
   * The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments__resParam_id) to which the rule applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentInstrumentId" })
  paymentInstrumentId?: string;

  /**
   * List of processing types to which the rule applies.
   *
   * @remarks
   *
   * Possible values: **atmWithdraw**, **pos**, **ecommerce**, **moto**, **recurring**, **balanceInquiry**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processingTypes" })
  processingTypes?: TransactionRuleProcessingTypesEnum[];

  /**
   * Your reference for the transaction rule, maximum 150 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  /**
   * The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.
   *
   * @remarks
   *
   * If not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**.
   *
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  startDate?: string;

  /**
   * The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created
   *
   * @remarks
   * with an **active** status.
   *
   * Possible values: **active**, **inactive**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TransactionRuleStatusEnum;

  /**
   * Type of conditions provided in the rule.
   *
   * @remarks
   *
   * Possible values:
   *   * **allowList**: The rule provides categories (such as country and MCC) where payments must be allowed.
   *  * **blockList**: The rule provides categories (such as country and MCC) where payments must be blocked.
   *  * **maxUsage**: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.
   *  * **velocity**: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TransactionRuleTypeEnum;
}
