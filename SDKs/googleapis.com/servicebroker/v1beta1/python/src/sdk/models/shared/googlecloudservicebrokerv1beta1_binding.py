"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudServicebrokerV1beta1Binding:
    r"""Describes the binding."""
    
    bind_resource: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bind_resource'), 'exclude': lambda f: f is None }})
    r"""A JSON object that contains data for platform resources associated with
    the binding to be created.
    """  
    binding_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('binding_id'), 'exclude': lambda f: f is None }})
    r"""The id of the binding. Must be unique within GCP project.
    Maximum length is 64, GUID recommended.
    Required.
    """  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Timestamp for when the binding was created."""  
    deployment_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deploymentName'), 'exclude': lambda f: f is None }})
    r"""Output only. String containing the Deployment Manager deployment name that was created
    for this binding,
    """  
    parameters: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""Configuration options for the service binding."""  
    plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the plan. See `Service` and `Plan` resources for details.
    Maximum length is 64, GUID recommended.
    Required.
    """  
    resource_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceName'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of the binding, e.g.
    projects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.
    """  
    service_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_id'), 'exclude': lambda f: f is None }})
    r"""The id of the service. Must be a valid identifier of a service
    contained in the list from a `ListServices()` call.
    Maximum length is 64, GUID recommended.
    Required.
    """  
    