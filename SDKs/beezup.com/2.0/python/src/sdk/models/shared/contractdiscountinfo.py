"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import promotionalcodevalidity_enum as shared_promotionalcodevalidity_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContractDiscountInfo:
    r"""Describe the discount information related to the offer."""
    
    amount_code_promo_discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountCodePromoDiscount'), 'exclude': lambda f: f is None }})
    r"""The discount amount"""  
    amount_code_promo_discount_per_month: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountCodePromoDiscountPerMonth'), 'exclude': lambda f: f is None }})
    r"""The amount discounted per month"""  
    coupon_discount_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('couponDiscountCode'), 'exclude': lambda f: f is None }})
    r"""The discount code"""  
    coupon_discount_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('couponDiscountId'), 'exclude': lambda f: f is None }})
    r"""Internal use: The discount id"""  
    customer_has_actual_discount: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerHasActualDiscount'), 'exclude': lambda f: f is None }})
    r"""Do you have currently a discount on your contract ?"""  
    discount_duration_in_month: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discountDurationInMonth'), 'exclude': lambda f: f is None }})
    r"""Duration of the discount in month"""  
    is_coupon_discount_linked_to_coupon_offer: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCouponDiscountLinkedToCouponOffer'), 'exclude': lambda f: f is None }})
    r"""Is this discount is related to a coupon offer"""  
    percent_discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentDiscount'), 'exclude': lambda f: f is None }})
    r"""Percentage of the discount"""  
    promotional_code_validity: Optional[shared_promotionalcodevalidity_enum.PromotionalCodeValidityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('promotionalCodeValidity'), 'exclude': lambda f: f is None }})
    r"""Indicate the validaty of the discount"""  
    