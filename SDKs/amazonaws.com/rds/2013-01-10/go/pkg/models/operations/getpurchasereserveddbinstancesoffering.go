// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETPurchaseReservedDBInstancesOfferingActionEnum
type GETPurchaseReservedDBInstancesOfferingActionEnum string

const (
	GETPurchaseReservedDBInstancesOfferingActionEnumPurchaseReservedDbInstancesOffering GETPurchaseReservedDBInstancesOfferingActionEnum = "PurchaseReservedDBInstancesOffering"
)

func (e *GETPurchaseReservedDBInstancesOfferingActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PurchaseReservedDBInstancesOffering":
		*e = GETPurchaseReservedDBInstancesOfferingActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPurchaseReservedDBInstancesOfferingActionEnum: %s", s)
	}
}

// GETPurchaseReservedDBInstancesOfferingVersionEnum
type GETPurchaseReservedDBInstancesOfferingVersionEnum string

const (
	GETPurchaseReservedDBInstancesOfferingVersionEnumTwoThousandAndThirteen0110 GETPurchaseReservedDBInstancesOfferingVersionEnum = "2013-01-10"
)

func (e *GETPurchaseReservedDBInstancesOfferingVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-10":
		*e = GETPurchaseReservedDBInstancesOfferingVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPurchaseReservedDBInstancesOfferingVersionEnum: %s", s)
	}
}

type GETPurchaseReservedDBInstancesOfferingRequest struct {
	Action                        GETPurchaseReservedDBInstancesOfferingActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBInstanceCount               *int64                                            `queryParam:"style=form,explode=true,name=DBInstanceCount"`
	ReservedDBInstanceID          *string                                           `queryParam:"style=form,explode=true,name=ReservedDBInstanceId"`
	ReservedDBInstancesOfferingID string                                            `queryParam:"style=form,explode=true,name=ReservedDBInstancesOfferingId"`
	Version                       GETPurchaseReservedDBInstancesOfferingVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                 *string                                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETPurchaseReservedDBInstancesOfferingResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
