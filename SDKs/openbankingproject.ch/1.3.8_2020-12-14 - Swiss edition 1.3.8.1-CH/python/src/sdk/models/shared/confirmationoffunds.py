"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountreference16_ch as shared_accountreference16_ch
from ..shared import amount as shared_amount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfirmationOfFunds:
    r"""JSON Request body for the \\"Confirmation of funds service\\".
    
    <table> 
    <tr> 
      <td>cardNumber</td> 
      <td>String </td>
      <td>Optional</td>
      <td>Card Number of the card issued by the PIISP. Should be delivered if available.</td>
    </tr>
    <tr>
      <td>account</td>
      <td> Account Reference</td>
      <td>Mandatory</td>
      <td>PSU's account number.</td>
    </tr>
    <tr>
      <td>payee</td>
      <td>Max70Text</td>
      <td>Optional</td>
      <td>The merchant where the card is accepted as an information to the PSU.</td>
    </tr>
    <tr>
      <td>instructedAmount</td>
      <td>Amount</td>
      <td>Mandatory</td>
      <td>Transaction amount to be checked within the funds check mechanism.</td>
    </tr>
    </table>
    """
    
    account: shared_accountreference16_ch.AccountReference16CH = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account') }})
    r"""Reference to an account by either
      * IBAN, of a payment accounts, or
      * otherAccountIdentification, for payment accounts if there is no IBAN
    adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
    """  
    instructed_amount: shared_amount.Amount = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instructedAmount') }})  
    card_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardNumber'), 'exclude': lambda f: f is None }})
    r"""Card Number of the card issued by the PIISP.
    Should be delivered if available.
    """  
    payee: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payee'), 'exclude': lambda f: f is None }})
    r"""Name payee."""  
    