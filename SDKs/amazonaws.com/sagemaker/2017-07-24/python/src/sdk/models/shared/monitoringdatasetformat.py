"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import monitoringcsvdatasetformat as shared_monitoringcsvdatasetformat
from ..shared import monitoringjsondatasetformat as shared_monitoringjsondatasetformat
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonitoringDatasetFormat:
    r"""Represents the dataset format used when running a monitoring job."""
    
    csv: Optional[shared_monitoringcsvdatasetformat.MonitoringCsvDatasetFormat] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Csv'), 'exclude': lambda f: f is None }})  
    json: Optional[shared_monitoringjsondatasetformat.MonitoringJSONDatasetFormat] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Json'), 'exclude': lambda f: f is None }})  
    parquet: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Parquet'), 'exclude': lambda f: f is None }})  
    