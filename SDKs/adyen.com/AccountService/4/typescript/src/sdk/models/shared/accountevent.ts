/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The event.
 *
 * @remarks
 * >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.
 * For more information, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).
 */
export enum AccountEventEventEnum {
  InactivateAccount = "InactivateAccount",
  RefundNotPaidOutTransfers = "RefundNotPaidOutTransfers",
}

export class AccountEvent extends SpeakeasyBase {
  /**
   * The event.
   *
   * @remarks
   * >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.
   * For more information, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event?: AccountEventEventEnum;

  /**
   * The date on which the event will take place.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executionDate?: Date;

  /**
   * The reason why this event has been created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}
