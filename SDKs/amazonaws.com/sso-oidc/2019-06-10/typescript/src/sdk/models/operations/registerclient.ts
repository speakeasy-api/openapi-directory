/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RegisterClientRequestBody extends SpeakeasyBase {
  /**
   * The friendly name of the client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientName" })
  clientName: string;

  /**
   * The type of client. The service supports only <code>public</code> as a client type. Anything other than public will be rejected by the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientType" })
  clientType: string;

  /**
   * The list of scopes that are defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes?: string[];
}

export class RegisterClientRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: RegisterClientRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class RegisterClientResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * InvalidClientMetadataException
   */
  @SpeakeasyMetadata()
  invalidClientMetadataException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * InvalidScopeException
   */
  @SpeakeasyMetadata()
  invalidScopeException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  registerClientResponse?: shared.RegisterClientResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
