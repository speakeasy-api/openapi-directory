// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionStateTypeEnum string

const (
	ConnectionStateTypeEnumConnected     ConnectionStateTypeEnum = "CONNECTED"
	ConnectionStateTypeEnumConnecting    ConnectionStateTypeEnum = "CONNECTING"
	ConnectionStateTypeEnumFailed        ConnectionStateTypeEnum = "FAILED"
	ConnectionStateTypeEnumDisconnected  ConnectionStateTypeEnum = "DISCONNECTED"
	ConnectionStateTypeEnumDisconnecting ConnectionStateTypeEnum = "DISCONNECTING"
)

func (e *ConnectionStateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONNECTED":
		fallthrough
	case "CONNECTING":
		fallthrough
	case "FAILED":
		fallthrough
	case "DISCONNECTED":
		fallthrough
	case "DISCONNECTING":
		*e = ConnectionStateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionStateTypeEnum: %s", s)
	}
}
