/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2CreateStoredInfoTypeRequest - Request message for CreateStoredInfoType.
 */
public class GooglePrivacyDlpV2CreateStoredInfoTypeRequest {
    /**
     * Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config")
    public GooglePrivacyDlpV2StoredInfoTypeConfig config;
    public GooglePrivacyDlpV2CreateStoredInfoTypeRequest withConfig(GooglePrivacyDlpV2StoredInfoTypeConfig config) {
        this.config = config;
        return this;
    }
    
    /**
     * Deprecated. This field has no effect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationId")
    public String locationId;
    public GooglePrivacyDlpV2CreateStoredInfoTypeRequest withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storedInfoTypeId")
    public String storedInfoTypeId;
    public GooglePrivacyDlpV2CreateStoredInfoTypeRequest withStoredInfoTypeId(String storedInfoTypeId) {
        this.storedInfoTypeId = storedInfoTypeId;
        return this;
    }
    
}
