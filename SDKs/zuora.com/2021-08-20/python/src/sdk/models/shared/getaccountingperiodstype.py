"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import getaccountingperiodwithoutsuccesstype as shared_getaccountingperiodwithoutsuccesstype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETAccountingPeriodsType:
    
    accounting_periods: Optional[list[shared_getaccountingperiodwithoutsuccesstype.GETAccountingPeriodWithoutSuccessType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountingPeriods'), 'exclude': lambda f: f is None }})
    r"""An array of all accounting periods on your tenant. The accounting periods are returned in ascending order of start date; that is, the latest period is returned first."""  
    next_page: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPage'), 'exclude': lambda f: f is None }})
    r"""URL to retrieve the next page of the response if it exists; otherwise absent."""  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})
    r"""Returns `true` if the request was processed successfully."""  
    