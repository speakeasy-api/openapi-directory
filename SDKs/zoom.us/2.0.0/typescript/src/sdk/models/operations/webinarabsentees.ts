/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class WebinarAbsenteesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class WebinarAbsenteesRequest extends SpeakeasyBase {
  /**
   * The Webinar UUID. Each Webinar instance will generate its own Webinar UUID (i.e., after a Webinar ends, a new UUID will be generated for the next instance of the Webinar). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=WebinarUUID",
  })
  webinarUUID: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The meeting occurrence ID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=occurrence_id",
  })
  occurrenceId?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;
}

/**
 * Custom Question.
 */
export class WebinarAbsenteesRegistrationListRegistrantsCustomQuestions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Registrant base object.
 */
export class WebinarAbsenteesRegistrationListRegistrants extends SpeakeasyBase {
  /**
   * Registrant's address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * Registrant's city.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * A field that allows registrants to provide any questions or comments that they might have.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  /**
   * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * The time at which the registrant registered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "create_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime?: Date;

  /**
   * Custom questions.
   */
  @SpeakeasyMetadata({
    elemType: WebinarAbsenteesRegistrationListRegistrantsCustomQuestions,
  })
  @Expose({ name: "custom_questions" })
  @Type(() => WebinarAbsenteesRegistrationListRegistrantsCustomQuestions)
  customQuestions?: WebinarAbsenteesRegistrationListRegistrantsCustomQuestions[];

  /**
   * A valid email address of the registrant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * Registrant's first name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName: string;

  /**
   * Registrant ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Registrant's Industry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "industry" })
  industry?: string;

  /**
   * Registrant's job title.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_title" })
  jobTitle?: string;

  /**
   * The URL using which an approved registrant can join the webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "join_url" })
  joinUrl?: string;

  /**
   * Registrant's last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "no_of_employees" })
  noOfEmployees?: string;

  /**
   * Registrant's Organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "org" })
  org?: string;

  /**
   * Registrant's Phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * This field can be included to gauge interest of webinar attendees towards buying your product or service.
   *
   * @remarks
   *
   * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purchasing_time_frame" })
  purchasingTimeFrame?: string;

  /**
   * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role_in_purchase_process" })
  roleInPurchaseProcess?: string;

  /**
   * Registrant's State/Province.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * The status of the registrant's registration. <br> `approved`: User has been successfully approved for the webinar.<br> `pending`:  The registration is still pending.<br> `denied`: User has been denied from joining the webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Registrant's Zip/Postal Code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zip" })
  zip?: string;
}

/**
 * Pagination Object.
 */
export class WebinarAbsenteesRegistrationList extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * @remarks
   *
   * The page number of the current results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_number" })
  pageNumber?: number;

  /**
   * The number of records returned with a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * List of registrant objects.
   */
  @SpeakeasyMetadata({ elemType: WebinarAbsenteesRegistrationListRegistrants })
  @Expose({ name: "registrants" })
  @Type(() => WebinarAbsenteesRegistrationListRegistrants)
  registrants?: WebinarAbsenteesRegistrationListRegistrants[];

  /**
   * The total number of all the records available across pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class WebinarAbsenteesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Success.<br>**Error Code:** `200`<br>
   * Webinar plan subscription is missing. Enable webinar for this user once the subscription is added:{userId}.
   */
  @SpeakeasyMetadata()
  registrationList?: WebinarAbsenteesRegistrationList;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
