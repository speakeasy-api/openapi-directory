// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OAuthClientClientTypeEnum - Determines whether client is a confidential or public client.
type OAuthClientClientTypeEnum string

const (
	OAuthClientClientTypeEnumConfidential OAuthClientClientTypeEnum = "confidential"
	OAuthClientClientTypeEnumPublic       OAuthClientClientTypeEnum = "public"
)

func (e OAuthClientClientTypeEnum) ToPointer() *OAuthClientClientTypeEnum {
	return &e
}

func (e *OAuthClientClientTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "public":
		*e = OAuthClientClientTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OAuthClientClientTypeEnum: %v", v)
	}
}

// OAuthClientGrantTypesEnum - Authorized grant types
//
// * `authorization_code`
//
// * `implicit`
//
// * `password`
//
// * `client_credentials`
//
// * `refresh_token`
//
// cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
type OAuthClientGrantTypesEnum string

const (
	OAuthClientGrantTypesEnumAuthorizationCode OAuthClientGrantTypesEnum = "authorization_code"
	OAuthClientGrantTypesEnumClientCredentials OAuthClientGrantTypesEnum = "client_credentials"
	OAuthClientGrantTypesEnumImplicit          OAuthClientGrantTypesEnum = "implicit"
	OAuthClientGrantTypesEnumPassword          OAuthClientGrantTypesEnum = "password"
	OAuthClientGrantTypesEnumRefreshToken      OAuthClientGrantTypesEnum = "refresh_token"
)

func (e OAuthClientGrantTypesEnum) ToPointer() *OAuthClientGrantTypesEnum {
	return &e
}

func (e *OAuthClientGrantTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "authorization_code":
		fallthrough
	case "client_credentials":
		fallthrough
	case "implicit":
		fallthrough
	case "password":
		fallthrough
	case "refresh_token":
		*e = OAuthClientGrantTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OAuthClientGrantTypesEnum: %v", v)
	}
}

// OAuthClient - OAuth client information
type OAuthClient struct {
	// Validity of the access token in seconds.
	AccessTokenValidity *int `json:"accessTokenValidity,omitempty"`
	// &#128640; Since v4.22.0
	//
	// Validity of the approval interval in seconds.
	ApprovalValidity *int `json:"approvalValidity,omitempty"`
	// ID of the OAuth client
	ClientID string `json:"clientId"`
	// Name, which is shown at the client configuration and authorization.
	ClientName *string `json:"clientName,omitempty"`
	// Secret, which client uses at authentication.
	ClientSecret *string `json:"clientSecret,omitempty"`
	// Determines whether client is a confidential or public client.
	ClientType *OAuthClientClientTypeEnum `json:"clientType,omitempty"`
	// Authorized grant types
	//
	// * `authorization_code`
	//
	// * `implicit`
	//
	// * `password`
	//
	// * `client_credentials`
	//
	// * `refresh_token`
	//
	//
	//
	// cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
	GrantTypes []OAuthClientGrantTypesEnum `json:"grantTypes"`
	// Determines whether client is enabled.
	IsEnabled *bool `json:"isEnabled,omitempty"`
	// Determines whether client is an external client.
	IsExternal *bool `json:"isExternal,omitempty"`
	// Determines whether client is a standard client.
	IsStandard *bool `json:"isStandard,omitempty"`
	// URIs, to which a user is redirected after authorization.
	RedirectUris []string `json:"redirectUris,omitempty"`
	// Validity of the refresh token in seconds.
	RefreshTokenValidity *int `json:"refreshTokenValidity,omitempty"`
}
