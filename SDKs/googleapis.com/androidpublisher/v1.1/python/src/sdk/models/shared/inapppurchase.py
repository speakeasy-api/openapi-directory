"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from typing import Optional


@dataclasses.dataclass
class InappPurchase:
    r"""An InappPurchase resource indicates the status of a user's inapp product purchase."""
    
    consumption_state: Optional[int] = dataclasses.field(default=None)
    r"""The consumption state of the inapp product. Possible values are:
    - Yet to be consumed 
    - Consumed
    """  
    developer_payload: Optional[str] = dataclasses.field(default=None)
    r"""A developer-specified string that contains supplemental information about an order."""  
    kind: Optional[str] = dataclasses.field(default=None)
    r"""This kind represents an inappPurchase object in the androidpublisher service."""  
    order_id: Optional[str] = dataclasses.field(default=None)
    r"""The order id associated with the purchase of the inapp product."""  
    purchase_state: Optional[int] = dataclasses.field(default=None)
    r"""The purchase state of the order. Possible values are:
    - Purchased 
    - Canceled 
    - Pending
    """  
    purchase_time: Optional[str] = dataclasses.field(default=None)
    r"""The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970)."""  
    purchase_type: Optional[int] = dataclasses.field(default=None)
    r"""The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are:
    - Test (i.e. purchased from a license testing account) 
    - Promo (i.e. purchased using a promo code) 
    - Rewarded (i.e. from watching a video ad instead of paying)
    """  
    