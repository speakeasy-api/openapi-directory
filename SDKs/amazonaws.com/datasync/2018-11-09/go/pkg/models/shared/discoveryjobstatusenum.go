// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DiscoveryJobStatusEnum string

const (
	DiscoveryJobStatusEnumRunning             DiscoveryJobStatusEnum = "RUNNING"
	DiscoveryJobStatusEnumWarning             DiscoveryJobStatusEnum = "WARNING"
	DiscoveryJobStatusEnumTerminated          DiscoveryJobStatusEnum = "TERMINATED"
	DiscoveryJobStatusEnumFailed              DiscoveryJobStatusEnum = "FAILED"
	DiscoveryJobStatusEnumStopped             DiscoveryJobStatusEnum = "STOPPED"
	DiscoveryJobStatusEnumCompleted           DiscoveryJobStatusEnum = "COMPLETED"
	DiscoveryJobStatusEnumCompletedWithIssues DiscoveryJobStatusEnum = "COMPLETED_WITH_ISSUES"
)

func (e DiscoveryJobStatusEnum) ToPointer() *DiscoveryJobStatusEnum {
	return &e
}

func (e *DiscoveryJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RUNNING":
		fallthrough
	case "WARNING":
		fallthrough
	case "TERMINATED":
		fallthrough
	case "FAILED":
		fallthrough
	case "STOPPED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "COMPLETED_WITH_ISSUES":
		*e = DiscoveryJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DiscoveryJobStatusEnum: %v", v)
	}
}
