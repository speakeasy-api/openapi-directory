/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Used to filter the workflow executions in visibility APIs by various time-based rules. Each parameter, if specified, defines a rule that must be satisfied by each returned query result. The parameter values are in the <a href="https://en.wikipedia.org/wiki/Unix_time">Unix Time format</a>. For example: <code>"oldestDate": 1325376070.</code>
 */
export class ExecutionTimeFilter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "latestDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "oldestDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  oldestDate: Date;
}
