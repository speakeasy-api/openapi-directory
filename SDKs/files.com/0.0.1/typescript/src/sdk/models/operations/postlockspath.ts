/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostLocksPathRequestBody extends SpeakeasyBase {
  /**
   * Allow lock to be updated by any user?
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=allow_access_by_any_user" })
  allowAccessByAnyUser?: boolean;

  /**
   * Is lock exclusive?
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=exclusive" })
  exclusive?: boolean;

  /**
   * Does lock apply to subfolders?
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=recursive" })
  recursive?: string;

  /**
   * Lock timeout length
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=timeout" })
  timeout?: number;
}

export class PostLocksPathRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PostLocksPathRequestBody;

  /**
   * Path
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=path",
  })
  path: string;
}

export class PostLocksPathResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The Locks object.
   */
  @SpeakeasyMetadata()
  lockEntity?: shared.LockEntity;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
