/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateUsageTriggerServerList = ["https://api.twilio.com"] as const;

export class CreateUsageTriggerSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is `POST`.
 */
export enum CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class CreateUsageTriggerCreateUsageTriggerRequest extends SpeakeasyBase {
  /**
   * The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackMethod" })
  callbackMethod?: CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum;

  /**
   * The URL we should call using `callback_method` when the trigger fires.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackUrl" })
  callbackUrl: string;

  /**
   * A descriptive string that you create to describe the resource. It can be up to 64 characters long.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  @SpeakeasyMetadata({ data: "form, name=Recurring" })
  recurring?: shared.UsageTriggerEnumRecurringEnum;

  @SpeakeasyMetadata({ data: "form, name=TriggerBy" })
  triggerBy?: shared.UsageTriggerEnumTriggerFieldEnum;

  /**
   * The usage value at which the trigger should fire.  For convenience, you can use an offset value such as `+30` to specify a trigger_value that is 30 units more than the current usage value. Be sure to urlencode a `+` as `%2B`.
   */
  @SpeakeasyMetadata({ data: "form, name=TriggerValue" })
  triggerValue: string;

  @SpeakeasyMetadata({ data: "form, name=UsageCategory" })
  usageCategory: shared.UsageTriggerEnumUsageCategoryEnum;
}

export class CreateUsageTriggerRequest extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AccountSid",
  })
  accountSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateUsageTriggerCreateUsageTriggerRequest;
}

export class CreateUsageTriggerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  apiV2010AccountUsageUsageTrigger?: shared.ApiV2010AccountUsageUsageTrigger;
}
