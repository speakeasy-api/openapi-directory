<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ReportCrossDimensionReachCriteria - The report criteria for a report of type "CROSS_DIMENSION_REACH".
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ReportCrossDimensionReachCriteria
{
    /**
     * The list of dimensions the report should include.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SortedDimension> $breakdown
     */
	#[\JMS\Serializer\Annotation\SerializedName('breakdown')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SortedDimension>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $breakdown = null;
    
    /**
     * Represents a date range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DateRange $dateRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('dateRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DateRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DateRange $dateRange = null;
    
    /**
     * The dimension option.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportCrossDimensionReachCriteriaDimensionEnum $dimension
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimension')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ReportCrossDimensionReachCriteriaDimensionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportCrossDimensionReachCriteriaDimensionEnum $dimension = null;
    
    /**
     * The list of filters on which dimensions are filtered.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DimensionValue> $dimensionFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensionFilters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DimensionValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dimensionFilters = null;
    
    /**
     * The list of names of metrics the report should include.
     * 
     * @var ?array<string> $metricNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('metricNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metricNames = null;
    
    /**
     * The list of names of overlap metrics the report should include.
     * 
     * @var ?array<string> $overlapMetricNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('overlapMetricNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $overlapMetricNames = null;
    
    /**
     * Whether the report is pivoted or not. Defaults to true.
     * 
     * @var ?bool $pivoted
     */
	#[\JMS\Serializer\Annotation\SerializedName('pivoted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $pivoted = null;
    
	public function __construct()
	{
		$this->breakdown = null;
		$this->dateRange = null;
		$this->dimension = null;
		$this->dimensionFilters = null;
		$this->metricNames = null;
		$this->overlapMetricNames = null;
		$this->pivoted = null;
	}
}
