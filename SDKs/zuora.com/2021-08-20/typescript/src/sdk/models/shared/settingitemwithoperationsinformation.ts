/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SettingItemHttpOperation } from "./settingitemhttpoperation";
import { Expose, Type } from "class-transformer";

/**
 * The context where this setting item is effective.
 */
export enum SettingItemWithOperationsInformationContextEnum {
  Tenant = "Tenant",
  Entity = "Entity",
  User = "User",
  None = "None",
}

export class SettingItemWithOperationsInformation extends SpeakeasyBase {
  /**
   * The context where this setting item is effective.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "context" })
  context?: SettingItemWithOperationsInformationContextEnum;

  /**
   * The description of the setting item as you see from Zuora UI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * An array of HTTP operation methods that are supported on this setting endpoint.
   */
  @SpeakeasyMetadata({ elemType: SettingItemHttpOperation })
  @Expose({ name: "httpOperations" })
  @Type(() => SettingItemHttpOperation)
  httpOperations?: SettingItemHttpOperation[];

  /**
   * The unique key to distinguish the setting item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * The path pattern of the setting endpoint, relative to `/settings`. For example, `/billing-rules`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pathPattern" })
  pathPattern?: string;
}
