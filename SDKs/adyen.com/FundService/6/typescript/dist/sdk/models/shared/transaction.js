"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transaction = exports.TransactionTransactionStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var amount_1 = require("./amount");
var bankaccountdetail_1 = require("./bankaccountdetail");
var class_transformer_1 = require("class-transformer");
/**
 * The status of the transaction.
 *
 * @remarks
 * >Permitted values: `PendingCredit`, `CreditFailed`, `CreditClosed`, `CreditSuspended`, `Credited`, `Converted`, `PendingDebit`, `DebitFailed`, `Debited`, `DebitReversedReceived`, `DebitedReversed`, `ChargebackReceived`, `Chargeback`, `ChargebackReversedReceived`, `ChargebackReversed`, `Payout`, `PayoutReversed`, `FundTransfer`, `PendingFundTransfer`, `ManualCorrected`.
 */
var TransactionTransactionStatusEnum;
(function (TransactionTransactionStatusEnum) {
    TransactionTransactionStatusEnum["BalanceNotPaidOutTransfer"] = "BalanceNotPaidOutTransfer";
    TransactionTransactionStatusEnum["BalancePlatformSweep"] = "BalancePlatformSweep";
    TransactionTransactionStatusEnum["BalancePlatformSweepReturned"] = "BalancePlatformSweepReturned";
    TransactionTransactionStatusEnum["Chargeback"] = "Chargeback";
    TransactionTransactionStatusEnum["ChargebackCorrection"] = "ChargebackCorrection";
    TransactionTransactionStatusEnum["ChargebackCorrectionReceived"] = "ChargebackCorrectionReceived";
    TransactionTransactionStatusEnum["ChargebackReceived"] = "ChargebackReceived";
    TransactionTransactionStatusEnum["ChargebackReversed"] = "ChargebackReversed";
    TransactionTransactionStatusEnum["ChargebackReversedCorrection"] = "ChargebackReversedCorrection";
    TransactionTransactionStatusEnum["ChargebackReversedCorrectionReceived"] = "ChargebackReversedCorrectionReceived";
    TransactionTransactionStatusEnum["ChargebackReversedReceived"] = "ChargebackReversedReceived";
    TransactionTransactionStatusEnum["Converted"] = "Converted";
    TransactionTransactionStatusEnum["CreditClosed"] = "CreditClosed";
    TransactionTransactionStatusEnum["CreditFailed"] = "CreditFailed";
    TransactionTransactionStatusEnum["CreditReversed"] = "CreditReversed";
    TransactionTransactionStatusEnum["CreditReversedReceived"] = "CreditReversedReceived";
    TransactionTransactionStatusEnum["CreditSuspended"] = "CreditSuspended";
    TransactionTransactionStatusEnum["Credited"] = "Credited";
    TransactionTransactionStatusEnum["DebitFailed"] = "DebitFailed";
    TransactionTransactionStatusEnum["DebitReversedReceived"] = "DebitReversedReceived";
    TransactionTransactionStatusEnum["Debited"] = "Debited";
    TransactionTransactionStatusEnum["DebitedReversed"] = "DebitedReversed";
    TransactionTransactionStatusEnum["DepositCorrectionCredited"] = "DepositCorrectionCredited";
    TransactionTransactionStatusEnum["DepositCorrectionDebited"] = "DepositCorrectionDebited";
    TransactionTransactionStatusEnum["Fee"] = "Fee";
    TransactionTransactionStatusEnum["FundTransfer"] = "FundTransfer";
    TransactionTransactionStatusEnum["FundTransferReversed"] = "FundTransferReversed";
    TransactionTransactionStatusEnum["InvoiceDeductionCredited"] = "InvoiceDeductionCredited";
    TransactionTransactionStatusEnum["InvoiceDeductionDebited"] = "InvoiceDeductionDebited";
    TransactionTransactionStatusEnum["ManualCorrected"] = "ManualCorrected";
    TransactionTransactionStatusEnum["ManualCorrectionCredited"] = "ManualCorrectionCredited";
    TransactionTransactionStatusEnum["ManualCorrectionDebited"] = "ManualCorrectionDebited";
    TransactionTransactionStatusEnum["MerchantPayin"] = "MerchantPayin";
    TransactionTransactionStatusEnum["MerchantPayinReversed"] = "MerchantPayinReversed";
    TransactionTransactionStatusEnum["Payout"] = "Payout";
    TransactionTransactionStatusEnum["PayoutReversed"] = "PayoutReversed";
    TransactionTransactionStatusEnum["PendingCredit"] = "PendingCredit";
    TransactionTransactionStatusEnum["PendingDebit"] = "PendingDebit";
    TransactionTransactionStatusEnum["PendingFundTransfer"] = "PendingFundTransfer";
    TransactionTransactionStatusEnum["ReCredited"] = "ReCredited";
    TransactionTransactionStatusEnum["ReCreditedReceived"] = "ReCreditedReceived";
    TransactionTransactionStatusEnum["SecondChargeback"] = "SecondChargeback";
    TransactionTransactionStatusEnum["SecondChargebackCorrection"] = "SecondChargebackCorrection";
    TransactionTransactionStatusEnum["SecondChargebackCorrectionReceived"] = "SecondChargebackCorrectionReceived";
    TransactionTransactionStatusEnum["SecondChargebackReceived"] = "SecondChargebackReceived";
})(TransactionTransactionStatusEnum = exports.TransactionTransactionStatusEnum || (exports.TransactionTransactionStatusEnum = {}));
var Transaction = /** @class */ (function (_super) {
    __extends(Transaction, _super);
    function Transaction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        (0, class_transformer_1.Type)(function () { return amount_1.Amount; }),
        __metadata("design:type", amount_1.Amount)
    ], Transaction.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankAccountDetail" }),
        (0, class_transformer_1.Type)(function () { return bankaccountdetail_1.BankAccountDetail; }),
        __metadata("design:type", bankaccountdetail_1.BankAccountDetail)
    ], Transaction.prototype, "bankAccountDetail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "captureMerchantReference" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "captureMerchantReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "capturePspReference" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "capturePspReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Transaction.prototype, "creationDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destinationAccountCode" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "destinationAccountCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disputePspReference" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "disputePspReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disputeReasonCode" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "disputeReasonCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchantReference" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "merchantReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentPspReference" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "paymentPspReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payoutPspReference" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "payoutPspReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pspReference" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "pspReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceAccountCode" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "sourceAccountCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactionStatus" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "transactionStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferCode" }),
        __metadata("design:type", String)
    ], Transaction.prototype, "transferCode", void 0);
    return Transaction;
}(utils_1.SpeakeasyBase));
exports.Transaction = Transaction;
