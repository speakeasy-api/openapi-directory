// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeProjectXAmzTargetEnum
type DescribeProjectXAmzTargetEnum string

const (
	DescribeProjectXAmzTargetEnumCodeStar20170419DescribeProject DescribeProjectXAmzTargetEnum = "CodeStar_20170419.DescribeProject"
)

func (e DescribeProjectXAmzTargetEnum) ToPointer() *DescribeProjectXAmzTargetEnum {
	return &e
}

func (e *DescribeProjectXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeStar_20170419.DescribeProject":
		*e = DescribeProjectXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeProjectXAmzTargetEnum: %v", v)
	}
}

type DescribeProjectRequest struct {
	DescribeProjectRequest shared.DescribeProjectRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             DescribeProjectXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeProjectResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	DescribeProjectResult *shared.DescribeProjectResult
	// InvalidServiceRoleException
	InvalidServiceRoleException interface{}
	// ProjectConfigurationException
	ProjectConfigurationException interface{}
	// ProjectNotFoundException
	ProjectNotFoundException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ValidationException
	ValidationException interface{}
}
