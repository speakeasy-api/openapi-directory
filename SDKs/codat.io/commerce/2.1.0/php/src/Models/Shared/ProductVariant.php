<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProductVariant - Represents a variation of a product available for sale, for example an item of clothing that may be available for sale in multiple sizes and colors.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProductVariant
{
    /**
     * Unique product number of the variant. This might be a barcode, UPC, ISBN, etc.
     * 
     * @var ?string $barcode
     */
	#[\JMS\Serializer\Annotation\SerializedName('barcode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $barcode = null;
    
    /**
     * In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
     * 
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * > Time zones
     * > 
     * > Not all dates from Codat will contain information about time zones.  
     * > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     * 
     * @var ?string $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdDate = null;
    
    /**
     * A unique, persistent identifier for this record
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Information about the total inventory as well as the locations inventory is in.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ProductInventory> $inventory
     */
	#[\JMS\Serializer\Annotation\SerializedName('inventory')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ProductInventory>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $inventory = null;
    
    /**
     * Whether sales taxes are enabled for this product variant.
     * 
     * @var ?bool $isTaxEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('isTaxEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isTaxEnabled = null;
    
    /**
     * In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
     * 
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * > Time zones
     * > 
     * > Not all dates from Codat will contain information about time zones.  
     * > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     * 
     * @var ?string $modifiedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modifiedDate = null;
    
    /**
     * Name of the product recorded in the commerce or point of sale platform.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Prices for the product variants in different currencies.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ProductPrice> $prices
     */
	#[\JMS\Serializer\Annotation\SerializedName('prices')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ProductPrice>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $prices = null;
    
    /**
     * Indicates whether or not the product requires physical delivery.
     * 
     * @var ?bool $shippingRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('shippingRequired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shippingRequired = null;
    
    /**
     * SKU (stock keeping unit) of the variant, as defined by the merchant.
     * 
     * @var ?string $sku
     */
	#[\JMS\Serializer\Annotation\SerializedName('sku')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sku = null;
    
    /**
     * In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
     * 
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * > Time zones
     * > 
     * > Not all dates from Codat will contain information about time zones.  
     * > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     * 
     * @var ?string $sourceModifiedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceModifiedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceModifiedDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProductVariantStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProductVariantStatusEnum $status = null;
    
    /**
     * Unit of measure for the variant, such as `kg` or `meters`.
     * 
     * @var ?string $unitOfMeasure
     */
	#[\JMS\Serializer\Annotation\SerializedName('unitOfMeasure')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unitOfMeasure = null;
    
    /**
     * VAT rate for the product variant if sales taxes are enabled.
     * 
     * @var ?float $vatPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('vatPercentage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $vatPercentage = null;
    
	public function __construct()
	{
		$this->barcode = null;
		$this->createdDate = null;
		$this->id = "";
		$this->inventory = null;
		$this->isTaxEnabled = null;
		$this->modifiedDate = null;
		$this->name = null;
		$this->prices = null;
		$this->shippingRequired = null;
		$this->sku = null;
		$this->sourceModifiedDate = null;
		$this->status = null;
		$this->unitOfMeasure = null;
		$this->vatPercentage = null;
	}
}
