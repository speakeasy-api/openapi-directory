"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class SubscriptionProductRenewalPeriodUnitEnum(str, Enum):
    r"""The unit of time that `renewalPeriod` is measured in"""
    MONTH = 'MONTH'
    QUARTER = 'QUARTER'
    SEMI_ANNUAL = 'SEMI_ANNUAL'
    YEAR = 'YEAR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscriptionProduct:
    
    label: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label') }})
    r"""A human readable description of the Product that is subscribed"""  
    namespace: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namespace') }})
    r"""Grouping of related Subscriptions"""  
    pfid: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pfid') }})
    r"""Unique identifier of the Product that is subscribed"""  
    product_group_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productGroupKey') }})
    r"""Primary key of a grouping of related Subscriptions"""  
    renewal_period: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renewalPeriod') }})
    r"""The number of `renewalPeriodUnits` that will be added by the `renewalPfid`"""  
    renewal_period_unit: SubscriptionProductRenewalPeriodUnitEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renewalPeriodUnit') }})
    r"""The unit of time that `renewalPeriod` is measured in"""  
    renewal_pfid: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renewalPfid') }})
    r"""Unique identifier of the renewal Product"""  
    support_bill_on: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportBillOn') }})
    r"""Whether the product supports the `billOn` option on the renewal endpoint"""  
    