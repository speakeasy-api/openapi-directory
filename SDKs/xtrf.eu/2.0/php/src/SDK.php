<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href="/home-api/openapi.json">here</a> <br>
 * 
 *   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 */
class SDK
{
	public const SERVERS = [
		'https://presentation.s.xtrf.eu/home-api',
	];
  	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Browser $$browser
     */
	public Browser $browser;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var ClientInvoices $$clientInvoices
     */
	public ClientInvoices $clientInvoices;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Clients $$clients
     */
	public Clients $clients;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var CurrencyExchangeRates $$currencyExchangeRates
     */
	public CurrencyExchangeRates $currencyExchangeRates;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Dictionaries $$dictionaries
     */
	public Dictionaries $dictionaries;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Files $$files
     */
	public Files $files;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var JobsClassic $$jobsClassic
     */
	public JobsClassic $jobsClassic;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var JobsSmartV2 $$jobsSmartV2
     */
	public JobsSmartV2 $jobsSmartV2;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var License $$license
     */
	public License $license;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Macros $$macros
     */
	public Macros $macros;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var ProjectsClassic $$projectsClassic
     */
	public ProjectsClassic $projectsClassic;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var ProjectsSmartV2 $$projectsSmartV2
     */
	public ProjectsSmartV2 $projectsSmartV2;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var QuotesClassic $$quotesClassic
     */
	public QuotesClassic $quotesClassic;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var QuotesSmartV2 $$quotesSmartV2
     */
	public QuotesSmartV2 $quotesSmartV2;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Reports $$reports
     */
	public Reports $reports;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Subscription $$subscription
     */
	public Subscription $subscription;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var TasksClassic $$tasksClassic
     */
	public TasksClassic $tasksClassic;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Users $$users
     */
	public Users $users;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var VendorInvoices $$vendorInvoices
     */
	public VendorInvoices $vendorInvoices;
	
    /**
     * To change the description use /examples/TagsDescriptions.json
     * 
     * @var Vendors $$vendors
     */
	public Vendors $vendors;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	private ?Models\Shared\Security $_security;
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client	 
	 * @param Models\Shared\Security|null $security
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, ?Models\Shared\Security $security, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($security !== null) {
			$this->_security = $security;
			$this->_securityClient = Utils\Utils::configureSecurityClient($this->_defaultClient, $this->_security);
		}
		
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->browser = new Browser(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->clientInvoices = new ClientInvoices(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->clients = new Clients(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->currencyExchangeRates = new CurrencyExchangeRates(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->dictionaries = new Dictionaries(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->files = new Files(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->jobsClassic = new JobsClassic(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->jobsSmartV2 = new JobsSmartV2(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->license = new License(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->macros = new Macros(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->projectsClassic = new ProjectsClassic(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->projectsSmartV2 = new ProjectsSmartV2(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->quotesClassic = new QuotesClassic(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->quotesSmartV2 = new QuotesSmartV2(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->reports = new Reports(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->subscription = new Subscription(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->tasksClassic = new TasksClassic(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->users = new Users(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->vendorInvoices = new VendorInvoices(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->vendors = new Vendors(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}