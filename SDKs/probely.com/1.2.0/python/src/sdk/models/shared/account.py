"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import accountautocollection_enum as shared_accountautocollection_enum
from ..shared import accountstatus_enum as shared_accountstatus_enum
from ..shared import plan as shared_plan
from dataclasses_json import Undefined, dataclass_json
from datetime import date, datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Account:
    r"""Account data"""
    
    auto_collection: Optional[shared_accountautocollection_enum.AccountAutoCollectionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_collection'), 'exclude': lambda f: f is None }})
    r"""Collection for the next billing period is autommatic/manual"""  
    balance: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})
    r"""Account balance in cents"""  
    balance_currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance_currency_code'), 'exclude': lambda f: f is None }})
    r"""3 letter currency code"""  
    free_target_quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('free_target_quantity'), 'exclude': lambda f: f is None }})
    r"""Number of free targets"""  
    has_used_trial: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('has_used_trial'), 'exclude': lambda f: f is None }})
    r"""Has account used up it's trial"""  
    heroku: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('heroku'), 'exclude': lambda f: f is None }})
    r"""Heroku accounts (for future use)"""  
    next_billing_at: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_billing_at'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date of next billing"""  
    plan: Optional[shared_plan.Plan] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan'), 'exclude': lambda f: f is None }})  
    plan_target_quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_target_quantity'), 'exclude': lambda f: f is None }})
    r"""Number of subscribed targets"""  
    pool_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pool_size'), 'exclude': lambda f: f is None }})
    r"""Maximum number of subscribed target for pool plans"""  
    status: Optional[shared_accountstatus_enum.AccountStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""* active - active subscription, either trial or paying
    * trial_ended - trial ended and subscription was discontinued
    * canceled - subscription canceled
    """  
    trial_end: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trialEnd'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Trial termination date"""  
    