/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PrivateCollectionsListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * The field by which to order. Default varies by endpoint/resource.
 */
export enum PrivateCollectionsListOrderEnum {
  PublishedDate = "published_date",
  ModifiedDate = "modified_date",
  Views = "views",
  Shares = "shares",
  Cites = "cites",
}

export enum PrivateCollectionsListOrderDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

export class PrivateCollectionsListRequest extends SpeakeasyBase {
  /**
   * Number of results included on a page. Used for pagination with query
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * The field by which to order. Default varies by endpoint/resource.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: PrivateCollectionsListOrderEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_direction",
  })
  orderDirection?: PrivateCollectionsListOrderDirectionEnum;

  /**
   * Page number. Used for pagination with page_size
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results included on a page. Used for pagination with page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;
}

export class PrivateCollectionsListResponse extends SpeakeasyBase {
  /**
   * OK. An array of collections
   */
  @SpeakeasyMetadata({ elemType: shared.Collection })
  collections?: shared.Collection[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  errorMessage?: shared.ErrorMessage;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
