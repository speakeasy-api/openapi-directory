// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum string

const (
	ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnumXML  ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum = "xml"
	ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnumJSON ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum = "json"
)

func (e ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum) ToPointer() *ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum {
	return &e
}

func (e *ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xml":
		fallthrough
	case "json":
		*e = ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum: %v", v)
	}
}

type ProjectedPlayerGameStatsByCompetitionWDfsSalariesRequest struct {
	// An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.
	Competition string `pathParam:"style=simple,explode=false,name=competition"`
	// The date of the game(s).
	// <br>Examples: <code>2017-02-27</code>, <code>2017-09-01</code>.
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerGameStatsByCompetitionWDfsSalariesFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type ProjectedPlayerGameStatsByCompetitionWDfsSalariesResponse struct {
	ContentType           string
	PlayerGameProjections []shared.PlayerGameProjection
	StatusCode            int
	RawResponse           *http.Response
}
