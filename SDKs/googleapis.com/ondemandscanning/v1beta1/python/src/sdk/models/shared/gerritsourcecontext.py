"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aliascontext as shared_aliascontext
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GerritSourceContext:
    r"""A SourceContext referring to a Gerrit project."""
    
    alias_context: Optional[shared_aliascontext.AliasContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aliasContext'), 'exclude': lambda f: f is None }})
    r"""An alias to a repo revision."""  
    gerrit_project: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gerritProject'), 'exclude': lambda f: f is None }})
    r"""The full project name within the host. Projects may be nested, so \\"project/subproject\\" is a valid project name. The \\"repo name\\" is the hostURI/project."""  
    host_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hostUri'), 'exclude': lambda f: f is None }})
    r"""The URI of a running Gerrit instance."""  
    revision_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revisionId'), 'exclude': lambda f: f is None }})
    r"""A revision (commit) ID."""  
    