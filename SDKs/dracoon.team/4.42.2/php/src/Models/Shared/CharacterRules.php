<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CharacterRules - Password character rules
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CharacterRules
{
    /**
     * Characters which a password must contain:
     * 
     * 
     * * `alpha` - at least one alphabetical character (`uppercase` OR `lowercase`)
     * 
     * * `uppercase` - at least one uppercase character
     * 
     * * `lowercase` - at least one lowercase character
     * 
     * * `numeric` - at least one numeric character
     * 
     * * `special` - at least one special character (letters and digits excluded)
     * 
     * * `all` - combination of `uppercase`, `lowercase`, `numeric` and `special` (available only in request models)
     * 
     * * `none` - none of the above
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CharacterRulesMustContainCharactersEnum $mustContainCharacters
     */
	#[\JMS\Serializer\Annotation\SerializedName('mustContainCharacters')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CharacterRulesMustContainCharactersEnum>')]
    public CharacterRulesMustContainCharactersEnum $mustContainCharacters;
    
    /**
     * Number of characteristics to enforce
     * 
     * 
     * e.g. from `["uppercase", "lowercase", "numeric", "special"]`
     * 
     * all 4 character sets can be enforced; but also only 2 of them
     * 
     * @var int $numberOfCharacteristicsToEnforce
     */
	#[\JMS\Serializer\Annotation\SerializedName('numberOfCharacteristicsToEnforce')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $numberOfCharacteristicsToEnforce;
    
	public function __construct()
	{
		$this->mustContainCharacters = \OpenAPI\OpenAPI\Models\Shared\CharacterRulesMustContainCharactersEnum::ALPHA;
		$this->numberOfCharacteristicsToEnforce = 0;
	}
}
