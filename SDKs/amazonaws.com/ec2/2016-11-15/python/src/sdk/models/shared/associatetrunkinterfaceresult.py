"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class AssociateTrunkInterfaceResultInterfaceAssociationInterfaceProtocolEnum(str, Enum):
    r"""The interface protocol. Valid values are <code>VLAN</code> and <code>GRE</code>."""
    VLAN = 'VLAN'
    GRE = 'GRE'


@dataclasses.dataclass
class AssociateTrunkInterfaceResultInterfaceAssociationTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class AssociateTrunkInterfaceResultInterfaceAssociation:
    r"""Information about the association between the trunk network interface and branch network interface."""
    
    association_id: Optional[str] = dataclasses.field(default=None)  
    branch_interface_id: Optional[str] = dataclasses.field(default=None)  
    gre_key: Optional[int] = dataclasses.field(default=None)  
    interface_protocol: Optional[AssociateTrunkInterfaceResultInterfaceAssociationInterfaceProtocolEnum] = dataclasses.field(default=None)  
    tags: Optional[list[AssociateTrunkInterfaceResultInterfaceAssociationTags]] = dataclasses.field(default=None)  
    trunk_interface_id: Optional[str] = dataclasses.field(default=None)  
    vlan_id: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class AssociateTrunkInterfaceResult:
    r"""Success"""
    
    client_token: Optional[str] = dataclasses.field(default=None)  
    interface_association: Optional[AssociateTrunkInterfaceResultInterfaceAssociation] = dataclasses.field(default=None)  
    