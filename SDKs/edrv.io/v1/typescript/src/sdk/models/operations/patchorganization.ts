/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PatchOrganizationRequestBodyAddress extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "streetAndNumber" })
  streetAndNumber?: string;
}

export class PatchOrganizationRequestBodyChannels extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "slack" })
  slack?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "telegram" })
  telegram?: Record<string, any>;
}

export class PatchOrganizationRequestBodyConfigurations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "basicAuthEnabled" })
  basicAuthEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "basicAuthPassword" })
  basicAuthPassword?: boolean;
}

export class PatchOrganizationRequestBodyLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "about" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  contact?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "privacy" })
  privacy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "support" })
  support?: string;
}

export class PatchOrganizationRequestBodySupportChat extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class PatchOrganizationRequestBodySupport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "business_hours" })
  businessHours?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "chat" })
  @Type(() => PatchOrganizationRequestBodySupportChat)
  chat?: PatchOrganizationRequestBodySupportChat;

  @SpeakeasyMetadata()
  @Expose({ name: "contact_number" })
  contactNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;
}

export class PatchOrganizationRequestBodySupportChat1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class PatchOrganizationRequestBodyThemeColors extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  primary?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "secondary" })
  secondary?: string;
}

export class PatchOrganizationRequestBodyTheme extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "colors" })
  @Type(() => PatchOrganizationRequestBodyThemeColors)
  colors?: PatchOrganizationRequestBodyThemeColors;
}

/**
 * Include organization properties to create here
 */
export class PatchOrganizationRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => PatchOrganizationRequestBodyAddress)
  address?: PatchOrganizationRequestBodyAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "channels" })
  @Type(() => PatchOrganizationRequestBodyChannels)
  channels?: PatchOrganizationRequestBodyChannels;

  @SpeakeasyMetadata()
  @Expose({ name: "configurations" })
  @Type(() => PatchOrganizationRequestBodyConfigurations)
  configurations?: PatchOrganizationRequestBodyConfigurations;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => PatchOrganizationRequestBodyLinks)
  links?: PatchOrganizationRequestBodyLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "locations" })
  locations?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "logo" })
  logo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "otp" })
  otp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stripe_connected_account_id" })
  stripeConnectedAccountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stripe_country" })
  stripeCountry?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stripe_currency" })
  stripeCurrency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stripe_reserve_amount" })
  stripeReserveAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "support" })
  @Type(() => PatchOrganizationRequestBodySupport)
  support?: PatchOrganizationRequestBodySupport;

  @SpeakeasyMetadata()
  @Expose({ name: "supportChat" })
  @Type(() => PatchOrganizationRequestBodySupportChat1)
  supportChat?: PatchOrganizationRequestBodySupportChat1;

  @SpeakeasyMetadata()
  @Expose({ name: "theme" })
  @Type(() => PatchOrganizationRequestBodyTheme)
  theme?: PatchOrganizationRequestBodyTheme;
}

export class PatchOrganizationRequest extends SpeakeasyBase {
  /**
   * Include organization properties to create here
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchOrganizationRequestBody;

  /**
   * ID of organization that needs to be updated
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class PatchOrganizationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
