/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.util.function.Function;
import java.util.stream.Collectors;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;

public class PricingConfiguration {
	
    /**
	 * GET_PRICING_CONFIG_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] GET_PRICING_CONFIG_SERVERS = {
        "https://api.vtex.com/{account}/pricing",
    };
	
    /**
	 * GET_PRICINGV2_STATUS_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] GET_PRICINGV2_STATUS_SERVERS = {
        "https://api.vtex.com/{account}/pricing",
    };
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public PricingConfiguration(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Get Pricing Configuration
     * Retrieves Pricing Configuration.
     * ## Response body example
     * 
     * ```json
     * {
     *     "hasMigrated": true,
     *     "migrationStatus": "Completed",
     *     "defaultMarkup": 100,
     *     "priceVariation": {
     *         "upperLimit": null,
     *         "lowerLimit": null
     *     },
     *     "minimumMarkups": {
     *         "1": 100,
     *         "2": 90
     *     },
     *     "tradePolicyConfigs": [],
     *     "sellersToOverride": [],
     *     "hasPriceInheritance": false,
     *     "priceInheritance": "never",
     *     "hasOptionalBasePrice": false,
     *     "blockAccount": false,
     *     "blockedRoutes": null,
     *     "priceTableSelectionStrategy": "first",
     *     "priceTableLimit": null
     * }
     * ```
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetPricingConfigResponse getPricingConfig(org.openapis.openapi.models.operations.GetPricingConfigRequest request) throws Exception {
        return this.getPricingConfig(request, null);
    }

    /**
     * Get Pricing Configuration
     * Retrieves Pricing Configuration.
     * ## Response body example
     * 
     * ```json
     * {
     *     "hasMigrated": true,
     *     "migrationStatus": "Completed",
     *     "defaultMarkup": 100,
     *     "priceVariation": {
     *         "upperLimit": null,
     *         "lowerLimit": null
     *     },
     *     "minimumMarkups": {
     *         "1": 100,
     *         "2": 90
     *     },
     *     "tradePolicyConfigs": [],
     *     "sellersToOverride": [],
     *     "hasPriceInheritance": false,
     *     "priceInheritance": "never",
     *     "hasOptionalBasePrice": false,
     *     "blockAccount": false,
     *     "blockedRoutes": null,
     *     "priceTableSelectionStrategy": "first",
     *     "priceTableLimit": null
     * }
     * ```
     * @param request the request object containing all of the parameters for the API call
     * @param serverURL an optional server URL to use
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetPricingConfigResponse getPricingConfig(org.openapis.openapi.models.operations.GetPricingConfigRequest request, String serverURL) throws Exception {
        String baseUrl = GET_PRICING_CONFIG_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/pricing/config");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetPricingConfigResponse res = new org.openapis.openapi.models.operations.GetPricingConfigResponse() {{
            pricingConfiguration = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PricingConfiguration out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PricingConfiguration.class);
                res.pricingConfiguration = out;
            }
        }

        return res;
    }

    /**
     * Get Pricing v2 Status
     * Retrieves Pricing v2 Status. 
     * ## Response body example
     * 
     * ```json
     * {
     *     "isActive": true,
     *     "hasMigrated": true
     * }
     * ```
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetPricingv2StatusResponse getPricingv2Status(org.openapis.openapi.models.operations.GetPricingv2StatusRequest request) throws Exception {
        return this.getPricingv2Status(request, null);
    }

    /**
     * Get Pricing v2 Status
     * Retrieves Pricing v2 Status. 
     * ## Response body example
     * 
     * ```json
     * {
     *     "isActive": true,
     *     "hasMigrated": true
     * }
     * ```
     * @param request the request object containing all of the parameters for the API call
     * @param serverURL an optional server URL to use
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetPricingv2StatusResponse getPricingv2Status(org.openapis.openapi.models.operations.GetPricingv2StatusRequest request, String serverURL) throws Exception {
        String baseUrl = GET_PRICINGV2_STATUS_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/pricing/migration");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetPricingv2StatusResponse res = new org.openapis.openapi.models.operations.GetPricingv2StatusResponse() {{
            getPricingv2Status200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            res.headers = httpRes.headers().map().keySet().stream().collect(Collectors.toMap(Function.identity(), k -> httpRes.headers().allValues(k).toArray(new String[0])));
            
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.GetPricingv2Status200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.GetPricingv2Status200ApplicationJSON.class);
                res.getPricingv2Status200ApplicationJSONObject = out;
            }
        }

        return res;
    }
}