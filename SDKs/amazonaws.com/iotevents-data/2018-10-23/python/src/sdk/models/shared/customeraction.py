"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import acknowledgeactionconfiguration as shared_acknowledgeactionconfiguration
from ..shared import customeractionname_enum as shared_customeractionname_enum
from ..shared import disableactionconfiguration as shared_disableactionconfiguration
from ..shared import enableactionconfiguration as shared_enableactionconfiguration
from ..shared import resetactionconfiguration as shared_resetactionconfiguration
from ..shared import snoozeactionconfiguration as shared_snoozeactionconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomerAction:
    r"""Contains information about the action that you can take to respond to the alarm."""
    
    acknowledge_action_configuration: Optional[shared_acknowledgeactionconfiguration.AcknowledgeActionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acknowledgeActionConfiguration'), 'exclude': lambda f: f is None }})  
    action_name: Optional[shared_customeractionname_enum.CustomerActionNameEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionName'), 'exclude': lambda f: f is None }})  
    disable_action_configuration: Optional[shared_disableactionconfiguration.DisableActionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disableActionConfiguration'), 'exclude': lambda f: f is None }})  
    enable_action_configuration: Optional[shared_enableactionconfiguration.EnableActionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableActionConfiguration'), 'exclude': lambda f: f is None }})  
    reset_action_configuration: Optional[shared_resetactionconfiguration.ResetActionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resetActionConfiguration'), 'exclude': lambda f: f is None }})  
    snooze_action_configuration: Optional[shared_snoozeactionconfiguration.SnoozeActionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snoozeActionConfiguration'), 'exclude': lambda f: f is None }})  
    