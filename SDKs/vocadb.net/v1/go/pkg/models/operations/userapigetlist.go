// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// UserAPIGetListFieldsEnum - Optional fields. Possible values are None and MainPicture. Optional.
type UserAPIGetListFieldsEnum string

const (
	UserAPIGetListFieldsEnumNone           UserAPIGetListFieldsEnum = "None"
	UserAPIGetListFieldsEnumKnownLanguages UserAPIGetListFieldsEnum = "KnownLanguages"
	UserAPIGetListFieldsEnumMainPicture    UserAPIGetListFieldsEnum = "MainPicture"
	UserAPIGetListFieldsEnumOldUsernames   UserAPIGetListFieldsEnum = "OldUsernames"
)

func (e *UserAPIGetListFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "KnownLanguages":
		fallthrough
	case "MainPicture":
		fallthrough
	case "OldUsernames":
		*e = UserAPIGetListFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetListFieldsEnum: %s", s)
	}
}

// UserAPIGetListGroupsEnum - Filter by user group. Only one value supported for now. Optional.
type UserAPIGetListGroupsEnum string

const (
	UserAPIGetListGroupsEnumNothing   UserAPIGetListGroupsEnum = "Nothing"
	UserAPIGetListGroupsEnumLimited   UserAPIGetListGroupsEnum = "Limited"
	UserAPIGetListGroupsEnumRegular   UserAPIGetListGroupsEnum = "Regular"
	UserAPIGetListGroupsEnumTrusted   UserAPIGetListGroupsEnum = "Trusted"
	UserAPIGetListGroupsEnumModerator UserAPIGetListGroupsEnum = "Moderator"
	UserAPIGetListGroupsEnumAdmin     UserAPIGetListGroupsEnum = "Admin"
)

func (e *UserAPIGetListGroupsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Limited":
		fallthrough
	case "Regular":
		fallthrough
	case "Trusted":
		fallthrough
	case "Moderator":
		fallthrough
	case "Admin":
		*e = UserAPIGetListGroupsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetListGroupsEnum: %s", s)
	}
}

// UserAPIGetListNameMatchModeEnum - Name match mode.
type UserAPIGetListNameMatchModeEnum string

const (
	UserAPIGetListNameMatchModeEnumAuto       UserAPIGetListNameMatchModeEnum = "Auto"
	UserAPIGetListNameMatchModeEnumPartial    UserAPIGetListNameMatchModeEnum = "Partial"
	UserAPIGetListNameMatchModeEnumStartsWith UserAPIGetListNameMatchModeEnum = "StartsWith"
	UserAPIGetListNameMatchModeEnumExact      UserAPIGetListNameMatchModeEnum = "Exact"
	UserAPIGetListNameMatchModeEnumWords      UserAPIGetListNameMatchModeEnum = "Words"
)

func (e *UserAPIGetListNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = UserAPIGetListNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetListNameMatchModeEnum: %s", s)
	}
}

// UserAPIGetListSortEnum - Sort rule.
type UserAPIGetListSortEnum string

const (
	UserAPIGetListSortEnumRegisterDate UserAPIGetListSortEnum = "RegisterDate"
	UserAPIGetListSortEnumName         UserAPIGetListSortEnum = "Name"
	UserAPIGetListSortEnumGroup        UserAPIGetListSortEnum = "Group"
)

func (e *UserAPIGetListSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RegisterDate":
		fallthrough
	case "Name":
		fallthrough
	case "Group":
		*e = UserAPIGetListSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetListSortEnum: %s", s)
	}
}

type UserAPIGetListQueryParams struct {
	// Optional fields. Possible values are None and MainPicture. Optional.
	Fields *UserAPIGetListFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Whether to get total number of results.
	GetTotalCount *bool `queryParam:"style=form,explode=true,name=getTotalCount"`
	// Filter by user group. Only one value supported for now. Optional.
	Groups *UserAPIGetListGroupsEnum `queryParam:"style=form,explode=true,name=groups"`
	// Whether to include disabled user accounts.
	IncludeDisabled *bool `queryParam:"style=form,explode=true,name=includeDisabled"`
	// Filter by users who joined after this date (inclusive).
	JoinDateAfter *time.Time `queryParam:"style=form,explode=true,name=joinDateAfter"`
	// Filter by users who joined before this date (exclusive).
	JoinDateBefore *time.Time `queryParam:"style=form,explode=true,name=joinDateBefore"`
	// Filter by known language (optional). This is the ISO 639-1 language code, for example "en" or "zh".
	KnowsLanguage *string `queryParam:"style=form,explode=true,name=knowsLanguage"`
	// Maximum number of results to be loaded.
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Name match mode.
	NameMatchMode *UserAPIGetListNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Whether to only include verified artists.
	OnlyVerified *bool `queryParam:"style=form,explode=true,name=onlyVerified"`
	// User name query (optional).
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Sort rule.
	Sort *UserAPIGetListSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Index of the first entry to be loaded.
	Start *int `queryParam:"style=form,explode=true,name=start"`
}

type UserAPIGetListRequest struct {
	QueryParams UserAPIGetListQueryParams
}

type UserAPIGetListResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultUserForAPIContract *shared.PartialFindResultUserForAPIContract
	StatusCode                          int
	RawResponse                         *http.Response
}
