<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class StartImportFileTaskRequestBody
{
    /**
     *  The S3 bucket where the import file is located. The bucket name is required to begin with <code>migrationhub-strategy-</code>.
     * 
     * @var string $s3Bucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('S3Bucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $s3Bucket;
    
    /**
     * Specifies the source that the servers are coming from. By default, Strategy Recommendations assumes that the servers specified in the import file are available in AWS Application Discovery Service. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\StartImportFileTaskRequestBodyDataSourceTypeEnum $dataSourceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataSourceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\StartImportFileTaskRequestBodyDataSourceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StartImportFileTaskRequestBodyDataSourceTypeEnum $dataSourceType = null;
    
    /**
     * Groups the resources in the import file together with a unique name. This ID can be as filter in <code>ListApplicationComponents</code> and <code>ListServers</code>. 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Group> $groupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('groupId')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Group>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $groupId = null;
    
    /**
     *  A descriptive name for the request. 
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     *  The S3 bucket where Strategy Recommendations uploads import results. The bucket name is required to begin with migrationhub-strategy-. 
     * 
     * @var ?string $s3bucketForReportData
     */
	#[\JMS\Serializer\Annotation\SerializedName('s3bucketForReportData')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $s3bucketForReportData = null;
    
    /**
     *  The Amazon S3 key name of the import file. 
     * 
     * @var string $s3key
     */
	#[\JMS\Serializer\Annotation\SerializedName('s3key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $s3key;
    
	public function __construct()
	{
		$this->s3Bucket = "";
		$this->dataSourceType = null;
		$this->groupId = null;
		$this->name = "";
		$this->s3bucketForReportData = null;
		$this->s3key = "";
	}
}
