<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PublicAdvertisedPrefix - A public advertised prefix represents an aggregated IP prefix or netblock which customers bring to cloud. The IP prefix is a single unit of route advertisement and is announced globally to the internet.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PublicAdvertisedPrefix
{
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     * 
     * @var ?string $creationTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationTimestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creationTimestamp = null;
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The IPv4 address to be used for reverse DNS verification.
     * 
     * @var ?string $dnsVerificationIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsVerificationIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dnsVerificationIp = null;
    
    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a new PublicAdvertisedPrefix. An up-to-date fingerprint must be provided in order to update the PublicAdvertisedPrefix, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a PublicAdvertisedPrefix.
     * 
     * @var ?string $fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
    /**
     * [Output Only] The unique identifier for the resource type. The server generates this identifier.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The IPv4 address range, in CIDR format, represented by this public advertised prefix.
     * 
     * @var ?string $ipCidrRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipCidrRange')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipCidrRange = null;
    
    /**
     * [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix for public advertised prefixes.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * [Output Only] The list of public delegated prefixes that exist for this public advertised prefix.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PublicAdvertisedPrefixPublicDelegatedPrefix> $publicDelegatedPrefixs
     */
	#[\JMS\Serializer\Annotation\SerializedName('publicDelegatedPrefixs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PublicAdvertisedPrefixPublicDelegatedPrefix>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $publicDelegatedPrefixs = null;
    
    /**
     * [Output Only] Server-defined URL for the resource.
     * 
     * @var ?string $selfLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selfLink = null;
    
    /**
     * [Output Only] The shared secret to be used for reverse DNS verification.
     * 
     * @var ?string $sharedSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('sharedSecret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sharedSecret = null;
    
    /**
     * The status of the public advertised prefix. Possible values include: - `INITIAL`: RPKI validation is complete. - `PTR_CONFIGURED`: User has configured the PTR. - `VALIDATED`: Reverse DNS lookup is successful. - `REVERSE_DNS_LOOKUP_FAILED`: Reverse DNS lookup failed. - `PREFIX_CONFIGURATION_IN_PROGRESS`: The prefix is being configured. - `PREFIX_CONFIGURATION_COMPLETE`: The prefix is fully configured. - `PREFIX_REMOVAL_IN_PROGRESS`: The prefix is being removed. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PublicAdvertisedPrefixStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PublicAdvertisedPrefixStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PublicAdvertisedPrefixStatusEnum $status = null;
    
	public function __construct()
	{
		$this->creationTimestamp = null;
		$this->description = null;
		$this->dnsVerificationIp = null;
		$this->fingerprint = null;
		$this->id = null;
		$this->ipCidrRange = null;
		$this->kind = null;
		$this->name = null;
		$this->publicDelegatedPrefixs = null;
		$this->selfLink = null;
		$this->sharedSecret = null;
		$this->status = null;
	}
}
