/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SchemaFieldSpec } from "./schemafieldspec";
import { Expose, Type } from "class-transformer";

/**
 * The type of API resource. For Schema resources, this is always `admin#directory#schema`.
 */
export class Schema extends SpeakeasyBase {
  /**
   * Display name for the schema.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * A list of fields in the schema.
   */
  @SpeakeasyMetadata({ elemType: SchemaFieldSpec })
  @Expose({ name: "fields" })
  @Type(() => SchemaFieldSpec)
  fields?: SchemaFieldSpec[];

  /**
   * Kind of resource this is.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The unique identifier of the schema (Read-only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemaId" })
  schemaId?: string;

  /**
   * The schema's name. Each `schema_name` must be unique within a customer. Reusing a name results in a `409: Entity already exists` error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemaName" })
  schemaName?: string;
}
