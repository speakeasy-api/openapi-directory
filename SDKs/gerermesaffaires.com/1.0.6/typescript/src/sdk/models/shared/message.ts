/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum MessageLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
}

export class Message extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Author" })
  author?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: MessageLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MessageDate" })
  messageDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModificationAuthor" })
  modificationAuthor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModificationDate" })
  modificationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Text" })
  text?: string;
}
