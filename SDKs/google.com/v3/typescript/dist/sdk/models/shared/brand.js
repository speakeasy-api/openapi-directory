"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Brand = exports.BrandIconStateEnum = exports.BrandIconDisapprovalReasonsEnum = exports.BrandDisplayNameStateEnum = exports.BrandInput = void 0;
var utils_1 = require("../../../internal/utils");
var displaynamedisapprovalreason_1 = require("./displaynamedisapprovalreason");
var localizedtext_1 = require("./localizedtext");
var class_transformer_1 = require("class-transformer");
/**
 * Brand-level icon and display name configuration. Once approved, the icon and display name appear in the search results for properties that the partner has assigned to this brand.
 */
var BrandInput = /** @class */ (function (_super) {
    __extends(BrandInput, _super);
    function BrandInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: localizedtext_1.LocalizedText }),
        (0, class_transformer_1.Expose)({ name: "displayNames" }),
        (0, class_transformer_1.Type)(function () { return localizedtext_1.LocalizedText; }),
        __metadata("design:type", Array)
    ], BrandInput.prototype, "displayNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "icon" }),
        __metadata("design:type", String)
    ], BrandInput.prototype, "icon", void 0);
    return BrandInput;
}(utils_1.SpeakeasyBase));
exports.BrandInput = BrandInput;
/**
 * Output only. The brand's display names review state, which applies to all display name language entries. If there are both submitted and active display names, this refers to the submitted display names.
 */
var BrandDisplayNameStateEnum;
(function (BrandDisplayNameStateEnum) {
    BrandDisplayNameStateEnum["ReviewStateUnspecified"] = "REVIEW_STATE_UNSPECIFIED";
    BrandDisplayNameStateEnum["ReviewStateNew"] = "REVIEW_STATE_NEW";
    BrandDisplayNameStateEnum["Approved"] = "APPROVED";
    BrandDisplayNameStateEnum["Rejected"] = "REJECTED";
})(BrandDisplayNameStateEnum = exports.BrandDisplayNameStateEnum || (exports.BrandDisplayNameStateEnum = {}));
var BrandIconDisapprovalReasonsEnum;
(function (BrandIconDisapprovalReasonsEnum) {
    BrandIconDisapprovalReasonsEnum["ImageDisapprovalReasonUnspecified"] = "IMAGE_DISAPPROVAL_REASON_UNSPECIFIED";
    BrandIconDisapprovalReasonsEnum["NotLikeSite"] = "NOT_LIKE_SITE";
    BrandIconDisapprovalReasonsEnum["Offensive"] = "OFFENSIVE";
    BrandIconDisapprovalReasonsEnum["LowQuality"] = "LOW_QUALITY";
    BrandIconDisapprovalReasonsEnum["Animated"] = "ANIMATED";
    BrandIconDisapprovalReasonsEnum["BadBackground"] = "BAD_BACKGROUND";
    BrandIconDisapprovalReasonsEnum["TextTooSmall"] = "TEXT_TOO_SMALL";
})(BrandIconDisapprovalReasonsEnum = exports.BrandIconDisapprovalReasonsEnum || (exports.BrandIconDisapprovalReasonsEnum = {}));
/**
 * Output only. The brand's icon's review state. If there are both submitted and active icons, this refers to the submitted icon.
 */
var BrandIconStateEnum;
(function (BrandIconStateEnum) {
    BrandIconStateEnum["ReviewStateUnspecified"] = "REVIEW_STATE_UNSPECIFIED";
    BrandIconStateEnum["ReviewStateNew"] = "REVIEW_STATE_NEW";
    BrandIconStateEnum["Approved"] = "APPROVED";
    BrandIconStateEnum["Rejected"] = "REJECTED";
})(BrandIconStateEnum = exports.BrandIconStateEnum || (exports.BrandIconStateEnum = {}));
/**
 * Brand-level icon and display name configuration. Once approved, the icon and display name appear in the search results for properties that the partner has assigned to this brand.
 */
var Brand = /** @class */ (function (_super) {
    __extends(Brand, _super);
    function Brand() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: localizedtext_1.LocalizedText }),
        (0, class_transformer_1.Expose)({ name: "activeDisplayNames" }),
        (0, class_transformer_1.Type)(function () { return localizedtext_1.LocalizedText; }),
        __metadata("design:type", Array)
    ], Brand.prototype, "activeDisplayNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "activeIcon" }),
        __metadata("design:type", String)
    ], Brand.prototype, "activeIcon", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "activeIconUri" }),
        __metadata("design:type", String)
    ], Brand.prototype, "activeIconUri", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: displaynamedisapprovalreason_1.DisplayNameDisapprovalReason }),
        (0, class_transformer_1.Expose)({ name: "displayNameDisapprovalReason" }),
        (0, class_transformer_1.Type)(function () { return displaynamedisapprovalreason_1.DisplayNameDisapprovalReason; }),
        __metadata("design:type", Array)
    ], Brand.prototype, "displayNameDisapprovalReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayNameState" }),
        __metadata("design:type", String)
    ], Brand.prototype, "displayNameState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: localizedtext_1.LocalizedText }),
        (0, class_transformer_1.Expose)({ name: "displayNames" }),
        (0, class_transformer_1.Type)(function () { return localizedtext_1.LocalizedText; }),
        __metadata("design:type", Array)
    ], Brand.prototype, "displayNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "icon" }),
        __metadata("design:type", String)
    ], Brand.prototype, "icon", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iconDisapprovalReasons" }),
        __metadata("design:type", Array)
    ], Brand.prototype, "iconDisapprovalReasons", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iconState" }),
        __metadata("design:type", String)
    ], Brand.prototype, "iconState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Brand.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "propertyCount" }),
        __metadata("design:type", String)
    ], Brand.prototype, "propertyCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: localizedtext_1.LocalizedText }),
        (0, class_transformer_1.Expose)({ name: "submittedDisplayNames" }),
        (0, class_transformer_1.Type)(function () { return localizedtext_1.LocalizedText; }),
        __metadata("design:type", Array)
    ], Brand.prototype, "submittedDisplayNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submittedIcon" }),
        __metadata("design:type", String)
    ], Brand.prototype, "submittedIcon", void 0);
    return Brand;
}(utils_1.SpeakeasyBase));
exports.Brand = Brand;
