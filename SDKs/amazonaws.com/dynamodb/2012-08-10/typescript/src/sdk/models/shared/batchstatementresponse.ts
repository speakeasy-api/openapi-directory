/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AttributeValue } from "./attributevalue";
import { BatchStatementError } from "./batchstatementerror";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  A PartiQL batch statement response..
 */
export class BatchStatementResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Error" })
  @Type(() => BatchStatementError)
  error?: BatchStatementError;

  @SpeakeasyMetadata({ elemType: AttributeValue })
  @Expose({ name: "Item" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, AttributeValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], AttributeValue);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  item?: Record<string, AttributeValue>;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName?: string;
}
