/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HealthEventImpactTypeEnum } from "./healtheventimpacttypeenum";
import { HealthEventStatusEnum } from "./healtheventstatusenum";
import { ImpactedLocation } from "./impactedlocation";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetHealthEventOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EndedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EventArn" })
  eventArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventId" })
  eventId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImpactType" })
  impactType: HealthEventImpactTypeEnum;

  @SpeakeasyMetadata({ elemType: ImpactedLocation })
  @Expose({ name: "ImpactedLocations" })
  @Type(() => ImpactedLocation)
  impactedLocations: ImpactedLocation[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "PercentOfTotalTrafficImpacted" })
  percentOfTotalTrafficImpacted?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StartedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: HealthEventStatusEnum;
}
