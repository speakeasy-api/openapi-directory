/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Straggler } from "./straggler";
import { Expose, Type } from "class-transformer";

/**
 * Summarized straggler identification details.
 */
export class StragglerSummary extends SpeakeasyBase {
  /**
   * The most recent stragglers.
   */
  @SpeakeasyMetadata({ elemType: Straggler })
  @Expose({ name: "recentStragglers" })
  @Type(() => Straggler)
  recentStragglers?: Straggler[];

  /**
   * Aggregated counts of straggler causes, keyed by the string representation of the StragglerCause enum.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stragglerCauseCount" })
  stragglerCauseCount?: Record<string, string>;

  /**
   * The total count of stragglers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalStragglerCount" })
  totalStragglerCount?: string;
}
