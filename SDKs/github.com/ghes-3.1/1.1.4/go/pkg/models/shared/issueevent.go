// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// IssueEvent - Issue Event
type IssueEvent struct {
	// Simple User
	Actor NullableSimpleUser `json:"actor"`
	// Simple User
	Assignee *NullableSimpleUser `json:"assignee,omitempty"`
	// Simple User
	Assigner *NullableSimpleUser `json:"assigner,omitempty"`
	// How the author is associated with the repository.
	AuthorAssociation *AuthorAssociationEnum     `json:"author_association,omitempty"`
	CommitID          string                     `json:"commit_id"`
	CommitURL         string                     `json:"commit_url"`
	CreatedAt         time.Time                  `json:"created_at"`
	DismissedReview   *IssueEventDismissedReview `json:"dismissed_review,omitempty"`
	Event             string                     `json:"event"`
	ID                int64                      `json:"id"`
	// Issues are a great way to keep track of tasks, enhancements, and bugs for your projects.
	Issue *NullableIssue `json:"issue,omitempty"`
	// Issue Event Label
	Label      *IssueEventLabel `json:"label,omitempty"`
	LockReason *string          `json:"lock_reason,omitempty"`
	// Issue Event Milestone
	Milestone *IssueEventMilestone `json:"milestone,omitempty"`
	NodeID    string               `json:"node_id"`
	// GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
	PerformedViaGithubApp *NullableIntegration `json:"performed_via_github_app,omitempty"`
	// Issue Event Project Card
	ProjectCard *IssueEventProjectCard `json:"project_card,omitempty"`
	// Issue Event Rename
	Rename *IssueEventRename `json:"rename,omitempty"`
	// Simple User
	RequestedReviewer *NullableSimpleUser `json:"requested_reviewer,omitempty"`
	// Groups of organization members that gives permissions on specified repositories.
	RequestedTeam *Team `json:"requested_team,omitempty"`
	// Simple User
	ReviewRequester *NullableSimpleUser `json:"review_requester,omitempty"`
	URL             string              `json:"url"`
}
