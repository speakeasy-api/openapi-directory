<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OnDemandPageVideoMetadataInteractions - A list of resource URIs related to the video.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OnDemandPageVideoMetadataInteractions
{
    /**
     * The Buy interaction for a On Demand video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsBuy $buy
     */
	#[\JMS\Serializer\Annotation\SerializedName('buy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsBuy')]
    public OnDemandPageVideoMetadataInteractionsBuy $buy;
    
    /**
     * When a video is referenced by a channel URI, if the user is a moderator of the channel, include information about removing the video from the channel.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsChannel $channel
     */
	#[\JMS\Serializer\Annotation\SerializedName('channel')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsChannel')]
    public OnDemandPageVideoMetadataInteractionsChannel $channel;
    
    /**
     * Information about whether the authenticated user has liked this video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsLike $like
     */
	#[\JMS\Serializer\Annotation\SerializedName('like')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsLike')]
    public OnDemandPageVideoMetadataInteractionsLike $like;
    
    /**
     * The Rent interaction for an On Demand video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsRent $rent
     */
	#[\JMS\Serializer\Annotation\SerializedName('rent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsRent')]
    public OnDemandPageVideoMetadataInteractionsRent $rent;
    
    /**
     * Information about where and how to report a video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsReport $report
     */
	#[\JMS\Serializer\Annotation\SerializedName('report')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsReport')]
    public OnDemandPageVideoMetadataInteractionsReport $report;
    
    /**
     * Subscription information for an On Demand video.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsSubscribe $subscribe
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscribe')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsSubscribe')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OnDemandPageVideoMetadataInteractionsSubscribe $subscribe = null;
    
    /**
     * Information about removing this video from the user's list of watched videos.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsWatched $watched
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsWatched')]
    public OnDemandPageVideoMetadataInteractionsWatched $watched;
    
    /**
     * Information about whether this video appears on the authenticated user's Watch Later list.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsWatchlater $watchlater
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchlater')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsWatchlater')]
    public OnDemandPageVideoMetadataInteractionsWatchlater $watchlater;
    
	public function __construct()
	{
		$this->buy = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsBuy();
		$this->channel = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsChannel();
		$this->like = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsLike();
		$this->rent = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsRent();
		$this->report = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsReport();
		$this->subscribe = null;
		$this->watched = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsWatched();
		$this->watchlater = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoMetadataInteractionsWatchlater();
	}
}
