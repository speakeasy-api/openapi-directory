/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccessTokenEnumFactorTypesEnum } from "./accesstokenenumfactortypesenum";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class VerifyV2ServiceAccessToken extends SpeakeasyBase {
  /**
   * The unique SID identifier of the Account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The date that this access token was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The unique external identifier for the Entity of the Service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entity_identity" })
  entityIdentity?: string;

  /**
   * A human readable description of this factor, up to 64 characters. For a push factor, this can be the device's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "factor_friendly_name" })
  factorFriendlyName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "factor_type" })
  factorType?: AccessTokenEnumFactorTypesEnum;

  /**
   * The unique SID identifier of the Verify Service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_sid" })
  serviceSid?: string;

  /**
   * A 34 character string that uniquely identifies this Access Token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The access token generated for enrollment, this is an encrypted json web token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;

  /**
   * How long, in seconds, the access token is valid. Max: 5 minutes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ttl" })
  ttl?: number;

  /**
   * The URL of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
