"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import accountsynchronizationlist as shared_accountsynchronizationlist
from ..shared import beezup_common_errorresponsemessage as shared_beezup_common_errorresponsemessage
from ..shared import errorresponsemessage as shared_errorresponsemessage
from typing import Optional


@dataclasses.dataclass
class GetMarketplaceAccountsSynchronizationV3Request:
    
    if_none_match: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'If-None-Match', 'style': 'simple', 'explode': False }})
    r"""ETag value to identify the last known version of requested resource.\ 
    To avoid useless exchange, we recommend you to indicate the ETag you previously got from this operation.\
    If the ETag value does not match the response will be 200 to give you a new content, otherwise the response will be: 304 Not Modified, without any content.\
    For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3
    """  
    store_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'storeIds', 'style': 'form', 'explode': False }})
    r"""StoredIds to filter"""  
    

@dataclasses.dataclass
class GetMarketplaceAccountsSynchronizationV3Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    account_synchronization_list: Optional[shared_accountsynchronizationlist.AccountSynchronizationList] = dataclasses.field(default=None)
    r"""Successfully fetched the list of MarketplaceBusinessCode ready for Order Management"""  
    beez_up_common_error_response_message: Optional[shared_beezup_common_errorresponsemessage.BeezUPCommonErrorResponseMessage] = dataclasses.field(default=None)
    r"""Occurs when something goes wrong"""  
    error_response_message: Optional[shared_errorresponsemessage.ErrorResponseMessage] = dataclasses.field(default=None)
    r"""Invalid store id"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    