"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import shiftfilter as shared_shiftfilter
from ..shared import shiftsort as shared_shiftsort
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShiftQuery:
    r"""The parameters of a `Shift` search query, which includes filter and sort options."""
    
    filter: Optional[shared_shiftfilter.ShiftFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter'), 'exclude': lambda f: f is None }})
    r"""Defines a filter used in a search for `Shift` records. `AND` logic is
    used by Square's servers to apply each filter property specified.
    """  
    sort: Optional[shared_shiftsort.ShiftSort] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sort'), 'exclude': lambda f: f is None }})
    r"""Sets the sort order of search results."""  
    