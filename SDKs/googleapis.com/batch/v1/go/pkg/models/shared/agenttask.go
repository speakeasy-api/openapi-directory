// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AgentTaskIntendedStateEnum - The intended state of the task.
type AgentTaskIntendedStateEnum string

const (
	AgentTaskIntendedStateEnumIntendedStateUnspecified AgentTaskIntendedStateEnum = "INTENDED_STATE_UNSPECIFIED"
	AgentTaskIntendedStateEnumAssigned                 AgentTaskIntendedStateEnum = "ASSIGNED"
	AgentTaskIntendedStateEnumCancelled                AgentTaskIntendedStateEnum = "CANCELLED"
	AgentTaskIntendedStateEnumDeleted                  AgentTaskIntendedStateEnum = "DELETED"
)

func (e AgentTaskIntendedStateEnum) ToPointer() *AgentTaskIntendedStateEnum {
	return &e
}

func (e *AgentTaskIntendedStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INTENDED_STATE_UNSPECIFIED":
		fallthrough
	case "ASSIGNED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "DELETED":
		*e = AgentTaskIntendedStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AgentTaskIntendedStateEnum: %v", v)
	}
}

// AgentTaskTaskSourceEnum - TaskSource represents the source of the task.
type AgentTaskTaskSourceEnum string

const (
	AgentTaskTaskSourceEnumTaskSourceUnspecified AgentTaskTaskSourceEnum = "TASK_SOURCE_UNSPECIFIED"
	AgentTaskTaskSourceEnumBatchInternal         AgentTaskTaskSourceEnum = "BATCH_INTERNAL"
	AgentTaskTaskSourceEnumUser                  AgentTaskTaskSourceEnum = "USER"
)

func (e AgentTaskTaskSourceEnum) ToPointer() *AgentTaskTaskSourceEnum {
	return &e
}

func (e *AgentTaskTaskSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TASK_SOURCE_UNSPECIFIED":
		fallthrough
	case "BATCH_INTERNAL":
		fallthrough
	case "USER":
		*e = AgentTaskTaskSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AgentTaskTaskSourceEnum: %v", v)
	}
}

// AgentTask - TODO(b/182501497) The message needs to be redefined when the Agent API server updates data in storage per the backend design.
type AgentTask struct {
	// The intended state of the task.
	IntendedState *AgentTaskIntendedStateEnum `json:"intendedState,omitempty"`
	// The highest barrier reached by all tasks in the task's TaskGroup.
	ReachedBarrier *string `json:"reachedBarrier,omitempty"`
	// Spec of a task
	Spec *TaskSpec `json:"spec,omitempty"`
	// Status of a task
	Status *TaskStatus `json:"status,omitempty"`
	// Task name.
	Task *string `json:"task,omitempty"`
	// TaskSource represents the source of the task.
	TaskSource *AgentTaskTaskSourceEnum `json:"taskSource,omitempty"`
}
