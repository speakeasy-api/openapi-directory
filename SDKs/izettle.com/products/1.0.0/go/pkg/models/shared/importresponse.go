// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type ImportResponseStateEnum string

const (
	ImportResponseStateEnumImporting       ImportResponseStateEnum = "IMPORTING"
	ImportResponseStateEnumFinishedSuccess ImportResponseStateEnum = "FINISHED_SUCCESS"
	ImportResponseStateEnumFinishedFailed  ImportResponseStateEnum = "FINISHED_FAILED"
)

func (e *ImportResponseStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IMPORTING":
		fallthrough
	case "FINISHED_SUCCESS":
		fallthrough
	case "FINISHED_FAILED":
		*e = ImportResponseStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ImportResponseStateEnum: %s", s)
	}
}

// ImportResponse - Import status
type ImportResponse struct {
	Created      *time.Time               `json:"created,omitempty"`
	ErrorMessage *string                  `json:"errorMessage,omitempty"`
	Finished     *time.Time               `json:"finished,omitempty"`
	Items        *int64                   `json:"items,omitempty"`
	State        *ImportResponseStateEnum `json:"state,omitempty"`
	UUID         *string                  `json:"uuid,omitempty"`
}
