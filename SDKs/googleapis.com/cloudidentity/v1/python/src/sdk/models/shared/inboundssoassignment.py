"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import samlssoinfo as shared_samlssoinfo
from ..shared import signinbehavior as shared_signinbehavior
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InboundSsoAssignmentSsoModeEnum(str, Enum):
    r"""Inbound SSO behavior."""
    SSO_MODE_UNSPECIFIED = 'SSO_MODE_UNSPECIFIED'
    SSO_OFF = 'SSO_OFF'
    SAML_SSO = 'SAML_SSO'
    DOMAIN_WIDE_SAML_IF_ENABLED = 'DOMAIN_WIDE_SAML_IF_ENABLED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InboundSsoAssignmentInput:
    r"""Targets with \\"set\\" SSO assignments and their respective assignments."""
    
    customer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customer'), 'exclude': lambda f: f is None }})
    r"""Immutable. The customer. For example: `customers/C0123abc`."""  
    rank: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rank'), 'exclude': lambda f: f is None }})
    r"""Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set."""  
    saml_sso_info: Optional[shared_samlssoinfo.SamlSsoInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('samlSsoInfo'), 'exclude': lambda f: f is None }})
    r"""Details that are applicable when `sso_mode` == `SAML_SSO`."""  
    sign_in_behavior: Optional[shared_signinbehavior.SignInBehavior] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signInBehavior'), 'exclude': lambda f: f is None }})
    r"""Controls sign-in behavior."""  
    sso_mode: Optional[InboundSsoAssignmentSsoModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssoMode'), 'exclude': lambda f: f is None }})
    r"""Inbound SSO behavior."""  
    target_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetGroup'), 'exclude': lambda f: f is None }})
    r"""Immutable. Must be of the form `groups/{group}`."""  
    target_org_unit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetOrgUnit'), 'exclude': lambda f: f is None }})
    r"""Immutable. Must be of the form `orgUnits/{org_unit}`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InboundSsoAssignment:
    r"""Targets with \\"set\\" SSO assignments and their respective assignments."""
    
    customer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customer'), 'exclude': lambda f: f is None }})
    r"""Immutable. The customer. For example: `customers/C0123abc`."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Inbound SSO Assignment."""  
    rank: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rank'), 'exclude': lambda f: f is None }})
    r"""Must be zero (which is the default value so it can be omitted) for assignments with `target_org_unit` set and must be greater-than-or-equal-to one for assignments with `target_group` set."""  
    saml_sso_info: Optional[shared_samlssoinfo.SamlSsoInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('samlSsoInfo'), 'exclude': lambda f: f is None }})
    r"""Details that are applicable when `sso_mode` == `SAML_SSO`."""  
    sign_in_behavior: Optional[shared_signinbehavior.SignInBehavior] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signInBehavior'), 'exclude': lambda f: f is None }})
    r"""Controls sign-in behavior."""  
    sso_mode: Optional[InboundSsoAssignmentSsoModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssoMode'), 'exclude': lambda f: f is None }})
    r"""Inbound SSO behavior."""  
    target_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetGroup'), 'exclude': lambda f: f is None }})
    r"""Immutable. Must be of the form `groups/{group}`."""  
    target_org_unit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetOrgUnit'), 'exclude': lambda f: f is None }})
    r"""Immutable. Must be of the form `orgUnits/{org_unit}`."""  
    