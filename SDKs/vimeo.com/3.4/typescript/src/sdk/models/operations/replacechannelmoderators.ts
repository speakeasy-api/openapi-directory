/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ReplaceChannelModeratorsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class ReplaceChannelModeratorsRequestBody extends SpeakeasyBase {
  /**
   * The URI of the user to add as a moderator.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_uri" })
  userUri: string;
}

export class ReplaceChannelModeratorsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ReplaceChannelModeratorsRequestBody;

  /**
   * The ID of the channel.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=channel_id",
  })
  channelId: number;
}

export class ReplaceChannelModeratorsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Error code 2908: The list contains more than 100 users.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * The authenticated user owns this channel.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;

  /**
   * The moderators were replaced.
   */
  @SpeakeasyMetadata({ elemType: shared.User })
  users?: shared.User[];
}
