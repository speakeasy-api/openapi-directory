<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ActivityEventsParameters
{
    /**
     * Boolean value of the parameter.
     * 
     * @var ?bool $boolValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('boolValue')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $boolValue = null;
    
    /**
     * Integer value of the parameter.
     * 
     * @var ?string $intValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('intValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $intValue = null;
    
    /**
     * Nested parameter value pairs associated with this parameter. Complex value type for a parameter are returned as a list of parameter values. For example, the address parameter may have a value as `[{parameter: [{name: city, value: abc}]}]`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ActivityEventsParametersMessageValue $messageValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('messageValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ActivityEventsParametersMessageValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActivityEventsParametersMessageValue $messageValue = null;
    
    /**
     * Integer values of the parameter.
     * 
     * @var ?array<string> $multiIntValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('multiIntValue')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $multiIntValue = null;
    
    /**
     * List of `messageValue` objects.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ActivityEventsParametersMultiMessageValue> $multiMessageValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('multiMessageValue')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ActivityEventsParametersMultiMessageValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $multiMessageValue = null;
    
    /**
     * String values of the parameter.
     * 
     * @var ?array<string> $multiValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('multiValue')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $multiValue = null;
    
    /**
     * The name of the parameter.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * String value of the parameter.
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->boolValue = null;
		$this->intValue = null;
		$this->messageValue = null;
		$this->multiIntValue = null;
		$this->multiMessageValue = null;
		$this->multiValue = null;
		$this->name = null;
		$this->value = null;
	}
}
