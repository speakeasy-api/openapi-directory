<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleChromeManagementV1TotalMemoryEncryptionInfo - Memory encryption information of a device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleChromeManagementV1TotalMemoryEncryptionInfo
{
    /**
     * Memory encryption algorithm.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum $encryptionAlgorithm
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptionAlgorithm')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum $encryptionAlgorithm = null;
    
    /**
     * The state of memory encryption on the device.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum $encryptionState
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptionState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum $encryptionState = null;
    
    /**
     * The length of the encryption keys.
     * 
     * @var ?string $keyLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyLength')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keyLength = null;
    
    /**
     * The maximum number of keys that can be used for encryption.
     * 
     * @var ?string $maxKeys
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxKeys')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maxKeys = null;
    
	public function __construct()
	{
		$this->encryptionAlgorithm = null;
		$this->encryptionState = null;
		$this->keyLength = null;
		$this->maxKeys = null;
	}
}
