/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContactInformation } from "./contactinformation";
import { DealTerms } from "./dealterms";
import { Seller } from "./seller";
import { TargetingCriteria } from "./targetingcriteria";
import { Expose, Type } from "class-transformer";

/**
 * The syndication product associated with the deal.
 */
export enum ProductSyndicationProductEnum {
  SyndicationProductUnspecified = "SYNDICATION_PRODUCT_UNSPECIFIED",
  Content = "CONTENT",
  Mobile = "MOBILE",
  Video = "VIDEO",
  Games = "GAMES",
}

/**
 * A product is a segment of inventory that a seller wants to sell. It is associated with certain terms and targeting information which helps the buyer know more about the inventory.
 */
export class Product extends SpeakeasyBase {
  /**
   * The proposed end time for the deal. The field will be truncated to the order of seconds during serving.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableEndTime" })
  availableEndTime?: string;

  /**
   * Inventory availability dates. The start time will be truncated to seconds during serving. Thus, a field specified as 3:23:34.456 (HH:mm:ss.SSS) will be truncated to 3:23:34 when serving.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableStartTime" })
  availableStartTime?: string;

  /**
   * Creation time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Optional contact information for the creator of this product.
   */
  @SpeakeasyMetadata({ elemType: ContactInformation })
  @Expose({ name: "creatorContacts" })
  @Type(() => ContactInformation)
  creatorContacts?: ContactInformation[];

  /**
   * The display name for this product as set by the seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasCreatorSignedOff" })
  hasCreatorSignedOff?: boolean;

  /**
   * The unique ID for the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  /**
   * The revision number of the product (auto-assigned by Marketplace).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productRevision" })
  productRevision?: string;

  /**
   * An ID which can be used by the Publisher Profile API to get more information about the seller that created this product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisherProfileId" })
  publisherProfileId?: string;

  /**
   * Represents a seller of inventory. Each seller is identified by a unique Ad Manager account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  @Type(() => Seller)
  seller?: Seller;

  /**
   * The syndication product associated with the deal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syndicationProduct" })
  syndicationProduct?: ProductSyndicationProductEnum;

  /**
   * Targeting that is shared between the buyer and the seller. Each targeting criterion has a specified key and for each key there is a list of inclusion value or exclusion values.
   */
  @SpeakeasyMetadata({ elemType: TargetingCriteria })
  @Expose({ name: "targetingCriterion" })
  @Type(() => TargetingCriteria)
  targetingCriterion?: TargetingCriteria[];

  /**
   * The deal terms specify the details of a Product/deal. They specify things like price per buyer, the type of pricing model (for example, fixed price, auction) and expected impressions from the publisher.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "terms" })
  @Type(() => DealTerms)
  terms?: DealTerms;

  /**
   * Time of last update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * The web-property code for the seller. This needs to be copied as is when adding a new deal to a proposal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webPropertyCode" })
  webPropertyCode?: string;
}
