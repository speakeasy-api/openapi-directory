/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class BookingHotelsRequest extends SpeakeasyBase {
  /**
   * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Accept-Language",
  })
  acceptLanguage: string;

  /**
   * **unique numeric identifier** of the destination
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=destId",
  })
  destId?: number;

  /**
   * **unique alphanumeric identifier** of the product
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=productCode",
  })
  productCode?: string;
}

export class BookingHotels200ApplicationJSONData extends SpeakeasyBase {
  /**
   * **natural-language address** of hotel pick-up point
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand?: string;

  /**
   * **natural-language name** of the destination that *this* hotel pick-up point pertains to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * **unique numeric identifer** of the destination that *this* hotel pick-up point pertains to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destinationId" })
  destinationId?: number;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hotelString" })
  hotelString?: string;

  /**
   * **identifier** of *this* hotel pick-up point`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * **numeric latitude component** of *this* hotel pick-up point's geolocation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  /**
   * **numeric longitude component** of *this* hotel pick-up point's geolocation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;

  /**
   * **natural-language name** of hotel pick-up point
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * **natural-language notes** about *this* hotel pick-up point
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * **phone number** of *this* hotel pick-up point
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * **post code** of *this* hotel pick-up point
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postcode" })
  postcode?: string;

  /**
   * **array** of product codes pertaining to *this* hotel pick-up point
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCodes" })
  productCodes?: string[];

  /**
   * **sort-order** of *this* hotel pick-up point
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;
}

/**
 * Success
 */
export class BookingHotels200ApplicationJSON extends SpeakeasyBase {
  /**
   * **array** of hotel pick-up objects
   */
  @SpeakeasyMetadata({ elemType: BookingHotels200ApplicationJSONData })
  @Expose({ name: "data" })
  @Type(() => BookingHotels200ApplicationJSONData)
  data?: BookingHotels200ApplicationJSONData[];

  /**
   * **timestamp** of *this* response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateStamp" })
  dateStamp?: string;

  /**
   * **array** of error codes pertaining to *this* error
   *
   * @remarks
   * - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCodes" })
  errorCodes?: string[];

  /**
   * **array** of error message strings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: any[];

  /**
   * **array** of error message strings in plain text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessageText" })
  errorMessageText?: string;

  /**
   * **name** of *this* type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorName" })
  errorName?: string;

  /**
   * **reference number** of *this* error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorReference" })
  errorReference?: string;

  /**
   * **code** specifying the type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorType" })
  errorType?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraInfo" })
  extraInfo?: Record<string, any>;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraObject" })
  extraObject?: Record<string, any>;

  /**
   * **boolean indicator** of *this* request's outcome
   *
   * @remarks
   * - `true`: the request was successful with no errors
   * - `false`: an error was encountered
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * **number** of results available for *this* service
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;

  /**
   * **unique numeric id** of the server that processed *this* request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmid" })
  vmid?: string;
}

export class BookingHotelsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  bookingHotels200ApplicationJSONObject?: BookingHotels200ApplicationJSON;
}
