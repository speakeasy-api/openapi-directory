/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserEmails } from "./useremails";
import { UserName } from "./username";
import { UserRole } from "./userrole";
import { Expose, Type } from "class-transformer";

export enum UserSchemasEnum {
  UrnIetfParamsScimSchemasCore20User = "urn:ietf:params:scim:schemas:core:2.0:User",
}

export class User extends SpeakeasyBase {
  /**
   * Whether the user active in the IdP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active: boolean;

  /**
   * A human-readable name for the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName: string;

  /**
   * The emails for the user.
   */
  @SpeakeasyMetadata({ elemType: UserEmails })
  @Expose({ name: "emails" })
  @Type(() => UserEmails)
  emails: UserEmails[];

  /**
   * A unique identifier for the resource as defined by the provisioning client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "externalId" })
  externalId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  @Type(() => UserName)
  name?: UserName;

  /**
   * The roles assigned to the user.
   */
  @SpeakeasyMetadata({ elemType: UserRole })
  @Expose({ name: "roles" })
  @Type(() => UserRole)
  roles?: UserRole[];

  /**
   * The URIs that are used to indicate the namespaces of the SCIM schemas.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemas" })
  schemas: UserSchemasEnum[];

  /**
   * The username for the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userName" })
  userName: string;
}
