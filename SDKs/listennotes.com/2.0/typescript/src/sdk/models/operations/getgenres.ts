/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Just show top level genres? If 1, yes, just show top level genres. If 0, no, show all genres.
 *
 * @remarks
 *
 */
export enum GetGenresTopLevelOnlyEnum {
  Zero = "0",
  One = "1",
}

export class GetGenresRequest extends SpeakeasyBase {
  /**
   * Get API Key on listennotes.com/api
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-ListenAPI-Key",
  })
  xListenAPIKey: string;

  /**
   * Just show top level genres? If 1, yes, just show top level genres. If 0, no, show all genres.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=top_level_only",
  })
  topLevelOnly?: GetGenresTopLevelOnlyEnum;
}

export class GetGenresResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getGenresResponse?: shared.GetGenresResponse;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
