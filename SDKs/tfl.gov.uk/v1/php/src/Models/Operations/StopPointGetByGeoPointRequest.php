<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class StopPointGetByGeoPointRequest
{
    /**
     * an optional list of comma separated property categories to return in the StopPoint's property bag. If null or empty, all categories of property are returned. Pass the keyword "none" to return no properties (a valid list of categories can be obtained from the /StopPoint/Meta/categories endpoint)
     * 
     * @var ?array<string> $categories
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=categories')]
    public ?array $categories = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=location.lat')]
    public float $locationLat;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=location.lon')]
    public float $locationLon;
    
    /**
     * the list of modes to search (comma separated mode names e.g. tube,dlr)
     * 
     * @var ?array<string> $modes
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=modes')]
    public ?array $modes = null;
    
    /**
     * the radius of the bounding circle in metres (default : 200)
     * 
     * @var ?int $radius
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=radius')]
    public ?int $radius = null;
    
    /**
     * true to return the lines that each stop point serves as a nested resource
     * 
     * @var ?bool $returnLines
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=returnLines')]
    public ?bool $returnLines = null;
    
    /**
     * a list of stopTypes that should be returned (a list of valid stop types can be obtained from the StopPoint/meta/stoptypes endpoint)
     * 
     * @var array<string> $stopTypes
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=stopTypes')]
    public array $stopTypes;
    
    /**
     * Re-arrange the output into a parent/child hierarchy
     * 
     * @var ?bool $useStopPointHierarchy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=useStopPointHierarchy')]
    public ?bool $useStopPointHierarchy = null;
    
	public function __construct()
	{
		$this->categories = null;
		$this->locationLat = 0;
		$this->locationLon = 0;
		$this->modes = null;
		$this->radius = null;
		$this->returnLines = null;
		$this->stopTypes = [];
		$this->useStopPointHierarchy = null;
	}
}
