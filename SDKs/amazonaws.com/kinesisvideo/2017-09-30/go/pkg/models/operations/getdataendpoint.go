// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetDataEndpointHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// GetDataEndpointRequestBodyAPINameEnum - The name of the API action for which to get an endpoint.
type GetDataEndpointRequestBodyAPINameEnum string

const (
	GetDataEndpointRequestBodyAPINameEnumPutMedia                   GetDataEndpointRequestBodyAPINameEnum = "PUT_MEDIA"
	GetDataEndpointRequestBodyAPINameEnumGetMedia                   GetDataEndpointRequestBodyAPINameEnum = "GET_MEDIA"
	GetDataEndpointRequestBodyAPINameEnumListFragments              GetDataEndpointRequestBodyAPINameEnum = "LIST_FRAGMENTS"
	GetDataEndpointRequestBodyAPINameEnumGetMediaForFragmentList    GetDataEndpointRequestBodyAPINameEnum = "GET_MEDIA_FOR_FRAGMENT_LIST"
	GetDataEndpointRequestBodyAPINameEnumGetHlsStreamingSessionURL  GetDataEndpointRequestBodyAPINameEnum = "GET_HLS_STREAMING_SESSION_URL"
	GetDataEndpointRequestBodyAPINameEnumGetDashStreamingSessionURL GetDataEndpointRequestBodyAPINameEnum = "GET_DASH_STREAMING_SESSION_URL"
	GetDataEndpointRequestBodyAPINameEnumGetClip                    GetDataEndpointRequestBodyAPINameEnum = "GET_CLIP"
	GetDataEndpointRequestBodyAPINameEnumGetImages                  GetDataEndpointRequestBodyAPINameEnum = "GET_IMAGES"
)

func (e *GetDataEndpointRequestBodyAPINameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PUT_MEDIA":
		fallthrough
	case "GET_MEDIA":
		fallthrough
	case "LIST_FRAGMENTS":
		fallthrough
	case "GET_MEDIA_FOR_FRAGMENT_LIST":
		fallthrough
	case "GET_HLS_STREAMING_SESSION_URL":
		fallthrough
	case "GET_DASH_STREAMING_SESSION_URL":
		fallthrough
	case "GET_CLIP":
		fallthrough
	case "GET_IMAGES":
		*e = GetDataEndpointRequestBodyAPINameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDataEndpointRequestBodyAPINameEnum: %s", s)
	}
}

type GetDataEndpointRequestBody struct {
	// The name of the API action for which to get an endpoint.
	APIName GetDataEndpointRequestBodyAPINameEnum `json:"APIName"`
	// The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamName</code> in the request.
	StreamARN *string `json:"StreamARN,omitempty"`
	// The name of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamARN</code> in the request.
	StreamName *string `json:"StreamName,omitempty"`
}

type GetDataEndpointRequest struct {
	Headers GetDataEndpointHeaders
	Request GetDataEndpointRequestBody `request:"mediaType=application/json"`
}

type GetDataEndpointResponse struct {
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// Success
	GetDataEndpointOutput *shared.GetDataEndpointOutput
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
