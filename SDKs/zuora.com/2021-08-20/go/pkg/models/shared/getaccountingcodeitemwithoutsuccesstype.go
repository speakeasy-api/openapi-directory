// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// GETAccountingCodeItemWithoutSuccessTypeCategoryEnum - The category associated with the accounting code.
type GETAccountingCodeItemWithoutSuccessTypeCategoryEnum string

const (
	GETAccountingCodeItemWithoutSuccessTypeCategoryEnumAssets      GETAccountingCodeItemWithoutSuccessTypeCategoryEnum = "Assets"
	GETAccountingCodeItemWithoutSuccessTypeCategoryEnumLiabilities GETAccountingCodeItemWithoutSuccessTypeCategoryEnum = "Liabilities"
	GETAccountingCodeItemWithoutSuccessTypeCategoryEnumEquity      GETAccountingCodeItemWithoutSuccessTypeCategoryEnum = "Equity"
	GETAccountingCodeItemWithoutSuccessTypeCategoryEnumRevenue     GETAccountingCodeItemWithoutSuccessTypeCategoryEnum = "Revenue"
	GETAccountingCodeItemWithoutSuccessTypeCategoryEnumExpenses    GETAccountingCodeItemWithoutSuccessTypeCategoryEnum = "Expenses"
)

func (e *GETAccountingCodeItemWithoutSuccessTypeCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Assets":
		fallthrough
	case "Liabilities":
		fallthrough
	case "Equity":
		fallthrough
	case "Revenue":
		fallthrough
	case "Expenses":
		*e = GETAccountingCodeItemWithoutSuccessTypeCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAccountingCodeItemWithoutSuccessTypeCategoryEnum: %s", s)
	}
}

// GETAccountingCodeItemWithoutSuccessTypeStatusEnum - The accounting code status.
type GETAccountingCodeItemWithoutSuccessTypeStatusEnum string

const (
	GETAccountingCodeItemWithoutSuccessTypeStatusEnumActive   GETAccountingCodeItemWithoutSuccessTypeStatusEnum = "Active"
	GETAccountingCodeItemWithoutSuccessTypeStatusEnumInactive GETAccountingCodeItemWithoutSuccessTypeStatusEnum = "Inactive"
)

func (e *GETAccountingCodeItemWithoutSuccessTypeStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Inactive":
		*e = GETAccountingCodeItemWithoutSuccessTypeStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAccountingCodeItemWithoutSuccessTypeStatusEnum: %s", s)
	}
}

// GETAccountingCodeItemWithoutSuccessTypeTypeEnum - Accounting code type.
//
// Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature.
type GETAccountingCodeItemWithoutSuccessTypeTypeEnum string

const (
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumAccountsReceivable    GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "AccountsReceivable"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumOnAccountReceivable   GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "On-Account Receivable"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumCash                  GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "Cash"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumOtherAssets           GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "OtherAssets"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumCustomerCashOnAccount GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "CustomerCashOnAccount"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumDeferredRevenue       GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "DeferredRevenue"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumSalesTaxPayable       GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "SalesTaxPayable"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumOtherLiabilities      GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "OtherLiabilities"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumSalesRevenue          GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "SalesRevenue"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumSalesDiscounts        GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "SalesDiscounts"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumOtherRevenue          GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "OtherRevenue"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumOtherEquity           GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "OtherEquity"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumBadDebt               GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "BadDebt"
	GETAccountingCodeItemWithoutSuccessTypeTypeEnumOtherExpenses         GETAccountingCodeItemWithoutSuccessTypeTypeEnum = "OtherExpenses"
)

func (e *GETAccountingCodeItemWithoutSuccessTypeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AccountsReceivable":
		fallthrough
	case "On-Account Receivable":
		fallthrough
	case "Cash":
		fallthrough
	case "OtherAssets":
		fallthrough
	case "CustomerCashOnAccount":
		fallthrough
	case "DeferredRevenue":
		fallthrough
	case "SalesTaxPayable":
		fallthrough
	case "OtherLiabilities":
		fallthrough
	case "SalesRevenue":
		fallthrough
	case "SalesDiscounts":
		fallthrough
	case "OtherRevenue":
		fallthrough
	case "OtherEquity":
		fallthrough
	case "BadDebt":
		fallthrough
	case "OtherExpenses":
		*e = GETAccountingCodeItemWithoutSuccessTypeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAccountingCodeItemWithoutSuccessTypeTypeEnum: %s", s)
	}
}

// GETAccountingCodeItemWithoutSuccessType - Container for custom fields of an Accounting Code object.
type GETAccountingCodeItemWithoutSuccessType struct {
	// The category associated with the accounting code.
	//
	Category *GETAccountingCodeItemWithoutSuccessTypeCategoryEnum `json:"category,omitempty"`
	// The ID of the user who created the accounting code.
	//
	CreatedBy *string `json:"createdBy,omitempty"`
	// Date and time when the accounting code was created.
	//
	CreatedOn *time.Time `json:"createdOn,omitempty"`
	// Name of the account in your general ledger.
	//
	// Field only available if you have Zuora Finance enabled.
	//
	GlAccountName *string `json:"glAccountName,omitempty"`
	// Account number in your general ledger.
	//
	// Field only available if you have Zuora Finance enabled.
	//
	GlAccountNumber *string `json:"glAccountNumber,omitempty"`
	// ID of the accounting code.
	//
	ID *string `json:"id,omitempty"`
	// Name of the accounting code.
	//
	Name *string `json:"name,omitempty"`
	// Any optional notes for the accounting code.
	//
	Notes *string `json:"notes,omitempty"`
	// The accounting code status.
	//
	Status *GETAccountingCodeItemWithoutSuccessTypeStatusEnum `json:"status,omitempty"`
	// Accounting code type.
	//
	// Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature.
	//
	Type *GETAccountingCodeItemWithoutSuccessTypeTypeEnum `json:"type,omitempty"`
	// The ID of the user who last updated the accounting code.
	//
	UpdatedBy *string `json:"updatedBy,omitempty"`
	// Date and time when the accounting code was last updated.
	//
	UpdatedOn *time.Time `json:"updatedOn,omitempty"`
}
