/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Represents information about the state of transitions between one stage and another stage.
 */
export class TransitionState extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "disabledReason" })
  disabledReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastChangedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastChangedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastChangedBy" })
  lastChangedBy?: string;
}
