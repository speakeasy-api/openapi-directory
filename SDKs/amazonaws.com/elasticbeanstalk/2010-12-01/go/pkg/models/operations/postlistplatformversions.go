// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListPlatformVersionsActionEnum
type POSTListPlatformVersionsActionEnum string

const (
	POSTListPlatformVersionsActionEnumListPlatformVersions POSTListPlatformVersionsActionEnum = "ListPlatformVersions"
)

func (e *POSTListPlatformVersionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListPlatformVersions":
		*e = POSTListPlatformVersionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListPlatformVersionsActionEnum: %s", s)
	}
}

// POSTListPlatformVersionsVersionEnum
type POSTListPlatformVersionsVersionEnum string

const (
	POSTListPlatformVersionsVersionEnumTwoThousandAndTen1201 POSTListPlatformVersionsVersionEnum = "2010-12-01"
)

func (e *POSTListPlatformVersionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = POSTListPlatformVersionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListPlatformVersionsVersionEnum: %s", s)
	}
}

type POSTListPlatformVersionsQueryParams struct {
	Action POSTListPlatformVersionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxRecords *string `queryParam:"style=form,explode=true,name=MaxRecords"`
	// Pagination token
	NextToken *string                             `queryParam:"style=form,explode=true,name=NextToken"`
	Version   POSTListPlatformVersionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTListPlatformVersionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListPlatformVersionsRequest struct {
	QueryParams POSTListPlatformVersionsQueryParams
	Headers     POSTListPlatformVersionsHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTListPlatformVersionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
