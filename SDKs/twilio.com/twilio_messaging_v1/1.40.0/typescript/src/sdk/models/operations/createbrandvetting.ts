/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateBrandVettingServerList = [
  "https://messaging.twilio.com",
] as const;

export class CreateBrandVettingSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateBrandVettingCreateBrandVettingRequest extends SpeakeasyBase {
  /**
   * The unique ID of the vetting
   */
  @SpeakeasyMetadata({ data: "form, name=VettingId" })
  vettingId?: string;

  @SpeakeasyMetadata({ data: "form, name=VettingProvider" })
  vettingProvider: shared.BrandVettingEnumVettingProviderEnum;
}

export class CreateBrandVettingRequest extends SpeakeasyBase {
  /**
   * The SID of the Brand Registration resource of the vettings to create .
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=BrandSid",
  })
  brandSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateBrandVettingCreateBrandVettingRequest;
}

export class CreateBrandVettingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  messagingV1BrandRegistrationsBrandVetting?: shared.MessagingV1BrandRegistrationsBrandVetting;
}
