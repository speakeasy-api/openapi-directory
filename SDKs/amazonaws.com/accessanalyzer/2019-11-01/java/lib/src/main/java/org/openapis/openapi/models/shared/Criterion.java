/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Criterion - The criteria to use in the filter that defines the archive rule. For more information on available filter keys, see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html"&gt;IAM Access Analyzer filter keys&lt;/a&gt;.
 */
public class Criterion {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contains")
    public String[] contains;

    public Criterion withContains(String[] contains) {
        this.contains = contains;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eq")
    public String[] eq;

    public Criterion withEq(String[] eq) {
        this.eq = eq;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exists")
    public Boolean exists;

    public Criterion withExists(Boolean exists) {
        this.exists = exists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("neq")
    public String[] neq;

    public Criterion withNeq(String[] neq) {
        this.neq = neq;
        return this;
    }
    
    public Criterion(){}
}
