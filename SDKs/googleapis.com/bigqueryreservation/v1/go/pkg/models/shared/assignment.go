// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AssignmentJobTypeEnum - Which type of jobs will use the reservation.
type AssignmentJobTypeEnum string

const (
	AssignmentJobTypeEnumJobTypeUnspecified AssignmentJobTypeEnum = "JOB_TYPE_UNSPECIFIED"
	AssignmentJobTypeEnumPipeline           AssignmentJobTypeEnum = "PIPELINE"
	AssignmentJobTypeEnumQuery              AssignmentJobTypeEnum = "QUERY"
	AssignmentJobTypeEnumMlExternal         AssignmentJobTypeEnum = "ML_EXTERNAL"
	AssignmentJobTypeEnumBackground         AssignmentJobTypeEnum = "BACKGROUND"
)

func (e *AssignmentJobTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "JOB_TYPE_UNSPECIFIED":
		fallthrough
	case "PIPELINE":
		fallthrough
	case "QUERY":
		fallthrough
	case "ML_EXTERNAL":
		fallthrough
	case "BACKGROUND":
		*e = AssignmentJobTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssignmentJobTypeEnum: %s", s)
	}
}

// AssignmentStateEnum - Output only. State of the assignment.
type AssignmentStateEnum string

const (
	AssignmentStateEnumStateUnspecified AssignmentStateEnum = "STATE_UNSPECIFIED"
	AssignmentStateEnumPending          AssignmentStateEnum = "PENDING"
	AssignmentStateEnumActive           AssignmentStateEnum = "ACTIVE"
)

func (e *AssignmentStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "ACTIVE":
		*e = AssignmentStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssignmentStateEnum: %s", s)
	}
}

// Assignment - An assignment allows a project to submit jobs of a certain type using slots from the specified reservation.
type Assignment struct {
	// The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`.
	Assignee *string `json:"assignee,omitempty"`
	// Which type of jobs will use the reservation.
	JobType *AssignmentJobTypeEnum `json:"jobType,omitempty"`
	// Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`. The assignment_id must only contain lower case alphanumeric characters or dashes and the max length is 64 characters.
	Name *string `json:"name,omitempty"`
	// Output only. State of the assignment.
	State *AssignmentStateEnum `json:"state,omitempty"`
}

// AssignmentInput - An assignment allows a project to submit jobs of a certain type using slots from the specified reservation.
type AssignmentInput struct {
	// The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`.
	Assignee *string `json:"assignee,omitempty"`
	// Which type of jobs will use the reservation.
	JobType *AssignmentJobTypeEnum `json:"jobType,omitempty"`
}
