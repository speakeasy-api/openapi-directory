// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ContainersUsageInfoLimits struct {
	// The number of containers that can be created in the space. If -1 is returned, then an unlimited number of containers can be created. The number however is counted towards and limited by the container memory.
	Containers *int `json:"containers,omitempty"`
	// The number of public IP addresses that can be allocated to the space.
	FloatingIps *int `json:"floating_ips,omitempty"`
	// The amount of container memory that can be used in the space in megabyte.
	MemoryMB *int `json:"memory_MB,omitempty"`
	// The number of virtual CPUs that are assigned to the space.
	Vcpu *int `json:"vcpu,omitempty"`
}

type ContainersUsageInfoUsage struct {
	// The number of containers that were created in the space. All containers that count towards the quota limit are listed independent on their current state.
	Containers *int `json:"containers,omitempty"`
	// The number of public IP addresses that are allocated to the space.
	FloatingIps *int `json:"floating_ips,omitempty"`
	// The number of public IP addresses that are bound to a container in the space.
	FloatingIpsBound *int `json:"floating_ips_bound,omitempty"`
	// The number of private images that were added to the private Bluemix registry.
	Images *int `json:"images,omitempty"`
	// The amount of container memory that is already used by the containers that were created in the space in megabyte.
	MemoryMB *int `json:"memory_MB,omitempty"`
	// The number of containers that are currently in a running state.
	Running *int `json:"running,omitempty"`
	// The number of virtual CPUs that are allocated to the space.
	Vcpu *int `json:"vcpu,omitempty"`
}

// ContainersUsageInfo - OK. A list of available container sizes as well as the quota limit and usage for a space is returned.
type ContainersUsageInfo struct {
	AvailableSizes []ContainersUsageInfoAvailableSizes `json:"AvailableSizes,omitempty"`
	// The IBM Containers machine where the space is located
	Environment *string                    `json:"Environment,omitempty"`
	Limits      *ContainersUsageInfoLimits `json:"Limits,omitempty"`
	Usage       *ContainersUsageInfoUsage  `json:"Usage,omitempty"`
}
