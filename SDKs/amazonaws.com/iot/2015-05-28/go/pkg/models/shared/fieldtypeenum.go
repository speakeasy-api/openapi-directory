// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FieldTypeEnum string

const (
	FieldTypeEnumNumber  FieldTypeEnum = "Number"
	FieldTypeEnumString  FieldTypeEnum = "String"
	FieldTypeEnumBoolean FieldTypeEnum = "Boolean"
)

func (e FieldTypeEnum) ToPointer() *FieldTypeEnum {
	return &e
}

func (e *FieldTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Number":
		fallthrough
	case "String":
		fallthrough
	case "Boolean":
		*e = FieldTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FieldTypeEnum: %v", v)
	}
}
