// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// OauthConnectionStatusEnum - Whether the connection is active.
type OauthConnectionStatusEnum string

const (
	OauthConnectionStatusEnumActive   OauthConnectionStatusEnum = "active"
	OauthConnectionStatusEnumInactive OauthConnectionStatusEnum = "inactive"
)

func (e *OauthConnectionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = OauthConnectionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OauthConnectionStatusEnum: %s", s)
	}
}

// OauthConnectionTypeEnum - A constant representing the object's type. For this resource it will always be `oauth_connection`.
type OauthConnectionTypeEnum string

const (
	OauthConnectionTypeEnumOauthConnection OauthConnectionTypeEnum = "oauth_connection"
)

func (e *OauthConnectionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "oauth_connection":
		*e = OauthConnectionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OauthConnectionTypeEnum: %s", s)
	}
}

// OauthConnection - When a user authorizes your OAuth application, an OAuth Connection object is created.
type OauthConnection struct {
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) timestamp when the OAuth Connection was created.
	CreatedAt time.Time `json:"created_at"`
	// The identifier of the Group that has authorized your OAuth application.
	GroupID string `json:"group_id"`
	// The OAuth Connection's identifier.
	ID string `json:"id"`
	// Whether the connection is active.
	Status OauthConnectionStatusEnum `json:"status"`
	// A constant representing the object's type. For this resource it will always be `oauth_connection`.
	Type OauthConnectionTypeEnum `json:"type"`
}
