/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Read {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_read")
    public OffsetDateTime lastRead;
    public Read withLastRead(OffsetDateTime lastRead) {
        this.lastRead = lastRead;
        return this;
    }
    
    @JsonProperty("unread_messages")
    public Double unreadMessages;
    public Read withUnreadMessages(Double unreadMessages) {
        this.unreadMessages = unreadMessages;
        return this;
    }
    
    /**
     * Represents chat user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public java.util.Map<String, Object> user;
    public Read withUser(java.util.Map<String, Object> user) {
        this.user = user;
        return this;
    }
    
}
