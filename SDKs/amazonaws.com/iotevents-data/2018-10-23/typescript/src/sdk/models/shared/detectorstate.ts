/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Timer } from "./timer";
import { Variable } from "./variable";
import { Expose, Type } from "class-transformer";

/**
 * Information about the current state of the detector instance.
 */
export class DetectorState extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "stateName" })
  stateName: string;

  @SpeakeasyMetadata({ elemType: Timer })
  @Expose({ name: "timers" })
  @Type(() => Timer)
  timers: Timer[];

  @SpeakeasyMetadata({ elemType: Variable })
  @Expose({ name: "variables" })
  @Type(() => Variable)
  variables: Variable[];
}
