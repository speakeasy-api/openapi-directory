/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExportFormatEnum } from "./exportformatenum";
import { S3SseAlgorithmEnum } from "./s3ssealgorithmenum";
import { Expose, Transform } from "class-transformer";

export class ExportTableToPointInTimeInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientToken" })
  clientToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExportFormat" })
  exportFormat?: ExportFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ExportTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  exportTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "S3Bucket" })
  s3Bucket: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3BucketOwner" })
  s3BucketOwner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3Prefix" })
  s3Prefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3SseAlgorithm" })
  s3SseAlgorithm?: S3SseAlgorithmEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "S3SseKmsKeyId" })
  s3SseKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableArn" })
  tableArn: string;
}
