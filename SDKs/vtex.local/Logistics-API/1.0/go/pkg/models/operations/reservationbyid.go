// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ReservationByIDRequest struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent
	ContentType   string `header:"style=simple,explode=false,name=Content-Type"`
	ReservationID string `pathParam:"style=simple,explode=false,name=reservationId"`
}

type ReservationByID200ApplicationJSONSLARequestItem1Dimension1 struct {
	Height          float64 `json:"height"`
	Length          float64 `json:"length"`
	MaxSumDimension float64 `json:"maxSumDimension"`
	Weight          float64 `json:"weight"`
	Width           float64 `json:"width"`
}

type ReservationByID200ApplicationJSONSLARequestItem1 struct {
	AdditionalHandlingTime string                                                     `json:"additionalHandlingTime"`
	Dimension              ReservationByID200ApplicationJSONSLARequestItem1Dimension1 `json:"dimension"`
	GroupItemID            string                                                     `json:"groupItemId"`
	ID                     string                                                     `json:"id"`
	KitItem                []string                                                   `json:"kitItem"`
	Modal                  string                                                     `json:"modal"`
	Price                  float64                                                    `json:"price"`
	Quantity               int                                                        `json:"quantity"`
	UnlimitedQuantity      bool                                                       `json:"unlimitedQuantity"`
}

type ReservationByID200ApplicationJSONSLARequestLocation1InStore1 struct {
	IsCheckedIn bool   `json:"IsCheckedIn"`
	StoreID     string `json:"StoreId"`
}

type ReservationByID200ApplicationJSONSLARequestLocation1 struct {
	Country         string                                                       `json:"country"`
	DeliveryPointID string                                                       `json:"deliveryPointId"`
	InStore         ReservationByID200ApplicationJSONSLARequestLocation1InStore1 `json:"inStore"`
	Point           string                                                       `json:"point"`
	ZipCode         string                                                       `json:"zipCode"`
}

type ReservationByID200ApplicationJSONSLARequest struct {
	DeliveryWindows        *string                                               `json:"deliveryWindows,omitempty"`
	DockID                 *string                                               `json:"dockId,omitempty"`
	DockTime               *string                                               `json:"dockTime,omitempty"`
	FreightTableID         *string                                               `json:"freightTableId,omitempty"`
	FreightTableName       *string                                               `json:"freightTableName,omitempty"`
	Item                   *ReservationByID200ApplicationJSONSLARequestItem1     `json:"item,omitempty"`
	ListPrice              *float64                                              `json:"listPrice,omitempty"`
	Location               *ReservationByID200ApplicationJSONSLARequestLocation1 `json:"location,omitempty"`
	PickupStoreInfo        *string                                               `json:"pickupStoreInfo,omitempty"`
	PromotionalPrice       *float64                                              `json:"promotionalPrice,omitempty"`
	SLAType                *string                                               `json:"slaType,omitempty"`
	SLATypeName            *string                                               `json:"slaTypeName,omitempty"`
	TimeToDockPlusDockTime *string                                               `json:"timeToDockPlusDockTime,omitempty"`
	TotalTime              *string                                               `json:"totalTime,omitempty"`
	TransitTime            *string                                               `json:"transitTime,omitempty"`
	WareHouseID            *string                                               `json:"wareHouseId,omitempty"`
	WmsEndPoint            *string                                               `json:"wmsEndPoint,omitempty"`
}

// ReservationByID200ApplicationJSON - OK
type ReservationByID200ApplicationJSON struct {
	// Authorized date in UTC.
	AuthorizedDateUtc *string `json:"AuthorizedDateUtc,omitempty"`
	// Canceled date in UTC.
	CanceledDateUtc *string `json:"CanceledDateUtc,omitempty"`
	// Confirmed date in UTC.
	ConfirmedDateUtc *string `json:"ConfirmedDateUtc,omitempty"`
	// Information on errors, if there are any.
	Errors   []string `json:"Errors,omitempty"`
	IsSucess *bool    `json:"IsSucess,omitempty"`
	// Date of the last update in UTC.
	LastUpdateDateUtc *string `json:"LastUpdateDateUtc,omitempty"`
	// Lock ID.
	LockID *string `json:"LockId,omitempty"`
	// Maximum confirmation date in UTC.
	MaximumConfirmationDateUtc *string `json:"MaximumConfirmationDateUtc,omitempty"`
	// Pickup point item options.
	PickupPointItemOptions *string `json:"PickupPointItemOptions,omitempty"`
	// Reservation date in UTC.
	ReservationDateUtc *string `json:"ReservationDateUtc,omitempty"`
	// Sales channel.
	SalesChannel *string `json:"SalesChannel,omitempty"`
	// Information on SLA request.
	SLARequest []ReservationByID200ApplicationJSONSLARequest `json:"SlaRequest,omitempty"`
	// Reservation status, being:
	// `0`: `NotCommitted`
	// `1`: `Authorized`
	// `2`: `Confirmed`
	// `3`: `Canceled_AbortedCommitted`
	// `4`: `Canceled_AuthorizationExpired`
	// `5`: `Canceled_Manually`
	Status *int `json:"Status,omitempty"`
}

type ReservationByIDResponse struct {
	ContentType string
	Headers     map[string][]string
	// OK
	ReservationByID200ApplicationJSONObject *ReservationByID200ApplicationJSON
	StatusCode                              int
	RawResponse                             *http.Response
}
