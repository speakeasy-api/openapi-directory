// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkerPoolRegionsEnum string

const (
	WorkerPoolRegionsEnumRegionUnspecified WorkerPoolRegionsEnum = "REGION_UNSPECIFIED"
	WorkerPoolRegionsEnumUsCentral1        WorkerPoolRegionsEnum = "us-central1"
	WorkerPoolRegionsEnumUsWest1           WorkerPoolRegionsEnum = "us-west1"
	WorkerPoolRegionsEnumUsEast1           WorkerPoolRegionsEnum = "us-east1"
	WorkerPoolRegionsEnumUsEast4           WorkerPoolRegionsEnum = "us-east4"
)

func (e *WorkerPoolRegionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REGION_UNSPECIFIED":
		fallthrough
	case "us-central1":
		fallthrough
	case "us-west1":
		fallthrough
	case "us-east1":
		fallthrough
	case "us-east4":
		*e = WorkerPoolRegionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkerPoolRegionsEnum: %s", s)
	}
}

// WorkerPoolStatusEnum - Output only. WorkerPool Status.
type WorkerPoolStatusEnum string

const (
	WorkerPoolStatusEnumStatusUnspecified WorkerPoolStatusEnum = "STATUS_UNSPECIFIED"
	WorkerPoolStatusEnumCreating          WorkerPoolStatusEnum = "CREATING"
	WorkerPoolStatusEnumRunning           WorkerPoolStatusEnum = "RUNNING"
	WorkerPoolStatusEnumDeleting          WorkerPoolStatusEnum = "DELETING"
	WorkerPoolStatusEnumDeleted           WorkerPoolStatusEnum = "DELETED"
)

func (e *WorkerPoolStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATUS_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = WorkerPoolStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkerPoolStatusEnum: %s", s)
	}
}

// WorkerPool - Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.
type WorkerPool struct {
	// Output only. Time at which the request to create the `WorkerPool` was received.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. Time at which the request to delete the `WorkerPool` was received.
	DeleteTime *string `json:"deleteTime,omitempty"`
	// User-defined name of the `WorkerPool`.
	Name *string `json:"name,omitempty"`
	// The project ID of the GCP project for which the `WorkerPool` is created.
	ProjectID *string `json:"projectId,omitempty"`
	// List of regions to create the `WorkerPool`. Regions can't be empty. If Cloud Build adds a new GCP region in the future, the existing `WorkerPool` will not be enabled in the new region automatically; you must add the new region to the `regions` field to enable the `WorkerPool` in that region.
	Regions []WorkerPoolRegionsEnum `json:"regions,omitempty"`
	// Output only. The service account used to manage the `WorkerPool`. The service account must have the Compute Instance Admin (Beta) permission at the project level.
	ServiceAccountEmail *string `json:"serviceAccountEmail,omitempty"`
	// Output only. WorkerPool Status.
	Status *WorkerPoolStatusEnum `json:"status,omitempty"`
	// Output only. Time at which the request to update the `WorkerPool` was received.
	UpdateTime *string `json:"updateTime,omitempty"`
	// WorkerConfig defines the configuration to be used for a creating workers in the pool.
	WorkerConfig *WorkerConfig `json:"workerConfig,omitempty"`
	// Total number of workers to be created across all requested regions.
	WorkerCount *string `json:"workerCount,omitempty"`
}
