"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveDistributionLinksResponseMeta:
    
    http_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('httpStatus'), 'exclude': lambda f: f is None }})  
    request_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveDistributionLinksResponseResultElements:
    
    contact_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactId') }})  
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})  
    exceeded_contact_frequency: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exceededContactFrequency') }})  
    external_data_reference: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalDataReference') }})  
    first_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName') }})  
    last_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName') }})  
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})  
    link_expiration: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkExpiration') }})  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    transaction_id: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionId') }})  
    unsubscribed: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unsubscribed') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveDistributionLinksResponseResult:
    
    elements: Optional[list[RetrieveDistributionLinksResponseResultElements]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('elements'), 'exclude': lambda f: f is None }})  
    next_page: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPage'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveDistributionLinksResponse:
    r"""Generated list of links"""
    
    meta: Optional[RetrieveDistributionLinksResponseMeta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta'), 'exclude': lambda f: f is None }})  
    result: Optional[RetrieveDistributionLinksResponseResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})  
    