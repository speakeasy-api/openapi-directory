// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateAdminAccountXAmzTargetEnum
type AssociateAdminAccountXAmzTargetEnum string

const (
	AssociateAdminAccountXAmzTargetEnumAwsfms20180101AssociateAdminAccount AssociateAdminAccountXAmzTargetEnum = "AWSFMS_20180101.AssociateAdminAccount"
)

func (e AssociateAdminAccountXAmzTargetEnum) ToPointer() *AssociateAdminAccountXAmzTargetEnum {
	return &e
}

func (e *AssociateAdminAccountXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSFMS_20180101.AssociateAdminAccount":
		*e = AssociateAdminAccountXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateAdminAccountXAmzTargetEnum: %v", v)
	}
}

type AssociateAdminAccountRequest struct {
	AssociateAdminAccountRequest shared.AssociateAdminAccountRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   AssociateAdminAccountXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateAdminAccountResponse struct {
	ContentType string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
