"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import folder as shared_folder
from typing import Optional


@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDCommonFoldersAllRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    keywords: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Keywords', 'style': 'form', 'explode': True }})
    r"""keywords attached to the folder"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Name', 'style': 'form', 'explode': True }})
    r"""Name of the folder"""  
    

@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDCommonFoldersAllResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_folders_id_common_folders_all_200_application_json_all_ofs: Optional[list[shared_folder.Folder]] = dataclasses.field(default=None)
    r"""A list of folders"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    