"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AdultInfo:
    r"""An object describing whether the image contains adult-oriented content and/or is racy."""
    
    adult_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adultScore'), 'exclude': lambda f: f is None }})
    r"""Score from 0 to 1 that indicates how much the content is considered adult-oriented within the image."""  
    is_adult_content: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isAdultContent'), 'exclude': lambda f: f is None }})
    r"""A value indicating if the image contains adult-oriented content."""  
    is_racy_content: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isRacyContent'), 'exclude': lambda f: f is None }})
    r"""A value indicating if the image is racy."""  
    racy_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('racyScore'), 'exclude': lambda f: f is None }})
    r"""Score from 0 to 1 that indicates how suggestive is the image."""  
    