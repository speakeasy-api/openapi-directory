/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetSchedulesScheduleFSubIdRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=api_key",
  })
  apiKey: string;

  /**
   * For paginating through results, starting at page 1
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results returned per page. Defaults to 20.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=sub_id",
  })
  subId: string;
}

export class GetSchedulesScheduleFSubIdDefaultApplicationJSONResults extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action_code" })
  actionCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "action_code_full" })
  actionCodeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "aggregate_general_election_expenditure" })
  aggregateGeneralElectionExpenditure?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_schedule_name" })
  backReferenceScheduleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_transaction_id" })
  backReferenceTransactionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_first_name" })
  candidateFirstName?: string;

  /**
   *
   * @remarks
   * A unique identifier assigned to each candidate registered with the FEC.
   * If a person runs for several offices, that person will have separate candidate IDs for each office.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_id" })
  candidateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_last_name" })
  candidateLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_middle_name" })
  candidateMiddleName?: string;

  /**
   * Name of candidate running for office
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_name" })
  candidateName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office" })
  candidateOffice?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_district" })
  candidateOfficeDistrict?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_full" })
  candidateOfficeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_state" })
  candidateOfficeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_state_full" })
  candidateOfficeStateFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_prefix" })
  candidatePrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_suffix" })
  candidateSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "catolog_code" })
  catologCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "catolog_code_full" })
  catologCodeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee" })
  @Type(() => shared.CommitteeHistory)
  committee?: shared.CommitteeHistory;

  @SpeakeasyMetadata()
  @Expose({ name: "committee_designated_coordinated_expenditure_indicator" })
  committeeDesignatedCoordinatedExpenditureIndicator?: string;

  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_id" })
  committeeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee_name" })
  committeeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_city" })
  conduitCommitteeCity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_id" })
  conduitCommitteeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_name" })
  conduitCommitteeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_state" })
  conduitCommitteeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_street1" })
  conduitCommitteeStreet1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_street2" })
  conduitCommitteeStreet2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_zip" })
  conduitCommitteeZip?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "designated_committee_id" })
  designatedCommitteeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "designated_committee_name" })
  designatedCommitteeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "election_cycle" })
  electionCycle?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "entity_type" })
  entityType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "entity_type_desc" })
  entityTypeDesc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_amount" })
  expenditureAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expenditureDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_purpose_full" })
  expenditurePurposeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_type" })
  expenditureType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_type_full" })
  expenditureTypeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "file_number" })
  fileNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "filing_form" })
  filingForm?: string;

  /**
   *
   * @remarks
   * An unique identifier for each page where the electronic or paper filing is reported.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_number" })
  imageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "line_number" })
  lineNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "link_id" })
  linkId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "load_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  loadDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code" })
  memoCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code_full" })
  memoCodeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_text" })
  memoText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "original_sub_id" })
  originalSubId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_first_name" })
  payeeFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_last_name" })
  payeeLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_middle_name" })
  payeeMiddleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_name" })
  payeeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pdf_url" })
  pdfUrl?: string;

  /**
   * Name of report where the underlying data comes from:
   *
   * @remarks
   *     - 10D Pre-Election
   *     - 10G Pre-General
   *     - 10P Pre-Primary
   *     - 10R Pre-Run-Off
   *     - 10S Pre-Special
   *     - 12C Pre-Convention
   *     - 12G Pre-General
   *     - 12P Pre-Primary
   *     - 12R Pre-Run-Off
   *     - 12S Pre-Special
   *     - 30D Post-Election
   *     - 30G Post-General
   *     - 30P Post-Primary
   *     - 30R Post-Run-Off
   *     - 30S Post-Special
   *     - 60D Post-Convention
   *     - M1  January Monthly
   *     - M10 October Monthly
   *     - M11 November Monthly
   *     - M12 December Monthly
   *     - M2  February Monthly
   *     - M3  March Monthly
   *     - M4  April Monthly
   *     - M5  May Monthly
   *     - M6  June Monthly
   *     - M7  July Monthly
   *     - M8  August Monthly
   *     - M9  September Monthly
   *     - MY  Mid-Year Report
   *     - Q1  April Quarterly
   *     - Q2  July Quarterly
   *     - Q3  October Quarterly
   *     - TER Termination Report
   *     - YE  Year-End
   *     - ADJ COMP ADJUST AMEND
   *     - CA  COMPREHENSIVE AMEND
   *     - 90S Post Inaugural Supplement
   *     - 90D Post Inaugural
   *     - 48  48 Hour Notification
   *     - 24  24 Hour Notification
   *     - M7S July Monthly/Semi-Annual
   *     - MSA Monthly Semi-Annual (MY)
   *     - MYS Monthly Year End/Semi-Annual
   *     - Q2S July Quarterly/Semi-Annual
   *     - QSA Quarterly Semi-Annual (MY)
   *     - QYS Quarterly Year End/Semi-Annual
   *     - QYE Quarterly Semi-Annual (YE)
   *     - QMS Quarterly Mid-Year/ Semi-Annual
   *     - MSY Monthly Semi-Annual (YE)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_type" })
  reportType?: string;

  /**
   *
   * @remarks
   * Forms with coverage date -
   *     year from the coverage ending date.
   * Forms without coverage date -
   *     year from the receipt date.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_year" })
  reportYear?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "schedule_type" })
  scheduleType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "schedule_type_full" })
  scheduleTypeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sub_id" })
  subId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subordinate_committee" })
  @Type(() => shared.CommitteeHistory)
  subordinateCommittee?: shared.CommitteeHistory;

  @SpeakeasyMetadata()
  @Expose({ name: "subordinate_committee_id" })
  subordinateCommitteeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unlimited_spending_flag" })
  unlimitedSpendingFlag?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unlimited_spending_flag_full" })
  unlimitedSpendingFlagFull?: string;
}

export class GetSchedulesScheduleFSubIdDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => shared.OffsetInfo)
  pagination?: shared.OffsetInfo;

  @SpeakeasyMetadata({
    elemType: GetSchedulesScheduleFSubIdDefaultApplicationJSONResults,
  })
  @Expose({ name: "results" })
  @Type(() => GetSchedulesScheduleFSubIdDefaultApplicationJSONResults)
  results?: GetSchedulesScheduleFSubIdDefaultApplicationJSONResults[];
}

export class GetSchedulesScheduleFSubIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  getSchedulesScheduleFSubIdDefaultApplicationJSONObject?: GetSchedulesScheduleFSubIdDefaultApplicationJSON;
}
