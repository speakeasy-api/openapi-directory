// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResourceShareInvitationStatusEnum string

const (
	ResourceShareInvitationStatusEnumPending  ResourceShareInvitationStatusEnum = "PENDING"
	ResourceShareInvitationStatusEnumAccepted ResourceShareInvitationStatusEnum = "ACCEPTED"
	ResourceShareInvitationStatusEnumRejected ResourceShareInvitationStatusEnum = "REJECTED"
	ResourceShareInvitationStatusEnumExpired  ResourceShareInvitationStatusEnum = "EXPIRED"
)

func (e ResourceShareInvitationStatusEnum) ToPointer() *ResourceShareInvitationStatusEnum {
	return &e
}

func (e *ResourceShareInvitationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "ACCEPTED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "EXPIRED":
		*e = ResourceShareInvitationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceShareInvitationStatusEnum: %v", v)
	}
}
