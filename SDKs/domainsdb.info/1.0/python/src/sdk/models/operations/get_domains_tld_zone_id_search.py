"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import search_results as shared_search_results
from typing import Optional


@dataclasses.dataclass
class GetDomainsTldZoneIDSearchRequest:
    
    zone_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'zone_id', 'style': 'simple', 'explode': False }})  
    a: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'A', 'style': 'form', 'explode': True }})
    r"""A record includes"""  
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""API key"""  
    cname: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'CNAME', 'style': 'form', 'explode': True }})
    r"""CNAME record includes"""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'country', 'style': 'form', 'explode': True }})
    r"""Hosting Country"""  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date', 'style': 'form', 'explode': True }})
    r"""Request date"""  
    domain: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'domain', 'style': 'form', 'explode': True }})
    r"""Domain includes"""  
    is_dead: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'isDead', 'style': 'form', 'explode': True }})
    r"""Dead or Not, default not"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Results per page"""  
    mx: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'MX', 'style': 'form', 'explode': True }})
    r"""MX record includes"""  
    ns: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'NS', 'style': 'form', 'explode': True }})
    r"""NS record includes"""  
    page: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Search page to request"""  
    txt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'TXT', 'style': 'form', 'explode': True }})
    r"""TXT record includes"""  
    

@dataclasses.dataclass
class GetDomainsTldZoneIDSearchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    search_results: Optional[shared_search_results.SearchResults] = dataclasses.field(default=None)
    r"""Success"""  
    