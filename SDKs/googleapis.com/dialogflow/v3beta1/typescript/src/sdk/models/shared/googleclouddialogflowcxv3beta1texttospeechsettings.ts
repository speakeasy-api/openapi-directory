/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig } from "./googleclouddialogflowcxv3beta1synthesizespeechconfig";
import { Expose, Transform } from "class-transformer";

/**
 * Settings related to speech generating.
 */
export class GoogleCloudDialogflowCxV3beta1TextToSpeechSettings extends SpeakeasyBase {
  /**
   * Configuration of how speech should be synthesized, mapping from language (https://dialogflow.com/docs/reference/language) to SynthesizeSpeechConfig.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig,
  })
  @Expose({ name: "synthesizeSpeechConfigs" })
  @Transform(
    ({ value }) => {
      const obj: Record<
        string,
        GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig
      > = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  synthesizeSpeechConfigs?: Record<
    string,
    GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig
  >;
}
