// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeBatchLoadTaskXAmzTargetEnum
type DescribeBatchLoadTaskXAmzTargetEnum string

const (
	DescribeBatchLoadTaskXAmzTargetEnumTimestream20181101DescribeBatchLoadTask DescribeBatchLoadTaskXAmzTargetEnum = "Timestream_20181101.DescribeBatchLoadTask"
)

func (e DescribeBatchLoadTaskXAmzTargetEnum) ToPointer() *DescribeBatchLoadTaskXAmzTargetEnum {
	return &e
}

func (e *DescribeBatchLoadTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Timestream_20181101.DescribeBatchLoadTask":
		*e = DescribeBatchLoadTaskXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeBatchLoadTaskXAmzTargetEnum: %v", v)
	}
}

type DescribeBatchLoadTaskRequest struct {
	DescribeBatchLoadTaskRequest shared.DescribeBatchLoadTaskRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DescribeBatchLoadTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeBatchLoadTaskResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DescribeBatchLoadTaskResponse *shared.DescribeBatchLoadTaskResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidEndpointException
	InvalidEndpointException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
