"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import licenseimagerequest as shared_licenseimagerequest
from ..shared import licenseimageresultdatalist as shared_licenseimageresultdatalist
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class LicenseImagesSecurity:
    
    customer_access_code: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class LicenseImagesFormatEnum(str, Enum):
    r"""(Deprecated) Image format"""
    EPS = 'eps'
    JPG = 'jpg'

class LicenseImagesSizeEnum(str, Enum):
    r"""Image size"""
    SMALL = 'small'
    MEDIUM = 'medium'
    HUGE = 'huge'
    VECTOR = 'vector'
    CUSTOM = 'custom'


@dataclasses.dataclass
class LicenseImagesRequest:
    
    license_image_request: shared_licenseimagerequest.LicenseImageRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""List of images to request licenses for and information about each license transaction; these values override the defaults in the query parameters"""  
    format: Optional[LicenseImagesFormatEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""(Deprecated) Image format"""  
    search_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search_id', 'style': 'form', 'explode': True }})
    r"""Search ID that was provided in the results of an image search"""  
    size: Optional[LicenseImagesSizeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'size', 'style': 'form', 'explode': True }})
    r"""Image size"""  
    subscription_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'subscription_id', 'style': 'form', 'explode': True }})
    r"""Subscription ID to use to license the image"""  
    

@dataclasses.dataclass
class LicenseImagesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    license_image_result_data_list: Optional[shared_licenseimageresultdatalist.LicenseImageResultDataList] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    