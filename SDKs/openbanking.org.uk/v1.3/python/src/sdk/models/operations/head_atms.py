"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class HeadAtmsRequest:
    
    if_modified_since: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'If-Modified-Since', 'style': 'simple', 'explode': False }})
    r"""Used for conditional request, to retrieve data only if modified since a given date"""  
    if_none_match: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'If-None-Match', 'style': 'simple', 'explode': False }})
    r"""Used for conditional request, to retrieve data only if the given Etag value does not match"""  
    

@dataclasses.dataclass
class HeadAtmsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    no_response: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""No response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    