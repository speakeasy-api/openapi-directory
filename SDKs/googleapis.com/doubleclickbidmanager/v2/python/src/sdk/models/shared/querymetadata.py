"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datarange as shared_datarange
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class QueryMetadataFormatEnum(str, Enum):
    r"""Format of the generated report."""
    FORMAT_UNSPECIFIED = 'FORMAT_UNSPECIFIED'
    CSV = 'CSV'
    XLSX = 'XLSX'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryMetadata:
    r"""Query metadata."""
    
    data_range: Optional[shared_datarange.DataRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataRange'), 'exclude': lambda f: f is None }})
    r"""Report data range."""  
    format: Optional[QueryMetadataFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""Format of the generated report."""  
    send_notification: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sendNotification'), 'exclude': lambda f: f is None }})
    r"""Whether to send an email notification when a report is ready. Defaults to false."""  
    share_email_address: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shareEmailAddress'), 'exclude': lambda f: f is None }})
    r"""List of email addresses which are sent email notifications when the report is finished. Separate from send_notification."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Query title. It is used to name the reports generated from this query."""  
    