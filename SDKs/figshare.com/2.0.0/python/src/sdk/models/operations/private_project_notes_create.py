"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errormessage as shared_errormessage
from ..shared import location as shared_location
from ..shared import projectnotecreate as shared_projectnotecreate
from typing import Optional


@dataclasses.dataclass
class PrivateProjectNotesCreateSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PrivateProjectNotesCreateRequest:
    
    project_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'project_id', 'style': 'simple', 'explode': False }})
    r"""Project unique identifier"""  
    project_note_create: shared_projectnotecreate.ProjectNoteCreate = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Note message"""  
    

@dataclasses.dataclass
class PrivateProjectNotesCreateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_message: Optional[shared_errormessage.ErrorMessage] = dataclasses.field(default=None)
    r"""Forbidden"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    location: Optional[shared_location.Location] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    