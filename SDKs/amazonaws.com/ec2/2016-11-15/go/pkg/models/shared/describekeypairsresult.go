// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeKeyPairsResultKeyPairsKeyTypeEnum - The type of key pair.
type DescribeKeyPairsResultKeyPairsKeyTypeEnum string

const (
	DescribeKeyPairsResultKeyPairsKeyTypeEnumRsa     DescribeKeyPairsResultKeyPairsKeyTypeEnum = "rsa"
	DescribeKeyPairsResultKeyPairsKeyTypeEnumEd25519 DescribeKeyPairsResultKeyPairsKeyTypeEnum = "ed25519"
)

func (e *DescribeKeyPairsResultKeyPairsKeyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rsa":
		fallthrough
	case "ed25519":
		*e = DescribeKeyPairsResultKeyPairsKeyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeKeyPairsResultKeyPairsKeyTypeEnum: %s", s)
	}
}

// DescribeKeyPairsResultKeyPairsTags - Describes a tag.
type DescribeKeyPairsResultKeyPairsTags struct {
	Key   *string
	Value *string
}

// DescribeKeyPairsResultKeyPairs - Describes a key pair.
type DescribeKeyPairsResultKeyPairs struct {
	CreateTime     *time.Time
	KeyFingerprint *string
	KeyName        *string
	KeyPairID      *string
	KeyType        *DescribeKeyPairsResultKeyPairsKeyTypeEnum
	PublicKey      *string
	Tags           []DescribeKeyPairsResultKeyPairsTags
}

// DescribeKeyPairsResult - Success
type DescribeKeyPairsResult struct {
	KeyPairs []DescribeKeyPairsResultKeyPairs
}
