"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudvisionv1p1beta1boundingpoly as shared_googlecloudvisionv1p1beta1boundingpoly
from ..shared import googlecloudvisionv1p1beta1productsearchresultsobjectannotation as shared_googlecloudvisionv1p1beta1productsearchresultsobjectannotation
from ..shared import googlecloudvisionv1p1beta1productsearchresultsresult as shared_googlecloudvisionv1p1beta1productsearchresultsresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult:
    r"""Information about the products similar to a single product in a query image."""
    
    bounding_poly: Optional[shared_googlecloudvisionv1p1beta1boundingpoly.GoogleCloudVisionV1p1beta1BoundingPoly] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boundingPoly'), 'exclude': lambda f: f is None }})
    r"""A bounding polygon for the detected image annotation."""  
    object_annotations: Optional[list[shared_googlecloudvisionv1p1beta1productsearchresultsobjectannotation.GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectAnnotations'), 'exclude': lambda f: f is None }})
    r"""List of generic predictions for the object in the bounding box."""  
    results: Optional[list[shared_googlecloudvisionv1p1beta1productsearchresultsresult.GoogleCloudVisionV1p1beta1ProductSearchResultsResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})
    r"""List of results, one for each product match."""  
    