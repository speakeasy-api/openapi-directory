"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import minimal_repository as shared_minimal_repository
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReposTransferRequestBody:
    
    new_owner: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('new_owner') }})
    r"""The username or organization name the repository will be transferred to."""  
    team_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('team_ids'), 'exclude': lambda f: f is None }})
    r"""ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories."""  
    

@dataclasses.dataclass
class ReposTransferRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    request_body: ReposTransferRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class ReposTransferResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    minimal_repository: Optional[shared_minimal_repository.MinimalRepository] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    