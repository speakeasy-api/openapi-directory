/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the mapping of data property keys.
 */
export class Mapping extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Mapping })
  @Expose({ name: "Children" })
  @Type(() => Mapping)
  children?: Mapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "Dropped" })
  dropped?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "FromPath" })
  fromPath?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "FromType" })
  fromType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ToKey" })
  toKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ToType" })
  toType?: string;
}
