"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import address as shared_address
from ..shared import bankaccount as shared_bankaccount
from ..shared import card as shared_card
from ..shared import name as shared_name
from ..shared import tokendetails as shared_tokendetails
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecurringDetail:
    
    recurring_detail_reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recurringDetailReference') }})
    r"""The reference that uniquely identifies the recurring detail."""  
    variant: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variant') }})
    r"""The payment method, such as â€œmc\\", \\"visa\\", \\"ideal\\", \\"paypal\\"."""  
    additional_data: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalData'), 'exclude': lambda f: f is None }})
    r"""This field contains additional data, which may be returned in a particular response.
    
    The additionalData object consists of entries, each of which includes the key and value.
    """  
    alias: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alias'), 'exclude': lambda f: f is None }})
    r"""The alias of the credit card number.
    
    Applies only to recurring contracts storing credit card details
    """  
    alias_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aliasType'), 'exclude': lambda f: f is None }})
    r"""The alias type of the credit card number.
    
    Applies only to recurring contracts storing credit card details.
    """  
    bank: Optional[shared_bankaccount.BankAccount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bank'), 'exclude': lambda f: f is None }})  
    billing_address: Optional[shared_address.Address] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingAddress'), 'exclude': lambda f: f is None }})  
    card: Optional[shared_card.Card] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card'), 'exclude': lambda f: f is None }})  
    contract_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractTypes'), 'exclude': lambda f: f is None }})
    r"""Types of recurring contracts."""  
    creation_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when the recurring details were created."""  
    first_psp_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstPspReference'), 'exclude': lambda f: f is None }})
    r"""The `pspReference` of the first recurring payment that created the recurring detail."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""An optional descriptive name for this recurring detail."""  
    payment_method_variant: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethodVariant'), 'exclude': lambda f: f is None }})
    r"""The  type or sub-brand of a payment method used, e.g. Visa Debit, Visa Corporate, etc. For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/development-resources/paymentmethodvariant)."""  
    shopper_name: Optional[shared_name.Name] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shopperName'), 'exclude': lambda f: f is None }})  
    social_security_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('socialSecurityNumber'), 'exclude': lambda f: f is None }})
    r"""A shopper's social security number (only in countries where it is legal to collect)."""  
    token_details: Optional[shared_tokendetails.TokenDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokenDetails'), 'exclude': lambda f: f is None }})  
    