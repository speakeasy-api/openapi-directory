// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReferrerPolicyListEnum string

const (
	ReferrerPolicyListEnumNoReferrer                  ReferrerPolicyListEnum = "no-referrer"
	ReferrerPolicyListEnumNoReferrerWhenDowngrade     ReferrerPolicyListEnum = "no-referrer-when-downgrade"
	ReferrerPolicyListEnumOrigin                      ReferrerPolicyListEnum = "origin"
	ReferrerPolicyListEnumOriginWhenCrossOrigin       ReferrerPolicyListEnum = "origin-when-cross-origin"
	ReferrerPolicyListEnumSameOrigin                  ReferrerPolicyListEnum = "same-origin"
	ReferrerPolicyListEnumStrictOrigin                ReferrerPolicyListEnum = "strict-origin"
	ReferrerPolicyListEnumStrictOriginWhenCrossOrigin ReferrerPolicyListEnum = "strict-origin-when-cross-origin"
	ReferrerPolicyListEnumUnsafeURL                   ReferrerPolicyListEnum = "unsafe-url"
)

func (e ReferrerPolicyListEnum) ToPointer() *ReferrerPolicyListEnum {
	return &e
}

func (e *ReferrerPolicyListEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "no-referrer":
		fallthrough
	case "no-referrer-when-downgrade":
		fallthrough
	case "origin":
		fallthrough
	case "origin-when-cross-origin":
		fallthrough
	case "same-origin":
		fallthrough
	case "strict-origin":
		fallthrough
	case "strict-origin-when-cross-origin":
		fallthrough
	case "unsafe-url":
		*e = ReferrerPolicyListEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReferrerPolicyListEnum: %v", v)
	}
}
