// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum - The resource type for the transit gateway policy table association.
type AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum string

const (
	AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnumVpc                  AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum = "vpc"
	AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnumVpn                  AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum = "vpn"
	AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnumDirectConnectGateway AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum = "direct-connect-gateway"
	AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnumConnect              AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum = "connect"
	AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnumPeering              AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum = "peering"
	AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnumTgwPeering           AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum = "tgw-peering"
)

func (e AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum) ToPointer() *AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum {
	return &e
}

func (e *AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum: %v", v)
	}
}

// AssociateTransitGatewayPolicyTableResultAssociationStateEnum - The state of the transit gateway policy table association.
type AssociateTransitGatewayPolicyTableResultAssociationStateEnum string

const (
	AssociateTransitGatewayPolicyTableResultAssociationStateEnumAssociating    AssociateTransitGatewayPolicyTableResultAssociationStateEnum = "associating"
	AssociateTransitGatewayPolicyTableResultAssociationStateEnumAssociated     AssociateTransitGatewayPolicyTableResultAssociationStateEnum = "associated"
	AssociateTransitGatewayPolicyTableResultAssociationStateEnumDisassociating AssociateTransitGatewayPolicyTableResultAssociationStateEnum = "disassociating"
	AssociateTransitGatewayPolicyTableResultAssociationStateEnumDisassociated  AssociateTransitGatewayPolicyTableResultAssociationStateEnum = "disassociated"
)

func (e AssociateTransitGatewayPolicyTableResultAssociationStateEnum) ToPointer() *AssociateTransitGatewayPolicyTableResultAssociationStateEnum {
	return &e
}

func (e *AssociateTransitGatewayPolicyTableResultAssociationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		*e = AssociateTransitGatewayPolicyTableResultAssociationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateTransitGatewayPolicyTableResultAssociationStateEnum: %v", v)
	}
}

// AssociateTransitGatewayPolicyTableResultAssociation - Describes the association of a transit gateway and a transit gateway policy table.
type AssociateTransitGatewayPolicyTableResultAssociation struct {
	ResourceID                  *string
	ResourceType                *AssociateTransitGatewayPolicyTableResultAssociationResourceTypeEnum
	State                       *AssociateTransitGatewayPolicyTableResultAssociationStateEnum
	TransitGatewayAttachmentID  *string
	TransitGatewayPolicyTableID *string
}

// AssociateTransitGatewayPolicyTableResult - Success
type AssociateTransitGatewayPolicyTableResult struct {
	Association *AssociateTransitGatewayPolicyTableResultAssociation
}
