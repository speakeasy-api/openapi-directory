<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RemoteServerEntity - Create Remote Server
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RemoteServerEntity
{
    /**
     * Describes the authorized account
     * 
     * @var ?string $authAccountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('auth_account_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authAccountName = null;
    
    /**
     * Returns link to login with an Oauth provider
     * 
     * @var ?string $authSetupLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('auth_setup_link')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authSetupLink = null;
    
    /**
     * Either `in_setup` or `complete`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityAuthStatusEnum $authStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('auth_status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityAuthStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoteServerEntityAuthStatusEnum $authStatus = null;
    
    /**
     * Type of authentication method
     * 
     * @var ?string $authenticationMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('authentication_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authenticationMethod = null;
    
    /**
     * AWS Access Key.
     * 
     * @var ?string $awsAccessKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('aws_access_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $awsAccessKey = null;
    
    /**
     * Azure Blob Storage Account name
     * 
     * @var ?string $azureBlobStorageAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('azure_blob_storage_account')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $azureBlobStorageAccount = null;
    
    /**
     * Azure Blob Storage Container name
     * 
     * @var ?string $azureBlobStorageContainer
     */
	#[\JMS\Serializer\Annotation\SerializedName('azure_blob_storage_container')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $azureBlobStorageContainer = null;
    
    /**
     * Shared Access Signature (SAS) token
     * 
     * @var ?string $azureBlobStorageSasToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('azure_blob_storage_sas_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $azureBlobStorageSasToken = null;
    
    /**
     * Azure File Storage Account name
     * 
     * @var ?string $azureFilesStorageAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('azure_files_storage_account')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $azureFilesStorageAccount = null;
    
    /**
     * Shared Access Signature (SAS) token
     * 
     * @var ?string $azureFilesStorageSasToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('azure_files_storage_sas_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $azureFilesStorageSasToken = null;
    
    /**
     * Azure File Storage Share name
     * 
     * @var ?string $azureFilesStorageShareName
     */
	#[\JMS\Serializer\Annotation\SerializedName('azure_files_storage_share_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $azureFilesStorageShareName = null;
    
    /**
     * Backblaze B2 Cloud Storage Bucket name
     * 
     * @var ?string $backblazeB2Bucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('backblaze_b2_bucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $backblazeB2Bucket = null;
    
    /**
     * Backblaze B2 Cloud Storage S3 Endpoint
     * 
     * @var ?string $backblazeB2S3Endpoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('backblaze_b2_s3_endpoint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $backblazeB2S3Endpoint = null;
    
    /**
     * If true, this server has been disabled due to failures.  Make any change or set disabled to false to clear this flag.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * `true` if remote server only accepts connections from dedicated IPs
     * 
     * @var ?bool $enableDedicatedIps
     */
	#[\JMS\Serializer\Annotation\SerializedName('enable_dedicated_ips')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableDedicatedIps = null;
    
    /**
     * Filebase Access Key.
     * 
     * @var ?string $filebaseAccessKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('filebase_access_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filebaseAccessKey = null;
    
    /**
     * Filebase Bucket name
     * 
     * @var ?string $filebaseBucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('filebase_bucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filebaseBucket = null;
    
    /**
     * Files Agent API Token
     * 
     * @var ?string $filesAgentApiToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('files_agent_api_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filesAgentApiToken = null;
    
    /**
     * Local permissions for files agent. read_only, write_only, or read_write
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityFilesAgentPermissionSetEnum $filesAgentPermissionSet
     */
	#[\JMS\Serializer\Annotation\SerializedName('files_agent_permission_set')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityFilesAgentPermissionSetEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoteServerEntityFilesAgentPermissionSetEnum $filesAgentPermissionSet = null;
    
    /**
     * Agent local root path
     * 
     * @var ?string $filesAgentRoot
     */
	#[\JMS\Serializer\Annotation\SerializedName('files_agent_root')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filesAgentRoot = null;
    
    /**
     * Google Cloud Storage bucket name
     * 
     * @var ?string $googleCloudStorageBucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('google_cloud_storage_bucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $googleCloudStorageBucket = null;
    
    /**
     * Google Cloud Project ID
     * 
     * @var ?string $googleCloudStorageProjectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('google_cloud_storage_project_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $googleCloudStorageProjectId = null;
    
    /**
     * Hostname or IP address
     * 
     * @var ?string $hostname
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostname = null;
    
    /**
     * Remote server ID
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).
     * 
     * @var ?int $maxConnections
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_connections')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxConnections = null;
    
    /**
     * Internal name for your reference
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Either personal or business_other account types
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityOneDriveAccountTypeEnum $oneDriveAccountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('one_drive_account_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityOneDriveAccountTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoteServerEntityOneDriveAccountTypeEnum $oneDriveAccountType = null;
    
    /**
     * If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a sitewide setting which will force it to true.
     * 
     * @var ?bool $pinToSiteRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('pin_to_site_region')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $pinToSiteRegion = null;
    
    /**
     * If set, all communciations with this remote server are made through the provided region.
     * 
     * @var ?string $pinnedRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('pinned_region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pinnedRegion = null;
    
    /**
     * Port for remote server.  Not needed for S3.
     * 
     * @var ?int $port
     */
	#[\JMS\Serializer\Annotation\SerializedName('port')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $port = null;
    
    /**
     * The name of the container (top level directory) where files will sync.
     * 
     * @var ?string $rackspaceContainer
     */
	#[\JMS\Serializer\Annotation\SerializedName('rackspace_container')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rackspaceContainer = null;
    
    /**
     * Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/
     * 
     * @var ?string $rackspaceRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('rackspace_region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rackspaceRegion = null;
    
    /**
     * Rackspace username used to login to the Rackspace Cloud Control Panel.
     * 
     * @var ?string $rackspaceUsername
     */
	#[\JMS\Serializer\Annotation\SerializedName('rackspace_username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rackspaceUsername = null;
    
    /**
     * Initial home folder on remote server
     * 
     * @var ?string $remoteHomePath
     */
	#[\JMS\Serializer\Annotation\SerializedName('remote_home_path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $remoteHomePath = null;
    
    /**
     * S3 bucket name
     * 
     * @var ?string $s3Bucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('s3_bucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $s3Bucket = null;
    
    /**
     * S3-compatible Access Key.
     * 
     * @var ?string $s3CompatibleAccessKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('s3_compatible_access_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $s3CompatibleAccessKey = null;
    
    /**
     * S3-compatible Bucket name
     * 
     * @var ?string $s3CompatibleBucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('s3_compatible_bucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $s3CompatibleBucket = null;
    
    /**
     * S3-compatible endpoint
     * 
     * @var ?string $s3CompatibleEndpoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('s3_compatible_endpoint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $s3CompatibleEndpoint = null;
    
    /**
     * S3-compatible endpoint
     * 
     * @var ?string $s3CompatibleRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('s3_compatible_region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $s3CompatibleRegion = null;
    
    /**
     * S3 region
     * 
     * @var ?string $s3Region
     */
	#[\JMS\Serializer\Annotation\SerializedName('s3_region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $s3Region = null;
    
    /**
     * Remote server certificate
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityServerCertificateEnum $serverCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('server_certificate')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityServerCertificateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoteServerEntityServerCertificateEnum $serverCertificate = null;
    
    /**
     * Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts
     * 
     * @var ?string $serverHostKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('server_host_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serverHostKey = null;
    
    /**
     * Remote server type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityServerTypeEnum $serverType
     */
	#[\JMS\Serializer\Annotation\SerializedName('server_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RemoteServerEntityServerTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoteServerEntityServerTypeEnum $serverType = null;
    
    /**
     * Should we require SSL?
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoteServerEntitySslEnum $ssl
     */
	#[\JMS\Serializer\Annotation\SerializedName('ssl')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RemoteServerEntitySslEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoteServerEntitySslEnum $ssl = null;
    
    /**
     * Remote server username.  Not needed for S3 buckets.
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
    /**
     * Wasabi access key.
     * 
     * @var ?string $wasabiAccessKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('wasabi_access_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wasabiAccessKey = null;
    
    /**
     * Wasabi Bucket name
     * 
     * @var ?string $wasabiBucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('wasabi_bucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wasabiBucket = null;
    
    /**
     * Wasabi region
     * 
     * @var ?string $wasabiRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('wasabi_region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wasabiRegion = null;
    
	public function __construct()
	{
		$this->authAccountName = null;
		$this->authSetupLink = null;
		$this->authStatus = null;
		$this->authenticationMethod = null;
		$this->awsAccessKey = null;
		$this->azureBlobStorageAccount = null;
		$this->azureBlobStorageContainer = null;
		$this->azureBlobStorageSasToken = null;
		$this->azureFilesStorageAccount = null;
		$this->azureFilesStorageSasToken = null;
		$this->azureFilesStorageShareName = null;
		$this->backblazeB2Bucket = null;
		$this->backblazeB2S3Endpoint = null;
		$this->disabled = null;
		$this->enableDedicatedIps = null;
		$this->filebaseAccessKey = null;
		$this->filebaseBucket = null;
		$this->filesAgentApiToken = null;
		$this->filesAgentPermissionSet = null;
		$this->filesAgentRoot = null;
		$this->googleCloudStorageBucket = null;
		$this->googleCloudStorageProjectId = null;
		$this->hostname = null;
		$this->id = null;
		$this->maxConnections = null;
		$this->name = null;
		$this->oneDriveAccountType = null;
		$this->pinToSiteRegion = null;
		$this->pinnedRegion = null;
		$this->port = null;
		$this->rackspaceContainer = null;
		$this->rackspaceRegion = null;
		$this->rackspaceUsername = null;
		$this->remoteHomePath = null;
		$this->s3Bucket = null;
		$this->s3CompatibleAccessKey = null;
		$this->s3CompatibleBucket = null;
		$this->s3CompatibleEndpoint = null;
		$this->s3CompatibleRegion = null;
		$this->s3Region = null;
		$this->serverCertificate = null;
		$this->serverHostKey = null;
		$this->serverType = null;
		$this->ssl = null;
		$this->username = null;
		$this->wasabiAccessKey = null;
		$this->wasabiBucket = null;
		$this->wasabiRegion = null;
	}
}
