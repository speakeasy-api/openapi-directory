<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CircuitBreakers - Settings controlling the volume of requests, connections and retries to this backend service.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CircuitBreakers
{
    /**
     * A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". Range is approximately 10,000 years.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Duration $connectTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectTimeout')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Duration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Duration $connectTimeout = null;
    
    /**
     * The maximum number of connections to the backend service. If not specified, there is no limit. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
     * 
     * @var ?int $maxConnections
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxConnections')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxConnections = null;
    
    /**
     * The maximum number of pending requests allowed to the backend service. If not specified, there is no limit. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
     * 
     * @var ?int $maxPendingRequests
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxPendingRequests')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxPendingRequests = null;
    
    /**
     * The maximum number of parallel requests that allowed to the backend service. If not specified, there is no limit.
     * 
     * @var ?int $maxRequests
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxRequests')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRequests = null;
    
    /**
     * Maximum requests for a single connection to the backend service. This parameter is respected by both the HTTP/1.1 and HTTP/2 implementations. If not specified, there is no limit. Setting this parameter to 1 will effectively disable keep alive. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
     * 
     * @var ?int $maxRequestsPerConnection
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxRequestsPerConnection')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRequestsPerConnection = null;
    
    /**
     * The maximum number of parallel retries allowed to the backend cluster. If not specified, the default is 1. Not supported when the backend service is referenced by a URL map that is bound to target gRPC proxy that has validateForProxyless field set to true.
     * 
     * @var ?int $maxRetries
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxRetries')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRetries = null;
    
	public function __construct()
	{
		$this->connectTimeout = null;
		$this->maxConnections = null;
		$this->maxPendingRequests = null;
		$this->maxRequests = null;
		$this->maxRequestsPerConnection = null;
		$this->maxRetries = null;
	}
}
