// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CalendarEventsGetSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type CalendarEventsGetSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type CalendarEventsGetSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type CalendarEventsGetSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type CalendarEventsGetSecurity struct {
	Option1 *CalendarEventsGetSecurityOption1 `security:"option"`
	Option2 *CalendarEventsGetSecurityOption2 `security:"option"`
	Option3 *CalendarEventsGetSecurityOption3 `security:"option"`
	Option4 *CalendarEventsGetSecurityOption4 `security:"option"`
}

type CalendarEventsGetRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided).
	AlwaysIncludeEmail *bool `queryParam:"style=form,explode=true,name=alwaysIncludeEmail"`
	// Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
	CalendarID string `pathParam:"style=simple,explode=false,name=calendarId"`
	// Event identifier.
	EventID string `pathParam:"style=simple,explode=false,name=eventId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
	MaxAttendees *int64 `queryParam:"style=form,explode=true,name=maxAttendees"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Time zone used in the response. Optional. The default is the time zone of the calendar.
	TimeZone *string `queryParam:"style=form,explode=true,name=timeZone"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type CalendarEventsGetResponse struct {
	ContentType string
	// Successful response
	Event       *shared.Event
	StatusCode  int
	RawResponse *http.Response
}
