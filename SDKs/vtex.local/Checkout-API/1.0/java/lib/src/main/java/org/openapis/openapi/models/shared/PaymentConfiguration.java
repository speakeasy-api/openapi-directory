/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PaymentConfiguration - Payment Configuration object
 */
public class PaymentConfiguration {
    /**
     * By default (when `false`), on a multi-seller purchase is on the run, a simple intersection with installments options configured by every seller will be available. When `true`, this option allows a more complex but flexible installment option, since it considers max installments of every seller configuration, even if those don't match. Installment values \u200b\u200bmay not be equal in this case.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowInstallmentsMerge")
    public Boolean allowInstallmentsMerge;
    public PaymentConfiguration withAllowInstallmentsMerge(Boolean allowInstallmentsMerge) {
        this.allowInstallmentsMerge = allowInstallmentsMerge;
        return this;
    }
    
    /**
     * Determines whether pre-authorized payments require authentication
     */
    @JsonProperty("requiresAuthenticationForPreAuthorizedPaymentOption")
    public Boolean requiresAuthenticationForPreAuthorizedPaymentOption;
    public PaymentConfiguration withRequiresAuthenticationForPreAuthorizedPaymentOption(Boolean requiresAuthenticationForPreAuthorizedPaymentOption) {
        this.requiresAuthenticationForPreAuthorizedPaymentOption = requiresAuthenticationForPreAuthorizedPaymentOption;
        return this;
    }
    
}
