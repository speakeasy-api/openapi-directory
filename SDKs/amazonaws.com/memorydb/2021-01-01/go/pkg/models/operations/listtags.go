// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListTagsXAmzTargetEnum
type ListTagsXAmzTargetEnum string

const (
	ListTagsXAmzTargetEnumAmazonMemoryDbListTags ListTagsXAmzTargetEnum = "AmazonMemoryDB.ListTags"
)

func (e *ListTagsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonMemoryDB.ListTags":
		*e = ListTagsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTagsXAmzTargetEnum: %s", s)
	}
}

type ListTagsHeaders struct {
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListTagsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListTagsRequest struct {
	Headers ListTagsHeaders
	Request shared.ListTagsRequest `request:"mediaType=application/json"`
}

type ListTagsResponse struct {
	// ACLNotFoundFault
	ACLNotFoundFault interface{}
	// ClusterNotFoundFault
	ClusterNotFoundFault interface{}
	ContentType          string
	// InvalidARNFault
	InvalidARNFault interface{}
	// InvalidClusterStateFault
	InvalidClusterStateFault interface{}
	// Success
	ListTagsResponse *shared.ListTagsResponse
	// ParameterGroupNotFoundFault
	ParameterGroupNotFoundFault interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceLinkedRoleNotFoundFault
	ServiceLinkedRoleNotFoundFault interface{}
	// SnapshotNotFoundFault
	SnapshotNotFoundFault interface{}
	// SubnetGroupNotFoundFault
	SubnetGroupNotFoundFault interface{}
	// UserNotFoundFault
	UserNotFoundFault interface{}
}
