/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2BigQueryTable } from "./googleprivacydlpv2bigquerytable";
import { GooglePrivacyDlpV2CategoricalStatsResult } from "./googleprivacydlpv2categoricalstatsresult";
import { GooglePrivacyDlpV2DeltaPresenceEstimationResult } from "./googleprivacydlpv2deltapresenceestimationresult";
import { GooglePrivacyDlpV2KAnonymityResult } from "./googleprivacydlpv2kanonymityresult";
import { GooglePrivacyDlpV2KMapEstimationResult } from "./googleprivacydlpv2kmapestimationresult";
import { GooglePrivacyDlpV2LDiversityResult } from "./googleprivacydlpv2ldiversityresult";
import { GooglePrivacyDlpV2NumericalStatsResult } from "./googleprivacydlpv2numericalstatsresult";
import { GooglePrivacyDlpV2PrivacyMetric } from "./googleprivacydlpv2privacymetric";
import { GooglePrivacyDlpV2RequestedRiskAnalysisOptions } from "./googleprivacydlpv2requestedriskanalysisoptions";
import { Expose, Type } from "class-transformer";

/**
 * Result of a risk analysis operation request.
 */
export class GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails extends SpeakeasyBase {
  /**
   * Result of the categorical stats computation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoricalStatsResult" })
  @Type(() => GooglePrivacyDlpV2CategoricalStatsResult)
  categoricalStatsResult?: GooglePrivacyDlpV2CategoricalStatsResult;

  /**
   * Result of the Î´-presence computation. Note that these results are an estimation, not exact values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deltaPresenceEstimationResult" })
  @Type(() => GooglePrivacyDlpV2DeltaPresenceEstimationResult)
  deltaPresenceEstimationResult?: GooglePrivacyDlpV2DeltaPresenceEstimationResult;

  /**
   * Result of the k-anonymity computation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kAnonymityResult" })
  @Type(() => GooglePrivacyDlpV2KAnonymityResult)
  kAnonymityResult?: GooglePrivacyDlpV2KAnonymityResult;

  /**
   * Result of the reidentifiability analysis. Note that these results are an estimation, not exact values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kMapEstimationResult" })
  @Type(() => GooglePrivacyDlpV2KMapEstimationResult)
  kMapEstimationResult?: GooglePrivacyDlpV2KMapEstimationResult;

  /**
   * Result of the l-diversity computation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lDiversityResult" })
  @Type(() => GooglePrivacyDlpV2LDiversityResult)
  lDiversityResult?: GooglePrivacyDlpV2LDiversityResult;

  /**
   * Result of the numerical stats computation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numericalStatsResult" })
  @Type(() => GooglePrivacyDlpV2NumericalStatsResult)
  numericalStatsResult?: GooglePrivacyDlpV2NumericalStatsResult;

  /**
   * Risk analysis options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedOptions" })
  @Type(() => GooglePrivacyDlpV2RequestedRiskAnalysisOptions)
  requestedOptions?: GooglePrivacyDlpV2RequestedRiskAnalysisOptions;

  /**
   * Privacy metric to compute for reidentification risk analysis.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedPrivacyMetric" })
  @Type(() => GooglePrivacyDlpV2PrivacyMetric)
  requestedPrivacyMetric?: GooglePrivacyDlpV2PrivacyMetric;

  /**
   * Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedSourceTable" })
  @Type(() => GooglePrivacyDlpV2BigQueryTable)
  requestedSourceTable?: GooglePrivacyDlpV2BigQueryTable;
}
