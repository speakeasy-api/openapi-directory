/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CircuitCircuitTermination } from "./circuitcircuittermination";
import { NestedCircuitType } from "./nestedcircuittype";
import { NestedProvider } from "./nestedprovider";
import { NestedTenant } from "./nestedtenant";
import { Expose, Transform, Type } from "class-transformer";

export enum CircuitStatusLabelEnum {
  Planned = "Planned",
  Provisioning = "Provisioning",
  Active = "Active",
  Offline = "Offline",
  Deprovisioning = "Deprovisioning",
  Decommissioned = "Decommissioned",
}

export enum CircuitStatusValueEnum {
  Planned = "planned",
  Provisioning = "provisioning",
  Active = "active",
  Offline = "offline",
  Deprovisioning = "deprovisioning",
  Decommissioned = "decommissioned",
}

export class CircuitStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: CircuitStatusLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: CircuitStatusValueEnum;
}

export class Circuit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cid" })
  cid: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commit_rate" })
  commitRate?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "install_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  installDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "provider" })
  @Type(() => NestedProvider)
  provider: NestedProvider;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => CircuitStatus)
  status?: CircuitStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  @Type(() => NestedTenant)
  tenant?: NestedTenant;

  @SpeakeasyMetadata()
  @Expose({ name: "termination_a" })
  @Type(() => CircuitCircuitTermination)
  terminationA?: CircuitCircuitTermination;

  @SpeakeasyMetadata()
  @Expose({ name: "termination_z" })
  @Type(() => CircuitCircuitTermination)
  terminationZ?: CircuitCircuitTermination;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => NestedCircuitType)
  type: NestedCircuitType;
}
