// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionStateEnum string

const (
	ConnectionStateEnumOrdering  ConnectionStateEnum = "ordering"
	ConnectionStateEnumRequested ConnectionStateEnum = "requested"
	ConnectionStateEnumPending   ConnectionStateEnum = "pending"
	ConnectionStateEnumAvailable ConnectionStateEnum = "available"
	ConnectionStateEnumDown      ConnectionStateEnum = "down"
	ConnectionStateEnumDeleting  ConnectionStateEnum = "deleting"
	ConnectionStateEnumDeleted   ConnectionStateEnum = "deleted"
	ConnectionStateEnumRejected  ConnectionStateEnum = "rejected"
	ConnectionStateEnumUnknown   ConnectionStateEnum = "unknown"
)

func (e ConnectionStateEnum) ToPointer() *ConnectionStateEnum {
	return &e
}

func (e *ConnectionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ordering":
		fallthrough
	case "requested":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "down":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "rejected":
		fallthrough
	case "unknown":
		*e = ConnectionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionStateEnum: %v", v)
	}
}
