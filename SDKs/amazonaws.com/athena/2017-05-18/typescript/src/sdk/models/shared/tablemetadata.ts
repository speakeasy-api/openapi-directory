/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Column } from "./column";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains metadata for a table.
 */
export class TableMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Column })
  @Expose({ name: "Columns" })
  @Type(() => Column)
  columns?: Column[];

  @SpeakeasyMetadata()
  @Expose({ name: "CreateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastAccessTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAccessTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Parameters" })
  parameters?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: Column })
  @Expose({ name: "PartitionKeys" })
  @Type(() => Column)
  partitionKeys?: Column[];

  @SpeakeasyMetadata()
  @Expose({ name: "TableType" })
  tableType?: string;
}
