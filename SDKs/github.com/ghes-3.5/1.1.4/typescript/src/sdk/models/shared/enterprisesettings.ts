/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class EnterpriseSettingsEnterpriseAvatar extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}

export class EnterpriseSettingsEnterpriseCas extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class EnterpriseSettingsEnterpriseCollectd extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "encryption" })
  encryption?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "server" })
  server?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

export class EnterpriseSettingsEnterpriseCustomer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "public_key_data" })
  publicKeyData?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "secret_key_data" })
  secretKeyData?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;
}

export class EnterpriseSettingsEnterpriseGithubOauth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "client_secret" })
  clientSecret?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "organization_name" })
  organizationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "organization_team" })
  organizationTeam?: string;
}

export class EnterpriseSettingsEnterpriseGithubSsl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cert" })
  cert?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;
}

export class EnterpriseSettingsEnterpriseLdapProfile extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mail" })
  mail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}

export class EnterpriseSettingsEnterpriseLdapReconciliation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "org" })
  org?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}

export class EnterpriseSettingsEnterpriseLdap extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "admin_group" })
  adminGroup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "base" })
  base?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "bind_dn" })
  bindDn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  host?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "posix_support" })
  posixSupport?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "profile" })
  @Type(() => EnterpriseSettingsEnterpriseLdapProfile)
  profile?: EnterpriseSettingsEnterpriseLdapProfile;

  @SpeakeasyMetadata()
  @Expose({ name: "reconciliation" })
  @Type(() => EnterpriseSettingsEnterpriseLdapReconciliation)
  reconciliation?: EnterpriseSettingsEnterpriseLdapReconciliation;

  @SpeakeasyMetadata()
  @Expose({ name: "recursive_group_search" })
  recursiveGroupSearch?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "search_strategy" })
  searchStrategy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sync_enabled" })
  syncEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "team_sync_interval" })
  teamSyncInterval?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_groups" })
  userGroups?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "user_sync_emails" })
  userSyncEmails?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "user_sync_interval" })
  userSyncInterval?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "user_sync_keys" })
  userSyncKeys?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "virtual_attribute_enabled" })
  virtualAttributeEnabled?: boolean;
}

export class EnterpriseSettingsEnterpriseLicense extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cluster_support" })
  clusterSupport?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "evaluation" })
  evaluation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "expire_at" })
  expireAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "perpetual" })
  perpetual?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "seats" })
  seats?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ssh_allowed" })
  sshAllowed?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "support_key" })
  supportKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unlimited_seating" })
  unlimitedSeating?: boolean;
}

export class EnterpriseSettingsEnterpriseMapping extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "basemap" })
  basemap?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "tileserver" })
  tileserver?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;
}

export class EnterpriseSettingsEnterpriseNtp extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "primary_server" })
  primaryServer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "secondary_server" })
  secondaryServer?: string;
}

export class EnterpriseSettingsEnterprisePages extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

export class EnterpriseSettingsEnterpriseSaml extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "certificate" })
  certificate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "certificate_path" })
  certificatePath?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "disable_admin_demote" })
  disableAdminDemote?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "idp_initiated_sso" })
  idpInitiatedSso?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "issuer" })
  issuer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sso_url" })
  ssoUrl?: string;
}

export class EnterpriseSettingsEnterpriseSmtp extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  authentication?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "discard-to-noreply-address" })
  discardToNoreplyAddress?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enable_starttls_auto" })
  enableStarttlsAuto?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "noreply_address" })
  noreplyAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "support_address" })
  supportAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "support_address_type" })
  supportAddressType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

export class EnterpriseSettingsEnterpriseSnmp extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "community" })
  community?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

export class EnterpriseSettingsEnterpriseSyslog extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "protocol_name" })
  protocolName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "server" })
  server?: string;
}

export class EnterpriseSettingsEnterprise extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "admin_password" })
  adminPassword?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assets" })
  assets?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "auth_mode" })
  authMode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "avatar" })
  @Type(() => EnterpriseSettingsEnterpriseAvatar)
  avatar?: EnterpriseSettingsEnterpriseAvatar;

  @SpeakeasyMetadata()
  @Expose({ name: "cas" })
  @Type(() => EnterpriseSettingsEnterpriseCas)
  cas?: EnterpriseSettingsEnterpriseCas;

  @SpeakeasyMetadata()
  @Expose({ name: "collectd" })
  @Type(() => EnterpriseSettingsEnterpriseCollectd)
  collectd?: EnterpriseSettingsEnterpriseCollectd;

  @SpeakeasyMetadata()
  @Expose({ name: "configuration_id" })
  configurationId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "configuration_run_count" })
  configurationRunCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "customer" })
  @Type(() => EnterpriseSettingsEnterpriseCustomer)
  customer?: EnterpriseSettingsEnterpriseCustomer;

  @SpeakeasyMetadata()
  @Expose({ name: "expire_sessions" })
  expireSessions?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "github_hostname" })
  githubHostname?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "github_oauth" })
  @Type(() => EnterpriseSettingsEnterpriseGithubOauth)
  githubOauth?: EnterpriseSettingsEnterpriseGithubOauth;

  @SpeakeasyMetadata()
  @Expose({ name: "github_ssl" })
  @Type(() => EnterpriseSettingsEnterpriseGithubSsl)
  githubSsl?: EnterpriseSettingsEnterpriseGithubSsl;

  @SpeakeasyMetadata()
  @Expose({ name: "http_proxy" })
  httpProxy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "identicons_host" })
  identiconsHost?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ldap" })
  @Type(() => EnterpriseSettingsEnterpriseLdap)
  ldap?: EnterpriseSettingsEnterpriseLdap;

  @SpeakeasyMetadata()
  @Expose({ name: "license" })
  @Type(() => EnterpriseSettingsEnterpriseLicense)
  license?: EnterpriseSettingsEnterpriseLicense;

  @SpeakeasyMetadata()
  @Expose({ name: "load_balancer" })
  loadBalancer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mapping" })
  @Type(() => EnterpriseSettingsEnterpriseMapping)
  mapping?: EnterpriseSettingsEnterpriseMapping;

  @SpeakeasyMetadata()
  @Expose({ name: "ntp" })
  @Type(() => EnterpriseSettingsEnterpriseNtp)
  ntp?: EnterpriseSettingsEnterpriseNtp;

  @SpeakeasyMetadata()
  @Expose({ name: "pages" })
  @Type(() => EnterpriseSettingsEnterprisePages)
  pages?: EnterpriseSettingsEnterprisePages;

  @SpeakeasyMetadata()
  @Expose({ name: "private_mode" })
  privateMode?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "public_pages" })
  publicPages?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "saml" })
  @Type(() => EnterpriseSettingsEnterpriseSaml)
  saml?: EnterpriseSettingsEnterpriseSaml;

  @SpeakeasyMetadata()
  @Expose({ name: "signup_enabled" })
  signupEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "smtp" })
  @Type(() => EnterpriseSettingsEnterpriseSmtp)
  smtp?: EnterpriseSettingsEnterpriseSmtp;

  @SpeakeasyMetadata()
  @Expose({ name: "snmp" })
  @Type(() => EnterpriseSettingsEnterpriseSnmp)
  snmp?: EnterpriseSettingsEnterpriseSnmp;

  @SpeakeasyMetadata()
  @Expose({ name: "subdomain_isolation" })
  subdomainIsolation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "syslog" })
  @Type(() => EnterpriseSettingsEnterpriseSyslog)
  syslog?: EnterpriseSettingsEnterpriseSyslog;

  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;
}

/**
 * Response
 */
export class EnterpriseSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enterprise" })
  @Type(() => EnterpriseSettingsEnterprise)
  enterprise?: EnterpriseSettingsEnterprise;

  @SpeakeasyMetadata()
  @Expose({ name: "run_list" })
  runList?: string[];
}
