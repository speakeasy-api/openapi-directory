/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class FindPlacesFindPlacesGetResponse {
    
    public String contentType;

    public FindPlacesFindPlacesGetResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Successful Response
     */
    
    public org.openapis.openapi.models.shared.FindPlacesModel[] findPlacesModels;

    public FindPlacesFindPlacesGetResponse withFindPlacesModels(org.openapis.openapi.models.shared.FindPlacesModel[] findPlacesModels) {
        this.findPlacesModels = findPlacesModels;
        return this;
    }
    
    /**
     * Error in passed parameter.
     */
    
    public org.openapis.openapi.models.shared.GeneralRequestError generalRequestError;

    public FindPlacesFindPlacesGetResponse withGeneralRequestError(org.openapis.openapi.models.shared.GeneralRequestError generalRequestError) {
        this.generalRequestError = generalRequestError;
        return this;
    }
    
    /**
     * Validation Error
     */
    
    public org.openapis.openapi.models.shared.HTTPValidationError httpValidationError;

    public FindPlacesFindPlacesGetResponse withHTTPValidationError(org.openapis.openapi.models.shared.HTTPValidationError httpValidationError) {
        this.httpValidationError = httpValidationError;
        return this;
    }
    
    
    public Integer statusCode;

    public FindPlacesFindPlacesGetResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public FindPlacesFindPlacesGetResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public FindPlacesFindPlacesGetResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
