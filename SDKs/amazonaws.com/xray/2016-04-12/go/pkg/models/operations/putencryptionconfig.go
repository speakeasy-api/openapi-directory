// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PutEncryptionConfigHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// PutEncryptionConfigRequestBodyTypeEnum - The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set to <code>NONE</code> for default encryption.
type PutEncryptionConfigRequestBodyTypeEnum string

const (
	PutEncryptionConfigRequestBodyTypeEnumNone PutEncryptionConfigRequestBodyTypeEnum = "NONE"
	PutEncryptionConfigRequestBodyTypeEnumKms  PutEncryptionConfigRequestBodyTypeEnum = "KMS"
)

func (e *PutEncryptionConfigRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NONE":
		fallthrough
	case "KMS":
		*e = PutEncryptionConfigRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutEncryptionConfigRequestBodyTypeEnum: %s", s)
	}
}

type PutEncryptionConfigRequestBody struct {
	// <p>An Amazon Web Services KMS key in one of the following formats:</p> <ul> <li> <p> <b>Alias</b> - The name of the key. For example, <code>alias/MyKey</code>.</p> </li> <li> <p> <b>Key ID</b> - The KMS key ID of the key. For example, <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Amazon Web Services X-Ray does not support asymmetric KMS keys.</p> </li> <li> <p> <b>ARN</b> - The full Amazon Resource Name of the key ID or alias. For example, <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Use this format to specify a key in a different account.</p> </li> </ul> <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>
	KeyID *string `json:"KeyId,omitempty"`
	// The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set to <code>NONE</code> for default encryption.
	Type PutEncryptionConfigRequestBodyTypeEnum `json:"Type"`
}

type PutEncryptionConfigRequest struct {
	Headers PutEncryptionConfigHeaders
	Request PutEncryptionConfigRequestBody `request:"mediaType=application/json"`
}

type PutEncryptionConfigResponse struct {
	ContentType string
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	PutEncryptionConfigResult *shared.PutEncryptionConfigResult
	StatusCode                int
	RawResponse               *http.Response
	// ThrottledException
	ThrottledException interface{}
}
