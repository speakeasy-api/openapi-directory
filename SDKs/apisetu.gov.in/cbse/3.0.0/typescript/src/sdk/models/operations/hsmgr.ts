/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class HsmgrSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-APISETU-APIKEY",
  })
  apiKey: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-APISETU-CLIENTID",
  })
  clientId: string;
}

export class HsmgrRequestBodyCertificateParameters extends SpeakeasyBase {
  /**
   * Full name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FullName" })
  fullName: string;

  /**
   * Roll No
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rollno" })
  rollno: string;

  /**
   * Year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "year" })
  year: string;
}

/**
 * The format of the certificate in response.
 */
export enum HsmgrRequestBodyFormatEnum {
  Pdf = "pdf",
}

/**
 * Request format
 */
export class HsmgrRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "certificateParameters" })
  @Type(() => HsmgrRequestBodyCertificateParameters)
  certificateParameters?: HsmgrRequestBodyCertificateParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "consentArtifact" })
  @Type(() => shared.ConsentArtifactSchema)
  consentArtifact?: shared.ConsentArtifactSchema;

  /**
   * The format of the certificate in response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format: HsmgrRequestBodyFormatEnum;

  /**
   * A unique transaction id for this request in UUID format. It is used for tracking the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "txnId" })
  txnId: string;
}

export enum Hsmgr504ApplicationJSONErrorEnum {
  GatewayTimeout = "gateway_timeout",
}

export enum Hsmgr504ApplicationJSONErrorDescriptionEnum {
  PublisherServiceDidNotRespondInTime = "Publisher service did not respond in time",
}

/**
 * Gateway timeout
 */
export class Hsmgr504ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: Hsmgr504ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: Hsmgr504ApplicationJSONErrorDescriptionEnum;
}

export enum Hsmgr503ApplicationJSONErrorEnum {
  ServiceUnavailable = "service_unavailable",
}

export enum Hsmgr503ApplicationJSONErrorDescriptionEnum {
  PublisherServiceIsTemporarilyUnavailable = "Publisher service is temporarily unavailable",
}

/**
 * Service unavailable
 */
export class Hsmgr503ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: Hsmgr503ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: Hsmgr503ApplicationJSONErrorDescriptionEnum;
}

export enum Hsmgr502ApplicationJSONErrorEnum {
  BadGatewy = "bad_gatewy",
}

export enum Hsmgr502ApplicationJSONErrorDescriptionEnum {
  PublisherServiceReturnedAnInvalidResponse = "Publisher service returned an invalid response",
}

/**
 * Bad gateway
 */
export class Hsmgr502ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: Hsmgr502ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: Hsmgr502ApplicationJSONErrorDescriptionEnum;
}

export enum Hsmgr500ApplicationJSONErrorEnum {
  InternalServerError = "internal_server_error",
}

export enum Hsmgr500ApplicationJSONErrorDescriptionEnum {
  InternalServerError = "Internal server error",
}

/**
 * Internal server error
 */
export class Hsmgr500ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: Hsmgr500ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: Hsmgr500ApplicationJSONErrorDescriptionEnum;
}

export enum Hsmgr404ApplicationJSONErrorEnum {
  RecordNotFound = "record_not_found",
  UrlNotFound = "url_not_found",
}

export enum Hsmgr404ApplicationJSONErrorDescriptionEnum {
  NoRecordFound = "No record found",
  YourAPIUrlOrPathIsIncorrect = "Your API url or path is incorrect",
}

/**
 * No record found
 */
export class Hsmgr404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: Hsmgr404ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: Hsmgr404ApplicationJSONErrorDescriptionEnum;
}

export enum Hsmgr401ApplicationJSONErrorEnum {
  InvalidAuthentication = "invalid_authentication",
  InvalidAuthorization = "invalid_authorization",
}

export enum Hsmgr401ApplicationJSONErrorDescriptionEnum {
  AuthenticationFailed = "Authentication failed",
  YouAreNotAuthorizedToUseThisAPI = "You are not authorized to use this API",
}

/**
 * Unauthorized access
 */
export class Hsmgr401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: Hsmgr401ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: Hsmgr401ApplicationJSONErrorDescriptionEnum;
}

export enum Hsmgr400ApplicationJSONErrorEnum {
  MissingParameter = "missing_parameter",
  InvalidParameter = "invalid_parameter",
  InvalidFormat = "invalid_format",
  InvalidTxnid = "invalid_txnid",
  InvalidConsentid = "invalid_consentid",
}

export enum Hsmgr400ApplicationJSONErrorDescriptionEnum {
  PleaseProvideAllMandatoryParameters = "Please provide all mandatory parameters",
  BadRequest = "Bad request",
  TheFormatParameterIsInvalid = "The format parameter is invalid",
  TheTxnIdParameterMustBeInUUIDFormat = "The txnId parameter must be in UUID format",
  TheConsentIdParameterMustBeInUUIDFormat = "The consentId parameter must be in UUID format",
}

/**
 * Bad request
 */
export class Hsmgr400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: Hsmgr400ApplicationJSONErrorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDescription" })
  errorDescription?: Hsmgr400ApplicationJSONErrorDescriptionEnum;
}

export class HsmgrResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad request
   */
  @SpeakeasyMetadata()
  hsmgr400ApplicationJSONObject?: Hsmgr400ApplicationJSON;

  /**
   * Unauthorized access
   */
  @SpeakeasyMetadata()
  hsmgr401ApplicationJSONObject?: Hsmgr401ApplicationJSON;

  /**
   * No record found
   */
  @SpeakeasyMetadata()
  hsmgr404ApplicationJSONObject?: Hsmgr404ApplicationJSON;

  /**
   * Internal server error
   */
  @SpeakeasyMetadata()
  hsmgr500ApplicationJSONObject?: Hsmgr500ApplicationJSON;

  /**
   * Bad gateway
   */
  @SpeakeasyMetadata()
  hsmgr502ApplicationJSONObject?: Hsmgr502ApplicationJSON;

  /**
   * Service unavailable
   */
  @SpeakeasyMetadata()
  hsmgr503ApplicationJSONObject?: Hsmgr503ApplicationJSON;

  /**
   * Gateway timeout
   */
  @SpeakeasyMetadata()
  hsmgr504ApplicationJSONObject?: Hsmgr504ApplicationJSON;
}
