/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetNetworkApplianceSsidRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=number",
  })
  number: string;
}

export class GetNetworkApplianceSsid200ApplicationJSONRadiusServers extends SpeakeasyBase {
  /**
   * The IP address of your RADIUS server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  host?: string;

  /**
   * The UDP port your RADIUS servers listens on for Access-requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: number;
}

/**
 * Successful operation
 */
export class GetNetworkApplianceSsid200ApplicationJSON extends SpeakeasyBase {
  /**
   * The association control method for the SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authMode" })
  authMode?: string;

  /**
   * The VLAN ID of the VLAN associated to this SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultVlanId" })
  defaultVlanId?: number;

  /**
   * Whether or not the SSID is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * The psk encryption mode for the SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionMode" })
  encryptionMode?: string;

  /**
   * The name of the SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The number of the SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: number;

  /**
   * The RADIUS 802.1x servers to be used for authentication.
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkApplianceSsid200ApplicationJSONRadiusServers,
  })
  @Expose({ name: "radiusServers" })
  @Type(() => GetNetworkApplianceSsid200ApplicationJSONRadiusServers)
  radiusServers?: GetNetworkApplianceSsid200ApplicationJSONRadiusServers[];

  /**
   * Boolean indicating whether the MX should advertise or hide this SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visible" })
  visible?: boolean;

  /**
   * WPA encryption mode for the SSID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wpaEncryptionMode" })
  wpaEncryptionMode?: string;
}

export class GetNetworkApplianceSsidResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getNetworkApplianceSsid200ApplicationJSONObject?: GetNetworkApplianceSsid200ApplicationJSON;
}
