// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SetMuteRequestMuteEnum - Required. The desired state of the Mute.
type SetMuteRequestMuteEnum string

const (
	SetMuteRequestMuteEnumMuteUnspecified SetMuteRequestMuteEnum = "MUTE_UNSPECIFIED"
	SetMuteRequestMuteEnumMuted           SetMuteRequestMuteEnum = "MUTED"
	SetMuteRequestMuteEnumUnmuted         SetMuteRequestMuteEnum = "UNMUTED"
	SetMuteRequestMuteEnumUndefined       SetMuteRequestMuteEnum = "UNDEFINED"
)

func (e *SetMuteRequestMuteEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MUTE_UNSPECIFIED":
		fallthrough
	case "MUTED":
		fallthrough
	case "UNMUTED":
		fallthrough
	case "UNDEFINED":
		*e = SetMuteRequestMuteEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SetMuteRequestMuteEnum: %s", s)
	}
}

// SetMuteRequest - Request message for updating a finding's mute status.
type SetMuteRequest struct {
	// Required. The desired state of the Mute.
	Mute *SetMuteRequestMuteEnum `json:"mute,omitempty"`
}
