"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountTransfer = exports.AccountTransferTypeEnum = exports.AccountTransferStatusEnum = exports.AccountTransferNetworkEnum = exports.AccountTransferCurrencyEnum = exports.AccountTransferTransferCancellation = exports.AccountTransferTransferApproval = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.
 */
var AccountTransferTransferApproval = /** @class */ (function (_super) {
    __extends(AccountTransferTransferApproval, _super);
    function AccountTransferTransferApproval() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approved_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], AccountTransferTransferApproval.prototype, "approvedAt", void 0);
    return AccountTransferTransferApproval;
}(utils_1.SpeakeasyBase));
exports.AccountTransferTransferApproval = AccountTransferTransferApproval;
/**
 * If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.
 */
var AccountTransferTransferCancellation = /** @class */ (function (_super) {
    __extends(AccountTransferTransferCancellation, _super);
    function AccountTransferTransferCancellation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "canceled_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], AccountTransferTransferCancellation.prototype, "canceledAt", void 0);
    return AccountTransferTransferCancellation;
}(utils_1.SpeakeasyBase));
exports.AccountTransferTransferCancellation = AccountTransferTransferCancellation;
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
 */
var AccountTransferCurrencyEnum;
(function (AccountTransferCurrencyEnum) {
    AccountTransferCurrencyEnum["Cad"] = "CAD";
    AccountTransferCurrencyEnum["Chf"] = "CHF";
    AccountTransferCurrencyEnum["Eur"] = "EUR";
    AccountTransferCurrencyEnum["Gbp"] = "GBP";
    AccountTransferCurrencyEnum["Jpy"] = "JPY";
    AccountTransferCurrencyEnum["Usd"] = "USD";
})(AccountTransferCurrencyEnum = exports.AccountTransferCurrencyEnum || (exports.AccountTransferCurrencyEnum = {}));
/**
 * The transfer's network.
 */
var AccountTransferNetworkEnum;
(function (AccountTransferNetworkEnum) {
    AccountTransferNetworkEnum["Account"] = "account";
})(AccountTransferNetworkEnum = exports.AccountTransferNetworkEnum || (exports.AccountTransferNetworkEnum = {}));
/**
 * The lifecycle status of the transfer.
 */
var AccountTransferStatusEnum;
(function (AccountTransferStatusEnum) {
    AccountTransferStatusEnum["PendingSubmission"] = "pending_submission";
    AccountTransferStatusEnum["PendingApproval"] = "pending_approval";
    AccountTransferStatusEnum["Canceled"] = "canceled";
    AccountTransferStatusEnum["RequiresAttention"] = "requires_attention";
    AccountTransferStatusEnum["FlaggedByOperator"] = "flagged_by_operator";
    AccountTransferStatusEnum["Complete"] = "complete";
})(AccountTransferStatusEnum = exports.AccountTransferStatusEnum || (exports.AccountTransferStatusEnum = {}));
/**
 * A constant representing the object's type. For this resource it will always be `account_transfer`.
 */
var AccountTransferTypeEnum;
(function (AccountTransferTypeEnum) {
    AccountTransferTypeEnum["AccountTransfer"] = "account_transfer";
})(AccountTransferTypeEnum = exports.AccountTransferTypeEnum || (exports.AccountTransferTypeEnum = {}));
/**
 * Account transfers move funds between your own accounts at Increase.
 */
var AccountTransfer = /** @class */ (function (_super) {
    __extends(AccountTransfer, _super);
    function AccountTransfer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_id" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], AccountTransfer.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approval" }),
        (0, class_transformer_1.Type)(function () { return AccountTransferTransferApproval; }),
        __metadata("design:type", AccountTransferTransferApproval)
    ], AccountTransfer.prototype, "approval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cancellation" }),
        (0, class_transformer_1.Type)(function () { return AccountTransferTransferCancellation; }),
        __metadata("design:type", AccountTransferTransferCancellation)
    ], AccountTransfer.prototype, "cancellation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], AccountTransfer.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destination_account_id" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "destinationAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destination_transaction_id" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "destinationTransactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "network", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "template_id" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "templateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "transactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], AccountTransfer.prototype, "type", void 0);
    return AccountTransfer;
}(utils_1.SpeakeasyBase));
exports.AccountTransfer = AccountTransfer;
