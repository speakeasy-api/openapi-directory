/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MountSnapshotJobConfigV1 - Configuration for the Live Mount request.
 */
public class MountSnapshotJobConfigV1 {
    /**
     * The job creates a datastore that contains the VMDK, but does not create the corresponding virtual machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createDatastoreOnly")
    public Boolean createDatastoreOnly;

    public MountSnapshotJobConfigV1 withCreateDatastoreOnly(Boolean createDatastoreOnly) {
        this.createDatastoreOnly = createDatastoreOnly;
        return this;
    }
    
    /**
     * Obsolete parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataStoreName")
    public String dataStoreName;

    public MountSnapshotJobConfigV1 withDataStoreName(String dataStoreName) {
        this.dataStoreName = dataStoreName;
        return this;
    }
    
    /**
     * Sets the state of the network interfaces when the virtual machine is mounted or exported. Use 'false' to enable the network interfaces. Use 'true' to disable the network interfaces. Disabling the interfaces can prevent IP conflicts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableNetwork")
    public Boolean disableNetwork;

    public MountSnapshotJobConfigV1 withDisableNetwork(Boolean disableNetwork) {
        this.disableNetwork = disableNetwork;
        return this;
    }
    
    /**
     * ID of the ESXi host to mount the new virtual machine on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostId")
    public String hostId;

    public MountSnapshotJobConfigV1 withHostId(String hostId) {
        this.hostId = hostId;
        return this;
    }
    
    /**
     * Determines whether the MAC addresses of the network interfaces on the source virtual machine are assigned to the new virtual machine. Set to 'true' to assign the original MAC addresses to the new virtual machine. Set to 'false' to assign new MAC addresses. The default is 'false'. When removeNetworkDevices is set to true, this property is ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keepMacAddresses")
    public Boolean keepMacAddresses;

    public MountSnapshotJobConfigV1 withKeepMacAddresses(Boolean keepMacAddresses) {
        this.keepMacAddresses = keepMacAddresses;
        return this;
    }
    
    /**
     * Determines whether the virtual machine should be powered on after mount or export. Set to 'true' to power on the virtual machine. Set to 'false' to mount or export the virtual machine but not power it on. The default is 'true'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("powerOn")
    public Boolean powerOn;

    public MountSnapshotJobConfigV1 withPowerOn(Boolean powerOn) {
        this.powerOn = powerOn;
        return this;
    }
    
    /**
     * Determines whether to remove the network interfaces from the mounted or exported virtual machine. Set to 'true' to remove all network interfaces. The default value is 'false'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("removeNetworkDevices")
    public Boolean removeNetworkDevices;

    public MountSnapshotJobConfigV1 withRemoveNetworkDevices(Boolean removeNetworkDevices) {
        this.removeNetworkDevices = removeNetworkDevices;
        return this;
    }
    
    /**
     * The job recovers the tags that were assigned to the virtual machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shouldRecoverTags")
    public Boolean shouldRecoverTags;

    public MountSnapshotJobConfigV1 withShouldRecoverTags(Boolean shouldRecoverTags) {
        this.shouldRecoverTags = shouldRecoverTags;
        return this;
    }
    
    /**
     * VLAN ID for the VLAN ESXi host prefer to use for mounting the datastore.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public Integer vlan;

    public MountSnapshotJobConfigV1 withVlan(Integer vlan) {
        this.vlan = vlan;
        return this;
    }
    
    /**
     * Name of the new VM created by mount or export.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmName")
    public String vmName;

    public MountSnapshotJobConfigV1 withVmName(String vmName) {
        this.vmName = vmName;
        return this;
    }
    
    public MountSnapshotJobConfigV1(){}
}
