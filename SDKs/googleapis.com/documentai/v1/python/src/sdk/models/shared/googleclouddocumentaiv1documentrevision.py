"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddocumentaiv1documentrevisionhumanreview as shared_googleclouddocumentaiv1documentrevisionhumanreview
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDocumentaiV1DocumentRevision:
    r"""Contains past or forward revisions of this document."""
    
    agent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agent'), 'exclude': lambda f: f is None }})
    r"""If the change was made by a person specify the name or id of that person."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""The time that the revision was created, internally generated by doc proto storage at the time of create."""  
    human_review: Optional[shared_googleclouddocumentaiv1documentrevisionhumanreview.GoogleCloudDocumentaiV1DocumentRevisionHumanReview] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('humanReview'), 'exclude': lambda f: f is None }})
    r"""Human Review information of the document."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Id of the revision, internally generated by doc proto storage. Unique within the context of the document."""  
    parent: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent'), 'exclude': lambda f: f is None }})
    r"""The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."""  
    parent_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentIds'), 'exclude': lambda f: f is None }})
    r"""The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field."""  
    processor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processor'), 'exclude': lambda f: f is None }})
    r"""If the annotation was made by processor identify the processor by its resource name."""  
    