// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WriteForwardingStatusEnum string

const (
	WriteForwardingStatusEnumEnabled   WriteForwardingStatusEnum = "enabled"
	WriteForwardingStatusEnumDisabled  WriteForwardingStatusEnum = "disabled"
	WriteForwardingStatusEnumEnabling  WriteForwardingStatusEnum = "enabling"
	WriteForwardingStatusEnumDisabling WriteForwardingStatusEnum = "disabling"
	WriteForwardingStatusEnumUnknown   WriteForwardingStatusEnum = "unknown"
)

func (e WriteForwardingStatusEnum) ToPointer() *WriteForwardingStatusEnum {
	return &e
}

func (e *WriteForwardingStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enabled":
		fallthrough
	case "disabled":
		fallthrough
	case "enabling":
		fallthrough
	case "disabling":
		fallthrough
	case "unknown":
		*e = WriteForwardingStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WriteForwardingStatusEnum: %v", v)
	}
}
