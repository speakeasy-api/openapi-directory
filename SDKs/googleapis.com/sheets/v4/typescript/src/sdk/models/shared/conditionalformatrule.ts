/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BooleanRule } from "./booleanrule";
import { GradientRule } from "./gradientrule";
import { GridRange } from "./gridrange";
import { Expose, Type } from "class-transformer";

/**
 * A rule describing a conditional format.
 */
export class ConditionalFormatRule extends SpeakeasyBase {
  /**
   * A rule that may or may not match, depending on the condition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "booleanRule" })
  @Type(() => BooleanRule)
  booleanRule?: BooleanRule;

  /**
   * A rule that applies a gradient color scale format, based on the interpolation points listed. The format of a cell will vary based on its contents as compared to the values of the interpolation points.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gradientRule" })
  @Type(() => GradientRule)
  gradientRule?: GradientRule;

  /**
   * The ranges that are formatted if the condition is true. All the ranges must be on the same grid.
   */
  @SpeakeasyMetadata({ elemType: GridRange })
  @Expose({ name: "ranges" })
  @Type(() => GridRange)
  ranges?: GridRange[];
}
