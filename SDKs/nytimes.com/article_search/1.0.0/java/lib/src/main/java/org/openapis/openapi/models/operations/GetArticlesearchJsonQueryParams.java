/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetArticlesearchJsonQueryParams {
    /**
     * "Format: YYYYMMDD 
     * 
     * Restricts responses to results with publication dates of the date specified or later."
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=begin_date")
    public String beginDate;
    public GetArticlesearchJsonQueryParams withBeginDate(String beginDate) {
        this.beginDate = beginDate;
        return this;
    }
    
    /**
     * "Format: YYYYMMDD 
     * 
     * Restricts responses to results with publication dates of the date specified or earlier."
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end_date")
    public String endDate;
    public GetArticlesearchJsonQueryParams withEndDate(String endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * Comma-delimited list of facets
     * 
     * Specifies the sets of facet values to include in the facets array at the end of response, which collects the facet values from all the search results. By default no facet fields will be returned. Below is the list of valid facets:
     * 
     * section_name
     * 
     * document_type
     * 
     * type_of_material
     * 
     * source
     * 
     * day_of_week
     * 
     * To learn more about using facets, see Using Facets.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=facet_field")
    public String facetField;
    public GetArticlesearchJsonQueryParams withFacetField(String facetField) {
        this.facetField = facetField;
        return this;
    }
    
    /**
     * When set to true, facet counts will respect any applied filters (fq, date range, etc.) in addition to the main query term. To filter facet counts, specifying at least one facet_field is required. To learn more about using facets, see Using Facets.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=facet_filter")
    public Boolean facetFilter;
    public GetArticlesearchJsonQueryParams withFacetFilter(Boolean facetFilter) {
        this.facetFilter = facetFilter;
        return this;
    }
    
    /**
     * "Comma-delimited list of fields (no limit)
     * 
     *   Limits the fields returned in your search results. By default (unless you include an fl list in your request), the following fields are returned: 
     *   
     *   web_url
     *   
     *   snippet
     *   
     *   lead_paragraph
     *   
     *   abstract
     *   
     *   print_page
     *   
     *   blog
     *   
     *   source
     *   
     *   multimedia
     *   
     *   headline
     *   
     *   keywords
     *   
     *   pub_date
     *   
     *   document_type
     *   
     *   news_desk
     *   
     *   byline
     *   
     *   type_of_material
     *   
     *   _id
     *   
     *   word_count"
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fl")
    public String fl;
    public GetArticlesearchJsonQueryParams withFl(String fl) {
        this.fl = fl;
        return this;
    }
    
    /**
     * "Filtered search query using standard Lucene syntax. 
     * 
     * The filter query can be specified with or without a limiting field: label. 
     * 
     * See Filtering Your Search for more information about filtering."
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fq")
    public String fq;
    public GetArticlesearchJsonQueryParams withFq(String fq) {
        this.fq = fq;
        return this;
    }
    
    /**
     * Enables highlighting in search results. When set to true, the query term (q) is highlighted in the headline and lead_paragraph fields.
     * 
     * Note: If highlighting is enabled, snippet will be returned even if it is not specified in your fl list."
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=hl")
    public Boolean hl;
    public GetArticlesearchJsonQueryParams withHl(Boolean hl) {
        this.hl = hl;
        return this;
    }
    
    /**
     * "The value of page corresponds to a set of 10 results (it does not indicate the starting number of the result set). For example, page=0 corresponds to records 0-9. To return records 10-19, set page to 1, not 10."
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public GetArticlesearchJsonQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * Search query term. Search is performed on the article body, headline and byline.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=q")
    public String q;
    public GetArticlesearchJsonQueryParams withQ(String q) {
        this.q = q;
        return this;
    }
    
    /**
     * "By default, search results are sorted by their relevance to the query term (q). Use the sort parameter to sort by pub_date."
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public GetArticlesearchJsonSortEnum sort;
    public GetArticlesearchJsonQueryParams withSort(GetArticlesearchJsonSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
}
