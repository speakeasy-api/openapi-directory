"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PUTRefundTypeFinanceInformationTransferredToAccountingEnum(str, Enum):
    r"""Whether the payment was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite."""
    PROCESSING = 'Processing'
    YES = 'Yes'
    NO = 'No'
    ERROR = 'Error'
    IGNORE = 'Ignore'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PUTRefundTypeFinanceInformation:
    r"""Container for the finance information related to the refund."""
    
    bank_account_accounting_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankAccountAccountingCode'), 'exclude': lambda f: f is None }})
    r"""The accounting code that maps to a bank account in your accounting system."""  
    transferred_to_accounting: Optional[PUTRefundTypeFinanceInformationTransferredToAccountingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferredToAccounting'), 'exclude': lambda f: f is None }})
    r"""Whether the payment was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite."""  
    unapplied_payment_accounting_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unappliedPaymentAccountingCode'), 'exclude': lambda f: f is None }})
    r"""The accounting code for the unapplied payment."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PUTRefundType:
    r"""Container for custom fields of a Refund object."""
    
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""Comments about the refund."""  
    finance_information: Optional[PUTRefundTypeFinanceInformation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('financeInformation'), 'exclude': lambda f: f is None }})
    r"""Container for the finance information related to the refund."""  
    integration_id_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IntegrationId__NS'), 'exclude': lambda f: f is None }})
    r"""ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    integration_status_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IntegrationStatus__NS'), 'exclude': lambda f: f is None }})
    r"""Status of the refund's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    origin_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Origin__NS'), 'exclude': lambda f: f is None }})
    r"""Origin of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    reason_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reasonCode'), 'exclude': lambda f: f is None }})
    r"""A code identifying the reason for the transaction. The value must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code."""  
    reference_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceId'), 'exclude': lambda f: f is None }})
    r"""The transaction ID returned by the payment gateway. Use this field to reconcile refunds between your gateway and Zuora Payments.
    
    You can only update the reference ID for external refunds.
    """  
    sync_date_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SyncDate__NS'), 'exclude': lambda f: f is None }})
    r"""Date when the refund was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    syncto_net_suite_ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SynctoNetSuite__NS'), 'exclude': lambda f: f is None }})
    r"""Specifies whether the refund should be synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265)."""  
    