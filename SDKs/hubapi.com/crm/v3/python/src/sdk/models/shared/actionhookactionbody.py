"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import actionconfirmationbody as shared_actionconfirmationbody
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ActionHookActionBodyHTTPMethodEnum(str, Enum):
    CONNECT = 'CONNECT'
    DELETE = 'DELETE'
    GET = 'GET'
    HEAD = 'HEAD'
    OPTIONS = 'OPTIONS'
    PATCH = 'PATCH'
    POST = 'POST'
    PUT = 'PUT'
    TRACE = 'TRACE'

class ActionHookActionBodyTypeEnum(str, Enum):
    ACTION_HOOK = 'ACTION_HOOK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionHookActionBody:
    
    http_method: ActionHookActionBodyHTTPMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('httpMethod') }})  
    property_names_included: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyNamesIncluded') }})  
    type: ActionHookActionBodyTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})  
    confirmation: Optional[shared_actionconfirmationbody.ActionConfirmationBody] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confirmation'), 'exclude': lambda f: f is None }})  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})  
    