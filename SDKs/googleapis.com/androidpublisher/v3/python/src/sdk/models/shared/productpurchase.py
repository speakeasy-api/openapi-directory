"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductPurchase:
    r"""A ProductPurchase resource indicates the status of a user's inapp product purchase."""
    
    acknowledgement_state: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acknowledgementState'), 'exclude': lambda f: f is None }})
    r"""The acknowledgement state of the inapp product. Possible values are: 0. Yet to be acknowledged 1. Acknowledged"""  
    consumption_state: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consumptionState'), 'exclude': lambda f: f is None }})
    r"""The consumption state of the inapp product. Possible values are: 0. Yet to be consumed 1. Consumed"""  
    developer_payload: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('developerPayload'), 'exclude': lambda f: f is None }})
    r"""A developer-specified string that contains supplemental information about an order."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""This kind represents an inappPurchase object in the androidpublisher service."""  
    obfuscated_external_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('obfuscatedExternalAccountId'), 'exclude': lambda f: f is None }})
    r"""An obfuscated version of the id that is uniquely associated with the user's account in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedaccountid when the purchase was made."""  
    obfuscated_external_profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('obfuscatedExternalProfileId'), 'exclude': lambda f: f is None }})
    r"""An obfuscated version of the id that is uniquely associated with the user's profile in your app. Only present if specified using https://developer.android.com/reference/com/android/billingclient/api/BillingFlowParams.Builder#setobfuscatedprofileid when the purchase was made."""  
    order_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderId'), 'exclude': lambda f: f is None }})
    r"""The order id associated with the purchase of the inapp product."""  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productId'), 'exclude': lambda f: f is None }})
    r"""The inapp product SKU. May not be present."""  
    purchase_state: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purchaseState'), 'exclude': lambda f: f is None }})
    r"""The purchase state of the order. Possible values are: 0. Purchased 1. Canceled 2. Pending"""  
    purchase_time_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purchaseTimeMillis'), 'exclude': lambda f: f is None }})
    r"""The time the product was purchased, in milliseconds since the epoch (Jan 1, 1970)."""  
    purchase_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purchaseToken'), 'exclude': lambda f: f is None }})
    r"""The purchase token generated to identify this purchase. May not be present."""  
    purchase_type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purchaseType'), 'exclude': lambda f: f is None }})
    r"""The type of purchase of the inapp product. This field is only set if this purchase was not made using the standard in-app billing flow. Possible values are: 0. Test (i.e. purchased from a license testing account) 1. Promo (i.e. purchased using a promo code) 2. Rewarded (i.e. from watching a video ad instead of paying)"""  
    quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity'), 'exclude': lambda f: f is None }})
    r"""The quantity associated with the purchase of the inapp product. If not present, the quantity is 1."""  
    region_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regionCode'), 'exclude': lambda f: f is None }})
    r"""ISO 3166-1 alpha-2 billing region code of the user at the time the product was granted."""  
    