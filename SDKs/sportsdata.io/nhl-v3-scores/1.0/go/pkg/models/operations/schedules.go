// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SchedulesFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type SchedulesFormatEnum string

const (
	SchedulesFormatEnumXML  SchedulesFormatEnum = "XML"
	SchedulesFormatEnumJSON SchedulesFormatEnum = "JSON"
)

func (e SchedulesFormatEnum) ToPointer() *SchedulesFormatEnum {
	return &e
}

func (e *SchedulesFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = SchedulesFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchedulesFormatEnum: %v", v)
	}
}

type SchedulesRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format SchedulesFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2018PRE</code>, <code>2018POST</code>, <code>2018STAR</code>, <code>2019</code>, etc.
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type SchedulesResponse struct {
	ContentType string
	Games       []shared.Game
	StatusCode  int
	RawResponse *http.Response
}
