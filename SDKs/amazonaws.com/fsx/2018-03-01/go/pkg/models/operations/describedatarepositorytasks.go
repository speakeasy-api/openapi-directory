// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeDataRepositoryTasksQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// DescribeDataRepositoryTasksXAmzTargetEnum
type DescribeDataRepositoryTasksXAmzTargetEnum string

const (
	DescribeDataRepositoryTasksXAmzTargetEnumAwsSimbaAPIServiceV20180301DescribeDataRepositoryTasks DescribeDataRepositoryTasksXAmzTargetEnum = "AWSSimbaAPIService_v20180301.DescribeDataRepositoryTasks"
)

func (e *DescribeDataRepositoryTasksXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSSimbaAPIService_v20180301.DescribeDataRepositoryTasks":
		*e = DescribeDataRepositoryTasksXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeDataRepositoryTasksXAmzTargetEnum: %s", s)
	}
}

type DescribeDataRepositoryTasksHeaders struct {
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeDataRepositoryTasksXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeDataRepositoryTasksRequest struct {
	QueryParams DescribeDataRepositoryTasksQueryParams
	Headers     DescribeDataRepositoryTasksHeaders
	Request     shared.DescribeDataRepositoryTasksRequest `request:"mediaType=application/json"`
}

type DescribeDataRepositoryTasksResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// DataRepositoryTaskNotFound
	DataRepositoryTaskNotFound interface{}
	// Success
	DescribeDataRepositoryTasksResponse *shared.DescribeDataRepositoryTasksResponse
	// FileSystemNotFound
	FileSystemNotFound interface{}
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
