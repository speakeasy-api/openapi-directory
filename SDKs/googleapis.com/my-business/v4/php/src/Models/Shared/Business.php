<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Business - Features of the property of specific interest to the business traveler.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Business
{
    /**
     * Business center. A designated room at the hotel with one or more desks and equipped with guest-use computers, printers, fax machines and/or photocopiers. May or may not be open 24/7. May or may not require a key to access. Not a meeting room or conference room.
     * 
     * @var ?bool $businessCenter
     */
	#[\JMS\Serializer\Annotation\SerializedName('businessCenter')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $businessCenter = null;
    
    /**
     * Business center exception.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BusinessBusinessCenterExceptionEnum $businessCenterException
     */
	#[\JMS\Serializer\Annotation\SerializedName('businessCenterException')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BusinessBusinessCenterExceptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BusinessBusinessCenterExceptionEnum $businessCenterException = null;
    
    /**
     * Meeting rooms. Rooms at the hotel designated for business-related gatherings. Rooms are usually equipped with tables or desks, office chairs and audio/visual facilities to allow for presentations and conference calls. Also known as conference rooms.
     * 
     * @var ?bool $meetingRooms
     */
	#[\JMS\Serializer\Annotation\SerializedName('meetingRooms')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $meetingRooms = null;
    
    /**
     * Meeting rooms count. The number of meeting rooms at the property.
     * 
     * @var ?int $meetingRoomsCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('meetingRoomsCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $meetingRoomsCount = null;
    
    /**
     * Meeting rooms count exception.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BusinessMeetingRoomsCountExceptionEnum $meetingRoomsCountException
     */
	#[\JMS\Serializer\Annotation\SerializedName('meetingRoomsCountException')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BusinessMeetingRoomsCountExceptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BusinessMeetingRoomsCountExceptionEnum $meetingRoomsCountException = null;
    
    /**
     * Meeting rooms exception.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BusinessMeetingRoomsExceptionEnum $meetingRoomsException
     */
	#[\JMS\Serializer\Annotation\SerializedName('meetingRoomsException')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BusinessMeetingRoomsExceptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BusinessMeetingRoomsExceptionEnum $meetingRoomsException = null;
    
	public function __construct()
	{
		$this->businessCenter = null;
		$this->businessCenterException = null;
		$this->meetingRooms = null;
		$this->meetingRoomsCount = null;
		$this->meetingRoomsCountException = null;
		$this->meetingRoomsException = null;
	}
}
