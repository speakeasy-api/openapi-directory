"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import crawlstate_enum as shared_crawlstate_enum
from ..shared import jobrunstate_enum as shared_jobrunstate_enum
from ..shared import logicaloperator_enum as shared_logicaloperator_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Condition:
    r"""Defines a condition under which a trigger fires."""
    
    crawler_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlerName'), 'exclude': lambda f: f is None }})  
    crawl_state: Optional[shared_crawlstate_enum.CrawlStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlState'), 'exclude': lambda f: f is None }})  
    job_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JobName'), 'exclude': lambda f: f is None }})  
    logical_operator: Optional[shared_logicaloperator_enum.LogicalOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LogicalOperator'), 'exclude': lambda f: f is None }})  
    state: Optional[shared_jobrunstate_enum.JobRunStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('State'), 'exclude': lambda f: f is None }})  
    