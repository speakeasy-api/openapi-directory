"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SamsungPreviewSectionTile:
    
    action_data: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action_data') }})
    r"""Data to send to the application when the tile is clicked"""  
    image_ratio: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image_ratio') }})
    r"""Thumbnail image aspect ratio
      \"16:9\"
      \"4:3\"
      \"1:1\" (default)
      \"2:3\"
      The thumbnail height is fixed at 250 px on presentation.
    """  
    image_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image_url') }})
    r"""Thumbnail image URL"""  
    is_playable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_playable') }})
    r"""If \\"true\\", a \\"Play\\" icon is shown over the thumbnail image"""  
    display_from: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_from'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Time to begin showing the tile"""  
    display_until: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_until'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Time to stop showing the tile"""  
    position: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""Section position. If specified, sections are shown in ascending position order"""  
    subtitle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subtitle'), 'exclude': lambda f: f is None }})
    r"""Tile subtitle"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Tile title"""  
    