/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StreamingSessionStateEnum } from "./streamingsessionstateenum";
import { StreamingSessionStatusCodeEnum } from "./streamingsessionstatuscodeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Information about the streaming session backup.
 */
export class StreamingSessionBackup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "backupId" })
  backupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "launchProfileId" })
  launchProfileId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ownedBy" })
  ownedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sessionId" })
  sessionId?: string;

  /**
   * The streaming session state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: StreamingSessionStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusCode" })
  statusCode?: StreamingSessionStatusCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
