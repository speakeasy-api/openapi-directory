/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkerResource - Configuration for resources used by Airflow workers.
 */
public class WorkerResource {
    /**
     * Optional. CPU request and limit for a single Airflow worker replica.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpu")
    public Float cpu;
    public WorkerResource withCpu(Float cpu) {
        this.cpu = cpu;
        return this;
    }
    
    /**
     * Optional. Maximum number of workers for autoscaling.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxCount")
    public Integer maxCount;
    public WorkerResource withMaxCount(Integer maxCount) {
        this.maxCount = maxCount;
        return this;
    }
    
    /**
     * Optional. Memory (GB) request and limit for a single Airflow worker replica.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryGb")
    public Float memoryGb;
    public WorkerResource withMemoryGb(Float memoryGb) {
        this.memoryGb = memoryGb;
        return this;
    }
    
    /**
     * Optional. Minimum number of workers for autoscaling.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minCount")
    public Integer minCount;
    public WorkerResource withMinCount(Integer minCount) {
        this.minCount = minCount;
        return this;
    }
    
    /**
     * Optional. Storage (GB) request and limit for a single Airflow worker replica.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageGb")
    public Float storageGb;
    public WorkerResource withStorageGb(Float storageGb) {
        this.storageGb = storageGb;
        return this;
    }
    
}
