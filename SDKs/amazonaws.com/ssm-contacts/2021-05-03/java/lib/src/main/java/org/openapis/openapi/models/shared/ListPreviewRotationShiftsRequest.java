/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ListPreviewRotationShiftsRequest {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;
    public ListPreviewRotationShiftsRequest withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;
    public ListPreviewRotationShiftsRequest withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    @JsonProperty("Members")
    public String[] members;
    public ListPreviewRotationShiftsRequest withMembers(String[] members) {
        this.members = members;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;
    public ListPreviewRotationShiftsRequest withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Overrides")
    public PreviewOverride[] overrides;
    public ListPreviewRotationShiftsRequest withOverrides(PreviewOverride[] overrides) {
        this.overrides = overrides;
        return this;
    }
    
    @JsonProperty("Recurrence")
    public RecurrenceSettings recurrence;
    public ListPreviewRotationShiftsRequest withRecurrence(RecurrenceSettings recurrence) {
        this.recurrence = recurrence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("RotationStartTime")
    public OffsetDateTime rotationStartTime;
    public ListPreviewRotationShiftsRequest withRotationStartTime(OffsetDateTime rotationStartTime) {
        this.rotationStartTime = rotationStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;
    public ListPreviewRotationShiftsRequest withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonProperty("TimeZoneId")
    public String timeZoneId;
    public ListPreviewRotationShiftsRequest withTimeZoneId(String timeZoneId) {
        this.timeZoneId = timeZoneId;
        return this;
    }
    
}
