/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostWebhooksAuthRequestBody extends SpeakeasyBase {
  /**
   * The authentication process configuration. A dict contains either the certificate
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=config" })
  config?: string;

  /**
   * The name of the authentication process to differentiate
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=name" })
  name: string;

  /**
   * The type of the authentication process (oauth, certificate, token, etc...)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=type" })
  type: number;
}

export class PostWebhooksAuthRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody: PostWebhooksAuthRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;
}

export class PostWebhooksAuthResponse extends SpeakeasyBase {
  /**
   * Successful POST on AuthProvider resource
   */
  @SpeakeasyMetadata()
  authProvider?: shared.AuthProvider;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
