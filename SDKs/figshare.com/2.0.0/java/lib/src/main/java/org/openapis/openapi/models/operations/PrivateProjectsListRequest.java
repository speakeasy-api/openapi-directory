/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PrivateProjectsListRequest {
    /**
     * Number of results included on a page. Used for pagination with query
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public PrivateProjectsListRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Where to start the listing(the offset of the first result). Used for pagination with limit
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Long offset;

    public PrivateProjectsListRequest withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The field by which to order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=order")
    public PrivateProjectsListOrderEnum order;

    public PrivateProjectsListRequest withOrder(PrivateProjectsListOrderEnum order) {
        this.order = order;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=order_direction")
    public PrivateProjectsListOrderDirectionEnum orderDirection;

    public PrivateProjectsListRequest withOrderDirection(PrivateProjectsListOrderDirectionEnum orderDirection) {
        this.orderDirection = orderDirection;
        return this;
    }
    
    /**
     * Page number. Used for pagination with page_size
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;

    public PrivateProjectsListRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of results included on a page. Used for pagination with page
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_size")
    public Long pageSize;

    public PrivateProjectsListRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Any combination of owner, collaborator, viewer separated by comma. Examples: "owner" or "owner,collaborator".
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=roles")
    public String roles;

    public PrivateProjectsListRequest withRoles(String roles) {
        this.roles = roles;
        return this;
    }
    
    /**
     * only return collections from this institution
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=storage")
    public PrivateProjectsListStorageEnum storage;

    public PrivateProjectsListRequest withStorage(PrivateProjectsListStorageEnum storage) {
        this.storage = storage;
        return this;
    }
    
    public PrivateProjectsListRequest(){}
}
