/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETRSDetailType - Container for custom fields of a Revenue Schedule object.
 * 
 */
public class GETRSDetailType {
    /**
     * An account ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public GETRSDetailType withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public String amount;
    public GETRSDetailType withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The date and time when the record was created, in `yyyy-mm-dd hh:mm:ss` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdOn")
    public OffsetDateTime createdOn;
    public GETRSDetailType withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }
    
    /**
     * The type of currency used.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public GETRSDetailType withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The linked transaction ID for billing transactions. This field is used for all rules except for the custom unlimited or manual recognition rule models. If using the custom unlimited rule model, then the field value must be null. If the field is not null, then the referenceId field must be null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedTransactionId")
    public String linkedTransactionId;
    public GETRSDetailType withLinkedTransactionId(String linkedTransactionId) {
        this.linkedTransactionId = linkedTransactionId;
        return this;
    }
    
    /**
     * The number for the linked invoice item or invoice item adjustment transaction. This field is used for all rules except for the custom unlimited or manual recognition rule models. If using the custom unlimited or manual recognition rule models, then the field value is null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedTransactionNumber")
    public String linkedTransactionNumber;
    public GETRSDetailType withLinkedTransactionNumber(String linkedTransactionNumber) {
        this.linkedTransactionNumber = linkedTransactionNumber;
        return this;
    }
    
    /**
     * The type of linked transaction for billing transactions, which can be invoice item or invoice item adjustment. This field is used for all rules except for the custom unlimited or manual recognition rule models.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedTransactionType")
    public String linkedTransactionType;
    public GETRSDetailType withLinkedTransactionType(String linkedTransactionType) {
        this.linkedTransactionType = linkedTransactionType;
        return this;
    }
    
    /**
     * Additional information about this record.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public GETRSDetailType withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Revenue schedule number. The revenue schedule number is always prefixed with "RS", for example, "RS-00000001".
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;
    public GETRSDetailType withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * The name of the recognition rule.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recognitionRuleName")
    public String recognitionRuleName;
    public GETRSDetailType withRecognitionRuleName(String recognitionRuleName) {
        this.recognitionRuleName = recognitionRuleName;
        return this;
    }
    
    /**
     * The revenue that was distributed in a closed accounting period.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recognizedRevenue")
    public String recognizedRevenue;
    public GETRSDetailType withRecognizedRevenue(String recognizedRevenue) {
        this.recognizedRevenue = recognizedRevenue;
        return this;
    }
    
    /**
     * Reference ID is used only in the custom unlimited rule to create a revenue schedule. In this scenario, the revenue schedule is not linked to an invoice item or invoice item adjustment.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("referenceId")
    public String referenceId;
    public GETRSDetailType withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    /**
     * Revenue items are listed in ascending order by the accounting period start date.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revenueItems")
    public GETRsRevenueItemType[] revenueItems;
    public GETRSDetailType withRevenueItems(GETRsRevenueItemType[] revenueItems) {
        this.revenueItems = revenueItems;
        return this;
    }
    
    /**
     * The effective date of the revenue schedule. For example, the revenue schedule date for bookings-based revenue recognition is typically set to the order date or contract date.
     * 
     * The date cannot be in a closed accounting period. The date must be in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("revenueScheduleDate")
    public LocalDate revenueScheduleDate;
    public GETRSDetailType withRevenueScheduleDate(LocalDate revenueScheduleDate) {
        this.revenueScheduleDate = revenueScheduleDate;
        return this;
    }
    
    /**
     * The original subscription charge ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionChargeId")
    public String subscriptionChargeId;
    public GETRSDetailType withSubscriptionChargeId(String subscriptionChargeId) {
        this.subscriptionChargeId = subscriptionChargeId;
        return this;
    }
    
    /**
     * The original subscription ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public GETRSDetailType withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public GETRSDetailType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Revenue in the open-ended accounting period.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("undistributedUnrecognizedRevenue")
    public String undistributedUnrecognizedRevenue;
    public GETRSDetailType withUndistributedUnrecognizedRevenue(String undistributedUnrecognizedRevenue) {
        this.undistributedUnrecognizedRevenue = undistributedUnrecognizedRevenue;
        return this;
    }
    
    /**
     * Revenue distributed in all open accounting periods, which includes the open-ended accounting period.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unrecognizedRevenue")
    public String unrecognizedRevenue;
    public GETRSDetailType withUnrecognizedRevenue(String unrecognizedRevenue) {
        this.unrecognizedRevenue = unrecognizedRevenue;
        return this;
    }
    
    /**
     * The date and time when the revenue automation start date was set, in `yyyy-mm-dd hh:mm:ss` formst.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedOn")
    public OffsetDateTime updatedOn;
    public GETRSDetailType withUpdatedOn(OffsetDateTime updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }
    
}
