/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Limits the set of items by originating source
 *
 * @remarks
 *
 * all = items from both The New York Times and The International New York Times
 * nyt = New York Times items only
 * iht = International New York Times items only
 *
 */
export enum GetContentSourceSectionTimePeriodJsonSourceEnum {
  All = "all",
  Nyt = "nyt",
  Iht = "iht",
}

export class GetContentSourceSectionTimePeriodJsonRequest extends SpeakeasyBase {
  /**
   * Limits the number of results, between 1 and 20
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Sets the starting point of the result set
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Limits the set of items by one or more sections
   *
   * @remarks
   * all | One or more section names, separated by semicolons
   *
   *  To get all sections, specify all. To get a particular section or sections, use the section names returned by this request:
   *  http://api.nytimes.com/svc/news/v3/content/section-list.json
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=section",
  })
  section: string;

  /**
   * Limits the set of items by originating source
   *
   * @remarks
   *
   * all = items from both The New York Times and The International New York Times
   * nyt = New York Times items only
   * iht = International New York Times items only
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=source",
  })
  source: GetContentSourceSectionTimePeriodJsonSourceEnum;

  /**
   * Limits the set of items by time published, integer in number of hours
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=time-period",
  })
  timePeriod: number;
}

/**
 * An array of Articles
 */
export class GetContentSourceSectionTimePeriodJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "num_results" })
  numResults?: number;

  @SpeakeasyMetadata({ elemType: shared.Article })
  @Expose({ name: "results" })
  @Type(() => shared.Article)
  results?: shared.Article[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class GetContentSourceSectionTimePeriodJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * An array of Articles
   */
  @SpeakeasyMetadata()
  getContentSourceSectionTimePeriodJSON200ApplicationJSONObject?: GetContentSourceSectionTimePeriodJson200ApplicationJSON;
}
