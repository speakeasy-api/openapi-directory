"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import notifyemailtype as shared_notifyemailtype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NotifyConfigurationType:
    r"""The notify configuration type."""
    
    source_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceArn') }})  
    block_email: Optional[shared_notifyemailtype.NotifyEmailType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BlockEmail'), 'exclude': lambda f: f is None }})  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('From'), 'exclude': lambda f: f is None }})  
    mfa_email: Optional[shared_notifyemailtype.NotifyEmailType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MfaEmail'), 'exclude': lambda f: f is None }})  
    no_action_email: Optional[shared_notifyemailtype.NotifyEmailType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NoActionEmail'), 'exclude': lambda f: f is None }})  
    reply_to: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplyTo'), 'exclude': lambda f: f is None }})  
    