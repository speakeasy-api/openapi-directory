// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeregisterMailDomainXAmzTargetEnum
type DeregisterMailDomainXAmzTargetEnum string

const (
	DeregisterMailDomainXAmzTargetEnumWorkMailServiceDeregisterMailDomain DeregisterMailDomainXAmzTargetEnum = "WorkMailService.DeregisterMailDomain"
)

func (e *DeregisterMailDomainXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkMailService.DeregisterMailDomain":
		*e = DeregisterMailDomainXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeregisterMailDomainXAmzTargetEnum: %s", s)
	}
}

type DeregisterMailDomainRequest struct {
	DeregisterMailDomainRequest shared.DeregisterMailDomainRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DeregisterMailDomainXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeregisterMailDomainResponse struct {
	ContentType string
	// Success
	DeregisterMailDomainResponse map[string]interface{}
	// InvalidCustomSesConfigurationException
	InvalidCustomSesConfigurationException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// MailDomainInUseException
	MailDomainInUseException interface{}
	// OrganizationNotFoundException
	OrganizationNotFoundException interface{}
	// OrganizationStateException
	OrganizationStateException interface{}
	StatusCode                 int
	RawResponse                *http.Response
}
