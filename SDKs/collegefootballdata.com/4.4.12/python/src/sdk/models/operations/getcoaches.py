"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import coach as shared_coach
from typing import Optional


@dataclasses.dataclass
class GetCoachesRequest:
    
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'firstName', 'style': 'form', 'explode': True }})
    r"""First name filter"""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lastName', 'style': 'form', 'explode': True }})
    r"""Last name filter"""  
    max_year: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxYear', 'style': 'form', 'explode': True }})
    r"""Maximum year filter (inclusive)"""  
    min_year: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minYear', 'style': 'form', 'explode': True }})
    r"""Minimum year filter (inclusive)"""  
    team: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'team', 'style': 'form', 'explode': True }})
    r"""Team name filter"""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'year', 'style': 'form', 'explode': True }})
    r"""Year filter"""  
    

@dataclasses.dataclass
class GetCoachesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    coaches: Optional[list[shared_coach.Coach]] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    