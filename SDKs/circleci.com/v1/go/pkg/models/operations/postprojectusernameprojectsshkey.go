// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostProjectUsernameProjectSSHKeyPathParams struct {
	// XXXXXXXXX
	//
	Project string `pathParam:"style=simple,explode=false,name=project"`
	// XXXXXXXXX
	//
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

// PostProjectUsernameProjectSSHKeyContentTypeEnum
type PostProjectUsernameProjectSSHKeyContentTypeEnum string

const (
	PostProjectUsernameProjectSSHKeyContentTypeEnumApplicationJSON PostProjectUsernameProjectSSHKeyContentTypeEnum = "application/json"
)

func (e *PostProjectUsernameProjectSSHKeyContentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "application/json":
		*e = PostProjectUsernameProjectSSHKeyContentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostProjectUsernameProjectSSHKeyContentTypeEnum: %s", s)
	}
}

type PostProjectUsernameProjectSSHKeyHeaders struct {
	ContentType PostProjectUsernameProjectSSHKeyContentTypeEnum `header:"style=simple,explode=false,name=Content-Type"`
}

type PostProjectUsernameProjectSSHKeyRequestBody struct {
	Hostname   *string `json:"hostname,omitempty"`
	PrivateKey *string `json:"private_key,omitempty"`
}

type PostProjectUsernameProjectSSHKeyRequest struct {
	PathParams PostProjectUsernameProjectSSHKeyPathParams
	Headers    PostProjectUsernameProjectSSHKeyHeaders
	Request    PostProjectUsernameProjectSSHKeyRequestBody `request:"mediaType=application/json"`
}

// PostProjectUsernameProjectSSHKeyDefaultApplicationJSON - no response expected
type PostProjectUsernameProjectSSHKeyDefaultApplicationJSON struct {
	Message *string `json:"message,omitempty"`
}

type PostProjectUsernameProjectSSHKeyResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// no response expected
	PostProjectUsernameProjectSSHKeyDefaultApplicationJSONObject *PostProjectUsernameProjectSSHKeyDefaultApplicationJSON
}
