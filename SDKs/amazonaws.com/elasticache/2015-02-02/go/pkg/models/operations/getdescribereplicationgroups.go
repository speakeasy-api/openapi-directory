// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeReplicationGroupsActionEnum
type GETDescribeReplicationGroupsActionEnum string

const (
	GETDescribeReplicationGroupsActionEnumDescribeReplicationGroups GETDescribeReplicationGroupsActionEnum = "DescribeReplicationGroups"
)

func (e GETDescribeReplicationGroupsActionEnum) ToPointer() *GETDescribeReplicationGroupsActionEnum {
	return &e
}

func (e *GETDescribeReplicationGroupsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeReplicationGroups":
		*e = GETDescribeReplicationGroupsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeReplicationGroupsActionEnum: %v", v)
	}
}

// GETDescribeReplicationGroupsVersionEnum
type GETDescribeReplicationGroupsVersionEnum string

const (
	GETDescribeReplicationGroupsVersionEnumTwoThousandAndFifteen0202 GETDescribeReplicationGroupsVersionEnum = "2015-02-02"
)

func (e GETDescribeReplicationGroupsVersionEnum) ToPointer() *GETDescribeReplicationGroupsVersionEnum {
	return &e
}

func (e *GETDescribeReplicationGroupsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETDescribeReplicationGroupsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeReplicationGroupsVersionEnum: %v", v)
	}
}

type GETDescribeReplicationGroupsRequest struct {
	Action GETDescribeReplicationGroupsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// <p>The identifier for the replication group to be described. This parameter is not case sensitive.</p> <p>If you do not specify this parameter, information about all replication groups is returned.</p>
	ReplicationGroupID *string                                 `queryParam:"style=form,explode=true,name=ReplicationGroupId"`
	Version            GETDescribeReplicationGroupsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm      *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeReplicationGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
