// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LicenseStatusEnum string

const (
	LicenseStatusEnumAvailable        LicenseStatusEnum = "AVAILABLE"
	LicenseStatusEnumPendingAvailable LicenseStatusEnum = "PENDING_AVAILABLE"
	LicenseStatusEnumDeactivated      LicenseStatusEnum = "DEACTIVATED"
	LicenseStatusEnumSuspended        LicenseStatusEnum = "SUSPENDED"
	LicenseStatusEnumExpired          LicenseStatusEnum = "EXPIRED"
	LicenseStatusEnumPendingDelete    LicenseStatusEnum = "PENDING_DELETE"
	LicenseStatusEnumDeleted          LicenseStatusEnum = "DELETED"
)

func (e LicenseStatusEnum) ToPointer() *LicenseStatusEnum {
	return &e
}

func (e *LicenseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AVAILABLE":
		fallthrough
	case "PENDING_AVAILABLE":
		fallthrough
	case "DEACTIVATED":
		fallthrough
	case "SUSPENDED":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "PENDING_DELETE":
		fallthrough
	case "DELETED":
		*e = LicenseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseStatusEnum: %v", v)
	}
}
