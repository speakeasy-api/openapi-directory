/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSnippetsWorkspaceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey?: string;

  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2?: string;
}

/**
 * Filter down the result based on the authenticated user's role (`owner`, `contributor`, or `member`).
 */
export enum GetSnippetsWorkspaceRoleEnum {
  Owner = "owner",
  Contributor = "contributor",
  Member = "member",
}

export class GetSnippetsWorkspaceRequest extends SpeakeasyBase {
  /**
   * Filter down the result based on the authenticated user's role (`owner`, `contributor`, or `member`).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=role" })
  role?: GetSnippetsWorkspaceRoleEnum;

  /**
   * This can either be the workspace ID (slug) or the workspace UUID
   *
   * @remarks
   * surrounded by curly-braces, for example: `{workspace UUID}`.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=workspace",
  })
  workspace: string;
}

export class GetSnippetsWorkspaceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * If the user does not exist.
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * A paginated list of snippets.
   */
  @SpeakeasyMetadata()
  paginatedSnippets?: shared.PaginatedSnippets;
}
