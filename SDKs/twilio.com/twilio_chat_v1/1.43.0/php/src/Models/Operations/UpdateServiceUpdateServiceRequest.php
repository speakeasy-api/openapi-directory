<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class UpdateServiceUpdateServiceRequest
{
    /**
     * DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.
     * 
     * @var ?int $consumptionReportInterval
     */
	#[SpeakeasyMetadata('form:name=ConsumptionReportInterval')]
    public ?int $consumptionReportInterval = null;
    
    /**
     * The channel role assigned to a channel creator when they join a new channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     * 
     * @var ?string $defaultChannelCreatorRoleSid
     */
	#[SpeakeasyMetadata('form:name=DefaultChannelCreatorRoleSid')]
    public ?string $defaultChannelCreatorRoleSid = null;
    
    /**
     * The channel role assigned to users when they are added to a channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     * 
     * @var ?string $defaultChannelRoleSid
     */
	#[SpeakeasyMetadata('form:name=DefaultChannelRoleSid')]
    public ?string $defaultChannelRoleSid = null;
    
    /**
     * The service role assigned to users when they are added to the service. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     * 
     * @var ?string $defaultServiceRoleSid
     */
	#[SpeakeasyMetadata('form:name=DefaultServiceRoleSid')]
    public ?string $defaultServiceRoleSid = null;
    
    /**
     * A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     * 
     * @var ?string $friendlyName
     */
	#[SpeakeasyMetadata('form:name=FriendlyName')]
    public ?string $friendlyName = null;
    
    /**
     * The maximum number of Members that can be added to Channels within this Service. Can be up to 1,000.
     * 
     * @var ?int $limitsChannelMembers
     */
	#[SpeakeasyMetadata('form:name=Limits.ChannelMembers')]
    public ?int $limitsChannelMembers = null;
    
    /**
     * The maximum number of Channels Users can be a Member of within this Service. Can be up to 1,000.
     * 
     * @var ?int $limitsUserChannels
     */
	#[SpeakeasyMetadata('form:name=Limits.UserChannels')]
    public ?int $limitsUserChannels = null;
    
    /**
     * Whether to send a notification when a member is added to a channel. Can be: `true` or `false` and the default is `false`.
     * 
     * @var ?bool $notificationsAddedToChannelEnabled
     */
	#[SpeakeasyMetadata('form:name=Notifications.AddedToChannel.Enabled')]
    public ?bool $notificationsAddedToChannelEnabled = null;
    
    /**
     * The template to use to create the notification text displayed when a member is added to a channel and `notifications.added_to_channel.enabled` is `true`.
     * 
     * @var ?string $notificationsAddedToChannelTemplate
     */
	#[SpeakeasyMetadata('form:name=Notifications.AddedToChannel.Template')]
    public ?string $notificationsAddedToChannelTemplate = null;
    
    /**
     * Whether to send a notification when a user is invited to a channel. Can be: `true` or `false` and the default is `false`.
     * 
     * @var ?bool $notificationsInvitedToChannelEnabled
     */
	#[SpeakeasyMetadata('form:name=Notifications.InvitedToChannel.Enabled')]
    public ?bool $notificationsInvitedToChannelEnabled = null;
    
    /**
     * The template to use to create the notification text displayed when a user is invited to a channel and `notifications.invited_to_channel.enabled` is `true`.
     * 
     * @var ?string $notificationsInvitedToChannelTemplate
     */
	#[SpeakeasyMetadata('form:name=Notifications.InvitedToChannel.Template')]
    public ?string $notificationsInvitedToChannelTemplate = null;
    
    /**
     * Whether to send a notification when a new message is added to a channel. Can be: `true` or `false` and the default is `false`.
     * 
     * @var ?bool $notificationsNewMessageEnabled
     */
	#[SpeakeasyMetadata('form:name=Notifications.NewMessage.Enabled')]
    public ?bool $notificationsNewMessageEnabled = null;
    
    /**
     * The template to use to create the notification text displayed when a new message is added to a channel and `notifications.new_message.enabled` is `true`.
     * 
     * @var ?string $notificationsNewMessageTemplate
     */
	#[SpeakeasyMetadata('form:name=Notifications.NewMessage.Template')]
    public ?string $notificationsNewMessageTemplate = null;
    
    /**
     * Whether to send a notification to a user when they are removed from a channel. Can be: `true` or `false` and the default is `false`.
     * 
     * @var ?bool $notificationsRemovedFromChannelEnabled
     */
	#[SpeakeasyMetadata('form:name=Notifications.RemovedFromChannel.Enabled')]
    public ?bool $notificationsRemovedFromChannelEnabled = null;
    
    /**
     * The template to use to create the notification text displayed to a user when they are removed from a channel and `notifications.removed_from_channel.enabled` is `true`.
     * 
     * @var ?string $notificationsRemovedFromChannelTemplate
     */
	#[SpeakeasyMetadata('form:name=Notifications.RemovedFromChannel.Template')]
    public ?string $notificationsRemovedFromChannelTemplate = null;
    
    /**
     * The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
     * 
     * @var ?string $postWebhookUrl
     */
	#[SpeakeasyMetadata('form:name=PostWebhookUrl')]
    public ?string $postWebhookUrl = null;
    
    /**
     * The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
     * 
     * @var ?string $preWebhookUrl
     */
	#[SpeakeasyMetadata('form:name=PreWebhookUrl')]
    public ?string $preWebhookUrl = null;
    
    /**
     * Whether to enable the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) for this Service instance. The default is `false`.
     * 
     * @var ?bool $reachabilityEnabled
     */
	#[SpeakeasyMetadata('form:name=ReachabilityEnabled')]
    public ?bool $reachabilityEnabled = null;
    
    /**
     * Whether to enable the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature. The default is `true`.
     * 
     * @var ?bool $readStatusEnabled
     */
	#[SpeakeasyMetadata('form:name=ReadStatusEnabled')]
    public ?bool $readStatusEnabled = null;
    
    /**
     * How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.
     * 
     * @var ?int $typingIndicatorTimeout
     */
	#[SpeakeasyMetadata('form:name=TypingIndicatorTimeout')]
    public ?int $typingIndicatorTimeout = null;
    
    /**
     * The list of WebHook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     * 
     * @var ?array<string> $webhookFilters
     */
	#[SpeakeasyMetadata('form:name=WebhookFilters')]
    public ?array $webhookFilters = null;
    
    /**
     * The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhookMethodEnum $webhookMethod
     */
	#[SpeakeasyMetadata('form:name=WebhookMethod')]
    public ?UpdateServiceUpdateServiceRequestWebhookMethodEnum $webhookMethod = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_add.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum $webhooksOnChannelAddMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelAdd.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum $webhooksOnChannelAddMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_channel_add` event using the `webhooks.on_channel_add.method` HTTP method.
     * 
     * @var ?string $webhooksOnChannelAddUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelAdd.Url')]
    public ?string $webhooksOnChannelAddUrl = null;
    
    /**
     * The URL of the webhook to call in response to the `on_channel_added` event`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum $webhooksOnChannelAddedMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelAdded.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum $webhooksOnChannelAddedMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_added.method` HTTP method.
     * 
     * @var ?string $webhooksOnChannelAddedUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelAdded.Url')]
    public ?string $webhooksOnChannelAddedUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_destroy.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum $webhooksOnChannelDestroyMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelDestroy.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum $webhooksOnChannelDestroyMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_channel_destroy` event using the `webhooks.on_channel_destroy.method` HTTP method.
     * 
     * @var ?string $webhooksOnChannelDestroyUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelDestroy.Url')]
    public ?string $webhooksOnChannelDestroyUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_destroyed.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum $webhooksOnChannelDestroyedMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelDestroyed.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum $webhooksOnChannelDestroyedMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_destroyed.method` HTTP method.
     * 
     * @var ?string $webhooksOnChannelDestroyedUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelDestroyed.Url')]
    public ?string $webhooksOnChannelDestroyedUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_update.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum $webhooksOnChannelUpdateMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelUpdate.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum $webhooksOnChannelUpdateMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_channel_update` event using the `webhooks.on_channel_update.method` HTTP method.
     * 
     * @var ?string $webhooksOnChannelUpdateUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelUpdate.Url')]
    public ?string $webhooksOnChannelUpdateUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum $webhooksOnChannelUpdatedMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelUpdated.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum $webhooksOnChannelUpdatedMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.
     * 
     * @var ?string $webhooksOnChannelUpdatedUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnChannelUpdated.Url')]
    public ?string $webhooksOnChannelUpdatedUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_member_add.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum $webhooksOnMemberAddMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMemberAdd.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum $webhooksOnMemberAddMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_member_add` event using the `webhooks.on_member_add.method` HTTP method.
     * 
     * @var ?string $webhooksOnMemberAddUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMemberAdd.Url')]
    public ?string $webhooksOnMemberAddUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum $webhooksOnMemberAddedMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMemberAdded.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum $webhooksOnMemberAddedMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.
     * 
     * @var ?string $webhooksOnMemberAddedUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMemberAdded.Url')]
    public ?string $webhooksOnMemberAddedUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_member_remove.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum $webhooksOnMemberRemoveMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMemberRemove.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum $webhooksOnMemberRemoveMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_member_remove` event using the `webhooks.on_member_remove.method` HTTP method.
     * 
     * @var ?string $webhooksOnMemberRemoveUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMemberRemove.Url')]
    public ?string $webhooksOnMemberRemoveUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_member_removed.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum $webhooksOnMemberRemovedMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMemberRemoved.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum $webhooksOnMemberRemovedMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_member_removed` event using the `webhooks.on_member_removed.method` HTTP method.
     * 
     * @var ?string $webhooksOnMemberRemovedUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMemberRemoved.Url')]
    public ?string $webhooksOnMemberRemovedUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_remove.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum $webhooksOnMessageRemoveMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageRemove.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum $webhooksOnMessageRemoveMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_message_remove` event using the `webhooks.on_message_remove.method` HTTP method.
     * 
     * @var ?string $webhooksOnMessageRemoveUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageRemove.Url')]
    public ?string $webhooksOnMessageRemoveUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_removed.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum $webhooksOnMessageRemovedMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageRemoved.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum $webhooksOnMessageRemovedMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_message_removed` event using the `webhooks.on_message_removed.method` HTTP method.
     * 
     * @var ?string $webhooksOnMessageRemovedUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageRemoved.Url')]
    public ?string $webhooksOnMessageRemovedUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_send.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum $webhooksOnMessageSendMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageSend.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum $webhooksOnMessageSendMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_message_send` event using the `webhooks.on_message_send.method` HTTP method.
     * 
     * @var ?string $webhooksOnMessageSendUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageSend.Url')]
    public ?string $webhooksOnMessageSendUrl = null;
    
    /**
     * The URL of the webhook to call in response to the `on_message_sent` event`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum $webhooksOnMessageSentMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageSent.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum $webhooksOnMessageSentMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_message_sent` event using the `webhooks.on_message_sent.method` HTTP method.
     * 
     * @var ?string $webhooksOnMessageSentUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageSent.Url')]
    public ?string $webhooksOnMessageSentUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_update.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum $webhooksOnMessageUpdateMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageUpdate.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum $webhooksOnMessageUpdateMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_message_update` event using the `webhooks.on_message_update.method` HTTP method.
     * 
     * @var ?string $webhooksOnMessageUpdateUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageUpdate.Url')]
    public ?string $webhooksOnMessageUpdateUrl = null;
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_updated.url`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum $webhooksOnMessageUpdatedMethod
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageUpdated.Method')]
    public ?UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum $webhooksOnMessageUpdatedMethod = null;
    
    /**
     * The URL of the webhook to call in response to the `on_message_updated` event using the `webhooks.on_message_updated.method` HTTP method.
     * 
     * @var ?string $webhooksOnMessageUpdatedUrl
     */
	#[SpeakeasyMetadata('form:name=Webhooks.OnMessageUpdated.Url')]
    public ?string $webhooksOnMessageUpdatedUrl = null;
    
	public function __construct()
	{
		$this->consumptionReportInterval = null;
		$this->defaultChannelCreatorRoleSid = null;
		$this->defaultChannelRoleSid = null;
		$this->defaultServiceRoleSid = null;
		$this->friendlyName = null;
		$this->limitsChannelMembers = null;
		$this->limitsUserChannels = null;
		$this->notificationsAddedToChannelEnabled = null;
		$this->notificationsAddedToChannelTemplate = null;
		$this->notificationsInvitedToChannelEnabled = null;
		$this->notificationsInvitedToChannelTemplate = null;
		$this->notificationsNewMessageEnabled = null;
		$this->notificationsNewMessageTemplate = null;
		$this->notificationsRemovedFromChannelEnabled = null;
		$this->notificationsRemovedFromChannelTemplate = null;
		$this->postWebhookUrl = null;
		$this->preWebhookUrl = null;
		$this->reachabilityEnabled = null;
		$this->readStatusEnabled = null;
		$this->typingIndicatorTimeout = null;
		$this->webhookFilters = null;
		$this->webhookMethod = null;
		$this->webhooksOnChannelAddMethod = null;
		$this->webhooksOnChannelAddUrl = null;
		$this->webhooksOnChannelAddedMethod = null;
		$this->webhooksOnChannelAddedUrl = null;
		$this->webhooksOnChannelDestroyMethod = null;
		$this->webhooksOnChannelDestroyUrl = null;
		$this->webhooksOnChannelDestroyedMethod = null;
		$this->webhooksOnChannelDestroyedUrl = null;
		$this->webhooksOnChannelUpdateMethod = null;
		$this->webhooksOnChannelUpdateUrl = null;
		$this->webhooksOnChannelUpdatedMethod = null;
		$this->webhooksOnChannelUpdatedUrl = null;
		$this->webhooksOnMemberAddMethod = null;
		$this->webhooksOnMemberAddUrl = null;
		$this->webhooksOnMemberAddedMethod = null;
		$this->webhooksOnMemberAddedUrl = null;
		$this->webhooksOnMemberRemoveMethod = null;
		$this->webhooksOnMemberRemoveUrl = null;
		$this->webhooksOnMemberRemovedMethod = null;
		$this->webhooksOnMemberRemovedUrl = null;
		$this->webhooksOnMessageRemoveMethod = null;
		$this->webhooksOnMessageRemoveUrl = null;
		$this->webhooksOnMessageRemovedMethod = null;
		$this->webhooksOnMessageRemovedUrl = null;
		$this->webhooksOnMessageSendMethod = null;
		$this->webhooksOnMessageSendUrl = null;
		$this->webhooksOnMessageSentMethod = null;
		$this->webhooksOnMessageSentUrl = null;
		$this->webhooksOnMessageUpdateMethod = null;
		$this->webhooksOnMessageUpdateUrl = null;
		$this->webhooksOnMessageUpdatedMethod = null;
		$this->webhooksOnMessageUpdatedUrl = null;
	}
}
