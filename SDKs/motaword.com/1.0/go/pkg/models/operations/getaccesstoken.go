// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAccessTokenSecurity struct {
	BasicAuth shared.SchemeBasicAuth `security:"scheme,type=http,subtype=basic"`
}

type GetAccessTokenRequestBody struct {
	// OAuth2 grant type. Supports 'client_credentials', 'password' or 'refresh_token', 'user_id' available.
	GrantType string `multipartForm:"name=grant_type"`
	// MW Account password (to be used in password grant type)
	Password *string `multipartForm:"name=password"`
	// Refresh token value for refresh token flow.
	RefreshToken *string `multipartForm:"name=refresh_token"`
	// Authorization scope. Use 'privileged' for private endpoints.
	Scope string `multipartForm:"name=scope"`
	// Value for user_id grant type flow.
	UserID *int64 `multipartForm:"name=user_id"`
	// MW Account email (to be used in password grant type)
	Username *string `multipartForm:"name=username"`
}

type GetAccessTokenRequest struct {
	Request  *GetAccessTokenRequestBody `request:"mediaType=multipart/form-data"`
	Security GetAccessTokenSecurity
}

type GetAccessTokenResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Authentication response
	Token *shared.Token
	// Authentication error - for vendor auth, it will also fail if their account is not approved yet. In that case, the error response will include "account_status" key.
	TokenError *shared.TokenError
}
