"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import execaction as shared_execaction
from ..shared import grpcaction as shared_grpcaction
from ..shared import httpgetaction as shared_httpgetaction
from ..shared import tcpsocketaction as shared_tcpsocketaction
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Probe:
    r"""Not supported by Cloud Run Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."""
    
    exec: Optional[shared_execaction.ExecAction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exec'), 'exclude': lambda f: f is None }})
    r"""Not supported by Cloud Run ExecAction describes a \\"run in container\\" action."""  
    failure_threshold: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureThreshold'), 'exclude': lambda f: f is None }})
    r"""(Optional) Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1."""  
    grpc: Optional[shared_grpcaction.GRPCAction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grpc'), 'exclude': lambda f: f is None }})
    r"""Not supported by Cloud Run GRPCAction describes an action involving a GRPC port."""  
    http_get: Optional[shared_httpgetaction.HTTPGetAction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('httpGet'), 'exclude': lambda f: f is None }})
    r"""Not supported by Cloud Run HTTPGetAction describes an action based on HTTP Get requests."""  
    initial_delay_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initialDelaySeconds'), 'exclude': lambda f: f is None }})
    r"""(Optional) Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"""  
    period_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('periodSeconds'), 'exclude': lambda f: f is None }})
    r"""(Optional) How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds."""  
    success_threshold: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('successThreshold'), 'exclude': lambda f: f is None }})
    r"""(Optional) Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 if set."""  
    tcp_socket: Optional[shared_tcpsocketaction.TCPSocketAction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tcpSocket'), 'exclude': lambda f: f is None }})
    r"""Not supported by Cloud Run TCPSocketAction describes an action based on opening a socket"""  
    timeout_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeoutSeconds'), 'exclude': lambda f: f is None }})
    r"""(Optional) Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"""  
    