"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ordercancellation as shared_ordercancellation
from ..shared import orderlineitemadjustment as shared_orderlineitemadjustment
from ..shared import orderlineitemproduct as shared_orderlineitemproduct
from ..shared import orderlineitemreturninfo as shared_orderlineitemreturninfo
from ..shared import orderlineitemshippingdetails as shared_orderlineitemshippingdetails
from ..shared import ordermerchantprovidedannotation as shared_ordermerchantprovidedannotation
from ..shared import orderreturn as shared_orderreturn
from ..shared import price as shared_price
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderLineItem:
    
    adjustments: Optional[list[shared_orderlineitemadjustment.OrderLineItemAdjustment]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adjustments'), 'exclude': lambda f: f is None }})
    r"""Price and tax adjustments applied on the line item."""  
    annotations: Optional[list[shared_ordermerchantprovidedannotation.OrderMerchantProvidedAnnotation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotations'), 'exclude': lambda f: f is None }})
    r"""Annotations that are attached to the line item."""  
    cancellations: Optional[list[shared_ordercancellation.OrderCancellation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancellations'), 'exclude': lambda f: f is None }})
    r"""Cancellations of the line item."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the line item."""  
    price: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})  
    product: Optional[shared_orderlineitemproduct.OrderLineItemProduct] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product'), 'exclude': lambda f: f is None }})  
    quantity_canceled: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantityCanceled'), 'exclude': lambda f: f is None }})
    r"""Number of items canceled."""  
    quantity_delivered: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantityDelivered'), 'exclude': lambda f: f is None }})
    r"""Number of items delivered."""  
    quantity_ordered: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantityOrdered'), 'exclude': lambda f: f is None }})
    r"""Number of items ordered."""  
    quantity_pending: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantityPending'), 'exclude': lambda f: f is None }})
    r"""Number of items pending."""  
    quantity_ready_for_pickup: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantityReadyForPickup'), 'exclude': lambda f: f is None }})
    r"""Number of items ready for pickup."""  
    quantity_returned: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantityReturned'), 'exclude': lambda f: f is None }})
    r"""Number of items returned."""  
    quantity_shipped: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantityShipped'), 'exclude': lambda f: f is None }})
    r"""Number of items shipped."""  
    quantity_undeliverable: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantityUndeliverable'), 'exclude': lambda f: f is None }})
    r"""Number of items undeliverable."""  
    return_info: Optional[shared_orderlineitemreturninfo.OrderLineItemReturnInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnInfo'), 'exclude': lambda f: f is None }})  
    returns: Optional[list[shared_orderreturn.OrderReturn]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returns'), 'exclude': lambda f: f is None }})
    r"""Returns of the line item."""  
    shipping_details: Optional[shared_orderlineitemshippingdetails.OrderLineItemShippingDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingDetails'), 'exclude': lambda f: f is None }})  
    tax: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tax'), 'exclude': lambda f: f is None }})  
    