"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import branchdiffsourcecodetype as shared_branchdiffsourcecodetype
from ..shared import commitdiffsourcecodetype as shared_commitdiffsourcecodetype
from ..shared import repositoryheadsourcecodetype as shared_repositoryheadsourcecodetype
from ..shared import requestmetadata as shared_requestmetadata
from ..shared import s3bucketrepository as shared_s3bucketrepository
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceCodeType:
    r"""Specifies the source code that is analyzed in a code review."""
    
    branch_diff: Optional[shared_branchdiffsourcecodetype.BranchDiffSourceCodeType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BranchDiff'), 'exclude': lambda f: f is None }})  
    commit_diff: Optional[shared_commitdiffsourcecodetype.CommitDiffSourceCodeType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CommitDiff'), 'exclude': lambda f: f is None }})  
    repository_head: Optional[shared_repositoryheadsourcecodetype.RepositoryHeadSourceCodeType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RepositoryHead'), 'exclude': lambda f: f is None }})
    r"""A <a href=\\"https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_SourceCodeType\\">SourceCodeType</a> that specifies the tip of a branch in an associated repository."""  
    request_metadata: Optional[shared_requestmetadata.RequestMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequestMetadata'), 'exclude': lambda f: f is None }})  
    s3_bucket_repository: Optional[shared_s3bucketrepository.S3BucketRepository] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3BucketRepository'), 'exclude': lambda f: f is None }})  
    