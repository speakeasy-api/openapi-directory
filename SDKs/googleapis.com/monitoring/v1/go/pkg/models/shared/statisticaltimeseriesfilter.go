// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StatisticalTimeSeriesFilterRankingMethodEnum - rankingMethod is applied to a set of time series, and then the produced value for each individual time series is used to compare a given time series to others. These are methods that cannot be applied stream-by-stream, but rather require the full context of a request to evaluate time series.
type StatisticalTimeSeriesFilterRankingMethodEnum string

const (
	StatisticalTimeSeriesFilterRankingMethodEnumMethodUnspecified    StatisticalTimeSeriesFilterRankingMethodEnum = "METHOD_UNSPECIFIED"
	StatisticalTimeSeriesFilterRankingMethodEnumMethodClusterOutlier StatisticalTimeSeriesFilterRankingMethodEnum = "METHOD_CLUSTER_OUTLIER"
)

func (e *StatisticalTimeSeriesFilterRankingMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METHOD_UNSPECIFIED":
		fallthrough
	case "METHOD_CLUSTER_OUTLIER":
		*e = StatisticalTimeSeriesFilterRankingMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StatisticalTimeSeriesFilterRankingMethodEnum: %s", s)
	}
}

// StatisticalTimeSeriesFilter - A filter that ranks streams based on their statistical relation to other streams in a request. Note: This field is deprecated and completely ignored by the API.
type StatisticalTimeSeriesFilter struct {
	// How many time series to output.
	NumTimeSeries *int `json:"numTimeSeries,omitempty"`
	// rankingMethod is applied to a set of time series, and then the produced value for each individual time series is used to compare a given time series to others. These are methods that cannot be applied stream-by-stream, but rather require the full context of a request to evaluate time series.
	RankingMethod *StatisticalTimeSeriesFilterRankingMethodEnum `json:"rankingMethod,omitempty"`
}
