// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReactionsListForTeamDiscussionLegacyContentEnum - Returns a single [reaction type](https://docs.github.com/enterprise-server@3.1/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion.
type ReactionsListForTeamDiscussionLegacyContentEnum string

const (
	ReactionsListForTeamDiscussionLegacyContentEnumPlus1    ReactionsListForTeamDiscussionLegacyContentEnum = "+1"
	ReactionsListForTeamDiscussionLegacyContentEnumMinus1   ReactionsListForTeamDiscussionLegacyContentEnum = "-1"
	ReactionsListForTeamDiscussionLegacyContentEnumLaugh    ReactionsListForTeamDiscussionLegacyContentEnum = "laugh"
	ReactionsListForTeamDiscussionLegacyContentEnumConfused ReactionsListForTeamDiscussionLegacyContentEnum = "confused"
	ReactionsListForTeamDiscussionLegacyContentEnumHeart    ReactionsListForTeamDiscussionLegacyContentEnum = "heart"
	ReactionsListForTeamDiscussionLegacyContentEnumHooray   ReactionsListForTeamDiscussionLegacyContentEnum = "hooray"
	ReactionsListForTeamDiscussionLegacyContentEnumRocket   ReactionsListForTeamDiscussionLegacyContentEnum = "rocket"
	ReactionsListForTeamDiscussionLegacyContentEnumEyes     ReactionsListForTeamDiscussionLegacyContentEnum = "eyes"
)

func (e ReactionsListForTeamDiscussionLegacyContentEnum) ToPointer() *ReactionsListForTeamDiscussionLegacyContentEnum {
	return &e
}

func (e *ReactionsListForTeamDiscussionLegacyContentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "+1":
		fallthrough
	case "-1":
		fallthrough
	case "laugh":
		fallthrough
	case "confused":
		fallthrough
	case "heart":
		fallthrough
	case "hooray":
		fallthrough
	case "rocket":
		fallthrough
	case "eyes":
		*e = ReactionsListForTeamDiscussionLegacyContentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReactionsListForTeamDiscussionLegacyContentEnum: %v", v)
	}
}

type ReactionsListForTeamDiscussionLegacyRequest struct {
	// Returns a single [reaction type](https://docs.github.com/enterprise-server@3.1/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion.
	Content *ReactionsListForTeamDiscussionLegacyContentEnum `queryParam:"style=form,explode=true,name=content"`
	// The number that identifies the discussion.
	DiscussionNumber int64 `pathParam:"style=simple,explode=false,name=discussion_number"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The unique identifier of the team.
	TeamID int64 `pathParam:"style=simple,explode=false,name=team_id"`
}

type ReactionsListForTeamDiscussionLegacyResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Reactions []shared.Reaction
}
