"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import page as shared_page
from ..shared import validation_error as shared_validation_error
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReposCreatePagesSiteRequestBodySourceBranchEnum(str, Enum):
    r"""The repository branch used to publish your site's source files. Can be either `master` or `gh-pages`."""
    MASTER = 'master'
    GH_PAGES = 'gh-pages'

class ReposCreatePagesSiteRequestBodySourcePathEnum(str, Enum):
    r"""The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`."""
    ROOT_ = '/'
    ROOT_DOCS = '/docs'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReposCreatePagesSiteRequestBodySource:
    r"""The source branch and directory used to publish your Pages site."""
    
    branch: ReposCreatePagesSiteRequestBodySourceBranchEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('branch') }})
    r"""The repository branch used to publish your site's source files. Can be either `master` or `gh-pages`."""  
    path: Optional[ReposCreatePagesSiteRequestBodySourcePathEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""The repository directory that includes the source files for the Pages site. When `branch` is `master`, you can change `path` to `/docs`. When `branch` is `gh-pages`, you are unable to specify a `path` other than `/`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReposCreatePagesSiteRequestBody:
    r"""The source branch and directory used to publish your Pages site."""
    
    source: ReposCreatePagesSiteRequestBodySource = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})
    r"""The source branch and directory used to publish your Pages site."""  
    

@dataclasses.dataclass
class ReposCreatePagesSiteRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})  
    request_body: ReposCreatePagesSiteRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReposCreatePagesSite415ApplicationJSON:
    r"""Preview header missing"""
    
    documentation_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentation_url') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclasses.dataclass
class ReposCreatePagesSiteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Conflict"""  
    page: Optional[shared_page.Page] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    repos_create_pages_site_415_application_json_object: Optional[ReposCreatePagesSite415ApplicationJSON] = dataclasses.field(default=None)
    r"""Preview header missing"""  
    validation_error: Optional[shared_validation_error.ValidationError] = dataclasses.field(default=None)
    r"""Validation failed"""  
    