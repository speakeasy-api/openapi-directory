// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ChangeRequestDetailsPathParams struct {
	ChangeRequestID int64 `pathParam:"style=simple,explode=false,name=changeRequestId"`
}

type ChangeRequestDetailsRequest struct {
	PathParams ChangeRequestDetailsPathParams
}

// ChangeRequestDetails200ApplicationJSONActionEnum - The id of the action
type ChangeRequestDetails200ApplicationJSONActionEnum string

const (
	ChangeRequestDetails200ApplicationJSONActionEnumChangeRequestDetails ChangeRequestDetails200ApplicationJSONActionEnum = "changeRequestDetails"
)

func (e *ChangeRequestDetails200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "changeRequestDetails":
		*e = ChangeRequestDetails200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChangeRequestDetails200ApplicationJSONActionEnum: %s", s)
	}
}

type ChangeRequestDetails200ApplicationJSONData struct {
	Rules []shared.ChangeRequest `json:"rules"`
}

// ChangeRequestDetails200ApplicationJSONResultEnum - Result of the request
type ChangeRequestDetails200ApplicationJSONResultEnum string

const (
	ChangeRequestDetails200ApplicationJSONResultEnumSuccess ChangeRequestDetails200ApplicationJSONResultEnum = "success"
	ChangeRequestDetails200ApplicationJSONResultEnumError   ChangeRequestDetails200ApplicationJSONResultEnum = "error"
)

func (e *ChangeRequestDetails200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ChangeRequestDetails200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChangeRequestDetails200ApplicationJSONResultEnum: %s", s)
	}
}

// ChangeRequestDetails200ApplicationJSON - Change requests information
type ChangeRequestDetails200ApplicationJSON struct {
	// The id of the action
	Action ChangeRequestDetails200ApplicationJSONActionEnum `json:"action"`
	Data   ChangeRequestDetails200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result ChangeRequestDetails200ApplicationJSONResultEnum `json:"result"`
}

type ChangeRequestDetailsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Change requests information
	ChangeRequestDetails200ApplicationJSONObject *ChangeRequestDetails200ApplicationJSON
}
