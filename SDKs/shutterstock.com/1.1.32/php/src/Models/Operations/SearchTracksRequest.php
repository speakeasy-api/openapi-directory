<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class SearchTracksRequest
{
    /**
     * Show tracks with one of the specified artist names or IDs
     * 
     * @var ?array<string> $artists
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=artists')]
    public ?array $artists = null;
    
    /**
     * (Deprecated; use bpm_from and bpm_to instead) Show tracks with the specified beats per minute
     * 
     * @var ?int $bpm
     * @deprecated this field will be removed in a future release, please migrate away from it as soon as possible
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=bpm')]
    public ?int $bpm = null;
    
    /**
     * Show tracks with the specified beats per minute or faster
     * 
     * @var ?int $bpmFrom
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=bpm_from')]
    public ?int $bpmFrom = null;
    
    /**
     * Show tracks with the specified beats per minute or slower
     * 
     * @var ?int $bpmTo
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=bpm_to')]
    public ?int $bpmTo = null;
    
    /**
     * Show tracks with the specified duration in seconds
     * 
     * @var ?int $duration
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=duration')]
    public ?int $duration = null;
    
    /**
     * Show tracks with the specified duration or longer in seconds
     * 
     * @var ?int $durationFrom
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=duration_from')]
    public ?int $durationFrom = null;
    
    /**
     * Show tracks with the specified duration or shorter in seconds
     * 
     * @var ?int $durationTo
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=duration_to')]
    public ?int $durationTo = null;
    
    /**
     * Fields to display in the response; see the documentation for the fields parameter in the overview section
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * Show tracks with each of the specified genres; to get the list of genres, use `GET /v2/audio/genres`
     * 
     * @var ?array<string> $genre
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=genre')]
    public ?array $genre = null;
    
    /**
     * Show tracks with each of the specified instruments; to get the list of instruments, use `GET /v2/audio/instruments`
     * 
     * @var ?array<string> $instruments
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=instruments')]
    public ?array $instruments = null;
    
    /**
     * Show instrumental music only
     * 
     * @var ?bool $isInstrumental
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_instrumental')]
    public ?bool $isInstrumental = null;
    
    /**
     * Which language to search in
     * 
     * @var ?string $language
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=language')]
    public ?string $language = null;
    
    /**
     * Which library to search
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchTracksLibraryEnum $library
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=library')]
    public ?SearchTracksLibraryEnum $library = null;
    
    /**
     * Show tracks with each of the specified moods; to get the list of moods, use `GET /v2/audio/moods`
     * 
     * @var ?array<string> $moods
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=moods')]
    public ?array $moods = null;
    
    /**
     * Page number
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Number of results per page
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * One or more search terms separated by spaces
     * 
     * @var ?string $query
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;
    
    /**
     * Sort by
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchTracksSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?SearchTracksSortEnum $sort = null;
    
    /**
     * Sort order
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchTracksSortOrderEnum $sortOrder
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_order')]
    public ?SearchTracksSortOrderEnum $sortOrder = null;
    
    /**
     * Amount of detail to render in the response
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchTracksViewEnum $view
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=view')]
    public ?SearchTracksViewEnum $view = null;
    
    /**
     * Show tracks with the specified vocal description (male, female)
     * 
     * @var ?string $vocalDescription
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vocal_description')]
    public ?string $vocalDescription = null;
    
	public function __construct()
	{
		$this->artists = null;
		$this->bpm = null;
		$this->bpmFrom = null;
		$this->bpmTo = null;
		$this->duration = null;
		$this->durationFrom = null;
		$this->durationTo = null;
		$this->fields = null;
		$this->genre = null;
		$this->instruments = null;
		$this->isInstrumental = null;
		$this->language = null;
		$this->library = null;
		$this->moods = null;
		$this->page = null;
		$this->perPage = null;
		$this->query = null;
		$this->sort = null;
		$this->sortOrder = null;
		$this->view = null;
		$this->vocalDescription = null;
	}
}
