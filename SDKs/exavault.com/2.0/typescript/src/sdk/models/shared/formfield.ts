/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Advanced field settings
 */
export class FormFieldSettings extends SpeakeasyBase {
  /**
   * Secondary description of field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Whether this field must be completed before form can be submitted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isRequired" })
  isRequired?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "senderEmail" })
  senderEmail?: boolean;

  /**
   * Whether to place submitted files into a subfolder named the contents of this field. Only takes effect when the `fileDropCreateFolders` parameter on the receive folder is `true`. `isRequired` must be set to `true` if this setting is `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useAsFolderName" })
  useAsFolderName?: boolean;

  /**
   * How much of the available width the field should occupy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: number;
}

/**
 * Field type
 */
export enum FormFieldTypeEnum {
  Email = "email",
  Textarea = "textarea",
  Name = "name",
  Text = "text",
}

export class FormField extends SpeakeasyBase {
  /**
   * ID of the form field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Label of the field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Order that field appears on the form, starting from 0
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: number;

  /**
   * Advanced field settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "settings" })
  @Type(() => FormFieldSettings)
  settings?: FormFieldSettings;

  /**
   * Field type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: FormFieldTypeEnum;
}
