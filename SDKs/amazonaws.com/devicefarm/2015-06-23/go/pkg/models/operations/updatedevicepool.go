// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDevicePoolXAmzTargetEnum
type UpdateDevicePoolXAmzTargetEnum string

const (
	UpdateDevicePoolXAmzTargetEnumDeviceFarm20150623UpdateDevicePool UpdateDevicePoolXAmzTargetEnum = "DeviceFarm_20150623.UpdateDevicePool"
)

func (e UpdateDevicePoolXAmzTargetEnum) ToPointer() *UpdateDevicePoolXAmzTargetEnum {
	return &e
}

func (e *UpdateDevicePoolXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.UpdateDevicePool":
		*e = UpdateDevicePoolXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDevicePoolXAmzTargetEnum: %v", v)
	}
}

type UpdateDevicePoolRequest struct {
	UpdateDevicePoolRequest shared.UpdateDevicePoolRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              UpdateDevicePoolXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateDevicePoolResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceAccountException
	ServiceAccountException interface{}
	// Success
	UpdateDevicePoolResult *shared.UpdateDevicePoolResult
}
