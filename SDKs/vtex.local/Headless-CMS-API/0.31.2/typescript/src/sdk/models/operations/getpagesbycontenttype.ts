/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetPagesbyContentTypeRequest extends SpeakeasyBase {
  /**
   * Builder ID specified in the settings of the CMS app.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=builderId",
  })
  builderId: string;

  /**
   * Content Type identifier defined in the FastStore project.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=content-type",
  })
  contentType: string;

  /**
   * Filter results by a property of the page (e.g., `filters[status]`) or by a nested custom field of the `parameters` object (e.g., `filters[parameters.collection.sort]`).
   *
   * @remarks
   * *Replace {field} with the desired property.*
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filters[{field}]",
  })
  filtersField?: string;

  /**
   * Release ID presented in the URL path of a CMS preview.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=releaseId",
  })
  releaseId?: string;

  /**
   * Version ID presented in the URL path of a CMS preview.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=versionId",
  })
  versionId?: string;
}

/**
 * Object with data about a specific section.
 */
export class GetPagesbyContentType200ApplicationJSONDataSections extends SpeakeasyBase {
  /**
   * Custom field values of the Section. Varies depending on the Section schema defined in the FastStore project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: Record<string, any>;

  /**
   * Section ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Section name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with data from a specific page.
 */
export class GetPagesbyContentType200ApplicationJSONData extends SpeakeasyBase {
  /**
   * Document ID presented in the URL path of a CMS preview.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the page created via the CMS interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Object with the configuration values of a `configurationSchemaSets` tab. Varies depending on the Content Type schema defined in the FastStore project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  parameters?: Record<string, any>;

  /**
   * Sections that compose the page.
   */
  @SpeakeasyMetadata({
    elemType: GetPagesbyContentType200ApplicationJSONDataSections,
  })
  @Expose({ name: "sections" })
  @Type(() => GetPagesbyContentType200ApplicationJSONDataSections)
  sections?: GetPagesbyContentType200ApplicationJSONDataSections[];

  /**
   * Current status of the page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Name of the Content Type defined in the FastStore project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Version ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "versionId" })
  versionId?: string;

  /**
   * Version status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "versionStatus" })
  versionStatus?: string;
}

/**
 * OK
 */
export class GetPagesbyContentType200ApplicationJSON extends SpeakeasyBase {
  /**
   * Array with data from all pages of the given Content Type.
   */
  @SpeakeasyMetadata({ elemType: GetPagesbyContentType200ApplicationJSONData })
  @Expose({ name: "data" })
  @Type(() => GetPagesbyContentType200ApplicationJSONData)
  data?: GetPagesbyContentType200ApplicationJSONData[];

  /**
   * Indicates if there are more items to fetch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasNextPage" })
  hasNextPage?: boolean;

  /**
   * Total number of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalItems" })
  totalItems?: number;
}

export class GetPagesbyContentTypeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getPagesbyContentType200ApplicationJSONObject?: GetPagesbyContentType200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
