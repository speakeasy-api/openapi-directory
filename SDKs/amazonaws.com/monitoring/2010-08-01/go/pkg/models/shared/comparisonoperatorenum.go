// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComparisonOperatorEnum string

const (
	ComparisonOperatorEnumGreaterThanOrEqualToThreshold            ComparisonOperatorEnum = "GreaterThanOrEqualToThreshold"
	ComparisonOperatorEnumGreaterThanThreshold                     ComparisonOperatorEnum = "GreaterThanThreshold"
	ComparisonOperatorEnumLessThanThreshold                        ComparisonOperatorEnum = "LessThanThreshold"
	ComparisonOperatorEnumLessThanOrEqualToThreshold               ComparisonOperatorEnum = "LessThanOrEqualToThreshold"
	ComparisonOperatorEnumLessThanLowerOrGreaterThanUpperThreshold ComparisonOperatorEnum = "LessThanLowerOrGreaterThanUpperThreshold"
	ComparisonOperatorEnumLessThanLowerThreshold                   ComparisonOperatorEnum = "LessThanLowerThreshold"
	ComparisonOperatorEnumGreaterThanUpperThreshold                ComparisonOperatorEnum = "GreaterThanUpperThreshold"
)

func (e *ComparisonOperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GreaterThanOrEqualToThreshold":
		fallthrough
	case "GreaterThanThreshold":
		fallthrough
	case "LessThanThreshold":
		fallthrough
	case "LessThanOrEqualToThreshold":
		fallthrough
	case "LessThanLowerOrGreaterThanUpperThreshold":
		fallthrough
	case "LessThanLowerThreshold":
		fallthrough
	case "GreaterThanUpperThreshold":
		*e = ComparisonOperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ComparisonOperatorEnum: %s", s)
	}
}
