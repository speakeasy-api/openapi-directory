// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// EnterpriseAdminListPublicKeysSortEnum
type EnterpriseAdminListPublicKeysSortEnum string

const (
	EnterpriseAdminListPublicKeysSortEnumCreated  EnterpriseAdminListPublicKeysSortEnum = "created"
	EnterpriseAdminListPublicKeysSortEnumUpdated  EnterpriseAdminListPublicKeysSortEnum = "updated"
	EnterpriseAdminListPublicKeysSortEnumAccessed EnterpriseAdminListPublicKeysSortEnum = "accessed"
)

func (e *EnterpriseAdminListPublicKeysSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "created":
		fallthrough
	case "updated":
		fallthrough
	case "accessed":
		*e = EnterpriseAdminListPublicKeysSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseAdminListPublicKeysSortEnum: %s", s)
	}
}

type EnterpriseAdminListPublicKeysRequest struct {
	// The direction to sort the results by.
	Direction *shared.DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Only show public keys accessed after the given time.
	Since *string                                `queryParam:"style=form,explode=true,name=since"`
	Sort  *EnterpriseAdminListPublicKeysSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type EnterpriseAdminListPublicKeysResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	PublicKeyFulls []shared.PublicKeyFull
}
