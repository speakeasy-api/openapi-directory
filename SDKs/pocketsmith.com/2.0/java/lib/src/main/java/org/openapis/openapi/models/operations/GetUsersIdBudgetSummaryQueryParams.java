/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetUsersIdBudgetSummaryQueryParams {
    /**
     * The date to stop analysing the budget from. This will be bumped out to make full periods as necessary.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end_date")
    public String endDate;
    public GetUsersIdBudgetSummaryQueryParams withEndDate(String endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * The period interval, e.g. if the interval is 2 and the period is weeks, the budget will be analysed fortnightly.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=interval")
    public Long interval;
    public GetUsersIdBudgetSummaryQueryParams withInterval(Long interval) {
        this.interval = interval;
        return this;
    }
    
    /**
     * The period to analyse in, one of `weeks`, `months` or `years`. Also supported is `event`, although event period analysis is only possible when the budget events gathered align, so in this case where all categories are analysed together, it's highly unlikely that event period analysis will be possible.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=period")
    public GetUsersIdBudgetSummaryPeriodEnum period;
    public GetUsersIdBudgetSummaryQueryParams withPeriod(GetUsersIdBudgetSummaryPeriodEnum period) {
        this.period = period;
        return this;
    }
    
    /**
     * The date to start analysing the budget from. This will be bumped out to make full periods as necessary.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start_date")
    public String startDate;
    public GetUsersIdBudgetSummaryQueryParams withStartDate(String startDate) {
        this.startDate = startDate;
        return this;
    }
    
}
