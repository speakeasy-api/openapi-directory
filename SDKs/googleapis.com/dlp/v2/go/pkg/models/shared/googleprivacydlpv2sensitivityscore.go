// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GooglePrivacyDlpV2SensitivityScoreScoreEnum - The score applied to the resource.
type GooglePrivacyDlpV2SensitivityScoreScoreEnum string

const (
	GooglePrivacyDlpV2SensitivityScoreScoreEnumSensitivityScoreUnspecified GooglePrivacyDlpV2SensitivityScoreScoreEnum = "SENSITIVITY_SCORE_UNSPECIFIED"
	GooglePrivacyDlpV2SensitivityScoreScoreEnumSensitivityLow              GooglePrivacyDlpV2SensitivityScoreScoreEnum = "SENSITIVITY_LOW"
	GooglePrivacyDlpV2SensitivityScoreScoreEnumSensitivityModerate         GooglePrivacyDlpV2SensitivityScoreScoreEnum = "SENSITIVITY_MODERATE"
	GooglePrivacyDlpV2SensitivityScoreScoreEnumSensitivityHigh             GooglePrivacyDlpV2SensitivityScoreScoreEnum = "SENSITIVITY_HIGH"
)

func (e *GooglePrivacyDlpV2SensitivityScoreScoreEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SENSITIVITY_SCORE_UNSPECIFIED":
		fallthrough
	case "SENSITIVITY_LOW":
		fallthrough
	case "SENSITIVITY_MODERATE":
		fallthrough
	case "SENSITIVITY_HIGH":
		*e = GooglePrivacyDlpV2SensitivityScoreScoreEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2SensitivityScoreScoreEnum: %s", s)
	}
}

// GooglePrivacyDlpV2SensitivityScore - Score is a summary of all elements in the data profile. A higher number means more sensitive.
type GooglePrivacyDlpV2SensitivityScore struct {
	// The score applied to the resource.
	Score *GooglePrivacyDlpV2SensitivityScoreScoreEnum `json:"score,omitempty"`
}
