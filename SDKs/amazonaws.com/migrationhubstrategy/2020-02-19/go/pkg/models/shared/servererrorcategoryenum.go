// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServerErrorCategoryEnum string

const (
	ServerErrorCategoryEnumConnectivityError ServerErrorCategoryEnum = "CONNECTIVITY_ERROR"
	ServerErrorCategoryEnumCredentialError   ServerErrorCategoryEnum = "CREDENTIAL_ERROR"
	ServerErrorCategoryEnumPermissionError   ServerErrorCategoryEnum = "PERMISSION_ERROR"
	ServerErrorCategoryEnumArchitectureError ServerErrorCategoryEnum = "ARCHITECTURE_ERROR"
	ServerErrorCategoryEnumOtherError        ServerErrorCategoryEnum = "OTHER_ERROR"
)

func (e *ServerErrorCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONNECTIVITY_ERROR":
		fallthrough
	case "CREDENTIAL_ERROR":
		fallthrough
	case "PERMISSION_ERROR":
		fallthrough
	case "ARCHITECTURE_ERROR":
		fallthrough
	case "OTHER_ERROR":
		*e = ServerErrorCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServerErrorCategoryEnum: %s", s)
	}
}
