/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateOrganizationActionBatchRequestBodyActions extends SpeakeasyBase {
  /**
   * The body of the action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: Record<string, any>;

  /**
   * The operation to be used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operation" })
  operation: string;

  /**
   * Unique identifier for the resource to be acted on
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  resource: string;
}

export class CreateOrganizationActionBatchRequestBody extends SpeakeasyBase {
  /**
   * A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
   */
  @SpeakeasyMetadata({
    elemType: CreateOrganizationActionBatchRequestBodyActions,
  })
  @Expose({ name: "actions" })
  @Type(() => CreateOrganizationActionBatchRequestBodyActions)
  actions: CreateOrganizationActionBatchRequestBodyActions[];

  /**
   * Set to true for immediate execution. Set to false if the action should be previewed before executing. This property cannot be unset once it is true. Defaults to false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confirmed" })
  confirmed?: boolean;

  /**
   * Set to true to force the batch to run synchronous. There can be at most 20 actions in synchronous batch. Defaults to false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "synchronous" })
  synchronous?: boolean;
}

export class CreateOrganizationActionBatchRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateOrganizationActionBatchRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;
}

export class CreateOrganizationActionBatch201ApplicationJSONActions extends SpeakeasyBase {
  /**
   * The operation to be used by this action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operation" })
  operation: string;

  /**
   * Unique identifier for the resource to be acted on
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  resource: string;
}

export class CreateOrganizationActionBatch201ApplicationJSONStatusCreatedResources extends SpeakeasyBase {
  /**
   * ID of the created resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * URI, not including base, of the created resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}

/**
 * Status of action batch
 */
export class CreateOrganizationActionBatch201ApplicationJSONStatus extends SpeakeasyBase {
  /**
   * Flag describing whether all actions in the action batch have completed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completed" })
  completed?: boolean;

  /**
   * Resources created as a result of this action batch
   */
  @SpeakeasyMetadata({
    elemType:
      CreateOrganizationActionBatch201ApplicationJSONStatusCreatedResources,
  })
  @Expose({ name: "createdResources" })
  @Type(
    () => CreateOrganizationActionBatch201ApplicationJSONStatusCreatedResources
  )
  createdResources: CreateOrganizationActionBatch201ApplicationJSONStatusCreatedResources[];

  /**
   * List of errors encountered when running actions in the action batch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: string[];

  /**
   * Flag describing whether any actions in the action batch failed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failed" })
  failed?: boolean;
}

/**
 * Successful operation
 */
export class CreateOrganizationActionBatch201ApplicationJSON extends SpeakeasyBase {
  /**
   * A set of changes made as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)
   */
  @SpeakeasyMetadata({
    elemType: CreateOrganizationActionBatch201ApplicationJSONActions,
  })
  @Expose({ name: "actions" })
  @Type(() => CreateOrganizationActionBatch201ApplicationJSONActions)
  actions: CreateOrganizationActionBatch201ApplicationJSONActions[];

  /**
   * Flag describing whether the action should be previewed before executing or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confirmed" })
  confirmed?: boolean;

  /**
   * ID of the action batch. Can be used to check the status of the action batch at /organizations/{organizationId}/actionBatches/{actionBatchId}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * ID of the organization this action batch belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organizationId" })
  organizationId?: string;

  /**
   * Status of action batch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => CreateOrganizationActionBatch201ApplicationJSONStatus)
  status?: CreateOrganizationActionBatch201ApplicationJSONStatus;

  /**
   * Flag describing whether actions should run synchronously or asynchronously
   */
  @SpeakeasyMetadata()
  @Expose({ name: "synchronous" })
  synchronous?: boolean;
}

export class CreateOrganizationActionBatchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createOrganizationActionBatch201ApplicationJSONObject?: CreateOrganizationActionBatch201ApplicationJSON;
}
