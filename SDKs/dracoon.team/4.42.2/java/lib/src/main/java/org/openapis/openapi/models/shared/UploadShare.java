/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * UploadShare - Upload Share information
 */
public class UploadShare {
    /**
     * Share access key to generate secure link
     */
    @JsonProperty("accessKey")
    public String accessKey;
    public UploadShare withAccessKey(String accessKey) {
        this.accessKey = accessKey;
        return this;
    }
    
    /**
     * Total amount of existing files uploaded with this share.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cntFiles")
    public Integer cntFiles;
    public UploadShare withCntFiles(Integer cntFiles) {
        this.cntFiles = cntFiles;
        return this;
    }
    
    /**
     * Total amount of uploads conducted with this share.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cntUploads")
    public Integer cntUploads;
    public UploadShare withCntUploads(Integer cntUploads) {
        this.cntUploads = cntUploads;
        return this;
    }
    
    /**
     * Creation date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public UploadShare withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonProperty("createdBy")
    public UserInfo createdBy;
    public UploadShare withCreatedBy(UserInfo createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Upload Share URL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataUrl")
    public String dataUrl;
    public UploadShare withDataUrl(String dataUrl) {
        this.dataUrl = dataUrl;
        return this;
    }
    
    /**
     * Expiration date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expireAt")
    public OffsetDateTime expireAt;
    public UploadShare withExpireAt(OffsetDateTime expireAt) {
        this.expireAt = expireAt;
        return this;
    }
    
    /**
     * Number of days after which uploaded files expire
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filesExpiryPeriod")
    public Integer filesExpiryPeriod;
    public UploadShare withFilesExpiryPeriod(Integer filesExpiryPeriod) {
        this.filesExpiryPeriod = filesExpiryPeriod;
        return this;
    }
    
    /**
     * Share ID
     */
    @JsonProperty("id")
    public Long id;
    public UploadShare withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Internal notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalNotes")
    public String internalNotes;
    public UploadShare withInternalNotes(String internalNotes) {
        this.internalNotes = internalNotes;
        return this;
    }
    
    /**
     * Encryption state
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEncrypted")
    public Boolean isEncrypted;
    public UploadShare withIsEncrypted(Boolean isEncrypted) {
        this.isEncrypted = isEncrypted;
        return this;
    }
    
    /**
     * Is share protected by password
     */
    @JsonProperty("isProtected")
    public Boolean isProtected;
    public UploadShare withIsProtected(Boolean isProtected) {
        this.isProtected = isProtected;
        return this;
    }
    
    /**
     * Maximal total size of uploaded files (in bytes)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxSize")
    public Long maxSize;
    public UploadShare withMaxSize(Long maxSize) {
        this.maxSize = maxSize;
        return this;
    }
    
    /**
     * Maximal amount of files to upload
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxSlots")
    public Integer maxSlots;
    public UploadShare withMaxSlots(Integer maxSlots) {
        this.maxSlots = maxSlots;
        return this;
    }
    
    /**
     * Alias name
     */
    @JsonProperty("name")
    public String name;
    public UploadShare withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public UploadShare withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.20.0
     * 
     * Notify creator on every upload.
     */
    @JsonProperty("notifyCreator")
    public Boolean notifyCreator;
    public UploadShare withNotifyCreator(Boolean notifyCreator) {
        this.notifyCreator = notifyCreator;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * CSV string of recipient email addresses
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recipients")
    public String recipients;
    public UploadShare withRecipients(String recipients) {
        this.recipients = recipients;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Show creator first and last name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCreatorName")
    public Boolean showCreatorName;
    public UploadShare withShowCreatorName(Boolean showCreatorName) {
        this.showCreatorName = showCreatorName;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Show creator email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCreatorUsername")
    public Boolean showCreatorUsername;
    public UploadShare withShowCreatorUsername(Boolean showCreatorUsername) {
        this.showCreatorUsername = showCreatorUsername;
        return this;
    }
    
    /**
     * Allow display of already uploaded files
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showUploadedFiles")
    public Boolean showUploadedFiles;
    public UploadShare withShowUploadedFiles(Boolean showUploadedFiles) {
        this.showUploadedFiles = showUploadedFiles;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * CSV string of recipient MSISDNs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smsRecipients")
    public String smsRecipients;
    public UploadShare withSmsRecipients(String smsRecipients) {
        this.smsRecipients = smsRecipients;
        return this;
    }
    
    /**
     * Target room or folder ID
     */
    @JsonProperty("targetId")
    public Long targetId;
    public UploadShare withTargetId(Long targetId) {
        this.targetId = targetId;
        return this;
    }
    
    /**
     * Path to shared upload node
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetPath")
    public String targetPath;
    public UploadShare withTargetPath(String targetPath) {
        this.targetPath = targetPath;
        return this;
    }
    
    /**
     * Node type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetType")
    public String targetType;
    public UploadShare withTargetType(String targetType) {
        this.targetType = targetType;
        return this;
    }
    
    /**
     * Modification date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public UploadShare withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public UserInfo updatedBy;
    public UploadShare withUpdatedBy(UserInfo updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
}
