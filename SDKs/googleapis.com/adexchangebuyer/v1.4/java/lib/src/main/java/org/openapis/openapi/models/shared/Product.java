/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Product - A product is segment of inventory that a seller wishes to sell. It is associated with certain terms and targeting information which helps buyer know more about the inventory. Each field in a product can have one of the following setting:
 * 
 * (readonly) - It is an error to try and set this field. (buyer-readonly) - Only the seller can set this field. (seller-readonly) - Only the buyer can set this field. (updatable) - The field is updatable at all times by either buyer or the seller.
 */
public class Product {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billedBuyer")
    public Buyer billedBuyer;

    public Product withBilledBuyer(Buyer billedBuyer) {
        this.billedBuyer = billedBuyer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyer")
    public Buyer buyer;

    public Product withBuyer(Buyer buyer) {
        this.buyer = buyer;
        return this;
    }
    
    /**
     * Creation time in ms. since epoch (readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimeMs")
    public String creationTimeMs;

    public Product withCreationTimeMs(String creationTimeMs) {
        this.creationTimeMs = creationTimeMs;
        return this;
    }
    
    /**
     * Optional contact information for the creator of this product. (buyer-readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorContacts")
    public ContactInformation[] creatorContacts;

    public Product withCreatorContacts(ContactInformation[] creatorContacts) {
        this.creatorContacts = creatorContacts;
        return this;
    }
    
    /**
     * The role that created the offer. Set to BUYER for buyer initiated offers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorRole")
    public String creatorRole;

    public Product withCreatorRole(String creatorRole) {
        this.creatorRole = creatorRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryControl")
    public DeliveryControl deliveryControl;

    public Product withDeliveryControl(DeliveryControl deliveryControl) {
        this.deliveryControl = deliveryControl;
        return this;
    }
    
    /**
     * The proposed end time for the deal (ms since epoch) (buyer-readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flightEndTimeMs")
    public String flightEndTimeMs;

    public Product withFlightEndTimeMs(String flightEndTimeMs) {
        this.flightEndTimeMs = flightEndTimeMs;
        return this;
    }
    
    /**
     * Inventory availability dates. (times are in ms since epoch) The granularity is generally in the order of seconds. (buyer-readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flightStartTimeMs")
    public String flightStartTimeMs;

    public Product withFlightStartTimeMs(String flightStartTimeMs) {
        this.flightStartTimeMs = flightStartTimeMs;
        return this;
    }
    
    /**
     * If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasCreatorSignedOff")
    public Boolean hasCreatorSignedOff;

    public Product withHasCreatorSignedOff(Boolean hasCreatorSignedOff) {
        this.hasCreatorSignedOff = hasCreatorSignedOff;
        return this;
    }
    
    /**
     * What exchange will provide this inventory (readonly, except on create).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventorySource")
    public String inventorySource;

    public Product withInventorySource(String inventorySource) {
        this.inventorySource = inventorySource;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#product".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Product withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Optional List of labels for the product (optional, buyer-readonly).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public MarketplaceLabel[] labels;

    public Product withLabels(MarketplaceLabel[] labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Time of last update in ms. since epoch (readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastUpdateTimeMs")
    public String lastUpdateTimeMs;

    public Product withLastUpdateTimeMs(String lastUpdateTimeMs) {
        this.lastUpdateTimeMs = lastUpdateTimeMs;
        return this;
    }
    
    /**
     * Optional legacy offer id if this offer is a preferred deal offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legacyOfferId")
    public String legacyOfferId;

    public Product withLegacyOfferId(String legacyOfferId) {
        this.legacyOfferId = legacyOfferId;
        return this;
    }
    
    /**
     * Marketplace publisher profile Id. This Id differs from the regular publisher_profile_id in that 1. This is a new id, the old Id will be deprecated in 2017. 2. This id uniquely identifies a publisher profile by itself.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("marketplacePublisherProfileId")
    public String marketplacePublisherProfileId;

    public Product withMarketplacePublisherProfileId(String marketplacePublisherProfileId) {
        this.marketplacePublisherProfileId = marketplacePublisherProfileId;
        return this;
    }
    
    /**
     * The name for this product as set by the seller. (buyer-readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Product withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional private auction id if this offer is a private auction offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateAuctionId")
    public String privateAuctionId;

    public Product withPrivateAuctionId(String privateAuctionId) {
        this.privateAuctionId = privateAuctionId;
        return this;
    }
    
    /**
     * The unique id for the product (readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productId")
    public String productId;

    public Product withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * Id of the publisher profile for a given seller. A (seller.account_id, publisher_profile_id) pair uniquely identifies a publisher profile. Buyers can call the PublisherProfiles::List endpoint to get a list of publisher profiles for a given seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publisherProfileId")
    public String publisherProfileId;

    public Product withPublisherProfileId(String publisherProfileId) {
        this.publisherProfileId = publisherProfileId;
        return this;
    }
    
    /**
     * This message carries publisher provided forecasting information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publisherProvidedForecast")
    public PublisherProvidedForecast publisherProvidedForecast;

    public Product withPublisherProvidedForecast(PublisherProvidedForecast publisherProvidedForecast) {
        this.publisherProvidedForecast = publisherProvidedForecast;
        return this;
    }
    
    /**
     * The revision number of the product. (readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revisionNumber")
    public String revisionNumber;

    public Product withRevisionNumber(String revisionNumber) {
        this.revisionNumber = revisionNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seller")
    public Seller seller;

    public Product withSeller(Seller seller) {
        this.seller = seller;
        return this;
    }
    
    /**
     * Targeting that is shared between the buyer and the seller. Each targeting criteria has a specified key and for each key there is a list of inclusion value or exclusion values. (buyer-readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sharedTargetings")
    public SharedTargeting[] sharedTargetings;

    public Product withSharedTargetings(SharedTargeting[] sharedTargetings) {
        this.sharedTargetings = sharedTargetings;
        return this;
    }
    
    /**
     * The state of the product. (buyer-readonly)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public Product withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * The syndication product associated with the deal. (readonly, except on create)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("syndicationProduct")
    public String syndicationProduct;

    public Product withSyndicationProduct(String syndicationProduct) {
        this.syndicationProduct = syndicationProduct;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terms")
    public DealTerms terms;

    public Product withTerms(DealTerms terms) {
        this.terms = terms;
        return this;
    }
    
    /**
     * The web property code for the seller. This field is meant to be copied over as is when creating deals.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webPropertyCode")
    public String webPropertyCode;

    public Product withWebPropertyCode(String webPropertyCode) {
        this.webPropertyCode = webPropertyCode;
        return this;
    }
    
    public Product(){}
}
