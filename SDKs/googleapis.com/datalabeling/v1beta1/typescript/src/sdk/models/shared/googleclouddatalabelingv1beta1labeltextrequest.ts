/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDatalabelingV1beta1HumanAnnotationConfig } from "./googleclouddatalabelingv1beta1humanannotationconfig";
import { GoogleCloudDatalabelingV1beta1TextClassificationConfig } from "./googleclouddatalabelingv1beta1textclassificationconfig";
import { GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig } from "./googleclouddatalabelingv1beta1textentityextractionconfig";
import { Expose, Type } from "class-transformer";

/**
 * Required. The type of text labeling task.
 */
export enum GoogleCloudDatalabelingV1beta1LabelTextRequestFeatureEnum {
  FeatureUnspecified = "FEATURE_UNSPECIFIED",
  TextClassification = "TEXT_CLASSIFICATION",
  TextEntityExtraction = "TEXT_ENTITY_EXTRACTION",
}

/**
 * Request message for LabelText.
 */
export class GoogleCloudDatalabelingV1beta1LabelTextRequest extends SpeakeasyBase {
  /**
   * Configuration for how human labeling task should be done.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "basicConfig" })
  @Type(() => GoogleCloudDatalabelingV1beta1HumanAnnotationConfig)
  basicConfig?: GoogleCloudDatalabelingV1beta1HumanAnnotationConfig;

  /**
   * Required. The type of text labeling task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feature" })
  feature?: GoogleCloudDatalabelingV1beta1LabelTextRequestFeatureEnum;

  /**
   * Config for text classification human labeling task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textClassificationConfig" })
  @Type(() => GoogleCloudDatalabelingV1beta1TextClassificationConfig)
  textClassificationConfig?: GoogleCloudDatalabelingV1beta1TextClassificationConfig;

  /**
   * Config for text entity extraction human labeling task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textEntityExtractionConfig" })
  @Type(() => GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig)
  textEntityExtractionConfig?: GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig;
}
