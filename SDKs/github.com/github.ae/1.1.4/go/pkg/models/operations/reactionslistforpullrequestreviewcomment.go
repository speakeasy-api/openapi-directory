// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReactionsListForPullRequestReviewCommentContentEnum - Returns a single [reaction type](https://docs.github.com/github-ae@latest/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a pull request review comment.
type ReactionsListForPullRequestReviewCommentContentEnum string

const (
	ReactionsListForPullRequestReviewCommentContentEnumPlus1    ReactionsListForPullRequestReviewCommentContentEnum = "+1"
	ReactionsListForPullRequestReviewCommentContentEnumMinus1   ReactionsListForPullRequestReviewCommentContentEnum = "-1"
	ReactionsListForPullRequestReviewCommentContentEnumLaugh    ReactionsListForPullRequestReviewCommentContentEnum = "laugh"
	ReactionsListForPullRequestReviewCommentContentEnumConfused ReactionsListForPullRequestReviewCommentContentEnum = "confused"
	ReactionsListForPullRequestReviewCommentContentEnumHeart    ReactionsListForPullRequestReviewCommentContentEnum = "heart"
	ReactionsListForPullRequestReviewCommentContentEnumHooray   ReactionsListForPullRequestReviewCommentContentEnum = "hooray"
	ReactionsListForPullRequestReviewCommentContentEnumRocket   ReactionsListForPullRequestReviewCommentContentEnum = "rocket"
	ReactionsListForPullRequestReviewCommentContentEnumEyes     ReactionsListForPullRequestReviewCommentContentEnum = "eyes"
)

func (e ReactionsListForPullRequestReviewCommentContentEnum) ToPointer() *ReactionsListForPullRequestReviewCommentContentEnum {
	return &e
}

func (e *ReactionsListForPullRequestReviewCommentContentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "+1":
		fallthrough
	case "-1":
		fallthrough
	case "laugh":
		fallthrough
	case "confused":
		fallthrough
	case "heart":
		fallthrough
	case "hooray":
		fallthrough
	case "rocket":
		fallthrough
	case "eyes":
		*e = ReactionsListForPullRequestReviewCommentContentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReactionsListForPullRequestReviewCommentContentEnum: %v", v)
	}
}

type ReactionsListForPullRequestReviewCommentRequest struct {
	// The unique identifier of the comment.
	CommentID int64 `pathParam:"style=simple,explode=false,name=comment_id"`
	// Returns a single [reaction type](https://docs.github.com/github-ae@latest/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a pull request review comment.
	Content *ReactionsListForPullRequestReviewCommentContentEnum `queryParam:"style=form,explode=true,name=content"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReactionsListForPullRequestReviewCommentResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	Reactions []shared.Reaction
}
