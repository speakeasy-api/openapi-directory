// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum - Output only. The AttributeConfigLevel used for this catalog.
type GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum string

const (
	GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnumAttributeConfigLevelUnspecified GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum = "ATTRIBUTE_CONFIG_LEVEL_UNSPECIFIED"
	GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnumProductLevelAttributeConfig     GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum = "PRODUCT_LEVEL_ATTRIBUTE_CONFIG"
	GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnumCatalogLevelAttributeConfig     GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum = "CATALOG_LEVEL_ATTRIBUTE_CONFIG"
)

func (e GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum) ToPointer() *GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum {
	return &e
}

func (e *GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ATTRIBUTE_CONFIG_LEVEL_UNSPECIFIED":
		fallthrough
	case "PRODUCT_LEVEL_ATTRIBUTE_CONFIG":
		fallthrough
	case "CATALOG_LEVEL_ATTRIBUTE_CONFIG":
		*e = GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum: %v", v)
	}
}

// GoogleCloudRetailV2AttributesConfig - Catalog level attribute config.
type GoogleCloudRetailV2AttributesConfig struct {
	// Output only. The AttributeConfigLevel used for this catalog.
	AttributeConfigLevel *GoogleCloudRetailV2AttributesConfigAttributeConfigLevelEnum `json:"attributeConfigLevel,omitempty"`
	// Enable attribute(s) config at catalog level. For example, indexable, dynamic_facetable, or searchable for each attribute. The key is catalog attribute's name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number of catalog attributes allowed in a request is 1000.
	CatalogAttributes map[string]GoogleCloudRetailV2CatalogAttribute `json:"catalogAttributes,omitempty"`
	// Required. Immutable. The fully qualified resource name of the attribute config. Format: `projects/*/locations/*/catalogs/*/attributesConfig`
	Name *string `json:"name,omitempty"`
}
