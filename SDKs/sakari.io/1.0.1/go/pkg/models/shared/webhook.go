// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WebhookEventTypesEnum string

const (
	WebhookEventTypesEnumMessageReceived    WebhookEventTypesEnum = "message-received"
	WebhookEventTypesEnumMessageStatus      WebhookEventTypesEnum = "message-status"
	WebhookEventTypesEnumMessageSent        WebhookEventTypesEnum = "message-sent"
	WebhookEventTypesEnumConversationClosed WebhookEventTypesEnum = "conversation-closed"
	WebhookEventTypesEnumContactCreated     WebhookEventTypesEnum = "contact-created"
	WebhookEventTypesEnumContactUpdated     WebhookEventTypesEnum = "contact-updated"
	WebhookEventTypesEnumContactRemoved     WebhookEventTypesEnum = "contact-removed"
)

func (e *WebhookEventTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "message-received":
		fallthrough
	case "message-status":
		fallthrough
	case "message-sent":
		fallthrough
	case "conversation-closed":
		fallthrough
	case "contact-created":
		fallthrough
	case "contact-updated":
		fallthrough
	case "contact-removed":
		*e = WebhookEventTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookEventTypesEnum: %s", s)
	}
}

type Webhook struct {
	EventTypes []WebhookEventTypesEnum `json:"eventTypes,omitempty"`
	URL        *string                 `json:"url,omitempty"`
}
