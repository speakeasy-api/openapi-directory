// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// RestDescriptionAuthOauth2Scopes - The scope value.
type RestDescriptionAuthOauth2Scopes struct {
	// Description of scope.
	Description *string `json:"description,omitempty"`
}

// RestDescriptionAuthOauth2 - OAuth 2.0 authentication information.
type RestDescriptionAuthOauth2 struct {
	// Available OAuth 2.0 scopes.
	Scopes map[string]RestDescriptionAuthOauth2Scopes `json:"scopes,omitempty"`
}

// RestDescriptionAuth - Authentication information.
type RestDescriptionAuth struct {
	// OAuth 2.0 authentication information.
	Oauth2 *RestDescriptionAuthOauth2 `json:"oauth2,omitempty"`
}

// RestDescriptionIcons - Links to 16x16 and 32x32 icons representing the API.
type RestDescriptionIcons struct {
	// The URL of the 16x16 icon.
	X16 *string `json:"x16,omitempty"`
	// The URL of the 32x32 icon.
	X32 *string `json:"x32,omitempty"`
}

// RestDescription - Successful response
type RestDescription struct {
	// Authentication information.
	Auth *RestDescriptionAuth `json:"auth,omitempty"`
	// [DEPRECATED] The base path for REST requests.
	BasePath *string `json:"basePath,omitempty"`
	// [DEPRECATED] The base URL for REST requests.
	BaseURL *string `json:"baseUrl,omitempty"`
	// The path for REST batch requests.
	BatchPath *string `json:"batchPath,omitempty"`
	// Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.
	CanonicalName *string `json:"canonicalName,omitempty"`
	// The description of this API.
	Description *string `json:"description,omitempty"`
	// Indicate the version of the Discovery API used to generate this doc.
	DiscoveryVersion *string `json:"discoveryVersion,omitempty"`
	// A link to human readable documentation for the API.
	DocumentationLink *string `json:"documentationLink,omitempty"`
	// The ETag for this response.
	Etag *string `json:"etag,omitempty"`
	// Enable exponential backoff for suitable methods in the generated clients.
	ExponentialBackoffDefault *bool `json:"exponentialBackoffDefault,omitempty"`
	// A list of supported features for this API.
	Features []string `json:"features,omitempty"`
	// Links to 16x16 and 32x32 icons representing the API.
	Icons *RestDescriptionIcons `json:"icons,omitempty"`
	// The ID of this API.
	ID *string `json:"id,omitempty"`
	// The kind for this response.
	Kind *string `json:"kind,omitempty"`
	// Labels for the status of this API, such as labs or deprecated.
	Labels []string `json:"labels,omitempty"`
	// API-level methods for this API.
	Methods map[string]RestMethod `json:"methods,omitempty"`
	// The name of this API.
	Name *string `json:"name,omitempty"`
	// The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name.
	OwnerDomain *string `json:"ownerDomain,omitempty"`
	// The name of the owner of this API. See ownerDomain.
	OwnerName *string `json:"ownerName,omitempty"`
	// The package of the owner of this API. See ownerDomain.
	PackagePath *string `json:"packagePath,omitempty"`
	// Common parameters that apply across all apis.
	Parameters map[string]JSONSchema `json:"parameters,omitempty"`
	// The protocol described by this document.
	Protocol *string `json:"protocol,omitempty"`
	// The resources in this API.
	Resources map[string]RestResource `json:"resources,omitempty"`
	// The version of this API.
	Revision *string `json:"revision,omitempty"`
	// The root URL under which all API services live.
	RootURL *string `json:"rootUrl,omitempty"`
	// The schemas for this API.
	Schemas map[string]JSONSchema `json:"schemas,omitempty"`
	// The base path for all REST requests.
	ServicePath *string `json:"servicePath,omitempty"`
	// The title of this API.
	Title *string `json:"title,omitempty"`
	// The version of this API.
	Version       *string `json:"version,omitempty"`
	VersionModule *bool   `json:"version_module,omitempty"`
}
