/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CodespacesListDevcontainersInRepositoryForAuthenticatedUserRequest extends SpeakeasyBase {
  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * Page number of the results to fetch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results per page (max 100).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class CodespacesListDevcontainersInRepositoryForAuthenticatedUser200ApplicationJSONDevcontainers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;
}

/**
 * Response
 */
export class CodespacesListDevcontainersInRepositoryForAuthenticatedUser200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      CodespacesListDevcontainersInRepositoryForAuthenticatedUser200ApplicationJSONDevcontainers,
  })
  @Expose({ name: "devcontainers" })
  @Type(
    () =>
      CodespacesListDevcontainersInRepositoryForAuthenticatedUser200ApplicationJSONDevcontainers
  )
  devcontainers: CodespacesListDevcontainersInRepositoryForAuthenticatedUser200ApplicationJSONDevcontainers[];

  @SpeakeasyMetadata()
  @Expose({ name: "total_count" })
  totalCount: number;
}

export class CodespacesListDevcontainersInRepositoryForAuthenticatedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  codespacesListDevcontainersInRepositoryForAuthenticatedUser200ApplicationJSONObject?: CodespacesListDevcontainersInRepositoryForAuthenticatedUser200ApplicationJSON;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  scimError?: shared.ScimError;
}
