/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CustomAction - &lt;p&gt;An optional, non-standard action to use for stateless packet handling. You can define this in addition to the standard action that you must specify. &lt;/p&gt; &lt;p&gt;You define and name the custom actions that you want to be able to use, and then you reference them by name in your actions settings. &lt;/p&gt; &lt;p&gt;You can use custom actions in the following places: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;In a rule group's &lt;a&gt;StatelessRulesAndCustomActions&lt;/a&gt; specification. The custom actions are available for use by name inside the &lt;code&gt;StatelessRulesAndCustomActions&lt;/code&gt; where you define them. You can use them for your stateless rule actions to specify what to do with a packet that matches the rule's match attributes. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;In a &lt;a&gt;FirewallPolicy&lt;/a&gt; specification, in &lt;code&gt;StatelessCustomActions&lt;/code&gt;. The custom actions are available for use inside the policy where you define them. You can use them for the policy's default stateless actions settings to specify what to do with packets that don't match any of the policy's stateless rules. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
public class CustomAction {
    @JsonProperty("ActionDefinition")
    public ActionDefinition actionDefinition;

    public CustomAction withActionDefinition(ActionDefinition actionDefinition) {
        this.actionDefinition = actionDefinition;
        return this;
    }
    
    @JsonProperty("ActionName")
    public String actionName;

    public CustomAction withActionName(String actionName) {
        this.actionName = actionName;
        return this;
    }
    
    public CustomAction(@JsonProperty("ActionDefinition") ActionDefinition actionDefinition, @JsonProperty("ActionName") String actionName) {
        this.actionDefinition = actionDefinition;
        this.actionName = actionName;
  }
}
