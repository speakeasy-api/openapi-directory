/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Location - A person's location.
 */
public class Location {
    /**
     * The building identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildingId")
    public String buildingId;
    public Location withBuildingId(String buildingId) {
        this.buildingId = buildingId;
        return this;
    }
    
    /**
     * Whether the location is the current location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current")
    public Boolean current;
    public Location withCurrent(Boolean current) {
        this.current = current;
        return this;
    }
    
    /**
     * The individual desk location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deskCode")
    public String deskCode;
    public Location withDeskCode(String deskCode) {
        this.deskCode = deskCode;
        return this;
    }
    
    /**
     * The floor name or number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floor")
    public String floor;
    public Location withFloor(String floor) {
        this.floor = floor;
        return this;
    }
    
    /**
     * The floor section in `floor_name`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floorSection")
    public String floorSection;
    public Location withFloorSection(String floorSection) {
        this.floorSection = floorSection;
        return this;
    }
    
    /**
     * Metadata about a field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public FieldMetadata metadata;
    public Location withMetadata(FieldMetadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The type of the location. The type can be custom or one of these predefined values: * `desk` * `grewUp`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public Location withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * The free-form value of the location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;
    public Location withValue(String value) {
        this.value = value;
        return this;
    }
    
}
