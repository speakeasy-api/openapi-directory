/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CountsSummary - Summary counts of each Proton resource type.
 */
public class CountsSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("components")
    public ResourceCountsSummary components;

    public CountsSummary withComponents(ResourceCountsSummary components) {
        this.components = components;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentTemplates")
    public ResourceCountsSummary environmentTemplates;

    public CountsSummary withEnvironmentTemplates(ResourceCountsSummary environmentTemplates) {
        this.environmentTemplates = environmentTemplates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environments")
    public ResourceCountsSummary environments;

    public CountsSummary withEnvironments(ResourceCountsSummary environments) {
        this.environments = environments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pipelines")
    public ResourceCountsSummary pipelines;

    public CountsSummary withPipelines(ResourceCountsSummary pipelines) {
        this.pipelines = pipelines;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceInstances")
    public ResourceCountsSummary serviceInstances;

    public CountsSummary withServiceInstances(ResourceCountsSummary serviceInstances) {
        this.serviceInstances = serviceInstances;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceTemplates")
    public ResourceCountsSummary serviceTemplates;

    public CountsSummary withServiceTemplates(ResourceCountsSummary serviceTemplates) {
        this.serviceTemplates = serviceTemplates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("services")
    public ResourceCountsSummary services;

    public CountsSummary withServices(ResourceCountsSummary services) {
        this.services = services;
        return this;
    }
    
    public CountsSummary(){}
}
