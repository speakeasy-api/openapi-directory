/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateConnectorRequestBody {
    /**
     * Information about the capacity of the connector, whether it is auto scaled or provisioned.
     */
    @JsonProperty("capacity")
    public CreateConnectorRequestBodyCapacity capacity;

    public CreateConnectorRequestBody withCapacity(CreateConnectorRequestBodyCapacity capacity) {
        this.capacity = capacity;
        return this;
    }
    
    /**
     * A map of keys to values that represent the configuration for the connector.
     */
    @JsonProperty("connectorConfiguration")
    public java.util.Map<String, String> connectorConfiguration;

    public CreateConnectorRequestBody withConnectorConfiguration(java.util.Map<String, String> connectorConfiguration) {
        this.connectorConfiguration = connectorConfiguration;
        return this;
    }
    
    /**
     * A summary description of the connector.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorDescription")
    public String connectorDescription;

    public CreateConnectorRequestBody withConnectorDescription(String connectorDescription) {
        this.connectorDescription = connectorDescription;
        return this;
    }
    
    /**
     * The name of the connector.
     */
    @JsonProperty("connectorName")
    public String connectorName;

    public CreateConnectorRequestBody withConnectorName(String connectorName) {
        this.connectorName = connectorName;
        return this;
    }
    
    /**
     * The details of the Apache Kafka cluster to which the connector is connected.
     */
    @JsonProperty("kafkaCluster")
    public CreateConnectorRequestBodyKafkaCluster kafkaCluster;

    public CreateConnectorRequestBody withKafkaCluster(CreateConnectorRequestBodyKafkaCluster kafkaCluster) {
        this.kafkaCluster = kafkaCluster;
        return this;
    }
    
    /**
     * The client authentication information used in order to authenticate with the Apache Kafka cluster.
     */
    @JsonProperty("kafkaClusterClientAuthentication")
    public CreateConnectorRequestBodyKafkaClusterClientAuthentication kafkaClusterClientAuthentication;

    public CreateConnectorRequestBody withKafkaClusterClientAuthentication(CreateConnectorRequestBodyKafkaClusterClientAuthentication kafkaClusterClientAuthentication) {
        this.kafkaClusterClientAuthentication = kafkaClusterClientAuthentication;
        return this;
    }
    
    /**
     * Details of encryption in transit to the Apache Kafka cluster.
     */
    @JsonProperty("kafkaClusterEncryptionInTransit")
    public CreateConnectorRequestBodyKafkaClusterEncryptionInTransit kafkaClusterEncryptionInTransit;

    public CreateConnectorRequestBody withKafkaClusterEncryptionInTransit(CreateConnectorRequestBodyKafkaClusterEncryptionInTransit kafkaClusterEncryptionInTransit) {
        this.kafkaClusterEncryptionInTransit = kafkaClusterEncryptionInTransit;
        return this;
    }
    
    /**
     * The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
     */
    @JsonProperty("kafkaConnectVersion")
    public String kafkaConnectVersion;

    public CreateConnectorRequestBody withKafkaConnectVersion(String kafkaConnectVersion) {
        this.kafkaConnectVersion = kafkaConnectVersion;
        return this;
    }
    
    /**
     * Details about log delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logDelivery")
    public CreateConnectorRequestBodyLogDelivery logDelivery;

    public CreateConnectorRequestBody withLogDelivery(CreateConnectorRequestBodyLogDelivery logDelivery) {
        this.logDelivery = logDelivery;
        return this;
    }
    
    /**
     * Specifies which plugins to use for the connector.
     */
    @JsonProperty("plugins")
    public org.openapis.openapi.models.shared.Plugin[] plugins;

    public CreateConnectorRequestBody withPlugins(org.openapis.openapi.models.shared.Plugin[] plugins) {
        this.plugins = plugins;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
     */
    @JsonProperty("serviceExecutionRoleArn")
    public String serviceExecutionRoleArn;

    public CreateConnectorRequestBody withServiceExecutionRoleArn(String serviceExecutionRoleArn) {
        this.serviceExecutionRoleArn = serviceExecutionRoleArn;
        return this;
    }
    
    /**
     * The configuration of the workers, which are the processes that run the connector logic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workerConfiguration")
    public CreateConnectorRequestBodyWorkerConfiguration workerConfiguration;

    public CreateConnectorRequestBody withWorkerConfiguration(CreateConnectorRequestBodyWorkerConfiguration workerConfiguration) {
        this.workerConfiguration = workerConfiguration;
        return this;
    }
    
    public CreateConnectorRequestBody(@JsonProperty("capacity") CreateConnectorRequestBodyCapacity capacity, @JsonProperty("connectorConfiguration") java.util.Map<String, String> connectorConfiguration, @JsonProperty("connectorName") String connectorName, @JsonProperty("kafkaCluster") CreateConnectorRequestBodyKafkaCluster kafkaCluster, @JsonProperty("kafkaClusterClientAuthentication") CreateConnectorRequestBodyKafkaClusterClientAuthentication kafkaClusterClientAuthentication, @JsonProperty("kafkaClusterEncryptionInTransit") CreateConnectorRequestBodyKafkaClusterEncryptionInTransit kafkaClusterEncryptionInTransit, @JsonProperty("kafkaConnectVersion") String kafkaConnectVersion, @JsonProperty("plugins") org.openapis.openapi.models.shared.Plugin[] plugins, @JsonProperty("serviceExecutionRoleArn") String serviceExecutionRoleArn) {
        this.capacity = capacity;
        this.connectorConfiguration = connectorConfiguration;
        this.connectorName = connectorName;
        this.kafkaCluster = kafkaCluster;
        this.kafkaClusterClientAuthentication = kafkaClusterClientAuthentication;
        this.kafkaClusterEncryptionInTransit = kafkaClusterEncryptionInTransit;
        this.kafkaConnectVersion = kafkaConnectVersion;
        this.plugins = plugins;
        this.serviceExecutionRoleArn = serviceExecutionRoleArn;
  }
}
