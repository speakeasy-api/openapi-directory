/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AssetPropertyTimestamp - &lt;p&gt;A structure that contains timestamp information. For more information, see &lt;a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html"&gt;TimeInNanos&lt;/a&gt; in the &lt;i&gt;AWS IoT SiteWise API Reference&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You must use expressions for all parameters in &lt;code&gt;AssetPropertyTimestamp&lt;/code&gt;. The expressions accept literals, operators, functions, references, and substitution templates.&lt;/p&gt; &lt;p class="title"&gt; &lt;b&gt;Examples&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For literal values, the expressions must contain single quotes. For example, the value for the &lt;code&gt;timeInSeconds&lt;/code&gt; parameter can be &lt;code&gt;'1586400675'&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For references, you must specify either variables or input values. For example, the value for the &lt;code&gt;offsetInNanos&lt;/code&gt; parameter can be &lt;code&gt;$variable.time&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For a substitution template, you must use &lt;code&gt;${}&lt;/code&gt;, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.&lt;/p&gt; &lt;p&gt;In the following example, the value for the &lt;code&gt;timeInSeconds&lt;/code&gt; parameter uses a substitution template.&lt;/p&gt; &lt;p&gt; &lt;code&gt;'${$input.TemperatureInput.sensorData.timestamp / 1000}'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html"&gt;Expressions&lt;/a&gt; in the &lt;i&gt;AWS IoT Events Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */
public class AssetPropertyTimestamp {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offsetInNanos")
    public String offsetInNanos;

    public AssetPropertyTimestamp withOffsetInNanos(String offsetInNanos) {
        this.offsetInNanos = offsetInNanos;
        return this;
    }
    
    @JsonProperty("timeInSeconds")
    public String timeInSeconds;

    public AssetPropertyTimestamp withTimeInSeconds(String timeInSeconds) {
        this.timeInSeconds = timeInSeconds;
        return this;
    }
    
    public AssetPropertyTimestamp(@JsonProperty("timeInSeconds") String timeInSeconds) {
        this.timeInSeconds = timeInSeconds;
  }
}
