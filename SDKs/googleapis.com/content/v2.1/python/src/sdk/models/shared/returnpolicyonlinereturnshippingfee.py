"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import priceamount as shared_priceamount
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReturnPolicyOnlineReturnShippingFeeTypeEnum(str, Enum):
    r"""Type of return shipping fee."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    FIXED = 'FIXED'
    CUSTOMER_PAYING_ACTUAL_FEE = 'CUSTOMER_PAYING_ACTUAL_FEE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReturnPolicyOnlineReturnShippingFee:
    r"""The return shipping fee. This can either be a fixed fee or a boolean to indicate that the customer pays the actual shipping cost."""
    
    fixed_fee: Optional[shared_priceamount.PriceAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedFee'), 'exclude': lambda f: f is None }})
    r"""The price represented as a number and currency."""  
    type: Optional[ReturnPolicyOnlineReturnShippingFeeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of return shipping fee."""  
    