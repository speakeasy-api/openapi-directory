/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Value - Holder object for the value of a single field in a data point. A field value has a particular format and is only ever set to one of an integer or a floating point value.
 */
public class Value {
    /**
     * Floating point value. When this is set, other values must not be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fpVal")
    public Double fpVal;
    public Value withFpVal(Double fpVal) {
        this.fpVal = fpVal;
        return this;
    }
    
    /**
     * Integer value. When this is set, other values must not be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intVal")
    public Integer intVal;
    public Value withIntVal(Integer intVal) {
        this.intVal = intVal;
        return this;
    }
    
    /**
     * Map value. The valid key space and units for the corresponding value of each entry should be documented as part of the data type definition. Keys should be kept small whenever possible. Data streams with large keys and high data frequency may be down sampled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mapVal")
    public ValueMapValEntry[] mapVal;
    public Value withMapVal(ValueMapValEntry[] mapVal) {
        this.mapVal = mapVal;
        return this;
    }
    
    /**
     * String value. When this is set, other values must not be set. Strings should be kept small whenever possible. Data streams with large string values and high data frequency may be down sampled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringVal")
    public String stringVal;
    public Value withStringVal(String stringVal) {
        this.stringVal = stringVal;
        return this;
    }
    
}
