"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetOntologyTermGraphGraphTypeEnum(str, Enum):
    r"""graph type ('topology_graph', 'regulates_transitivity_graph' or 'neighborhood_graph')"""
    TOPOLOGY_GRAPH = 'topology_graph'
    REGULATES_TRANSITIVITY_GRAPH = 'regulates_transitivity_graph'
    NEIGHBORHOOD_GRAPH = 'neighborhood_graph'
    NEIGHBORHOOD_LIMITED_GRAPH = 'neighborhood_limited_graph'


@dataclasses.dataclass
class GetOntologyTermGraphRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""CURIE identifier of a GO term, e.g. GO:0000981"""  
    graph_type: Optional[GetOntologyTermGraphGraphTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'graph_type', 'style': 'form', 'explode': True }})
    r"""graph type ('topology_graph', 'regulates_transitivity_graph' or 'neighborhood_graph')"""  
    

@dataclasses.dataclass
class GetOntologyTermGraphResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    