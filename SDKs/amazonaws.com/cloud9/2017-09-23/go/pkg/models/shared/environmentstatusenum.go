// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnvironmentStatusEnum string

const (
	EnvironmentStatusEnumError      EnvironmentStatusEnum = "error"
	EnvironmentStatusEnumCreating   EnvironmentStatusEnum = "creating"
	EnvironmentStatusEnumConnecting EnvironmentStatusEnum = "connecting"
	EnvironmentStatusEnumReady      EnvironmentStatusEnum = "ready"
	EnvironmentStatusEnumStopping   EnvironmentStatusEnum = "stopping"
	EnvironmentStatusEnumStopped    EnvironmentStatusEnum = "stopped"
	EnvironmentStatusEnumDeleting   EnvironmentStatusEnum = "deleting"
)

func (e *EnvironmentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "error":
		fallthrough
	case "creating":
		fallthrough
	case "connecting":
		fallthrough
	case "ready":
		fallthrough
	case "stopping":
		fallthrough
	case "stopped":
		fallthrough
	case "deleting":
		*e = EnvironmentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentStatusEnum: %s", s)
	}
}
