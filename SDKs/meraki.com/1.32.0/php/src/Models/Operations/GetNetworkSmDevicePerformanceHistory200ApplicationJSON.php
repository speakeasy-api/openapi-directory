<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetNetworkSmDevicePerformanceHistory200ApplicationJSON
{
    /**
     * The percentage of CPU used as a decimal format.
     * 
     * @var ?float $cpuPercentUsed
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuPercentUsed')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cpuPercentUsed = null;
    
    /**
     * An object containing disk usage details.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkSmDevicePerformanceHistory200ApplicationJSONDiskUsage $diskUsage
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskUsage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkSmDevicePerformanceHistory200ApplicationJSONDiskUsage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkSmDevicePerformanceHistory200ApplicationJSONDiskUsage $diskUsage = null;
    
    /**
     * The active RAM on the device.
     * 
     * @var ?int $memActive
     */
	#[\JMS\Serializer\Annotation\SerializedName('memActive')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memActive = null;
    
    /**
     * Memory that is not yet in use by the system.
     * 
     * @var ?int $memFree
     */
	#[\JMS\Serializer\Annotation\SerializedName('memFree')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memFree = null;
    
    /**
     * The inactive RAM on the device.
     * 
     * @var ?int $memInactive
     */
	#[\JMS\Serializer\Annotation\SerializedName('memInactive')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memInactive = null;
    
    /**
     * Memory used for core OS functions on the device.
     * 
     * @var ?int $memWired
     */
	#[\JMS\Serializer\Annotation\SerializedName('memWired')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memWired = null;
    
    /**
     * Network bandwith received.
     * 
     * @var ?int $networkReceived
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkReceived')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $networkReceived = null;
    
    /**
     * Network bandwith transmitted.
     * 
     * @var ?int $networkSent
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkSent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $networkSent = null;
    
    /**
     * The amount of space being used on the startup disk to swap unused files to and from RAM.
     * 
     * @var ?int $swapUsed
     */
	#[\JMS\Serializer\Annotation\SerializedName('swapUsed')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $swapUsed = null;
    
    /**
     * The time at which the performance was measured.
     * 
     * @var ?string $ts
     */
	#[\JMS\Serializer\Annotation\SerializedName('ts')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ts = null;
    
	public function __construct()
	{
		$this->cpuPercentUsed = null;
		$this->diskUsage = null;
		$this->memActive = null;
		$this->memFree = null;
		$this->memInactive = null;
		$this->memWired = null;
		$this->networkReceived = null;
		$this->networkSent = null;
		$this->swapUsed = null;
		$this->ts = null;
	}
}
