"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awssnstopicsubscription as shared_awssnstopicsubscription
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsSnsTopicDetails:
    r"""Provides information about an Amazon SNS topic to which notifications can be published."""
    
    application_success_feedback_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApplicationSuccessFeedbackRoleArn'), 'exclude': lambda f: f is None }})  
    firehose_failure_feedback_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirehoseFailureFeedbackRoleArn'), 'exclude': lambda f: f is None }})  
    firehose_success_feedback_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirehoseSuccessFeedbackRoleArn'), 'exclude': lambda f: f is None }})  
    http_failure_feedback_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpFailureFeedbackRoleArn'), 'exclude': lambda f: f is None }})  
    http_success_feedback_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpSuccessFeedbackRoleArn'), 'exclude': lambda f: f is None }})  
    kms_master_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KmsMasterKeyId'), 'exclude': lambda f: f is None }})  
    owner: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Owner'), 'exclude': lambda f: f is None }})  
    sqs_failure_feedback_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SqsFailureFeedbackRoleArn'), 'exclude': lambda f: f is None }})  
    sqs_success_feedback_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SqsSuccessFeedbackRoleArn'), 'exclude': lambda f: f is None }})  
    subscription: Optional[list[shared_awssnstopicsubscription.AwsSnsTopicSubscription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Subscription'), 'exclude': lambda f: f is None }})  
    topic_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TopicName'), 'exclude': lambda f: f is None }})  
    