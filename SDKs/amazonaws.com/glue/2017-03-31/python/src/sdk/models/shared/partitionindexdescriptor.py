"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import backfillerror as shared_backfillerror
from ..shared import keyschemaelement as shared_keyschemaelement
from ..shared import partitionindexstatus_enum as shared_partitionindexstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PartitionIndexDescriptor:
    r"""A descriptor for a partition index in a table."""
    
    index_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IndexName') }})  
    index_status: shared_partitionindexstatus_enum.PartitionIndexStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IndexStatus') }})  
    keys: list[shared_keyschemaelement.KeySchemaElement] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Keys') }})  
    backfill_errors: Optional[list[shared_backfillerror.BackfillError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BackfillErrors'), 'exclude': lambda f: f is None }})  
    