<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Metadata - Commodity object for holding metadata on any entity. This object is inspired by Kubernetes metadata.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Metadata
{
    /**
     * Annotations of attached object
     * 
     * @var ?array<string, string> $annotations
     */
	#[\JMS\Serializer\Annotation\SerializedName('annotations')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $annotations = null;
    
    /**
     * Creation date of attached object
     * 
     * @var int $createdOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdOn')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $createdOn;
    
    /**
     * Labels put on attached object
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Last update of attached object
     * 
     * @var int $lastUpdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastUpdate')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $lastUpdate;
    
	public function __construct()
	{
		$this->annotations = null;
		$this->createdOn = 0;
		$this->labels = null;
		$this->lastUpdate = 0;
	}
}
