/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TemplateTypeEnum } from "./templatetypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * A summary of information about a provisioning template.
 */
export class ProvisioningTemplateSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "templateArn" })
  templateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "templateName" })
  templateName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: TemplateTypeEnum;
}
