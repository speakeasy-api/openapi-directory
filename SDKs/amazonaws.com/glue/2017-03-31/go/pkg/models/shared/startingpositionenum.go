// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StartingPositionEnum string

const (
	StartingPositionEnumLatest      StartingPositionEnum = "latest"
	StartingPositionEnumTrimHorizon StartingPositionEnum = "trim_horizon"
	StartingPositionEnumEarliest    StartingPositionEnum = "earliest"
)

func (e StartingPositionEnum) ToPointer() *StartingPositionEnum {
	return &e
}

func (e *StartingPositionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "latest":
		fallthrough
	case "trim_horizon":
		fallthrough
	case "earliest":
		*e = StartingPositionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartingPositionEnum: %v", v)
	}
}
