/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodes {
    /**
     * Quantity of an item that is available to be allocated to orders
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availToSellQty")
    public GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodesAvailToSellQty availToSellQty;

    public GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodes withAvailToSellQty(GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodesAvailToSellQty availToSellQty) {
        this.availToSellQty = availToSellQty;
        return this;
    }
    
    /**
     * Quantity of an item that is input by the seller
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputQty")
    public GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodesInputQty inputQty;

    public GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodes withInputQty(GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodesInputQty inputQty) {
        this.inputQty = inputQty;
        return this;
    }
    
    /**
     * Quantity that has been ordered by the customers but not yet shipped
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservedQty")
    public GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodesReservedQty reservedQty;

    public GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodes withReservedQty(GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodesReservedQty reservedQty) {
        this.reservedQty = reservedQty;
        return this;
    }
    
    /**
     * ShipNode Id of the ship node for which the inventory is requested
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipNode")
    public String shipNode;

    public GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodes withShipNode(String shipNode) {
        this.shipNode = shipNode;
        return this;
    }
    
    public GetMultiNodeInventoryForAllSkuAndAllShipNodes200ApplicationJSONElementsInventoriesNodes(){}
}
