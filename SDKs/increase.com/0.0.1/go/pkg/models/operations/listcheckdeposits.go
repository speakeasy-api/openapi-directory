// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListCheckDepositsQueryParams struct {
	AccountID           *string    `queryParam:"style=form,explode=true,name=account_id"`
	CreatedAtAfter      *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string    `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64     `queryParam:"style=form,explode=true,name=limit"`
}

type ListCheckDepositsRequest struct {
	QueryParams ListCheckDepositsQueryParams
}

type ListCheckDepositsDefaultApplicationJSON13StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListCheckDepositsDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ListCheckDepositsDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ListCheckDepositsDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON13TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON13TypeEnumRateLimitedError ListCheckDepositsDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ListCheckDepositsDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON13 struct {
	Detail     string                                              `json:"detail"`
	RetryAfter *int64                                              `json:"retry_after,omitempty"`
	Status     ListCheckDepositsDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                              `json:"title"`
	Type       ListCheckDepositsDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON12StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON12StatusEnumFourHundredAndThree ListCheckDepositsDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ListCheckDepositsDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListCheckDepositsDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON12TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON12TypeEnumPrivateFeatureError ListCheckDepositsDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ListCheckDepositsDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON12 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON11StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON11StatusEnumFourHundredAndFour ListCheckDepositsDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ListCheckDepositsDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListCheckDepositsDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON11TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON11TypeEnumObjectNotFoundError ListCheckDepositsDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ListCheckDepositsDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON11 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON10StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON10StatusEnumFourHundred ListCheckDepositsDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ListCheckDepositsDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListCheckDepositsDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON10TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON10TypeEnumMalformedRequestError ListCheckDepositsDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ListCheckDepositsDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON10 struct {
	Detail string                                              `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON9StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON9StatusEnumFourHundred ListCheckDepositsDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ListCheckDepositsDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListCheckDepositsDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON9TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON9TypeEnumInvalidParametersError ListCheckDepositsDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ListCheckDepositsDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                           `json:"errors,omitempty"`
	Status ListCheckDepositsDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON8StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON8StatusEnumFourHundredAndNine ListCheckDepositsDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ListCheckDepositsDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListCheckDepositsDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON8TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON8TypeEnumInvalidOperationError ListCheckDepositsDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ListCheckDepositsDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON8 struct {
	Detail string                                             `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON7StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON7StatusEnumFourHundredAndOne ListCheckDepositsDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ListCheckDepositsDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ListCheckDepositsDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON7TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListCheckDepositsDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ListCheckDepositsDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON7 struct {
	Detail string                                             `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON6StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON6StatusEnumFiveHundred ListCheckDepositsDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ListCheckDepositsDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ListCheckDepositsDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON6TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON6TypeEnumInternalServerError ListCheckDepositsDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ListCheckDepositsDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON6 struct {
	Detail string                                             `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON5StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON5StatusEnumFourHundredAndThree ListCheckDepositsDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ListCheckDepositsDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListCheckDepositsDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON5TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListCheckDepositsDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ListCheckDepositsDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON5 struct {
	Detail string                                             `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON4StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListCheckDepositsDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ListCheckDepositsDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ListCheckDepositsDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON4TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListCheckDepositsDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ListCheckDepositsDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON4 struct {
	Detail string                                             `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON3StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON3StatusEnumFourHundredAndNine ListCheckDepositsDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ListCheckDepositsDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListCheckDepositsDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON3TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListCheckDepositsDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ListCheckDepositsDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON3 struct {
	Detail string                                             `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON2StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON2StatusEnumFourHundredAndThree ListCheckDepositsDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ListCheckDepositsDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListCheckDepositsDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON2TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListCheckDepositsDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ListCheckDepositsDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON2 struct {
	Detail string                                             `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListCheckDepositsDefaultApplicationJSON1StatusEnum string

const (
	ListCheckDepositsDefaultApplicationJSON1StatusEnumFourHundredAndFour ListCheckDepositsDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ListCheckDepositsDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListCheckDepositsDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON1TypeEnum string

const (
	ListCheckDepositsDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListCheckDepositsDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ListCheckDepositsDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ListCheckDepositsDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCheckDepositsDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ListCheckDepositsDefaultApplicationJSON1 struct {
	Detail string                                             `json:"detail"`
	Status ListCheckDepositsDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCheckDepositsDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListCheckDepositsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Deposit List
	CheckDepositList *shared.CheckDepositList
	// Error
	Error interface{}
}
