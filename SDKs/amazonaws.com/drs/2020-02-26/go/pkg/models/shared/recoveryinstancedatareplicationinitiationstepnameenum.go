// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RecoveryInstanceDataReplicationInitiationStepNameEnum string

const (
	RecoveryInstanceDataReplicationInitiationStepNameEnumLinkFailbackClientWithRecoveryInstance        RecoveryInstanceDataReplicationInitiationStepNameEnum = "LINK_FAILBACK_CLIENT_WITH_RECOVERY_INSTANCE"
	RecoveryInstanceDataReplicationInitiationStepNameEnumCompleteVolumeMapping                         RecoveryInstanceDataReplicationInitiationStepNameEnum = "COMPLETE_VOLUME_MAPPING"
	RecoveryInstanceDataReplicationInitiationStepNameEnumEstablishRecoveryInstanceCommunication        RecoveryInstanceDataReplicationInitiationStepNameEnum = "ESTABLISH_RECOVERY_INSTANCE_COMMUNICATION"
	RecoveryInstanceDataReplicationInitiationStepNameEnumDownloadReplicationSoftwareToFailbackClient   RecoveryInstanceDataReplicationInitiationStepNameEnum = "DOWNLOAD_REPLICATION_SOFTWARE_TO_FAILBACK_CLIENT"
	RecoveryInstanceDataReplicationInitiationStepNameEnumConfigureReplicationSoftware                  RecoveryInstanceDataReplicationInitiationStepNameEnum = "CONFIGURE_REPLICATION_SOFTWARE"
	RecoveryInstanceDataReplicationInitiationStepNameEnumPairAgentWithReplicationSoftware              RecoveryInstanceDataReplicationInitiationStepNameEnum = "PAIR_AGENT_WITH_REPLICATION_SOFTWARE"
	RecoveryInstanceDataReplicationInitiationStepNameEnumEstablishAgentReplicatorSoftwareCommunication RecoveryInstanceDataReplicationInitiationStepNameEnum = "ESTABLISH_AGENT_REPLICATOR_SOFTWARE_COMMUNICATION"
	RecoveryInstanceDataReplicationInitiationStepNameEnumWait                                          RecoveryInstanceDataReplicationInitiationStepNameEnum = "WAIT"
	RecoveryInstanceDataReplicationInitiationStepNameEnumCreateSecurityGroup                           RecoveryInstanceDataReplicationInitiationStepNameEnum = "CREATE_SECURITY_GROUP"
	RecoveryInstanceDataReplicationInitiationStepNameEnumLaunchReplicationServer                       RecoveryInstanceDataReplicationInitiationStepNameEnum = "LAUNCH_REPLICATION_SERVER"
	RecoveryInstanceDataReplicationInitiationStepNameEnumBootReplicationServer                         RecoveryInstanceDataReplicationInitiationStepNameEnum = "BOOT_REPLICATION_SERVER"
	RecoveryInstanceDataReplicationInitiationStepNameEnumAuthenticateWithService                       RecoveryInstanceDataReplicationInitiationStepNameEnum = "AUTHENTICATE_WITH_SERVICE"
	RecoveryInstanceDataReplicationInitiationStepNameEnumDownloadReplicationSoftware                   RecoveryInstanceDataReplicationInitiationStepNameEnum = "DOWNLOAD_REPLICATION_SOFTWARE"
	RecoveryInstanceDataReplicationInitiationStepNameEnumCreateStagingDisks                            RecoveryInstanceDataReplicationInitiationStepNameEnum = "CREATE_STAGING_DISKS"
	RecoveryInstanceDataReplicationInitiationStepNameEnumAttachStagingDisks                            RecoveryInstanceDataReplicationInitiationStepNameEnum = "ATTACH_STAGING_DISKS"
	RecoveryInstanceDataReplicationInitiationStepNameEnumPairReplicationServerWithAgent                RecoveryInstanceDataReplicationInitiationStepNameEnum = "PAIR_REPLICATION_SERVER_WITH_AGENT"
	RecoveryInstanceDataReplicationInitiationStepNameEnumConnectAgentToReplicationServer               RecoveryInstanceDataReplicationInitiationStepNameEnum = "CONNECT_AGENT_TO_REPLICATION_SERVER"
	RecoveryInstanceDataReplicationInitiationStepNameEnumStartDataTransfer                             RecoveryInstanceDataReplicationInitiationStepNameEnum = "START_DATA_TRANSFER"
)

func (e *RecoveryInstanceDataReplicationInitiationStepNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LINK_FAILBACK_CLIENT_WITH_RECOVERY_INSTANCE":
		fallthrough
	case "COMPLETE_VOLUME_MAPPING":
		fallthrough
	case "ESTABLISH_RECOVERY_INSTANCE_COMMUNICATION":
		fallthrough
	case "DOWNLOAD_REPLICATION_SOFTWARE_TO_FAILBACK_CLIENT":
		fallthrough
	case "CONFIGURE_REPLICATION_SOFTWARE":
		fallthrough
	case "PAIR_AGENT_WITH_REPLICATION_SOFTWARE":
		fallthrough
	case "ESTABLISH_AGENT_REPLICATOR_SOFTWARE_COMMUNICATION":
		fallthrough
	case "WAIT":
		fallthrough
	case "CREATE_SECURITY_GROUP":
		fallthrough
	case "LAUNCH_REPLICATION_SERVER":
		fallthrough
	case "BOOT_REPLICATION_SERVER":
		fallthrough
	case "AUTHENTICATE_WITH_SERVICE":
		fallthrough
	case "DOWNLOAD_REPLICATION_SOFTWARE":
		fallthrough
	case "CREATE_STAGING_DISKS":
		fallthrough
	case "ATTACH_STAGING_DISKS":
		fallthrough
	case "PAIR_REPLICATION_SERVER_WITH_AGENT":
		fallthrough
	case "CONNECT_AGENT_TO_REPLICATION_SERVER":
		fallthrough
	case "START_DATA_TRANSFER":
		*e = RecoveryInstanceDataReplicationInitiationStepNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RecoveryInstanceDataReplicationInitiationStepNameEnum: %s", s)
	}
}
