/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CatalogModifierList - A list of modifiers applicable to items at the time of sale.
 * 
 * For example, a "Condiments" modifier list applicable to a "Hot Dog" item
 * may contain "Ketchup", "Mustard", and "Relish" modifiers.
 * Use the `selection_type` field to specify whether or not multiple selections from
 * the modifier list are allowed.
 */
public class CatalogModifierList {
    /**
     * The options included in the `CatalogModifierList`.
     * You must include at least one `CatalogModifier`.
     * Each CatalogObject must have type `MODIFIER` and contain
     * `CatalogModifier` data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifiers")
    public CatalogObject[] modifiers;
    public CatalogModifierList withModifiers(CatalogObject[] modifiers) {
        this.modifiers = modifiers;
        return this;
    }
    
    /**
     * The name for the `CatalogModifierList` instance. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CatalogModifierList withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Determines where this modifier list appears in a list of `CatalogModifierList` values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ordinal")
    public Long ordinal;
    public CatalogModifierList withOrdinal(Long ordinal) {
        this.ordinal = ordinal;
        return this;
    }
    
    /**
     * Indicates whether multiple options from the modifier list
     * can be applied to a single `CatalogItem`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selection_type")
    public String selectionType;
    public CatalogModifierList withSelectionType(String selectionType) {
        this.selectionType = selectionType;
        return this;
    }
    
}
