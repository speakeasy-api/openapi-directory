// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RegionOptStatusEnum string

const (
	RegionOptStatusEnumEnabled          RegionOptStatusEnum = "ENABLED"
	RegionOptStatusEnumEnabling         RegionOptStatusEnum = "ENABLING"
	RegionOptStatusEnumDisabling        RegionOptStatusEnum = "DISABLING"
	RegionOptStatusEnumDisabled         RegionOptStatusEnum = "DISABLED"
	RegionOptStatusEnumEnabledByDefault RegionOptStatusEnum = "ENABLED_BY_DEFAULT"
)

func (e RegionOptStatusEnum) ToPointer() *RegionOptStatusEnum {
	return &e
}

func (e *RegionOptStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLED":
		fallthrough
	case "ENABLING":
		fallthrough
	case "DISABLING":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ENABLED_BY_DEFAULT":
		*e = RegionOptStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegionOptStatusEnum: %v", v)
	}
}
