/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * RecordStartParameters - POST parameters
 */
public class RecordStartParameters {
    /**
     * Unique identifier of the call to be recorded
     */
    @SpeakeasyMetadata("form:name=CallUUID")
    public String callUUID;
    public RecordStartParameters withCallUUID(String callUUID) {
        this.callUUID = callUUID;
        return this;
    }
    
    /**
     * File format (extension)
     */
    @SpeakeasyMetadata("form:name=FileFormat")
    public RecordStartParametersFileFormatEnum fileFormat;
    public RecordStartParameters withFileFormat(RecordStartParametersFileFormatEnum fileFormat) {
        this.fileFormat = fileFormat;
        return this;
    }
    
    /**
     * Recording file name (without extension); if empty, a timestamp based file name will be generated
     */
    @SpeakeasyMetadata("form:name=FileName")
    public String fileName;
    public RecordStartParameters withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    /**
     * Directory path/URI where the recording file will be saved
     */
    @SpeakeasyMetadata("form:name=FilePath")
    public String filePath;
    public RecordStartParameters withFilePath(String filePath) {
        this.filePath = filePath;
        return this;
    }
    
    /**
     * Maximum recording length, in seconds
     */
    @SpeakeasyMetadata("form:name=TimeLimit")
    public Long timeLimit;
    public RecordStartParameters withTimeLimit(Long timeLimit) {
        this.timeLimit = timeLimit;
        return this;
    }
    
}
