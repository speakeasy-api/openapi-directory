// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteSuggesterActionEnum
type GETDeleteSuggesterActionEnum string

const (
	GETDeleteSuggesterActionEnumDeleteSuggester GETDeleteSuggesterActionEnum = "DeleteSuggester"
)

func (e *GETDeleteSuggesterActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteSuggester":
		*e = GETDeleteSuggesterActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteSuggesterActionEnum: %s", s)
	}
}

// GETDeleteSuggesterVersionEnum
type GETDeleteSuggesterVersionEnum string

const (
	GETDeleteSuggesterVersionEnumTwoThousandAndThirteen0101 GETDeleteSuggesterVersionEnum = "2013-01-01"
)

func (e *GETDeleteSuggesterVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-01":
		*e = GETDeleteSuggesterVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteSuggesterVersionEnum: %s", s)
	}
}

type GETDeleteSuggesterQueryParams struct {
	Action     GETDeleteSuggesterActionEnum `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                       `queryParam:"style=form,explode=true,name=DomainName"`
	// Specifies the name of the suggester you want to delete.
	SuggesterName string                        `queryParam:"style=form,explode=true,name=SuggesterName"`
	Version       GETDeleteSuggesterVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteSuggesterHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteSuggesterRequest struct {
	QueryParams GETDeleteSuggesterQueryParams
	Headers     GETDeleteSuggesterHeaders
}

type GETDeleteSuggesterResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
