/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PersonVO } from "./personvo";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Java type: com.noosh.nooshapi.vo.ProjectParentVO
 */
export class ProjectParentVO extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "client_account" })
  clientAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "client_user" })
  clientUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "client_user_id" })
  clientUserId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "client_workgroup_id" })
  clientWorkgroupId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  /**
   * Java type: com.noosh.nooshapi.vo.PersonVO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  @Type(() => PersonVO)
  createdBy?: PersonVO;

  @SpeakeasyMetadata()
  @Expose({ name: "project_create_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  projectCreateDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "project_description" })
  projectDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "project_id" })
  projectId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "project_name" })
  projectName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "project_number" })
  projectNumber?: string;
}
