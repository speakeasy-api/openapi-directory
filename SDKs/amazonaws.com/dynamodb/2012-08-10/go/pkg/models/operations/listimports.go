// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListImportsXAmzTargetEnum
type ListImportsXAmzTargetEnum string

const (
	ListImportsXAmzTargetEnumDynamoDb20120810ListImports ListImportsXAmzTargetEnum = "DynamoDB_20120810.ListImports"
)

func (e ListImportsXAmzTargetEnum) ToPointer() *ListImportsXAmzTargetEnum {
	return &e
}

func (e *ListImportsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DynamoDB_20120810.ListImports":
		*e = ListImportsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListImportsXAmzTargetEnum: %v", v)
	}
}

type ListImportsRequest struct {
	ListImportsInput shared.ListImportsInput `request:"mediaType=application/json"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// Pagination limit
	PageSize          *string                   `queryParam:"style=form,explode=true,name=PageSize"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListImportsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListImportsResponse struct {
	ContentType string
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	ListImportsOutput *shared.ListImportsOutput
	StatusCode        int
	RawResponse       *http.Response
}
