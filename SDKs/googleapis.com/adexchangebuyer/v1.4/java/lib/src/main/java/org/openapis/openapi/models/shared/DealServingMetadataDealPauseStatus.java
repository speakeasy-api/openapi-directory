/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DealServingMetadataDealPauseStatus - Tracks which parties (if any) have paused a deal. The deal is considered paused if has_buyer_paused || has_seller_paused. Each of the has_buyer_paused or the has_seller_paused bits can be set independently.
 */
public class DealServingMetadataDealPauseStatus {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyerPauseReason")
    public String buyerPauseReason;
    public DealServingMetadataDealPauseStatus withBuyerPauseReason(String buyerPauseReason) {
        this.buyerPauseReason = buyerPauseReason;
        return this;
    }
    
    /**
     * If the deal is paused, records which party paused the deal first.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstPausedBy")
    public String firstPausedBy;
    public DealServingMetadataDealPauseStatus withFirstPausedBy(String firstPausedBy) {
        this.firstPausedBy = firstPausedBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasBuyerPaused")
    public Boolean hasBuyerPaused;
    public DealServingMetadataDealPauseStatus withHasBuyerPaused(Boolean hasBuyerPaused) {
        this.hasBuyerPaused = hasBuyerPaused;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasSellerPaused")
    public Boolean hasSellerPaused;
    public DealServingMetadataDealPauseStatus withHasSellerPaused(Boolean hasSellerPaused) {
        this.hasSellerPaused = hasSellerPaused;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerPauseReason")
    public String sellerPauseReason;
    public DealServingMetadataDealPauseStatus withSellerPauseReason(String sellerPauseReason) {
        this.sellerPauseReason = sellerPauseReason;
        return this;
    }
    
}
