// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDataplexV1LakeMetastoreStatusStateEnum - Current state of association.
type GoogleCloudDataplexV1LakeMetastoreStatusStateEnum string

const (
	GoogleCloudDataplexV1LakeMetastoreStatusStateEnumStateUnspecified GoogleCloudDataplexV1LakeMetastoreStatusStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudDataplexV1LakeMetastoreStatusStateEnumNone             GoogleCloudDataplexV1LakeMetastoreStatusStateEnum = "NONE"
	GoogleCloudDataplexV1LakeMetastoreStatusStateEnumReady            GoogleCloudDataplexV1LakeMetastoreStatusStateEnum = "READY"
	GoogleCloudDataplexV1LakeMetastoreStatusStateEnumUpdating         GoogleCloudDataplexV1LakeMetastoreStatusStateEnum = "UPDATING"
	GoogleCloudDataplexV1LakeMetastoreStatusStateEnumError            GoogleCloudDataplexV1LakeMetastoreStatusStateEnum = "ERROR"
)

func (e GoogleCloudDataplexV1LakeMetastoreStatusStateEnum) ToPointer() *GoogleCloudDataplexV1LakeMetastoreStatusStateEnum {
	return &e
}

func (e *GoogleCloudDataplexV1LakeMetastoreStatusStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "NONE":
		fallthrough
	case "READY":
		fallthrough
	case "UPDATING":
		fallthrough
	case "ERROR":
		*e = GoogleCloudDataplexV1LakeMetastoreStatusStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDataplexV1LakeMetastoreStatusStateEnum: %v", v)
	}
}

// GoogleCloudDataplexV1LakeMetastoreStatus - Status of Lake and Dataproc Metastore service instance association.
type GoogleCloudDataplexV1LakeMetastoreStatus struct {
	// The URI of the endpoint used to access the Metastore service.
	Endpoint *string `json:"endpoint,omitempty"`
	// Additional information about the current status.
	Message *string `json:"message,omitempty"`
	// Current state of association.
	State *GoogleCloudDataplexV1LakeMetastoreStatusStateEnum `json:"state,omitempty"`
	// Last update time of the metastore status of the lake.
	UpdateTime *string `json:"updateTime,omitempty"`
}
