// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetCollectionSecurity struct {
	OAuth2 shared.SchemeOAuth2 `security:"scheme,type=oauth2"`
}

type GetCollectionPathParams struct {
	// Unique identifier of the collection.
	// The following aliases are supported:
	// - `root`: The root collection of the account
	// - `sharedWithMe`: Automatically contains new resources that have been shared individually
	// - `trash`: Automatically contains resources that have been deleted
	//
	Collection string `pathParam:"style=simple,explode=false,name=collection"`
}

type GetCollectionQueryParams struct {
	// This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.
	//
	SharingKey *string `queryParam:"style=form,explode=true,name=sharingKey"`
}

type GetCollectionRequest struct {
	PathParams  GetCollectionPathParams
	QueryParams GetCollectionQueryParams
	Security    GetCollectionSecurity
}

type GetCollectionResponse struct {
	// Collection details
	Collection  *shared.Collection
	ContentType string
	// Not granted to access to this collection
	FlatErrorResponse *shared.FlatErrorResponse
	StatusCode        int
	RawResponse       *http.Response
}
