"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import scalarmeasurevaluetype_enum as shared_scalarmeasurevaluetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MultiMeasureAttributeMapping:
    r"""<p/>"""
    
    source_column: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceColumn') }})  
    measure_value_type: Optional[shared_scalarmeasurevaluetype_enum.ScalarMeasureValueTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MeasureValueType'), 'exclude': lambda f: f is None }})  
    target_multi_measure_attribute_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetMultiMeasureAttributeName'), 'exclude': lambda f: f is None }})  
    