"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup:
    r"""The cost associated with the Reserved Instance."""
    
    hourly_price: Optional[str] = dataclasses.field(default=None)  
    remaining_total_value: Optional[str] = dataclasses.field(default=None)  
    remaining_upfront_value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue:
    r"""The total value of the Convertible Reserved Instance that you are exchanging."""
    
    hourly_price: Optional[str] = dataclasses.field(default=None)  
    remaining_total_value: Optional[str] = dataclasses.field(default=None)  
    remaining_upfront_value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet:
    r"""The total value of the Convertible Reserved Instance."""
    
    reservation_value: Optional[GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue] = dataclasses.field(default=None)  
    reserved_instance_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup:
    r"""The cost associated with the Reserved Instance."""
    
    hourly_price: Optional[str] = dataclasses.field(default=None)  
    remaining_total_value: Optional[str] = dataclasses.field(default=None)  
    remaining_upfront_value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue:
    r"""The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of the list value, remaining upfront price, and additional upfront cost of the exchange."""
    
    hourly_price: Optional[str] = dataclasses.field(default=None)  
    remaining_total_value: Optional[str] = dataclasses.field(default=None)  
    remaining_upfront_value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration:
    r"""The configuration of the Convertible Reserved Instances that make up the exchange."""
    
    instance_count: Optional[int] = dataclasses.field(default=None)  
    offering_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet:
    r"""The total value of the new Convertible Reserved Instances."""
    
    reservation_value: Optional[GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue] = dataclasses.field(default=None)  
    target_configuration: Optional[GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetReservedInstancesExchangeQuoteResult:
    r"""Contains the output of GetReservedInstancesExchangeQuote."""
    
    currency_code: Optional[str] = dataclasses.field(default=None)  
    is_valid_exchange: Optional[bool] = dataclasses.field(default=None)  
    output_reserved_instances_will_expire_at: Optional[datetime] = dataclasses.field(default=None)  
    payment_due: Optional[str] = dataclasses.field(default=None)  
    reserved_instance_value_rollup: Optional[GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup] = dataclasses.field(default=None)  
    reserved_instance_value_set: Optional[list[GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet]] = dataclasses.field(default=None)  
    target_configuration_value_rollup: Optional[GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup] = dataclasses.field(default=None)  
    target_configuration_value_set: Optional[list[GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet]] = dataclasses.field(default=None)  
    validation_failure_reason: Optional[str] = dataclasses.field(default=None)  
    