// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDisassociateAddressActionEnum
type GETDisassociateAddressActionEnum string

const (
	GETDisassociateAddressActionEnumDisassociateAddress GETDisassociateAddressActionEnum = "DisassociateAddress"
)

func (e GETDisassociateAddressActionEnum) ToPointer() *GETDisassociateAddressActionEnum {
	return &e
}

func (e *GETDisassociateAddressActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DisassociateAddress":
		*e = GETDisassociateAddressActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisassociateAddressActionEnum: %v", v)
	}
}

// GETDisassociateAddressVersionEnum
type GETDisassociateAddressVersionEnum string

const (
	GETDisassociateAddressVersionEnumTwoThousandAndSixteen1115 GETDisassociateAddressVersionEnum = "2016-11-15"
)

func (e GETDisassociateAddressVersionEnum) ToPointer() *GETDisassociateAddressVersionEnum {
	return &e
}

func (e *GETDisassociateAddressVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDisassociateAddressVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisassociateAddressVersionEnum: %v", v)
	}
}

type GETDisassociateAddressRequest struct {
	Action GETDisassociateAddressActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// [EC2-VPC] The association ID. Required for EC2-VPC.
	AssociationID *string `queryParam:"style=form,explode=true,name=AssociationId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// [EC2-Classic] The Elastic IP address. Required for EC2-Classic.
	PublicIP          *string                           `queryParam:"style=form,explode=true,name=PublicIp"`
	Version           GETDisassociateAddressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDisassociateAddressResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
