/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GatewayRouteHostnameMatch } from "./gatewayroutehostnamematch";
import { HttpGatewayRouteHeader } from "./httpgatewayrouteheader";
import { HttpMethodEnum } from "./httpmethodenum";
import { HttpPathMatch } from "./httppathmatch";
import { HttpQueryParameter } from "./httpqueryparameter";
import { Expose, Type } from "class-transformer";

/**
 * An object that represents the criteria for determining a request match.
 */
export class HttpGatewayRouteMatch extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: HttpGatewayRouteHeader })
  @Expose({ name: "headers" })
  @Type(() => HttpGatewayRouteHeader)
  headers?: HttpGatewayRouteHeader[];

  @SpeakeasyMetadata()
  @Expose({ name: "hostname" })
  @Type(() => GatewayRouteHostnameMatch)
  hostname?: GatewayRouteHostnameMatch;

  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: HttpMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  @Type(() => HttpPathMatch)
  path?: HttpPathMatch;

  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix?: string;

  @SpeakeasyMetadata({ elemType: HttpQueryParameter })
  @Expose({ name: "queryParameters" })
  @Type(() => HttpQueryParameter)
  queryParameters?: HttpQueryParameter[];
}
