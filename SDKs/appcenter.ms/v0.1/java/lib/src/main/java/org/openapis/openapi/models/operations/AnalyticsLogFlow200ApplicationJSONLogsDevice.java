/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AnalyticsLogFlow200ApplicationJSONLogsDevice - Device characteristics.
 */
public class AnalyticsLogFlow200ApplicationJSONLogsDevice {
    /**
     * The app's build number, e.g. 42.
     * 
     */
    @JsonProperty("app_build")
    public String appBuild;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withAppBuild(String appBuild) {
        this.appBuild = appBuild;
        return this;
    }
    
    /**
     * The bundle identifier, package identifier, or namespace, depending on what the individual plattforms use,  .e.g com.microsoft.example.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("app_namespace")
    public String appNamespace;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withAppNamespace(String appNamespace) {
        this.appNamespace = appNamespace;
        return this;
    }
    
    /**
     * Application version name, e.g. 1.1.0
     * 
     */
    @JsonProperty("app_version")
    public String appVersion;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withAppVersion(String appVersion) {
        this.appVersion = appVersion;
        return this;
    }
    
    /**
     * Carrier country code (for mobile devices).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_code")
    public String carrierCode;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withCarrierCode(String carrierCode) {
        this.carrierCode = carrierCode;
        return this;
    }
    
    /**
     * Carrier country.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_country")
    public String carrierCountry;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withCarrierCountry(String carrierCountry) {
        this.carrierCountry = carrierCountry;
        return this;
    }
    
    /**
     * Carrier name (for mobile devices).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_name")
    public String carrierName;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withCarrierName(String carrierName) {
        this.carrierName = carrierName;
        return this;
    }
    
    /**
     * Identifier of environment that current application release belongs to, deployment key then maps to environment like Production, Staging.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("live_update_deployment_key")
    public String liveUpdateDeploymentKey;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withLiveUpdateDeploymentKey(String liveUpdateDeploymentKey) {
        this.liveUpdateDeploymentKey = liveUpdateDeploymentKey;
        return this;
    }
    
    /**
     * Hash of all files (ReactNative or Cordova) deployed to device via LiveUpdate beacon. Helps identify the Release version on device or need to download updates in future.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("live_update_package_hash")
    public String liveUpdatePackageHash;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withLiveUpdatePackageHash(String liveUpdatePackageHash) {
        this.liveUpdatePackageHash = liveUpdatePackageHash;
        return this;
    }
    
    /**
     * Label that is used to identify application code 'version' released via Live Update beacon running on device
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("live_update_release_label")
    public String liveUpdateReleaseLabel;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withLiveUpdateReleaseLabel(String liveUpdateReleaseLabel) {
        this.liveUpdateReleaseLabel = liveUpdateReleaseLabel;
        return this;
    }
    
    /**
     * Language code (example: en_US).
     * 
     */
    @JsonProperty("locale")
    public String locale;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * Device model (example: iPad2,3).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public String model;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * Device manufacturer (example: HTC).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oem_name")
    public String oemName;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withOemName(String oemName) {
        this.oemName = oemName;
        return this;
    }
    
    /**
     * API level when applicable like in Android (example: 15).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os_api_level")
    public Long osApiLevel;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withOsApiLevel(Long osApiLevel) {
        this.osApiLevel = osApiLevel;
        return this;
    }
    
    /**
     * OS build code (example: LMY47X).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os_build")
    public String osBuild;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withOsBuild(String osBuild) {
        this.osBuild = osBuild;
        return this;
    }
    
    /**
     * OS name (example: iOS). The following OS names are standardized (non-exclusive): Android, iOS, macOS, tvOS, Windows.
     * 
     */
    @JsonProperty("os_name")
    public String osName;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withOsName(String osName) {
        this.osName = osName;
        return this;
    }
    
    /**
     * OS version (example: 9.3.0).
     * 
     */
    @JsonProperty("os_version")
    public String osVersion;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    /**
     * Screen size of the device in pixels (example: 640x480).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("screen_size")
    public String screenSize;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withScreenSize(String screenSize) {
        this.screenSize = screenSize;
        return this;
    }
    
    /**
     * Name of the SDK. Consists of the name of the SDK and the platform, e.g. "appcenter.ios", "hockeysdk.android".
     * 
     */
    @JsonProperty("sdk_name")
    public String sdkName;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withSDKName(String sdkName) {
        this.sdkName = sdkName;
        return this;
    }
    
    /**
     * Version of the SDK in semver format, e.g. "1.2.0" or "0.12.3-alpha.1".
     * 
     */
    @JsonProperty("sdk_version")
    public String sdkVersion;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withSDKVersion(String sdkVersion) {
        this.sdkVersion = sdkVersion;
        return this;
    }
    
    /**
     * The offset in minutes from UTC for the device time zone, including daylight savings time.
     * 
     */
    @JsonProperty("time_zone_offset")
    public Long timeZoneOffset;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withTimeZoneOffset(Long timeZoneOffset) {
        this.timeZoneOffset = timeZoneOffset;
        return this;
    }
    
    /**
     * Version of the wrapper technology framework (Xamarin runtime version or ReactNative or Cordova etc...). See wrapper_sdk_name to see if this version refers to Xamarin or ReactNative or other.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wrapper_runtime_version")
    public String wrapperRuntimeVersion;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withWrapperRuntimeVersion(String wrapperRuntimeVersion) {
        this.wrapperRuntimeVersion = wrapperRuntimeVersion;
        return this;
    }
    
    /**
     * Name of the wrapper SDK. Consists of the name of the SDK and the wrapper platform, e.g. "appcenter.xamarin", "hockeysdk.cordova".
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wrapper_sdk_name")
    public String wrapperSDKName;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withWrapperSDKName(String wrapperSDKName) {
        this.wrapperSDKName = wrapperSDKName;
        return this;
    }
    
    /**
     * Version of the wrapper SDK in semver format. When the SDK is embedding another base SDK (for example Xamarin.Android wraps Android), the Xamarin specific version is populated into this field while sdkVersion refers to the original Android SDK.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wrapper_sdk_version")
    public String wrapperSDKVersion;

    public AnalyticsLogFlow200ApplicationJSONLogsDevice withWrapperSDKVersion(String wrapperSDKVersion) {
        this.wrapperSDKVersion = wrapperSDKVersion;
        return this;
    }
    
    public AnalyticsLogFlow200ApplicationJSONLogsDevice(@JsonProperty("app_build") String appBuild, @JsonProperty("app_version") String appVersion, @JsonProperty("locale") String locale, @JsonProperty("os_name") String osName, @JsonProperty("os_version") String osVersion, @JsonProperty("sdk_name") String sdkName, @JsonProperty("sdk_version") String sdkVersion, @JsonProperty("time_zone_offset") Long timeZoneOffset) {
        this.appBuild = appBuild;
        this.appVersion = appVersion;
        this.locale = locale;
        this.osName = osName;
        this.osVersion = osVersion;
        this.sdkName = sdkName;
        this.sdkVersion = sdkVersion;
        this.timeZoneOffset = timeZoneOffset;
  }
}
