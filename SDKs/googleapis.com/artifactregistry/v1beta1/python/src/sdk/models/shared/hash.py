"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class HashTypeEnum(str, Enum):
    r"""The algorithm used to compute the hash value."""
    HASH_TYPE_UNSPECIFIED = 'HASH_TYPE_UNSPECIFIED'
    SHA256 = 'SHA256'
    MD5 = 'MD5'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Hash:
    r"""A hash of file content."""
    
    type: Optional[HashTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The algorithm used to compute the hash value."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The hash value."""  
    