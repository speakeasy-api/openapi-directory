"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasourcecolumnreference as shared_datasourcecolumnreference
from ..shared import developermetadata as shared_developermetadata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DimensionProperties:
    r"""Properties about a dimension."""
    
    data_source_column_reference: Optional[shared_datasourcecolumnreference.DataSourceColumnReference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSourceColumnReference'), 'exclude': lambda f: f is None }})
    r"""An unique identifier that references a data source column."""  
    developer_metadata: Optional[list[shared_developermetadata.DeveloperMetadata]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('developerMetadata'), 'exclude': lambda f: f is None }})
    r"""The developer metadata associated with a single row or column."""  
    hidden_by_filter: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hiddenByFilter'), 'exclude': lambda f: f is None }})
    r"""True if this dimension is being filtered. This field is read-only."""  
    hidden_by_user: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hiddenByUser'), 'exclude': lambda f: f is None }})
    r"""True if this dimension is explicitly hidden."""  
    pixel_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pixelSize'), 'exclude': lambda f: f is None }})
    r"""The height (if a row) or width (if a column) of the dimension in pixels."""  
    