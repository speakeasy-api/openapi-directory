/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateSipDomainServerList = ["https://api.twilio.com"] as const;

export class CreateSipDomainSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
 */
export enum CreateSipDomainCreateSipDomainRequestVoiceFallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
 */
export enum CreateSipDomainCreateSipDomainRequestVoiceMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we should use to call `voice_status_callback_url`. Can be: `GET` or `POST`.
 */
export enum CreateSipDomainCreateSipDomainRequestVoiceStatusCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class CreateSipDomainCreateSipDomainRequest extends SpeakeasyBase {
  /**
   * The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.
   */
  @SpeakeasyMetadata({ data: "form, name=ByocTrunkSid" })
  byocTrunkSid?: string;

  /**
   * The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and "-" and must end with `sip.twilio.com`.
   */
  @SpeakeasyMetadata({ data: "form, name=DomainName" })
  domainName: string;

  /**
   * Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.
   */
  @SpeakeasyMetadata({ data: "form, name=EmergencyCallerSid" })
  emergencyCallerSid?: string;

  /**
   * Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.
   */
  @SpeakeasyMetadata({ data: "form, name=EmergencyCallingEnabled" })
  emergencyCallingEnabled?: boolean;

  /**
   * A descriptive string that you created to describe the resource. It can be up to 64 characters long.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.
   */
  @SpeakeasyMetadata({ data: "form, name=Secure" })
  secure?: boolean;

  /**
   * Whether to allow SIP Endpoints to register with the domain to receive calls. Can be `true` or `false`. `true` allows SIP Endpoints to register with the domain to receive calls, `false` does not.
   */
  @SpeakeasyMetadata({ data: "form, name=SipRegistration" })
  sipRegistration?: boolean;

  /**
   * The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceFallbackMethod" })
  voiceFallbackMethod?: CreateSipDomainCreateSipDomainRequestVoiceFallbackMethodEnum;

  /**
   * The URL that we should call when an error occurs while retrieving or executing the TwiML from `voice_url`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceFallbackUrl" })
  voiceFallbackUrl?: string;

  /**
   * The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceMethod" })
  voiceMethod?: CreateSipDomainCreateSipDomainRequestVoiceMethodEnum;

  /**
   * The HTTP method we should use to call `voice_status_callback_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceStatusCallbackMethod" })
  voiceStatusCallbackMethod?: CreateSipDomainCreateSipDomainRequestVoiceStatusCallbackMethodEnum;

  /**
   * The URL that we should call to pass status parameters (such as call ended) to your application.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceStatusCallbackUrl" })
  voiceStatusCallbackUrl?: string;

  /**
   * The URL we should when the domain receives a call.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceUrl" })
  voiceUrl?: string;
}

export class CreateSipDomainRequest extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AccountSid",
  })
  accountSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateSipDomainCreateSipDomainRequest;
}

export class CreateSipDomainResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  apiV2010AccountSipSipDomain?: shared.ApiV2010AccountSipSipDomain;
}
