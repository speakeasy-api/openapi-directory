/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BankAccountList - A object with a data property that contains an array of up to limit bank accounts. Each entry in the array is a separate bank account object. If no more bank accounts are available, the resulting array will be empty.
 */
public class BankAccountList {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_page")
    public Long currentPage;

    public BankAccountList withCurrentPage(Long currentPage) {
        this.currentPage = currentPage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public BankAccount[] data;

    public BankAccountList withData(BankAccount[] data) {
        this.data = data;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_page")
    public Long lastPage;

    public BankAccountList withLastPage(Long lastPage) {
        this.lastPage = lastPage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_page_url")
    public String nextPageUrl;

    public BankAccountList withNextPageUrl(String nextPageUrl) {
        this.nextPageUrl = nextPageUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("per_page")
    public Long perPage;

    public BankAccountList withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev_page_url")
    public String prevPageUrl;

    public BankAccountList withPrevPageUrl(String prevPageUrl) {
        this.prevPageUrl = prevPageUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Long total;

    public BankAccountList withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    public BankAccountList(){}
}
