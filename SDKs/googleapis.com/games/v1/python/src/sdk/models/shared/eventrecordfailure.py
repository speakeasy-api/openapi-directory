"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EventRecordFailureFailureCauseEnum(str, Enum):
    r"""The cause for the update failure."""
    EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED = 'EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED'
    NOT_FOUND = 'NOT_FOUND'
    INVALID_UPDATE_VALUE = 'INVALID_UPDATE_VALUE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventRecordFailure:
    r"""An event update failure resource."""
    
    event_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventId'), 'exclude': lambda f: f is None }})
    r"""The ID of the event that was not updated."""  
    failure_cause: Optional[EventRecordFailureFailureCauseEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureCause'), 'exclude': lambda f: f is None }})
    r"""The cause for the update failure."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordFailure`."""  
    