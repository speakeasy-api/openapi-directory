"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import s3storage as shared_s3storage
from datetime import datetime
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class BundleInstanceResultBundleTaskBundleTaskError:
    r"""If the task fails, a description of the error."""
    
    code: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    
class BundleInstanceResultBundleTaskStateEnum(str, Enum):
    r"""The state of the task."""
    PENDING = 'pending'
    WAITING_FOR_SHUTDOWN = 'waiting-for-shutdown'
    BUNDLING = 'bundling'
    STORING = 'storing'
    CANCELLING = 'cancelling'
    COMPLETE = 'complete'
    FAILED = 'failed'


@dataclasses.dataclass
class BundleInstanceResultBundleTaskStorage:
    r"""The Amazon S3 storage locations."""
    
    s3: Optional[shared_s3storage.S3Storage] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class BundleInstanceResultBundleTask:
    r"""Information about the bundle task."""
    
    bundle_id: Optional[str] = dataclasses.field(default=None)  
    bundle_task_error: Optional[BundleInstanceResultBundleTaskBundleTaskError] = dataclasses.field(default=None)  
    instance_id: Optional[str] = dataclasses.field(default=None)  
    progress: Optional[str] = dataclasses.field(default=None)  
    start_time: Optional[datetime] = dataclasses.field(default=None)  
    state: Optional[BundleInstanceResultBundleTaskStateEnum] = dataclasses.field(default=None)  
    storage: Optional[BundleInstanceResultBundleTaskStorage] = dataclasses.field(default=None)  
    update_time: Optional[datetime] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class BundleInstanceResult:
    r"""Contains the output of BundleInstance."""
    
    bundle_task: Optional[BundleInstanceResultBundleTask] = dataclasses.field(default=None)  
    