// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveAnAccountRequest struct {
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
}

type RetrieveAnAccountDefaultApplicationJSON13StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveAnAccountDefaultApplicationJSON13StatusEnum = 429
)

func (e RetrieveAnAccountDefaultApplicationJSON13StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = RetrieveAnAccountDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON13TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveAnAccountDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON13TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = RetrieveAnAccountDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON13 struct {
	Detail     string                                              `json:"detail"`
	RetryAfter *int64                                              `json:"retry_after,omitempty"`
	Status     RetrieveAnAccountDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                              `json:"title"`
	Type       RetrieveAnAccountDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON12StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveAnAccountDefaultApplicationJSON12StatusEnum = 403
)

func (e RetrieveAnAccountDefaultApplicationJSON12StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAccountDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON12TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveAnAccountDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON12TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = RetrieveAnAccountDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON12 struct {
	Detail string                                              `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON11StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveAnAccountDefaultApplicationJSON11StatusEnum = 404
)

func (e RetrieveAnAccountDefaultApplicationJSON11StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAnAccountDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON11TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveAnAccountDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON11TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = RetrieveAnAccountDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON11 struct {
	Detail string                                              `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON10StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON10StatusEnumFourHundred RetrieveAnAccountDefaultApplicationJSON10StatusEnum = 400
)

func (e RetrieveAnAccountDefaultApplicationJSON10StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAnAccountDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON10TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveAnAccountDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON10TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = RetrieveAnAccountDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON10 struct {
	Detail string                                              `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON9StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON9StatusEnumFourHundred RetrieveAnAccountDefaultApplicationJSON9StatusEnum = 400
)

func (e RetrieveAnAccountDefaultApplicationJSON9StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAnAccountDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON9TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveAnAccountDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON9TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = RetrieveAnAccountDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                           `json:"errors"`
	Status RetrieveAnAccountDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON8StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveAnAccountDefaultApplicationJSON8StatusEnum = 409
)

func (e RetrieveAnAccountDefaultApplicationJSON8StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAnAccountDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON8TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveAnAccountDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON8TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = RetrieveAnAccountDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON8 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON7StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveAnAccountDefaultApplicationJSON7StatusEnum = 401
)

func (e RetrieveAnAccountDefaultApplicationJSON7StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = RetrieveAnAccountDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON7TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveAnAccountDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON7TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = RetrieveAnAccountDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON7 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON6StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON6StatusEnumFiveHundred RetrieveAnAccountDefaultApplicationJSON6StatusEnum = 500
)

func (e RetrieveAnAccountDefaultApplicationJSON6StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = RetrieveAnAccountDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON6TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON6TypeEnumInternalServerError RetrieveAnAccountDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON6TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = RetrieveAnAccountDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON6 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON5StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveAnAccountDefaultApplicationJSON5StatusEnum = 403
)

func (e RetrieveAnAccountDefaultApplicationJSON5StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAccountDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON5TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveAnAccountDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON5TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = RetrieveAnAccountDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON5 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON4StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveAnAccountDefaultApplicationJSON4StatusEnum = 422
)

func (e RetrieveAnAccountDefaultApplicationJSON4StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = RetrieveAnAccountDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON4TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveAnAccountDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON4TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = RetrieveAnAccountDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON4 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON3StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveAnAccountDefaultApplicationJSON3StatusEnum = 409
)

func (e RetrieveAnAccountDefaultApplicationJSON3StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAnAccountDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON3TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveAnAccountDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON3TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = RetrieveAnAccountDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON3 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON2StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveAnAccountDefaultApplicationJSON2StatusEnum = 403
)

func (e RetrieveAnAccountDefaultApplicationJSON2StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAccountDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON2TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveAnAccountDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON2TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = RetrieveAnAccountDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON2 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveAnAccountDefaultApplicationJSON1StatusEnum int64

const (
	RetrieveAnAccountDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveAnAccountDefaultApplicationJSON1StatusEnum = 404
)

func (e RetrieveAnAccountDefaultApplicationJSON1StatusEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAnAccountDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON1TypeEnum string

const (
	RetrieveAnAccountDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveAnAccountDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e RetrieveAnAccountDefaultApplicationJSON1TypeEnum) ToPointer() *RetrieveAnAccountDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *RetrieveAnAccountDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = RetrieveAnAccountDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type RetrieveAnAccountDefaultApplicationJSON1 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAnAccountDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAnAccountDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveAnAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account
	Account *shared.Account
	// Error
	Error interface{}
}
