/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InconclusiveDetail - Details for an outcome with an INCONCLUSIVE outcome summary.
 */
public class InconclusiveDetail {
    /**
     * If the end user aborted the test execution before a pass or fail could be determined. For example, the user pressed ctrl-c which sent a kill signal to the test runner while the test was running.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("abortedByUser")
    public Boolean abortedByUser;
    public InconclusiveDetail withAbortedByUser(Boolean abortedByUser) {
        this.abortedByUser = abortedByUser;
        return this;
    }
    
    /**
     * If results are being provided to the user in certain cases of infrastructure failures
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasErrorLogs")
    public Boolean hasErrorLogs;
    public InconclusiveDetail withHasErrorLogs(Boolean hasErrorLogs) {
        this.hasErrorLogs = hasErrorLogs;
        return this;
    }
    
    /**
     * If the test runner could not determine success or failure because the test depends on a component other than the system under test which failed. For example, a mobile test requires provisioning a device where the test executes, and that provisioning can fail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("infrastructureFailure")
    public Boolean infrastructureFailure;
    public InconclusiveDetail withInfrastructureFailure(Boolean infrastructureFailure) {
        this.infrastructureFailure = infrastructureFailure;
        return this;
    }
    
}
