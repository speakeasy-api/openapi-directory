/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransactionsResponse200Json - Body of the JSON response for a successful read transaction list request.
 * This account report contains transactions resulting from the query parameters.
 * 
 */
public class TransactionsResponse200Json {
    /**
     * A list of hyperlinks to be recognised by the TPP.
     * 
     * Type of links admitted in this response:
     *   - "download": a link to a resource, where the transaction report might be downloaded from in
     *   case where transaction reports have a huge size.
     * 
     * Remark: This feature shall only be used where camt-data is requested which has a huge size.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    public java.util.Map<String, HrefType> links;
    public TransactionsResponse200Json withLinks(java.util.Map<String, HrefType> links) {
        this.links = links;
        return this;
    }
    
    /**
     * Reference to an account by either
     *   * IBAN, of a payment accounts, or
     *   * otherAccountIdentification, for payment accounts if there is no IBAN
     * adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account")
    public AccountReference16CH account;
    public TransactionsResponse200Json withAccount(AccountReference16CH account) {
        this.account = account;
        return this;
    }
    
    /**
     * A list of balances regarding this account, e.g. the current balance, the last booked balance.
     * The list might be restricted to the current balance.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balances")
    public Balance[] balances;
    public TransactionsResponse200Json withBalances(Balance[] balances) {
        this.balances = balances;
        return this;
    }
    
    /**
     * JSON based account report.
     * This account report contains transactions resulting from the query parameters.
     * 
     * 'booked' shall be contained if bookingStatus parameter is set to "booked" or "both".
     * 
     * 'pending' is not contained if the bookingStatus parameter is set to "booked" or "information".
     * 
     * 'information' Only contained if the bookingStatus is set to "information" and if supported by ASPSP.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactions")
    public AccountReport transactions;
    public TransactionsResponse200Json withTransactions(AccountReport transactions) {
        this.transactions = transactions;
        return this;
    }
    
}
