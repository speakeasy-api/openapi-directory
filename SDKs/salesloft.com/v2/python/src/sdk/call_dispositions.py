"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class CallDispositions:
    r"""Call Dispositions"""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_v2_call_dispositions_json(self, request: operations.GetV2CallDispositionsJSONRequest) -> operations.GetV2CallDispositionsJSONResponse:
        r"""List call dispositions
        Fetches multiple call disposition records. The records can be sorted according to
        the respective parameters. Call dispositions must be configured in application. This will
        change in the future, but please contact us if you have a pressing use case.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/v2/call_dispositions.json'
        
        query_params = utils.get_query_params(operations.GetV2CallDispositionsJSONRequest, request)
        
        client = self._client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetV2CallDispositionsJSONResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, '*/*'):
                res.body = http_res.content

        return res

    