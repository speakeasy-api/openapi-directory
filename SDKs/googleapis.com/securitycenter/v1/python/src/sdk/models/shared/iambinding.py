"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class IamBindingActionEnum(str, Enum):
    r"""The action that was performed on a Binding."""
    ACTION_UNSPECIFIED = 'ACTION_UNSPECIFIED'
    ADD = 'ADD'
    REMOVE = 'REMOVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IamBinding:
    r"""Represents a particular IAM binding, which captures a member's role addition, removal, or state."""
    
    action: Optional[IamBindingActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})
    r"""The action that was performed on a Binding."""  
    member: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member'), 'exclude': lambda f: f is None }})
    r"""A single identity requesting access for a Cloud Platform resource, e.g. \\"foo@google.com\\"."""  
    role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""Role that is assigned to \\"members\\". For example, \\"roles/viewer\\", \\"roles/editor\\", or \\"roles/owner\\"."""  
    