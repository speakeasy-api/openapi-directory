// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum - Filters results by the current event status of the job.
type GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum string

const (
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumFailure                GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "Failure"
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumSuccess                GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "Success"
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumQueued                 GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "Queued"
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumScheduled              GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "Scheduled"
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumActive                 GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "Active"
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumCanceling              GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "Canceling"
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumCanceled               GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "Canceled"
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumSuccessfulWithWarnings GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "SuccessfulWithWarnings"
	GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnumCancelingScheduled     GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum = "CancelingScheduled"
)

func (e GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum) ToPointer() *GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum {
	return &e
}

func (e *GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Failure":
		fallthrough
	case "Success":
		fallthrough
	case "Queued":
		fallthrough
	case "Scheduled":
		fallthrough
	case "Active":
		fallthrough
	case "Canceling":
		fallthrough
	case "Canceled":
		fallthrough
	case "SuccessfulWithWarnings":
		fallthrough
	case "CancelingScheduled":
		*e = GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum: %v", v)
	}
}

// GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum - State of the jobs in the CSV.
type GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum string

const (
	GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnumFailure   GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum = "Failure"
	GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnumScheduled GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum = "Scheduled"
	GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnumSuccess   GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum = "Success"
	GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnumActive    GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum = "Active"
	GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnumCanceled  GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum = "Canceled"
)

func (e GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum) ToPointer() *GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum {
	return &e
}

func (e *GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Failure":
		fallthrough
	case "Scheduled":
		fallthrough
	case "Success":
		fallthrough
	case "Active":
		fallthrough
	case "Canceled":
		*e = GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum: %v", v)
	}
}

// GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum - Filters results by job type.
type GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum string

const (
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumArchival       GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "Archival"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumBackup         GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "Backup"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumConversion     GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "Conversion"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumRecovery       GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "Recovery"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumReplication    GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "Replication"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumIndex          GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "Index"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumLogBackup      GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "LogBackup"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumLogArchival    GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "LogArchival"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumLogReplication GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "LogReplication"
	GetJobMonitoringInfoCsvDownloadLinkJobTypeEnumLogShipping    GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum = "LogShipping"
)

func (e GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum) ToPointer() *GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum {
	return &e
}

func (e *GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Archival":
		fallthrough
	case "Backup":
		fallthrough
	case "Conversion":
		fallthrough
	case "Recovery":
		fallthrough
	case "Replication":
		fallthrough
	case "Index":
		fallthrough
	case "LogBackup":
		fallthrough
	case "LogArchival":
		fallthrough
	case "LogReplication":
		fallthrough
	case "LogShipping":
		*e = GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum: %v", v)
	}
}

// GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum - Filters results by a specified object type.
type GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum string

const (
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumAppBlueprint            GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "AppBlueprint"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumEc2Instance             GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "Ec2Instance"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumHdfs                    GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "Hdfs"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumHypervVirtualMachine    GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "HypervVirtualMachine"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumLinuxFileset            GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "LinuxFileset"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumManagedVolume           GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "ManagedVolume"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumMssql                   GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "Mssql"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumNutanixVirtualMachine   GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "NutanixVirtualMachine"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumOracleDatabase          GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "OracleDatabase"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumSapHanaDatabase         GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "SapHanaDatabase"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumShareFileset            GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "ShareFileset"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumStorageArrayVolumeGroup GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "StorageArrayVolumeGroup"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumVcdVapp                 GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "VcdVapp"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumVmwareVirtualMachine    GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "VmwareVirtualMachine"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumWindowsFileset          GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "WindowsFileset"
	GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnumWindowsVolumeGroup      GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum = "WindowsVolumeGroup"
)

func (e GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum) ToPointer() *GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum {
	return &e
}

func (e *GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AppBlueprint":
		fallthrough
	case "Ec2Instance":
		fallthrough
	case "Hdfs":
		fallthrough
	case "HypervVirtualMachine":
		fallthrough
	case "LinuxFileset":
		fallthrough
	case "ManagedVolume":
		fallthrough
	case "Mssql":
		fallthrough
	case "NutanixVirtualMachine":
		fallthrough
	case "OracleDatabase":
		fallthrough
	case "SapHanaDatabase":
		fallthrough
	case "ShareFileset":
		fallthrough
	case "StorageArrayVolumeGroup":
		fallthrough
	case "VcdVapp":
		fallthrough
	case "VmwareVirtualMachine":
		fallthrough
	case "WindowsFileset":
		fallthrough
	case "WindowsVolumeGroup":
		*e = GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum: %v", v)
	}
}

type GetJobMonitoringInfoCsvDownloadLinkRequest struct {
	// Filters results by the current event status of the job.
	JobEventStatus *GetJobMonitoringInfoCsvDownloadLinkJobEventStatusEnum `queryParam:"style=form,explode=true,name=job_event_status"`
	// State of the jobs in the CSV.
	JobMonitoringState GetJobMonitoringInfoCsvDownloadLinkJobMonitoringStateEnum `queryParam:"style=form,explode=true,name=job_monitoring_state"`
	// Filters results by job type.
	JobType *GetJobMonitoringInfoCsvDownloadLinkJobTypeEnum `queryParam:"style=form,explode=true,name=job_type"`
	// Filters results by the provided value for object_name, using infix search.
	ObjectName *string `queryParam:"style=form,explode=true,name=object_name"`
	// Filters results by a specified object type.
	ObjectType *GetJobMonitoringInfoCsvDownloadLinkObjectTypeEnum `queryParam:"style=form,explode=true,name=object_type"`
	// A Boolean that specifies whether or not to include log- related jobs. Default value is 'false'.
	ShouldIncludeLogRelatedJob *bool `queryParam:"style=form,explode=true,name=should_include_log_related_job"`
}

type GetJobMonitoringInfoCsvDownloadLinkResponse struct {
	ContentType string
	// Download link of the requested CSV file.
	JobMonitoringCsvDownloadResponse *shared.JobMonitoringCsvDownloadResponse
	StatusCode                       int
	RawResponse                      *http.Response
}
