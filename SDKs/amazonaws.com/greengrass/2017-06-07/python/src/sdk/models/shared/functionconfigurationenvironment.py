"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import functionexecutionconfig as shared_functionexecutionconfig
from ..shared import resourceaccesspolicy as shared_resourceaccesspolicy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FunctionConfigurationEnvironment:
    r"""The environment configuration of the function."""
    
    access_sysfs: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessSysfs'), 'exclude': lambda f: f is None }})  
    execution: Optional[shared_functionexecutionconfig.FunctionExecutionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Execution'), 'exclude': lambda f: f is None }})  
    resource_access_policies: Optional[list[shared_resourceaccesspolicy.ResourceAccessPolicy]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceAccessPolicies'), 'exclude': lambda f: f is None }})  
    variables: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Variables'), 'exclude': lambda f: f is None }})  
    