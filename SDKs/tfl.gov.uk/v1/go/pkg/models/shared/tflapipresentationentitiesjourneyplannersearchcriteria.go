// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum string

const (
	TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnumArriving  TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum = "Arriving"
	TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnumDeparting TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum = "Departing"
)

func (e TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum) ToPointer() *TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum {
	return &e
}

func (e *TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Arriving":
		fallthrough
	case "Departing":
		*e = TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum: %v", v)
	}
}

type TflAPIPresentationEntitiesJourneyPlannerSearchCriteria struct {
	DateTime        *time.Time                                                              `json:"dateTime,omitempty"`
	DateTimeType    *TflAPIPresentationEntitiesJourneyPlannerSearchCriteriaDateTimeTypeEnum `json:"dateTimeType,omitempty"`
	TimeAdjustments *TflAPIPresentationEntitiesJourneyPlannerTimeAdjustments                `json:"timeAdjustments,omitempty"`
}
