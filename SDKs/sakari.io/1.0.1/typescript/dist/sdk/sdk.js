"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var authentication_1 = require("./authentication");
var campaigns_1 = require("./campaigns");
var contacts_1 = require("./contacts");
var conversations_1 = require("./conversations");
var messages_1 = require("./messages");
var templates_1 = require("./templates");
var tools_1 = require("./tools");
var webhooks_1 = require("./webhooks");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = [
    /**
     * Sakari Production
     */
    "https://api.sakari.io",
];
/**
 * # Introduction
 *
 * @remarks
 *
 * Welcome to the documentation for the Sakari Messaging REST API.
 *
 * Sakari provides an advanced platform to drive large scale customized SMS communication
 *
 * REST is a web-service protocol that lends itself to rapid development by using everyday HTTP and JSON technology.
 *
 * To find out more about our product offering, please visit [https://sakari.io](https://sakari.io).
 *
 * # Quickstart
 *
 * For your convenience we have created a quickstart guide to get you up and running in 5 minutes.
 *
 * [https://sakari.io/blog/sakari-api-quickstart](https://sakari.io/blog/sakari-api-quickstart)
 *
 * # PostMan Collection
 *
 * We've created a simple set of examples using [PostMan](https://www.getpostman.com/) Simply click below to import these. You will need to setup three environment variables in PostMan - AccountId, ClientId and ClientSecret. Check out our PostMan blog post for more information
 *
 * [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/d616e273edc916a7a6eb)
 *
 * # Finding your client id, client secret and account id
 *
 * To authenticate against the API's you will need three key pieces of data
 *  - client id
 *  - client secret
 *  - account id
 *
 * To retrieve these, simply login into [https://hub.sakari.io](https://hub.sakari.io) and click on the "cog" in the top right corner. In the popup dialog at the bottom you should see your API credentials and account id. If these are not visible you will need to click on "Request Credentials"
 *
 * # Versioning
 *
 * With any breaking changes we will introduce a new version of the API. The latest version is v1.
 *
 * The API uses an open schema model, which means server may add extra properties to responses. Likewise, the server will ignore any extra query parameters and request body properties. When you write clients, you need to ignore additional properties in responses to ensure they do not break.
 *
 * # Testing
 *
 * There are numerous tools available for testing the API's. We will include examples using curl and the client SDKs that we have created. If you would like to see an SDK in a language not currently available, please let us know.
 *
 * # Throttling / Limits
 *
 * Our API's have been specifically designed to support bulk messaging in a single API call. We therefore impose limits on the frequency of calling the APIs to prevent abuse or runaway processes. If you feel you need a higher limit, please contact us. If you hit the limit you will get a 429 error code returned from our servers
 *
 * # Errors
 *
 * The API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be JSON in the following format:
 *
 * ```
 * {
 *   "success": false,
 *   "error": {
 *     "code": "CONT-001",
 *     "message": "Invalid mobile number"
 *   }
 * }
 * ```
 *
 * # Pagination
 *
 * For performance, most GET calls return a subset of data. This data is paginated for easy access. Most APIs which return collections of data will return a pagination object as such:
 *
 * ```
 * {
 *   "pagination": {
 *     "offset": 0,
 *     "limit": 10
 *     "totalCount": 21
 *   }
 * }
 * ```
 *
 * When making calls to the API, you can adjust the slice of data returned using query parameters such as:
 *
 * `` https://api.sakari.io/v1/accounts/123/contacts?offset=20&limit=25 ``
 *
 * This will return 25 contacts with an offset of 20.
 *
 *
 * @see {@link https://sakari.io} - Find out more about Sakari
 */
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.authentication = new authentication_1.Authentication(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.campaigns = new campaigns_1.Campaigns(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.contacts = new contacts_1.Contacts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.conversations = new conversations_1.Conversations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.messages = new messages_1.Messages(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.templates = new templates_1.Templates(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.tools = new tools_1.Tools(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.webhooks = new webhooks_1.Webhooks(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
