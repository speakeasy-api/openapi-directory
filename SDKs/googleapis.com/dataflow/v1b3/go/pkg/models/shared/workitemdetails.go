// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkItemDetailsStateEnum - State of this work item.
type WorkItemDetailsStateEnum string

const (
	WorkItemDetailsStateEnumExecutionStateUnknown    WorkItemDetailsStateEnum = "EXECUTION_STATE_UNKNOWN"
	WorkItemDetailsStateEnumExecutionStateNotStarted WorkItemDetailsStateEnum = "EXECUTION_STATE_NOT_STARTED"
	WorkItemDetailsStateEnumExecutionStateRunning    WorkItemDetailsStateEnum = "EXECUTION_STATE_RUNNING"
	WorkItemDetailsStateEnumExecutionStateSucceeded  WorkItemDetailsStateEnum = "EXECUTION_STATE_SUCCEEDED"
	WorkItemDetailsStateEnumExecutionStateFailed     WorkItemDetailsStateEnum = "EXECUTION_STATE_FAILED"
	WorkItemDetailsStateEnumExecutionStateCancelled  WorkItemDetailsStateEnum = "EXECUTION_STATE_CANCELLED"
)

func (e *WorkItemDetailsStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXECUTION_STATE_UNKNOWN":
		fallthrough
	case "EXECUTION_STATE_NOT_STARTED":
		fallthrough
	case "EXECUTION_STATE_RUNNING":
		fallthrough
	case "EXECUTION_STATE_SUCCEEDED":
		fallthrough
	case "EXECUTION_STATE_FAILED":
		fallthrough
	case "EXECUTION_STATE_CANCELLED":
		*e = WorkItemDetailsStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkItemDetailsStateEnum: %s", s)
	}
}

// WorkItemDetails - Information about an individual work item execution.
type WorkItemDetails struct {
	// Attempt ID of this work item
	AttemptID *string `json:"attemptId,omitempty"`
	// End time of this work item attempt. If the work item is completed, this is the actual end time of the work item. Otherwise, it is the predicted end time.
	EndTime *string `json:"endTime,omitempty"`
	// Metrics for this work item.
	Metrics []MetricUpdate `json:"metrics,omitempty"`
	// Information about the progress of some component of job execution.
	Progress *ProgressTimeseries `json:"progress,omitempty"`
	// Start time of this work item attempt.
	StartTime *string `json:"startTime,omitempty"`
	// State of this work item.
	State *WorkItemDetailsStateEnum `json:"state,omitempty"`
	// Information useful for straggler identification and debugging.
	StragglerInfo *StragglerInfo `json:"stragglerInfo,omitempty"`
	// Name of this work item.
	TaskID *string `json:"taskId,omitempty"`
}
