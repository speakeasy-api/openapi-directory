/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class Betslippart extends SpeakeasyBase {
  /**
   * Indicates whether each way is available
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eachWayAvailable" })
  eachWayAvailable?: boolean;

  /**
   * Indicates if the bet can be used in a multiple bet
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeInMultiple" })
  includeInMultiple: boolean;

  /**
   * To organise a number of outcome selections into one or more bet groups, such as a Single bet, a Double bet, a Trixie, etc
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legGroup" })
  legGroup?: number;

  /**
   * Indicates if there has been a change in the price
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceChanged" })
  priceChanged?: boolean;

  /**
   * Price denominator - will be ignored for types other than L (Fixed Price)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceDen" })
  priceDen: number;

  /**
   * Price numerator - will be ignored for types other than L (Fixed Price)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceNum" })
  priceNum: number;

  /**
   * The type of price selected. For example - ‘L’ (Fixed)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceType" })
  priceType: number;

  /**
   * The selection identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectionId" })
  selectionId: number;

  /**
   * Indicates whether the bet can be used in a single bet
   */
  @SpeakeasyMetadata()
  @Expose({ name: "singleAvailable" })
  singleAvailable?: boolean;

  /**
   * Indicates whether starting prices are available
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startingPriceAvailable" })
  startingPriceAvailable?: boolean;

  /**
   * Indicates the current status of the bet
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Indicates whether the status of the bet has changed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusChanged" })
  statusChanged?: boolean;
}
