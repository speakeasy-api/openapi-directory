<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETSetIdentityNotificationTopicRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETSetIdentityNotificationTopicActionEnum $action;
    
    /**
     * <p>The identity (email address or domain) that you want to set the Amazon SNS topic for.</p> <important> <p>You can only specify a verified identity for this parameter.</p> </important> <p>You can specify an identity by using its name or by using its Amazon Resource Name (ARN). The following examples are all valid identities: <code>sender@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>
     * 
     * @var string $identity
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Identity')]
    public string $identity;
    
    /**
     * The type of notifications that will be published to the specified Amazon SNS topic.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GETSetIdentityNotificationTopicNotificationTypeEnum $notificationType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NotificationType')]
    public GETSetIdentityNotificationTopicNotificationTypeEnum $notificationType;
    
    /**
     * The Amazon Resource Name (ARN) of the Amazon SNS topic. If the parameter is omitted from the request or a null value is passed, <code>SnsTopic</code> is cleared and publishing is disabled.
     * 
     * @var ?string $snsTopic
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SnsTopic')]
    public ?string $snsTopic = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETSetIdentityNotificationTopicVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETSetIdentityNotificationTopicActionEnum::SET_IDENTITY_NOTIFICATION_TOPIC;
		$this->identity = "";
		$this->notificationType = \OpenAPI\OpenAPI\Models\Operations\GETSetIdentityNotificationTopicNotificationTypeEnum::BOUNCE;
		$this->snsTopic = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETSetIdentityNotificationTopicVersionEnum::TWO_THOUSAND_AND_TEN1201;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
