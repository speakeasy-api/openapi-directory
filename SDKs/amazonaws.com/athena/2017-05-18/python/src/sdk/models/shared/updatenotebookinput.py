"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import notebooktype_enum as shared_notebooktype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNotebookInput:
    
    notebook_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotebookId') }})  
    payload: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Payload') }})  
    type: shared_notebooktype_enum.NotebookTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    client_request_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientRequestToken'), 'exclude': lambda f: f is None }})  
    session_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SessionId'), 'exclude': lambda f: f is None }})  
    