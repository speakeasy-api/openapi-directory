"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsCorrelationMatrixTheoryImpliedRequestBodyAssets:
    
    asset_hierarchical_classification: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetHierarchicalClassification') }})
    r"""assetHierarchicalClassification[i] is the i+1-th level of the hierarchical classification of the asset, from the most generic classification to the most specific classification; all the assetHierarchicalClassification arrays must have the same length"""  
    
class PostAssetsCorrelationMatrixTheoryImpliedRequestBodyClusteringMethodEnum(str, Enum):
    r"""The hierarchical clustering method to use"""
    SINGLE_LINKAGE = 'singleLinkage'
    AVERAGE_LINKAGE = 'averageLinkage'
    COMPLETE_LINKAGE = 'completeLinkage'
    WARD_LINKAGE = 'wardLinkage'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsCorrelationMatrixTheoryImpliedRequestBody:
    
    assets: list[PostAssetsCorrelationMatrixTheoryImpliedRequestBodyAssets] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assets') }})  
    assets_correlation_matrix: list[list[float]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetsCorrelationMatrix') }})
    r"""assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j"""  
    clustering_method: Optional[PostAssetsCorrelationMatrixTheoryImpliedRequestBodyClusteringMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusteringMethod'), 'exclude': lambda f: f is None }})
    r"""The hierarchical clustering method to use"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsCorrelationMatrixTheoryImplied200ApplicationJSON:
    r"""OK"""
    
    assets_correlation_matrix: list[list[float]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetsCorrelationMatrix') }})
    r"""assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j"""  
    

@dataclasses.dataclass
class PostAssetsCorrelationMatrixTheoryImpliedResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_assets_correlation_matrix_theory_implied_200_application_json_object: Optional[PostAssetsCorrelationMatrixTheoryImplied200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    