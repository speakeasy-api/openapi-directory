<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Person
{
	#[\JMS\Serializer\Annotation\SerializedName('Address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonAddress')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonAddress $address = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ArchivalDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $archivalDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Birth')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonBirth')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonBirth $birth = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('FirstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
    /**
     * $function
     * 
     * @var ?array<string> $function
     */
	#[\JMS\Serializer\Annotation\SerializedName('Function')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $function = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MemberId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $memberId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Mobile')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mobile = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ModificationDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modificationDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Sex')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PersonSexEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonSexEnum $sex = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Validated')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PersonValidatedEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonValidatedEnum $validated = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->archivalDate = null;
		$this->birth = null;
		$this->comment = null;
		$this->email = null;
		$this->firstName = null;
		$this->function = null;
		$this->id = null;
		$this->memberId = null;
		$this->mobile = null;
		$this->modificationDate = null;
		$this->name = null;
		$this->sex = null;
		$this->validated = null;
	}
}
