/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HyperParameterTuningResourceConfig - &lt;p&gt;The configuration of resources, including compute instances and storage volumes for use in training jobs launched by hyperparameter tuning jobs. &lt;code&gt;HyperParameterTuningResourceConfig&lt;/code&gt; is similar to &lt;code&gt;ResourceConfig&lt;/code&gt;, but has the additional &lt;code&gt;InstanceConfigs&lt;/code&gt; and &lt;code&gt;AllocationStrategy&lt;/code&gt; fields to allow for flexible instance management. Specify one or more instance types, count, and the allocation strategy for instance selection.&lt;/p&gt; &lt;note&gt; &lt;p&gt; &lt;code&gt;HyperParameterTuningResourceConfig&lt;/code&gt; supports the capabilities of &lt;code&gt;ResourceConfig&lt;/code&gt; with the exception of &lt;code&gt;KeepAlivePeriodInSeconds&lt;/code&gt;. Hyperparameter tuning jobs use warm pools by default, which reuse clusters between training jobs.&lt;/p&gt; &lt;/note&gt;
 */
public class HyperParameterTuningResourceConfig {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllocationStrategy")
    public HyperParameterTuningAllocationStrategyEnum allocationStrategy;
    public HyperParameterTuningResourceConfig withAllocationStrategy(HyperParameterTuningAllocationStrategyEnum allocationStrategy) {
        this.allocationStrategy = allocationStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceConfigs")
    public HyperParameterTuningInstanceConfig[] instanceConfigs;
    public HyperParameterTuningResourceConfig withInstanceConfigs(HyperParameterTuningInstanceConfig[] instanceConfigs) {
        this.instanceConfigs = instanceConfigs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceCount")
    public Long instanceCount;
    public HyperParameterTuningResourceConfig withInstanceCount(Long instanceCount) {
        this.instanceCount = instanceCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceType")
    public TrainingInstanceTypeEnum instanceType;
    public HyperParameterTuningResourceConfig withInstanceType(TrainingInstanceTypeEnum instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VolumeKmsKeyId")
    public String volumeKmsKeyId;
    public HyperParameterTuningResourceConfig withVolumeKmsKeyId(String volumeKmsKeyId) {
        this.volumeKmsKeyId = volumeKmsKeyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VolumeSizeInGB")
    public Long volumeSizeInGB;
    public HyperParameterTuningResourceConfig withVolumeSizeInGB(Long volumeSizeInGB) {
        this.volumeSizeInGB = volumeSizeInGB;
        return this;
    }
    
}
