/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class AppSessionsByTimeRequest extends SpeakeasyBase {
  /**
   * (Optional) String
   *
   * @remarks
   *
   * App API identifier retrieved from the Developer Console to limit analytics to a specific app.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=app_id",
  })
  appId?: string;

  /**
   * (Optional) DateTime (ISO 8601 string)
   *
   * @remarks
   *
   * Point in time when the data series should end - defaults to time of the request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ending_at",
  })
  endingAt?: string;

  /**
   * (Required) Integer
   *
   * @remarks
   *
   * Max number of units (days or hours) before ending_at to include in the returned series - must be between 1 and 100 inclusive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=length",
  })
  length?: string;

  /**
   * (Optional) String
   *
   * @remarks
   *
   * Segment API identifier indicating the analytics enabled segment for which sessions should be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=segment_id",
  })
  segmentId?: string;

  /**
   * (Optional) String
   *
   * @remarks
   *
   * Unit of time between data points - can be "day" or "hour" (defaults to "day").
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=unit" })
  unit?: string;
}

export class AppSessionsByTimeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
