"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Area:
    
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    x_latitude: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('XLatitude') }})  
    x_longitude: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('XLongitude') }})  
    y_latitude: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('YLatitude') }})  
    y_longitude: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('YLongitude') }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    