"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateACardParametersBillingAddress:
    r"""The card's updated billing address."""
    
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})
    r"""The city of the billing address."""  
    line1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line1') }})
    r"""The first line of the billing address."""  
    postal_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postal_code') }})
    r"""The postal code of the billing address."""  
    state: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})
    r"""The US state of the billing address."""  
    line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line2'), 'exclude': lambda f: f is None }})
    r"""The second line of the billing address."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateACardParametersDigitalWallet:
    r"""The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps."""
    
    card_profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_profile_id'), 'exclude': lambda f: f is None }})
    r"""The card profile assigned to this digital card. Card profiles may also be assigned at the program level."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""An email address that can be used to verify the cardholder via one-time passcode over email."""  
    phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})
    r"""A phone number that can be used to verify the cardholder via one-time passcode over SMS."""  
    
class UpdateACardParametersStatusEnum(str, Enum):
    r"""The status to update the Card with."""
    ACTIVE = 'active'
    DISABLED = 'disabled'
    CANCELED = 'canceled'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateACardParameters:
    
    billing_address: Optional[UpdateACardParametersBillingAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billing_address'), 'exclude': lambda f: f is None }})
    r"""The card's updated billing address."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description you choose to give the card."""  
    digital_wallet: Optional[UpdateACardParametersDigitalWallet] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('digital_wallet'), 'exclude': lambda f: f is None }})
    r"""The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps."""  
    status: Optional[UpdateACardParametersStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status to update the Card with."""  
    