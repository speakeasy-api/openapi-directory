"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudcdnegressworkload as shared_cloudcdnegressworkload
from ..shared import cloudcdnworkload as shared_cloudcdnworkload
from ..shared import cloudinterconnectegressworkload as shared_cloudinterconnectegressworkload
from ..shared import cloudinterconnectworkload as shared_cloudinterconnectworkload
from ..shared import cloudstorageegressworkload as shared_cloudstorageegressworkload
from ..shared import cloudstorageworkload as shared_cloudstorageworkload
from ..shared import computevmworkload as shared_computevmworkload
from ..shared import premiumtieregressworkload as shared_premiumtieregressworkload
from ..shared import standardtieregressworkload as shared_standardtieregressworkload
from ..shared import vmtovmegressworkload as shared_vmtovmegressworkload
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Workload:
    r"""Specifies usage on a single Google Cloud product over a time frame. Each Google Cloud product has its own message, containing specific product configuration parameters of the product usage amounts along each dimension in which the product is billed."""
    
    cloud_cdn_egress_workload: Optional[shared_cloudcdnegressworkload.CloudCdnEgressWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudCdnEgressWorkload'), 'exclude': lambda f: f is None }})
    r"""Specifies usage for Cloud CDN egress."""  
    cloud_cdn_workload: Optional[shared_cloudcdnworkload.CloudCdnWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudCdnWorkload'), 'exclude': lambda f: f is None }})
    r"""Specifies usage for Cloud CDN resources."""  
    cloud_interconnect_egress_workload: Optional[shared_cloudinterconnectegressworkload.CloudInterconnectEgressWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudInterconnectEgressWorkload'), 'exclude': lambda f: f is None }})
    r"""The interconnect egress only includes the Interconnect Egress. Please use the standard egress traffic interface to specify your standard egress usage."""  
    cloud_interconnect_workload: Optional[shared_cloudinterconnectworkload.CloudInterconnectWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudInterconnectWorkload'), 'exclude': lambda f: f is None }})
    r"""Specifies usage for Cloud Interconnect resources."""  
    cloud_storage_egress_workload: Optional[shared_cloudstorageegressworkload.CloudStorageEgressWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudStorageEgressWorkload'), 'exclude': lambda f: f is None }})
    r"""Specification of a network type. Network egress within Google Cloud applies when you move or copy data from one Cloud Storage bucket to another or when another Google Cloud service accesses data in your Cloud Storage bucket.This includes the network egress within Google Cloud and the general network usage."""  
    cloud_storage_workload: Optional[shared_cloudstorageworkload.CloudStorageWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudStorageWorkload'), 'exclude': lambda f: f is None }})
    r"""Specifies usage of Cloud Storage resources."""  
    compute_vm_workload: Optional[shared_computevmworkload.ComputeVMWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computeVmWorkload'), 'exclude': lambda f: f is None }})
    r"""Specificies usage of a set of identical compute VM instances."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. A name for this workload. All workloads in a `CostScenario` must have a unique `name`. Each `name` may be at most 128 characters long."""  
    premium_tier_egress_workload: Optional[shared_premiumtieregressworkload.PremiumTierEgressWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('premiumTierEgressWorkload'), 'exclude': lambda f: f is None }})
    r"""Specify Premium Tier Internet egress networking."""  
    standard_tier_egress_workload: Optional[shared_standardtieregressworkload.StandardTierEgressWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('standardTierEgressWorkload'), 'exclude': lambda f: f is None }})
    r"""Specify Standard Tier Internet egress networking."""  
    vm_to_vm_egress_workload: Optional[shared_vmtovmegressworkload.VMToVMEgressWorkload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmToVmEgressWorkload'), 'exclude': lambda f: f is None }})
    r"""Specify VM to VM egress."""  
    