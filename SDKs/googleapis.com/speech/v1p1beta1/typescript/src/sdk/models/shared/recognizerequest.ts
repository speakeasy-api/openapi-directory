/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecognitionAudio } from "./recognitionaudio";
import { RecognitionConfigInput } from "./recognitionconfig";
import { Expose, Type } from "class-transformer";

/**
 * The top-level message sent by the client for the `Recognize` method.
 */
export class RecognizeRequestInput extends SpeakeasyBase {
  /**
   * Contains audio data in the encoding specified in the `RecognitionConfig`. Either `content` or `uri` must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. See [content limits](https://cloud.google.com/speech-to-text/quotas#content).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audio" })
  @Type(() => RecognitionAudio)
  audio?: RecognitionAudio;

  /**
   * Provides information to the recognizer that specifies how to process the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => RecognitionConfigInput)
  config?: RecognitionConfigInput;
}
