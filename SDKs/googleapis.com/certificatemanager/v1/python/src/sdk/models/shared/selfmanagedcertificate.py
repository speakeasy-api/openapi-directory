"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SelfManagedCertificate:
    r"""Certificate data for a SelfManaged Certificate. SelfManaged Certificates are uploaded by the user. Updating such certificates before they expire remains the user's responsibility."""
    
    pem_certificate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pemCertificate'), 'exclude': lambda f: f is None }})
    r"""Input only. The PEM-encoded certificate chain. Leaf certificate comes first, followed by intermediate ones if any."""  
    pem_private_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pemPrivateKey'), 'exclude': lambda f: f is None }})
    r"""Input only. The PEM-encoded private key of the leaf certificate."""  
    