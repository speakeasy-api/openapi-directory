"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import actionamendcreditmemodata as shared_actionamendcreditmemodata
from ..shared import actionamendinvoicedata as shared_actionamendinvoicedata
from ..shared import actionserrorresponse as shared_actionserrorresponse
from ..shared import chargemetricsdata as shared_chargemetricsdata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AmendResult:
    
    amendment_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AmendmentIds'), 'exclude': lambda f: f is None }})
    r"""A list of the IDs of the associated amendments. There can be as many as three amendment IDs. Use a comma to separate each amendment ID."""  
    charge_metrics_data: Optional[shared_chargemetricsdata.ChargeMetricsData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChargeMetricsData'), 'exclude': lambda f: f is None }})  
    credit_memo_datas: Optional[list[shared_actionamendcreditmemodata.ActionAmendCreditMemoData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreditMemoDatas'), 'exclude': lambda f: f is None }})  
    credit_memo_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreditMemoId'), 'exclude': lambda f: f is None }})  
    errors: Optional[list[shared_actionserrorresponse.ActionsErrorResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Errors'), 'exclude': lambda f: f is None }})  
    gateway_response: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GatewayResponse'), 'exclude': lambda f: f is None }})  
    gateway_response_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GatewayResponseCode'), 'exclude': lambda f: f is None }})  
    invoice_datas: Optional[list[shared_actionamendinvoicedata.ActionAmendInvoiceData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceDatas'), 'exclude': lambda f: f is None }})
    r"""This array of invoices contains one invoice only as one invoice is generated for one subscription."""  
    invoice_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceId'), 'exclude': lambda f: f is None }})  
    payment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaymentId'), 'exclude': lambda f: f is None }})  
    payment_transaction_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaymentTransactionNumber'), 'exclude': lambda f: f is None }})  
    subscription_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubscriptionId'), 'exclude': lambda f: f is None }})  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Success'), 'exclude': lambda f: f is None }})  
    total_delta_mrr: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalDeltaMrr'), 'exclude': lambda f: f is None }})  
    total_delta_tcv: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalDeltaTcv'), 'exclude': lambda f: f is None }})  
    