"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import replicatingstep as shared_replicatingstep
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CycleStep:
    r"""CycleStep holds information about a step progress."""
    
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""The time the cycle step has ended."""  
    initializing_replication: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initializingReplication'), 'exclude': lambda f: f is None }})
    r"""InitializingReplicationStep contains specific step details."""  
    post_processing: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postProcessing'), 'exclude': lambda f: f is None }})
    r"""PostProcessingStep contains specific step details."""  
    replicating: Optional[shared_replicatingstep.ReplicatingStep] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replicating'), 'exclude': lambda f: f is None }})
    r"""ReplicatingStep contains specific step details."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""The time the cycle step has started."""  
    