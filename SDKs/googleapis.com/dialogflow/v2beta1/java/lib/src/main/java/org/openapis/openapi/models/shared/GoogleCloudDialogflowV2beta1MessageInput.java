/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDialogflowV2beta1MessageInput - Represents a message posted into a conversation.
 */
public class GoogleCloudDialogflowV2beta1MessageInput {
    /**
     * Required. The message content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;
    public GoogleCloudDialogflowV2beta1MessageInput withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCode")
    public String languageCode;
    public GoogleCloudDialogflowV2beta1MessageInput withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * Represents the result of annotation for the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messageAnnotation")
    public GoogleCloudDialogflowV2beta1MessageAnnotation messageAnnotation;
    public GoogleCloudDialogflowV2beta1MessageInput withMessageAnnotation(GoogleCloudDialogflowV2beta1MessageAnnotation messageAnnotation) {
        this.messageAnnotation = messageAnnotation;
        return this;
    }
    
    /**
     * Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleCloudDialogflowV2beta1MessageInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional. The time when the message was sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sendTime")
    public String sendTime;
    public GoogleCloudDialogflowV2beta1MessageInput withSendTime(String sendTime) {
        this.sendTime = sendTime;
        return this;
    }
    
    /**
     * The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sentimentAnalysis")
    public GoogleCloudDialogflowV2beta1SentimentAnalysisResult sentimentAnalysis;
    public GoogleCloudDialogflowV2beta1MessageInput withSentimentAnalysis(GoogleCloudDialogflowV2beta1SentimentAnalysisResult sentimentAnalysis) {
        this.sentimentAnalysis = sentimentAnalysis;
        return this;
    }
    
}
