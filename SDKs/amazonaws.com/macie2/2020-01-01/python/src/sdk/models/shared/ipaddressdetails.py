"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ipcity as shared_ipcity
from ..shared import ipcountry as shared_ipcountry
from ..shared import ipgeolocation as shared_ipgeolocation
from ..shared import ipowner as shared_ipowner
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IPAddressDetails:
    r"""Provides information about the IP address of the device that an entity used to perform an action on an affected resource."""
    
    ip_address_v4: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipAddressV4'), 'exclude': lambda f: f is None }})  
    ip_city: Optional[shared_ipcity.IPCity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipCity'), 'exclude': lambda f: f is None }})  
    ip_country: Optional[shared_ipcountry.IPCountry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipCountry'), 'exclude': lambda f: f is None }})  
    ip_geo_location: Optional[shared_ipgeolocation.IPGeoLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipGeoLocation'), 'exclude': lambda f: f is None }})  
    ip_owner: Optional[shared_ipowner.IPOwner] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipOwner'), 'exclude': lambda f: f is None }})  
    