<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetCalendarDatesExportRequest
{
    /**
     * 
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public string $apiKey;
    
    /**
     * 
     * Each type of event has a calendar category with an integer id. Options are: Open Meetings: 32, Executive Sessions: 39, Public Hearings: 40,
     * Conferences: 33, Roundtables: 34, Election Dates: 36, Federal Holidays: 37, FEA Periods: 38, Commission Meetings: 20,
     * Reporting Deadlines: 21, Conferences and Outreach: 22, AOs and Rules: 23, Other: 24, Quarterly: 25, Monthly: 26,
     * Pre and Post-Elections: 27, EC Periods:28, and IE Periods: 29
     * 
     * 
     * @var ?array<int> $calendarCategoryId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=calendar_category_id')]
    public ?array $calendarCategoryId = null;
    
    /**
     * Brief description of event
     * 
     * @var ?array<string> $description
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=description')]
    public ?array $description = null;
    
    /**
     * An unique ID for an event. Useful for downloading a single event to your calendar. This ID is not a permanent, persistent ID.
     * 
     * @var ?int $eventId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=event_id')]
    public ?int $eventId = null;
    
    /**
     * 
     * The maximum end date.(MM/DD/YYYY or YYYY-MM-DD)
     * 
     * 
     * @var ?\DateTime $maxEndDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_end_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxEndDate = null;
    
    /**
     * 
     * The maximum start date.(MM/DD/YYYY or YYYY-MM-DD)
     * 
     * 
     * @var ?\DateTime $maxStartDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_start_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxStartDate = null;
    
    /**
     * 
     * The minimum end date.(MM/DD/YYYY or YYYY-MM-DD)
     * 
     * 
     * @var ?\DateTime $minEndDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_end_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minEndDate = null;
    
    /**
     * 
     * The minimum start date.(MM/DD/YYYY or YYYY-MM-DD)
     * 
     * 
     * @var ?\DateTime $minStartDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_start_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minStartDate = null;
    
    /**
     * For paginating through results, starting at page 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results returned per page. Defaults to 20.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=renderer')]
    public ?GetCalendarDatesExportRendererEnum $renderer = null;
    
    /**
     * Provide a field to sort by. Use `-` for descending order.
     * 
     * 
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Hide null values on sorted column(s).
     * 
     * @var ?bool $sortHideNull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_hide_null')]
    public ?bool $sortHideNull = null;
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     * 
     * @var ?bool $sortNullOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_null_only')]
    public ?bool $sortNullOnly = null;
    
    /**
     * Toggle that sorts null values last
     * 
     * @var ?bool $sortNullsLast
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_nulls_last')]
    public ?bool $sortNullsLast = null;
    
    /**
     * Longer description of event
     * 
     * @var ?array<string> $summary
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=summary')]
    public ?array $summary = null;
    
	public function __construct()
	{
		$this->apiKey = "";
		$this->calendarCategoryId = null;
		$this->description = null;
		$this->eventId = null;
		$this->maxEndDate = null;
		$this->maxStartDate = null;
		$this->minEndDate = null;
		$this->minStartDate = null;
		$this->page = null;
		$this->perPage = null;
		$this->renderer = null;
		$this->sort = null;
		$this->sortHideNull = null;
		$this->sortNullOnly = null;
		$this->sortNullsLast = null;
		$this->summary = null;
	}
}
