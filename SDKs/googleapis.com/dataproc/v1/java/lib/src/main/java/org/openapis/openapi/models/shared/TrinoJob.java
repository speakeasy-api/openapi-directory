/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TrinoJob - A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.
 */
public class TrinoJob {
    /**
     * Optional. Trino client tags to attach to this query
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientTags")
    public String[] clientTags;

    public TrinoJob withClientTags(String[] clientTags) {
        this.clientTags = clientTags;
        return this;
    }
    
    /**
     * Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("continueOnFailure")
    public Boolean continueOnFailure;

    public TrinoJob withContinueOnFailure(Boolean continueOnFailure) {
        this.continueOnFailure = continueOnFailure;
        return this;
    }
    
    /**
     * The runtime logging config of the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loggingConfig")
    public LoggingConfig loggingConfig;

    public TrinoJob withLoggingConfig(LoggingConfig loggingConfig) {
        this.loggingConfig = loggingConfig;
        return this;
    }
    
    /**
     * Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputFormat")
    public String outputFormat;

    public TrinoJob withOutputFormat(String outputFormat) {
        this.outputFormat = outputFormat;
        return this;
    }
    
    /**
     * Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, String> properties;

    public TrinoJob withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * The HCFS URI of the script that contains SQL queries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryFileUri")
    public String queryFileUri;

    public TrinoJob withQueryFileUri(String queryFileUri) {
        this.queryFileUri = queryFileUri;
        return this;
    }
    
    /**
     * A list of queries to run on a cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryList")
    public QueryList queryList;

    public TrinoJob withQueryList(QueryList queryList) {
        this.queryList = queryList;
        return this;
    }
    
    public TrinoJob(){}
}
