// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"net/http"
)

// ManageE911signageApplicationJSON2MethodEnum - To remove the emergency content from the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_removed`.
type ManageE911signageApplicationJSON2MethodEnum string

const (
	ManageE911signageApplicationJSON2MethodEnumZoomroomEmergencyAlertRemoved ManageE911signageApplicationJSON2MethodEnum = "zoomroom.emergency_alert_removed"
)

func (e *ManageE911signageApplicationJSON2MethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "zoomroom.emergency_alert_removed":
		*e = ManageE911signageApplicationJSON2MethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ManageE911signageApplicationJSON2MethodEnum: %s", s)
	}
}

// ManageE911signageApplicationJSON2ParamsTargetTypeEnum - Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
// * `account`
// * `location`
// * `room`
type ManageE911signageApplicationJSON2ParamsTargetTypeEnum string

const (
	ManageE911signageApplicationJSON2ParamsTargetTypeEnumAccount  ManageE911signageApplicationJSON2ParamsTargetTypeEnum = "account"
	ManageE911signageApplicationJSON2ParamsTargetTypeEnumLocation ManageE911signageApplicationJSON2ParamsTargetTypeEnum = "location"
	ManageE911signageApplicationJSON2ParamsTargetTypeEnumRoom     ManageE911signageApplicationJSON2ParamsTargetTypeEnum = "room"
)

func (e *ManageE911signageApplicationJSON2ParamsTargetTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "account":
		fallthrough
	case "location":
		fallthrough
	case "room":
		*e = ManageE911signageApplicationJSON2ParamsTargetTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ManageE911signageApplicationJSON2ParamsTargetTypeEnum: %s", s)
	}
}

type ManageE911signageApplicationJSON2Params struct {
	// Unique identifier of the event.
	EventID *string `json:"event_id,omitempty"`
	// Provide one of the following IDs associated with the Zoom Room.<br>
	//
	// * `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to remove the alert content from all Zoom Rooms' displays in the account.<br><br>
	// * `locationId`: Location ID. Get the value of this field by calling [List Zoom Rooms Locations API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations).<br>Provide location ID as the value of this field to remove the alert content from all Zoom Rooms' displays listed in the specified location.<br><br>
	// * `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling [List Zoom Rooms API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms). Provide room ID as the value of this field to remove the alert content from a specific Zoom Rooms' display.
	TargetIds []string `json:"target_ids,omitempty"`
	// Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
	// * `account`
	// * `location`
	// * `room`
	TargetType *ManageE911signageApplicationJSON2ParamsTargetTypeEnum `json:"target_type,omitempty"`
}

// ManageE911signageApplicationJSON2 - Provide this request body to remove the emergency alert content. Note that there won't be a response body for this request.
type ManageE911signageApplicationJSON2 struct {
	// To remove the emergency content from the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_removed`.
	Method *ManageE911signageApplicationJSON2MethodEnum `json:"method,omitempty"`
	Params *ManageE911signageApplicationJSON2Params     `json:"params,omitempty"`
}

// ManageE911signageApplicationJSON1MethodEnum - To display the emergency content on the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_displayed`.
type ManageE911signageApplicationJSON1MethodEnum string

const (
	ManageE911signageApplicationJSON1MethodEnumZoomroomEmergencyAlertDisplayed ManageE911signageApplicationJSON1MethodEnum = "zoomroom.emergency_alert_displayed"
)

func (e *ManageE911signageApplicationJSON1MethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "zoomroom.emergency_alert_displayed":
		*e = ManageE911signageApplicationJSON1MethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ManageE911signageApplicationJSON1MethodEnum: %s", s)
	}
}

// ManageE911signageApplicationJSON1ParamsTargetTypeEnum - Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
// * `account`
// * `location`
// * `room`
type ManageE911signageApplicationJSON1ParamsTargetTypeEnum string

const (
	ManageE911signageApplicationJSON1ParamsTargetTypeEnumAccount  ManageE911signageApplicationJSON1ParamsTargetTypeEnum = "account"
	ManageE911signageApplicationJSON1ParamsTargetTypeEnumLocation ManageE911signageApplicationJSON1ParamsTargetTypeEnum = "location"
	ManageE911signageApplicationJSON1ParamsTargetTypeEnumRoom     ManageE911signageApplicationJSON1ParamsTargetTypeEnum = "room"
)

func (e *ManageE911signageApplicationJSON1ParamsTargetTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "account":
		fallthrough
	case "location":
		fallthrough
	case "room":
		*e = ManageE911signageApplicationJSON1ParamsTargetTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ManageE911signageApplicationJSON1ParamsTargetTypeEnum: %s", s)
	}
}

type ManageE911signageApplicationJSON1Params struct {
	// Provide the content to be displayed.
	Content *string `json:"content,omitempty"`
	// Provide one of the following IDs associated with the Zoom Room.<br>
	//
	// * `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to display the alert content on all Zoom Rooms' displays in the account.<br><br>
	// * `locationId`: Location ID. Get the value of this field by calling [List Zoom Rooms Locations API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations).<br>Provide location ID as the value of this field to display the alert content on all Zoom Rooms' displays listed in the specified location.<br><br>
	// * `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling [List Zoom Rooms API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms). Provide room ID as the value of this field to display the alert content on a specific Zoom Rooms' display.
	TargetIds []string `json:"target_ids,omitempty"`
	// Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
	// * `account`
	// * `location`
	// * `room`
	TargetType *ManageE911signageApplicationJSON1ParamsTargetTypeEnum `json:"target_type,omitempty"`
}

// ManageE911signageApplicationJSON1 - Provide this request body to set and display the emergency alert content.
type ManageE911signageApplicationJSON1 struct {
	// To display the emergency content on the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_displayed`.
	Method *ManageE911signageApplicationJSON1MethodEnum `json:"method,omitempty"`
	Params *ManageE911signageApplicationJSON1Params     `json:"params,omitempty"`
}

type ManageE911signageApplicationJSONType string

const (
	ManageE911signageApplicationJSONTypeManageE911signageApplicationJSON1 ManageE911signageApplicationJSONType = "manageE911signage_ApplicationJSON_1"
	ManageE911signageApplicationJSONTypeManageE911signageApplicationJSON2 ManageE911signageApplicationJSONType = "manageE911signage_ApplicationJSON_2"
)

type ManageE911signageApplicationJSON struct {
	ManageE911signageApplicationJSON1 *ManageE911signageApplicationJSON1
	ManageE911signageApplicationJSON2 *ManageE911signageApplicationJSON2

	Type ManageE911signageApplicationJSONType
}

func CreateManageE911signageApplicationJSONManageE911signageApplicationJSON1(manageE911signageApplicationJSON1 ManageE911signageApplicationJSON1) ManageE911signageApplicationJSON {
	typ := ManageE911signageApplicationJSONTypeManageE911signageApplicationJSON1

	return ManageE911signageApplicationJSON{
		ManageE911signageApplicationJSON1: &manageE911signageApplicationJSON1,
		Type:                              typ,
	}
}

func CreateManageE911signageApplicationJSONManageE911signageApplicationJSON2(manageE911signageApplicationJSON2 ManageE911signageApplicationJSON2) ManageE911signageApplicationJSON {
	typ := ManageE911signageApplicationJSONTypeManageE911signageApplicationJSON2

	return ManageE911signageApplicationJSON{
		ManageE911signageApplicationJSON2: &manageE911signageApplicationJSON2,
		Type:                              typ,
	}
}

func (u *ManageE911signageApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	manageE911signageApplicationJSON1 := new(ManageE911signageApplicationJSON1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&manageE911signageApplicationJSON1); err == nil {
		u.ManageE911signageApplicationJSON1 = manageE911signageApplicationJSON1
		u.Type = ManageE911signageApplicationJSONTypeManageE911signageApplicationJSON1
		return nil
	}

	manageE911signageApplicationJSON2 := new(ManageE911signageApplicationJSON2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&manageE911signageApplicationJSON2); err == nil {
		u.ManageE911signageApplicationJSON2 = manageE911signageApplicationJSON2
		u.Type = ManageE911signageApplicationJSONTypeManageE911signageApplicationJSON2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u ManageE911signageApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.ManageE911signageApplicationJSON1 != nil {
		return json.Marshal(u.ManageE911signageApplicationJSON1)
	}

	if u.ManageE911signageApplicationJSON2 != nil {
		return json.Marshal(u.ManageE911signageApplicationJSON2)
	}

	return nil, nil
}

// ManageE911signage202ApplicationXML - **HTTP Status Code:** `202` <br>
type ManageE911signage202ApplicationXML struct {
	// Unique identifier of the event related to the content being displayed. This field is only returned if you provided `zoomroom.emergency_alert_displayed` as the value of the `method` parameter.
	//
	// Save this response value and provide it as the value of the `event_id` request parameter when you need to remove the alert content using `zoomroom.emergency_alert_removed` method.
	EventID *string
}

// ManageE911signage202ApplicationJSON - **HTTP Status Code:** `202` <br>
type ManageE911signage202ApplicationJSON struct {
	// Unique identifier of the event related to the content being displayed. This field is only returned if you provided `zoomroom.emergency_alert_displayed` as the value of the `method` parameter.
	//
	// Save this response value and provide it as the value of the `event_id` request parameter when you need to remove the alert content using `zoomroom.emergency_alert_removed` method.
	EventID *string `json:"event_id,omitempty"`
}

type ManageE911signageResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `202` <br>
	ManageE911signage202ApplicationJSONObject *ManageE911signage202ApplicationJSON
}
