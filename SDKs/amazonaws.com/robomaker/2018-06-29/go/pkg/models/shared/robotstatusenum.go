// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RobotStatusEnum string

const (
	RobotStatusEnumAvailable            RobotStatusEnum = "Available"
	RobotStatusEnumRegistered           RobotStatusEnum = "Registered"
	RobotStatusEnumPendingNewDeployment RobotStatusEnum = "PendingNewDeployment"
	RobotStatusEnumDeploying            RobotStatusEnum = "Deploying"
	RobotStatusEnumFailed               RobotStatusEnum = "Failed"
	RobotStatusEnumInSync               RobotStatusEnum = "InSync"
	RobotStatusEnumNoResponse           RobotStatusEnum = "NoResponse"
)

func (e RobotStatusEnum) ToPointer() *RobotStatusEnum {
	return &e
}

func (e *RobotStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Available":
		fallthrough
	case "Registered":
		fallthrough
	case "PendingNewDeployment":
		fallthrough
	case "Deploying":
		fallthrough
	case "Failed":
		fallthrough
	case "InSync":
		fallthrough
	case "NoResponse":
		*e = RobotStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RobotStatusEnum: %v", v)
	}
}
