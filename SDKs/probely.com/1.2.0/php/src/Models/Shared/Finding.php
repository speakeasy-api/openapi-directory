<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Finding - Event object.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Finding
{
    /**
     * Assigned user
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Assignee $assignee
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Assignee')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Assignee $assignee = null;
    
    /**
     * Date time of the last change
     * 
     * @var ?\DateTime $changed
     */
	#[\JMS\Serializer\Annotation\SerializedName('changed')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $changed = null;
    
    /**
     * User that last modified the object
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChangedBy $changedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('changed_by')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChangedBy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChangedBy $changedBy = null;
    
    /**
     * User comment left on the finding.
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * CVSS score
     * 
     * @var ?float $cvssScore
     */
	#[\JMS\Serializer\Annotation\SerializedName('cvss_score')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cvssScore = null;
    
    /**
     * CVSS vector
     * 
     * @var ?string $cvssVector
     */
	#[\JMS\Serializer\Annotation\SerializedName('cvss_vector')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cvssVector = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('definition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Definition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Definition $definition = null;
    
    /**
     * Evidence for the finding.
     * 
     * @var ?string $evidence
     */
	#[\JMS\Serializer\Annotation\SerializedName('evidence')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $evidence = null;
    
    /**
     * Extra data for the finding.
     * 
     * @var ?string $extra
     */
	#[\JMS\Serializer\Annotation\SerializedName('extra')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $extra = null;
    
    /**
     * Fix sugestion for the vulnerability and framework
     * 
     * @var ?string $fix
     */
	#[\JMS\Serializer\Annotation\SerializedName('fix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fix = null;
    
    /**
     * Object id.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * An insertion point is the place in the HTTP request where the
     * 
     * malicious payload is injected to exploit the vulnerability.
     *   * cookie - Payload injected into the value of an HTTP cookie
     *   * header - Payload injected into the header of an HTTP request
     *   * parameter - Payload injected into the value of a query string
     *   parameter
     *   * arbitrary_url_param - Payload injected into the value of an
     *   arbitrarily added query string parameter
     *   * url_filename - Payload injected into the URL filename part
     *   * url_folder - Payload injected into the URL folder part
     *   * multipart_parameter - Payload is inserted into the value of a
     *   parameter attribute within a multi-part message body (such as
     *   the name of an uploaded file).
     *   * <empty> - No payload to inject.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FindingInsertionPointEnum $insertionPoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('insertion_point')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FindingInsertionPointEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FindingInsertionPointEnum $insertionPoint = null;
    
    /**
     * User labels for the finding.
     * 
     * @var ?array<string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Date time of the last time the vulnerability was found.
     * 
     * @var ?\DateTime $lastFound
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_found')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastFound = null;
    
    /**
     * HTTP method
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MethodEnum $method
     */
	#[\JMS\Serializer\Annotation\SerializedName('method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MethodEnum $method = null;
    
    /**
     * Vulnerable paramenter.
     * 
     * @var ?string $parameter
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parameter = null;
    
    /**
     * Request parameters
     * 
     * @var ?string $params
     */
	#[\JMS\Serializer\Annotation\SerializedName('params')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $params = null;
    
    /**
     * Finding path.
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * Reporting user
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Reporter $reporter
     */
	#[\JMS\Serializer\Annotation\SerializedName('reporter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Reporter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Reporter $reporter = null;
    
    /**
     * Request response pairs that produced the finding
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Requests> $requests
     */
	#[\JMS\Serializer\Annotation\SerializedName('requests')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Requests>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $requests = null;
    
    /**
     * Scan ids where this finding was present.
     * 
     * @var ?array<string> $scans
     */
	#[\JMS\Serializer\Annotation\SerializedName('scans')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scans = null;
    
    /**
     * Severity, how serious the issue is considered:
     * 
     *   * 10 - low
     *   * 20 - medium
     *   * 30 - high
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FindingSeverityEnum $severity
     */
	#[\JMS\Serializer\Annotation\SerializedName('severity')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FindingSeverityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FindingSeverityEnum $severity = null;
    
    /**
     * Finding state:
     * 
     *   * notfixed - Issue can still be exploited
     *   * invalid - Issue determined to be a false positive
     *   * accepted - Issue will not be solved and the risk was accepted
     *   * fixed - No problem here anymore
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FindingStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FindingStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FindingStateEnum $state = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('target')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TargetSimple')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TargetSimple $target = null;
    
    /**
     * Full finding URL
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * Value for parameter.
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->assignee = null;
		$this->changed = null;
		$this->changedBy = null;
		$this->comment = null;
		$this->cvssScore = null;
		$this->cvssVector = null;
		$this->definition = null;
		$this->evidence = null;
		$this->extra = null;
		$this->fix = null;
		$this->id = null;
		$this->insertionPoint = null;
		$this->labels = null;
		$this->lastFound = null;
		$this->method = null;
		$this->parameter = null;
		$this->params = null;
		$this->path = null;
		$this->reporter = null;
		$this->requests = null;
		$this->scans = null;
		$this->severity = null;
		$this->state = null;
		$this->target = null;
		$this->url = null;
		$this->value = null;
	}
}
