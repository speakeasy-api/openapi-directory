// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateRobotApplicationRequestBodyEnvironment - The object that contains the Docker image URI for either your robot or simulation applications.
type CreateRobotApplicationRequestBodyEnvironment struct {
	URI *string `json:"uri,omitempty"`
}

// CreateRobotApplicationRequestBodyRobotSoftwareSuite - Information about a robot software suite (ROS distribution).
type CreateRobotApplicationRequestBodyRobotSoftwareSuite struct {
	Name    *shared.RobotSoftwareSuiteTypeEnum        `json:"name,omitempty"`
	Version *shared.RobotSoftwareSuiteVersionTypeEnum `json:"version,omitempty"`
}

type CreateRobotApplicationRequestBody struct {
	// The object that contains the Docker image URI for either your robot or simulation applications.
	Environment *CreateRobotApplicationRequestBodyEnvironment `json:"environment,omitempty"`
	// The name of the robot application.
	Name string `json:"name"`
	// Information about a robot software suite (ROS distribution).
	RobotSoftwareSuite CreateRobotApplicationRequestBodyRobotSoftwareSuite `json:"robotSoftwareSuite"`
	// The sources of the robot application.
	Sources []shared.SourceConfig `json:"sources,omitempty"`
	// A map that contains tag keys and tag values that are attached to the robot application.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateRobotApplicationRequest struct {
	RequestBody       CreateRobotApplicationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateRobotApplicationResponse struct {
	ContentType string
	// Success
	CreateRobotApplicationResponse *shared.CreateRobotApplicationResponse
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
