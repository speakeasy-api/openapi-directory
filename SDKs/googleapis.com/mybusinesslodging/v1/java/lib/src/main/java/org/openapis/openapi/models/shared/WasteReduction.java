/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WasteReduction - Waste reduction practices implemented at the hotel.
 */
public class WasteReduction {
    /**
     * Compostable food containers and cutlery. 100% of food service containers and to-go cutlery are compostable, and reusable utensils are offered wherever possible. Compostable materials are capable of undergoing biological decomposition in a compost site, such that material is not visually distinguishable and breaks down into carbon dioxide, water, inorganic compounds, and biomass.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compostableFoodContainersAndCutlery")
    public Boolean compostableFoodContainersAndCutlery;
    public WasteReduction withCompostableFoodContainersAndCutlery(Boolean compostableFoodContainersAndCutlery) {
        this.compostableFoodContainersAndCutlery = compostableFoodContainersAndCutlery;
        return this;
    }
    
    /**
     * Compostable food containers and cutlery exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compostableFoodContainersAndCutleryException")
    public WasteReductionCompostableFoodContainersAndCutleryExceptionEnum compostableFoodContainersAndCutleryException;
    public WasteReduction withCompostableFoodContainersAndCutleryException(WasteReductionCompostableFoodContainersAndCutleryExceptionEnum compostableFoodContainersAndCutleryException) {
        this.compostableFoodContainersAndCutleryException = compostableFoodContainersAndCutleryException;
        return this;
    }
    
    /**
     * Composts excess food. The property has a program and/or policy for diverting waste from landfill by composting food and yard waste, either through compost collection and off-site processing or on-site compost processing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compostsExcessFood")
    public Boolean compostsExcessFood;
    public WasteReduction withCompostsExcessFood(Boolean compostsExcessFood) {
        this.compostsExcessFood = compostsExcessFood;
        return this;
    }
    
    /**
     * Composts excess food exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compostsExcessFoodException")
    public WasteReductionCompostsExcessFoodExceptionEnum compostsExcessFoodException;
    public WasteReduction withCompostsExcessFoodException(WasteReductionCompostsExcessFoodExceptionEnum compostsExcessFoodException) {
        this.compostsExcessFoodException = compostsExcessFoodException;
        return this;
    }
    
    /**
     * Donates excess food. The property has a program and/or policy for diverting waste from landfill that may include efforts to donate for human consumption or divert food for animal feed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("donatesExcessFood")
    public Boolean donatesExcessFood;
    public WasteReduction withDonatesExcessFood(Boolean donatesExcessFood) {
        this.donatesExcessFood = donatesExcessFood;
        return this;
    }
    
    /**
     * Donates excess food exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("donatesExcessFoodException")
    public WasteReductionDonatesExcessFoodExceptionEnum donatesExcessFoodException;
    public WasteReduction withDonatesExcessFoodException(WasteReductionDonatesExcessFoodExceptionEnum donatesExcessFoodException) {
        this.donatesExcessFoodException = donatesExcessFoodException;
        return this;
    }
    
    /**
     * Food waste reduction program. The property has established a food waste reduction and donation program, aiming to reduce food waste by half. These programs typically use tools such as the Hotel Kitchen Toolkit and others to track waste and measure progress.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("foodWasteReductionProgram")
    public Boolean foodWasteReductionProgram;
    public WasteReduction withFoodWasteReductionProgram(Boolean foodWasteReductionProgram) {
        this.foodWasteReductionProgram = foodWasteReductionProgram;
        return this;
    }
    
    /**
     * Food waste reduction program exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("foodWasteReductionProgramException")
    public WasteReductionFoodWasteReductionProgramExceptionEnum foodWasteReductionProgramException;
    public WasteReduction withFoodWasteReductionProgramException(WasteReductionFoodWasteReductionProgramExceptionEnum foodWasteReductionProgramException) {
        this.foodWasteReductionProgramException = foodWasteReductionProgramException;
        return this;
    }
    
    /**
     * No single use plastic straws. The property bans single-use plastic straws.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noSingleUsePlasticStraws")
    public Boolean noSingleUsePlasticStraws;
    public WasteReduction withNoSingleUsePlasticStraws(Boolean noSingleUsePlasticStraws) {
        this.noSingleUsePlasticStraws = noSingleUsePlasticStraws;
        return this;
    }
    
    /**
     * No single use plastic straws exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noSingleUsePlasticStrawsException")
    public WasteReductionNoSingleUsePlasticStrawsExceptionEnum noSingleUsePlasticStrawsException;
    public WasteReduction withNoSingleUsePlasticStrawsException(WasteReductionNoSingleUsePlasticStrawsExceptionEnum noSingleUsePlasticStrawsException) {
        this.noSingleUsePlasticStrawsException = noSingleUsePlasticStrawsException;
        return this;
    }
    
    /**
     * No single use plastic water bottles. The property bans single-use plastic water bottles.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noSingleUsePlasticWaterBottles")
    public Boolean noSingleUsePlasticWaterBottles;
    public WasteReduction withNoSingleUsePlasticWaterBottles(Boolean noSingleUsePlasticWaterBottles) {
        this.noSingleUsePlasticWaterBottles = noSingleUsePlasticWaterBottles;
        return this;
    }
    
    /**
     * No single use plastic water bottles exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noSingleUsePlasticWaterBottlesException")
    public WasteReductionNoSingleUsePlasticWaterBottlesExceptionEnum noSingleUsePlasticWaterBottlesException;
    public WasteReduction withNoSingleUsePlasticWaterBottlesException(WasteReductionNoSingleUsePlasticWaterBottlesExceptionEnum noSingleUsePlasticWaterBottlesException) {
        this.noSingleUsePlasticWaterBottlesException = noSingleUsePlasticWaterBottlesException;
        return this;
    }
    
    /**
     * No styrofoam food containers. The property eliminates the use of Styrofoam in disposable food service items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noStyrofoamFoodContainers")
    public Boolean noStyrofoamFoodContainers;
    public WasteReduction withNoStyrofoamFoodContainers(Boolean noStyrofoamFoodContainers) {
        this.noStyrofoamFoodContainers = noStyrofoamFoodContainers;
        return this;
    }
    
    /**
     * No styrofoam food containers exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noStyrofoamFoodContainersException")
    public WasteReductionNoStyrofoamFoodContainersExceptionEnum noStyrofoamFoodContainersException;
    public WasteReduction withNoStyrofoamFoodContainersException(WasteReductionNoStyrofoamFoodContainersExceptionEnum noStyrofoamFoodContainersException) {
        this.noStyrofoamFoodContainersException = noStyrofoamFoodContainersException;
        return this;
    }
    
    /**
     * Recycling program. The property has a recycling program, aligned with LEED waste requirements, and a policy outlining efforts to send less than 50% of waste to landfill. The recycling program includes storage locations for recyclable materials, including mixed paper, corrugated cardboard, glass, plastics, and metals.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recyclingProgram")
    public Boolean recyclingProgram;
    public WasteReduction withRecyclingProgram(Boolean recyclingProgram) {
        this.recyclingProgram = recyclingProgram;
        return this;
    }
    
    /**
     * Recycling program exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recyclingProgramException")
    public WasteReductionRecyclingProgramExceptionEnum recyclingProgramException;
    public WasteReduction withRecyclingProgramException(WasteReductionRecyclingProgramExceptionEnum recyclingProgramException) {
        this.recyclingProgramException = recyclingProgramException;
        return this;
    }
    
    /**
     * Refillable toiletry containers. The property has replaced miniature individual containers with refillable amenity dispensers for shampoo, conditioner, soap, and lotion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refillableToiletryContainers")
    public Boolean refillableToiletryContainers;
    public WasteReduction withRefillableToiletryContainers(Boolean refillableToiletryContainers) {
        this.refillableToiletryContainers = refillableToiletryContainers;
        return this;
    }
    
    /**
     * Refillable toiletry containers exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refillableToiletryContainersException")
    public WasteReductionRefillableToiletryContainersExceptionEnum refillableToiletryContainersException;
    public WasteReduction withRefillableToiletryContainersException(WasteReductionRefillableToiletryContainersExceptionEnum refillableToiletryContainersException) {
        this.refillableToiletryContainersException = refillableToiletryContainersException;
        return this;
    }
    
    /**
     * Safely disposes batteries. The property safely stores and disposes batteries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safelyDisposesBatteries")
    public Boolean safelyDisposesBatteries;
    public WasteReduction withSafelyDisposesBatteries(Boolean safelyDisposesBatteries) {
        this.safelyDisposesBatteries = safelyDisposesBatteries;
        return this;
    }
    
    /**
     * Safely disposes batteries exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safelyDisposesBatteriesException")
    public WasteReductionSafelyDisposesBatteriesExceptionEnum safelyDisposesBatteriesException;
    public WasteReduction withSafelyDisposesBatteriesException(WasteReductionSafelyDisposesBatteriesExceptionEnum safelyDisposesBatteriesException) {
        this.safelyDisposesBatteriesException = safelyDisposesBatteriesException;
        return this;
    }
    
    /**
     * Safely disposes electronics. The property has a reputable recycling program that keeps hazardous electronic parts and chemical compounds out of landfills, dumps and other unauthorized abandonment sites, and recycles/reuses applicable materials. (e.g. certified electronics recyclers).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safelyDisposesElectronics")
    public Boolean safelyDisposesElectronics;
    public WasteReduction withSafelyDisposesElectronics(Boolean safelyDisposesElectronics) {
        this.safelyDisposesElectronics = safelyDisposesElectronics;
        return this;
    }
    
    /**
     * Safely disposes electronics exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safelyDisposesElectronicsException")
    public WasteReductionSafelyDisposesElectronicsExceptionEnum safelyDisposesElectronicsException;
    public WasteReduction withSafelyDisposesElectronicsException(WasteReductionSafelyDisposesElectronicsExceptionEnum safelyDisposesElectronicsException) {
        this.safelyDisposesElectronicsException = safelyDisposesElectronicsException;
        return this;
    }
    
    /**
     * Safely disposes lightbulbs. The property safely stores and disposes lightbulbs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safelyDisposesLightbulbs")
    public Boolean safelyDisposesLightbulbs;
    public WasteReduction withSafelyDisposesLightbulbs(Boolean safelyDisposesLightbulbs) {
        this.safelyDisposesLightbulbs = safelyDisposesLightbulbs;
        return this;
    }
    
    /**
     * Safely disposes lightbulbs exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safelyDisposesLightbulbsException")
    public WasteReductionSafelyDisposesLightbulbsExceptionEnum safelyDisposesLightbulbsException;
    public WasteReduction withSafelyDisposesLightbulbsException(WasteReductionSafelyDisposesLightbulbsExceptionEnum safelyDisposesLightbulbsException) {
        this.safelyDisposesLightbulbsException = safelyDisposesLightbulbsException;
        return this;
    }
    
    /**
     * Safely handles hazardous substances. The property has a hazardous waste management program aligned wit GreenSeal and LEED requirements, and meets all regulatory requirements for hazardous waste disposal and recycling. Hazardous means substances that are classified as "hazardous" by an authoritative body (such as OSHA or DOT), are labeled with signal words such as "Danger," "Caution," "Warning," or are flammable, corrosive, or ignitable. Requirements include: - The property shall maintain records of the efforts it has made to replace the hazardous substances it uses with less hazardous alternatives. - An inventory of the hazardous materials stored on-site. - Products intended for cleaning, dishwashing, laundry, and pool maintenance shall be stored in clearly labeled containers. These containers shall be checked regularly for leaks, and replaced a necessary. - Spill containment devices shall be installed to collect spills, drips, or leaching of chemicals.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safelyHandlesHazardousSubstances")
    public Boolean safelyHandlesHazardousSubstances;
    public WasteReduction withSafelyHandlesHazardousSubstances(Boolean safelyHandlesHazardousSubstances) {
        this.safelyHandlesHazardousSubstances = safelyHandlesHazardousSubstances;
        return this;
    }
    
    /**
     * Safely handles hazardous substances exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safelyHandlesHazardousSubstancesException")
    public WasteReductionSafelyHandlesHazardousSubstancesExceptionEnum safelyHandlesHazardousSubstancesException;
    public WasteReduction withSafelyHandlesHazardousSubstancesException(WasteReductionSafelyHandlesHazardousSubstancesExceptionEnum safelyHandlesHazardousSubstancesException) {
        this.safelyHandlesHazardousSubstancesException = safelyHandlesHazardousSubstancesException;
        return this;
    }
    
    /**
     * Soap donation program. The property participates in a soap donation program such as Clean the World or something similar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("soapDonationProgram")
    public Boolean soapDonationProgram;
    public WasteReduction withSoapDonationProgram(Boolean soapDonationProgram) {
        this.soapDonationProgram = soapDonationProgram;
        return this;
    }
    
    /**
     * Soap donation program exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("soapDonationProgramException")
    public WasteReductionSoapDonationProgramExceptionEnum soapDonationProgramException;
    public WasteReduction withSoapDonationProgramException(WasteReductionSoapDonationProgramExceptionEnum soapDonationProgramException) {
        this.soapDonationProgramException = soapDonationProgramException;
        return this;
    }
    
    /**
     * Toiletry donation program. The property participates in a toiletry donation program such as Clean the World or something similar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toiletryDonationProgram")
    public Boolean toiletryDonationProgram;
    public WasteReduction withToiletryDonationProgram(Boolean toiletryDonationProgram) {
        this.toiletryDonationProgram = toiletryDonationProgram;
        return this;
    }
    
    /**
     * Toiletry donation program exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toiletryDonationProgramException")
    public WasteReductionToiletryDonationProgramExceptionEnum toiletryDonationProgramException;
    public WasteReduction withToiletryDonationProgramException(WasteReductionToiletryDonationProgramExceptionEnum toiletryDonationProgramException) {
        this.toiletryDonationProgramException = toiletryDonationProgramException;
        return this;
    }
    
    /**
     * Water bottle filling stations. The property offers water stations throughout the building for guest use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waterBottleFillingStations")
    public Boolean waterBottleFillingStations;
    public WasteReduction withWaterBottleFillingStations(Boolean waterBottleFillingStations) {
        this.waterBottleFillingStations = waterBottleFillingStations;
        return this;
    }
    
    /**
     * Water bottle filling stations exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waterBottleFillingStationsException")
    public WasteReductionWaterBottleFillingStationsExceptionEnum waterBottleFillingStationsException;
    public WasteReduction withWaterBottleFillingStationsException(WasteReductionWaterBottleFillingStationsExceptionEnum waterBottleFillingStationsException) {
        this.waterBottleFillingStationsException = waterBottleFillingStationsException;
        return this;
    }
    
}
