"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import geometry as shared_geometry
from ..shared import selectionstatus_enum as shared_selectionstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LendingDetection:
    r"""The results extracted for a lending document."""
    
    confidence: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Confidence'), 'exclude': lambda f: f is None }})  
    geometry: Optional[shared_geometry.Geometry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Geometry'), 'exclude': lambda f: f is None }})
    r"""Information about where the following items are located on a document page: detected page, text, key-value pairs, tables, table cells, and selection elements."""  
    selection_status: Optional[shared_selectionstatus_enum.SelectionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SelectionStatus'), 'exclude': lambda f: f is None }})  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Text'), 'exclude': lambda f: f is None }})  
    