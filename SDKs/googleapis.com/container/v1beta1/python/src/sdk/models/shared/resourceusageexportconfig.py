"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bigquerydestination as shared_bigquerydestination
from ..shared import consumptionmeteringconfig as shared_consumptionmeteringconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceUsageExportConfig:
    r"""Configuration for exporting cluster resource usages."""
    
    bigquery_destination: Optional[shared_bigquerydestination.BigQueryDestination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigqueryDestination'), 'exclude': lambda f: f is None }})
    r"""Parameters for using BigQuery as the destination of resource usage export."""  
    consumption_metering_config: Optional[shared_consumptionmeteringconfig.ConsumptionMeteringConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consumptionMeteringConfig'), 'exclude': lambda f: f is None }})
    r"""Parameters for controlling consumption metering."""  
    enable_network_egress_metering: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableNetworkEgressMetering'), 'exclude': lambda f: f is None }})
    r"""Whether to enable network egress metering for this cluster. If enabled, a daemonset will be created in the cluster to meter network egress traffic."""  
    