<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VolumeRestore - Represents the operation of restoring a volume from a VolumeBackup. Next id: 13
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VolumeRestore
{
    /**
     * Output only. The timestamp when the associated underlying volume restoration completed.
     * 
     * @var ?string $completeTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('completeTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $completeTime = null;
    
    /**
     * Output only. The timestamp when this VolumeRestore resource was created.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume restore updates in order to avoid race conditions.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Output only. Full name of the VolumeRestore resource. Format: `projects/* /locations/* /restorePlans/* /restores/* /volumeRestores/*`
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. The current state of this VolumeRestore.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VolumeRestoreStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VolumeRestoreStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VolumeRestoreStateEnum $state = null;
    
    /**
     * Output only. A human readable message explaining why the VolumeRestore is in its current state.
     * 
     * @var ?string $stateMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('stateMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stateMessage = null;
    
    /**
     * A reference to a namespaced resource in Kubernetes.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NamespacedName $targetPvc
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetPvc')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NamespacedName')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NamespacedName $targetPvc = null;
    
    /**
     * Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
    /**
     * Output only. The timestamp when this VolumeRestore resource was last updated.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
    /**
     * Output only. The full name of the VolumeBackup from which the volume will be restored. Format: `projects/* /locations/* /backupPlans/* /backups/* /volumeBackups/*`.
     * 
     * @var ?string $volumeBackup
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumeBackup')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $volumeBackup = null;
    
    /**
     * Output only. A storage system-specific opaque handler to the underlying volume created for the target PVC from the volume backup.
     * 
     * @var ?string $volumeHandle
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumeHandle')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $volumeHandle = null;
    
    /**
     * Output only. The type of volume provisioned
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VolumeRestoreVolumeTypeEnum $volumeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumeType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VolumeRestoreVolumeTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VolumeRestoreVolumeTypeEnum $volumeType = null;
    
	public function __construct()
	{
		$this->completeTime = null;
		$this->createTime = null;
		$this->etag = null;
		$this->name = null;
		$this->state = null;
		$this->stateMessage = null;
		$this->targetPvc = null;
		$this->uid = null;
		$this->updateTime = null;
		$this->volumeBackup = null;
		$this->volumeHandle = null;
		$this->volumeType = null;
	}
}
