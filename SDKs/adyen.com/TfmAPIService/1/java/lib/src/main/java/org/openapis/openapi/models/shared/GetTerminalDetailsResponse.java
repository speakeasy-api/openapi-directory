/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetTerminalDetailsResponse - OK - the request has succeeded.
 */
public class GetTerminalDetailsResponse {
    /**
     * The Bluetooth IP address of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bluetoothIp")
    public String bluetoothIp;
    public GetTerminalDetailsResponse withBluetoothIp(String bluetoothIp) {
        this.bluetoothIp = bluetoothIp;
        return this;
    }
    
    /**
     * The Bluetooth MAC address of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bluetoothMac")
    public String bluetoothMac;
    public GetTerminalDetailsResponse withBluetoothMac(String bluetoothMac) {
        this.bluetoothMac = bluetoothMac;
        return this;
    }
    
    /**
     * The company account that the terminal is associated with. If this is the only account level shown in the response, the terminal is assigned to the inventory of the company account.
     */
    @JsonProperty("companyAccount")
    public String companyAccount;
    public GetTerminalDetailsResponse withCompanyAccount(String companyAccount) {
        this.companyAccount = companyAccount;
        return this;
    }
    
    /**
     * The country where the terminal is used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public GetTerminalDetailsResponse withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The model name of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceModel")
    public String deviceModel;
    public GetTerminalDetailsResponse withDeviceModel(String deviceModel) {
        this.deviceModel = deviceModel;
        return this;
    }
    
    /**
     * Indicates whether assigning IP addresses through a DHCP server is enabled on the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dhcpEnabled")
    public Boolean dhcpEnabled;
    public GetTerminalDetailsResponse withDhcpEnabled(Boolean dhcpEnabled) {
        this.dhcpEnabled = dhcpEnabled;
        return this;
    }
    
    /**
     * The label shown on the status bar of the display. This label (if any) is specified in your Customer Area.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayLabel")
    public String displayLabel;
    public GetTerminalDetailsResponse withDisplayLabel(String displayLabel) {
        this.displayLabel = displayLabel;
        return this;
    }
    
    /**
     * The terminal's IP address in your Ethernet network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethernetIp")
    public String ethernetIp;
    public GetTerminalDetailsResponse withEthernetIp(String ethernetIp) {
        this.ethernetIp = ethernetIp;
        return this;
    }
    
    /**
     * The terminal's MAC address in your Ethernet network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethernetMac")
    public String ethernetMac;
    public GetTerminalDetailsResponse withEthernetMac(String ethernetMac) {
        this.ethernetMac = ethernetMac;
        return this;
    }
    
    /**
     * The software release currently in use on the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firmwareVersion")
    public String firmwareVersion;
    public GetTerminalDetailsResponse withFirmwareVersion(String firmwareVersion) {
        this.firmwareVersion = firmwareVersion;
        return this;
    }
    
    /**
     * The integrated circuit card identifier (ICCID) of the SIM card in the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iccid")
    public String iccid;
    public GetTerminalDetailsResponse withIccid(String iccid) {
        this.iccid = iccid;
        return this;
    }
    
    /**
     * Date and time of the last activity on the terminal. Not included when the last activity was more than 14 days ago.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastActivityDateTime")
    public OffsetDateTime lastActivityDateTime;
    public GetTerminalDetailsResponse withLastActivityDateTime(OffsetDateTime lastActivityDateTime) {
        this.lastActivityDateTime = lastActivityDateTime;
        return this;
    }
    
    /**
     * Date and time of the last transaction on the terminal. Not included when the last transaction was more than 14 days ago.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastTransactionDateTime")
    public OffsetDateTime lastTransactionDateTime;
    public GetTerminalDetailsResponse withLastTransactionDateTime(OffsetDateTime lastTransactionDateTime) {
        this.lastTransactionDateTime = lastTransactionDateTime;
        return this;
    }
    
    /**
     * The Ethernet link negotiation that the terminal uses: 
     * 
     * - `auto`: Auto-negotiation
     * 
     * - `100full`: 100 Mbps full duplex
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkNegotiation")
    public String linkNegotiation;
    public GetTerminalDetailsResponse withLinkNegotiation(String linkNegotiation) {
        this.linkNegotiation = linkNegotiation;
        return this;
    }
    
    /**
     * The merchant account that the terminal is associated with. If the response doesn't contain a `store` the terminal is assigned to this merchant account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantAccount")
    public String merchantAccount;
    public GetTerminalDetailsResponse withMerchantAccount(String merchantAccount) {
        this.merchantAccount = merchantAccount;
        return this;
    }
    
    /**
     * Boolean that indicates if the terminal is assigned to the merchant inventory. This is returned when the terminal is assigned to a merchant account.
     * 
     * - If **true**, this indicates that the terminal is in the merchant inventory. This also means that the terminal cannot be boarded.
     * 
     * - If **false**, this indicates that the terminal is assigned to the merchant account as an in-store terminal. This means that the terminal is ready to be boarded, or is already boarded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantInventory")
    public Boolean merchantInventory;
    public GetTerminalDetailsResponse withMerchantInventory(Boolean merchantInventory) {
        this.merchantInventory = merchantInventory;
        return this;
    }
    
    /**
     * The permanent terminal ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permanentTerminalId")
    public String permanentTerminalId;
    public GetTerminalDetailsResponse withPermanentTerminalId(String permanentTerminalId) {
        this.permanentTerminalId = permanentTerminalId;
        return this;
    }
    
    /**
     * The serial number of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumber")
    public String serialNumber;
    public GetTerminalDetailsResponse withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * On a terminal that supports 3G or 4G connectivity, indicates the status of the SIM card in the terminal: ACTIVE or INVENTORY.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("simStatus")
    public String simStatus;
    public GetTerminalDetailsResponse withSimStatus(String simStatus) {
        this.simStatus = simStatus;
        return this;
    }
    
    /**
     * The store code of the store that the terminal is assigned to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("store")
    public String store;
    public GetTerminalDetailsResponse withStore(String store) {
        this.store = store;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeDetails")
    public Store storeDetails;
    public GetTerminalDetailsResponse withStoreDetails(Store storeDetails) {
        this.storeDetails = storeDetails;
        return this;
    }
    
    /**
     * The unique terminal ID.
     */
    @JsonProperty("terminal")
    public String terminal;
    public GetTerminalDetailsResponse withTerminal(String terminal) {
        this.terminal = terminal;
        return this;
    }
    
    /**
     * The status of the terminal: 
     * 
     * - `OnlineToday`, `OnlineLast1Day`, `OnlineLast2Days` etcetera to `OnlineLast7Days`: Indicates when in the past week the terminal was last online. 
     * 
     * - `SwitchedOff`: Indicates it was more than a week ago that the terminal was last online. 
     * 
     * - `ReAssignToInventoryPending`, `ReAssignToStorePending`, `ReAssignToMerchantInventoryPending`: Indicates the terminal is scheduled to be reassigned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terminalStatus")
    public GetTerminalDetailsResponseTerminalStatusEnum terminalStatus;
    public GetTerminalDetailsResponse withTerminalStatus(GetTerminalDetailsResponseTerminalStatusEnum terminalStatus) {
        this.terminalStatus = terminalStatus;
        return this;
    }
    
    /**
     * The terminal's IP address in your Wi-Fi network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiIp")
    public String wifiIp;
    public GetTerminalDetailsResponse withWifiIp(String wifiIp) {
        this.wifiIp = wifiIp;
        return this;
    }
    
    /**
     * The terminal's MAC address in your Wi-Fi network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiMac")
    public String wifiMac;
    public GetTerminalDetailsResponse withWifiMac(String wifiMac) {
        this.wifiMac = wifiMac;
        return this;
    }
    
}
