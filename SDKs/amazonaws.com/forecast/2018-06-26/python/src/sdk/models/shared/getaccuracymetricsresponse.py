"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import automloverridestrategy_enum as shared_automloverridestrategy_enum
from ..shared import evaluationresult as shared_evaluationresult
from ..shared import optimizationmetric_enum as shared_optimizationmetric_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAccuracyMetricsResponse:
    r"""Success"""
    
    auto_ml_override_strategy: Optional[shared_automloverridestrategy_enum.AutoMLOverrideStrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoMLOverrideStrategy'), 'exclude': lambda f: f is None }})  
    is_auto_predictor: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsAutoPredictor'), 'exclude': lambda f: f is None }})  
    optimization_metric: Optional[shared_optimizationmetric_enum.OptimizationMetricEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OptimizationMetric'), 'exclude': lambda f: f is None }})  
    predictor_evaluation_results: Optional[list[shared_evaluationresult.EvaluationResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PredictorEvaluationResults'), 'exclude': lambda f: f is None }})  
    