/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class DeleteConsumerResponseData extends SpeakeasyBase {
  /**
   * Unique consumer identifier. You can freely choose a consumer ID yourself. Most of the time, this is an ID of your internal data model that represents a user or account in your system (for example account:12345). If the consumer doesn't exist yet, Vault will upsert a consumer based on your ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumer_id" })
  consumerId?: string;
}

/**
 * Consumer deleted
 */
export class DeleteConsumerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => DeleteConsumerResponseData)
  data: DeleteConsumerResponseData;

  /**
   * HTTP Response Status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * HTTP Response Status Code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_code" })
  statusCode: number;
}
