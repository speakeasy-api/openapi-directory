/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListGiftCardsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class ListGiftCardsRequest extends SpeakeasyBase {
  /**
   * A pagination cursor returned by a previous call to this endpoint.
   *
   * @remarks
   * Provide this cursor to retrieve the next set of results for the original query.
   * If a cursor is not provided, it returns the first page of the results.
   * For more information, see [Pagination](https://developer.squareup.com/docs/docs/working-with-apis/pagination).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * If a value is provided, returns only the gift cards linked to the specified customer
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=customer_id",
  })
  customerId?: string;

  /**
   * If a value is provided, it returns only that number of results per page.
   *
   * @remarks
   * The maximum number of results allowed per page is 50. The default value is 30.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * If the state is provided, it returns the gift cards in the specified state
   *
   * @remarks
   * (see [GiftCardStatus](https://developer.squareup.com/reference/square_2021-08-18/enums/GiftCardStatus)).
   * Otherwise, it returns the gift cards of all states.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=state" })
  state?: string;

  /**
   * If a type is provided, gift cards of this type are returned
   *
   * @remarks
   * (see [GiftCardType](https://developer.squareup.com/reference/square_2021-08-18/enums/GiftCardType)).
   * If no type is provided, it returns gift cards of all types.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: string;
}

export class ListGiftCardsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listGiftCardsResponse?: shared.ListGiftCardsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
