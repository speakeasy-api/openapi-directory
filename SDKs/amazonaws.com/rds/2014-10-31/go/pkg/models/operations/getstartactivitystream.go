// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETStartActivityStreamActionEnum
type GETStartActivityStreamActionEnum string

const (
	GETStartActivityStreamActionEnumStartActivityStream GETStartActivityStreamActionEnum = "StartActivityStream"
)

func (e *GETStartActivityStreamActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "StartActivityStream":
		*e = GETStartActivityStreamActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETStartActivityStreamActionEnum: %s", s)
	}
}

// GETStartActivityStreamModeEnum - Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.
type GETStartActivityStreamModeEnum string

const (
	GETStartActivityStreamModeEnumSync  GETStartActivityStreamModeEnum = "sync"
	GETStartActivityStreamModeEnumAsync GETStartActivityStreamModeEnum = "async"
)

func (e *GETStartActivityStreamModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "sync":
		fallthrough
	case "async":
		*e = GETStartActivityStreamModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETStartActivityStreamModeEnum: %s", s)
	}
}

// GETStartActivityStreamVersionEnum
type GETStartActivityStreamVersionEnum string

const (
	GETStartActivityStreamVersionEnumTwoThousandAndFourteen1031 GETStartActivityStreamVersionEnum = "2014-10-31"
)

func (e *GETStartActivityStreamVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETStartActivityStreamVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETStartActivityStreamVersionEnum: %s", s)
	}
}

type GETStartActivityStreamQueryParams struct {
	Action GETStartActivityStreamActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Specifies whether or not the database activity stream is to start as soon as possible, regardless of the maintenance window for the database.
	ApplyImmediately *bool `queryParam:"style=form,explode=true,name=ApplyImmediately"`
	// Specifies whether the database activity stream includes engine-native audit fields. This option applies to an Oracle or Microsoft SQL Server DB instance. By default, no engine-native audit fields are included.
	EngineNativeAuditFieldsIncluded *bool `queryParam:"style=form,explode=true,name=EngineNativeAuditFieldsIncluded"`
	// The Amazon Web Services KMS key identifier for encrypting messages in the database activity stream. The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key.
	KmsKeyID string `queryParam:"style=form,explode=true,name=KmsKeyId"`
	// Specifies the mode of the database activity stream. Database events such as a change or access generate an activity stream event. The database session can handle these events either synchronously or asynchronously.
	Mode GETStartActivityStreamModeEnum `queryParam:"style=form,explode=true,name=Mode"`
	// The Amazon Resource Name (ARN) of the DB cluster, for example, <code>arn:aws:rds:us-east-1:12345667890:cluster:das-cluster</code>.
	ResourceArn string                            `queryParam:"style=form,explode=true,name=ResourceArn"`
	Version     GETStartActivityStreamVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETStartActivityStreamHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETStartActivityStreamRequest struct {
	QueryParams GETStartActivityStreamQueryParams
	Headers     GETStartActivityStreamHeaders
}

type GETStartActivityStreamResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
