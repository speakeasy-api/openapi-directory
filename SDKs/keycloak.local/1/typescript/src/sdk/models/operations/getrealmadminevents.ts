/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetRealmAdminEventsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=authClient",
  })
  authClient?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=authIpAddress",
  })
  authIpAddress?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=authRealm",
  })
  authRealm?: string;

  /**
   * user id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=authUser",
  })
  authUser?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=dateFrom",
  })
  dateFrom?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=dateTo",
  })
  dateTo?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=first" })
  first?: number;

  /**
   * Maximum results size (defaults to 100)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=max" })
  max?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=operationTypes",
  })
  operationTypes?: string[];

  /**
   * realm name (not id!)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=realm",
  })
  realm: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resourcePath",
  })
  resourcePath?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resourceTypes",
  })
  resourceTypes?: string[];
}

export class GetRealmAdminEventsResponse extends SpeakeasyBase {
  /**
   * success
   */
  @SpeakeasyMetadata({ elemType: shared.AdminEventRepresentation })
  adminEventRepresentations?: shared.AdminEventRepresentation[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
