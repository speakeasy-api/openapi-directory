/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CodespacesPreFlightWithRepoForAuthenticatedUserRequest extends SpeakeasyBase {
  /**
   * An alternative IP for default location auto-detection, such as when proxying a request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=client_ip",
  })
  clientIp?: string;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * The branch or commit to check for a default devcontainer path. If not specified, the default branch will be checked.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ref" })
  ref?: string;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSONDefaults extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "devcontainer_path" })
  devcontainerPath: string;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location: string;
}

/**
 * Response when a user is able to create codespaces from the repository.
 */
export class CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSON extends SpeakeasyBase {
  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billable_owner" })
  @Type(() => shared.SimpleUser)
  billableOwner?: shared.SimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "defaults" })
  @Type(
    () =>
      CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSONDefaults
  )
  defaults?: CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSONDefaults;
}

export class CodespacesPreFlightWithRepoForAuthenticatedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response when a user is able to create codespaces from the repository.
   */
  @SpeakeasyMetadata()
  codespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSONObject?: CodespacesPreFlightWithRepoForAuthenticatedUser200ApplicationJSON;
}
