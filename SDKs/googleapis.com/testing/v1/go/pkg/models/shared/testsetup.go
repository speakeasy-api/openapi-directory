// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// TestSetup - A description of how to set up the Android device prior to running the test.
type TestSetup struct {
	// Identifies an account and how to log into it.
	Account *Account `json:"account,omitempty"`
	// APKs to install in addition to those being directly tested. Currently capped at 100.
	AdditionalApks []Apk `json:"additionalApks,omitempty"`
	// List of directories on the device to upload to GCS at the end of the test; they must be absolute paths under /sdcard, /storage or /data/local/tmp. Path names are restricted to characters a-z A-Z 0-9 _ - . + and / Note: The paths /sdcard and /data will be made available and treated as implicit path substitutions. E.g. if /sdcard on a particular device does not map to external storage, the system will replace it with the external storage path prefix for that device.
	DirectoriesToPull []string `json:"directoriesToPull,omitempty"`
	// Whether to prevent all runtime permissions to be granted at app install
	DontAutograntPermissions *bool `json:"dontAutograntPermissions,omitempty"`
	// Environment variables to set for the test (only applicable for instrumentation tests).
	EnvironmentVariables []EnvironmentVariable `json:"environmentVariables,omitempty"`
	// List of files to push to the device before starting the test.
	FilesToPush []DeviceFile `json:"filesToPush,omitempty"`
	// The network traffic profile used for running the test. Available network profiles can be queried by using the NETWORK_CONFIGURATION environment type when calling TestEnvironmentDiscoveryService.GetTestEnvironmentCatalog.
	NetworkProfile *string        `json:"networkProfile,omitempty"`
	Systrace       *SystraceSetup `json:"systrace,omitempty"`
}
