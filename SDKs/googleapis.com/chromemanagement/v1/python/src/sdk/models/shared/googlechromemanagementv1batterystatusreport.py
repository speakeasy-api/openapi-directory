"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlechromemanagementv1batterysamplereport as shared_googlechromemanagementv1batterysamplereport
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum(str, Enum):
    r"""Output only. Battery health."""
    BATTERY_HEALTH_UNSPECIFIED = 'BATTERY_HEALTH_UNSPECIFIED'
    BATTERY_HEALTH_NORMAL = 'BATTERY_HEALTH_NORMAL'
    BATTERY_REPLACE_SOON = 'BATTERY_REPLACE_SOON'
    BATTERY_REPLACE_NOW = 'BATTERY_REPLACE_NOW'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleChromeManagementV1BatteryStatusReport:
    r"""Status data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A"""
    
    battery_health: Optional[GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batteryHealth'), 'exclude': lambda f: f is None }})
    r"""Output only. Battery health."""  
    cycle_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cycleCount'), 'exclude': lambda f: f is None }})
    r"""Output only. Cycle count."""  
    full_charge_capacity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullChargeCapacity'), 'exclude': lambda f: f is None }})
    r"""Output only. Full charge capacity (mAmpere-hours)."""  
    report_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Timestamp of when the sample was collected on device"""  
    sample: Optional[list[shared_googlechromemanagementv1batterysamplereport.GoogleChromeManagementV1BatterySampleReport]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sample'), 'exclude': lambda f: f is None }})
    r"""Output only. Sampling data for the battery sorted in a decreasing order of report_time."""  
    serial_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serialNumber'), 'exclude': lambda f: f is None }})
    r"""Output only. Battery serial number."""  
    