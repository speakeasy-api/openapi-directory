// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RoomRecordingEnumCodecEnum string

const (
	RoomRecordingEnumCodecEnumVp8  RoomRecordingEnumCodecEnum = "VP8"
	RoomRecordingEnumCodecEnumH264 RoomRecordingEnumCodecEnum = "H264"
	RoomRecordingEnumCodecEnumOpus RoomRecordingEnumCodecEnum = "OPUS"
	RoomRecordingEnumCodecEnumPcmu RoomRecordingEnumCodecEnum = "PCMU"
)

func (e RoomRecordingEnumCodecEnum) ToPointer() *RoomRecordingEnumCodecEnum {
	return &e
}

func (e *RoomRecordingEnumCodecEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VP8":
		fallthrough
	case "H264":
		fallthrough
	case "OPUS":
		fallthrough
	case "PCMU":
		*e = RoomRecordingEnumCodecEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RoomRecordingEnumCodecEnum: %v", v)
	}
}
