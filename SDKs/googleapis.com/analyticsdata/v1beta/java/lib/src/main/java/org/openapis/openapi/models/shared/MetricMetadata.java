/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MetricMetadata - Explains a metric.
 */
public class MetricMetadata {
    /**
     * A metric name. Useable in [Metric](#Metric)'s `name`. For example, `eventCount`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiName")
    public String apiName;
    public MetricMetadata withApiName(String apiName) {
        this.apiName = apiName;
        return this;
    }
    
    /**
     * If reasons are specified, your access is blocked to this metric for this property. API requests from you to this property for this metric will succeed; however, the report will contain only zeros for this metric. API requests with metric filters on blocked metrics will fail. If reasons are empty, you have access to this metric. To learn more, see [Access and data-restriction management](https://support.google.com/analytics/answer/10851388).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockedReasons")
    public MetricMetadataBlockedReasonsEnum[] blockedReasons;
    public MetricMetadata withBlockedReasons(MetricMetadataBlockedReasonsEnum[] blockedReasons) {
        this.blockedReasons = blockedReasons;
        return this;
    }
    
    /**
     * The display name of the category that this metrics belongs to. Similar dimensions and metrics are categorized together.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public String category;
    public MetricMetadata withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * True if the metric is a custom metric for this property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customDefinition")
    public Boolean customDefinition;
    public MetricMetadata withCustomDefinition(Boolean customDefinition) {
        this.customDefinition = customDefinition;
        return this;
    }
    
    /**
     * Still usable but deprecated names for this metric. If populated, this metric is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the metric will be available only by `apiName`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deprecatedApiNames")
    public String[] deprecatedApiNames;
    public MetricMetadata withDeprecatedApiNames(String[] deprecatedApiNames) {
        this.deprecatedApiNames = deprecatedApiNames;
        return this;
    }
    
    /**
     * Description of how this metric is used and calculated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public MetricMetadata withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The mathematical expression for this derived metric. Can be used in [Metric](#Metric)'s `expression` field for equivalent reports. Most metrics are not expressions, and for non-expressions, this field is empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expression")
    public String expression;
    public MetricMetadata withExpression(String expression) {
        this.expression = expression;
        return this;
    }
    
    /**
     * The type of this metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public MetricMetadataTypeEnum type;
    public MetricMetadata withType(MetricMetadataTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * This metric's name within the Google Analytics user interface. For example, `Event count`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uiName")
    public String uiName;
    public MetricMetadata withUiName(String uiName) {
        this.uiName = uiName;
        return this;
    }
    
}
