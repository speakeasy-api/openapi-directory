/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ComplianceSummaryV1 - Data from the report data source.
 */
public class ComplianceSummaryV1 {
    /**
     * Number of objects awaiting first full backup.
     */
    @JsonProperty("numberOfAwaitingFirstFullSnapshot")
    public Long numberOfAwaitingFirstFullSnapshot;

    public ComplianceSummaryV1 withNumberOfAwaitingFirstFullSnapshot(Long numberOfAwaitingFirstFullSnapshot) {
        this.numberOfAwaitingFirstFullSnapshot = numberOfAwaitingFirstFullSnapshot;
        return this;
    }
    
    /**
     * Number of objects in compliance.
     */
    @JsonProperty("numberOfInComplianceSnapshots")
    public Long numberOfInComplianceSnapshots;

    public ComplianceSummaryV1 withNumberOfInComplianceSnapshots(Long numberOfInComplianceSnapshots) {
        this.numberOfInComplianceSnapshots = numberOfInComplianceSnapshots;
        return this;
    }
    
    /**
     * Number of objects out of compliance.
     */
    @JsonProperty("numberOfOutOfComplianceSnapshots")
    public Long numberOfOutOfComplianceSnapshots;

    public ComplianceSummaryV1 withNumberOfOutOfComplianceSnapshots(Long numberOfOutOfComplianceSnapshots) {
        this.numberOfOutOfComplianceSnapshots = numberOfOutOfComplianceSnapshots;
        return this;
    }
    
    /**
     * Percent of objects in compliance.
     */
    @JsonProperty("percentOfInComplianceSnapshots")
    public Double percentOfInComplianceSnapshots;

    public ComplianceSummaryV1 withPercentOfInComplianceSnapshots(Double percentOfInComplianceSnapshots) {
        this.percentOfInComplianceSnapshots = percentOfInComplianceSnapshots;
        return this;
    }
    
    /**
     * Percent of objects out of compliance.
     */
    @JsonProperty("percentOfOutOfComplianceSnapshots")
    public Double percentOfOutOfComplianceSnapshots;

    public ComplianceSummaryV1 withPercentOfOutOfComplianceSnapshots(Double percentOfOutOfComplianceSnapshots) {
        this.percentOfOutOfComplianceSnapshots = percentOfOutOfComplianceSnapshots;
        return this;
    }
    
    /**
     * Total number of protected objects.
     */
    @JsonProperty("totalProtected")
    public Long totalProtected;

    public ComplianceSummaryV1 withTotalProtected(Long totalProtected) {
        this.totalProtected = totalProtected;
        return this;
    }
    
    /**
     * Last updated time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedTime")
    public OffsetDateTime updatedTime;

    public ComplianceSummaryV1 withUpdatedTime(OffsetDateTime updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }
    
    public ComplianceSummaryV1(@JsonProperty("numberOfAwaitingFirstFullSnapshot") Long numberOfAwaitingFirstFullSnapshot, @JsonProperty("numberOfInComplianceSnapshots") Long numberOfInComplianceSnapshots, @JsonProperty("numberOfOutOfComplianceSnapshots") Long numberOfOutOfComplianceSnapshots, @JsonProperty("percentOfInComplianceSnapshots") Double percentOfInComplianceSnapshots, @JsonProperty("percentOfOutOfComplianceSnapshots") Double percentOfOutOfComplianceSnapshots, @JsonProperty("totalProtected") Long totalProtected) {
        this.numberOfAwaitingFirstFullSnapshot = numberOfAwaitingFirstFullSnapshot;
        this.numberOfInComplianceSnapshots = numberOfInComplianceSnapshots;
        this.numberOfOutOfComplianceSnapshots = numberOfOutOfComplianceSnapshots;
        this.percentOfInComplianceSnapshots = percentOfInComplianceSnapshots;
        this.percentOfOutOfComplianceSnapshots = percentOfOutOfComplianceSnapshots;
        this.totalProtected = totalProtected;
  }
}
