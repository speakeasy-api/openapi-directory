// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum string

const (
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumFileTypeUnspecified GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "FILE_TYPE_UNSPECIFIED"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumBinaryFile          GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "BINARY_FILE"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumTextFile            GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "TEXT_FILE"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumImage               GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "IMAGE"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumWord                GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "WORD"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumPdf                 GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "PDF"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumAvro                GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "AVRO"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumCsv                 GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "CSV"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumTsv                 GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "TSV"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumPowerpoint          GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "POWERPOINT"
	GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnumExcel               GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum = "EXCEL"
)

func (e GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum) ToPointer() *GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum {
	return &e
}

func (e *GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FILE_TYPE_UNSPECIFIED":
		fallthrough
	case "BINARY_FILE":
		fallthrough
	case "TEXT_FILE":
		fallthrough
	case "IMAGE":
		fallthrough
	case "WORD":
		fallthrough
	case "PDF":
		fallthrough
	case "AVRO":
		fallthrough
	case "CSV":
		fallthrough
	case "TSV":
		fallthrough
	case "POWERPOINT":
		fallthrough
	case "EXCEL":
		*e = GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum: %v", v)
	}
}

// GooglePrivacyDlpV2Deidentify - Create a de-identified copy of the requested table or files. A TransformationDetail will be created for each transformation. If any rows in BigQuery are skipped during de-identification (transformation errors or row size exceeds BigQuery insert API limits) they are placed in the failure output table. If the original row exceeds the BigQuery insert API limit it will be truncated when written to the failure output table. The failure output table can be set in the action.deidentify.output.big_query_output.deidentified_failure_output_table field, if no table is set, a table will be automatically created in the same project and dataset as the original table. Compatible with: Inspect
type GooglePrivacyDlpV2Deidentify struct {
	// Required. User settable Cloud Storage bucket and folders to store de-identified files. This field must be set for cloud storage deidentification. The output Cloud Storage bucket must be different from the input bucket. De-identified files will overwrite files in the output path. Form of: gs://bucket/folder/ or gs://bucket
	CloudStorageOutput *string `json:"cloudStorageOutput,omitempty"`
	// List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed. If empty, all supported files will be transformed. Supported types may be automatically added over time. If a file type is set in this field that isn't supported by the Deidentify action then the job will fail and will not be successfully created/started. Currently the only filetypes supported are: IMAGES, TEXT_FILES, CSV, TSV.
	FileTypesToTransform []GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum `json:"fileTypesToTransform,omitempty"`
	// User specified templates and configs for how to deidentify structured, unstructures, and image files. User must provide either a unstructured deidentify template or at least one redact image config.
	TransformationConfig *GooglePrivacyDlpV2TransformationConfig `json:"transformationConfig,omitempty"`
	// Config for storing transformation details.
	TransformationDetailsStorageConfig *GooglePrivacyDlpV2TransformationDetailsStorageConfig `json:"transformationDetailsStorageConfig,omitempty"`
}
