<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Entry - A single replacement configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Entry
{
    /**
     * Whether the search is case sensitive.
     * 
     * @var ?bool $caseSensitive
     */
	#[\JMS\Serializer\Annotation\SerializedName('caseSensitive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $caseSensitive = null;
    
    /**
     * What to replace with. Max length is 100 characters.
     * 
     * @var ?string $replace
     */
	#[\JMS\Serializer\Annotation\SerializedName('replace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replace = null;
    
    /**
     * What to replace. Max length is 100 characters.
     * 
     * @var ?string $search
     */
	#[\JMS\Serializer\Annotation\SerializedName('search')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $search = null;
    
	public function __construct()
	{
		$this->caseSensitive = null;
		$this->replace = null;
		$this->search = null;
	}
}
