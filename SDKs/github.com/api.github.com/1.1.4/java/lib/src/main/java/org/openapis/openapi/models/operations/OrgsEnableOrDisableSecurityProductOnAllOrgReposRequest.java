/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class OrgsEnableOrDisableSecurityProductOnAllOrgReposRequest {
    /**
     * The action to take.
     * 
     * `enable_all` means to enable the specified security feature for all repositories in the organization.
     * `disable_all` means to disable the specified security feature for all repositories in the organization.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=enablement")
    public org.openapis.openapi.models.shared.OrgSecurityProductEnablementEnum enablement;
    public OrgsEnableOrDisableSecurityProductOnAllOrgReposRequest withEnablement(org.openapis.openapi.models.shared.OrgSecurityProductEnablementEnum enablement) {
        this.enablement = enablement;
        return this;
    }
    
    /**
     * The organization name. The name is not case sensitive.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=org")
    public String org;
    public OrgsEnableOrDisableSecurityProductOnAllOrgReposRequest withOrg(String org) {
        this.org = org;
        return this;
    }
    
    /**
     * The security feature to enable or disable.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=security_product")
    public org.openapis.openapi.models.shared.SecurityProductEnum securityProduct;
    public OrgsEnableOrDisableSecurityProductOnAllOrgReposRequest withSecurityProduct(org.openapis.openapi.models.shared.SecurityProductEnum securityProduct) {
        this.securityProduct = securityProduct;
        return this;
    }
    
}
