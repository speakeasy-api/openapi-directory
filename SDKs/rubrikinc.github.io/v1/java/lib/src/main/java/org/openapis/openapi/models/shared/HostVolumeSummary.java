/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class HostVolumeSummary {
    /**
     * The type of the file system on this Volume.
     */
    @JsonProperty("fileSystemType")
    public FileSystemTypeEnum fileSystemType;

    public HostVolumeSummary withFileSystemType(FileSystemTypeEnum fileSystemType) {
        this.fileSystemType = fileSystemType;
        return this;
    }
    
    /**
     * The unique ID of the snapshot volume summary.
     */
    @JsonProperty("id")
    public String id;

    public HostVolumeSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicates whether a volume is present on the host. When 'true', the volume is present. When 'false', the volume is not present. Volumes that are not present on the host are still included in snapshots and trigger warnings until the missing volumes are excluded from snapshots.
     */
    @JsonProperty("isCurrentlyPresentOnSystem")
    public Boolean isCurrentlyPresentOnSystem;

    public HostVolumeSummary withIsCurrentlyPresentOnSystem(Boolean isCurrentlyPresentOnSystem) {
        this.isCurrentlyPresentOnSystem = isCurrentlyPresentOnSystem;
        return this;
    }
    
    /**
     * The mount points of the volume on the host.
     */
    @JsonProperty("mountPoints")
    public String[] mountPoints;

    public HostVolumeSummary withMountPoints(String[] mountPoints) {
        this.mountPoints = mountPoints;
        return this;
    }
    
    /**
     * The unique ID of the volume on the Windows host.
     */
    @JsonProperty("naturalId")
    public String naturalId;

    public HostVolumeSummary withNaturalId(String naturalId) {
        this.naturalId = naturalId;
        return this;
    }
    
    /**
     * The size of the volume in bytes.
     */
    @JsonProperty("size")
    public Long size;

    public HostVolumeSummary withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * The unique ID of the Volume Group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumeGroupId")
    public String volumeGroupId;

    public HostVolumeSummary withVolumeGroupId(String volumeGroupId) {
        this.volumeGroupId = volumeGroupId;
        return this;
    }
    
    public HostVolumeSummary(@JsonProperty("fileSystemType") FileSystemTypeEnum fileSystemType, @JsonProperty("id") String id, @JsonProperty("isCurrentlyPresentOnSystem") Boolean isCurrentlyPresentOnSystem, @JsonProperty("mountPoints") String[] mountPoints, @JsonProperty("naturalId") String naturalId, @JsonProperty("size") Long size) {
        this.fileSystemType = fileSystemType;
        this.id = id;
        this.isCurrentlyPresentOnSystem = isCurrentlyPresentOnSystem;
        this.mountPoints = mountPoints;
        this.naturalId = naturalId;
        this.size = size;
  }
}
