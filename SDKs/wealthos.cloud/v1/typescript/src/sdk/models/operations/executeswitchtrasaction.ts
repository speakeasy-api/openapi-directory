/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ExecuteSwitchTrasactionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

/**
 * Mode of the instruction. If investment_product_id is `cash` mode can only be set to `value` or `percentage`
 */
export enum ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequestModeEnum {
  Percentage = "percentage",
  Unit = "unit",
  Value = "value",
}

/**
 * Each individual buy side and sell side instruction of the Switch request
 */
export class ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequest extends SpeakeasyBase {
  /**
   * Identifier of the investment product sold or bought. If the instruction is to use a cash holding (relevant only for sell instruction) this must be `cash`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * Mode of the instruction. If investment_product_id is `cash` mode can only be set to `value` or `percentage`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mode" })
  mode: ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequestModeEnum;

  /**
   * value according to the mode. e.g. mode `percentage` and value `10` implies 10%
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: string;
}

/**
 * Definition of Switch instruction
 */
export class ExecuteSwitchTrasactionSwitchInstructionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequest,
  })
  @Expose({ name: "buy_instructions" })
  @Type(
    () =>
      ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequest
  )
  buyInstructions: ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequest[];

  /**
   * Identifier of the pot the instruction is sent to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  /**
   * Unique request id to ensure idempotency. (eg: UUID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  @SpeakeasyMetadata({
    elemType:
      ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequest,
  })
  @Expose({ name: "sell_instructions" })
  @Type(
    () =>
      ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequest
  )
  sellInstructions: ExecuteSwitchTrasactionSwitchInstructionRequestEachBuyOrSellInstructionOfTheSwitchRequest[];
}

export class ExecuteSwitchTrasactionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: ExecuteSwitchTrasactionSwitchInstructionRequest;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class ExecuteSwitchTrasaction500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class ExecuteSwitchTrasaction429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum ExecuteSwitchTrasaction409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class ExecuteSwitchTrasaction409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ExecuteSwitchTrasaction409ApplicationJSONStatusEnum;
}

/**
 * The specified resource was not found
 */
export class ExecuteSwitchTrasaction404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class ExecuteSwitchTrasaction403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class ExecuteSwitchTrasaction401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class ExecuteSwitchTrasaction400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Mode of the instruction. If investment_product_id is `cash` mode can only be set to `value` or `percentage`
 */
export enum ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequestModeEnum {
  Percentage = "percentage",
  Unit = "unit",
  Value = "value",
}

/**
 * Each individual buy side and sell side instruction of the Switch request
 */
export class ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequest extends SpeakeasyBase {
  /**
   * Identifier of the investment product sold or bought. If the instruction is to use a cash holding (relevant only for sell instruction) this must be `cash`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * Mode of the instruction. If investment_product_id is `cash` mode can only be set to `value` or `percentage`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mode" })
  mode: ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequestModeEnum;

  /**
   * value according to the mode. e.g. mode `percentage` and value `10` implies 10%
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: string;
}

/**
 * Describe the origin from where the switch transaction is triggered
 */
export enum ExecuteSwitchTrasaction200ApplicationJSONOriginEnum {
  Api = "api",
  Rebalance = "rebalance",
}

/**
 * Status of the Switch instruction
 */
export enum ExecuteSwitchTrasaction200ApplicationJSONStatusEnum {
  Initiated = "initiated",
  SellInProgress = "sell_in_progress",
  BuyInProgress = "buy_in_progress",
  Completed = "completed",
}

/**
 * success
 */
export class ExecuteSwitchTrasaction200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequest,
  })
  @Expose({ name: "buy_instructions" })
  @Type(
    () =>
      ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequest
  )
  buyInstructions: ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequest[];

  /**
   * Describe the origin from where the switch transaction is triggered
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: ExecuteSwitchTrasaction200ApplicationJSONOriginEnum;

  /**
   * Identifier of the pot the instruction is sent to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  @SpeakeasyMetadata({
    elemType:
      ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequest,
  })
  @Expose({ name: "sell_instructions" })
  @Type(
    () =>
      ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequest
  )
  sellInstructions: ExecuteSwitchTrasaction200ApplicationJSONEachBuyOrSellInstructionOfTheSwitchRequest[];

  /**
   * Status of the Switch instruction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ExecuteSwitchTrasaction200ApplicationJSONStatusEnum;

  /**
   * Unique identifier of the switch instruction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "switch_transaction_id" })
  switchTransactionId: string;
}

export class ExecuteSwitchTrasactionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  executeSwitchTrasaction200ApplicationJSONObject?: ExecuteSwitchTrasaction200ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  executeSwitchTrasaction400ApplicationJSONObject?: ExecuteSwitchTrasaction400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  executeSwitchTrasaction401ApplicationJSONObject?: ExecuteSwitchTrasaction401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  executeSwitchTrasaction403ApplicationJSONObject?: ExecuteSwitchTrasaction403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  executeSwitchTrasaction404ApplicationJSONObject?: ExecuteSwitchTrasaction404ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  executeSwitchTrasaction409ApplicationJSONObject?: ExecuteSwitchTrasaction409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  executeSwitchTrasaction429ApplicationJSONObject?: ExecuteSwitchTrasaction429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  executeSwitchTrasaction500ApplicationJSONObject?: ExecuteSwitchTrasaction500ApplicationJSON;
}
