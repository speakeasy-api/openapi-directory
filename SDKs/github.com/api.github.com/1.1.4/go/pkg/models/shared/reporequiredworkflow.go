// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type RepoRequiredWorkflowStateEnum string

const (
	RepoRequiredWorkflowStateEnumActive  RepoRequiredWorkflowStateEnum = "active"
	RepoRequiredWorkflowStateEnumDeleted RepoRequiredWorkflowStateEnum = "deleted"
)

func (e RepoRequiredWorkflowStateEnum) ToPointer() *RepoRequiredWorkflowStateEnum {
	return &e
}

func (e *RepoRequiredWorkflowStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "deleted":
		*e = RepoRequiredWorkflowStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RepoRequiredWorkflowStateEnum: %v", v)
	}
}

// RepoRequiredWorkflow - A GitHub Actions required workflow
type RepoRequiredWorkflow struct {
	BadgeURL  string    `json:"badge_url"`
	CreatedAt time.Time `json:"created_at"`
	HTMLURL   string    `json:"html_url"`
	ID        int64     `json:"id"`
	Name      string    `json:"name"`
	NodeID    string    `json:"node_id"`
	Path      string    `json:"path"`
	// Minimal Repository
	SourceRepository MinimalRepository             `json:"source_repository"`
	State            RepoRequiredWorkflowStateEnum `json:"state"`
	UpdatedAt        time.Time                     `json:"updated_at"`
	URL              string                        `json:"url"`
}
