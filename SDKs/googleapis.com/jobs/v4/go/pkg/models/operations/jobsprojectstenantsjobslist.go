// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type JobsProjectsTenantsJobsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type JobsProjectsTenantsJobsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type JobsProjectsTenantsJobsListSecurity struct {
	Option1 *JobsProjectsTenantsJobsListSecurityOption1 `security:"option"`
	Option2 *JobsProjectsTenantsJobsListSecurityOption2 `security:"option"`
}

// JobsProjectsTenantsJobsListJobViewEnum - The desired job attributes returned for jobs in the search response. Defaults to JobView.JOB_VIEW_FULL if no value is specified.
type JobsProjectsTenantsJobsListJobViewEnum string

const (
	JobsProjectsTenantsJobsListJobViewEnumJobViewUnspecified JobsProjectsTenantsJobsListJobViewEnum = "JOB_VIEW_UNSPECIFIED"
	JobsProjectsTenantsJobsListJobViewEnumJobViewIDOnly      JobsProjectsTenantsJobsListJobViewEnum = "JOB_VIEW_ID_ONLY"
	JobsProjectsTenantsJobsListJobViewEnumJobViewMinimal     JobsProjectsTenantsJobsListJobViewEnum = "JOB_VIEW_MINIMAL"
	JobsProjectsTenantsJobsListJobViewEnumJobViewSmall       JobsProjectsTenantsJobsListJobViewEnum = "JOB_VIEW_SMALL"
	JobsProjectsTenantsJobsListJobViewEnumJobViewFull        JobsProjectsTenantsJobsListJobViewEnum = "JOB_VIEW_FULL"
)

func (e JobsProjectsTenantsJobsListJobViewEnum) ToPointer() *JobsProjectsTenantsJobsListJobViewEnum {
	return &e
}

func (e *JobsProjectsTenantsJobsListJobViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JOB_VIEW_UNSPECIFIED":
		fallthrough
	case "JOB_VIEW_ID_ONLY":
		fallthrough
	case "JOB_VIEW_MINIMAL":
		fallthrough
	case "JOB_VIEW_SMALL":
		fallthrough
	case "JOB_VIEW_FULL":
		*e = JobsProjectsTenantsJobsListJobViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobsProjectsTenantsJobsListJobViewEnum: %v", v)
	}
}

type JobsProjectsTenantsJobsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Required. The filter string specifies the jobs to be enumerated. Supported operator: =, AND The fields eligible for filtering are: * `companyName` * `requisitionId` * `status` Available values: OPEN, EXPIRED, ALL. Defaults to OPEN if no value is specified. At least one of `companyName` and `requisitionId` must present or an INVALID_ARGUMENT error is thrown. Sample Query: * companyName = "projects/foo/tenants/bar/companies/baz" * companyName = "projects/foo/tenants/bar/companies/baz" AND requisitionId = "req-1" * companyName = "projects/foo/tenants/bar/companies/baz" AND status = "EXPIRED" * requisitionId = "req-1" * requisitionId = "req-1" AND status = "EXPIRED"
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// The desired job attributes returned for jobs in the search response. Defaults to JobView.JOB_VIEW_FULL if no value is specified.
	JobView *JobsProjectsTenantsJobsListJobViewEnum `queryParam:"style=form,explode=true,name=jobView"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of jobs to be returned per page of results. If job_view is set to JobView.JOB_VIEW_ID_ONLY, the maximum allowed page size is 1000. Otherwise, the maximum allowed page size is 100. Default is 100 if empty or a number < 1 is specified.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// The starting point of a query result.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Required. The resource name of the tenant under which the job is created. The format is "projects/{project_id}/tenants/{tenant_id}". For example, "projects/foo/tenants/bar".
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type JobsProjectsTenantsJobsListResponse struct {
	ContentType string
	// Successful response
	ListJobsResponse *shared.ListJobsResponse
	StatusCode       int
	RawResponse      *http.Response
}
