// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetCredentialReportActionEnum
type POSTGetCredentialReportActionEnum string

const (
	POSTGetCredentialReportActionEnumGetCredentialReport POSTGetCredentialReportActionEnum = "GetCredentialReport"
)

func (e *POSTGetCredentialReportActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetCredentialReport":
		*e = POSTGetCredentialReportActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetCredentialReportActionEnum: %s", s)
	}
}

// POSTGetCredentialReportVersionEnum
type POSTGetCredentialReportVersionEnum string

const (
	POSTGetCredentialReportVersionEnumTwoThousandAndTen0508 POSTGetCredentialReportVersionEnum = "2010-05-08"
)

func (e *POSTGetCredentialReportVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = POSTGetCredentialReportVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetCredentialReportVersionEnum: %s", s)
	}
}

type POSTGetCredentialReportRequest struct {
	Action            POSTGetCredentialReportActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version           POSTGetCredentialReportVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetCredentialReportResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
