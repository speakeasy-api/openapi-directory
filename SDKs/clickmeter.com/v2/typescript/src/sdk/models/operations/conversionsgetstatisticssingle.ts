/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Timeframe of the request. See list at $timeframeList
 */
export enum ConversionsGetStatisticsSingleTimeFrameEnum {
  Today = "today",
  Yesterday = "yesterday",
  Last7 = "last7",
  Last30 = "last30",
  Lastmonth = "lastmonth",
  Currentmonth = "currentmonth",
  Previousmonth = "previousmonth",
  Last90 = "last90",
  Last120 = "last120",
  Last180 = "last180",
  Last12months = "last12months",
  Lastyear = "lastyear",
  Currentyear = "currentyear",
  Beginning = "beginning",
  Custom = "custom",
}

export class ConversionsGetStatisticsSingleRequest extends SpeakeasyBase {
  /**
   * Id of the conversion
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=conversionId",
  })
  conversionId: number;

  /**
   * Is the datapoint marked as favourite
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=favourite",
  })
  favourite?: boolean;

  /**
   * If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fromDay",
  })
  fromDay?: string;

  /**
   * If using "yesterday" or "today" timeframe you can ask for the hourly detail
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=hourly",
  })
  hourly?: boolean;

  /**
   * Filter by this tag name
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tag" })
  tag?: string;

  /**
   * Timeframe of the request. See list at $timeframeList
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=timeFrame",
  })
  timeFrame: ConversionsGetStatisticsSingleTimeFrameEnum;

  /**
   * If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=toDay" })
  toDay?: string;
}

export class ConversionsGetStatisticsSingleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreDtoAggregatedAggregatedResult?: shared.ApiCoreDtoAggregatedAggregatedResult;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
