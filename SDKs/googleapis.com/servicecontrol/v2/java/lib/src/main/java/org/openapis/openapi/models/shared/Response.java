/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Response - This message defines attributes for a typical network response. It generally models semantics of an HTTP response.
 */
public class Response {
    /**
     * The amount of time it takes the backend service to fully respond to a request. Measured from when the destination service starts to send the request to the backend until when the destination service receives the complete response from the backend.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backendLatency")
    public String backendLatency;
    public Response withBackendLatency(String backendLatency) {
        this.backendLatency = backendLatency;
        return this;
    }
    
    /**
     * The HTTP response status code, such as `200` and `404`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;
    public Response withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * The HTTP response headers. If multiple headers share the same key, they must be merged according to HTTP spec. All header keys must be lowercased, because HTTP header keys are case-insensitive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public java.util.Map<String, String> headers;
    public Response withHeaders(java.util.Map<String, String> headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * The HTTP response size in bytes. If unknown, it must be -1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public String size;
    public Response withSize(String size) {
        this.size = size;
        return this;
    }
    
    /**
     * The timestamp when the `destination` service sends the last byte of the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time")
    public String time;
    public Response withTime(String time) {
        this.time = time;
        return this;
    }
    
}
