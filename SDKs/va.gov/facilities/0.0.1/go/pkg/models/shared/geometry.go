// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GeometryTypeEnum string

const (
	GeometryTypeEnumPoint GeometryTypeEnum = "Point"
)

func (e *GeometryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Point":
		*e = GeometryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GeometryTypeEnum: %s", s)
	}
}

type Geometry struct {
	Coordinates []float64        `json:"coordinates,omitempty"`
	Type        GeometryTypeEnum `json:"type"`
}
