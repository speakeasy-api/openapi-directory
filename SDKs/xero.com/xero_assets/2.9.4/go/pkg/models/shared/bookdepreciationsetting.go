// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BookDepreciationSettingAveragingMethodEnum - The method of averaging applied to this asset. See Averaging Methods
type BookDepreciationSettingAveragingMethodEnum string

const (
	BookDepreciationSettingAveragingMethodEnumFullMonth  BookDepreciationSettingAveragingMethodEnum = "FullMonth"
	BookDepreciationSettingAveragingMethodEnumActualDays BookDepreciationSettingAveragingMethodEnum = "ActualDays"
)

func (e BookDepreciationSettingAveragingMethodEnum) ToPointer() *BookDepreciationSettingAveragingMethodEnum {
	return &e
}

func (e *BookDepreciationSettingAveragingMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FullMonth":
		fallthrough
	case "ActualDays":
		*e = BookDepreciationSettingAveragingMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BookDepreciationSettingAveragingMethodEnum: %v", v)
	}
}

// BookDepreciationSettingDepreciationCalculationMethodEnum - See Depreciation Calculation Methods
type BookDepreciationSettingDepreciationCalculationMethodEnum string

const (
	BookDepreciationSettingDepreciationCalculationMethodEnumRate BookDepreciationSettingDepreciationCalculationMethodEnum = "Rate"
	BookDepreciationSettingDepreciationCalculationMethodEnumLife BookDepreciationSettingDepreciationCalculationMethodEnum = "Life"
	BookDepreciationSettingDepreciationCalculationMethodEnumNone BookDepreciationSettingDepreciationCalculationMethodEnum = "None"
)

func (e BookDepreciationSettingDepreciationCalculationMethodEnum) ToPointer() *BookDepreciationSettingDepreciationCalculationMethodEnum {
	return &e
}

func (e *BookDepreciationSettingDepreciationCalculationMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Rate":
		fallthrough
	case "Life":
		fallthrough
	case "None":
		*e = BookDepreciationSettingDepreciationCalculationMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BookDepreciationSettingDepreciationCalculationMethodEnum: %v", v)
	}
}

// BookDepreciationSettingDepreciationMethodEnum - The method of depreciation applied to this asset. See Depreciation Methods
type BookDepreciationSettingDepreciationMethodEnum string

const (
	BookDepreciationSettingDepreciationMethodEnumNoDepreciation      BookDepreciationSettingDepreciationMethodEnum = "NoDepreciation"
	BookDepreciationSettingDepreciationMethodEnumStraightLine        BookDepreciationSettingDepreciationMethodEnum = "StraightLine"
	BookDepreciationSettingDepreciationMethodEnumDiminishingValue100 BookDepreciationSettingDepreciationMethodEnum = "DiminishingValue100"
	BookDepreciationSettingDepreciationMethodEnumDiminishingValue150 BookDepreciationSettingDepreciationMethodEnum = "DiminishingValue150"
	BookDepreciationSettingDepreciationMethodEnumDiminishingValue200 BookDepreciationSettingDepreciationMethodEnum = "DiminishingValue200"
	BookDepreciationSettingDepreciationMethodEnumFullDepreciation    BookDepreciationSettingDepreciationMethodEnum = "FullDepreciation"
)

func (e BookDepreciationSettingDepreciationMethodEnum) ToPointer() *BookDepreciationSettingDepreciationMethodEnum {
	return &e
}

func (e *BookDepreciationSettingDepreciationMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NoDepreciation":
		fallthrough
	case "StraightLine":
		fallthrough
	case "DiminishingValue100":
		fallthrough
	case "DiminishingValue150":
		fallthrough
	case "DiminishingValue200":
		fallthrough
	case "FullDepreciation":
		*e = BookDepreciationSettingDepreciationMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BookDepreciationSettingDepreciationMethodEnum: %v", v)
	}
}

type BookDepreciationSetting struct {
	// The method of averaging applied to this asset. See Averaging Methods
	AveragingMethod *BookDepreciationSettingAveragingMethodEnum `json:"averagingMethod,omitempty"`
	// Unique Xero identifier for the effective date change
	BookEffectiveDateOfChangeID *string `json:"bookEffectiveDateOfChangeId,omitempty"`
	// Unique Xero identifier for the depreciable object
	DepreciableObjectID *string `json:"depreciableObjectId,omitempty"`
	// The type of asset object
	DepreciableObjectType *string `json:"depreciableObjectType,omitempty"`
	// See Depreciation Calculation Methods
	DepreciationCalculationMethod *BookDepreciationSettingDepreciationCalculationMethodEnum `json:"depreciationCalculationMethod,omitempty"`
	// The method of depreciation applied to this asset. See Depreciation Methods
	DepreciationMethod *BookDepreciationSettingDepreciationMethodEnum `json:"depreciationMethod,omitempty"`
	// The rate of depreciation (e.g. 0.05)
	DepreciationRate *float64 `json:"depreciationRate,omitempty"`
	// Effective life of the asset in years (e.g. 5)
	EffectiveLifeYears *int64 `json:"effectiveLifeYears,omitempty"`
}
