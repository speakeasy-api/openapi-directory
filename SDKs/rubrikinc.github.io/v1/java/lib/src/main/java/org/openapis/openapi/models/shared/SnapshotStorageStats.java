/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SnapshotStorageStats - Returns storage stats for a snapshot.
 */
public class SnapshotStorageStats {
    /**
     * Amount of bytes actually ingested for the snapshot. This value reflects the amount of bytes ingested during snapshot capture and remains consistent across different physical representations.
     */
    @JsonProperty("historicIngestedBytes")
    public Long historicIngestedBytes;

    public SnapshotStorageStats withHistoricIngestedBytes(Long historicIngestedBytes) {
        this.historicIngestedBytes = historicIngestedBytes;
        return this;
    }
    
    /**
     * Amount of bytes inferred to be ingested to our system for the snapshot. This may change for existing logical content, as physical representation of content changes.
     */
    @JsonProperty("ingestedBytes")
    public Long ingestedBytes;

    public SnapshotStorageStats withIngestedBytes(Long ingestedBytes) {
        this.ingestedBytes = ingestedBytes;
        return this;
    }
    
    /**
     * Amount of logical bytes the snapshot represents.
     */
    @JsonProperty("logicalBytes")
    public Long logicalBytes;

    public SnapshotStorageStats withLogicalBytes(Long logicalBytes) {
        this.logicalBytes = logicalBytes;
        return this;
    }
    
    /**
     * Amount of bytes physically stored for the snapshot.
     */
    @JsonProperty("physicalBytes")
    public Long physicalBytes;

    public SnapshotStorageStats withPhysicalBytes(Long physicalBytes) {
        this.physicalBytes = physicalBytes;
        return this;
    }
    
    public SnapshotStorageStats(@JsonProperty("historicIngestedBytes") Long historicIngestedBytes, @JsonProperty("ingestedBytes") Long ingestedBytes, @JsonProperty("logicalBytes") Long logicalBytes, @JsonProperty("physicalBytes") Long physicalBytes) {
        this.historicIngestedBytes = historicIngestedBytes;
        this.ingestedBytes = ingestedBytes;
        this.logicalBytes = logicalBytes;
        this.physicalBytes = physicalBytes;
  }
}
