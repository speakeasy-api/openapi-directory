// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChannelStatusLongUploadsStatusEnum - The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information.
type ChannelStatusLongUploadsStatusEnum string

const (
	ChannelStatusLongUploadsStatusEnumLongUploadsUnspecified ChannelStatusLongUploadsStatusEnum = "longUploadsUnspecified"
	ChannelStatusLongUploadsStatusEnumAllowed                ChannelStatusLongUploadsStatusEnum = "allowed"
	ChannelStatusLongUploadsStatusEnumEligible               ChannelStatusLongUploadsStatusEnum = "eligible"
	ChannelStatusLongUploadsStatusEnumDisallowed             ChannelStatusLongUploadsStatusEnum = "disallowed"
)

func (e ChannelStatusLongUploadsStatusEnum) ToPointer() *ChannelStatusLongUploadsStatusEnum {
	return &e
}

func (e *ChannelStatusLongUploadsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "longUploadsUnspecified":
		fallthrough
	case "allowed":
		fallthrough
	case "eligible":
		fallthrough
	case "disallowed":
		*e = ChannelStatusLongUploadsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelStatusLongUploadsStatusEnum: %v", v)
	}
}

// ChannelStatusPrivacyStatusEnum - Privacy status of the channel.
type ChannelStatusPrivacyStatusEnum string

const (
	ChannelStatusPrivacyStatusEnumPublic   ChannelStatusPrivacyStatusEnum = "public"
	ChannelStatusPrivacyStatusEnumUnlisted ChannelStatusPrivacyStatusEnum = "unlisted"
	ChannelStatusPrivacyStatusEnumPrivate  ChannelStatusPrivacyStatusEnum = "private"
)

func (e ChannelStatusPrivacyStatusEnum) ToPointer() *ChannelStatusPrivacyStatusEnum {
	return &e
}

func (e *ChannelStatusPrivacyStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "public":
		fallthrough
	case "unlisted":
		fallthrough
	case "private":
		*e = ChannelStatusPrivacyStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelStatusPrivacyStatusEnum: %v", v)
	}
}

// ChannelStatus - JSON template for the status part of a channel.
type ChannelStatus struct {
	// If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity.
	IsLinked *bool `json:"isLinked,omitempty"`
	// The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information.
	LongUploadsStatus *ChannelStatusLongUploadsStatusEnum `json:"longUploadsStatus,omitempty"`
	MadeForKids       *bool                               `json:"madeForKids,omitempty"`
	// Privacy status of the channel.
	PrivacyStatus           *ChannelStatusPrivacyStatusEnum `json:"privacyStatus,omitempty"`
	SelfDeclaredMadeForKids *bool                           `json:"selfDeclaredMadeForKids,omitempty"`
}
