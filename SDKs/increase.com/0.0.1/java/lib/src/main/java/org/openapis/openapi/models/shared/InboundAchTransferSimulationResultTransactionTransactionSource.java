/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InboundAchTransferSimulationResultTransactionTransactionSource - This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
 */
public class InboundAchTransferSimulationResultTransactionTransactionSource {
    /**
     * A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
     */
    @JsonProperty("account_transfer_intention")
    public InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntention accountTransferIntention;
    public InboundAchTransferSimulationResultTransactionTransactionSource withAccountTransferIntention(InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntention accountTransferIntention) {
        this.accountTransferIntention = accountTransferIntention;
        return this;
    }
    
    /**
     * A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
     */
    @JsonProperty("ach_check_conversion")
    public InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversion achCheckConversion;
    public InboundAchTransferSimulationResultTransactionTransactionSource withAchCheckConversion(InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversion achCheckConversion) {
        this.achCheckConversion = achCheckConversion;
        return this;
    }
    
    /**
     * A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
     */
    @JsonProperty("ach_check_conversion_return")
    public InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn achCheckConversionReturn;
    public InboundAchTransferSimulationResultTransactionTransactionSource withAchCheckConversionReturn(InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn achCheckConversionReturn) {
        this.achCheckConversionReturn = achCheckConversionReturn;
        return this;
    }
    
    /**
     * A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
     */
    @JsonProperty("ach_transfer_intention")
    public InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferIntention achTransferIntention;
    public InboundAchTransferSimulationResultTransactionTransactionSource withAchTransferIntention(InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferIntention achTransferIntention) {
        this.achTransferIntention = achTransferIntention;
        return this;
    }
    
    /**
     * A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
     */
    @JsonProperty("ach_transfer_rejection")
    public InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferRejection achTransferRejection;
    public InboundAchTransferSimulationResultTransactionTransactionSource withAchTransferRejection(InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferRejection achTransferRejection) {
        this.achTransferRejection = achTransferRejection;
        return this;
    }
    
    /**
     * A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
     */
    @JsonProperty("ach_transfer_return")
    public InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturn achTransferReturn;
    public InboundAchTransferSimulationResultTransactionTransactionSource withAchTransferReturn(InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturn achTransferReturn) {
        this.achTransferReturn = achTransferReturn;
        return this;
    }
    
    /**
     * A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
     */
    @JsonProperty("card_dispute_acceptance")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance cardDisputeAcceptance;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCardDisputeAcceptance(InboundAchTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance cardDisputeAcceptance) {
        this.cardDisputeAcceptance = cardDisputeAcceptance;
        return this;
    }
    
    /**
     * A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
     */
    @JsonProperty("card_refund")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCardRefund cardRefund;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCardRefund(InboundAchTransferSimulationResultTransactionTransactionSourceCardRefund cardRefund) {
        this.cardRefund = cardRefund;
        return this;
    }
    
    /**
     * A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
     */
    @JsonProperty("card_route_refund")
    public InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund cardRouteRefund;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCardRouteRefund(InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund cardRouteRefund) {
        this.cardRouteRefund = cardRouteRefund;
        return this;
    }
    
    /**
     * A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
     */
    @JsonProperty("card_route_settlement")
    public InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement cardRouteSettlement;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCardRouteSettlement(InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement cardRouteSettlement) {
        this.cardRouteSettlement = cardRouteSettlement;
        return this;
    }
    
    /**
     * A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
     */
    @JsonProperty("card_settlement")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlement cardSettlement;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCardSettlement(InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlement cardSettlement) {
        this.cardSettlement = cardSettlement;
        return this;
    }
    
    /**
     * The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
     */
    @JsonProperty("category")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum category;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCategory(InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
     */
    @JsonProperty("check_deposit_acceptance")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance checkDepositAcceptance;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCheckDepositAcceptance(InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance checkDepositAcceptance) {
        this.checkDepositAcceptance = checkDepositAcceptance;
        return this;
    }
    
    /**
     * A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
     */
    @JsonProperty("check_deposit_return")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturn checkDepositReturn;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCheckDepositReturn(InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturn checkDepositReturn) {
        this.checkDepositReturn = checkDepositReturn;
        return this;
    }
    
    /**
     * A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
     */
    @JsonProperty("check_transfer_intention")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntention checkTransferIntention;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCheckTransferIntention(InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntention checkTransferIntention) {
        this.checkTransferIntention = checkTransferIntention;
        return this;
    }
    
    /**
     * A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
     */
    @JsonProperty("check_transfer_rejection")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferRejection checkTransferRejection;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCheckTransferRejection(InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferRejection checkTransferRejection) {
        this.checkTransferRejection = checkTransferRejection;
        return this;
    }
    
    /**
     * A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
     */
    @JsonProperty("check_transfer_return")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturn checkTransferReturn;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCheckTransferReturn(InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturn checkTransferReturn) {
        this.checkTransferReturn = checkTransferReturn;
        return this;
    }
    
    /**
     * A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
     */
    @JsonProperty("check_transfer_stop_payment_request")
    public InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest checkTransferStopPaymentRequest;
    public InboundAchTransferSimulationResultTransactionTransactionSource withCheckTransferStopPaymentRequest(InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest checkTransferStopPaymentRequest) {
        this.checkTransferStopPaymentRequest = checkTransferStopPaymentRequest;
        return this;
    }
    
    /**
     * A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
     */
    @JsonProperty("dispute_resolution")
    public InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolution disputeResolution;
    public InboundAchTransferSimulationResultTransactionTransactionSource withDisputeResolution(InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolution disputeResolution) {
        this.disputeResolution = disputeResolution;
        return this;
    }
    
    /**
     * A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
     */
    @JsonProperty("empyreal_cash_deposit")
    public InboundAchTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit empyrealCashDeposit;
    public InboundAchTransferSimulationResultTransactionTransactionSource withEmpyrealCashDeposit(InboundAchTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit empyrealCashDeposit) {
        this.empyrealCashDeposit = empyrealCashDeposit;
        return this;
    }
    
    /**
     * A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
     */
    @JsonProperty("inbound_ach_transfer")
    public InboundACHTransferSimulationResultTransactionTransactionSourceInboundACHTransfer inboundAchTransfer;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInboundAchTransfer(InboundACHTransferSimulationResultTransactionTransactionSourceInboundACHTransfer inboundAchTransfer) {
        this.inboundAchTransfer = inboundAchTransfer;
        return this;
    }
    
    /**
     * A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
     */
    @JsonProperty("inbound_check")
    public InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheck inboundCheck;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInboundCheck(InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheck inboundCheck) {
        this.inboundCheck = inboundCheck;
        return this;
    }
    
    /**
     * A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
     */
    @JsonProperty("inbound_international_ach_transfer")
    public InboundACHTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer inboundInternationalAchTransfer;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInboundInternationalAchTransfer(InboundACHTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer inboundInternationalAchTransfer) {
        this.inboundInternationalAchTransfer = inboundInternationalAchTransfer;
        return this;
    }
    
    /**
     * A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
     */
    @JsonProperty("inbound_real_time_payments_transfer_confirmation")
    public InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation inboundRealTimePaymentsTransferConfirmation;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInboundRealTimePaymentsTransferConfirmation(InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation inboundRealTimePaymentsTransferConfirmation) {
        this.inboundRealTimePaymentsTransferConfirmation = inboundRealTimePaymentsTransferConfirmation;
        return this;
    }
    
    /**
     * A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
     */
    @JsonProperty("inbound_wire_drawdown_payment")
    public InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment inboundWireDrawdownPayment;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInboundWireDrawdownPayment(InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment inboundWireDrawdownPayment) {
        this.inboundWireDrawdownPayment = inboundWireDrawdownPayment;
        return this;
    }
    
    /**
     * A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
     */
    @JsonProperty("inbound_wire_drawdown_payment_reversal")
    public InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal inboundWireDrawdownPaymentReversal;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInboundWireDrawdownPaymentReversal(InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal inboundWireDrawdownPaymentReversal) {
        this.inboundWireDrawdownPaymentReversal = inboundWireDrawdownPaymentReversal;
        return this;
    }
    
    /**
     * A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
     */
    @JsonProperty("inbound_wire_reversal")
    public InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireReversal inboundWireReversal;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInboundWireReversal(InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireReversal inboundWireReversal) {
        this.inboundWireReversal = inboundWireReversal;
        return this;
    }
    
    /**
     * A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
     */
    @JsonProperty("inbound_wire_transfer")
    public InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireTransfer inboundWireTransfer;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInboundWireTransfer(InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireTransfer inboundWireTransfer) {
        this.inboundWireTransfer = inboundWireTransfer;
        return this;
    }
    
    /**
     * A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
     */
    @JsonProperty("interest_payment")
    public InboundAchTransferSimulationResultTransactionTransactionSourceInterestPayment interestPayment;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInterestPayment(InboundAchTransferSimulationResultTransactionTransactionSourceInterestPayment interestPayment) {
        this.interestPayment = interestPayment;
        return this;
    }
    
    /**
     * A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
     */
    @JsonProperty("internal_source")
    public InboundAchTransferSimulationResultTransactionTransactionSourceInternalSource internalSource;
    public InboundAchTransferSimulationResultTransactionTransactionSource withInternalSource(InboundAchTransferSimulationResultTransactionTransactionSourceInternalSource internalSource) {
        this.internalSource = internalSource;
        return this;
    }
    
    /**
     * A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
     */
    @JsonProperty("sample_funds")
    public InboundAchTransferSimulationResultTransactionTransactionSourceSampleFunds sampleFunds;
    public InboundAchTransferSimulationResultTransactionTransactionSource withSampleFunds(InboundAchTransferSimulationResultTransactionTransactionSourceSampleFunds sampleFunds) {
        this.sampleFunds = sampleFunds;
        return this;
    }
    
    /**
     * A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
     */
    @JsonProperty("wire_drawdown_payment_intention")
    public InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention wireDrawdownPaymentIntention;
    public InboundAchTransferSimulationResultTransactionTransactionSource withWireDrawdownPaymentIntention(InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention wireDrawdownPaymentIntention) {
        this.wireDrawdownPaymentIntention = wireDrawdownPaymentIntention;
        return this;
    }
    
    /**
     * A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
     */
    @JsonProperty("wire_drawdown_payment_rejection")
    public InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection wireDrawdownPaymentRejection;
    public InboundAchTransferSimulationResultTransactionTransactionSource withWireDrawdownPaymentRejection(InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection wireDrawdownPaymentRejection) {
        this.wireDrawdownPaymentRejection = wireDrawdownPaymentRejection;
        return this;
    }
    
    /**
     * A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
     */
    @JsonProperty("wire_transfer_intention")
    public InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferIntention wireTransferIntention;
    public InboundAchTransferSimulationResultTransactionTransactionSource withWireTransferIntention(InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferIntention wireTransferIntention) {
        this.wireTransferIntention = wireTransferIntention;
        return this;
    }
    
    /**
     * A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
     */
    @JsonProperty("wire_transfer_rejection")
    public InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferRejection wireTransferRejection;
    public InboundAchTransferSimulationResultTransactionTransactionSource withWireTransferRejection(InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferRejection wireTransferRejection) {
        this.wireTransferRejection = wireTransferRejection;
        return this;
    }
    
}
