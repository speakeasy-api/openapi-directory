<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SourceAccountResponseV3 - Source account response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SourceAccountResponseV3
{
	#[\JMS\Serializer\Annotation\SerializedName('autoTopUpConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AutoTopUpConfigV3')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AutoTopUpConfigV3 $autoTopUpConfig = null;
    
    /**
     * Decimal implied
     * 
     * @var ?int $balance
     */
	#[\JMS\Serializer\Annotation\SerializedName('balance')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $balance = null;
    
    /**
     * Valid ISO 3166 2 character country code. See the <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a>ISO specification</a> for details.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
     * 
     * @var ?string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('customerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customerId = null;
    
    /**
     * An optional flag for whether the source account has been deleted. Only present in the response if true.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * An optional timestamp when the source account has been deleted. Only present in the response if deleted.
     * 
     * @var ?\DateTime $deletedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('deletedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $deletedAt = null;
    
    /**
     * The funding reference (will not be set for DECOUPLED accounts).
     * 
     * @var ?string $fundingRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('fundingRef')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fundingRef = null;
    
    /**
     * Source Account Id
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('notifications')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NotificationsV3')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NotificationsV3 $notifications = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('payorId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payorId = null;
    
    /**
     * The physical account id (will not be set for DECOUPLED accounts).
     * 
     * @var ?string $physicalAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('physicalAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $physicalAccountId = null;
    
    /**
     * The physical account name (will not be set for DECOUPLED accounts).
     * 
     * @var ?string $physicalAccountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('physicalAccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $physicalAccountName = null;
    
    /**
     * The pooled account flag (will not be set for DECOUPLED accounts).
     * 
     * @var ?bool $pooled
     */
	#[\JMS\Serializer\Annotation\SerializedName('pooled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $pooled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('railsId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $railsId;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
    /**
     * An optional flag for whether the source account has been deleted by a user. Only present in the response if true.
     * 
     * @var ?bool $userDeleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('userDeleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $userDeleted = null;
    
	public function __construct()
	{
		$this->autoTopUpConfig = null;
		$this->balance = null;
		$this->country = null;
		$this->currency = null;
		$this->customerId = null;
		$this->deleted = null;
		$this->deletedAt = null;
		$this->fundingRef = null;
		$this->id = "";
		$this->name = null;
		$this->notifications = null;
		$this->payorId = null;
		$this->physicalAccountId = null;
		$this->physicalAccountName = null;
		$this->pooled = null;
		$this->railsId = "";
		$this->type = "";
		$this->userDeleted = null;
	}
}
