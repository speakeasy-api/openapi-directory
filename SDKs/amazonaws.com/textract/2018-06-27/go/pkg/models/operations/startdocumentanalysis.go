// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartDocumentAnalysisXAmzTargetEnum
type StartDocumentAnalysisXAmzTargetEnum string

const (
	StartDocumentAnalysisXAmzTargetEnumTextractStartDocumentAnalysis StartDocumentAnalysisXAmzTargetEnum = "Textract.StartDocumentAnalysis"
)

func (e StartDocumentAnalysisXAmzTargetEnum) ToPointer() *StartDocumentAnalysisXAmzTargetEnum {
	return &e
}

func (e *StartDocumentAnalysisXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Textract.StartDocumentAnalysis":
		*e = StartDocumentAnalysisXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartDocumentAnalysisXAmzTargetEnum: %v", v)
	}
}

type StartDocumentAnalysisRequest struct {
	StartDocumentAnalysisRequest shared.StartDocumentAnalysisRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   StartDocumentAnalysisXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartDocumentAnalysisResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BadDocumentException
	BadDocumentException interface{}
	ContentType          string
	// DocumentTooLargeException
	DocumentTooLargeException interface{}
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidKMSKeyException
	InvalidKMSKeyException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidS3ObjectException
	InvalidS3ObjectException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// Success
	StartDocumentAnalysisResponse *shared.StartDocumentAnalysisResponse
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnsupportedDocumentException
	UnsupportedDocumentException interface{}
}
