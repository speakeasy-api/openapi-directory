// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateDynamicThingGroupPathParams struct {
	// The dynamic thing group name to create.
	ThingGroupName string `pathParam:"style=simple,explode=false,name=thingGroupName"`
}

type CreateDynamicThingGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateDynamicThingGroupRequestBodyThingGroupProperties - Thing group properties.
type CreateDynamicThingGroupRequestBodyThingGroupProperties struct {
	AttributePayload      *shared.AttributePayload `json:"attributePayload,omitempty"`
	ThingGroupDescription *string                  `json:"thingGroupDescription,omitempty"`
}

type CreateDynamicThingGroupRequestBody struct {
	// <p>The dynamic thing group index name.</p> <note> <p>Currently one index is supported: <code>AWS_Things</code>.</p> </note>
	IndexName *string `json:"indexName,omitempty"`
	// <p>The dynamic thing group search query string.</p> <p>See <a href="https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html">Query Syntax</a> for information about query string syntax.</p>
	QueryString string `json:"queryString"`
	// <p>The dynamic thing group query version.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>
	QueryVersion *string `json:"queryVersion,omitempty"`
	// Metadata which can be used to manage the dynamic thing group.
	Tags []shared.Tag `json:"tags,omitempty"`
	// Thing group properties.
	ThingGroupProperties *CreateDynamicThingGroupRequestBodyThingGroupProperties `json:"thingGroupProperties,omitempty"`
}

type CreateDynamicThingGroupRequest struct {
	PathParams CreateDynamicThingGroupPathParams
	Headers    CreateDynamicThingGroupHeaders
	Request    CreateDynamicThingGroupRequestBody `request:"mediaType=application/json"`
}

type CreateDynamicThingGroupResponse struct {
	ContentType string
	// Success
	CreateDynamicThingGroupResponse *shared.CreateDynamicThingGroupResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidQueryException
	InvalidQueryException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
