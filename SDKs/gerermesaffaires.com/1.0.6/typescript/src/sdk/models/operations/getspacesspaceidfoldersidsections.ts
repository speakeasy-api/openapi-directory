/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetSpacesSpaceIdFoldersIdSectionsRequest extends SpeakeasyBase {
  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export enum GetSpacesSpaceIdFoldersIdSections200ApplicationJSONStateEnum {
  Folded = "folded",
  Unfolded = "unfolded",
  Hidden = "hidden",
}

export class GetSpacesSpaceIdFoldersIdSections200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: GetSpacesSpaceIdFoldersIdSections200ApplicationJSONStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}

export class GetSpacesSpaceIdFoldersIdSectionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of sections of the folder
   */
  @SpeakeasyMetadata({
    elemType: GetSpacesSpaceIdFoldersIdSections200ApplicationJSON,
  })
  getSpacesSpaceIdFoldersIdSections200ApplicationJSONAnies?: GetSpacesSpaceIdFoldersIdSections200ApplicationJSON[];
}
