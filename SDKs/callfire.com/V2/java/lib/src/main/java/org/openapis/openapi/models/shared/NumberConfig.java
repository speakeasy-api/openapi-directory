/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NumberConfig - Represents the configuration of a phone number purchased by user. You can configure number to accept inbound calls, play sounds to customer, make a transfer or setup an IVR script to interact with customer. See [CallFire IVR](https://www.callfire.com/products/ivr) for more info
 */
public class NumberConfig {
    /**
     * Call tracking configuration allows you track incoming calls, analyze, respond to customers using sms or voice replies. For more information see [call tracking page](https://www.callfire.com/products/call-tracking)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callTrackingConfig")
    public CallTrackingConfig callTrackingConfig;

    public NumberConfig withCallTrackingConfig(CallTrackingConfig callTrackingConfig) {
        this.callTrackingConfig = callTrackingConfig;
        return this;
    }
    
    /**
     * A type of config. Available values: TRACKING, IVR
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configType")
    public NumberConfigConfigTypeEnum configType;

    public NumberConfig withConfigType(NumberConfigConfigTypeEnum configType) {
        this.configType = configType;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ivrInboundConfig")
    public IvrInboundConfig ivrInboundConfig;

    public NumberConfig withIvrInboundConfig(IvrInboundConfig ivrInboundConfig) {
        this.ivrInboundConfig = ivrInboundConfig;
        return this;
    }
    
    /**
     * Phone number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;

    public NumberConfig withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textInboundConfig")
    public TextInboundConfig textInboundConfig;

    public NumberConfig withTextInboundConfig(TextInboundConfig textInboundConfig) {
        this.textInboundConfig = textInboundConfig;
        return this;
    }
    
    public NumberConfig(){}
}
