"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awss3bucketbucketlifecycleconfigurationrulesfilterpredicateoperandsdetails as shared_awss3bucketbucketlifecycleconfigurationrulesfilterpredicateoperandsdetails
from ..shared import awss3bucketbucketlifecycleconfigurationrulesfilterpredicatetagdetails as shared_awss3bucketbucketlifecycleconfigurationrulesfilterpredicatetagdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails:
    r"""The configuration for the filter."""
    
    operands: Optional[list[shared_awss3bucketbucketlifecycleconfigurationrulesfilterpredicateoperandsdetails.AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Operands'), 'exclude': lambda f: f is None }})  
    prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Prefix'), 'exclude': lambda f: f is None }})  
    tag: Optional[shared_awss3bucketbucketlifecycleconfigurationrulesfilterpredicatetagdetails.AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tag'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    