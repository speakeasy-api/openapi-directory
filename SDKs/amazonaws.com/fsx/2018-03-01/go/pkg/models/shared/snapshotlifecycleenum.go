// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SnapshotLifecycleEnum string

const (
	SnapshotLifecycleEnumPending   SnapshotLifecycleEnum = "PENDING"
	SnapshotLifecycleEnumCreating  SnapshotLifecycleEnum = "CREATING"
	SnapshotLifecycleEnumDeleting  SnapshotLifecycleEnum = "DELETING"
	SnapshotLifecycleEnumAvailable SnapshotLifecycleEnum = "AVAILABLE"
)

func (e SnapshotLifecycleEnum) ToPointer() *SnapshotLifecycleEnum {
	return &e
}

func (e *SnapshotLifecycleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "CREATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "AVAILABLE":
		*e = SnapshotLifecycleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SnapshotLifecycleEnum: %v", v)
	}
}
