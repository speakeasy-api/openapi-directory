// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SummaryEnumCallStateEnum string

const (
	SummaryEnumCallStateEnumRinging   SummaryEnumCallStateEnum = "ringing"
	SummaryEnumCallStateEnumCompleted SummaryEnumCallStateEnum = "completed"
	SummaryEnumCallStateEnumBusy      SummaryEnumCallStateEnum = "busy"
	SummaryEnumCallStateEnumFail      SummaryEnumCallStateEnum = "fail"
	SummaryEnumCallStateEnumNoanswer  SummaryEnumCallStateEnum = "noanswer"
	SummaryEnumCallStateEnumCanceled  SummaryEnumCallStateEnum = "canceled"
	SummaryEnumCallStateEnumAnswered  SummaryEnumCallStateEnum = "answered"
	SummaryEnumCallStateEnumUndialed  SummaryEnumCallStateEnum = "undialed"
)

func (e SummaryEnumCallStateEnum) ToPointer() *SummaryEnumCallStateEnum {
	return &e
}

func (e *SummaryEnumCallStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ringing":
		fallthrough
	case "completed":
		fallthrough
	case "busy":
		fallthrough
	case "fail":
		fallthrough
	case "noanswer":
		fallthrough
	case "canceled":
		fallthrough
	case "answered":
		fallthrough
	case "undialed":
		*e = SummaryEnumCallStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummaryEnumCallStateEnum: %v", v)
	}
}
