"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateDeviceSwitchRoutingStaticRouteRequestBody:
    
    next_hop_ip: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextHopIp') }})
    r"""IP address of the next hop device to which the device sends its traffic for the subnet"""  
    subnet: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subnet') }})
    r"""The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)"""  
    advertise_via_ospf_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiseViaOspfEnabled'), 'exclude': lambda f: f is None }})
    r"""Option to advertise static route via OSPF"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name or description for layer 3 static route"""  
    prefer_over_ospf_routes_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preferOverOspfRoutesEnabled'), 'exclude': lambda f: f is None }})
    r"""Option to prefer static route over OSPF routes"""  
    

@dataclasses.dataclass
class CreateDeviceSwitchRoutingStaticRouteRequest:
    
    request_body: CreateDeviceSwitchRoutingStaticRouteRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    serial: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serial', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class CreateDeviceSwitchRoutingStaticRouteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_device_switch_routing_static_route_201_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    