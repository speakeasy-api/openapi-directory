/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RxNormEntity - The collection of medical entities extracted from the input text and their associated information. For each entity, the response provides the entity text, the entity category, where the entity text begins and ends, and the level of confidence that Amazon Comprehend Medical has in the detection and analysis. Attributes and traits of the entity are also returned. 
 */
public class RxNormEntity {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attributes")
    public RxNormAttribute[] attributes;

    public RxNormEntity withAttributes(RxNormAttribute[] attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BeginOffset")
    public Long beginOffset;

    public RxNormEntity withBeginOffset(Long beginOffset) {
        this.beginOffset = beginOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Category")
    public RxNormEntityCategoryEnum category;

    public RxNormEntity withCategory(RxNormEntityCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EndOffset")
    public Long endOffset;

    public RxNormEntity withEndOffset(Long endOffset) {
        this.endOffset = endOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Long id;

    public RxNormEntity withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RxNormConcepts")
    public RxNormConcept[] rxNormConcepts;

    public RxNormEntity withRxNormConcepts(RxNormConcept[] rxNormConcepts) {
        this.rxNormConcepts = rxNormConcepts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Score")
    public Float score;

    public RxNormEntity withScore(Float score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Text")
    public String text;

    public RxNormEntity withText(String text) {
        this.text = text;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Traits")
    public RxNormTrait[] traits;

    public RxNormEntity withTraits(RxNormTrait[] traits) {
        this.traits = traits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public RxNormEntityTypeEnum type;

    public RxNormEntity withType(RxNormEntityTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public RxNormEntity(){}
}
