// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CreateWithdrawalSecurity struct {
	APISecretKey string `security:"scheme,type=apiKey,subtype=header,name=x-api-key"`
}

// CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum - Withdrawal sub transaction type
type CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum string

const (
	CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnumWithdrawal CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum = "Withdrawal"
)

func (e *CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Withdrawal":
		*e = CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum: %s", s)
	}
}

// CreateWithdrawalRootTypeForWithdrawal - JSON for the Withdrawal resource type
type CreateWithdrawalRootTypeForWithdrawal struct {
	// Bank Account ID
	BankAccountID string `json:"bank_account_id"`
	// Currency of the Withdrawal.must be a currency configured for the Pot
	Currency string `json:"currency"`
	// Pot ID
	PotID string `json:"pot_id"`
	// Unique request id to ensure idempotency. (ex: UUID)
	RequestID string `json:"request_id"`
	// Withdrawal sub transaction type
	SubTransactionType CreateWithdrawalRootTypeForWithdrawalSubTransactionTypeEnum `json:"sub_transaction_type"`
	// Withdrawal Amount upto 2 decimal places
	TransactionValue string `json:"transaction_value"`
}

type CreateWithdrawalRequest struct {
	RequestBody CreateWithdrawalRootTypeForWithdrawal `request:"mediaType=application/json"`
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// CreateWithdrawal500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type CreateWithdrawal500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateWithdrawal429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type CreateWithdrawal429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateWithdrawal409ApplicationJSONStatusEnum - Current status of the original request
type CreateWithdrawal409ApplicationJSONStatusEnum string

const (
	CreateWithdrawal409ApplicationJSONStatusEnumProcessing CreateWithdrawal409ApplicationJSONStatusEnum = "PROCESSING"
	CreateWithdrawal409ApplicationJSONStatusEnumComplete   CreateWithdrawal409ApplicationJSONStatusEnum = "COMPLETE"
)

func (e *CreateWithdrawal409ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESSING":
		fallthrough
	case "COMPLETE":
		*e = CreateWithdrawal409ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWithdrawal409ApplicationJSONStatusEnum: %s", s)
	}
}

// CreateWithdrawal409ApplicationJSON - Duplicate request
type CreateWithdrawal409ApplicationJSON struct {
	// Human readable description of the error
	Message string `json:"message"`
	// Stringified original response body if status is `COMPLETE`
	Response map[string]interface{} `json:"response,omitempty"`
	// Current status of the original request
	Status CreateWithdrawal409ApplicationJSONStatusEnum `json:"status"`
}

// CreateWithdrawal404ApplicationJSON - The specified resource was not found
type CreateWithdrawal404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateWithdrawal403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type CreateWithdrawal403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateWithdrawal401ApplicationJSON - You do not have permissions to access this resource.
type CreateWithdrawal401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateWithdrawal400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type CreateWithdrawal400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum - in = cash payment or pending buy transaction, out= cash out or pending sell transaction.
type CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum string

const (
	CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnumIn  CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum = "in"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnumOut CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum = "out"
)

func (e *CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "in":
		fallthrough
	case "out":
		*e = CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum: %s", s)
	}
}

// CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum - Origin of the transaction
type CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum string

const (
	CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnumAPI        CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum = "api"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnumAdminUI    CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum = "admin_ui"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnumFileUpload CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum = "file_upload"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnumSystem     CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum = "system"
)

func (e *CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api":
		fallthrough
	case "admin_ui":
		fallthrough
	case "file_upload":
		fallthrough
	case "system":
		*e = CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum: %s", s)
	}
}

type CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnum string

const (
	CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnumWithdrawal CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnum = "Withdrawal"
)

func (e *CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Withdrawal":
		*e = CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnum: %s", s)
	}
}

// CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum - Withdrawal sub transaction type
type CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum string

const (
	CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnumWithdrawal CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum = "Withdrawal"
)

func (e *CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Withdrawal":
		*e = CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum: %s", s)
	}
}

// CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum - Sub state of the transaction. instructed, confirmed, priced sub_types applicable for pending state and rejected, cancelled, settled sub_types applicable for archived state
type CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum string

const (
	CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnumInstructed CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum = "instructed"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnumConfirmed  CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum = "confirmed"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnumPriced     CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum = "priced"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnumRejected   CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum = "rejected"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnumSettled    CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum = "settled"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnumCancelled  CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum = "cancelled"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnumScheduled  CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum = "scheduled"
)

func (e *CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "instructed":
		fallthrough
	case "confirmed":
		fallthrough
	case "priced":
		fallthrough
	case "rejected":
		fallthrough
	case "settled":
		fallthrough
	case "cancelled":
		fallthrough
	case "scheduled":
		*e = CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum: %s", s)
	}
}

// CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum - State of the transaction
type CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum string

const (
	CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnumPending  CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum = "pending"
	CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnumArchived CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum = "archived"
)

func (e *CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "archived":
		*e = CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum: %s", s)
	}
}

// CreateWithdrawalRootTypeForWithdrawalCreationResponse - JSON for the Withdrawal creation response
type CreateWithdrawalRootTypeForWithdrawalCreationResponse struct {
	// Will indicate the date where this record was created
	CreatedAt string `json:"created_at"`
	// Currency of the Withdrawal
	Currency string `json:"currency"`
	// in = cash payment or pending buy transaction, out= cash out or pending sell transaction.
	Direction CreateWithdrawalRootTypeForWithdrawalCreationResponseDirectionEnum `json:"direction"`
	// External Transaction Reference
	ExternalTransactionReference *string `json:"external_transaction_reference,omitempty"`
	// investment_product_id
	InvestmentProductID string `json:"investment_product_id"`
	// Origin of the transaction
	Origin CreateWithdrawalRootTypeForWithdrawalCreationResponseOriginEnum `json:"origin"`
	// Pot ID
	PotID                  string                                                                          `json:"pot_id"`
	PrimaryTransactionType CreateWithdrawalRootTypeForWithdrawalCreationResponsePrimaryTransactionTypeEnum `json:"primary_transaction_type"`
	// Intended settlement date of the pending transaction or actual the settled day of the transaction
	SettlementDate *string `json:"settlement_date,omitempty"`
	// Withdrawal sub transaction type
	SubTransactionType CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTransactionTypeEnum `json:"sub_transaction_type"`
	// Sub state of the transaction. instructed, confirmed, priced sub_types applicable for pending state and rejected, cancelled, settled sub_types applicable for archived state
	SubType CreateWithdrawalRootTypeForWithdrawalCreationResponseSubTypeEnum `json:"sub_type"`
	// Date the transaction was effected
	TradeDate *string `json:"trade_date,omitempty"`
	// Unique ID of the withdrawal transaction
	TransactionID string `json:"transaction_id"`
	// Withdrawal Amount upto 2 decimal places
	TransactionValue string `json:"transaction_value"`
	// State of the transaction
	Type CreateWithdrawalRootTypeForWithdrawalCreationResponseTypeEnum `json:"type"`
	// Will indicate the date where this record was last changed
	UpdatedAt string `json:"updated_at"`
}

type CreateWithdrawalResponse struct {
	ContentType string
	// success
	RootTypeForWithdrawalCreationResponse *CreateWithdrawalRootTypeForWithdrawalCreationResponse
	StatusCode                            int
	RawResponse                           *http.Response
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	CreateWithdrawal400ApplicationJSONObject *CreateWithdrawal400ApplicationJSON
	// You do not have permissions to access this resource.
	CreateWithdrawal401ApplicationJSONObject *CreateWithdrawal401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	CreateWithdrawal403ApplicationJSONObject *CreateWithdrawal403ApplicationJSON
	// The specified resource was not found
	CreateWithdrawal404ApplicationJSONObject *CreateWithdrawal404ApplicationJSON
	// Duplicate request
	CreateWithdrawal409ApplicationJSONObject *CreateWithdrawal409ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	CreateWithdrawal429ApplicationJSONObject *CreateWithdrawal429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	CreateWithdrawal500ApplicationJSONObject *CreateWithdrawal500ApplicationJSON
}
