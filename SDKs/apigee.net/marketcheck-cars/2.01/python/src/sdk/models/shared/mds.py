"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Mds:
    r"""Describes Market days supply results for year make model trim combination"""
    
    make: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('make'), 'exclude': lambda f: f is None }})
    r"""Make of vin provided"""  
    mds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mds'), 'exclude': lambda f: f is None }})
    r"""Provides Market days supply count"""  
    model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    r"""Model of vin provided"""  
    sold_vins: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sold_vins'), 'exclude': lambda f: f is None }})
    r"""Sold vins array"""  
    total_active_cars_for_ymmt: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_active_cars_for_ymmt'), 'exclude': lambda f: f is None }})
    r"""Active cars for ymmt combination"""  
    total_cars_sold_in_last_45_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_cars_sold_in_last_45_days'), 'exclude': lambda f: f is None }})
    r"""Cars sold in last 45 days"""  
    trim: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trim'), 'exclude': lambda f: f is None }})
    r"""Trim of vin provided"""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year'), 'exclude': lambda f: f is None }})
    r"""Year of vin provided"""  
    