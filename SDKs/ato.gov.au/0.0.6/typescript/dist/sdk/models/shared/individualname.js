"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndividualName = exports.IndividualNameInput = exports.IndividualNameNameTypeEnum = exports.IndividualNameNamePrefixEnum = exports.IndividualNameDirectionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The direction used to render the individual's name.
 */
var IndividualNameDirectionEnum;
(function (IndividualNameDirectionEnum) {
    IndividualNameDirectionEnum["LeftToRight"] = "left-to-right";
    IndividualNameDirectionEnum["RightToLeft"] = "right-to-left";
})(IndividualNameDirectionEnum = exports.IndividualNameDirectionEnum || (exports.IndividualNameDirectionEnum = {}));
/**
 * The individual's name prefix.
 */
var IndividualNameNamePrefixEnum;
(function (IndividualNameNamePrefixEnum) {
    IndividualNameNamePrefixEnum["Mr"] = "Mr";
    IndividualNameNamePrefixEnum["Ms"] = "Ms";
})(IndividualNameNamePrefixEnum = exports.IndividualNameNamePrefixEnum || (exports.IndividualNameNamePrefixEnum = {}));
/**
 * The name type.
 */
var IndividualNameNameTypeEnum;
(function (IndividualNameNameTypeEnum) {
    IndividualNameNameTypeEnum["Alias"] = "Alias";
    IndividualNameNameTypeEnum["PrincipalName"] = "Principal Name";
})(IndividualNameNameTypeEnum = exports.IndividualNameNameTypeEnum || (exports.IndividualNameNameTypeEnum = {}));
/**
 * The Individual Name resource.
 */
var IndividualNameInput = /** @class */ (function (_super) {
    __extends(IndividualNameInput, _super);
    function IndividualNameInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "direction" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "direction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "familyName" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "familyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "formalSalutation" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "formalSalutation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "givenName" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "givenName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "informalSalutation" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "informalSalutation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "middleName" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "middleName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "namePrefix" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "namePrefix", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nameSuffix" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "nameSuffix", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nameType" }),
        __metadata("design:type", String)
    ], IndividualNameInput.prototype, "nameType", void 0);
    return IndividualNameInput;
}(utils_1.SpeakeasyBase));
exports.IndividualNameInput = IndividualNameInput;
/**
 * The Individual Name resource.
 */
var IndividualName = /** @class */ (function (_super) {
    __extends(IndividualName, _super);
    function IndividualName() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "direction" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "direction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "familyName" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "familyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "formalSalutation" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "formalSalutation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fromDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], IndividualName.prototype, "fromDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "givenName" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "givenName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "informalSalutation" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "informalSalutation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "middleName" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "middleName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "namePrefix" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "namePrefix", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nameSuffix" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "nameSuffix", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nameType" }),
        __metadata("design:type", String)
    ], IndividualName.prototype, "nameType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], IndividualName.prototype, "toDate", void 0);
    return IndividualName;
}(utils_1.SpeakeasyBase));
exports.IndividualName = IndividualName;
