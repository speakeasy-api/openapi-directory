"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timerange as shared_timerange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchOrdersDateTimeFilter:
    r"""Filter for `Order` objects based on whether their `CREATED_AT`,
    `CLOSED_AT`, or `UPDATED_AT` timestamps fall within a specified time range.
    You can specify the time range and which timestamp to filter for. You can filter
    for only one time range at a time.
    
    For each time range, the start time and end time are inclusive. If the end time
    is absent, it defaults to the time of the first request for the cursor.
    
    __Important:__ If you use the `DateTimeFilter` in a `SearchOrders` query,
    you must set the `sort_field` in [OrdersSort](https://developer.squareup.com/reference/square_2021-08-18/objects/SearchOrdersSort)
    to the same field you filter for. For example, if you set the `CLOSED_AT` field
    in `DateTimeFilter`, you must set the `sort_field` in `SearchOrdersSort` to
    `CLOSED_AT`. Otherwise, `SearchOrders` throws an error.
    [Learn more about filtering orders by time range.](https://developer.squareup.com/docs/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range)
    """
    
    closed_at: Optional[shared_timerange.TimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('closed_at'), 'exclude': lambda f: f is None }})
    r"""Represents a generic time range. The start and end values are
    represented in RFC 3339 format. Time ranges are customized to be
    inclusive or exclusive based on the needs of a particular endpoint.
    Refer to the relevant endpoint-specific documentation to determine
    how time ranges are handled.
    """  
    created_at: Optional[shared_timerange.TimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""Represents a generic time range. The start and end values are
    represented in RFC 3339 format. Time ranges are customized to be
    inclusive or exclusive based on the needs of a particular endpoint.
    Refer to the relevant endpoint-specific documentation to determine
    how time ranges are handled.
    """  
    updated_at: Optional[shared_timerange.TimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_at'), 'exclude': lambda f: f is None }})
    r"""Represents a generic time range. The start and end values are
    represented in RFC 3339 format. Time ranges are customized to be
    inclusive or exclusive based on the needs of a particular endpoint.
    Refer to the relevant endpoint-specific documentation to determine
    how time ranges are handled.
    """  
    