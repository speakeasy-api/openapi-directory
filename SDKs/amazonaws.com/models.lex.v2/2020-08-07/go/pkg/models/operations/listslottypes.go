// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListSlotTypesPathParams struct {
	// The unique identifier of the bot that contains the slot types.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
	// The version of the bot that contains the slot type.
	BotVersion string `pathParam:"style=simple,explode=false,name=botVersion"`
	// The identifier of the language and locale of the slot types to list. The string must match one of the supported locales. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.
	LocaleID string `pathParam:"style=simple,explode=false,name=localeId"`
}

type ListSlotTypesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListSlotTypesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListSlotTypesRequestBodySortBy - Specifies attributes for sorting a list of slot types.
type ListSlotTypesRequestBodySortBy struct {
	Attribute *shared.SlotTypeSortAttributeEnum `json:"attribute,omitempty"`
	Order     *shared.SortOrderEnum             `json:"order,omitempty"`
}

type ListSlotTypesRequestBody struct {
	// Provides the specification of a filter used to limit the slot types in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.
	Filters []shared.SlotTypeFilter `json:"filters,omitempty"`
	// The maximum number of slot types to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// If the response from the <code>ListSlotTypes</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.
	NextToken *string `json:"nextToken,omitempty"`
	// Specifies attributes for sorting a list of slot types.
	SortBy *ListSlotTypesRequestBodySortBy `json:"sortBy,omitempty"`
}

type ListSlotTypesRequest struct {
	PathParams  ListSlotTypesPathParams
	QueryParams ListSlotTypesQueryParams
	Headers     ListSlotTypesHeaders
	Request     ListSlotTypesRequestBody `request:"mediaType=application/json"`
}

type ListSlotTypesResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListSlotTypesResponse *shared.ListSlotTypesResponse
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
