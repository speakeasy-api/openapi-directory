"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetDeviceParameterHistoryRequest:
    
    device_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'deviceId', 'style': 'simple', 'explode': False }})
    r"""The ID of the device."""  
    monitor_type: str = dataclasses.field(metadata={'query_param': { 'field_name': 'monitorType', 'style': 'form', 'explode': True }})
    r"""The unique name of the Monitor type."""  
    parameter_name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'parameterName', 'style': 'form', 'explode': True }})
    r"""The name of the parameter."""  
    from_: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})
    r"""Beginning of the period (Epoch time, in seconds)."""  
    monitor_sid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'monitorSid', 'style': 'form', 'explode': True }})
    r"""The Monitor SID (to filter the list of Monitors)."""  
    to: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'to', 'style': 'form', 'explode': True }})
    r"""End of the period (Epoch time, in seconds)."""  
    

@dataclasses.dataclass
class GetDeviceParameterHistoryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    