"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AspectValueDistribution:
    r"""This type contains information about one value of a specified aspect. This value serves as a product refinement."""
    
    localized_aspect_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localizedAspectValue'), 'exclude': lambda f: f is None }})
    r"""The localized value of the category aspect identified by <b>refinement.aspectDistributions.localizedAspectName</b>."""  
    match_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matchCount'), 'exclude': lambda f: f is None }})
    r"""The number of times the value of <b>localizedAspectValue</b> has been used for eBay product listings. By comparing this quantity to the <b>matchCount</b> for other values of the same aspect, you can present a histogram of the values to sellers, who can use that information to select which aspect value is most appropriate for their product. You can then include the user-selected value in the the <b>search</b> call's <b>aspect_filter</b> parameter to refine your search."""  
    refinement_href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refinementHref'), 'exclude': lambda f: f is None }})
    r"""A HATEOAS reference that further refines the search with this particular <b>localizedAspectValue</b>."""  
    