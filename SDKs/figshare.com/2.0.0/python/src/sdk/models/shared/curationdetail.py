"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import articlecomplete as shared_articlecomplete
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class CurationDetailStatusEnum(str, Enum):
    r"""The status of the review."""
    PENDING = 'pending'
    APPROVED = 'approved'
    REJECTED = 'rejected'
    CLOSED = 'closed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CurationDetail:
    r"""OK. A curation review."""
    
    account_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_id') }})
    r"""The ID of the account of the owner of the article of this review."""  
    article_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('article_id') }})
    r"""The ID of the article of this review."""  
    assigned_to: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assigned_to') }})
    r"""The ID of the account to which this review is assigned."""  
    comments_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comments_count') }})
    r"""The number of comments in the review."""  
    created_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_date') }})
    r"""The creation date of the review."""  
    group_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_id') }})
    r"""The group in which the article is present."""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The review id"""  
    item: shared_articlecomplete.ArticleComplete = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item') }})  
    modified_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modified_date') }})
    r"""The date the review has been modified."""  
    review_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('review_date') }})
    r"""The last time a comment has been added to the review."""  
    status: CurationDetailStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status of the review."""  
    version: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})
    r"""The Version number of the article in review."""  
    