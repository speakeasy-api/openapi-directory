/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import {
  GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase,
  GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseInput,
} from "./googleclouddialogflowcxv3beta1fulfillmentconditionalcasescase";
import { Expose, Type } from "class-transformer";

/**
 * A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
 */
export class GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases extends SpeakeasyBase {
  /**
   * A list of cascading if-else conditions.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase,
  })
  @Expose({ name: "cases" })
  @Type(() => GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase)
  cases?: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase[];
}

/**
 * A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
 */
export class GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesInput extends SpeakeasyBase {
  /**
   * A list of cascading if-else conditions.
   */
  @SpeakeasyMetadata({
    elemType:
      GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseInput,
  })
  @Expose({ name: "cases" })
  @Type(
    () => GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseInput
  )
  cases?: GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseInput[];
}
