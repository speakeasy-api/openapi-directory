// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AggregatedGetGroupsSummarySortDirectionEnum - Direction of sort "asc" or "desc"
type AggregatedGetGroupsSummarySortDirectionEnum string

const (
	AggregatedGetGroupsSummarySortDirectionEnumAsc  AggregatedGetGroupsSummarySortDirectionEnum = "asc"
	AggregatedGetGroupsSummarySortDirectionEnumDesc AggregatedGetGroupsSummarySortDirectionEnum = "desc"
)

func (e *AggregatedGetGroupsSummarySortDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = AggregatedGetGroupsSummarySortDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregatedGetGroupsSummarySortDirectionEnum: %s", s)
	}
}

// AggregatedGetGroupsSummaryStatusEnum - Status of group ("deleted"/"active")
type AggregatedGetGroupsSummaryStatusEnum string

const (
	AggregatedGetGroupsSummaryStatusEnumDeleted AggregatedGetGroupsSummaryStatusEnum = "deleted"
	AggregatedGetGroupsSummaryStatusEnumActive  AggregatedGetGroupsSummaryStatusEnum = "active"
)

func (e *AggregatedGetGroupsSummaryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleted":
		fallthrough
	case "active":
		*e = AggregatedGetGroupsSummaryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregatedGetGroupsSummaryStatusEnum: %s", s)
	}
}

// AggregatedGetGroupsSummaryTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type AggregatedGetGroupsSummaryTimeFrameEnum string

const (
	AggregatedGetGroupsSummaryTimeFrameEnumToday         AggregatedGetGroupsSummaryTimeFrameEnum = "today"
	AggregatedGetGroupsSummaryTimeFrameEnumYesterday     AggregatedGetGroupsSummaryTimeFrameEnum = "yesterday"
	AggregatedGetGroupsSummaryTimeFrameEnumLast7         AggregatedGetGroupsSummaryTimeFrameEnum = "last7"
	AggregatedGetGroupsSummaryTimeFrameEnumLast30        AggregatedGetGroupsSummaryTimeFrameEnum = "last30"
	AggregatedGetGroupsSummaryTimeFrameEnumLastmonth     AggregatedGetGroupsSummaryTimeFrameEnum = "lastmonth"
	AggregatedGetGroupsSummaryTimeFrameEnumCurrentmonth  AggregatedGetGroupsSummaryTimeFrameEnum = "currentmonth"
	AggregatedGetGroupsSummaryTimeFrameEnumPreviousmonth AggregatedGetGroupsSummaryTimeFrameEnum = "previousmonth"
	AggregatedGetGroupsSummaryTimeFrameEnumLast90        AggregatedGetGroupsSummaryTimeFrameEnum = "last90"
	AggregatedGetGroupsSummaryTimeFrameEnumLast120       AggregatedGetGroupsSummaryTimeFrameEnum = "last120"
	AggregatedGetGroupsSummaryTimeFrameEnumLast180       AggregatedGetGroupsSummaryTimeFrameEnum = "last180"
	AggregatedGetGroupsSummaryTimeFrameEnumLast12months  AggregatedGetGroupsSummaryTimeFrameEnum = "last12months"
	AggregatedGetGroupsSummaryTimeFrameEnumLastyear      AggregatedGetGroupsSummaryTimeFrameEnum = "lastyear"
	AggregatedGetGroupsSummaryTimeFrameEnumCurrentyear   AggregatedGetGroupsSummaryTimeFrameEnum = "currentyear"
	AggregatedGetGroupsSummaryTimeFrameEnumBeginning     AggregatedGetGroupsSummaryTimeFrameEnum = "beginning"
	AggregatedGetGroupsSummaryTimeFrameEnumCustom        AggregatedGetGroupsSummaryTimeFrameEnum = "custom"
)

func (e *AggregatedGetGroupsSummaryTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = AggregatedGetGroupsSummaryTimeFrameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregatedGetGroupsSummaryTimeFrameEnum: %s", s)
	}
}

type AggregatedGetGroupsSummaryRequest struct {
	// Is the group marked as favourite
	Favourite *bool `queryParam:"style=form,explode=true,name=favourite"`
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// Limit results to this number
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset where to start from
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Field to sort by
	SortBy *string `queryParam:"style=form,explode=true,name=sortBy"`
	// Direction of sort "asc" or "desc"
	SortDirection *AggregatedGetGroupsSummarySortDirectionEnum `queryParam:"style=form,explode=true,name=sortDirection"`
	// Status of group ("deleted"/"active")
	Status *AggregatedGetGroupsSummaryStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// A comma separated list of tags you want to filter with.
	Tag *string `queryParam:"style=form,explode=true,name=tag"`
	// Filter fields by this pattern
	TextSearch *string `queryParam:"style=form,explode=true,name=textSearch"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame AggregatedGetGroupsSummaryTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type AggregatedGetGroupsSummaryResponse struct {
	APICoreDtoAggregatedAggregatedSummaryResult *shared.APICoreDtoAggregatedAggregatedSummaryResult
	ContentType                                 string
	StatusCode                                  int
	RawResponse                                 *http.Response
}
