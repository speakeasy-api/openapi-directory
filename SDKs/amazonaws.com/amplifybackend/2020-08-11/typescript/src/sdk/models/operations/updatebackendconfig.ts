/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The request object for this operation.
 */
export class UpdateBackendConfigRequestBodyLoginAuthConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AwsCognitoIdentityPoolId" })
  awsCognitoIdentityPoolId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AwsCognitoRegion" })
  awsCognitoRegion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AwsUserPoolsId" })
  awsUserPoolsId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AwsUserPoolsWebClientId" })
  awsUserPoolsWebClientId?: string;
}

export class UpdateBackendConfigRequestBody extends SpeakeasyBase {
  /**
   * The request object for this operation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "loginAuthConfig" })
  @Type(() => UpdateBackendConfigRequestBodyLoginAuthConfig)
  loginAuthConfig?: UpdateBackendConfigRequestBodyLoginAuthConfig;
}

export class UpdateBackendConfigRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateBackendConfigRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The app ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=appId",
  })
  appId: string;
}

export class UpdateBackendConfigResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * GatewayTimeoutException
   */
  @SpeakeasyMetadata()
  gatewayTimeoutException?: any;

  /**
   * NotFoundException
   */
  @SpeakeasyMetadata()
  notFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateBackendConfigResponse?: shared.UpdateBackendConfigResponse;
}
