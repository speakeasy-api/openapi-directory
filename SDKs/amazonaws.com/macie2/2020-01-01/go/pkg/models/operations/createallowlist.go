// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAllowListRequestBodyCriteria - Specifies the criteria for an allow list. The criteria must specify a regular expression (regex) or an S3 object (s3WordsList). It can't specify both.
type CreateAllowListRequestBodyCriteria struct {
	Regex       *string             `json:"regex,omitempty"`
	S3WordsList *shared.S3WordsList `json:"s3WordsList,omitempty"`
}

type CreateAllowListRequestBody struct {
	// A unique, case-sensitive token that you provide to ensure the idempotency of the request.
	ClientToken string `json:"clientToken"`
	// Specifies the criteria for an allow list. The criteria must specify a regular expression (regex) or an S3 object (s3WordsList). It can't specify both.
	Criteria CreateAllowListRequestBodyCriteria `json:"criteria"`
	// A custom description of the allow list. The description can contain as many as 512 characters.
	Description *string `json:"description,omitempty"`
	// A custom name for the allow list. The name can contain as many as 128 characters.
	Name string `json:"name"`
	// A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateAllowListRequest struct {
	RequestBody       CreateAllowListRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateAllowListResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateAllowListResponse *shared.CreateAllowListResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
