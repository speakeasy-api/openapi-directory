/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionStatusEnum } from "./actionstatusenum";
import { ActionThreshold } from "./actionthreshold";
import { ActionTypeEnum } from "./actiontypeenum";
import { ApprovalModelEnum } from "./approvalmodelenum";
import { Definition } from "./definition";
import { NotificationTypeEnum } from "./notificationtypeenum";
import { Subscriber } from "./subscriber";
import { Expose, Type } from "class-transformer";

/**
 * A budget action resource.
 */
export class Action extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ActionId" })
  actionId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ActionThreshold" })
  @Type(() => ActionThreshold)
  actionThreshold: ActionThreshold;

  @SpeakeasyMetadata()
  @Expose({ name: "ActionType" })
  actionType: ActionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ApprovalModel" })
  approvalModel: ApprovalModelEnum;

  /**
   *  A string that represents the budget name. The ":" and "\" characters aren't allowed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BudgetName" })
  budgetName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Definition" })
  @Type(() => Definition)
  definition: Definition;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionRoleArn" })
  executionRoleArn: string;

  /**
   *  The type of a notification. It must be ACTUAL or FORECASTED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NotificationType" })
  notificationType: NotificationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: ActionStatusEnum;

  /**
   *  A list of subscribers.
   */
  @SpeakeasyMetadata({ elemType: Subscriber })
  @Expose({ name: "Subscribers" })
  @Type(() => Subscriber)
  subscribers: Subscriber[];
}
