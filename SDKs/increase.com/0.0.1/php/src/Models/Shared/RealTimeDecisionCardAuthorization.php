<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RealTimeDecisionCardAuthorization - Fields related to a card authorization.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RealTimeDecisionCardAuthorization
{
    /**
     * The identifier of the Account the authorization will debit.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * The identifier of the Card that is being authorized.
     * 
     * @var string $cardId
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cardId;
    
    /**
     * Whether or not the authorization was approved.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationDecisionEnum $decision
     */
	#[\JMS\Serializer\Annotation\SerializedName('decision')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationDecisionEnum>')]
    public RealTimeDecisionCardAuthorizationDecisionEnum $decision;
    
    /**
     * The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.
     * 
     * @var string $merchantAcceptorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_acceptor_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAcceptorId;
    
    /**
     * The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.
     * 
     * @var string $merchantCategoryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_category_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCategoryCode;
    
    /**
     * The city the merchant resides in.
     * 
     * @var string $merchantCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCity;
    
    /**
     * The country the merchant resides in.
     * 
     * @var string $merchantCountry
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCountry;
    
    /**
     * The merchant descriptor of the merchant the card is transacting with.
     * 
     * @var string $merchantDescriptor
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchant_descriptor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantDescriptor;
    
    /**
     * The payment network used to process this card authorization
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationNetworkEnum $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationNetworkEnum>')]
    public RealTimeDecisionCardAuthorizationNetworkEnum $network;
    
    /**
     * Fields specific to the `network`
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationNetworkDetails $networkDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('network_details')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationNetworkDetails')]
    public RealTimeDecisionCardAuthorizationNetworkDetails $networkDetails;
    
    /**
     * The amount of the attempted authorization in the currency the card user sees at the time of purchase, in the minor unit of that currency. For dollars, for example, this is cents.
     * 
     * @var int $presentmentAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('presentment_amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $presentmentAmount;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the user sees at the time of purchase.
     * 
     * @var string $presentmentCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('presentment_currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $presentmentCurrency;
    
    /**
     * The amount of the attempted authorization in the currency it will be settled in. This currency is the same as that of the Account the card belongs to.
     * 
     * @var int $settlementAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('settlement_amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $settlementAmount;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the currency the transaction will be settled in.
     * 
     * @var string $settlementCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('settlement_currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $settlementCurrency;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->cardId = "";
		$this->decision = \OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationDecisionEnum::APPROVE;
		$this->merchantAcceptorId = "";
		$this->merchantCategoryCode = "";
		$this->merchantCity = "";
		$this->merchantCountry = "";
		$this->merchantDescriptor = "";
		$this->network = \OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationNetworkEnum::VISA;
		$this->networkDetails = new \OpenAPI\OpenAPI\Models\Shared\RealTimeDecisionCardAuthorizationNetworkDetails();
		$this->presentmentAmount = 0;
		$this->presentmentCurrency = "";
		$this->settlementAmount = 0;
		$this->settlementCurrency = "";
	}
}
