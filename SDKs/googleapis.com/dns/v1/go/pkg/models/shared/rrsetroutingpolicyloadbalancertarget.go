// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnum string

const (
	RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnumUndefined RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnum = "undefined"
	RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnumTCP       RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnum = "tcp"
	RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnumUDP       RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnum = "udp"
)

func (e *RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "undefined":
		fallthrough
	case "tcp":
		fallthrough
	case "udp":
		*e = RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnum: %s", s)
	}
}

type RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnum string

const (
	RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnumNone          RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnum = "none"
	RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnumRegionalL4ilb RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnum = "regionalL4ilb"
)

func (e *RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "regionalL4ilb":
		*e = RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnum: %s", s)
	}
}

type RRSetRoutingPolicyLoadBalancerTarget struct {
	// The frontend IP address of the
	IPAddress        *string                                                   `json:"ipAddress,omitempty"`
	IPProtocol       *RRSetRoutingPolicyLoadBalancerTargetIPProtocolEnum       `json:"ipProtocol,omitempty"`
	Kind             *string                                                   `json:"kind,omitempty"`
	LoadBalancerType *RRSetRoutingPolicyLoadBalancerTargetLoadBalancerTypeEnum `json:"loadBalancerType,omitempty"`
	// The fully qualified url of the network on which the ILB is
	NetworkURL *string `json:"networkUrl,omitempty"`
	// Load Balancer to health check. The configured port of the Load Balancer.
	Port *string `json:"port,omitempty"`
	// present. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network} The project ID in which the ILB exists.
	Project *string `json:"project,omitempty"`
	// The region for regional ILBs.
	Region *string `json:"region,omitempty"`
}
