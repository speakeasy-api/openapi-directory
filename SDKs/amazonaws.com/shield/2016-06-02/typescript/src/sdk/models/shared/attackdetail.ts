/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttackProperty } from "./attackproperty";
import { Mitigation } from "./mitigation";
import { SubResourceSummary } from "./subresourcesummary";
import { SummarizedCounter } from "./summarizedcounter";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The details of a DDoS attack.
 */
export class AttackDetail extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: SummarizedCounter })
  @Expose({ name: "AttackCounters" })
  @Type(() => SummarizedCounter)
  attackCounters?: SummarizedCounter[];

  @SpeakeasyMetadata()
  @Expose({ name: "AttackId" })
  attackId?: string;

  @SpeakeasyMetadata({ elemType: AttackProperty })
  @Expose({ name: "AttackProperties" })
  @Type(() => AttackProperty)
  attackProperties?: AttackProperty[];

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata({ elemType: Mitigation })
  @Expose({ name: "Mitigations" })
  @Type(() => Mitigation)
  mitigations?: Mitigation[];

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceArn" })
  resourceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata({ elemType: SubResourceSummary })
  @Expose({ name: "SubResources" })
  @Type(() => SubResourceSummary)
  subResources?: SubResourceSummary[];
}
