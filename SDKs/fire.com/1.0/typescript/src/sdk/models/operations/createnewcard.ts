/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export enum CreateNewCardNewCardAddressTypeEnum {
  Home = "HOME",
  Business = "BUSINESS",
}

/**
 * Details of the new card
 */
export class CreateNewCardNewCard extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "acceptFeesAndCharges" })
  acceptFeesAndCharges?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "addressType" })
  addressType?: CreateNewCardNewCardAddressTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "cardPin" })
  cardPin?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eurIcan" })
  eurIcan?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "gbpIcan" })
  gbpIcan?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: number;
}

export enum CreateNewCardNewCardResponseStatusEnum {
  CreatedActive = "CREATED_ACTIVE",
  CreatedInactive = "CREATED_INACTIVE",
}

/**
 * Card created successfully
 */
export class CreateNewCardNewCardResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cardId" })
  cardId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "expiryDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiryDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "maskedPan" })
  maskedPan?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CreateNewCardNewCardResponseStatusEnum;
}

export class CreateNewCardResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Card created successfully
   */
  @SpeakeasyMetadata()
  newCardResponse?: CreateNewCardNewCardResponse;
}
