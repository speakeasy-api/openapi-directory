/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BetweenFilter } from "./betweenfilter";
import { InListFilter } from "./inlistfilter";
import { NumericFilter } from "./numericfilter";
import { StringFilter } from "./stringfilter";
import { Expose, Type } from "class-transformer";

/**
 * An expression to filter dimension or metric values.
 */
export class Filter extends SpeakeasyBase {
  /**
   * To express that the result needs to be between two numbers (inclusive).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "betweenFilter" })
  @Type(() => BetweenFilter)
  betweenFilter?: BetweenFilter;

  /**
   * The dimension name or metric name. In most methods, dimensions & metrics can be used for the first time in this field. However in a RunPivotReportRequest, this field must be additionally specified by name in the RunPivotReportRequest's dimensions or metrics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldName" })
  fieldName?: string;

  /**
   * The result needs to be in a list of string values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inListFilter" })
  @Type(() => InListFilter)
  inListFilter?: InListFilter;

  /**
   * Filters for numeric or date values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numericFilter" })
  @Type(() => NumericFilter)
  numericFilter?: NumericFilter;

  /**
   * The filter for string
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringFilter" })
  @Type(() => StringFilter)
  stringFilter?: StringFilter;
}
