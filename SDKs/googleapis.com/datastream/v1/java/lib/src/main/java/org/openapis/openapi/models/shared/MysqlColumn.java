/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MysqlColumn - MySQL Column.
 */
public class MysqlColumn {
    /**
     * Column collation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collation")
    public String collation;

    public MysqlColumn withCollation(String collation) {
        this.collation = collation;
        return this;
    }
    
    /**
     * Column name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("column")
    public String column;

    public MysqlColumn withColumn(String column) {
        this.column = column;
        return this;
    }
    
    /**
     * The MySQL data type. Full data types list can be found here: https://dev.mysql.com/doc/refman/8.0/en/data-types.html
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataType")
    public String dataType;

    public MysqlColumn withDataType(String dataType) {
        this.dataType = dataType;
        return this;
    }
    
    /**
     * Column length.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("length")
    public Integer length;

    public MysqlColumn withLength(Integer length) {
        this.length = length;
        return this;
    }
    
    /**
     * Whether or not the column can accept a null value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nullable")
    public Boolean nullable;

    public MysqlColumn withNullable(Boolean nullable) {
        this.nullable = nullable;
        return this;
    }
    
    /**
     * The ordinal position of the column in the table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ordinalPosition")
    public Integer ordinalPosition;

    public MysqlColumn withOrdinalPosition(Integer ordinalPosition) {
        this.ordinalPosition = ordinalPosition;
        return this;
    }
    
    /**
     * Whether or not the column represents a primary key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryKey")
    public Boolean primaryKey;

    public MysqlColumn withPrimaryKey(Boolean primaryKey) {
        this.primaryKey = primaryKey;
        return this;
    }
    
    public MysqlColumn(){}
}
