/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PreviewOrderChargeOverride } from "./previeworderchargeoverride";
import { Expose, Type } from "class-transformer";

/**
 * Rate plan associated with a subscription.
 *
 * @remarks
 *
 */
export class PreviewOrderRatePlanOverride extends SpeakeasyBase {
  /**
   * List of charges associated with the rate plan.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: PreviewOrderChargeOverride })
  @Expose({ name: "chargeOverrides" })
  @Type(() => PreviewOrderChargeOverride)
  chargeOverrides?: PreviewOrderChargeOverride[];

  /**
   * Container for custom fields of a Rate Plan object.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customFields" })
  customFields?: Record<string, any>;

  /**
   * Internal identifier of the product rate plan that the rate plan is based on.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productRatePlanId" })
  productRatePlanId: string;

  /**
   * Unique identifier for the rate plan. This identifier enables you to refer to the rate plan before the rate plan has an internal identifier in Zuora.
   *
   * @remarks
   *
   * For instance, suppose that you want to use a single order to add a product to a subscription and later update the same product. When you add the product, you can set a unique identifier for the rate plan. Then when you update the product, you can use the same unique identifier to specify which rate plan to modify.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uniqueToken" })
  uniqueToken?: string;
}
