// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ParameterMetadataParamTypeEnum - Optional. The type of the parameter. Used for selecting input picker.
type ParameterMetadataParamTypeEnum string

const (
	ParameterMetadataParamTypeEnumDefault            ParameterMetadataParamTypeEnum = "DEFAULT"
	ParameterMetadataParamTypeEnumText               ParameterMetadataParamTypeEnum = "TEXT"
	ParameterMetadataParamTypeEnumGcsReadBucket      ParameterMetadataParamTypeEnum = "GCS_READ_BUCKET"
	ParameterMetadataParamTypeEnumGcsWriteBucket     ParameterMetadataParamTypeEnum = "GCS_WRITE_BUCKET"
	ParameterMetadataParamTypeEnumGcsReadFile        ParameterMetadataParamTypeEnum = "GCS_READ_FILE"
	ParameterMetadataParamTypeEnumGcsWriteFile       ParameterMetadataParamTypeEnum = "GCS_WRITE_FILE"
	ParameterMetadataParamTypeEnumGcsReadFolder      ParameterMetadataParamTypeEnum = "GCS_READ_FOLDER"
	ParameterMetadataParamTypeEnumGcsWriteFolder     ParameterMetadataParamTypeEnum = "GCS_WRITE_FOLDER"
	ParameterMetadataParamTypeEnumPubsubTopic        ParameterMetadataParamTypeEnum = "PUBSUB_TOPIC"
	ParameterMetadataParamTypeEnumPubsubSubscription ParameterMetadataParamTypeEnum = "PUBSUB_SUBSCRIPTION"
	ParameterMetadataParamTypeEnumBigqueryTable      ParameterMetadataParamTypeEnum = "BIGQUERY_TABLE"
	ParameterMetadataParamTypeEnumJavascriptUdfFile  ParameterMetadataParamTypeEnum = "JAVASCRIPT_UDF_FILE"
)

func (e *ParameterMetadataParamTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEFAULT":
		fallthrough
	case "TEXT":
		fallthrough
	case "GCS_READ_BUCKET":
		fallthrough
	case "GCS_WRITE_BUCKET":
		fallthrough
	case "GCS_READ_FILE":
		fallthrough
	case "GCS_WRITE_FILE":
		fallthrough
	case "GCS_READ_FOLDER":
		fallthrough
	case "GCS_WRITE_FOLDER":
		fallthrough
	case "PUBSUB_TOPIC":
		fallthrough
	case "PUBSUB_SUBSCRIPTION":
		fallthrough
	case "BIGQUERY_TABLE":
		fallthrough
	case "JAVASCRIPT_UDF_FILE":
		*e = ParameterMetadataParamTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ParameterMetadataParamTypeEnum: %s", s)
	}
}

// ParameterMetadata - Metadata for a specific parameter.
type ParameterMetadata struct {
	// Optional. Additional metadata for describing this parameter.
	CustomMetadata map[string]string `json:"customMetadata,omitempty"`
	// Required. The help text to display for the parameter.
	HelpText *string `json:"helpText,omitempty"`
	// Optional. Whether the parameter is optional. Defaults to false.
	IsOptional *bool `json:"isOptional,omitempty"`
	// Required. The label to display for the parameter.
	Label *string `json:"label,omitempty"`
	// Required. The name of the parameter.
	Name *string `json:"name,omitempty"`
	// Optional. The type of the parameter. Used for selecting input picker.
	ParamType *ParameterMetadataParamTypeEnum `json:"paramType,omitempty"`
	// Optional. Regexes that the parameter must match.
	Regexes []string `json:"regexes,omitempty"`
}
