// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataLocationConstraintEnum string

const (
	DataLocationConstraintEnumAnyLocation   DataLocationConstraintEnum = "AnyLocation"
	DataLocationConstraintEnumSameContinent DataLocationConstraintEnum = "SameContinent"
	DataLocationConstraintEnumSameCountry   DataLocationConstraintEnum = "SameCountry"
)

func (e DataLocationConstraintEnum) ToPointer() *DataLocationConstraintEnum {
	return &e
}

func (e *DataLocationConstraintEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AnyLocation":
		fallthrough
	case "SameContinent":
		fallthrough
	case "SameCountry":
		*e = DataLocationConstraintEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataLocationConstraintEnum: %v", v)
	}
}
