/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudMlV1Measurement } from "./googlecloudmlv1measurement";
import { GoogleCloudMlV1TrialParameter } from "./googlecloudmlv1trialparameter";
import { Expose, Type } from "class-transformer";

/**
 * The detailed state of a trial.
 */
export enum GoogleCloudMlV1TrialStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Requested = "REQUESTED",
  Active = "ACTIVE",
  Completed = "COMPLETED",
  Stopping = "STOPPING",
}

/**
 * A message representing a trial.
 */
export class GoogleCloudMlV1Trial extends SpeakeasyBase {
  /**
   * Output only. The identifier of the client that originally requested this trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Output only. Time at which the trial's status changed to COMPLETED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * A message representing a measurement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finalMeasurement" })
  @Type(() => GoogleCloudMlV1Measurement)
  finalMeasurement?: GoogleCloudMlV1Measurement;

  /**
   * Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "infeasibleReason" })
  infeasibleReason?: string;

  /**
   * A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudMlV1Measurement })
  @Expose({ name: "measurements" })
  @Type(() => GoogleCloudMlV1Measurement)
  measurements?: GoogleCloudMlV1Measurement[];

  /**
   * Output only. Name of the trial assigned by the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The parameters of the trial.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudMlV1TrialParameter })
  @Expose({ name: "parameters" })
  @Type(() => GoogleCloudMlV1TrialParameter)
  parameters?: GoogleCloudMlV1TrialParameter[];

  /**
   * Output only. Time at which the trial was started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;

  /**
   * The detailed state of a trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: GoogleCloudMlV1TrialStateEnum;

  /**
   * Output only. If true, the parameters in this trial are not attempted again.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trialInfeasible" })
  trialInfeasible?: boolean;
}

/**
 * A message representing a trial.
 */
export class GoogleCloudMlV1TrialInput extends SpeakeasyBase {
  /**
   * A message representing a measurement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finalMeasurement" })
  @Type(() => GoogleCloudMlV1Measurement)
  finalMeasurement?: GoogleCloudMlV1Measurement;

  /**
   * A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudMlV1Measurement })
  @Expose({ name: "measurements" })
  @Type(() => GoogleCloudMlV1Measurement)
  measurements?: GoogleCloudMlV1Measurement[];

  /**
   * The parameters of the trial.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudMlV1TrialParameter })
  @Expose({ name: "parameters" })
  @Type(() => GoogleCloudMlV1TrialParameter)
  parameters?: GoogleCloudMlV1TrialParameter[];

  /**
   * The detailed state of a trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: GoogleCloudMlV1TrialStateEnum;
}
