/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AggregationResultHistogramBucket } from "./aggregationresulthistogrambucket";
import { Expose, Type } from "class-transformer";

/**
 * The result of a bucketed histogram aggregation.
 */
export class AggregationResultHistogram extends SpeakeasyBase {
  /**
   * Buckets in the histogram. There will be `n+1` buckets matching `n` lower bounds in the request. The first bucket will be from -infinity to the first bound. Subsequent buckets will be between one bound and the next. The final bucket will be from the final bound to infinity.
   */
  @SpeakeasyMetadata({ elemType: AggregationResultHistogramBucket })
  @Expose({ name: "buckets" })
  @Type(() => AggregationResultHistogramBucket)
  buckets?: AggregationResultHistogramBucket[];
}
