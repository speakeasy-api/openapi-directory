/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDatacatalogV1beta1Taxonomy - A taxonomy is a collection of policy tags that classify data along a common axis. For instance a data *sensitivity* taxonomy could contain policy tags denoting PII such as age, zipcode, and SSN. A data *origin* taxonomy could contain policy tags to distinguish user data, employee data, partner data, public data.
 */
public class GoogleCloudDatacatalogV1beta1Taxonomy {
    /**
     * Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activatedPolicyTypes")
    public GoogleCloudDatacatalogV1beta1TaxonomyActivatedPolicyTypesEnum[] activatedPolicyTypes;
    public GoogleCloudDatacatalogV1beta1Taxonomy withActivatedPolicyTypes(GoogleCloudDatacatalogV1beta1TaxonomyActivatedPolicyTypesEnum[] activatedPolicyTypes) {
        this.activatedPolicyTypes = activatedPolicyTypes;
        return this;
    }
    
    /**
     * Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GoogleCloudDatacatalogV1beta1Taxonomy withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8. The taxonomy display name must be unique within an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public GoogleCloudDatacatalogV1beta1Taxonomy withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Output only. Resource name of this taxonomy, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{id}".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleCloudDatacatalogV1beta1Taxonomy withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. Number of policy tags contained in this taxonomy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyTagCount")
    public Integer policyTagCount;
    public GoogleCloudDatacatalogV1beta1Taxonomy withPolicyTagCount(Integer policyTagCount) {
        this.policyTagCount = policyTagCount;
        return this;
    }
    
    /**
     * The source system of the Taxonomy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public GoogleCloudDatacatalogV1beta1TaxonomyService service;
    public GoogleCloudDatacatalogV1beta1Taxonomy withService(GoogleCloudDatacatalogV1beta1TaxonomyService service) {
        this.service = service;
        return this;
    }
    
    /**
     * Timestamps about this resource according to a particular system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxonomyTimestamps")
    public GoogleCloudDatacatalogV1beta1SystemTimestamps taxonomyTimestamps;
    public GoogleCloudDatacatalogV1beta1Taxonomy withTaxonomyTimestamps(GoogleCloudDatacatalogV1beta1SystemTimestamps taxonomyTimestamps) {
        this.taxonomyTimestamps = taxonomyTimestamps;
        return this;
    }
    
}
