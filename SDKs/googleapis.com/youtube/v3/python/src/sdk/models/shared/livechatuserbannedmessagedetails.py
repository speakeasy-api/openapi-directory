"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import channelprofiledetails as shared_channelprofiledetails
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LiveChatUserBannedMessageDetailsBanTypeEnum(str, Enum):
    r"""The type of ban."""
    PERMANENT = 'permanent'
    TEMPORARY = 'temporary'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LiveChatUserBannedMessageDetails:
    
    ban_duration_seconds: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('banDurationSeconds'), 'exclude': lambda f: f is None }})
    r"""The duration of the ban. This property is only present if the banType is temporary."""  
    banned_user_details: Optional[shared_channelprofiledetails.ChannelProfileDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bannedUserDetails'), 'exclude': lambda f: f is None }})  
    ban_type: Optional[LiveChatUserBannedMessageDetailsBanTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('banType'), 'exclude': lambda f: f is None }})
    r"""The type of ban."""  
    