// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UserStatusSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// UserStatusApplicationJSONActionEnum - The action types:<br>`activate` - Activate a deactivated user.<br>`deactivate` - Deactivate a user.
type UserStatusApplicationJSONActionEnum string

const (
	UserStatusApplicationJSONActionEnumActivate   UserStatusApplicationJSONActionEnum = "activate"
	UserStatusApplicationJSONActionEnumDeactivate UserStatusApplicationJSONActionEnum = "deactivate"
)

func (e *UserStatusApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "activate":
		fallthrough
	case "deactivate":
		*e = UserStatusApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserStatusApplicationJSONActionEnum: %s", s)
	}
}

// UserStatusApplicationJSON - The action.
type UserStatusApplicationJSON struct {
	// The action types:<br>`activate` - Activate a deactivated user.<br>`deactivate` - Deactivate a user.
	Action UserStatusApplicationJSONActionEnum `json:"action"`
}

type UserStatusRequest struct {
	// User status.
	RequestBody UserStatusApplicationJSON `request:"mediaType=application/json"`
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type UserStatusResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
