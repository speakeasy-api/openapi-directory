// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAssociateDataShareConsumerActionEnum
type GETAssociateDataShareConsumerActionEnum string

const (
	GETAssociateDataShareConsumerActionEnumAssociateDataShareConsumer GETAssociateDataShareConsumerActionEnum = "AssociateDataShareConsumer"
)

func (e *GETAssociateDataShareConsumerActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AssociateDataShareConsumer":
		*e = GETAssociateDataShareConsumerActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateDataShareConsumerActionEnum: %s", s)
	}
}

// GETAssociateDataShareConsumerVersionEnum
type GETAssociateDataShareConsumerVersionEnum string

const (
	GETAssociateDataShareConsumerVersionEnumTwoThousandAndTwelve1201 GETAssociateDataShareConsumerVersionEnum = "2012-12-01"
)

func (e *GETAssociateDataShareConsumerVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETAssociateDataShareConsumerVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateDataShareConsumerVersionEnum: %s", s)
	}
}

type GETAssociateDataShareConsumerQueryParams struct {
	Action GETAssociateDataShareConsumerActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A value that specifies whether the datashare is associated with the entire account.
	AssociateEntireAccount *bool `queryParam:"style=form,explode=true,name=AssociateEntireAccount"`
	// The Amazon Resource Name (ARN) of the consumer that is associated with the datashare.
	ConsumerArn *string `queryParam:"style=form,explode=true,name=ConsumerArn"`
	// From a datashare consumer account, associates a datashare with all existing and future namespaces in the specified Amazon Web Services Region.
	ConsumerRegion *string `queryParam:"style=form,explode=true,name=ConsumerRegion"`
	// The Amazon Resource Name (ARN) of the datashare that the consumer is to use with the account or the namespace.
	DataShareArn string                                   `queryParam:"style=form,explode=true,name=DataShareArn"`
	Version      GETAssociateDataShareConsumerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETAssociateDataShareConsumerHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAssociateDataShareConsumerRequest struct {
	QueryParams GETAssociateDataShareConsumerQueryParams
	Headers     GETAssociateDataShareConsumerHeaders
}

type GETAssociateDataShareConsumerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
