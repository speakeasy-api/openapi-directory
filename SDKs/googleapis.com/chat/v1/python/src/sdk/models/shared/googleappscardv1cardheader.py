"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAppsCardV1CardHeaderImageTypeEnum(str, Enum):
    r"""The shape used to crop the image."""
    SQUARE = 'SQUARE'
    CIRCLE = 'CIRCLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAppsCardV1CardHeader:
    r"""Represents a card header."""
    
    image_alt_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageAltText'), 'exclude': lambda f: f is None }})
    r"""The alternative text of this image which is used for accessibility."""  
    image_type: Optional[GoogleAppsCardV1CardHeaderImageTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageType'), 'exclude': lambda f: f is None }})
    r"""The shape used to crop the image."""  
    image_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageUrl'), 'exclude': lambda f: f is None }})
    r"""The HTTPS URL of the image in the card header."""  
    subtitle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subtitle'), 'exclude': lambda f: f is None }})
    r"""The subtitle of the card header. If specified, appears on its own line below the `title`."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Required. The title of the card header. The header has a fixed height: if both a title and subtitle are specified, each takes up one line. If only the title is specified, it takes up both lines."""  
    