"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Rule:
    r"""Rule"""
    
    dollar_collection: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('$collection') }})
    r"""Rule Collection."""  
    dollar_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('$id') }})
    r"""Rule ID."""  
    array: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('array') }})
    r"""Is array?"""  
    default: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default') }})
    r"""Rule default value."""  
    key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key') }})
    r"""Rule key."""  
    label: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label') }})
    r"""Rule label."""  
    list_: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('list') }})
    r"""List of allowed values"""  
    required: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required') }})
    r"""Is required?"""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Rule type. Possible values:"""  
    