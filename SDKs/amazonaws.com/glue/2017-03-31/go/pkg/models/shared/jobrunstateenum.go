// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JobRunStateEnum string

const (
	JobRunStateEnumStarting  JobRunStateEnum = "STARTING"
	JobRunStateEnumRunning   JobRunStateEnum = "RUNNING"
	JobRunStateEnumStopping  JobRunStateEnum = "STOPPING"
	JobRunStateEnumStopped   JobRunStateEnum = "STOPPED"
	JobRunStateEnumSucceeded JobRunStateEnum = "SUCCEEDED"
	JobRunStateEnumFailed    JobRunStateEnum = "FAILED"
	JobRunStateEnumTimeout   JobRunStateEnum = "TIMEOUT"
	JobRunStateEnumError     JobRunStateEnum = "ERROR"
	JobRunStateEnumWaiting   JobRunStateEnum = "WAITING"
)

func (e *JobRunStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STARTING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "TIMEOUT":
		fallthrough
	case "ERROR":
		fallthrough
	case "WAITING":
		*e = JobRunStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobRunStateEnum: %s", s)
	}
}
