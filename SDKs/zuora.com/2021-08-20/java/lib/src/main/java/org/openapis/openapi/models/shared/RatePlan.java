/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class RatePlan {
    /**
     *  The ID of the amendment associated with the rate plan. This field only applies to amendment rate plans.
     * 
     * 
     * **Character limit**: 32
     * 
     * **Values**: a valid amendment ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AmendmentId")
    public String amendmentId;
    public RatePlan withAmendmentId(String amendmentId) {
        this.amendmentId = amendmentId;
        return this;
    }
    
    /**
     * The ID of the subscription rate plan modified by the amendment. This field only applies to amendment rate plans.
     * 
     * **Character limit**: 32
     * 
     * **Values**: a valid rate plan ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AmendmentSubscriptionRatePlanId")
    public String amendmentSubscriptionRatePlanId;
    public RatePlan withAmendmentSubscriptionRatePlanId(String amendmentSubscriptionRatePlanId) {
        this.amendmentSubscriptionRatePlanId = amendmentSubscriptionRatePlanId;
        return this;
    }
    
    /**
     * The type of amendment associated with the rate plan. This field only applies to amendment rate plans.
     * 
     * **Character limit**: 18
     * 
     * **Values**: inherited from `Amendment.Type` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AmendmentType")
    public String amendmentType;
    public RatePlan withAmendmentType(String amendmentType) {
        this.amendmentType = amendmentType;
        return this;
    }
    
    /**
     * The ID of the Zuora user who created the RatePlan object.
     * 
     * **Character limit**: 32
     * 
     * **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public RatePlan withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * The date when the `RatePlan` object was last updated.
     * 
     * **Character limit**: 29
     * 
     * **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public RatePlan withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The name of the rate plan. Leave this null in a subscribe call to inherited the `ProductRatePlan.Name` field value.
     * 
     * **Character limit**: 100
     * 
     * **Values**: a string of 100 characters or fewer or inherited from ProductRatePlan.Name 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public RatePlan withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ID of the associated product rate plan.
     * 
     * **Character limit**: 32
     * 
     * **Values**: a valid product rate plan ID 
     */
    @JsonProperty("ProductRatePlanId")
    public String productRatePlanId;
    public RatePlan withProductRatePlanId(String productRatePlanId) {
        this.productRatePlanId = productRatePlanId;
        return this;
    }
    
    /**
     * The ID of the subscription that the rate plan belongs to.
     * 
     * **Character limit**: 32
     * 
     * **Values**: a valid subscription ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubscriptionId")
    public String subscriptionId;
    public RatePlan withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     *  The ID of the user who last updated the rate plan.
     * 
     * 
     * **Character limit**: 32
     * 
     * **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public RatePlan withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     *  The date when the rate plan was last updated.
     * 
     * 
     * **Character limit**: 29
     * 
     * **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public RatePlan withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
