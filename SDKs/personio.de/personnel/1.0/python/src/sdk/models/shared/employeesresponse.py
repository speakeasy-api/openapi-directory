"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import absenceentitlement as shared_absenceentitlement
from ..shared import attribute as shared_attribute
from ..shared import costcenters as shared_costcenters
from ..shared import department as shared_department
from ..shared import holidaycalendar as shared_holidaycalendar
from ..shared import office as shared_office
from ..shared import supervisor as shared_supervisor
from ..shared import workschedule as shared_workschedule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EmployeesResponseDataAttributes:
    
    absence_entitlement: Optional[shared_absenceentitlement.AbsenceEntitlement] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('absence_entitlement'), 'exclude': lambda f: f is None }})  
    contract_end_date: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contract_end_date'), 'exclude': lambda f: f is None }})  
    cost_centers: Optional[shared_costcenters.CostCenters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cost_centers'), 'exclude': lambda f: f is None }})  
    created_at: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})  
    department: Optional[shared_department.Department] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('department'), 'exclude': lambda f: f is None }})  
    email: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})  
    employment_type: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employment_type'), 'exclude': lambda f: f is None }})  
    first_name: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_name'), 'exclude': lambda f: f is None }})  
    fix_salary: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fix_salary'), 'exclude': lambda f: f is None }})  
    gender: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gender'), 'exclude': lambda f: f is None }})  
    hire_date: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hire_date'), 'exclude': lambda f: f is None }})  
    holiday_calendar: Optional[shared_holidaycalendar.HolidayCalendar] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('holiday_calendar'), 'exclude': lambda f: f is None }})  
    hourly_salary: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hourly_salary'), 'exclude': lambda f: f is None }})  
    id: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    last_name: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_name'), 'exclude': lambda f: f is None }})  
    office: Optional[shared_office.Office] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('office'), 'exclude': lambda f: f is None }})  
    position: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})  
    probation_period_end: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('probation_period_end'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    supervisor: Optional[shared_supervisor.Supervisor] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supervisor'), 'exclude': lambda f: f is None }})  
    termination_date: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termination_date'), 'exclude': lambda f: f is None }})  
    termination_reason: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termination_reason'), 'exclude': lambda f: f is None }})  
    termination_type: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termination_type'), 'exclude': lambda f: f is None }})  
    vacation_day_balance: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vacation_day_balance'), 'exclude': lambda f: f is None }})  
    weekly_working_hours: Optional[shared_attribute.Attribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weekly_working_hours'), 'exclude': lambda f: f is None }})  
    work_schedule: Optional[shared_workschedule.WorkSchedule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('work_schedule'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EmployeesResponseData:
    
    attributes: list[EmployeesResponseDataAttributes] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributes') }})  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EmployeesResponse:
    
    data: list[EmployeesResponseData] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})  
    success: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success') }})  
    