/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of the App
 */
export enum AppEntityAppTypeEnum {
  SDK = "sdk",
  Sso = "sso",
  RemoteServer = "remote_server",
  FolderBehavior = "folder_behavior",
  ClientApp = "client_app",
  AppIntegration = "app_integration",
}

/**
 * Associated Folder Behavior type, if any
 */
export enum AppEntityFolderBehaviorTypeEnum {
  Webhook = "webhook",
  FileExpiration = "file_expiration",
  AutoEncrypt = "auto_encrypt",
  LockSubfolders = "lock_subfolders",
  StorageRegion = "storage_region",
  ServePublicly = "serve_publicly",
  CreateUserFolders = "create_user_folders",
  RemoteServerSync = "remote_server_sync",
  Inbox = "inbox",
  AppendTimestamp = "append_timestamp",
  LimitFileExtensions = "limit_file_extensions",
  LimitFileRegex = "limit_file_regex",
  AmazonSns = "amazon_sns",
  Watermark = "watermark",
  RemoteServerMount = "remote_server_mount",
  SlackWebhook = "slack_webhook",
  AutoDecrypt = "auto_decrypt",
  OverrideUploadFilename = "override_upload_filename",
}

/**
 * Associated Remote Server type, if any
 */
export enum AppEntityRemoteServerTypeEnum {
  Ftp = "ftp",
  Sftp = "sftp",
  S3 = "s3",
  GoogleCloudStorage = "google_cloud_storage",
  Webdav = "webdav",
  Wasabi = "wasabi",
  BackblazeB2 = "backblaze_b2",
  OneDrive = "one_drive",
  Rackspace = "rackspace",
  Box = "box",
  Dropbox = "dropbox",
  GoogleDrive = "google_drive",
  Azure = "azure",
  Sharepoint = "sharepoint",
  S3Compatible = "s3_compatible",
  AzureFiles = "azure_files",
  FilesAgent = "files_agent",
  Filebase = "filebase",
}

/**
 * Associated SSO Strategy type, if any
 */
export enum AppEntitySsoStrategyTypeEnum {
  Google = "google",
  Auth0 = "auth0",
  Okta = "okta",
  Atlassian = "atlassian",
  Azure = "azure",
  Box = "box",
  Dropbox = "dropbox",
  Slack = "slack",
  UnusedUbuntu = "_unused_ubuntu",
  Onelogin = "onelogin",
  Saml = "saml",
  Idaptive = "idaptive",
  Ldap = "ldap",
  Scim = "scim",
}

/**
 * List Apps
 */
export class AppEntity extends SpeakeasyBase {
  /**
   * The type of the App
   */
  @SpeakeasyMetadata()
  @Expose({ name: "app_type" })
  appType?: AppEntityAppTypeEnum;

  /**
   * Collection of named links to documentation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documentation_links" })
  documentationLinks?: Record<string, any>;

  /**
   * Long form description of the App
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extended_description" })
  extendedDescription?: string;

  /**
   * Link to external homepage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "external_homepage_url" })
  externalHomepageUrl?: string;

  /**
   * Is featured on the App listing?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "featured" })
  featured?: boolean;

  /**
   * Associated Folder Behavior type, if any
   */
  @SpeakeasyMetadata()
  @Expose({ name: "folder_behavior_type" })
  folderBehaviorType?: AppEntityFolderBehaviorTypeEnum;

  /**
   * App icon
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icon_url" })
  iconUrl?: string;

  /**
   * Logo thumbnail for the App
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logo_thumbnail_url" })
  logoThumbnailUrl?: string;

  /**
   * Full size logo for the App
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logo_url" })
  logoUrl?: string;

  /**
   * Marketing video page
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketing_youtube_url" })
  marketingYoutubeUrl?: string;

  /**
   * Name of the App
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Associated Remote Server type, if any
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remote_server_type" })
  remoteServerType?: AppEntityRemoteServerTypeEnum;

  /**
   * Screenshots of the App
   */
  @SpeakeasyMetadata()
  @Expose({ name: "screenshot_list_urls" })
  screenshotListUrls?: string[];

  /**
   * Short description of the App
   */
  @SpeakeasyMetadata()
  @Expose({ name: "short_description" })
  shortDescription?: string;

  /**
   * Associated SSO Strategy type, if any
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sso_strategy_type" })
  ssoStrategyType?: AppEntitySsoStrategyTypeEnum;

  /**
   * Tutorial video page
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tutorial_youtube_url" })
  tutorialYoutubeUrl?: string;
}
