/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The status of the image based on its last activity against the `active_from` time.
 */
export enum GetNamespaceRepositoryImagesResponseResultsStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class GetNamespaceRepositoryImagesResponseResultsTags extends SpeakeasyBase {
  /**
   * `true` if the tag currently points to this image.
   *
   * @remarks
   *
   * `false` if it has been overwritten to point at a different image.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_current" })
  isCurrent?: boolean;

  /**
   * The tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag?: string;
}

export class GetNamespaceRepositoryImagesResponseResults extends SpeakeasyBase {
  /**
   * The image's digest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "digest" })
  digest?: string;

  /**
   * Time when this image was last pulled. Note this is updated at most once per hour.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_pulled" })
  lastPulled?: string;

  /**
   * Time when this image was last pushed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_pushed" })
  lastPushed?: string;

  /**
   * The repository namespace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "namespace" })
  namespace?: string;

  /**
   * The repository name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  repository?: string;

  /**
   * The status of the image based on its last activity against the `active_from` time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetNamespaceRepositoryImagesResponseResultsStatusEnum;

  /**
   * The current and historical tags for this image.
   */
  @SpeakeasyMetadata({
    elemType: GetNamespaceRepositoryImagesResponseResultsTags,
  })
  @Expose({ name: "tags" })
  @Type(() => GetNamespaceRepositoryImagesResponseResultsTags)
  tags?: GetNamespaceRepositoryImagesResponseResultsTags[];
}

/**
 * Paginated list of images in a repository.
 */
export class GetNamespaceRepositoryImagesResponse extends SpeakeasyBase {
  /**
   * Total count of images in the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * Link to the next page with the same query parameters if there are more images.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  /**
   * Link to the previous page with the same query parameters if not on first page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  /**
   * Image details.
   */
  @SpeakeasyMetadata({ elemType: GetNamespaceRepositoryImagesResponseResults })
  @Expose({ name: "results" })
  @Type(() => GetNamespaceRepositoryImagesResponseResults)
  results?: GetNamespaceRepositoryImagesResponseResults[];
}
