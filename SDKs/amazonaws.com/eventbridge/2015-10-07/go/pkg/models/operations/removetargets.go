// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RemoveTargetsXAmzTargetEnum
type RemoveTargetsXAmzTargetEnum string

const (
	RemoveTargetsXAmzTargetEnumAwsEventsRemoveTargets RemoveTargetsXAmzTargetEnum = "AWSEvents.RemoveTargets"
)

func (e *RemoveTargetsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSEvents.RemoveTargets":
		*e = RemoveTargetsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveTargetsXAmzTargetEnum: %s", s)
	}
}

type RemoveTargetsRequest struct {
	RemoveTargetsRequest shared.RemoveTargetsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           RemoveTargetsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RemoveTargetsResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InternalException
	InternalException interface{}
	// ManagedRuleException
	ManagedRuleException interface{}
	// Success
	RemoveTargetsResponse *shared.RemoveTargetsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
