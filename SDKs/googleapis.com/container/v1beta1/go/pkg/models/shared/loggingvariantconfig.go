// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LoggingVariantConfigVariantEnum - Logging variant deployed on nodes.
type LoggingVariantConfigVariantEnum string

const (
	LoggingVariantConfigVariantEnumVariantUnspecified LoggingVariantConfigVariantEnum = "VARIANT_UNSPECIFIED"
	LoggingVariantConfigVariantEnumDefault            LoggingVariantConfigVariantEnum = "DEFAULT"
	LoggingVariantConfigVariantEnumMaxThroughput      LoggingVariantConfigVariantEnum = "MAX_THROUGHPUT"
)

func (e *LoggingVariantConfigVariantEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VARIANT_UNSPECIFIED":
		fallthrough
	case "DEFAULT":
		fallthrough
	case "MAX_THROUGHPUT":
		*e = LoggingVariantConfigVariantEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LoggingVariantConfigVariantEnum: %s", s)
	}
}

// LoggingVariantConfig - LoggingVariantConfig specifies the behaviour of the logging component.
type LoggingVariantConfig struct {
	// Logging variant deployed on nodes.
	Variant *LoggingVariantConfigVariantEnum `json:"variant,omitempty"`
}
