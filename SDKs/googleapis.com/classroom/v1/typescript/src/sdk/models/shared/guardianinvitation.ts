/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The state that this invitation is in.
 */
export enum GuardianInvitationStateEnum {
  GuardianInvitationStateUnspecified = "GUARDIAN_INVITATION_STATE_UNSPECIFIED",
  Pending = "PENDING",
  Complete = "COMPLETE",
}

/**
 * An invitation to become the guardian of a specified user, sent to a specified email address.
 */
export class GuardianInvitation extends SpeakeasyBase {
  /**
   * The time that this invitation was created. Read-only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  creationTime?: string;

  /**
   * Unique identifier for this invitation. Read-only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invitationId" })
  invitationId?: string;

  /**
   * Email address that the invitation was sent to. This field is only visible to domain administrators.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invitedEmailAddress" })
  invitedEmailAddress?: string;

  /**
   * The state that this invitation is in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: GuardianInvitationStateEnum;

  /**
   * ID of the student (in standard format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "studentId" })
  studentId?: string;
}
