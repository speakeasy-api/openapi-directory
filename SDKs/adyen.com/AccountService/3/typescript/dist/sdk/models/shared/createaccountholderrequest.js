"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateAccountHolderRequest = exports.CreateAccountHolderRequestLegalEntityEnum = void 0;
var utils_1 = require("../../../internal/utils");
var accountholderdetails_1 = require("./accountholderdetails");
var class_transformer_1 = require("class-transformer");
/**
 * The legal entity type of the account holder. This determines the information that should be provided in the request.
 *
 * @remarks
 *
 * Possible values: **Business**, **Individual**, or **NonProfit**.
 *
 * * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails` must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.
 *
 * * If set to **Individual**, then `accountHolderDetails.individualDetails` must be provided.
 */
var CreateAccountHolderRequestLegalEntityEnum;
(function (CreateAccountHolderRequestLegalEntityEnum) {
    CreateAccountHolderRequestLegalEntityEnum["Business"] = "Business";
    CreateAccountHolderRequestLegalEntityEnum["Individual"] = "Individual";
    CreateAccountHolderRequestLegalEntityEnum["NonProfit"] = "NonProfit";
})(CreateAccountHolderRequestLegalEntityEnum = exports.CreateAccountHolderRequestLegalEntityEnum || (exports.CreateAccountHolderRequestLegalEntityEnum = {}));
var CreateAccountHolderRequest = /** @class */ (function (_super) {
    __extends(CreateAccountHolderRequest, _super);
    function CreateAccountHolderRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountHolderCode" }),
        __metadata("design:type", String)
    ], CreateAccountHolderRequest.prototype, "accountHolderCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountHolderDetails" }),
        (0, class_transformer_1.Type)(function () { return accountholderdetails_1.AccountHolderDetails; }),
        __metadata("design:type", accountholderdetails_1.AccountHolderDetails)
    ], CreateAccountHolderRequest.prototype, "accountHolderDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createDefaultAccount" }),
        __metadata("design:type", Boolean)
    ], CreateAccountHolderRequest.prototype, "createDefaultAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "legalEntity" }),
        __metadata("design:type", String)
    ], CreateAccountHolderRequest.prototype, "legalEntity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "processingTier" }),
        __metadata("design:type", Number)
    ], CreateAccountHolderRequest.prototype, "processingTier", void 0);
    return CreateAccountHolderRequest;
}(utils_1.SpeakeasyBase));
exports.CreateAccountHolderRequest = CreateAccountHolderRequest;
