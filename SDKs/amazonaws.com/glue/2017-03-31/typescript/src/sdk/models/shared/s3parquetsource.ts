/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GlueSchema } from "./glueschema";
import { ParquetCompressionTypeEnum } from "./parquetcompressiontypeenum";
import { S3DirectSourceAdditionalOptions } from "./s3directsourceadditionaloptions";
import { Expose, Type } from "class-transformer";

/**
 * Specifies an Apache Parquet data store stored in Amazon S3.
 */
export class S3ParquetSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalOptions" })
  @Type(() => S3DirectSourceAdditionalOptions)
  additionalOptions?: S3DirectSourceAdditionalOptions;

  @SpeakeasyMetadata()
  @Expose({ name: "CompressionType" })
  compressionType?: ParquetCompressionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Exclusions" })
  exclusions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "GroupFiles" })
  groupFiles?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GroupSize" })
  groupSize?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxBand" })
  maxBand?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxFilesInBand" })
  maxFilesInBand?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata({ elemType: GlueSchema })
  @Expose({ name: "OutputSchemas" })
  @Type(() => GlueSchema)
  outputSchemas?: GlueSchema[];

  @SpeakeasyMetadata()
  @Expose({ name: "Paths" })
  paths: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Recurse" })
  recurse?: boolean;
}
