/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EmbeddedResource } from "./embeddedresource";
import { MeetingUrl } from "./meetingurl";

/**
 * Success
 */
export class MeetingSetting extends SpeakeasyBase {
  @SpeakeasyMetadata()
  activeMeetingUrl?: MeetingUrl;

  /**
   * Allow other team members to schedule on you behalf.
   */
  @SpeakeasyMetadata()
  allowBookingOnBehalf?: boolean;

  /**
   * Allow team members to insert available time outside your working hours.
   */
  @SpeakeasyMetadata()
  allowBookingOvertime?: boolean;

  /**
   * Allow team members to double book events on your calendar.
   */
  @SpeakeasyMetadata()
  allowEventOverlap?: boolean;

  /**
   * The number of days out the user allows a prospect to schedule a meeting
   */
  @SpeakeasyMetadata()
  availabilityLimit?: number;

  /**
   * If Availability Limits have been turned on
   */
  @SpeakeasyMetadata()
  availabilityLimitEnabled?: boolean;

  /**
   * Default buffer duration in minutes set by a user
   */
  @SpeakeasyMetadata()
  bufferTimeDuration?: number;

  /**
   * Calendar type
   */
  @SpeakeasyMetadata()
  calendarType?: string;

  /**
   * Datetime of when the MeetingSetting was created
   */
  @SpeakeasyMetadata()
  createdAt?: Date;

  /**
   * Default meeting length in minutes set by the user
   */
  @SpeakeasyMetadata()
  defaultMeetingLength?: number;

  /**
   * Default description of the meeting
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * Calendar owner's email address
   */
  @SpeakeasyMetadata()
  emailAddress?: string;

  /**
   * Determines if a user enabled Calendar Sync feature
   */
  @SpeakeasyMetadata()
  enableCalendarSync?: boolean;

  /**
   * Determines if location will be filled via third-party service (Zoom, GoToMeeting, etc.)
   */
  @SpeakeasyMetadata()
  enableDynamicLocation?: boolean;

  /**
   * ID of the MeetingSetting
   */
  @SpeakeasyMetadata()
  id?: number;

  /**
   * Default location of the meeting
   */
  @SpeakeasyMetadata()
  location?: string;

  /**
   * Gets true when any issue with fetching calendar occurs
   */
  @SpeakeasyMetadata()
  primaryCalendarConnectionFailed?: boolean;

  /**
   * ID of the primary calendar
   */
  @SpeakeasyMetadata()
  primaryCalendarId?: string;

  /**
   * Display name of the primary calendar
   */
  @SpeakeasyMetadata()
  primaryCalendarName?: string;

  /**
   * Determines if meetings are scheduled with a 15 minute buffer between them
   */
  @SpeakeasyMetadata()
  scheduleBufferEnabled?: boolean;

  /**
   * The number of hours in advance a user requires someone to a book a meeting with them
   */
  @SpeakeasyMetadata()
  scheduleDelay?: number;

  /**
   * Allow team members to see the details of events on your calendar.
   */
  @SpeakeasyMetadata()
  shareEventDetail?: boolean;

  /**
   * Time zone for current calendar
   */
  @SpeakeasyMetadata()
  timeZone?: string;

  /**
   * Times available set by a user that can be used to book meetings
   */
  @SpeakeasyMetadata()
  timesAvailable?: Record<string, any>;

  /**
   * Default title of the meeting
   */
  @SpeakeasyMetadata()
  title?: string;

  /**
   * Datetime of when the MeetingSetting was last updated
   */
  @SpeakeasyMetadata()
  updatedAt?: Date;

  @SpeakeasyMetadata()
  user?: EmbeddedResource;

  /**
   * User details
   */
  @SpeakeasyMetadata()
  userDetails?: Record<string, any>;

  /**
   * User slug generated with a full name of the user
   */
  @SpeakeasyMetadata()
  userSlug?: string;
}
