// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateJobActionEnum
type GETUpdateJobActionEnum string

const (
	GETUpdateJobActionEnumUpdateJob GETUpdateJobActionEnum = "UpdateJob"
)

func (e GETUpdateJobActionEnum) ToPointer() *GETUpdateJobActionEnum {
	return &e
}

func (e *GETUpdateJobActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UpdateJob":
		*e = GETUpdateJobActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateJobActionEnum: %v", v)
	}
}

// GETUpdateJobJobTypeEnum - Specifies whether the job to initiate is an import or export job.
type GETUpdateJobJobTypeEnum string

const (
	GETUpdateJobJobTypeEnumImport GETUpdateJobJobTypeEnum = "Import"
	GETUpdateJobJobTypeEnumExport GETUpdateJobJobTypeEnum = "Export"
)

func (e GETUpdateJobJobTypeEnum) ToPointer() *GETUpdateJobJobTypeEnum {
	return &e
}

func (e *GETUpdateJobJobTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Import":
		fallthrough
	case "Export":
		*e = GETUpdateJobJobTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateJobJobTypeEnum: %v", v)
	}
}

// GETUpdateJobOperationEnum
type GETUpdateJobOperationEnum string

const (
	GETUpdateJobOperationEnumUpdateJob GETUpdateJobOperationEnum = "UpdateJob"
)

func (e GETUpdateJobOperationEnum) ToPointer() *GETUpdateJobOperationEnum {
	return &e
}

func (e *GETUpdateJobOperationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UpdateJob":
		*e = GETUpdateJobOperationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateJobOperationEnum: %v", v)
	}
}

// GETUpdateJobVersionEnum
type GETUpdateJobVersionEnum string

const (
	GETUpdateJobVersionEnumTwoThousandAndTen0601 GETUpdateJobVersionEnum = "2010-06-01"
)

func (e GETUpdateJobVersionEnum) ToPointer() *GETUpdateJobVersionEnum {
	return &e
}

func (e *GETUpdateJobVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-06-01":
		*e = GETUpdateJobVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateJobVersionEnum: %v", v)
	}
}

type GETUpdateJobRequest struct {
	APIVersion     *string                `queryParam:"style=form,explode=true,name=APIVersion"`
	AWSAccessKeyID string                 `queryParam:"style=form,explode=true,name=AWSAccessKeyId"`
	Action         GETUpdateJobActionEnum `queryParam:"style=form,explode=true,name=Action"`
	JobID          string                 `queryParam:"style=form,explode=true,name=JobId"`
	// Specifies whether the job to initiate is an import or export job.
	JobType          GETUpdateJobJobTypeEnum   `queryParam:"style=form,explode=true,name=JobType"`
	Manifest         string                    `queryParam:"style=form,explode=true,name=Manifest"`
	Operation        GETUpdateJobOperationEnum `queryParam:"style=form,explode=true,name=Operation"`
	Signature        string                    `queryParam:"style=form,explode=true,name=Signature"`
	SignatureMethod  string                    `queryParam:"style=form,explode=true,name=SignatureMethod"`
	SignatureVersion string                    `queryParam:"style=form,explode=true,name=SignatureVersion"`
	Timestamp        string                    `queryParam:"style=form,explode=true,name=Timestamp"`
	ValidateOnly     bool                      `queryParam:"style=form,explode=true,name=ValidateOnly"`
	Version          GETUpdateJobVersionEnum   `queryParam:"style=form,explode=true,name=Version"`
}

type GETUpdateJobResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
