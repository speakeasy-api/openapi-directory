// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RejectASandboxCheckDepositRequest struct {
	CheckDepositID string `pathParam:"style=simple,explode=false,name=check_deposit_id"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnumRateLimitedError RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON13 struct {
	Detail     string                                                       `json:"detail"`
	RetryAfter *int64                                                       `json:"retry_after,omitempty"`
	Status     RejectASandboxCheckDepositDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                       `json:"title"`
	Type       RejectASandboxCheckDepositDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnumFourHundredAndThree RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnumPrivateFeatureError RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON12 struct {
	Detail string                                                       `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnumFourHundredAndFour RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnumObjectNotFoundError RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON11 struct {
	Detail string                                                       `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnumFourHundred RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnumMalformedRequestError RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON10 struct {
	Detail string                                                       `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnumFourHundred RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnumInvalidParametersError RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                    `json:"errors,omitempty"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnumFourHundredAndNine RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnumInvalidOperationError RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON8 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnumFourHundredAndOne RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON7 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnumFiveHundred RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnumInternalServerError RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON6 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnumFourHundredAndThree RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON5 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON4 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnumFourHundredAndNine RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnumIdempotencyConflictError RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON3 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnumFourHundredAndThree RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON2 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnumFourHundredAndFour RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum string

const (
	RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RejectASandboxCheckDepositDefaultApplicationJSON1 struct {
	Detail string                                                      `json:"detail"`
	Status RejectASandboxCheckDepositDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   RejectASandboxCheckDepositDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RejectASandboxCheckDepositResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Deposit
	CheckDeposit *shared.CheckDeposit
	// Error
	Error interface{}
}
