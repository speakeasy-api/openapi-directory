// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnvironmentVariableTypeEnum string

const (
	EnvironmentVariableTypeEnumPlaintext      EnvironmentVariableTypeEnum = "PLAINTEXT"
	EnvironmentVariableTypeEnumParameterStore EnvironmentVariableTypeEnum = "PARAMETER_STORE"
	EnvironmentVariableTypeEnumSecretsManager EnvironmentVariableTypeEnum = "SECRETS_MANAGER"
)

func (e EnvironmentVariableTypeEnum) ToPointer() *EnvironmentVariableTypeEnum {
	return &e
}

func (e *EnvironmentVariableTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PLAINTEXT":
		fallthrough
	case "PARAMETER_STORE":
		fallthrough
	case "SECRETS_MANAGER":
		*e = EnvironmentVariableTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentVariableTypeEnum: %v", v)
	}
}
