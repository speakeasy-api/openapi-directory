"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GETChromosomeByAssemblyUsingGETRequest:
    
    chromosome: str = dataclasses.field(metadata={'path_param': { 'field_name': 'chromosome', 'style': 'simple', 'explode': False }})
    r"""chromosome"""  
    map_key: int = dataclasses.field(metadata={'path_param': { 'field_name': 'mapKey', 'style': 'simple', 'explode': False }})
    r"""mapKey"""  
    

@dataclasses.dataclass
class GETChromosomeByAssemblyUsingGETResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    