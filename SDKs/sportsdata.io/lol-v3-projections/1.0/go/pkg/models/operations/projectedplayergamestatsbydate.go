// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerGameStatsByDateFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerGameStatsByDateFormatEnum string

const (
	ProjectedPlayerGameStatsByDateFormatEnumXML  ProjectedPlayerGameStatsByDateFormatEnum = "xml"
	ProjectedPlayerGameStatsByDateFormatEnumJSON ProjectedPlayerGameStatsByDateFormatEnum = "json"
)

func (e *ProjectedPlayerGameStatsByDateFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = ProjectedPlayerGameStatsByDateFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerGameStatsByDateFormatEnum: %s", s)
	}
}

type ProjectedPlayerGameStatsByDatePathParams struct {
	// The date of the game(s).
	// <br>Example: <code>2019-01-20</code>
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerGameStatsByDateFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type ProjectedPlayerGameStatsByDateRequest struct {
	PathParams ProjectedPlayerGameStatsByDatePathParams
}

type ProjectedPlayerGameStatsByDateResponse struct {
	ContentType           string
	PlayerGameProjections []shared.PlayerGameProjection
	StatusCode            int
	RawResponse           *http.Response
}
