/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetAuthTokenCode200ApplicationJSON extends SpeakeasyBase {
  /**
   * the reusability of a token (standard or single use)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access" })
  access: string;

  /**
   * the temporary token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  /**
   * duration in seconds of the token validity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_in" })
  expiresIn: number;

  /**
   * the token type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: Record<string, any>;
}

export class GetAuthTokenCodeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  getAuthTokenCode200ApplicationJSONObject?: GetAuthTokenCode200ApplicationJSON;
}
