// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListDeclinedTransactionsRequest struct {
	AccountID           *string    `queryParam:"style=form,explode=true,name=account_id"`
	CreatedAtAfter      *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string    `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64     `queryParam:"style=form,explode=true,name=limit"`
	RouteID             *string    `queryParam:"style=form,explode=true,name=route_id"`
}

type ListDeclinedTransactionsDefaultApplicationJSON13StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListDeclinedTransactionsDefaultApplicationJSON13StatusEnum = 429
)

func (e ListDeclinedTransactionsDefaultApplicationJSON13StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListDeclinedTransactionsDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON13TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON13TypeEnumRateLimitedError ListDeclinedTransactionsDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON13TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON13 struct {
	Detail     string                                                     `json:"detail"`
	RetryAfter *int64                                                     `json:"retry_after,omitempty"`
	Status     ListDeclinedTransactionsDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                     `json:"title"`
	Type       ListDeclinedTransactionsDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON12StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON12StatusEnumFourHundredAndThree ListDeclinedTransactionsDefaultApplicationJSON12StatusEnum = 403
)

func (e ListDeclinedTransactionsDefaultApplicationJSON12StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListDeclinedTransactionsDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON12TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON12TypeEnumPrivateFeatureError ListDeclinedTransactionsDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON12TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON12 struct {
	Detail string                                                     `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON11StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON11StatusEnumFourHundredAndFour ListDeclinedTransactionsDefaultApplicationJSON11StatusEnum = 404
)

func (e ListDeclinedTransactionsDefaultApplicationJSON11StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListDeclinedTransactionsDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON11TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON11TypeEnumObjectNotFoundError ListDeclinedTransactionsDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON11TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON11 struct {
	Detail string                                                     `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON10StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON10StatusEnumFourHundred ListDeclinedTransactionsDefaultApplicationJSON10StatusEnum = 400
)

func (e ListDeclinedTransactionsDefaultApplicationJSON10StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListDeclinedTransactionsDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON10TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON10TypeEnumMalformedRequestError ListDeclinedTransactionsDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON10TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON10 struct {
	Detail string                                                     `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON9StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON9StatusEnumFourHundred ListDeclinedTransactionsDefaultApplicationJSON9StatusEnum = 400
)

func (e ListDeclinedTransactionsDefaultApplicationJSON9StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListDeclinedTransactionsDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON9TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON9TypeEnumInvalidParametersError ListDeclinedTransactionsDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON9TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                  `json:"errors"`
	Status ListDeclinedTransactionsDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON8StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON8StatusEnumFourHundredAndNine ListDeclinedTransactionsDefaultApplicationJSON8StatusEnum = 409
)

func (e ListDeclinedTransactionsDefaultApplicationJSON8StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListDeclinedTransactionsDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON8TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON8TypeEnumInvalidOperationError ListDeclinedTransactionsDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON8TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON8 struct {
	Detail string                                                    `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON7StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON7StatusEnumFourHundredAndOne ListDeclinedTransactionsDefaultApplicationJSON7StatusEnum = 401
)

func (e ListDeclinedTransactionsDefaultApplicationJSON7StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListDeclinedTransactionsDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON7TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListDeclinedTransactionsDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON7TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON7 struct {
	Detail string                                                    `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON6StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON6StatusEnumFiveHundred ListDeclinedTransactionsDefaultApplicationJSON6StatusEnum = 500
)

func (e ListDeclinedTransactionsDefaultApplicationJSON6StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListDeclinedTransactionsDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON6TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON6TypeEnumInternalServerError ListDeclinedTransactionsDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON6TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON6 struct {
	Detail string                                                    `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON5StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON5StatusEnumFourHundredAndThree ListDeclinedTransactionsDefaultApplicationJSON5StatusEnum = 403
)

func (e ListDeclinedTransactionsDefaultApplicationJSON5StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListDeclinedTransactionsDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON5TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListDeclinedTransactionsDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON5TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON5 struct {
	Detail string                                                    `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON4StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListDeclinedTransactionsDefaultApplicationJSON4StatusEnum = 422
)

func (e ListDeclinedTransactionsDefaultApplicationJSON4StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListDeclinedTransactionsDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON4TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListDeclinedTransactionsDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON4TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON4 struct {
	Detail string                                                    `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON3StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON3StatusEnumFourHundredAndNine ListDeclinedTransactionsDefaultApplicationJSON3StatusEnum = 409
)

func (e ListDeclinedTransactionsDefaultApplicationJSON3StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListDeclinedTransactionsDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON3TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListDeclinedTransactionsDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON3TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON3 struct {
	Detail string                                                    `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON2StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON2StatusEnumFourHundredAndThree ListDeclinedTransactionsDefaultApplicationJSON2StatusEnum = 403
)

func (e ListDeclinedTransactionsDefaultApplicationJSON2StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListDeclinedTransactionsDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON2TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListDeclinedTransactionsDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON2TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON2 struct {
	Detail string                                                    `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsDefaultApplicationJSON1StatusEnum int64

const (
	ListDeclinedTransactionsDefaultApplicationJSON1StatusEnumFourHundredAndFour ListDeclinedTransactionsDefaultApplicationJSON1StatusEnum = 404
)

func (e ListDeclinedTransactionsDefaultApplicationJSON1StatusEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListDeclinedTransactionsDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON1TypeEnum string

const (
	ListDeclinedTransactionsDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListDeclinedTransactionsDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListDeclinedTransactionsDefaultApplicationJSON1TypeEnum) ToPointer() *ListDeclinedTransactionsDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListDeclinedTransactionsDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListDeclinedTransactionsDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeclinedTransactionsDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListDeclinedTransactionsDefaultApplicationJSON1 struct {
	Detail string                                                    `json:"detail"`
	Status ListDeclinedTransactionsDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListDeclinedTransactionsDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListDeclinedTransactionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Declined Transaction List
	DeclinedTransactionList *shared.DeclinedTransactionList
	// Error
	Error interface{}
}
