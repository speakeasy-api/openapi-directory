/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CardActions } from "./cardactions";
import { CardDisplayBody } from "./carddisplaybody";
import { CardFetchBody } from "./cardfetchbody";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Current state of Card Definition
 */
export class CardResponse extends SpeakeasyBase {
  /**
   * Configuration for custom user actions on cards.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actions" })
  @Type(() => CardActions)
  actions: CardActions;

  /**
   * When this card was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * Configuration for displayed info on a card
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display" })
  @Type(() => CardDisplayBody)
  display: CardDisplayBody;

  /**
   * Configuration for this card's data fetch request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fetch" })
  @Type(() => CardFetchBody)
  fetch: CardFetchBody;

  /**
   * Generated unique ID for card.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Displayed title of this card.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * The last time this card was updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
