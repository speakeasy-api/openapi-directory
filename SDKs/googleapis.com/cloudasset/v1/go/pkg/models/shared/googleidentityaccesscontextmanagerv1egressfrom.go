// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum - Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.
type GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum string

const (
	GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnumIdentityTypeUnspecified GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum = "IDENTITY_TYPE_UNSPECIFIED"
	GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnumAnyIdentity             GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum = "ANY_IDENTITY"
	GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnumAnyUserAccount          GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum = "ANY_USER_ACCOUNT"
	GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnumAnyServiceAccount       GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum = "ANY_SERVICE_ACCOUNT"
)

func (e GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum) ToPointer() *GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum {
	return &e
}

func (e *GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IDENTITY_TYPE_UNSPECIFIED":
		fallthrough
	case "ANY_IDENTITY":
		fallthrough
	case "ANY_USER_ACCOUNT":
		fallthrough
	case "ANY_SERVICE_ACCOUNT":
		*e = GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum: %v", v)
	}
}

// GoogleIdentityAccesscontextmanagerV1EgressFrom - Defines the conditions under which an EgressPolicy matches a request. Conditions based on information about the source of the request. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed.
type GoogleIdentityAccesscontextmanagerV1EgressFrom struct {
	// A list of identities that are allowed access through this [EgressPolicy]. Should be in the format of email address. The email address should represent individual user or service account only.
	Identities []string `json:"identities,omitempty"`
	// Specifies the type of identities that are allowed access to outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.
	IdentityType *GoogleIdentityAccesscontextmanagerV1EgressFromIdentityTypeEnum `json:"identityType,omitempty"`
}
