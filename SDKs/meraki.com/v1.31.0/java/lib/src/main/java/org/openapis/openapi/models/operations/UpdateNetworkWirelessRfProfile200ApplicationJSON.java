/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateNetworkWirelessRfProfile200ApplicationJSON - Successful operation
 */
public class UpdateNetworkWirelessRfProfile200ApplicationJSON {
    /**
     * Settings that will be enabled if selectionType is set to 'ap'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apBandSettings")
    public UpdateNetworkWirelessRfProfile200ApplicationJSONApBandSettings apBandSettings;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withApBandSettings(UpdateNetworkWirelessRfProfile200ApplicationJSONApBandSettings apBandSettings) {
        this.apBandSettings = apBandSettings;
        return this;
    }
    
    /**
     * Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bandSelectionType")
    public String bandSelectionType;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withBandSelectionType(String bandSelectionType) {
        this.bandSelectionType = bandSelectionType;
        return this;
    }
    
    /**
     * Steers client to best available access point. Can be either true or false. Defaults to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientBalancingEnabled")
    public Boolean clientBalancingEnabled;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withClientBalancingEnabled(Boolean clientBalancingEnabled) {
        this.clientBalancingEnabled = clientBalancingEnabled;
        return this;
    }
    
    /**
     * Settings related to 5Ghz band
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fiveGhzSettings")
    public UpdateNetworkWirelessRfProfile200ApplicationJSONFiveGhzSettings fiveGhzSettings;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withFiveGhzSettings(UpdateNetworkWirelessRfProfile200ApplicationJSONFiveGhzSettings fiveGhzSettings) {
        this.fiveGhzSettings = fiveGhzSettings;
        return this;
    }
    
    /**
     * The name of the new profile. Must be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minBitrateType")
    public String minBitrateType;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withMinBitrateType(String minBitrateType) {
        this.minBitrateType = minBitrateType;
        return this;
    }
    
    /**
     * The name of the new profile. Must be unique. This param is required on creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The network ID of the RF Profile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkId")
    public String networkId;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withNetworkId(String networkId) {
        this.networkId = networkId;
        return this;
    }
    
    /**
     * Per-SSID radio settings by number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("perSsidSettings")
    public UpdateNetworkWirelessRfProfile200ApplicationJSONPerSsidSettings perSsidSettings;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withPerSsidSettings(UpdateNetworkWirelessRfProfile200ApplicationJSONPerSsidSettings perSsidSettings) {
        this.perSsidSettings = perSsidSettings;
        return this;
    }
    
    /**
     * Settings related to radio transmission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transmission")
    public UpdateNetworkWirelessRfProfile200ApplicationJSONTransmission transmission;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withTransmission(UpdateNetworkWirelessRfProfile200ApplicationJSONTransmission transmission) {
        this.transmission = transmission;
        return this;
    }
    
    /**
     * Settings related to 2.4Ghz band
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("twoFourGhzSettings")
    public UpdateNetworkWirelessRfProfile200ApplicationJSONTwoFourGhzSettings twoFourGhzSettings;
    public UpdateNetworkWirelessRfProfile200ApplicationJSON withTwoFourGhzSettings(UpdateNetworkWirelessRfProfile200ApplicationJSONTwoFourGhzSettings twoFourGhzSettings) {
        this.twoFourGhzSettings = twoFourGhzSettings;
        return this;
    }
    
}
