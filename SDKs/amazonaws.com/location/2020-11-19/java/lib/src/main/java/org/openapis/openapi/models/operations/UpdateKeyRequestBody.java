/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class UpdateKeyRequestBody {
    /**
     * Updates the description for the API key resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public UpdateKeyRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Updates the timestamp for when the API key resource will expire in &lt;a href="https://www.iso.org/iso-8601-date-and-time-format.html"&gt; ISO 8601&lt;/a&gt; format: &lt;code&gt;YYYY-MM-DDThh:mm:ss.sssZ&lt;/code&gt;. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExpireTime")
    public OffsetDateTime expireTime;
    public UpdateKeyRequestBody withExpireTime(OffsetDateTime expireTime) {
        this.expireTime = expireTime;
        return this;
    }
    
    /**
     * &lt;p&gt;The boolean flag to be included for updating &lt;code&gt;ExpireTime&lt;/code&gt; or &lt;code&gt;Restrictions&lt;/code&gt; details.&lt;/p&gt; &lt;p&gt;Must be set to &lt;code&gt;true&lt;/code&gt; to update an API key resource that has been used in the past 7 days.&lt;/p&gt; &lt;p&gt; &lt;code&gt;False&lt;/code&gt; if force update is not preferred&lt;/p&gt; &lt;p&gt;Default value: &lt;code&gt;False&lt;/code&gt; &lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ForceUpdate")
    public Boolean forceUpdate;
    public UpdateKeyRequestBody withForceUpdate(Boolean forceUpdate) {
        this.forceUpdate = forceUpdate;
        return this;
    }
    
    /**
     * Whether the API key should expire. Set to &lt;code&gt;true&lt;/code&gt; to set the API key to have no expiration time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NoExpiry")
    public Boolean noExpiry;
    public UpdateKeyRequestBody withNoExpiry(Boolean noExpiry) {
        this.noExpiry = noExpiry;
        return this;
    }
    
    /**
     * API Restrictions on the allowed actions, resources, and referers for an API key resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Restrictions")
    public UpdateKeyRequestBodyRestrictions restrictions;
    public UpdateKeyRequestBody withRestrictions(UpdateKeyRequestBodyRestrictions restrictions) {
        this.restrictions = restrictions;
        return this;
    }
    
}
