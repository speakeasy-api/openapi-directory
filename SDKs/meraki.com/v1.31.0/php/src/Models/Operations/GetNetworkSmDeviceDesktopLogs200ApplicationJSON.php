<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetNetworkSmDeviceDesktopLogs200ApplicationJSON
{
    /**
     * The IP address of the DCHP Server.
     * 
     * @var ?string $dhcpServer
     */
	#[\JMS\Serializer\Annotation\SerializedName('dhcpServer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dhcpServer = null;
    
    /**
     * The DNS Server during the connection.
     * 
     * @var ?string $dnsServer
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsServer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dnsServer = null;
    
    /**
     * The gateway IP the device was connected to.
     * 
     * @var ?string $gateway
     */
	#[\JMS\Serializer\Annotation\SerializedName('gateway')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gateway = null;
    
    /**
     * The IP of the device during connection.
     * 
     * @var ?string $ip
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ip = null;
    
    /**
     * The time the data was measured at.
     * 
     * @var ?string $measuredAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('measuredAt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $measuredAt = null;
    
    /**
     * The network device for the device used for connection.
     * 
     * @var ?string $networkDevice
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkDevice')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkDevice = null;
    
    /**
     * The network driver for the device.
     * 
     * @var ?string $networkDriver
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkDriver')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkDriver = null;
    
    /**
     * The network max transmission unit.
     * 
     * @var ?string $networkMTU
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkMTU')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkMTU = null;
    
    /**
     * The public IP address of the device.
     * 
     * @var ?string $publicIP
     */
	#[\JMS\Serializer\Annotation\SerializedName('publicIP')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicIP = null;
    
    /**
     * The subnet of the device connection.
     * 
     * @var ?string $subnet
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subnet = null;
    
    /**
     * The time the connection was logged.
     * 
     * @var ?string $ts
     */
	#[\JMS\Serializer\Annotation\SerializedName('ts')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ts = null;
    
    /**
     * The user during connection.
     * 
     * @var ?string $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $user = null;
    
    /**
     * The type of authentication used by the SSID.
     * 
     * @var ?string $wifiAuth
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifiAuth')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wifiAuth = null;
    
    /**
     * The MAC of the access point the device is connected to.
     * 
     * @var ?string $wifiBssid
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifiBssid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wifiBssid = null;
    
    /**
     * Channel through which the connection is routing.
     * 
     * @var ?string $wifiChannel
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifiChannel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wifiChannel = null;
    
    /**
     * The wireless signal power level received by the device.
     * 
     * @var ?string $wifiNoise
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifiNoise')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wifiNoise = null;
    
    /**
     * The Received Signal Strength Indicator for the device.
     * 
     * @var ?string $wifiRssi
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifiRssi')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wifiRssi = null;
    
    /**
     * The name of the network the device is connected to.
     * 
     * @var ?string $wifiSsid
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifiSsid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wifiSsid = null;
    
	public function __construct()
	{
		$this->dhcpServer = null;
		$this->dnsServer = null;
		$this->gateway = null;
		$this->ip = null;
		$this->measuredAt = null;
		$this->networkDevice = null;
		$this->networkDriver = null;
		$this->networkMTU = null;
		$this->publicIP = null;
		$this->subnet = null;
		$this->ts = null;
		$this->user = null;
		$this->wifiAuth = null;
		$this->wifiBssid = null;
		$this->wifiChannel = null;
		$this->wifiNoise = null;
		$this->wifiRssi = null;
		$this->wifiSsid = null;
	}
}
