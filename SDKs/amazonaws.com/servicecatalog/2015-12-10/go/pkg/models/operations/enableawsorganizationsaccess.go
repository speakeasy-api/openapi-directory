// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// EnableAWSOrganizationsAccessXAmzTargetEnum
type EnableAWSOrganizationsAccessXAmzTargetEnum string

const (
	EnableAWSOrganizationsAccessXAmzTargetEnumAws242ServiceCatalogServiceEnableAwsOrganizationsAccess EnableAWSOrganizationsAccessXAmzTargetEnum = "AWS242ServiceCatalogService.EnableAWSOrganizationsAccess"
)

func (e EnableAWSOrganizationsAccessXAmzTargetEnum) ToPointer() *EnableAWSOrganizationsAccessXAmzTargetEnum {
	return &e
}

func (e *EnableAWSOrganizationsAccessXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS242ServiceCatalogService.EnableAWSOrganizationsAccess":
		*e = EnableAWSOrganizationsAccessXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableAWSOrganizationsAccessXAmzTargetEnum: %v", v)
	}
}

type EnableAWSOrganizationsAccessRequest struct {
	RequestBody       map[string]interface{}                     `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        EnableAWSOrganizationsAccessXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type EnableAWSOrganizationsAccessResponse struct {
	ContentType string
	// Success
	EnableAWSOrganizationsAccessOutput map[string]interface{}
	// InvalidStateException
	InvalidStateException interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
