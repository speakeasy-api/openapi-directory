// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GooglePrivacyDlpV2ValueDayOfWeekValueEnum - day of week
type GooglePrivacyDlpV2ValueDayOfWeekValueEnum string

const (
	GooglePrivacyDlpV2ValueDayOfWeekValueEnumDayOfWeekUnspecified GooglePrivacyDlpV2ValueDayOfWeekValueEnum = "DAY_OF_WEEK_UNSPECIFIED"
	GooglePrivacyDlpV2ValueDayOfWeekValueEnumMonday               GooglePrivacyDlpV2ValueDayOfWeekValueEnum = "MONDAY"
	GooglePrivacyDlpV2ValueDayOfWeekValueEnumTuesday              GooglePrivacyDlpV2ValueDayOfWeekValueEnum = "TUESDAY"
	GooglePrivacyDlpV2ValueDayOfWeekValueEnumWednesday            GooglePrivacyDlpV2ValueDayOfWeekValueEnum = "WEDNESDAY"
	GooglePrivacyDlpV2ValueDayOfWeekValueEnumThursday             GooglePrivacyDlpV2ValueDayOfWeekValueEnum = "THURSDAY"
	GooglePrivacyDlpV2ValueDayOfWeekValueEnumFriday               GooglePrivacyDlpV2ValueDayOfWeekValueEnum = "FRIDAY"
	GooglePrivacyDlpV2ValueDayOfWeekValueEnumSaturday             GooglePrivacyDlpV2ValueDayOfWeekValueEnum = "SATURDAY"
	GooglePrivacyDlpV2ValueDayOfWeekValueEnumSunday               GooglePrivacyDlpV2ValueDayOfWeekValueEnum = "SUNDAY"
)

func (e GooglePrivacyDlpV2ValueDayOfWeekValueEnum) ToPointer() *GooglePrivacyDlpV2ValueDayOfWeekValueEnum {
	return &e
}

func (e *GooglePrivacyDlpV2ValueDayOfWeekValueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DAY_OF_WEEK_UNSPECIFIED":
		fallthrough
	case "MONDAY":
		fallthrough
	case "TUESDAY":
		fallthrough
	case "WEDNESDAY":
		fallthrough
	case "THURSDAY":
		fallthrough
	case "FRIDAY":
		fallthrough
	case "SATURDAY":
		fallthrough
	case "SUNDAY":
		*e = GooglePrivacyDlpV2ValueDayOfWeekValueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2ValueDayOfWeekValueEnum: %v", v)
	}
}

// GooglePrivacyDlpV2Value - Set of primitive values supported by the system. Note that for the purposes of inspection or transformation, the number of bytes considered to comprise a 'Value' is based on its representation as a UTF-8 encoded string. For example, if 'integer_value' is set to 123456789, the number of bytes would be counted as 9, even though an int64 only holds up to 8 bytes of data.
type GooglePrivacyDlpV2Value struct {
	// boolean
	BooleanValue *bool `json:"booleanValue,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	DateValue *GoogleTypeDate `json:"dateValue,omitempty"`
	// day of week
	DayOfWeekValue *GooglePrivacyDlpV2ValueDayOfWeekValueEnum `json:"dayOfWeekValue,omitempty"`
	// float
	FloatValue *float64 `json:"floatValue,omitempty"`
	// integer
	IntegerValue *string `json:"integerValue,omitempty"`
	// string
	StringValue *string `json:"stringValue,omitempty"`
	// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
	TimeValue *GoogleTypeTimeOfDay `json:"timeValue,omitempty"`
	// timestamp
	TimestampValue *string `json:"timestampValue,omitempty"`
}
