"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Album = exports.AlbumThemeEnum = exports.AlbumSortEnum = exports.AlbumPrivacy = exports.AlbumPrivacyViewEnum = exports.AlbumMetadata = exports.AlbumMetadataInteractions = exports.AlbumMetadataInteractionsAddVideos = exports.AlbumMetadataInteractionsAddLogos = exports.AlbumMetadataInteractionsAddCustomThumbnails = exports.AlbumMetadataConnections = exports.AlbumMetadataConnectionsVideos = exports.AlbumLayoutEnum = exports.AlbumEmbed = exports.AlbumPicture = exports.AlbumPictureTypeEnum = exports.AlbumPictureSizes = void 0;
var utils_1 = require("../../../internal/utils");
var picture_1 = require("./picture");
var user_1 = require("./user");
var class_transformer_1 = require("class-transformer");
var AlbumPictureSizes = /** @class */ (function (_super) {
    __extends(AlbumPictureSizes, _super);
    function AlbumPictureSizes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height" }),
        __metadata("design:type", Number)
    ], AlbumPictureSizes.prototype, "height", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "link" }),
        __metadata("design:type", String)
    ], AlbumPictureSizes.prototype, "link", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "link_with_play_button" }),
        __metadata("design:type", String)
    ], AlbumPictureSizes.prototype, "linkWithPlayButton", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width" }),
        __metadata("design:type", Number)
    ], AlbumPictureSizes.prototype, "width", void 0);
    return AlbumPictureSizes;
}(utils_1.SpeakeasyBase));
exports.AlbumPictureSizes = AlbumPictureSizes;
/**
 * The type of the picture:
 *
 * @remarks
 *
 * Option descriptions:
 *  * `caution` - An image that is appropriate for all ages.
 *  * `custom` - A custom image for the video.
 *  * `default` - The default image for the video.
 *
 */
var AlbumPictureTypeEnum;
(function (AlbumPictureTypeEnum) {
    AlbumPictureTypeEnum["Caution"] = "caution";
    AlbumPictureTypeEnum["Custom"] = "custom";
    AlbumPictureTypeEnum["Default"] = "default";
})(AlbumPictureTypeEnum = exports.AlbumPictureTypeEnum || (exports.AlbumPictureTypeEnum = {}));
/**
 * The custom logo for this album.
 */
var AlbumPicture = /** @class */ (function (_super) {
    __extends(AlbumPicture, _super);
    function AlbumPicture() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "active" }),
        __metadata("design:type", Boolean)
    ], AlbumPicture.prototype, "active", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "link" }),
        __metadata("design:type", String)
    ], AlbumPicture.prototype, "link", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_key" }),
        __metadata("design:type", String)
    ], AlbumPicture.prototype, "resourceKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: AlbumPictureSizes }),
        (0, class_transformer_1.Expose)({ name: "sizes" }),
        (0, class_transformer_1.Type)(function () { return AlbumPictureSizes; }),
        __metadata("design:type", Array)
    ], AlbumPicture.prototype, "sizes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], AlbumPicture.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uri" }),
        __metadata("design:type", String)
    ], AlbumPicture.prototype, "uri", void 0);
    return AlbumPicture;
}(utils_1.SpeakeasyBase));
exports.AlbumPicture = AlbumPicture;
/**
 * Embed data for the album.
 */
var AlbumEmbed = /** @class */ (function (_super) {
    __extends(AlbumEmbed, _super);
    function AlbumEmbed() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "html" }),
        __metadata("design:type", String)
    ], AlbumEmbed.prototype, "html", void 0);
    return AlbumEmbed;
}(utils_1.SpeakeasyBase));
exports.AlbumEmbed = AlbumEmbed;
/**
 * The album's layout preference
 */
var AlbumLayoutEnum;
(function (AlbumLayoutEnum) {
    AlbumLayoutEnum["Grid"] = "grid";
    AlbumLayoutEnum["Player"] = "player";
})(AlbumLayoutEnum = exports.AlbumLayoutEnum || (exports.AlbumLayoutEnum = {}));
/**
 * Information about the videos that belong to this album.
 */
var AlbumMetadataConnectionsVideos = /** @class */ (function (_super) {
    __extends(AlbumMetadataConnectionsVideos, _super);
    function AlbumMetadataConnectionsVideos() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "options" }),
        __metadata("design:type", Array)
    ], AlbumMetadataConnectionsVideos.prototype, "options", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total" }),
        __metadata("design:type", Number)
    ], AlbumMetadataConnectionsVideos.prototype, "total", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uri" }),
        __metadata("design:type", String)
    ], AlbumMetadataConnectionsVideos.prototype, "uri", void 0);
    return AlbumMetadataConnectionsVideos;
}(utils_1.SpeakeasyBase));
exports.AlbumMetadataConnectionsVideos = AlbumMetadataConnectionsVideos;
/**
 * A collection of information that is connected to this resource.
 */
var AlbumMetadataConnections = /** @class */ (function (_super) {
    __extends(AlbumMetadataConnections, _super);
    function AlbumMetadataConnections() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "videos" }),
        (0, class_transformer_1.Type)(function () { return AlbumMetadataConnectionsVideos; }),
        __metadata("design:type", AlbumMetadataConnectionsVideos)
    ], AlbumMetadataConnections.prototype, "videos", void 0);
    return AlbumMetadataConnections;
}(utils_1.SpeakeasyBase));
exports.AlbumMetadataConnections = AlbumMetadataConnections;
/**
 * An action indicating that the authenticated user is an admin of the album and may therefore add custom thumbnails. This data requires a bearer token with the `private` scope.
 */
var AlbumMetadataInteractionsAddCustomThumbnails = /** @class */ (function (_super) {
    __extends(AlbumMetadataInteractionsAddCustomThumbnails, _super);
    function AlbumMetadataInteractionsAddCustomThumbnails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "options" }),
        __metadata("design:type", Array)
    ], AlbumMetadataInteractionsAddCustomThumbnails.prototype, "options", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uri" }),
        __metadata("design:type", String)
    ], AlbumMetadataInteractionsAddCustomThumbnails.prototype, "uri", void 0);
    return AlbumMetadataInteractionsAddCustomThumbnails;
}(utils_1.SpeakeasyBase));
exports.AlbumMetadataInteractionsAddCustomThumbnails = AlbumMetadataInteractionsAddCustomThumbnails;
/**
 * An action indicating that the authenticated user is an admin of the album and may therefore add custom logos. This data requires a bearer token with the `private` scope.
 */
var AlbumMetadataInteractionsAddLogos = /** @class */ (function (_super) {
    __extends(AlbumMetadataInteractionsAddLogos, _super);
    function AlbumMetadataInteractionsAddLogos() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "options" }),
        __metadata("design:type", Array)
    ], AlbumMetadataInteractionsAddLogos.prototype, "options", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uri" }),
        __metadata("design:type", String)
    ], AlbumMetadataInteractionsAddLogos.prototype, "uri", void 0);
    return AlbumMetadataInteractionsAddLogos;
}(utils_1.SpeakeasyBase));
exports.AlbumMetadataInteractionsAddLogos = AlbumMetadataInteractionsAddLogos;
/**
 * An action indicating that the authenticated user is an admin of the album and may therefore add videos. This data requires a bearer token with the `private` scope.
 */
var AlbumMetadataInteractionsAddVideos = /** @class */ (function (_super) {
    __extends(AlbumMetadataInteractionsAddVideos, _super);
    function AlbumMetadataInteractionsAddVideos() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "options" }),
        __metadata("design:type", Array)
    ], AlbumMetadataInteractionsAddVideos.prototype, "options", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uri" }),
        __metadata("design:type", String)
    ], AlbumMetadataInteractionsAddVideos.prototype, "uri", void 0);
    return AlbumMetadataInteractionsAddVideos;
}(utils_1.SpeakeasyBase));
exports.AlbumMetadataInteractionsAddVideos = AlbumMetadataInteractionsAddVideos;
/**
 * A list of resource URIs related to the album.
 */
var AlbumMetadataInteractions = /** @class */ (function (_super) {
    __extends(AlbumMetadataInteractions, _super);
    function AlbumMetadataInteractions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "add_custom_thumbnails" }),
        (0, class_transformer_1.Type)(function () { return AlbumMetadataInteractionsAddCustomThumbnails; }),
        __metadata("design:type", AlbumMetadataInteractionsAddCustomThumbnails)
    ], AlbumMetadataInteractions.prototype, "addCustomThumbnails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "add_logos" }),
        (0, class_transformer_1.Type)(function () { return AlbumMetadataInteractionsAddLogos; }),
        __metadata("design:type", AlbumMetadataInteractionsAddLogos)
    ], AlbumMetadataInteractions.prototype, "addLogos", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "add_videos" }),
        (0, class_transformer_1.Type)(function () { return AlbumMetadataInteractionsAddVideos; }),
        __metadata("design:type", AlbumMetadataInteractionsAddVideos)
    ], AlbumMetadataInteractions.prototype, "addVideos", void 0);
    return AlbumMetadataInteractions;
}(utils_1.SpeakeasyBase));
exports.AlbumMetadataInteractions = AlbumMetadataInteractions;
/**
 * Metadata about the album.
 */
var AlbumMetadata = /** @class */ (function (_super) {
    __extends(AlbumMetadata, _super);
    function AlbumMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connections" }),
        (0, class_transformer_1.Type)(function () { return AlbumMetadataConnections; }),
        __metadata("design:type", AlbumMetadataConnections)
    ], AlbumMetadata.prototype, "connections", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "interactions" }),
        (0, class_transformer_1.Type)(function () { return AlbumMetadataInteractions; }),
        __metadata("design:type", AlbumMetadataInteractions)
    ], AlbumMetadata.prototype, "interactions", void 0);
    return AlbumMetadata;
}(utils_1.SpeakeasyBase));
exports.AlbumMetadata = AlbumMetadata;
/**
 * Who can view the album:
 *
 * @remarks
 *
 * Option descriptions:
 *  * `anybody` - Anyone can view the album.
 *  * `embed_only` - Only owner can see album, can be embedded off-site
 *  * `password` - Only those with the password can view the album.
 *
 */
var AlbumPrivacyViewEnum;
(function (AlbumPrivacyViewEnum) {
    AlbumPrivacyViewEnum["Anybody"] = "anybody";
    AlbumPrivacyViewEnum["EmbedOnly"] = "embed_only";
    AlbumPrivacyViewEnum["Password"] = "password";
})(AlbumPrivacyViewEnum = exports.AlbumPrivacyViewEnum || (exports.AlbumPrivacyViewEnum = {}));
/**
 * The privacy settings of the album.
 */
var AlbumPrivacy = /** @class */ (function (_super) {
    __extends(AlbumPrivacy, _super);
    function AlbumPrivacy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "password" }),
        __metadata("design:type", String)
    ], AlbumPrivacy.prototype, "password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "view" }),
        __metadata("design:type", String)
    ], AlbumPrivacy.prototype, "view", void 0);
    return AlbumPrivacy;
}(utils_1.SpeakeasyBase));
exports.AlbumPrivacy = AlbumPrivacy;
/**
 * Sort type of the album.
 */
var AlbumSortEnum;
(function (AlbumSortEnum) {
    AlbumSortEnum["AddedFirst"] = "added_first";
    AlbumSortEnum["AddedLast"] = "added_last";
    AlbumSortEnum["Alphabetical"] = "alphabetical";
    AlbumSortEnum["Arranged"] = "arranged";
    AlbumSortEnum["Comments"] = "comments";
    AlbumSortEnum["Likes"] = "likes";
    AlbumSortEnum["Newest"] = "newest";
    AlbumSortEnum["Oldest"] = "oldest";
    AlbumSortEnum["Plays"] = "plays";
})(AlbumSortEnum = exports.AlbumSortEnum || (exports.AlbumSortEnum = {}));
/**
 * The album's color theme preference
 */
var AlbumThemeEnum;
(function (AlbumThemeEnum) {
    AlbumThemeEnum["Dark"] = "dark";
    AlbumThemeEnum["Standard"] = "standard";
})(AlbumThemeEnum = exports.AlbumThemeEnum || (exports.AlbumThemeEnum = {}));
/**
 * The album was created.
 */
var Album = /** @class */ (function (_super) {
    __extends(Album, _super);
    function Album() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_continuous_play" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "allowContinuousPlay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_downloads" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "allowDownloads", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_share" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "allowShare", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "brand_color" }),
        __metadata("design:type", String)
    ], Album.prototype, "brandColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_time" }),
        __metadata("design:type", String)
    ], Album.prototype, "createdTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_logo" }),
        (0, class_transformer_1.Type)(function () { return AlbumPicture; }),
        __metadata("design:type", AlbumPicture)
    ], Album.prototype, "customLogo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Album.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "domain" }),
        __metadata("design:type", String)
    ], Album.prototype, "domain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "duration" }),
        __metadata("design:type", Number)
    ], Album.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "embed" }),
        (0, class_transformer_1.Type)(function () { return AlbumEmbed; }),
        __metadata("design:type", AlbumEmbed)
    ], Album.prototype, "embed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "embed_brand_color" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "embedBrandColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "embed_custom_logo" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "embedCustomLogo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hide_nav" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "hideNav", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hide_vimeo_logo" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "hideVimeoLogo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "layout" }),
        __metadata("design:type", String)
    ], Album.prototype, "layout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "link" }),
        __metadata("design:type", String)
    ], Album.prototype, "link", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metadata" }),
        (0, class_transformer_1.Type)(function () { return AlbumMetadata; }),
        __metadata("design:type", AlbumMetadata)
    ], Album.prototype, "metadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "modified_time" }),
        __metadata("design:type", String)
    ], Album.prototype, "modifiedTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Album.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pictures" }),
        (0, class_transformer_1.Type)(function () { return picture_1.Picture; }),
        __metadata("design:type", picture_1.Picture)
    ], Album.prototype, "pictures", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privacy" }),
        (0, class_transformer_1.Type)(function () { return AlbumPrivacy; }),
        __metadata("design:type", AlbumPrivacy)
    ], Album.prototype, "privacy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_key" }),
        __metadata("design:type", String)
    ], Album.prototype, "resourceKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "review_mode" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "reviewMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sort" }),
        __metadata("design:type", String)
    ], Album.prototype, "sort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "theme" }),
        __metadata("design:type", String)
    ], Album.prototype, "theme", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uri" }),
        __metadata("design:type", String)
    ], Album.prototype, "uri", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], Album.prototype, "url", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "use_custom_domain" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "useCustomDomain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user" }),
        (0, class_transformer_1.Type)(function () { return user_1.User; }),
        __metadata("design:type", user_1.User)
    ], Album.prototype, "user", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "web_brand_color" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "webBrandColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "web_custom_logo" }),
        __metadata("design:type", Boolean)
    ], Album.prototype, "webCustomLogo", void 0);
    return Album;
}(utils_1.SpeakeasyBase));
exports.Album = Album;
