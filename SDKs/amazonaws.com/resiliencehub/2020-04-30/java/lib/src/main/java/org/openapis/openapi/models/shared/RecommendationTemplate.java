/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * RecommendationTemplate - Defines a recommendation template created with the &lt;a&gt;CreateRecommendationTemplate&lt;/a&gt; action.
 */
public class RecommendationTemplate {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appArn")
    public String appArn;
    public RecommendationTemplate withAppArn(String appArn) {
        this.appArn = appArn;
        return this;
    }
    
    @JsonProperty("assessmentArn")
    public String assessmentArn;
    public RecommendationTemplate withAssessmentArn(String assessmentArn) {
        this.assessmentArn = assessmentArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;
    public RecommendationTemplate withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonProperty("format")
    public TemplateFormatEnum format;
    public RecommendationTemplate withFormat(TemplateFormatEnum format) {
        this.format = format;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public RecommendationTemplate withMessage(String message) {
        this.message = message;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public RecommendationTemplate withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("needsReplacements")
    public Boolean needsReplacements;
    public RecommendationTemplate withNeedsReplacements(Boolean needsReplacements) {
        this.needsReplacements = needsReplacements;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recommendationIds")
    public String[] recommendationIds;
    public RecommendationTemplate withRecommendationIds(String[] recommendationIds) {
        this.recommendationIds = recommendationIds;
        return this;
    }
    
    @JsonProperty("recommendationTemplateArn")
    public String recommendationTemplateArn;
    public RecommendationTemplate withRecommendationTemplateArn(String recommendationTemplateArn) {
        this.recommendationTemplateArn = recommendationTemplateArn;
        return this;
    }
    
    @JsonProperty("recommendationTypes")
    public RenderRecommendationTypeEnum[] recommendationTypes;
    public RecommendationTemplate withRecommendationTypes(RenderRecommendationTypeEnum[] recommendationTypes) {
        this.recommendationTypes = recommendationTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;
    public RecommendationTemplate withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonProperty("status")
    public RecommendationTemplateStatusEnum status;
    public RecommendationTemplate withStatus(RecommendationTemplateStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public RecommendationTemplate withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("templatesLocation")
    public S3Location templatesLocation;
    public RecommendationTemplate withTemplatesLocation(S3Location templatesLocation) {
        this.templatesLocation = templatesLocation;
        return this;
    }
    
}
