/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DataQualityResultDescription - Describes a data quality result.
 */
public class DataQualityResultDescription {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataSource")
    public DataSource dataSource;

    public DataQualityResultDescription withDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobName")
    public String jobName;

    public DataQualityResultDescription withJobName(String jobName) {
        this.jobName = jobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobRunId")
    public String jobRunId;

    public DataQualityResultDescription withJobRunId(String jobRunId) {
        this.jobRunId = jobRunId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResultId")
    public String resultId;

    public DataQualityResultDescription withResultId(String resultId) {
        this.resultId = resultId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartedOn")
    public OffsetDateTime startedOn;

    public DataQualityResultDescription withStartedOn(OffsetDateTime startedOn) {
        this.startedOn = startedOn;
        return this;
    }
    
    public DataQualityResultDescription(){}
}
