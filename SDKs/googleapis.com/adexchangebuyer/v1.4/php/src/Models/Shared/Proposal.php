<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Proposal - Represents a proposal in the marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Each field in a proposal can have one of the following setting:
 * 
 * 
 * (readonly) - It is an error to try and set this field. (buyer-readonly) - Only the seller can set this field. (seller-readonly) - Only the buyer can set this field. (updatable) - The field is updatable at all times by either buyer or the seller.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Proposal
{
	#[\JMS\Serializer\Annotation\SerializedName('billedBuyer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Buyer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Buyer $billedBuyer = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('buyer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Buyer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Buyer $buyer = null;
    
    /**
     * Optional contact information of the buyer. (seller-readonly)
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ContactInformation> $buyerContacts
     */
	#[\JMS\Serializer\Annotation\SerializedName('buyerContacts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ContactInformation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $buyerContacts = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('buyerPrivateData')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PrivateData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PrivateData $buyerPrivateData = null;
    
    /**
     * IDs of DBM advertisers permission to this proposal.
     * 
     * @var ?array<string> $dbmAdvertiserIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('dbmAdvertiserIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dbmAdvertiserIds = null;
    
    /**
     * When an proposal is in an accepted state, indicates whether the buyer has signed off. Once both sides have signed off on a deal, the proposal can be finalized by the seller. (seller-readonly)
     * 
     * @var ?bool $hasBuyerSignedOff
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasBuyerSignedOff')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasBuyerSignedOff = null;
    
    /**
     * When an proposal is in an accepted state, indicates whether the buyer has signed off Once both sides have signed off on a deal, the proposal can be finalized by the seller. (buyer-readonly)
     * 
     * @var ?bool $hasSellerSignedOff
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasSellerSignedOff')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasSellerSignedOff = null;
    
    /**
     * What exchange will provide this inventory (readonly, except on create).
     * 
     * @var ?string $inventorySource
     */
	#[\JMS\Serializer\Annotation\SerializedName('inventorySource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $inventorySource = null;
    
    /**
     * True if the proposal is being renegotiated (readonly).
     * 
     * @var ?bool $isRenegotiating
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRenegotiating')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isRenegotiating = null;
    
    /**
     * True, if the buyside inventory setup is complete for this proposal. (readonly, except via OrderSetupCompleted action) Deprecated in favor of deal level setup complete flag.
     * 
     * @var ?bool $isSetupComplete
     */
	#[\JMS\Serializer\Annotation\SerializedName('isSetupComplete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSetupComplete = null;
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#proposal".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * List of labels associated with the proposal. (readonly)
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MarketplaceLabel> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MarketplaceLabel>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * The role of the last user that either updated the proposal or left a comment. (readonly)
     * 
     * @var ?string $lastUpdaterOrCommentorRole
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastUpdaterOrCommentorRole')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastUpdaterOrCommentorRole = null;
    
    /**
     * The name for the proposal (updatable)
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Optional negotiation id if this proposal is a preferred deal proposal.
     * 
     * @var ?string $negotiationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('negotiationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $negotiationId = null;
    
    /**
     * Indicates whether the buyer/seller created the proposal.(readonly)
     * 
     * @var ?string $originatorRole
     */
	#[\JMS\Serializer\Annotation\SerializedName('originatorRole')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originatorRole = null;
    
    /**
     * Optional private auction id if this proposal is a private auction proposal.
     * 
     * @var ?string $privateAuctionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateAuctionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $privateAuctionId = null;
    
    /**
     * The unique id of the proposal. (readonly).
     * 
     * @var ?string $proposalId
     */
	#[\JMS\Serializer\Annotation\SerializedName('proposalId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $proposalId = null;
    
    /**
     * The current state of the proposal. (readonly)
     * 
     * @var ?string $proposalState
     */
	#[\JMS\Serializer\Annotation\SerializedName('proposalState')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $proposalState = null;
    
    /**
     * The revision number for the proposal (readonly).
     * 
     * @var ?string $revisionNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('revisionNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revisionNumber = null;
    
    /**
     * The time (ms since epoch) when the proposal was last revised (readonly).
     * 
     * @var ?string $revisionTimeMs
     */
	#[\JMS\Serializer\Annotation\SerializedName('revisionTimeMs')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revisionTimeMs = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('seller')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Seller')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Seller $seller = null;
    
    /**
     * Optional contact information of the seller (buyer-readonly).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ContactInformation> $sellerContacts
     */
	#[\JMS\Serializer\Annotation\SerializedName('sellerContacts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ContactInformation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sellerContacts = null;
    
	public function __construct()
	{
		$this->billedBuyer = null;
		$this->buyer = null;
		$this->buyerContacts = null;
		$this->buyerPrivateData = null;
		$this->dbmAdvertiserIds = null;
		$this->hasBuyerSignedOff = null;
		$this->hasSellerSignedOff = null;
		$this->inventorySource = null;
		$this->isRenegotiating = null;
		$this->isSetupComplete = null;
		$this->kind = null;
		$this->labels = null;
		$this->lastUpdaterOrCommentorRole = null;
		$this->name = null;
		$this->negotiationId = null;
		$this->originatorRole = null;
		$this->privateAuctionId = null;
		$this->proposalId = null;
		$this->proposalState = null;
		$this->revisionNumber = null;
		$this->revisionTimeMs = null;
		$this->seller = null;
		$this->sellerContacts = null;
	}
}
