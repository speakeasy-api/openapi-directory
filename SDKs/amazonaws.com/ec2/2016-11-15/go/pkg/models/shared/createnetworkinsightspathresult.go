// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum - The protocol.
type CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum string

const (
	CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnumTCP CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum = "tcp"
	CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnumUDP CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum = "udp"
)

func (e *CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tcp":
		fallthrough
	case "udp":
		*e = CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum: %s", s)
	}
}

// CreateNetworkInsightsPathResultNetworkInsightsPathTags - Describes a tag.
type CreateNetworkInsightsPathResultNetworkInsightsPathTags struct {
	Key   *string
	Value *string
}

// CreateNetworkInsightsPathResultNetworkInsightsPath - Information about the path.
type CreateNetworkInsightsPathResultNetworkInsightsPath struct {
	CreatedDate            *time.Time
	Destination            *string
	DestinationArn         *string
	DestinationIP          *string
	DestinationPort        *int64
	NetworkInsightsPathArn *string
	NetworkInsightsPathID  *string
	Protocol               *CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum
	Source                 *string
	SourceArn              *string
	SourceIP               *string
	Tags                   []CreateNetworkInsightsPathResultNetworkInsightsPathTags
}

// CreateNetworkInsightsPathResult - Success
type CreateNetworkInsightsPathResult struct {
	NetworkInsightsPath *CreateNetworkInsightsPathResultNetworkInsightsPath
}
