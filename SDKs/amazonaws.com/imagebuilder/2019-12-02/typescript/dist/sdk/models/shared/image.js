"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Image = void 0;
var utils_1 = require("../../../internal/utils");
var buildtypeenum_1 = require("./buildtypeenum");
var containerrecipe_1 = require("./containerrecipe");
var distributionconfiguration_1 = require("./distributionconfiguration");
var imagerecipe_1 = require("./imagerecipe");
var imagesourceenum_1 = require("./imagesourceenum");
var imagestate_1 = require("./imagestate");
var imagetestsconfiguration_1 = require("./imagetestsconfiguration");
var imagetypeenum_1 = require("./imagetypeenum");
var infrastructureconfiguration_1 = require("./infrastructureconfiguration");
var outputresources_1 = require("./outputresources");
var platformenum_1 = require("./platformenum");
var class_transformer_1 = require("class-transformer");
/**
 * An Image Builder image. You must specify exactly one recipe for the image â€“ either a container recipe (<code>containerRecipe</code>), which creates a container image, or an image recipe (<code>imageRecipe</code>), which creates an AMI.
 */
var Image = /** @class */ (function (_super) {
    __extends(Image, _super);
    function Image() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "arn" }),
        __metadata("design:type", String)
    ], Image.prototype, "arn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildType" }),
        __metadata("design:type", String)
    ], Image.prototype, "buildType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "containerRecipe" }),
        (0, class_transformer_1.Type)(function () { return containerrecipe_1.ContainerRecipe; }),
        __metadata("design:type", containerrecipe_1.ContainerRecipe)
    ], Image.prototype, "containerRecipe", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateCreated" }),
        __metadata("design:type", String)
    ], Image.prototype, "dateCreated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "distributionConfiguration" }),
        (0, class_transformer_1.Type)(function () { return distributionconfiguration_1.DistributionConfiguration; }),
        __metadata("design:type", distributionconfiguration_1.DistributionConfiguration)
    ], Image.prototype, "distributionConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enhancedImageMetadataEnabled" }),
        __metadata("design:type", Boolean)
    ], Image.prototype, "enhancedImageMetadataEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "imageRecipe" }),
        (0, class_transformer_1.Type)(function () { return imagerecipe_1.ImageRecipe; }),
        __metadata("design:type", imagerecipe_1.ImageRecipe)
    ], Image.prototype, "imageRecipe", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "imageSource" }),
        __metadata("design:type", String)
    ], Image.prototype, "imageSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "imageTestsConfiguration" }),
        (0, class_transformer_1.Type)(function () { return imagetestsconfiguration_1.ImageTestsConfiguration; }),
        __metadata("design:type", imagetestsconfiguration_1.ImageTestsConfiguration)
    ], Image.prototype, "imageTestsConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "infrastructureConfiguration" }),
        (0, class_transformer_1.Type)(function () { return infrastructureconfiguration_1.InfrastructureConfiguration; }),
        __metadata("design:type", infrastructureconfiguration_1.InfrastructureConfiguration)
    ], Image.prototype, "infrastructureConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Image.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "osVersion" }),
        __metadata("design:type", String)
    ], Image.prototype, "osVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "outputResources" }),
        (0, class_transformer_1.Type)(function () { return outputresources_1.OutputResources; }),
        __metadata("design:type", outputresources_1.OutputResources)
    ], Image.prototype, "outputResources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "platform" }),
        __metadata("design:type", String)
    ], Image.prototype, "platform", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourcePipelineArn" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourcePipelineArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourcePipelineName" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourcePipelineName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        (0, class_transformer_1.Type)(function () { return imagestate_1.ImageState; }),
        __metadata("design:type", imagestate_1.ImageState)
    ], Image.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        __metadata("design:type", Object)
    ], Image.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Image.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version" }),
        __metadata("design:type", String)
    ], Image.prototype, "version", void 0);
    return Image;
}(utils_1.SpeakeasyBase));
exports.Image = Image;
