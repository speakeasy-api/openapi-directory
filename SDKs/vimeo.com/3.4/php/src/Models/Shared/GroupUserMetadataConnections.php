<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GroupUserMetadataConnections - The list of resource URIs related to the user.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GroupUserMetadataConnections
{
    /**
     * Information about the albums created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsAlbums $albums
     */
	#[\JMS\Serializer\Annotation\SerializedName('albums')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsAlbums')]
    public GroupUserMetadataConnectionsAlbums $albums;
    
    /**
     * Information about the appearances of this user in other videos.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsAppearances $appearances
     */
	#[\JMS\Serializer\Annotation\SerializedName('appearances')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsAppearances')]
    public GroupUserMetadataConnectionsAppearances $appearances;
    
    /**
     * Information on the users that the current user has blocked. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsBlock $block
     */
	#[\JMS\Serializer\Annotation\SerializedName('block')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsBlock')]
    public GroupUserMetadataConnectionsBlock $block;
    
    /**
     * Information about this user's followed categories.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsCategories $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsCategories')]
    public GroupUserMetadataConnectionsCategories $categories;
    
    /**
     * Information about this user's subscribed channels.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsChannels $channels
     */
	#[\JMS\Serializer\Annotation\SerializedName('channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsChannels')]
    public GroupUserMetadataConnectionsChannels $channels;
    
    /**
     * Information about this user's feed.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFeed $feed
     */
	#[\JMS\Serializer\Annotation\SerializedName('feed')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFeed')]
    public GroupUserMetadataConnectionsFeed $feed;
    
    /**
     * Information about this user's folders.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFolders $folders
     */
	#[\JMS\Serializer\Annotation\SerializedName('folders')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFolders')]
    public GroupUserMetadataConnectionsFolders $folders;
    
    /**
     * Information about the user's followers.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFollowers $followers
     */
	#[\JMS\Serializer\Annotation\SerializedName('followers')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFollowers')]
    public GroupUserMetadataConnectionsFollowers $followers;
    
    /**
     * Information about the users that the current user is following.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFollowing $following
     */
	#[\JMS\Serializer\Annotation\SerializedName('following')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFollowing')]
    public GroupUserMetadataConnectionsFollowing $following;
    
    /**
     * Information about the groups created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsGroups $groups
     */
	#[\JMS\Serializer\Annotation\SerializedName('groups')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsGroups')]
    public GroupUserMetadataConnectionsGroups $groups;
    
    /**
     * Information about the videos that this user has liked.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsLikes $likes
     */
	#[\JMS\Serializer\Annotation\SerializedName('likes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsLikes')]
    public GroupUserMetadataConnectionsLikes $likes;
    
    /**
     * Information about the channels that this user moderates.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsModeratedChannels $moderatedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('moderated_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsModeratedChannels')]
    public GroupUserMetadataConnectionsModeratedChannels $moderatedChannels;
    
    /**
     * Information about this user's portraits.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsPictures $pictures
     */
	#[\JMS\Serializer\Annotation\SerializedName('pictures')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsPictures')]
    public GroupUserMetadataConnectionsPictures $pictures;
    
    /**
     * Information about this user's portfolios.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsPortfolios $portfolios
     */
	#[\JMS\Serializer\Annotation\SerializedName('portfolios')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsPortfolios')]
    public GroupUserMetadataConnectionsPortfolios $portfolios;
    
    /**
     * A collection of recommended channels for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsRecommendedChannels $recommendedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsRecommendedChannels')]
    public GroupUserMetadataConnectionsRecommendedChannels $recommendedChannels;
    
    /**
     * A Collection of recommended users for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsRecommendedUsers $recommendedUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_users')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsRecommendedUsers')]
    public GroupUserMetadataConnectionsRecommendedUsers $recommendedUsers;
    
    /**
     * Information about the videos that have been shared with this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsShared $shared
     */
	#[\JMS\Serializer\Annotation\SerializedName('shared')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsShared')]
    public GroupUserMetadataConnectionsShared $shared;
    
    /**
     * Information about the videos uploaded by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsVideos $videos
     */
	#[\JMS\Serializer\Annotation\SerializedName('videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsVideos')]
    public GroupUserMetadataConnectionsVideos $videos;
    
    /**
     * Information about the videos that this user has watched.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsWatchedVideos $watchedVideos
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched_videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsWatchedVideos')]
    public GroupUserMetadataConnectionsWatchedVideos $watchedVideos;
    
    /**
     * Information about the videos that this user wants to watch later.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsWatchlater $watchlater
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchlater')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsWatchlater')]
    public GroupUserMetadataConnectionsWatchlater $watchlater;
    
	public function __construct()
	{
		$this->albums = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsAlbums();
		$this->appearances = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsAppearances();
		$this->block = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsBlock();
		$this->categories = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsCategories();
		$this->channels = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsChannels();
		$this->feed = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFeed();
		$this->folders = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFolders();
		$this->followers = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFollowers();
		$this->following = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsFollowing();
		$this->groups = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsGroups();
		$this->likes = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsLikes();
		$this->moderatedChannels = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsModeratedChannels();
		$this->pictures = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsPictures();
		$this->portfolios = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsPortfolios();
		$this->recommendedChannels = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsRecommendedChannels();
		$this->recommendedUsers = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsRecommendedUsers();
		$this->shared = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsShared();
		$this->videos = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsVideos();
		$this->watchedVideos = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsWatchedVideos();
		$this->watchlater = new \OpenAPI\OpenAPI\Models\Shared\GroupUserMetadataConnectionsWatchlater();
	}
}
