// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum - Indicates Ekm provisioning error if any.
type GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum string

const (
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnumEkmProvisioningErrorDomainUnspecified GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum = "EKM_PROVISIONING_ERROR_DOMAIN_UNSPECIFIED"
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnumUnspecifiedError                      GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum = "UNSPECIFIED_ERROR"
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnumGoogleServerError                     GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum = "GOOGLE_SERVER_ERROR"
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnumExternalUserError                     GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum = "EXTERNAL_USER_ERROR"
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnumExternalPartnerError                  GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum = "EXTERNAL_PARTNER_ERROR"
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnumTimeoutError                          GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum = "TIMEOUT_ERROR"
)

func (e *GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EKM_PROVISIONING_ERROR_DOMAIN_UNSPECIFIED":
		fallthrough
	case "UNSPECIFIED_ERROR":
		fallthrough
	case "GOOGLE_SERVER_ERROR":
		fallthrough
	case "EXTERNAL_USER_ERROR":
		fallthrough
	case "EXTERNAL_PARTNER_ERROR":
		fallthrough
	case "TIMEOUT_ERROR":
		*e = GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum: %s", s)
	}
}

// GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum - Indicates Ekm enrollment Provisioning of a given workload.
type GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum string

const (
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnumEkmProvisioningStateUnspecified GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum = "EKM_PROVISIONING_STATE_UNSPECIFIED"
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnumEkmProvisioningStatePending     GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum = "EKM_PROVISIONING_STATE_PENDING"
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnumEkmProvisioningStateFailed      GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum = "EKM_PROVISIONING_STATE_FAILED"
	GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnumEkmProvisioningStateCompleted   GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum = "EKM_PROVISIONING_STATE_COMPLETED"
)

func (e *GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EKM_PROVISIONING_STATE_UNSPECIFIED":
		fallthrough
	case "EKM_PROVISIONING_STATE_PENDING":
		fallthrough
	case "EKM_PROVISIONING_STATE_FAILED":
		fallthrough
	case "EKM_PROVISIONING_STATE_COMPLETED":
		*e = GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum: %s", s)
	}
}

// GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponse - External key management systems(EKM) Provisioning response
type GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponse struct {
	// Indicates Ekm provisioning error if any.
	EkmProvisioningErrorDomain *GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningErrorDomainEnum `json:"ekmProvisioningErrorDomain,omitempty"`
	// Detailed error message if Ekm provisioning fails
	EkmProvisioningErrorMessage *string `json:"ekmProvisioningErrorMessage,omitempty"`
	// Indicates Ekm enrollment Provisioning of a given workload.
	EkmProvisioningState *GoogleCloudAssuredworkloadsV1WorkloadEkmProvisioningResponseEkmProvisioningStateEnum `json:"ekmProvisioningState,omitempty"`
}
