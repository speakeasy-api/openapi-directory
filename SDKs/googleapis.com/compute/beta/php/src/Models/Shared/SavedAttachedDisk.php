<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SavedAttachedDisk - DEPRECATED: Please use compute#savedDisk instead. An instance-attached disk resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SavedAttachedDisk
{
    /**
     * Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
     * 
     * @var ?bool $autoDelete
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoDelete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoDelete = null;
    
    /**
     * Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
     * 
     * @var ?bool $boot
     */
	#[\JMS\Serializer\Annotation\SerializedName('boot')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $boot = null;
    
    /**
     * Specifies the name of the disk attached to the source instance.
     * 
     * @var ?string $deviceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deviceName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('diskEncryptionKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomerEncryptionKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomerEncryptionKey $diskEncryptionKey = null;
    
    /**
     * The size of the disk in base-2 GB.
     * 
     * @var ?string $diskSizeGb
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskSizeGb')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskSizeGb = null;
    
    /**
     * [Output Only] URL of the disk type resource. For example: projects/project /zones/zone/diskTypes/pd-standard or pd-ssd
     * 
     * @var ?string $diskType
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskType = null;
    
    /**
     * A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GuestOsFeature> $guestOsFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestOsFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GuestOsFeature>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $guestOsFeatures = null;
    
    /**
     * Specifies zero-based index of the disk that is attached to the source instance.
     * 
     * @var ?int $index
     */
	#[\JMS\Serializer\Annotation\SerializedName('index')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $index = null;
    
    /**
     * Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SavedAttachedDiskInterfaceEnum $interface
     */
	#[\JMS\Serializer\Annotation\SerializedName('interface')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SavedAttachedDiskInterfaceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SavedAttachedDiskInterfaceEnum $interface = null;
    
    /**
     * [Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * [Output Only] Any valid publicly visible licenses.
     * 
     * @var ?array<string> $licenses
     */
	#[\JMS\Serializer\Annotation\SerializedName('licenses')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $licenses = null;
    
    /**
     * The mode in which this disk is attached to the source instance, either READ_WRITE or READ_ONLY.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SavedAttachedDiskModeEnum $mode
     */
	#[\JMS\Serializer\Annotation\SerializedName('mode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SavedAttachedDiskModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SavedAttachedDiskModeEnum $mode = null;
    
    /**
     * Specifies a URL of the disk attached to the source instance.
     * 
     * @var ?string $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $source = null;
    
    /**
     * [Output Only] A size of the storage used by the disk's snapshot by this machine image.
     * 
     * @var ?string $storageBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('storageBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $storageBytes = null;
    
    /**
     * [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SavedAttachedDiskStorageBytesStatusEnum $storageBytesStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('storageBytesStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SavedAttachedDiskStorageBytesStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SavedAttachedDiskStorageBytesStatusEnum $storageBytesStatus = null;
    
    /**
     * Specifies the type of the attached disk, either SCRATCH or PERSISTENT.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SavedAttachedDiskTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SavedAttachedDiskTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SavedAttachedDiskTypeEnum $type = null;
    
	public function __construct()
	{
		$this->autoDelete = null;
		$this->boot = null;
		$this->deviceName = null;
		$this->diskEncryptionKey = null;
		$this->diskSizeGb = null;
		$this->diskType = null;
		$this->guestOsFeatures = null;
		$this->index = null;
		$this->interface = null;
		$this->kind = null;
		$this->licenses = null;
		$this->mode = null;
		$this->source = null;
		$this->storageBytes = null;
		$this->storageBytesStatus = null;
		$this->type = null;
	}
}
