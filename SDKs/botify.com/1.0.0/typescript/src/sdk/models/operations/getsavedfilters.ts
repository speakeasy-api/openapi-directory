/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetSavedFiltersRequest extends SpeakeasyBase {
  /**
   * Page Number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Project's identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project_slug",
  })
  projectSlug: string;

  /**
   * Page Size
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=size" })
  size?: number;

  /**
   * User's identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

/**
 * Successful operation
 */
export class GetSavedFilters200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  @SpeakeasyMetadata({ elemType: shared.ProjectSavedFilter })
  @Expose({ name: "results" })
  @Type(() => shared.ProjectSavedFilter)
  results?: shared.ProjectSavedFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;
}

export class GetSavedFiltersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * error payload
   */
  @SpeakeasyMetadata()
  defaultPayload?: shared.DefaultPayload;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getSavedFilters200ApplicationJSONObject?: GetSavedFilters200ApplicationJSON;
}
