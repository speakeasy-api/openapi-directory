<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PublicSubscriptionStatus - The status of a subscription for a contact.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PublicSubscriptionStatus
{
    /**
     * The ID of the brand that the subscription is associated with, if there is one.
     * 
     * @var ?int $brandId
     */
	#[\JMS\Serializer\Annotation\SerializedName('brandId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $brandId = null;
    
    /**
     * A description of the subscription.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * The ID for the subscription.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The legal reason for the current status of the subscription.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PublicSubscriptionStatusLegalBasisEnum $legalBasis
     */
	#[\JMS\Serializer\Annotation\SerializedName('legalBasis')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PublicSubscriptionStatusLegalBasisEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PublicSubscriptionStatusLegalBasisEnum $legalBasis = null;
    
    /**
     * A more detailed explanation to go with the legal basis.
     * 
     * @var ?string $legalBasisExplanation
     */
	#[\JMS\Serializer\Annotation\SerializedName('legalBasisExplanation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $legalBasisExplanation = null;
    
    /**
     * The name of the subscription.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The name of the preferences group that the subscription is associated with.
     * 
     * @var ?string $preferenceGroupName
     */
	#[\JMS\Serializer\Annotation\SerializedName('preferenceGroupName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $preferenceGroupName = null;
    
    /**
     * Where the status is determined from e.g. PORTAL_WIDE_STATUS if the contact opted out from the portal.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PublicSubscriptionStatusSourceOfStatusEnum $sourceOfStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceOfStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PublicSubscriptionStatusSourceOfStatusEnum>')]
    public PublicSubscriptionStatusSourceOfStatusEnum $sourceOfStatus;
    
    /**
     * Whether the contact is subscribed.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PublicSubscriptionStatusStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PublicSubscriptionStatusStatusEnum>')]
    public PublicSubscriptionStatusStatusEnum $status;
    
	public function __construct()
	{
		$this->brandId = null;
		$this->description = "";
		$this->id = "";
		$this->legalBasis = null;
		$this->legalBasisExplanation = null;
		$this->name = "";
		$this->preferenceGroupName = null;
		$this->sourceOfStatus = \OpenAPI\OpenAPI\Models\Shared\PublicSubscriptionStatusSourceOfStatusEnum::PORTAL_WIDE_STATUS;
		$this->status = \OpenAPI\OpenAPI\Models\Shared\PublicSubscriptionStatusStatusEnum::SUBSCRIBED;
	}
}
