/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DateTimeField {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("durationField")
    public DurationField durationField;
    public DateTimeField withDurationField(DurationField durationField) {
        this.durationField = durationField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leapDurationField")
    public DurationField leapDurationField;
    public DateTimeField withLeapDurationField(DurationField leapDurationField) {
        this.leapDurationField = leapDurationField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lenient")
    public Boolean lenient;
    public DateTimeField withLenient(Boolean lenient) {
        this.lenient = lenient;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumValue")
    public Integer maximumValue;
    public DateTimeField withMaximumValue(Integer maximumValue) {
        this.maximumValue = maximumValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimumValue")
    public Integer minimumValue;
    public DateTimeField withMinimumValue(Integer minimumValue) {
        this.minimumValue = minimumValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public DateTimeField withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rangeDurationField")
    public DurationField rangeDurationField;
    public DateTimeField withRangeDurationField(DurationField rangeDurationField) {
        this.rangeDurationField = rangeDurationField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supported")
    public Boolean supported;
    public DateTimeField withSupported(Boolean supported) {
        this.supported = supported;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public DateTimeFieldType type;
    public DateTimeField withType(DateTimeFieldType type) {
        this.type = type;
        return this;
    }
    
}
