/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UpdateCustomObjectCusotmField } from "./updatecustomobjectcusotmfield";
import { Expose, Type } from "class-transformer";

/**
 * The cardinality of the relationship from this object to another object.
 *
 * @remarks
 *
 * Only the `manyToOne` cardinality can be used when creating relationships.  A relationship with `oneToMany` cardinality is created implicitly when a `manyToOne` relationship is created.
 *
 * A custom object definition can have a maximum of 2 `manyToOne` relationships.
 *
 */
export enum CustomObjectDefinitionUpdateActionRequestRelationshipCardinalityEnum {
  ManyToOne = "manyToOne",
}

export class CustomObjectDefinitionUpdateActionRequestRelationshipRecordConstraintsCreate extends SpeakeasyBase {
  /**
   * Specifies whether Zuora validates the values of mapped fields
   *
   * @remarks
   * in custom object records.
   *
   * By default, Zuora validates the values of mapped fields
   * in custom object records. For example, if the
   * custom object definition has a field called `AccountId__c`
   * that is mapped to the `Id` field of the `account` object,
   * Zuora verifies that the value of `AccountId__c` is a valid
   * account ID when a custom object record is created.
   * If the value of `AccountId__c` is not a valid account ID,
   * the operation fails.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enforceValidMapping" })
  enforceValidMapping?: boolean;
}

/**
 * Specifies contraints to apply to custom object records.
 *
 * @remarks
 *
 */
export class CustomObjectDefinitionUpdateActionRequestRelationshipRecordConstraints extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "create" })
  @Type(
    () =>
      CustomObjectDefinitionUpdateActionRequestRelationshipRecordConstraintsCreate
  )
  create?: CustomObjectDefinitionUpdateActionRequestRelationshipRecordConstraintsCreate;
}

export class CustomObjectDefinitionUpdateActionRequestRelationship extends SpeakeasyBase {
  /**
   * The cardinality of the relationship from this object to another object.
   *
   * @remarks
   *
   * Only the `manyToOne` cardinality can be used when creating relationships.  A relationship with `oneToMany` cardinality is created implicitly when a `manyToOne` relationship is created.
   *
   * A custom object definition can have a maximum of 2 `manyToOne` relationships.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cardinality" })
  cardinality?: CustomObjectDefinitionUpdateActionRequestRelationshipCardinalityEnum;

  /**
   * Field mappings in the form of `<this-object-field-name>`: `<other-object-field-name>`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields: Record<string, string>;

  /**
   * The namespace where the related object is located
   */
  @SpeakeasyMetadata()
  @Expose({ name: "namespace" })
  namespace: string;

  /**
   * The API name of the related object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  object: string;

  /**
   * Specifies contraints to apply to custom object records.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recordConstraints" })
  @Type(
    () => CustomObjectDefinitionUpdateActionRequestRelationshipRecordConstraints
  )
  recordConstraints?: CustomObjectDefinitionUpdateActionRequestRelationshipRecordConstraints;
}

/**
 * The type of the updating action on a custom object definition
 */
export enum CustomObjectDefinitionUpdateActionRequestTypeEnum {
  AddField = "addField",
  DeleteField = "deleteField",
  UpdateField = "updateField",
  UpdateObject = "updateObject",
  RenameField = "renameField",
  AddRelationship = "addRelationship",
  DeleteRelationship = "deleteRelationship",
}

export class CustomObjectDefinitionUpdateActionRequest extends SpeakeasyBase {
  /**
   * Optional property for `updateObject` action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * A reference to a field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  @Type(() => UpdateCustomObjectCusotmField)
  field?: UpdateCustomObjectCusotmField;

  /**
   * Optional property for `updateObject` action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * The namespace of the custom object definition to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "namespace" })
  namespace: string;

  /**
   * The API name of the custom object definition to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  object: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationship" })
  @Type(() => CustomObjectDefinitionUpdateActionRequestRelationship)
  relationship?: CustomObjectDefinitionUpdateActionRequestRelationship;

  /**
   * The type of the updating action on a custom object definition
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CustomObjectDefinitionUpdateActionRequestTypeEnum;
}
