"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Any, Optional

class IngestionResultStatusEnum(str, Enum):
    r"""Status of the result"""
    ERROR = 'Error'
    SUCCESS_WARNING = 'SuccessWarning'
    SUCCESS = 'Success'


@dataclasses.dataclass
class IngestionResult:
    r"""This class defines the IngestionResult on the Publish API"""
    
    status: IngestionResultStatusEnum = dataclasses.field()
    r"""Status of the result"""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Id of the entity ingested in the discovery api"""  
    ignored_properties: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""List properties that are ignored in the validation"""  
    invalid_properties: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""List of invalid properties"""  
    invalid_values: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""List of invalid values"""  
    missing_properties: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""List of properties that should be present in your entity to ease its dicovery"""  
    unknown_properties: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""List of unknown properties that will be dropped"""  
    