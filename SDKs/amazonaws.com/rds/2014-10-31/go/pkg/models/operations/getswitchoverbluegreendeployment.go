// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETSwitchoverBlueGreenDeploymentActionEnum
type GETSwitchoverBlueGreenDeploymentActionEnum string

const (
	GETSwitchoverBlueGreenDeploymentActionEnumSwitchoverBlueGreenDeployment GETSwitchoverBlueGreenDeploymentActionEnum = "SwitchoverBlueGreenDeployment"
)

func (e GETSwitchoverBlueGreenDeploymentActionEnum) ToPointer() *GETSwitchoverBlueGreenDeploymentActionEnum {
	return &e
}

func (e *GETSwitchoverBlueGreenDeploymentActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SwitchoverBlueGreenDeployment":
		*e = GETSwitchoverBlueGreenDeploymentActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSwitchoverBlueGreenDeploymentActionEnum: %v", v)
	}
}

// GETSwitchoverBlueGreenDeploymentVersionEnum
type GETSwitchoverBlueGreenDeploymentVersionEnum string

const (
	GETSwitchoverBlueGreenDeploymentVersionEnumTwoThousandAndFourteen1031 GETSwitchoverBlueGreenDeploymentVersionEnum = "2014-10-31"
)

func (e GETSwitchoverBlueGreenDeploymentVersionEnum) ToPointer() *GETSwitchoverBlueGreenDeploymentVersionEnum {
	return &e
}

func (e *GETSwitchoverBlueGreenDeploymentVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = GETSwitchoverBlueGreenDeploymentVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSwitchoverBlueGreenDeploymentVersionEnum: %v", v)
	}
}

type GETSwitchoverBlueGreenDeploymentRequest struct {
	Action GETSwitchoverBlueGreenDeploymentActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The blue/green deployment identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing blue/green deployment identifier.</p> </li> </ul>
	BlueGreenDeploymentIdentifier string `queryParam:"style=form,explode=true,name=BlueGreenDeploymentIdentifier"`
	// <p>The amount of time, in seconds, for the switchover to complete. The default is 300.</p> <p>If the switchover takes longer than the specified duration, then any changes are rolled back, and no changes are made to the environments.</p>
	SwitchoverTimeout *int64                                      `queryParam:"style=form,explode=true,name=SwitchoverTimeout"`
	Version           GETSwitchoverBlueGreenDeploymentVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETSwitchoverBlueGreenDeploymentResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
