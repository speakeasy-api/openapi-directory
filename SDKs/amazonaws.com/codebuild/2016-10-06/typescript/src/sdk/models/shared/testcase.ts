/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 *  Information about a test case created using a framework such as NUnit or Cucumber. A test case might be a unit test or a configuration test.
 */
export class TestCase extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "durationInNanoSeconds" })
  durationInNanoSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "expired" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expired?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reportArn" })
  reportArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "testRawDataPath" })
  testRawDataPath?: string;
}
