/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateRoleServerList = [
  "https://ip-messaging.twilio.com",
] as const;

export class CreateRoleSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateRoleCreateRoleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName: string;

  @SpeakeasyMetadata({ data: "form, name=Permission" })
  permission: string[];

  @SpeakeasyMetadata({ data: "form, name=Type" })
  type: shared.RoleEnumRoleTypeEnum;
}

export class CreateRoleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateRoleCreateRoleRequest;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class CreateRoleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  ipMessagingV1ServiceRole?: shared.IpMessagingV1ServiceRole;
}
