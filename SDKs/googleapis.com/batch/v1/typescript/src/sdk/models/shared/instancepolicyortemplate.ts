/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstancePolicy } from "./instancepolicy";
import { Expose, Type } from "class-transformer";

/**
 * Either an InstancePolicy or an instance template.
 */
export class InstancePolicyOrTemplate extends SpeakeasyBase {
  /**
   * Set this field true if users want Batch to help fetch drivers from a third party location and install them for GPUs specified in policy.accelerators or instance_template on their behalf. Default is false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "installGpuDrivers" })
  installGpuDrivers?: boolean;

  /**
   * Name of an instance template used to create VMs. Named the field as 'instance_template' instead of 'template' to avoid c++ keyword conflict.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceTemplate" })
  instanceTemplate?: string;

  /**
   * InstancePolicy describes an instance type and resources attached to each VM created by this InstancePolicy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policy" })
  @Type(() => InstancePolicy)
  policy?: InstancePolicy;
}
