/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetPaymentDetailsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=paymentUuid",
  })
  paymentUuid: string;
}

/**
 * The three letter code for the currency - either `EUR` or `GBP`.
 */
export enum GetPaymentDetailsPaymentRequestCurrencyCodeEnum {
  Eur = "EUR",
  Gbp = "GBP",
}

/**
 * The currency.
 */
export class GetPaymentDetailsPaymentRequestCurrency extends SpeakeasyBase {
  /**
   * The three letter code for the currency - either `EUR` or `GBP`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: GetPaymentDetailsPaymentRequestCurrencyCodeEnum;

  /**
   * The name of the currency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}

export class GetPaymentDetailsPaymentRequestOrderDetails extends SpeakeasyBase {
  /**
   * This is your own comment for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment1" })
  comment1?: string;

  /**
   * This is your own comment for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment2" })
  comment2?: string;

  /**
   * Use this field to store a customer number for the transaction (for example).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerNumber" })
  customerNumber?: string;

  /**
   * The first line of the delivery address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryAddressLine1" })
  deliveryAddressLine1?: string;

  /**
   * The second line of the delivery address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryAddressLine2" })
  deliveryAddressLine2?: string;

  /**
   * Delivery address city
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryCity" })
  deliveryCity?: string;

  /**
   * 2-digit code for the country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryCountry" })
  deliveryCountry?: string;

  /**
   * Delivery address post code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryPostCode" })
  deliveryPostCode?: string;

  /**
   * This is a reference you use to uniquely identify each of your customers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantCustomerIdentification" })
  merchantCustomerIdentification?: string;

  /**
   * Your Merchant Number (if applicable).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantNumber" })
  merchantNumber?: string;

  /**
   * Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderId" })
  orderId?: string;

  /**
   * Use this field to store a product id for the transaction (for example).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  /**
   * Use this field to store any other reference for the transaction (for example, a phone number).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variableReference" })
  variableReference?: string;
}

/**
 * The status of the transaction
 */
export enum GetPaymentDetailsPaymentRequestStatusEnum {
  AwaitingAuthorisation = "AWAITING_AUTHORISATION",
  Authorised = "AUTHORISED",
  AwaitingMultiAuthorisation = "AWAITING_MULTI_AUTHORISATION",
  NotAuthorised = "NOT_AUTHORISED",
  Paid = "PAID",
  Rejected = "REJECTED",
  Accepted = "ACCEPTED",
  Received = "RECEIVED",
}

/**
 * The type of payment request payment
 */
export enum GetPaymentDetailsPaymentRequestTransactionTypeEnum {
  RefundRequest = "REFUND_REQUEST",
  Payment = "PAYMENT",
}

/**
 * The type of Fire Open Payment that was created
 */
export enum GetPaymentDetailsPaymentRequestTypeEnum {
  Other = "OTHER",
}

/**
 * The Payment Request details object
 */
export class GetPaymentDetailsPaymentRequest extends SpeakeasyBase {
  /**
   * These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalFields" })
  additionalFields?: string;

  /**
   * The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collectFields" })
  collectFields?: string;

  /**
   * The currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  @Type(() => GetPaymentDetailsPaymentRequestCurrency)
  currency?: GetPaymentDetailsPaymentRequestCurrency;

  /**
   * A public facing description of the request. This will be shown to the user when they tap or scan the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * This is the expiry of the payment request. After this time, the payment cannot be paid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiry" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiry?: Date;

  /**
   * The ican of the account to collect the funds into. Must be one of your fire.com Accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icanTo" })
  icanTo?: number;

  /**
   * For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mandatoryFields" })
  mandatoryFields?: string;

  /**
   * The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxNumberPayments" })
  maxNumberPayments?: number;

  /**
   * An internal description of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "myRef" })
  myRef?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "orderDetails" })
  @Type(() => GetPaymentDetailsPaymentRequestOrderDetails)
  orderDetails?: GetPaymentDetailsPaymentRequestOrderDetails;

  /**
   * The code that was returned when you created the payment request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentRequestCode" })
  paymentRequestCode?: string;

  /**
   * A unique id for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentUuid" })
  paymentUuid?: string;

  /**
   * The merchant return URL where the customer will be re-directed to with the result of the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnUrl" })
  returnUrl?: string;

  /**
   * The status of the transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetPaymentDetailsPaymentRequestStatusEnum;

  /**
   * The type of payment request payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transactionType" })
  transactionType?: GetPaymentDetailsPaymentRequestTransactionTypeEnum;

  /**
   * The type of Fire Open Payment that was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetPaymentDetailsPaymentRequestTypeEnum;

  /**
   * A URL to be called in the background with the details of the payment after the payment is complete
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webhookUrl" })
  webhookUrl?: string;
}

export class GetPaymentDetailsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The Payment Request details object
   */
  @SpeakeasyMetadata()
  paymentRequest?: GetPaymentDetailsPaymentRequest;
}
