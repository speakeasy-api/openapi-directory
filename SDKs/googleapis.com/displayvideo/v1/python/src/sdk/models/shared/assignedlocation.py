"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssignedLocation:
    r"""An assignment between a location list and a relevant targeting option. Currently, geo region targeting options are the only supported option for assignment."""
    
    assigned_location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignedLocationId'), 'exclude': lambda f: f is None }})
    r"""Output only. The unique ID of the assigned location. The ID is only unique within a location list. It may be reused in other contexts."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of the assigned location."""  
    targeting_option_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetingOptionId'), 'exclude': lambda f: f is None }})
    r"""Required. The ID of the targeting option assigned to the location list. Must be of type TARGETING_TYPE_GEO_REGION."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssignedLocationInput:
    r"""An assignment between a location list and a relevant targeting option. Currently, geo region targeting options are the only supported option for assignment."""
    
    targeting_option_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetingOptionId'), 'exclude': lambda f: f is None }})
    r"""Required. The ID of the targeting option assigned to the location list. Must be of type TARGETING_TYPE_GEO_REGION."""  
    