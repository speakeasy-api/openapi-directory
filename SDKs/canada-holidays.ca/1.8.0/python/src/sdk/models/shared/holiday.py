"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import province as shared_province
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class HolidayFederalEnum(str, Enum):
    r"""Whether this holiday is observed by federally-regulated industries."""
    ONE = '1'
    ZERO = '0'

class HolidayOptionalEnum(str, Enum):
    r"""Whether this is a province-wide statutory holiday, or one that is optional for employers."""
    ONE = '1'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Holiday:
    r"""A Canadian holiday. Includes a name, the literal date of the holiday, the observed date of the holiday (ie, accommodating for weekends), and a list of regions that observe this holiday."""
    
    date_: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""ISO date: the literal date of the holiday"""  
    federal: HolidayFederalEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('federal') }})
    r"""Whether this holiday is observed by federally-regulated industries."""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Primary key for a holiday"""  
    name_en: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameEn') }})
    r"""English name"""  
    name_fr: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameFr') }})
    r"""French name"""  
    observed_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('observedDate'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""ISO date: when this holiday is observed"""  
    optional: Optional[HolidayOptionalEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('optional'), 'exclude': lambda f: f is None }})
    r"""Whether this is a province-wide statutory holiday, or one that is optional for employers."""  
    provinces: Optional[list[shared_province.Province]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provinces'), 'exclude': lambda f: f is None }})  
    