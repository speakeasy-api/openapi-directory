/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const FetchMarketplaceAvailableAddOnExtensionServerList = [
  "https://preview.twilio.com",
] as const;

export class FetchMarketplaceAvailableAddOnExtensionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class FetchMarketplaceAvailableAddOnExtensionRequest extends SpeakeasyBase {
  /**
   * The SID of the AvailableAddOn resource with the extension to fetch.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AvailableAddOnSid",
  })
  availableAddOnSid: string;

  /**
   * The SID of the AvailableAddOn Extension resource to fetch.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class FetchMarketplaceAvailableAddOnExtensionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  previewMarketplaceAvailableAddOnAvailableAddOnExtension?: shared.PreviewMarketplaceAvailableAddOnAvailableAddOnExtension;
}
