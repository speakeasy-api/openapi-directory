/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Permission - The permission setting of an object.
 */
public class Permission {
    /**
     * If true, the item can be discovered (e.g. in the user's "Shared with me" collection) without needing a link to the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowDiscovery")
    public Boolean allowDiscovery;
    public Permission withAllowDiscovery(Boolean allowDiscovery) {
        this.allowDiscovery = allowDiscovery;
        return this;
    }
    
    /**
     * Represents any user (including a logged out user).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("anyone")
    public java.util.Map<String, Object> anyone;
    public Permission withAnyone(java.util.Map<String, Object> anyone) {
        this.anyone = anyone;
        return this;
    }
    
    /**
     * Information about a domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain")
    public Domain domain;
    public Permission withDomain(Domain domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * Information about a group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group")
    public Group group;
    public Permission withGroup(Group group) {
        this.group = group;
        return this;
    }
    
    /**
     * Indicates the [Google Drive permissions role](https://developers.google.com/drive/web/manage-sharing#roles). The role determines a user's ability to read, write, and comment on items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public PermissionRoleEnum role;
    public Permission withRole(PermissionRoleEnum role) {
        this.role = role;
        return this;
    }
    
    /**
     * Information about an end user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public User user;
    public Permission withUser(User user) {
        this.user = user;
        return this;
    }
    
}
