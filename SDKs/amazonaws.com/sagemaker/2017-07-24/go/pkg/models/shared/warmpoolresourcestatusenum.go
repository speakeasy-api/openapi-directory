// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WarmPoolResourceStatusEnum string

const (
	WarmPoolResourceStatusEnumAvailable  WarmPoolResourceStatusEnum = "Available"
	WarmPoolResourceStatusEnumTerminated WarmPoolResourceStatusEnum = "Terminated"
	WarmPoolResourceStatusEnumReused     WarmPoolResourceStatusEnum = "Reused"
	WarmPoolResourceStatusEnumInUse      WarmPoolResourceStatusEnum = "InUse"
)

func (e WarmPoolResourceStatusEnum) ToPointer() *WarmPoolResourceStatusEnum {
	return &e
}

func (e *WarmPoolResourceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Available":
		fallthrough
	case "Terminated":
		fallthrough
	case "Reused":
		fallthrough
	case "InUse":
		*e = WarmPoolResourceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WarmPoolResourceStatusEnum: %v", v)
	}
}
