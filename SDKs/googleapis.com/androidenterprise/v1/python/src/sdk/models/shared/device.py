"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import devicereport as shared_devicereport
from ..shared import policy as shared_policy
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeviceManagementTypeEnum(str, Enum):
    r"""Identifies the extent to which the device is controlled by a managed Google Play EMM in various deployment configurations. Possible values include: - \\"managedDevice\\", a device that has the EMM's device policy controller (DPC) as the device owner. - \\"managedProfile\\", a device that has a profile managed by the DPC (DPC is profile owner) in addition to a separate, personal profile that is unavailable to the DPC. - \\"containerApp\\", no longer used (deprecated). - \\"unmanagedProfile\\", a device that has been allowed (by the domain's admin, using the Admin Console to enable the privilege) to use managed Google Play, but the profile is itself not owned by a DPC."""
    MANAGED_DEVICE = 'managedDevice'
    MANAGED_PROFILE = 'managedProfile'
    CONTAINER_APP = 'containerApp'
    UNMANAGED_PROFILE = 'unmanagedProfile'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Device:
    r"""A Devices resource represents a mobile device managed by the EMM and belonging to a specific enterprise user."""
    
    android_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidId'), 'exclude': lambda f: f is None }})
    r"""The Google Play Services Android ID for the device encoded as a lowercase hex string. For example, \\"123456789abcdef0\\"."""  
    device: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device'), 'exclude': lambda f: f is None }})
    r"""The internal hardware codename of the device. This comes from android.os.Build.DEVICE. (field named \\"device\\" per logs/wireless/android/android_checkin.proto)"""  
    latest_build_fingerprint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latestBuildFingerprint'), 'exclude': lambda f: f is None }})
    r"""The build fingerprint of the device if known."""  
    maker: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maker'), 'exclude': lambda f: f is None }})
    r"""The manufacturer of the device. This comes from android.os.Build.MANUFACTURER."""  
    management_type: Optional[DeviceManagementTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('managementType'), 'exclude': lambda f: f is None }})
    r"""Identifies the extent to which the device is controlled by a managed Google Play EMM in various deployment configurations. Possible values include: - \\"managedDevice\\", a device that has the EMM's device policy controller (DPC) as the device owner. - \\"managedProfile\\", a device that has a profile managed by the DPC (DPC is profile owner) in addition to a separate, personal profile that is unavailable to the DPC. - \\"containerApp\\", no longer used (deprecated). - \\"unmanagedProfile\\", a device that has been allowed (by the domain's admin, using the Admin Console to enable the privilege) to use managed Google Play, but the profile is itself not owned by a DPC."""  
    model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    r"""The model name of the device. This comes from android.os.Build.MODEL."""  
    policy: Optional[shared_policy.Policy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy'), 'exclude': lambda f: f is None }})
    r"""The device policy for a given managed device."""  
    product: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product'), 'exclude': lambda f: f is None }})
    r"""The product name of the device. This comes from android.os.Build.PRODUCT."""  
    report: Optional[shared_devicereport.DeviceReport] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('report'), 'exclude': lambda f: f is None }})
    r"""Device report updated with the latest app states for managed apps on the device."""  
    retail_brand: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retailBrand'), 'exclude': lambda f: f is None }})
    r"""Retail brand for the device, if set. See https://developer.android.com/reference/android/os/Build.html#BRAND"""  
    sdk_version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sdkVersion'), 'exclude': lambda f: f is None }})
    r"""API compatibility version."""  
    