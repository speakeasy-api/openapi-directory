/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetRepositoryPipelineCacheContentURIRequest extends SpeakeasyBase {
  /**
   * The UUID of the cache.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=cache_uuid",
  })
  cacheUuid: string;

  /**
   * The repository.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo_slug",
  })
  repoSlug: string;

  /**
   * The account.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=workspace",
  })
  workspace: string;
}

export class GetRepositoryPipelineCacheContentURIResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The workspace, repository or cache_uuid with given UUID was not found.
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * The cache content uri.
   */
  @SpeakeasyMetadata()
  pipelineCacheContentUri?: shared.PipelineCacheContentUri;
}
