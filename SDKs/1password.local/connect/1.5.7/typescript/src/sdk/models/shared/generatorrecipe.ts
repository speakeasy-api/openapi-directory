/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum GeneratorRecipeCharacterSetsEnum {
  Letters = "LETTERS",
  Digits = "DIGITS",
  Symbols = "SYMBOLS",
}

/**
 * The recipe is used in conjunction with the "generate" property to set the character set used to generate a new secure value
 */
export class GeneratorRecipe extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "characterSets" })
  characterSets?: GeneratorRecipeCharacterSetsEnum[];

  /**
   * List of all characters that should be excluded from generated passwords.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludeCharacters" })
  excludeCharacters?: string;

  /**
   * Length of the generated value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "length" })
  length?: number;
}
