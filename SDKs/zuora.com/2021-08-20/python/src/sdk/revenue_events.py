"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class RevenueEvents:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_revenue_event_details(self, request: operations.GETRevenueEventDetailsRequest) -> operations.GETRevenueEventDetailsResponse:
        r"""Retrieve a revenue event
        This REST API reference describes how to get revenue event details by specifying the revenue event number. Request and response field descriptions and sample code are provided.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETRevenueEventDetailsRequest, base_url, '/v1/revenue-events/{event-number}', request)
        
        headers = utils.get_headers(request)
        
        client = self._client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETRevenueEventDetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETRevenueEventDetailType])
                res.get_revenue_event_detail_type = out

        return res

    def get_revenue_event_for_revenue_schedule(self, request: operations.GETRevenueEventForRevenueScheduleRequest) -> operations.GETRevenueEventForRevenueScheduleResponse:
        r"""List all revenue events of a revenue schedule
        This REST API reference describes how to get all revenue events in a revenue schedule by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GETRevenueEventForRevenueScheduleRequest, base_url, '/v1/revenue-events/revenue-schedules/{rs-number}', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GETRevenueEventForRevenueScheduleRequest, request)
        
        client = self._client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GETRevenueEventForRevenueScheduleResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GETRevenueEventDetailsType])
                res.get_revenue_event_details_type = out

        return res

    