// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TFNExemptionTypeEnum string

const (
	TFNExemptionTypeEnumNotquoted TFNExemptionTypeEnum = "NOTQUOTED"
	TFNExemptionTypeEnumPending   TFNExemptionTypeEnum = "PENDING"
	TFNExemptionTypeEnumPensioner TFNExemptionTypeEnum = "PENSIONER"
	TFNExemptionTypeEnumUnder18   TFNExemptionTypeEnum = "UNDER18"
)

func (e TFNExemptionTypeEnum) ToPointer() *TFNExemptionTypeEnum {
	return &e
}

func (e *TFNExemptionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOTQUOTED":
		fallthrough
	case "PENDING":
		fallthrough
	case "PENSIONER":
		fallthrough
	case "UNDER18":
		*e = TFNExemptionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TFNExemptionTypeEnum: %v", v)
	}
}
