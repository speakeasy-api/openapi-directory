"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import featureparameter as shared_featureparameter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateFeatureMetadataRequest:
    
    feature_group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureGroupName') }})  
    feature_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureName') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    parameter_additions: Optional[list[shared_featureparameter.FeatureParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParameterAdditions'), 'exclude': lambda f: f is None }})  
    parameter_removals: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParameterRemovals'), 'exclude': lambda f: f is None }})  
    