"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tagperformance as shared_tagperformance
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IterationPerformance:
    r"""Represents the detailed performance data for a trained iteration"""
    
    per_tag_performance: Optional[list[shared_tagperformance.TagPerformance]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PerTagPerformance'), 'exclude': lambda f: f is None }})
    r"""Gets the per-tag performance details for this iteration"""  
    precision: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Precision'), 'exclude': lambda f: f is None }})
    r"""Gets the precision"""  
    precision_std_deviation: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrecisionStdDeviation'), 'exclude': lambda f: f is None }})
    r"""Gets the standard deviation for the precision"""  
    recall: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Recall'), 'exclude': lambda f: f is None }})
    r"""Gets the recall"""  
    recall_std_deviation: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecallStdDeviation'), 'exclude': lambda f: f is None }})
    r"""Gets the standard deviation for the recall"""  
    