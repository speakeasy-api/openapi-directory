/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PricePerBuyer - Used to specify pricing rules for buyers. Each PricePerBuyer in a product can become [0,1] deals. To check if there is a PricePerBuyer for a particular buyer we look for the most specific matching rule - we first look for a rule matching the buyer and otherwise look for a matching rule where no buyer is set.
 */
public class PricePerBuyer {
    /**
     * Optional access type for this buyer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auctionTier")
    public String auctionTier;

    public PricePerBuyer withAuctionTier(String auctionTier) {
        this.auctionTier = auctionTier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billedBuyer")
    public Buyer billedBuyer;

    public PricePerBuyer withBilledBuyer(Buyer billedBuyer) {
        this.billedBuyer = billedBuyer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyer")
    public Buyer buyer;

    public PricePerBuyer withBuyer(Buyer buyer) {
        this.buyer = buyer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Price price;

    public PricePerBuyer withPrice(Price price) {
        this.price = price;
        return this;
    }
    
    public PricePerBuyer(){}
}
