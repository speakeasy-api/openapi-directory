<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Metric 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Create patient health metrics
     * 
     * Create one or more patient health metrics.
     * 
     * Example for creating a patient health result with a patient specified using `meta.query` instead of `id`:
     * 
     * ```JSON
     *   {
     *     "data": {
     *       "type": "patient_health_metric",
     *        "attributes": {
     *          "code": {
     *            "system": "LOINC",
     *            "value": "13457-7"
     *          },
     *          "type": "ldl_cholesterol",
     *          "occurred_at": "2017-03-14T11:00:57.000Z",
     *          "value": 121,
     *          "unit": "mg/dl"
     *       },
     *       "relationships": {
     *         "patient": {
     *           "data": {
     *             "type": "patient",
     *             "meta": {
     *               "query": {
     *                 "identifier": {
     *                   "system": "medical-record-number",
     *                   "value": "121212"
     *                 },
     *                 "organization": "58c4554710123c5c40dbab81"
     *               }
     *             }
     *           }
     *         }
     *       }
     *     }
     *   }
     * ```
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Shared\CreatePatientHealthMetricRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\CreatePatientHealthMetricResponse
     */
	public function createPatientHealthMetric(
        \OpenAPI\OpenAPI\Models\Shared\CreatePatientHealthMetricRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\CreatePatientHealthMetricResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/patient_health_metric');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "request", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CreatePatientHealthMetricResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.api+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->createPatientHealthMetricResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\CreatePatientHealthMetricResponse', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 409) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.api+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->createOrUpdateErrorResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\CreateOrUpdateErrorResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get a patient health metric
     * 
     * Get the plan summary for a patient.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricResponse
     */
	public function fetchPatientHealthMetric(
        \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/patient_health_metric/{id}', \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.api+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->fetchPatientHealthMetricResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\FetchPatientHealthMetricResponse', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 403) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.api+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->fetchErrorResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\FetchErrorResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List patient health metrics
     * 
     * Get a list of patient health metrics.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricsRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricsResponse
     */
	public function fetchPatientHealthMetrics(
        \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricsRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/patient_health_metric');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricsRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\FetchPatientHealthMetricsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.api+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->fetchPatientHealthMetricResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\FetchPatientHealthMetricResponse', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 409) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.api+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->fetchErrorResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\FetchErrorResponse', 'json');
            }
        }

        return $response;
    }
}