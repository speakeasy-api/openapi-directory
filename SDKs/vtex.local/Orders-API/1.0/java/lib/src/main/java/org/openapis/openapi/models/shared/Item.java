/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class Item {
    /**
     * Additional information about the item.
     */
    @JsonProperty("additionalInfo")
    public AdditionalInfo additionalInfo;
    public Item withAdditionalInfo(AdditionalInfo additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }
    
    /**
     * Retrieves information about orders item's customizations.
     */
    @JsonProperty("assemblies")
    public Object[] assemblies;
    public Item withAssemblies(Object[] assemblies) {
        this.assemblies = assemblies;
        return this;
    }
    
    /**
     * List of attachments details.
     */
    @JsonProperty("attachmentOfferings")
    public ItemAttachmentOfferings[] attachmentOfferings;
    public Item withAttachmentOfferings(ItemAttachmentOfferings[] attachmentOfferings) {
        this.attachmentOfferings = attachmentOfferings;
        return this;
    }
    
    /**
     * Array containing information on attachments.
     */
    @JsonProperty("attachments")
    public String[] attachments;
    public Item withAttachments(String[] attachments) {
        this.attachments = attachments;
        return this;
    }
    
    /**
     * Information on services sold along with the item's SKU. For example, a gift package.
     */
    @JsonProperty("bundleItems")
    public String[] bundleItems;
    public Item withBundleItems(String[] bundleItems) {
        this.bundleItems = bundleItems;
        return this;
    }
    
    /**
     * Call center operator responsible for the order.
     */
    @JsonProperty("callCenterOperator")
    public String callCenterOperator;
    public Item withCallCenterOperator(String callCenterOperator) {
        this.callCenterOperator = callCenterOperator;
        return this;
    }
    
    /**
     * Commission value registered for the seller.
     */
    @JsonProperty("commission")
    public Integer commission;
    public Item withCommission(Integer commission) {
        this.commission = commission;
        return this;
    }
    
    /**
     * Item's components.
     */
    @JsonProperty("components")
    public String[] components;
    public Item withComponents(String[] components) {
        this.components = components;
        return this;
    }
    
    /**
     * Item's cost price.
     */
    @JsonProperty("costPrice")
    public Long costPrice;
    public Item withCostPrice(Long costPrice) {
        this.costPrice = costPrice;
        return this;
    }
    
    /**
     * URL slug of the item.
     */
    @JsonProperty("detailUrl")
    public String detailUrl;
    public Item withDetailUrl(String detailUrl) {
        this.detailUrl = detailUrl;
        return this;
    }
    
    /**
     * EAN of the SKU.
     */
    @JsonProperty("ean")
    public String ean;
    public Item withEan(String ean) {
        this.ean = ean;
        return this;
    }
    
    /**
     * Value of the freight commission.
     */
    @JsonProperty("freightCommission")
    public Integer freightCommission;
    public Item withFreightCommission(Integer freightCommission) {
        this.freightCommission = freightCommission;
        return this;
    }
    
    /**
     * Item's SKU ID, which is a unique numerical identifier.
     */
    @JsonProperty("id")
    public String id;
    public Item withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Item's SKU image URL.
     */
    @JsonProperty("imageUrl")
    public String imageUrl;
    public Item withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * This field is `true` when the item is a gift in order context and `false` when it is not.
     */
    @JsonProperty("isGift")
    public Boolean isGift;
    public Item withIsGift(Boolean isGift) {
        this.isGift = isGift;
        return this;
    }
    
    /**
     * Information about attachments, if it applies.
     */
    @JsonProperty("itemAttachment")
    public ItemAttachment itemAttachment;
    public Item withItemAttachment(ItemAttachment itemAttachment) {
        this.itemAttachment = itemAttachment;
        return this;
    }
    
    /**
     * Item's list price.
     */
    @JsonProperty("listPrice")
    public Integer listPrice;
    public Item withListPrice(Integer listPrice) {
        this.listPrice = listPrice;
        return this;
    }
    
    /**
     * Reservation ID.
     */
    @JsonProperty("lockId")
    public String lockId;
    public Item withLockId(String lockId) {
        this.lockId = lockId;
        return this;
    }
    
    /**
     * Item's manual price.
     */
    @JsonProperty("manualPrice")
    public String manualPrice;
    public Item withManualPrice(String manualPrice) {
        this.manualPrice = manualPrice;
        return this;
    }
    
    /**
     * Item's measurement unit.
     */
    @JsonProperty("measurementUnit")
    public String measurementUnit;
    public Item withMeasurementUnit(String measurementUnit) {
        this.measurementUnit = measurementUnit;
        return this;
    }
    
    /**
     * Item's name.
     */
    @JsonProperty("name")
    public String name;
    public Item withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Item's offerings, which are services related to the item. For example, guarantee or installation.
     */
    @JsonProperty("offerings")
    public String[] offerings;
    public Item withOfferings(String[] offerings) {
        this.offerings = offerings;
        return this;
    }
    
    /**
     * Information about params.
     */
    @JsonProperty("params")
    public String[] params;
    public Item withParams(String[] params) {
        this.params = params;
        return this;
    }
    
    /**
     * Parent assembly binding.
     */
    @JsonProperty("parentAssemblyBinding")
    public String parentAssemblyBinding;
    public Item withParentAssemblyBinding(String parentAssemblyBinding) {
        this.parentAssemblyBinding = parentAssemblyBinding;
        return this;
    }
    
    /**
     * Parent item index.
     */
    @JsonProperty("parentItemIndex")
    public String parentItemIndex;
    public Item withParentItemIndex(String parentItemIndex) {
        this.parentItemIndex = parentItemIndex;
        return this;
    }
    
    /**
     * Item's pre sale date.
     */
    @JsonProperty("preSaleDate")
    public String preSaleDate;
    public Item withPreSaleDate(String preSaleDate) {
        this.preSaleDate = preSaleDate;
        return this;
    }
    
    /**
     * Item's price.
     */
    @JsonProperty("price")
    public Integer price;
    public Item withPrice(Integer price) {
        this.price = price;
        return this;
    }
    
    /**
     * Item's price information.
     */
    @JsonProperty("priceDefinitions")
    public ItemPriceDefinitions priceDefinitions;
    public Item withPriceDefinitions(ItemPriceDefinitions priceDefinitions) {
        this.priceDefinitions = priceDefinitions;
        return this;
    }
    
    /**
     * List of objects with item's price modifiers.
     */
    @JsonProperty("priceTags")
    public String[] priceTags;
    public Item withPriceTags(String[] priceTags) {
        this.priceTags = priceTags;
        return this;
    }
    
    /**
     * Date until when the price is going to be valid if there is a promotion.
     */
    @JsonProperty("priceValidUntil")
    public String priceValidUntil;
    public Item withPriceValidUntil(String priceValidUntil) {
        this.priceValidUntil = priceValidUntil;
        return this;
    }
    
    /**
     * ID of the Product associated with the item.
     */
    @JsonProperty("productId")
    public String productId;
    public Item withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * Quantity of items.
     */
    @JsonProperty("quantity")
    public Integer quantity;
    public Item withQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Product referencial code associated with the item.
     */
    @JsonProperty("refId")
    public String refId;
    public Item withRefId(String refId) {
        this.refId = refId;
        return this;
    }
    
    /**
     * Item's reward value.
     */
    @JsonProperty("rewardValue")
    public Integer rewardValue;
    public Item withRewardValue(Integer rewardValue) {
        this.rewardValue = rewardValue;
        return this;
    }
    
    /**
     * Seller related to the order.
     */
    @JsonProperty("seller")
    public String seller;
    public Item withSeller(String seller) {
        this.seller = seller;
        return this;
    }
    
    /**
     * SKU ID from the seller perspective.
     */
    @JsonProperty("sellerSku")
    public String sellerSku;
    public Item withSellerSku(String sellerSku) {
        this.sellerSku = sellerSku;
        return this;
    }
    
    /**
     * Item's selling price.
     */
    @JsonProperty("sellingPrice")
    public Integer sellingPrice;
    public Item withSellingPrice(Integer sellingPrice) {
        this.sellingPrice = sellingPrice;
        return this;
    }
    
    /**
     * This field identifies the order in the `handling` status in the workflow, and it was used for VTEX internal control.
     */
    @JsonProperty("serialNumbers")
    public String serialNumbers;
    public Item withSerialNumbers(String serialNumbers) {
        this.serialNumbers = serialNumbers;
        return this;
    }
    
    /**
     * Item's shipping price.
     */
    @JsonProperty("shippingPrice")
    public String shippingPrice;
    public Item withShippingPrice(String shippingPrice) {
        this.shippingPrice = shippingPrice;
        return this;
    }
    
    /**
     * Item's tax.
     */
    @JsonProperty("tax")
    public Integer tax;
    public Item withTax(Integer tax) {
        this.tax = tax;
        return this;
    }
    
    /**
     *  Item's tax code.
     */
    @JsonProperty("taxCode")
    public String taxCode;
    public Item withTaxCode(String taxCode) {
        this.taxCode = taxCode;
        return this;
    }
    
    /**
     * Unique ID is an alphanumeric sequence that identifies an SKU in a given order.
     */
    @JsonProperty("uniqueId")
    public String uniqueId;
    public Item withUniqueId(String uniqueId) {
        this.uniqueId = uniqueId;
        return this;
    }
    
    /**
     * Item's unit multiplier.
     */
    @JsonProperty("unitMultiplier")
    public Integer unitMultiplier;
    public Item withUnitMultiplier(Integer unitMultiplier) {
        this.unitMultiplier = unitMultiplier;
        return this;
    }
    
}
