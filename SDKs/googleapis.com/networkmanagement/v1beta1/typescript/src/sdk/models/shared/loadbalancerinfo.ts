/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoadBalancerBackend } from "./loadbalancerbackend";
import { Expose, Type } from "class-transformer";

/**
 * Type of load balancer's backend configuration.
 */
export enum LoadBalancerInfoBackendTypeEnum {
  BackendTypeUnspecified = "BACKEND_TYPE_UNSPECIFIED",
  BackendService = "BACKEND_SERVICE",
  TargetPool = "TARGET_POOL",
  TargetInstance = "TARGET_INSTANCE",
}

/**
 * Type of the load balancer.
 */
export enum LoadBalancerInfoLoadBalancerTypeEnum {
  LoadBalancerTypeUnspecified = "LOAD_BALANCER_TYPE_UNSPECIFIED",
  InternalTcpUdp = "INTERNAL_TCP_UDP",
  NetworkTcpUdp = "NETWORK_TCP_UDP",
  HttpProxy = "HTTP_PROXY",
  TcpProxy = "TCP_PROXY",
  SslProxy = "SSL_PROXY",
}

/**
 * For display only. Metadata associated with a load balancer.
 */
export class LoadBalancerInfo extends SpeakeasyBase {
  /**
   * Type of load balancer's backend configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backendType" })
  backendType?: LoadBalancerInfoBackendTypeEnum;

  /**
   * Backend configuration URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backendUri" })
  backendUri?: string;

  /**
   * Information for the loadbalancer backends.
   */
  @SpeakeasyMetadata({ elemType: LoadBalancerBackend })
  @Expose({ name: "backends" })
  @Type(() => LoadBalancerBackend)
  backends?: LoadBalancerBackend[];

  /**
   * URI of the health check for the load balancer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "healthCheckUri" })
  healthCheckUri?: string;

  /**
   * Type of the load balancer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "loadBalancerType" })
  loadBalancerType?: LoadBalancerInfoLoadBalancerTypeEnum;
}
