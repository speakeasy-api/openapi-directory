// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FindCallBroadcastsSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type FindCallBroadcastsRequest struct {
	// Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Start of the find time interval, formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT
	IntervalBegin *int64 `queryParam:"style=form,explode=true,name=intervalBegin"`
	// End of the find time interval, formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT
	IntervalEnd *int64 `queryParam:"style=form,explode=true,name=intervalEnd"`
	// A label of a voice broadcast
	Label *string `queryParam:"style=form,explode=true,name=label"`
	// To set the maximum number of records to return in a paged list response. The default is 100
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// A name of voice broadcast
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Specify whether the campaigns should be running or not
	Running *bool `queryParam:"style=form,explode=true,name=running"`
	// Specify whether the campaigns should be scheduled or not
	Scheduled *bool `queryParam:"style=form,explode=true,name=scheduled"`
}

type FindCallBroadcastsResponse struct {
	// successful operation
	CallBroadcastPage *shared.CallBroadcastPage
	ContentType       string
	// Bad request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
}
