/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DocumentationRule - A documentation rule provides information about individual API elements.
 */
public class DocumentationRule {
    /**
     * Deprecation description of the selected element(s). It can be provided if an element is marked as `deprecated`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deprecationDescription")
    public String deprecationDescription;
    public DocumentationRule withDeprecationDescription(String deprecationDescription) {
        this.deprecationDescription = deprecationDescription;
        return this;
    }
    
    /**
     * Description of the selected proto element (e.g. a message, a method, a 'service' definition, or a field). Defaults to leading &amp; trailing comments taken from the proto source definition of the proto element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public DocumentationRule withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The selector is a comma-separated list of patterns for any element such as a method, a field, an enum value. Each pattern is a qualified name of the element which may end in "*", indicating a wildcard. Wildcards are only allowed at the end and for a whole component of the qualified name, i.e. "foo.*" is ok, but not "foo.b*" or "foo.*.bar". A wildcard will match one or more components. To specify a default for all applicable elements, the whole pattern "*" is used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selector")
    public String selector;
    public DocumentationRule withSelector(String selector) {
        this.selector = selector;
        return this;
    }
    
}
