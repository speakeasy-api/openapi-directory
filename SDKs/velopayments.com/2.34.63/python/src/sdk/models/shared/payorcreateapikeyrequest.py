"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PayorCreateAPIKeyRequestRolesEnum(str, Enum):
    r"""Name of role"""
    VELO_PAYOR_ADMIN = 'velo.payor.admin'
    VELO_PAYOR_SUPPORT = 'velo.payor.support'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayorCreateAPIKeyRequest:
    r"""Details of application API key to create"""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""A name for the key."""  
    roles: list[PayorCreateAPIKeyRequestRolesEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roles') }})
    r"""<p>A role to assign to the key.</p>
    <p>If you want your API key to have write access then assign the role velo.payor.admin</p>
    <p>A later version will change this property from a list to string</p>
    """  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the key."""  
    