// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AppGatewayHostTypeEnum - Required. The type of hosting used by the AppGateway.
type AppGatewayHostTypeEnum string

const (
	AppGatewayHostTypeEnumHostTypeUnspecified AppGatewayHostTypeEnum = "HOST_TYPE_UNSPECIFIED"
	AppGatewayHostTypeEnumGcpRegionalMig      AppGatewayHostTypeEnum = "GCP_REGIONAL_MIG"
)

func (e *AppGatewayHostTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HOST_TYPE_UNSPECIFIED":
		fallthrough
	case "GCP_REGIONAL_MIG":
		*e = AppGatewayHostTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppGatewayHostTypeEnum: %s", s)
	}
}

// AppGatewayStateEnum - Output only. The current state of the AppGateway.
type AppGatewayStateEnum string

const (
	AppGatewayStateEnumStateUnspecified AppGatewayStateEnum = "STATE_UNSPECIFIED"
	AppGatewayStateEnumCreating         AppGatewayStateEnum = "CREATING"
	AppGatewayStateEnumCreated          AppGatewayStateEnum = "CREATED"
	AppGatewayStateEnumUpdating         AppGatewayStateEnum = "UPDATING"
	AppGatewayStateEnumDeleting         AppGatewayStateEnum = "DELETING"
	AppGatewayStateEnumDown             AppGatewayStateEnum = "DOWN"
)

func (e *AppGatewayStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "CREATED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "DOWN":
		*e = AppGatewayStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppGatewayStateEnum: %s", s)
	}
}

// AppGatewayTypeEnum - Required. The type of network connectivity used by the AppGateway.
type AppGatewayTypeEnum string

const (
	AppGatewayTypeEnumTypeUnspecified AppGatewayTypeEnum = "TYPE_UNSPECIFIED"
	AppGatewayTypeEnumTCPProxy        AppGatewayTypeEnum = "TCP_PROXY"
)

func (e *AppGatewayTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "TCP_PROXY":
		*e = AppGatewayTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppGatewayTypeEnum: %s", s)
	}
}

// AppGateway - A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway.
type AppGateway struct {
	// Output only. A list of connections allocated for the Gateway
	AllocatedConnections []AllocatedConnection `json:"allocatedConnections,omitempty"`
	// Output only. Timestamp when the resource was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
	DisplayName *string `json:"displayName,omitempty"`
	// Required. The type of hosting used by the AppGateway.
	HostType *AppGatewayHostTypeEnum `json:"hostType,omitempty"`
	// Optional. Resource labels to represent user provided metadata.
	Labels map[string]string `json:"labels,omitempty"`
	// Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
	Name *string `json:"name,omitempty"`
	// Output only. The current state of the AppGateway.
	State *AppGatewayStateEnum `json:"state,omitempty"`
	// Required. The type of network connectivity used by the AppGateway.
	Type *AppGatewayTypeEnum `json:"type,omitempty"`
	// Output only. A unique identifier for the instance generated by the system.
	UID *string `json:"uid,omitempty"`
	// Output only. Timestamp when the resource was last modified.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Output only. Server-defined URI for this resource.
	URI *string `json:"uri,omitempty"`
}

// AppGatewayInput - A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway.
type AppGatewayInput struct {
	// Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
	DisplayName *string `json:"displayName,omitempty"`
	// Required. The type of hosting used by the AppGateway.
	HostType *AppGatewayHostTypeEnum `json:"hostType,omitempty"`
	// Optional. Resource labels to represent user provided metadata.
	Labels map[string]string `json:"labels,omitempty"`
	// Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
	Name *string `json:"name,omitempty"`
	// Required. The type of network connectivity used by the AppGateway.
	Type *AppGatewayTypeEnum `json:"type,omitempty"`
}
