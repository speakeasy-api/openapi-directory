/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class V3OutletGeolocation {
    /**
     * The business name of the outlet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_business")
    public String outletBusiness;

    public V3OutletGeolocation withOutletBusiness(String outletBusiness) {
        this.outletBusiness = outletBusiness;
        return this;
    }
    
    /**
     * The business hours on Friday
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_business_hour_fri")
    public String outletBusinessHourFri;

    public V3OutletGeolocation withOutletBusinessHourFri(String outletBusinessHourFri) {
        this.outletBusinessHourFri = outletBusinessHourFri;
        return this;
    }
    
    /**
     * The business hours on Monday
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_business_hour_mon")
    public String outletBusinessHourMon;

    public V3OutletGeolocation withOutletBusinessHourMon(String outletBusinessHourMon) {
        this.outletBusinessHourMon = outletBusinessHourMon;
        return this;
    }
    
    /**
     * The business hours on Saturday
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_business_hour_sat")
    public String outletBusinessHourSat;

    public V3OutletGeolocation withOutletBusinessHourSat(String outletBusinessHourSat) {
        this.outletBusinessHourSat = outletBusinessHourSat;
        return this;
    }
    
    /**
     * The business hours on Sunday
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_business_hour_sun")
    public String outletBusinessHourSun;

    public V3OutletGeolocation withOutletBusinessHourSun(String outletBusinessHourSun) {
        this.outletBusinessHourSun = outletBusinessHourSun;
        return this;
    }
    
    /**
     * The business hours on Thursday
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_business_hour_thur")
    public String outletBusinessHourThur;

    public V3OutletGeolocation withOutletBusinessHourThur(String outletBusinessHourThur) {
        this.outletBusinessHourThur = outletBusinessHourThur;
        return this;
    }
    
    /**
     * The business hours on Tuesday
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_business_hour_tue")
    public String outletBusinessHourTue;

    public V3OutletGeolocation withOutletBusinessHourTue(String outletBusinessHourTue) {
        this.outletBusinessHourTue = outletBusinessHourTue;
        return this;
    }
    
    /**
     * The business hours on Wednesday
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_business_hour_wed")
    public String outletBusinessHourWed;

    public V3OutletGeolocation withOutletBusinessHourWed(String outletBusinessHourWed) {
        this.outletBusinessHourWed = outletBusinessHourWed;
        return this;
    }
    
    /**
     * Distance of outlet from input location (in metres); returns 0 if no location is input
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_distance")
    public Float outletDistance;

    public V3OutletGeolocation withOutletDistance(Float outletDistance) {
        this.outletDistance = outletDistance;
        return this;
    }
    
    /**
     * Geographic coordinate of latitude at outlet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_latitude")
    public Float outletLatitude;

    public V3OutletGeolocation withOutletLatitude(Float outletLatitude) {
        this.outletLatitude = outletLatitude;
        return this;
    }
    
    /**
     * Geographic coordinate of longitude at outlet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_longitude")
    public Float outletLongitude;

    public V3OutletGeolocation withOutletLongitude(Float outletLongitude) {
        this.outletLongitude = outletLongitude;
        return this;
    }
    
    /**
     * The location name of the outlet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_name")
    public String outletName;

    public V3OutletGeolocation withOutletName(String outletName) {
        this.outletName = outletName;
        return this;
    }
    
    /**
     * Any additional notes for the outlet such as 'Buy pre-loaded myki cards only'. May be null/empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_notes")
    public String outletNotes;

    public V3OutletGeolocation withOutletNotes(String outletNotes) {
        this.outletNotes = outletNotes;
        return this;
    }
    
    /**
     * The postcode for the outlet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_postcode")
    public Integer outletPostcode;

    public V3OutletGeolocation withOutletPostcode(Integer outletPostcode) {
        this.outletPostcode = outletPostcode;
        return this;
    }
    
    /**
     * The SLID / SPID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_slid_spid")
    public String outletSlidSpid;

    public V3OutletGeolocation withOutletSlidSpid(String outletSlidSpid) {
        this.outletSlidSpid = outletSlidSpid;
        return this;
    }
    
    /**
     * The city/municipality the outlet is in
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outlet_suburb")
    public String outletSuburb;

    public V3OutletGeolocation withOutletSuburb(String outletSuburb) {
        this.outletSuburb = outletSuburb;
        return this;
    }
    
    public V3OutletGeolocation(){}
}
