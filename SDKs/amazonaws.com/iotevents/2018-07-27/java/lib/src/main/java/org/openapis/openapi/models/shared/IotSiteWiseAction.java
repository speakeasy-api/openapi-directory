/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IotSiteWiseAction - &lt;p&gt;Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.&lt;/p&gt; &lt;p&gt;You must use expressions for all parameters in &lt;code&gt;IotSiteWiseAction&lt;/code&gt;. The expressions accept literals, operators, functions, references, and substitutions templates.&lt;/p&gt; &lt;p class="title"&gt; &lt;b&gt;Examples&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For literal values, the expressions must contain single quotes. For example, the value for the &lt;code&gt;propertyAlias&lt;/code&gt; parameter can be &lt;code&gt;'/company/windfarm/3/turbine/7/temperature'&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For references, you must specify either variables or input values. For example, the value for the &lt;code&gt;assetId&lt;/code&gt; parameter can be &lt;code&gt;$input.TurbineInput.assetId1&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For a substitution template, you must use &lt;code&gt;${}&lt;/code&gt;, and the template must be in single quotes. A substitution template can also contain a combination of literals, operators, functions, references, and substitution templates.&lt;/p&gt; &lt;p&gt;In the following example, the value for the &lt;code&gt;propertyAlias&lt;/code&gt; parameter uses a substitution template. &lt;/p&gt; &lt;p&gt; &lt;code&gt;'company/windfarm/${$input.TemperatureInput.sensorData.windfarmID}/turbine/ ${$input.TemperatureInput.sensorData.turbineID}/temperature'&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You must specify either &lt;code&gt;propertyAlias&lt;/code&gt; or both &lt;code&gt;assetId&lt;/code&gt; and &lt;code&gt;propertyId&lt;/code&gt; to identify the target asset property in AWS IoT SiteWise.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html"&gt;Expressions&lt;/a&gt; in the &lt;i&gt;AWS IoT Events Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */
public class IotSiteWiseAction {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetId")
    public String assetId;
    public IotSiteWiseAction withAssetId(String assetId) {
        this.assetId = assetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entryId")
    public String entryId;
    public IotSiteWiseAction withEntryId(String entryId) {
        this.entryId = entryId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("propertyAlias")
    public String propertyAlias;
    public IotSiteWiseAction withPropertyAlias(String propertyAlias) {
        this.propertyAlias = propertyAlias;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("propertyId")
    public String propertyId;
    public IotSiteWiseAction withPropertyId(String propertyId) {
        this.propertyId = propertyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("propertyValue")
    public AssetPropertyValue propertyValue;
    public IotSiteWiseAction withPropertyValue(AssetPropertyValue propertyValue) {
        this.propertyValue = propertyValue;
        return this;
    }
    
}
