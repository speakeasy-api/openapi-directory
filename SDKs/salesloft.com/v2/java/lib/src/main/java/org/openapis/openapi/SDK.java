/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts
 * 
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        "https://api.salesloft.com",
	};
  	
    /**
     * Account Stage Management
     */
    public AccountStages accountStages;
    /**
     * Account Tier Information
     */
    public AccountTiers accountTiers;
    /**
     * Account Upsert
     */
    public AccountUpsert accountUpsert;
    /**
     * Account Management
     */
    public Accounts accounts;
    /**
     * Actions - Call Instructions
     */
    public ActionDetailsCallInstructions actionDetailsCallInstructions;
    /**
     * Actions
     */
    public Actions actions;
    /**
     * Activities
     */
    public Activities activities;
    /**
     * Activity Histories
     */
    public ActivityHistories activityHistories;
    /**
     * Bulk Jobs
     */
    public BulkJobs bulkJobs;
    /**
     * Bulk Jobs - Job Data
     */
    public BulkJobsJobData bulkJobsJobData;
    /**
     * Bulk Jobs - Results
     */
    public BulkJobsResults bulkJobsResults;
    /**
     * CRM Activity Management
     */
    public CRMActivities crmActivities;
    /**
     * CRM Activity Fields
     */
    public CRMActivityFields crmActivityFields;
    /**
     * Cadence Exports
     */
    public CadenceExports cadenceExports;
    /**
     * Cadence Importing
     */
    public CadenceImports cadenceImports;
    /**
     * Cadence Membership
     */
    public CadenceMemberships cadenceMemberships;
    /**
     * Cadence Management
     */
    public Cadences cadences;
    /**
     * Calendar Events
     */
    public CalendarEvents calendarEvents;
    /**
     * Call Data Record Management
     */
    public CallDataRecords callDataRecords;
    /**
     * Call Dispositions
     */
    public CallDispositions callDispositions;
    /**
     * Call Sentiments
     */
    public CallSentiments callSentiments;
    /**
     * Caller ID Information
     */
    public CallerIDs callerIDs;
    /**
     * Call Management
     */
    public Calls calls;
    /**
     * Conversations Calls
     */
    public ConversationsCalls conversationsCalls;
    /**
     * Crm Users
     */
    public CrmUsers crmUsers;
    /**
     * Custom Field Management
     */
    public CustomFields customFields;
    /**
     * Email Template Attachments
     */
    public EmailTemplateAttachments emailTemplateAttachments;
    /**
     * Email Templates Management
     */
    public EmailTemplates emailTemplates;
    /**
     * Email Management
     */
    public Emails emails;
    /**
     * External Emails
     */
    public ExternalEmails externalEmails;
    /**
     * Group Management
     */
    public Groups groups;
    /**
     * Import Management
     */
    public Imports imports;
    /**
     * Live Feed Items
     */
    public LiveFeedItems liveFeedItems;
    /**
     * Live Website Tracking Parameters
     */
    public LiveWebsiteTrackingParameters liveWebsiteTrackingParameters;
    /**
     * User Information
     */
    public Me me;
    /**
     * Meetings Settings
     */
    public MeetingSettings meetingSettings;
    /**
     * Meetings
     */
    public Meetings meetings;
    /**
     * Meetings Settings - Searches
     */
    public MeetingsSettingsSearches meetingsSettingsSearches;
    /**
     * MIME content for email
     */
    public MimeEmailPayloads mimeEmailPayloads;
    /**
     * Note Management
     */
    public Notes notes;
    /**
     * Ongoing Actions
     */
    public OngoingActions ongoingActions;
    /**
     * Pending Emails
     */
    public PendingEmails pendingEmails;
    /**
     * Person Management
     */
    public People people;
    /**
     * Person Stage Management
     */
    public PersonStages personStages;
    /**
     * Person Upsert
     */
    public PersonUpsert personUpsert;
    /**
     * Phone Number Assignments
     */
    public PhoneNumberAssignments phoneNumberAssignments;
    /**
     * Recording Settings Information
     */
    public RecordingSettings recordingSettings;
    /**
     * Saved List Views
     */
    public SavedListViews savedListViews;
    /**
     * Steps
     */
    public Steps steps;
    /**
     * Success Management
     */
    public Successes successes;
    /**
     * Tags
     */
    public Tags tags;
    /**
     * Tasks
     */
    public Tasks tasks;
    /**
     * Team Information
     */
    public Team team;
    /**
     * Team Template Attachments
     */
    public TeamTemplateAttachments teamTemplateAttachments;
    /**
     * Team Template Management
     */
    public TeamTemplates teamTemplates;
    /**
     * User Management
     */
    public Users users;
    /**
     * Webhook Subscriptions
     */
    public WebhookSubscriptions webhookSubscriptions;	

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}
		
		
		this.accountStages = new AccountStages(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.accountTiers = new AccountTiers(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.accountUpsert = new AccountUpsert(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.accounts = new Accounts(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.actionDetailsCallInstructions = new ActionDetailsCallInstructions(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.actions = new Actions(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.activities = new Activities(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.activityHistories = new ActivityHistories(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.bulkJobs = new BulkJobs(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.bulkJobsJobData = new BulkJobsJobData(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.bulkJobsResults = new BulkJobsResults(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.crmActivities = new CRMActivities(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.crmActivityFields = new CRMActivityFields(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.cadenceExports = new CadenceExports(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.cadenceImports = new CadenceImports(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.cadenceMemberships = new CadenceMemberships(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.cadences = new Cadences(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.calendarEvents = new CalendarEvents(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.callDataRecords = new CallDataRecords(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.callDispositions = new CallDispositions(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.callSentiments = new CallSentiments(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.callerIDs = new CallerIDs(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.calls = new Calls(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.conversationsCalls = new ConversationsCalls(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.crmUsers = new CrmUsers(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customFields = new CustomFields(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.emailTemplateAttachments = new EmailTemplateAttachments(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.emailTemplates = new EmailTemplates(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.emails = new Emails(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.externalEmails = new ExternalEmails(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.groups = new Groups(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.imports = new Imports(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.liveFeedItems = new LiveFeedItems(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.liveWebsiteTrackingParameters = new LiveWebsiteTrackingParameters(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.me = new Me(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.meetingSettings = new MeetingSettings(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.meetings = new Meetings(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.meetingsSettingsSearches = new MeetingsSettingsSearches(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.mimeEmailPayloads = new MimeEmailPayloads(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.notes = new Notes(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.ongoingActions = new OngoingActions(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.pendingEmails = new PendingEmails(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.people = new People(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.personStages = new PersonStages(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.personUpsert = new PersonUpsert(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.phoneNumberAssignments = new PhoneNumberAssignments(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.recordingSettings = new RecordingSettings(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.savedListViews = new SavedListViews(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.steps = new Steps(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.successes = new Successes(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.tags = new Tags(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.tasks = new Tasks(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.team = new Team(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.teamTemplateAttachments = new TeamTemplateAttachments(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.teamTemplates = new TeamTemplates(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.users = new Users(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.webhookSubscriptions = new WebhookSubscriptions(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
	}
}