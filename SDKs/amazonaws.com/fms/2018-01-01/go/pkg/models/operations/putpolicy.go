// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutPolicyXAmzTargetEnum
type PutPolicyXAmzTargetEnum string

const (
	PutPolicyXAmzTargetEnumAwsfms20180101PutPolicy PutPolicyXAmzTargetEnum = "AWSFMS_20180101.PutPolicy"
)

func (e *PutPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSFMS_20180101.PutPolicy":
		*e = PutPolicyXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutPolicyXAmzTargetEnum: %s", s)
	}
}

type PutPolicyHeaders struct {
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        PutPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutPolicyRequest struct {
	Headers PutPolicyHeaders
	Request shared.PutPolicyRequest `request:"mediaType=application/json"`
}

type PutPolicyResponse struct {
	ContentType string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// InvalidTypeException
	InvalidTypeException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	PutPolicyResponse *shared.PutPolicyResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
