// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeDefaultSearchFieldActionEnum
type GETDescribeDefaultSearchFieldActionEnum string

const (
	GETDescribeDefaultSearchFieldActionEnumDescribeDefaultSearchField GETDescribeDefaultSearchFieldActionEnum = "DescribeDefaultSearchField"
)

func (e *GETDescribeDefaultSearchFieldActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeDefaultSearchField":
		*e = GETDescribeDefaultSearchFieldActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDefaultSearchFieldActionEnum: %s", s)
	}
}

// GETDescribeDefaultSearchFieldVersionEnum
type GETDescribeDefaultSearchFieldVersionEnum string

const (
	GETDescribeDefaultSearchFieldVersionEnumTwoThousandAndEleven0201 GETDescribeDefaultSearchFieldVersionEnum = "2011-02-01"
)

func (e *GETDescribeDefaultSearchFieldVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-02-01":
		*e = GETDescribeDefaultSearchFieldVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDefaultSearchFieldVersionEnum: %s", s)
	}
}

type GETDescribeDefaultSearchFieldQueryParams struct {
	Action     GETDescribeDefaultSearchFieldActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                                   `queryParam:"style=form,explode=true,name=DomainName"`
	Version    GETDescribeDefaultSearchFieldVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeDefaultSearchFieldHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeDefaultSearchFieldRequest struct {
	QueryParams GETDescribeDefaultSearchFieldQueryParams
	Headers     GETDescribeDefaultSearchFieldHeaders
}

type GETDescribeDefaultSearchFieldResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
