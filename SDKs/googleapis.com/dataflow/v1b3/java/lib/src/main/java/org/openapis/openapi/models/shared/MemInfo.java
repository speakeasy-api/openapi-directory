/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MemInfo - Information about the memory usage of a worker or a container within a worker.
 */
public class MemInfo {
    /**
     * Instantenous memory limit in bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentLimitBytes")
    public String currentLimitBytes;
    public MemInfo withCurrentLimitBytes(String currentLimitBytes) {
        this.currentLimitBytes = currentLimitBytes;
        return this;
    }
    
    /**
     * Number of Out of Memory (OOM) events recorded since the previous measurement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentOoms")
    public String currentOoms;
    public MemInfo withCurrentOoms(String currentOoms) {
        this.currentOoms = currentOoms;
        return this;
    }
    
    /**
     * Instantenous memory (RSS) size in bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentRssBytes")
    public String currentRssBytes;
    public MemInfo withCurrentRssBytes(String currentRssBytes) {
        this.currentRssBytes = currentRssBytes;
        return this;
    }
    
    /**
     * Timestamp of the measurement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;
    public MemInfo withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * Total memory (RSS) usage since start up in GB * ms.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalGbMs")
    public String totalGbMs;
    public MemInfo withTotalGbMs(String totalGbMs) {
        this.totalGbMs = totalGbMs;
        return this;
    }
    
}
