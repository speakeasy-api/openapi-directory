// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeviceCreateSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// DeviceCreateTheH323SIPDeviceObjectEncryptionEnum - Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
type DeviceCreateTheH323SIPDeviceObjectEncryptionEnum string

const (
	DeviceCreateTheH323SIPDeviceObjectEncryptionEnumAuto DeviceCreateTheH323SIPDeviceObjectEncryptionEnum = "auto"
	DeviceCreateTheH323SIPDeviceObjectEncryptionEnumYes  DeviceCreateTheH323SIPDeviceObjectEncryptionEnum = "yes"
	DeviceCreateTheH323SIPDeviceObjectEncryptionEnumNo   DeviceCreateTheH323SIPDeviceObjectEncryptionEnum = "no"
)

func (e *DeviceCreateTheH323SIPDeviceObjectEncryptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "auto":
		fallthrough
	case "yes":
		fallthrough
	case "no":
		*e = DeviceCreateTheH323SIPDeviceObjectEncryptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceCreateTheH323SIPDeviceObjectEncryptionEnum: %s", s)
	}
}

// DeviceCreateTheH323SIPDeviceObjectProtocolEnum - Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
type DeviceCreateTheH323SIPDeviceObjectProtocolEnum string

const (
	DeviceCreateTheH323SIPDeviceObjectProtocolEnumH323 DeviceCreateTheH323SIPDeviceObjectProtocolEnum = "H.323"
	DeviceCreateTheH323SIPDeviceObjectProtocolEnumSip  DeviceCreateTheH323SIPDeviceObjectProtocolEnum = "SIP"
)

func (e *DeviceCreateTheH323SIPDeviceObjectProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "H.323":
		fallthrough
	case "SIP":
		*e = DeviceCreateTheH323SIPDeviceObjectProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceCreateTheH323SIPDeviceObjectProtocolEnum: %s", s)
	}
}

// DeviceCreateTheH323SIPDeviceObject - The H.323/SIP device object.
type DeviceCreateTheH323SIPDeviceObject struct {
	// Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
	Encryption DeviceCreateTheH323SIPDeviceObjectEncryptionEnum `json:"encryption" multipartForm:"name=encryption"`
	// Device IP.
	IP string `json:"ip" multipartForm:"name=ip"`
	// Device name.
	Name string `json:"name" multipartForm:"name=name"`
	// Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
	Protocol DeviceCreateTheH323SIPDeviceObjectProtocolEnum `json:"protocol" multipartForm:"name=protocol"`
}

// DeviceCreateTheH323SIPDeviceObject1 - The H.323/SIP device object.
type DeviceCreateTheH323SIPDeviceObject1 struct {
	// Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no.
	Encryption DeviceCreateTheH323SIPDeviceObjectEncryptionEnum `json:"encryption"`
	// Device ID.
	ID *string `json:"id,omitempty"`
	// Device IP.
	IP string `json:"ip"`
	// Device name.
	Name string `json:"name"`
	// Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP.
	Protocol DeviceCreateTheH323SIPDeviceObjectProtocolEnum `json:"protocol"`
}

type DeviceCreateResponse struct {
	Body        []byte
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `201`<br>
	// H.323/SIP device created.
	TheH323SIPDeviceObject *DeviceCreateTheH323SIPDeviceObject1
}
