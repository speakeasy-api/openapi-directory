/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PriceBulkUploadsRequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

/**
 * The request body consists of a Feed file attached to the request based on the feedType selected
 */
export class PriceBulkUploadsRequestBody extends SpeakeasyBase {
  /**
   * Feed file to upload
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file: PriceBulkUploadsRequestBodyFile;
}

/**
 * The feed Type
 */
export enum PriceBulkUploadsFeedTypeEnum {
  Price = "price",
  CptSellerEligibility = "CPT_SELLER_ELIGIBILITY",
}

export class PriceBulkUploadsRequest extends SpeakeasyBase {
  /**
   * The request body consists of a Feed file attached to the request based on the feedType selected
   */
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody: PriceBulkUploadsRequestBody;

  /**
   * A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=WM_CONSUMER.CHANNEL.TYPE",
  })
  wmConsumerChannelType?: string;

  /**
   * A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=WM_QOS.CORRELATION_ID",
  })
  wmQosCorrelationId: string;

  /**
   * The access token retrieved in the Token API call
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=WM_SEC.ACCESS_TOKEN",
  })
  wmSecAccessToken: string;

  /**
   * Walmart Service Name
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=WM_SVC.NAME",
  })
  wmSvcName: string;

  /**
   * The feed Type
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=feedType",
  })
  feedType: PriceBulkUploadsFeedTypeEnum;
}

/**
 * Successful Operation
 */
export class PriceBulkUploads200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata()
  additionalAttributes?: Record<string, any>;

  @SpeakeasyMetadata()
  errors?: Record<string, any>;

  /**
   * A unique ID, returned from the Bulk Upload API, used for tracking the feed file
   */
  @SpeakeasyMetadata()
  feedId?: string;
}

/**
 * Successful Operation
 */
export class PriceBulkUploads200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "additionalAttributes" })
  additionalAttributes?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: Record<string, any>;

  /**
   * A unique ID, returned from the Bulk Upload API, used for tracking the feed file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feedId" })
  feedId?: string;
}

export class PriceBulkUploadsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful Operation
   */
  @SpeakeasyMetadata()
  priceBulkUploads200ApplicationJSONObject?: PriceBulkUploads200ApplicationJSON;
}
