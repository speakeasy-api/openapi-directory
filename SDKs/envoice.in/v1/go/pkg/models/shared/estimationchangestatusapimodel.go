// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EstimationChangeStatusAPIModelStatusEnum - New status of the estimation
type EstimationChangeStatusAPIModelStatusEnum string

const (
	EstimationChangeStatusAPIModelStatusEnumDraft    EstimationChangeStatusAPIModelStatusEnum = "Draft"
	EstimationChangeStatusAPIModelStatusEnumAccepted EstimationChangeStatusAPIModelStatusEnum = "Accepted"
	EstimationChangeStatusAPIModelStatusEnumRejected EstimationChangeStatusAPIModelStatusEnum = "Rejected"
)

func (e EstimationChangeStatusAPIModelStatusEnum) ToPointer() *EstimationChangeStatusAPIModelStatusEnum {
	return &e
}

func (e *EstimationChangeStatusAPIModelStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Draft":
		fallthrough
	case "Accepted":
		fallthrough
	case "Rejected":
		*e = EstimationChangeStatusAPIModelStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EstimationChangeStatusAPIModelStatusEnum: %v", v)
	}
}

type EstimationChangeStatusAPIModel struct {
	// Estimation Id
	ID *int `json:"Id,omitempty" form:"name=Id"`
	// New status of the estimation
	Status *EstimationChangeStatusAPIModelStatusEnum `json:"Status,omitempty" form:"name=Status"`
}
