// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GooglePrivacyDlpV2InspectConfigContentOptionsEnum string

const (
	GooglePrivacyDlpV2InspectConfigContentOptionsEnumContentUnspecified GooglePrivacyDlpV2InspectConfigContentOptionsEnum = "CONTENT_UNSPECIFIED"
	GooglePrivacyDlpV2InspectConfigContentOptionsEnumContentText        GooglePrivacyDlpV2InspectConfigContentOptionsEnum = "CONTENT_TEXT"
	GooglePrivacyDlpV2InspectConfigContentOptionsEnumContentImage       GooglePrivacyDlpV2InspectConfigContentOptionsEnum = "CONTENT_IMAGE"
)

func (e *GooglePrivacyDlpV2InspectConfigContentOptionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONTENT_UNSPECIFIED":
		fallthrough
	case "CONTENT_TEXT":
		fallthrough
	case "CONTENT_IMAGE":
		*e = GooglePrivacyDlpV2InspectConfigContentOptionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2InspectConfigContentOptionsEnum: %s", s)
	}
}

// GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum - Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
type GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum string

const (
	GooglePrivacyDlpV2InspectConfigMinLikelihoodEnumLikelihoodUnspecified GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum = "LIKELIHOOD_UNSPECIFIED"
	GooglePrivacyDlpV2InspectConfigMinLikelihoodEnumVeryUnlikely          GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum = "VERY_UNLIKELY"
	GooglePrivacyDlpV2InspectConfigMinLikelihoodEnumUnlikely              GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum = "UNLIKELY"
	GooglePrivacyDlpV2InspectConfigMinLikelihoodEnumPossible              GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum = "POSSIBLE"
	GooglePrivacyDlpV2InspectConfigMinLikelihoodEnumLikely                GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum = "LIKELY"
	GooglePrivacyDlpV2InspectConfigMinLikelihoodEnumVeryLikely            GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum = "VERY_LIKELY"
)

func (e *GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LIKELIHOOD_UNSPECIFIED":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum: %s", s)
	}
}

// GooglePrivacyDlpV2InspectConfig - Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
type GooglePrivacyDlpV2InspectConfig struct {
	// Deprecated and unused.
	ContentOptions []GooglePrivacyDlpV2InspectConfigContentOptionsEnum `json:"contentOptions,omitempty"`
	// CustomInfoTypes provided by the user. See https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
	CustomInfoTypes []GooglePrivacyDlpV2CustomInfoType `json:"customInfoTypes,omitempty"`
	// When true, excludes type information of the findings. This is not used for data profiling.
	ExcludeInfoTypes *bool `json:"excludeInfoTypes,omitempty"`
	// When true, a contextual quote from the data that triggered a finding is included in the response; see Finding.quote. This is not used for data profiling.
	IncludeQuote *bool `json:"includeQuote,omitempty"`
	// Restricts what info_types to look for. The values must correspond to InfoType values returned by ListInfoTypes or listed at https://cloud.google.com/dlp/docs/infotypes-reference. When no InfoTypes or CustomInfoTypes are specified in a request, the system may automatically choose what detectors to run. By default this may be all types, but may change over time as detectors are updated. If you need precise control and predictability as to what detectors are run you should specify specific InfoTypes listed in the reference, otherwise a default list will be used, which may change over time.
	InfoTypes []GooglePrivacyDlpV2InfoType `json:"infoTypes,omitempty"`
	// Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error.
	Limits *GooglePrivacyDlpV2FindingLimits `json:"limits,omitempty"`
	// Only returns findings equal or above this threshold. The default is POSSIBLE. See https://cloud.google.com/dlp/docs/likelihood to learn more.
	MinLikelihood *GooglePrivacyDlpV2InspectConfigMinLikelihoodEnum `json:"minLikelihood,omitempty"`
	// Set of rules to apply to the findings for this InspectConfig. Exclusion rules, contained in the set are executed in the end, other rules are executed in the order they are specified for each info type.
	RuleSet []GooglePrivacyDlpV2InspectionRuleSet `json:"ruleSet,omitempty"`
}
