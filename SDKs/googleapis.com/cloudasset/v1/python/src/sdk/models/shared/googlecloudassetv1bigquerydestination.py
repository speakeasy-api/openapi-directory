"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudAssetV1BigQueryDestinationPartitionKeyEnum(str, Enum):
    r"""The partition key for BigQuery partitioned table."""
    PARTITION_KEY_UNSPECIFIED = 'PARTITION_KEY_UNSPECIFIED'
    REQUEST_TIME = 'REQUEST_TIME'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAssetV1BigQueryDestination:
    r"""A BigQuery destination."""
    
    dataset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataset'), 'exclude': lambda f: f is None }})
    r"""Required. The BigQuery dataset in format \\"projects/projectId/datasets/datasetId\\", to which the analysis results should be exported. If this dataset does not exist, the export call will return an INVALID_ARGUMENT error."""  
    partition_key: Optional[GoogleCloudAssetV1BigQueryDestinationPartitionKeyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partitionKey'), 'exclude': lambda f: f is None }})
    r"""The partition key for BigQuery partitioned table."""  
    table_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tablePrefix'), 'exclude': lambda f: f is None }})
    r"""Required. The prefix of the BigQuery tables to which the analysis results will be written. Tables will be created based on this table_prefix if not exist: * _analysis table will contain export operation's metadata. * _analysis_result will contain all the IamPolicyAnalysisResult. When [partition_key] is specified, both tables will be partitioned based on the [partition_key]."""  
    write_disposition: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('writeDisposition'), 'exclude': lambda f: f is None }})
    r"""Optional. Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, an error is returned. The default value is WRITE_APPEND. Each action is atomic and only occurs if BigQuery is able to complete the job successfully. Details are at https://cloud.google.com/bigquery/docs/loading-data-local#appending_to_or_overwriting_a_table_using_a_local_file."""  
    