// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETMetricWidgetImageActionEnum
type GETGETMetricWidgetImageActionEnum string

const (
	GETGETMetricWidgetImageActionEnumGetMetricWidgetImage GETGETMetricWidgetImageActionEnum = "GetMetricWidgetImage"
)

func (e GETGETMetricWidgetImageActionEnum) ToPointer() *GETGETMetricWidgetImageActionEnum {
	return &e
}

func (e *GETGETMetricWidgetImageActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetMetricWidgetImage":
		*e = GETGETMetricWidgetImageActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETMetricWidgetImageActionEnum: %v", v)
	}
}

// GETGETMetricWidgetImageVersionEnum
type GETGETMetricWidgetImageVersionEnum string

const (
	GETGETMetricWidgetImageVersionEnumTwoThousandAndTen0801 GETGETMetricWidgetImageVersionEnum = "2010-08-01"
)

func (e GETGETMetricWidgetImageVersionEnum) ToPointer() *GETGETMetricWidgetImageVersionEnum {
	return &e
}

func (e *GETGETMetricWidgetImageVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = GETGETMetricWidgetImageVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETMetricWidgetImageVersionEnum: %v", v)
	}
}

type GETGETMetricWidgetImageRequest struct {
	Action GETGETMetricWidgetImageActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>A JSON string that defines the bitmap graph to be retrieved. The string includes the metrics to include in the graph, statistics, annotations, title, axis limits, and so on. You can include only one <code>MetricWidget</code> parameter in each <code>GetMetricWidgetImage</code> call.</p> <p>For more information about the syntax of <code>MetricWidget</code> see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CloudWatch-Metric-Widget-Structure.html">GetMetricWidgetImage: Metric Widget Structure and Syntax</a>.</p> <p>If any metric on the graph could not load all the requested data points, an orange triangle with an exclamation point appears next to the graph legend.</p>
	MetricWidget string `queryParam:"style=form,explode=true,name=MetricWidget"`
	// <p>The format of the resulting image. Only PNG images are supported.</p> <p>The default is <code>png</code>. If you specify <code>png</code>, the API returns an HTTP response with the content-type set to <code>text/xml</code>. The image data is in a <code>MetricWidgetImage</code> field. For example:</p> <p> <code> &lt;GetMetricWidgetImageResponse xmlns=&lt;URLstring&gt;&gt;</code> </p> <p> <code> &lt;GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;MetricWidgetImage&gt;</code> </p> <p> <code> iVBORw0KGgoAAAANSUhEUgAAAlgAAAGQEAYAAAAip...</code> </p> <p> <code> &lt;/MetricWidgetImage&gt;</code> </p> <p> <code> &lt;/GetMetricWidgetImageResult&gt;</code> </p> <p> <code> &lt;ResponseMetadata&gt;</code> </p> <p> <code> &lt;RequestId&gt;6f0d4192-4d42-11e8-82c1-f539a07e0e3b&lt;/RequestId&gt;</code> </p> <p> <code> &lt;/ResponseMetadata&gt;</code> </p> <p> <code>&lt;/GetMetricWidgetImageResponse&gt;</code> </p> <p>The <code>image/png</code> setting is intended only for custom HTTP requests. For most use cases, and all actions using an Amazon Web Services SDK, you should use <code>png</code>. If you specify <code>image/png</code>, the HTTP response has a content-type set to <code>image/png</code>, and the body of the response is a PNG image. </p>
	OutputFormat      *string                            `queryParam:"style=form,explode=true,name=OutputFormat"`
	Version           GETGETMetricWidgetImageVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETMetricWidgetImageResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
