"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class AllWarehousesRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AllWarehouses200ApplicationJSONWarehouseDock1:
    r"""Information related to the docks available for the given warehouse."""
    
    cost: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cost') }})
    r"""Extra charges added to the shipping rate when **Additional shipping costs** are configured."""  
    dock_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dockId') }})
    r"""Code that identifies a dock."""  
    time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time') }})
    r"""This field returns the dock's processing time in days and hours. If none is configured, the request returns `00:00:00`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AllWarehouses200ApplicationJSON:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Code that identifies a warehouse."""  
    is_active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isActive') }})
    r"""Shows if the warehouse is active (`true`) or inactive (`false`)."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the warehouse."""  
    pickup_point_ids: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupPointIds') }})
    r"""This field returns a list of the [pickup points' IDs](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) associated with the given warehouse."""  
    priority: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priority') }})
    r"""If the warehouse was configured as a priority. When no priority was set, the value returns`0`."""  
    warehouse_docks: list[AllWarehouses200ApplicationJSONWarehouseDock1] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warehouseDocks') }})
    r"""Information related to the docks available for the warehouses."""  
    

@dataclasses.dataclass
class AllWarehousesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    all_warehouses_200_application_json_objects: Optional[list[AllWarehouses200ApplicationJSON]] = dataclasses.field(default=None)
    r"""OK"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    