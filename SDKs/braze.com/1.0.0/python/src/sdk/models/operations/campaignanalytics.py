"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class CampaignAnalyticsRequest:
    
    campaign_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'campaign_id', 'style': 'form', 'explode': True }})
    r"""(Required) String
    
    Campaign API identifier
    """  
    ending_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ending_at', 'style': 'form', 'explode': True }})
    r"""(Optional) DateTime (ISO 8601 string)
    
    Date on which the data series should end - defaults to time of the request
    """  
    length: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'length', 'style': 'form', 'explode': True }})
    r"""(Required) Integer
    
    Max number of days before ending_at to include in the returned series - must be between 1 and 100 inclusive
    """  
    

@dataclasses.dataclass
class CampaignAnalyticsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    