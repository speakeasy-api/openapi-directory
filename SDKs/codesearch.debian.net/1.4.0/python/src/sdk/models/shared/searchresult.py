"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchResult:
    r"""A search result matching the specified query. You can use sources.debian.org to view the file contents. See https://github.com/Debian/dcs/blob/master/cmd/dcs-web/show/show.go for how to construct a sources.debian.org URL from a search result."""
    
    context: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context') }})
    r"""The full line containing the search result."""  
    line: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line') }})
    r"""Line number containing the search result."""  
    package: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('package') }})
    r"""The Debian source package containing this search result, including the full Debian version number."""  
    path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path') }})
    r"""Path to the file containing the this search result, starting with `package`."""  
    context_after: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context_after'), 'exclude': lambda f: f is None }})
    r"""Up to 2 full lines after the search result (see `context`)."""  
    context_before: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context_before'), 'exclude': lambda f: f is None }})
    r"""Up to 2 full lines before the search result (see `context`)."""  
    