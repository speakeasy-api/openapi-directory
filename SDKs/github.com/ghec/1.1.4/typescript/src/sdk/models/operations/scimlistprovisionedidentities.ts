/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ScimListProvisionedIdentitiesRequest extends SpeakeasyBase {
  /**
   * Used for pagination: the number of results to return.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: number;

  /**
   * Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:
   *
   * @remarks
   *
   * `?filter=userName%20eq%20\"Octocat\"`.
   *
   * To filter results for the identity with the email `octocat@github.com`, you would use this query:
   *
   * `?filter=emails%20eq%20\"octocat@github.com\"`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: string;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * Used for pagination: the index of the first result to return.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startIndex",
  })
  startIndex?: number;
}

export class ScimListProvisionedIdentitiesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad request
   */
  @SpeakeasyMetadata()
  scimError?: shared.ScimError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  scimUserList?: shared.ScimUserList;
}
