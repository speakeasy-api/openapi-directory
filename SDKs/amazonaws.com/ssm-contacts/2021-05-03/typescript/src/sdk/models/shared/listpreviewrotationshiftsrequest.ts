/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PreviewOverride } from "./previewoverride";
import { RecurrenceSettings } from "./recurrencesettings";
import { Expose, Transform, Type } from "class-transformer";

export class ListPreviewRotationShiftsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Members" })
  members: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: PreviewOverride })
  @Expose({ name: "Overrides" })
  @Type(() => PreviewOverride)
  overrides?: PreviewOverride[];

  @SpeakeasyMetadata()
  @Expose({ name: "Recurrence" })
  @Type(() => RecurrenceSettings)
  recurrence: RecurrenceSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "RotationStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  rotationStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeZoneId" })
  timeZoneId: string;
}
