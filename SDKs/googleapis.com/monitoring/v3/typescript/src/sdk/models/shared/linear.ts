/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Specifies a linear sequence of buckets that all have the same width (except overflow and underflow). Each bucket represents a constant absolute uncertainty on the specific value in the bucket.There are num_finite_buckets + 2 (= N) buckets. Bucket i has the following boundaries:Upper bound (0 <= i < N-1): offset + (width * i).Lower bound (1 <= i < N): offset + (width * (i - 1)).
 */
export class Linear extends SpeakeasyBase {
  /**
   * Must be greater than 0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numFiniteBuckets" })
  numFiniteBuckets?: number;

  /**
   * Lower bound of the first bucket.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  /**
   * Must be greater than 0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: number;
}
