// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListCampaignsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListCampaignsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListCampaignsRequestBodyFilters - Filter model by type
type ListCampaignsRequestBodyFilters struct {
	// Connect instance identifier filter
	InstanceIDFilter *shared.InstanceIDFilter `json:"instanceIdFilter,omitempty"`
}

type ListCampaignsRequestBody struct {
	// Filter model by type
	Filters *ListCampaignsRequestBodyFilters `json:"filters,omitempty"`
	// The maximum number of results to return per page.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// The token for the next set of results.
	NextToken *string `json:"nextToken,omitempty"`
}

type ListCampaignsRequest struct {
	QueryParams ListCampaignsQueryParams
	Headers     ListCampaignsHeaders
	Request     ListCampaignsRequestBody `request:"mediaType=application/json"`
}

type ListCampaignsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListCampaignsResponse *shared.ListCampaignsResponse
	StatusCode            int
	RawResponse           *http.Response
	// ValidationException
	ValidationException interface{}
}
