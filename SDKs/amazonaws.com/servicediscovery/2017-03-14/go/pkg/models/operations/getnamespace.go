// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetNamespaceXAmzTargetEnum
type GetNamespaceXAmzTargetEnum string

const (
	GetNamespaceXAmzTargetEnumRoute53AutoNamingV20170314GetNamespace GetNamespaceXAmzTargetEnum = "Route53AutoNaming_v20170314.GetNamespace"
)

func (e *GetNamespaceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Route53AutoNaming_v20170314.GetNamespace":
		*e = GetNamespaceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNamespaceXAmzTargetEnum: %s", s)
	}
}

type GetNamespaceHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetNamespaceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetNamespaceRequest struct {
	Headers GetNamespaceHeaders
	Request shared.GetNamespaceRequest `request:"mediaType=application/json"`
}

type GetNamespaceResponse struct {
	ContentType string
	// Success
	GetNamespaceResponse *shared.GetNamespaceResponse
	// InvalidInput
	InvalidInput interface{}
	// NamespaceNotFound
	NamespaceNotFound interface{}
	StatusCode        int
	RawResponse       *http.Response
}
