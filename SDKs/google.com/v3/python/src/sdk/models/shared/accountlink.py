"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountlinktarget as shared_accountlinktarget
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountLinkStatusEnum(str, Enum):
    r"""The current status of the account link."""
    ACCOUNT_LINK_STATUS_UNSPECIFIED = 'ACCOUNT_LINK_STATUS_UNSPECIFIED'
    ACCOUNT_LINK_STATUS_UNKNOWN = 'ACCOUNT_LINK_STATUS_UNKNOWN'
    REQUESTED_FROM_HOTEL_CENTER = 'REQUESTED_FROM_HOTEL_CENTER'
    REQUESTED_FROM_GOOGLE_ADS = 'REQUESTED_FROM_GOOGLE_ADS'
    APPROVED = 'APPROVED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountLink:
    r"""An account link. Represents the link between a Google Ads customer and a Hotel Ads (Hotel Center) account. An account link defines the set of hotels under the Hotel Center account that is linked to the Google Ads customer."""
    
    account_link_target: Optional[shared_accountlinktarget.AccountLinkTarget] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountLinkTarget'), 'exclude': lambda f: f is None }})
    r"""Defines whether all properties or a subset of properties in the Hotel Center account can be managed with the linked Google Ads account. If a subset, the specific properties are specified."""  
    google_ads_customer_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('googleAdsCustomerName'), 'exclude': lambda f: f is None }})
    r"""Required for CREATE requests. The value representing the Google Ads customer ID in the format `customers/{google_ads_customer_id}`. For example: `customers/0123456789`. Note that the `googleAdsCustomerName` field is not returned in responses to GET requests."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name for the account link in the format `accounts/{account_id}/accountLinks/{account_link_id}`."""  
    status: Optional[AccountLinkStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The current status of the account link."""  
    