"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsBillingUsageMinutesUsedBreakdown:
    
    macos: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MACOS'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on macOS runner machines."""  
    macos_12_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('macos_12_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on macOS 12 core runner machines."""  
    total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on all runner machines."""  
    ubuntu: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UBUNTU'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Ubuntu runner machines."""  
    ubuntu_16_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ubuntu_16_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Ubuntu 16 core runner machines."""  
    ubuntu_32_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ubuntu_32_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Ubuntu 32 core runner machines."""  
    ubuntu_4_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ubuntu_4_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Ubuntu 4 core runner machines."""  
    ubuntu_64_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ubuntu_64_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Ubuntu 64 core runner machines."""  
    ubuntu_8_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ubuntu_8_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Ubuntu 8 core runner machines."""  
    windows: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WINDOWS'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Windows runner machines."""  
    windows_16_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('windows_16_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Windows 16 core runner machines."""  
    windows_32_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('windows_32_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Windows 32 core runner machines."""  
    windows_4_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('windows_4_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Windows 4 core runner machines."""  
    windows_64_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('windows_64_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Windows 64 core runner machines."""  
    windows_8_core: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('windows_8_core'), 'exclude': lambda f: f is None }})
    r"""Total minutes used on Windows 8 core runner machines."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsBillingUsage:
    r"""Response"""
    
    included_minutes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('included_minutes') }})
    r"""The amount of free GitHub Actions minutes available."""  
    minutes_used_breakdown: ActionsBillingUsageMinutesUsedBreakdown = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minutes_used_breakdown') }})  
    total_minutes_used: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_minutes_used') }})
    r"""The sum of the free and paid GitHub Actions minutes used."""  
    total_paid_minutes_used: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_paid_minutes_used') }})
    r"""The total paid GitHub Actions minutes used."""  
    