/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CertificateSummaryV2 {
    /**
     * The unique identifier of the certificate request.
     */
    @JsonProperty("certificateId")
    public String certificateId;
    public CertificateSummaryV2 withCertificateId(String certificateId) {
        this.certificateId = certificateId;
        return this;
    }
    
    /**
     * Common name for the certificate request.
     */
    @JsonProperty("commonName")
    public String commonName;
    public CertificateSummaryV2 withCommonName(String commonName) {
        this.commonName = commonName;
        return this;
    }
    
    /**
     * The date the certificate request completed processing (if issued or revoked).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completedAt")
    public String completedAt;
    public CertificateSummaryV2 withCompletedAt(String completedAt) {
        this.completedAt = completedAt;
        return this;
    }
    
    /**
     * Date that the certificate request was received.
     */
    @JsonProperty("createdAt")
    public String createdAt;
    public CertificateSummaryV2 withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Validity period of order. Specified in years.
     */
    @JsonProperty("period")
    public Long period;
    public CertificateSummaryV2 withPeriod(Long period) {
        this.period = period;
        return this;
    }
    
    /**
     * Only returned when a renewal is available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renewalAvailable")
    public Boolean renewalAvailable;
    public CertificateSummaryV2 withRenewalAvailable(Boolean renewalAvailable) {
        this.renewalAvailable = renewalAvailable;
        return this;
    }
    
    /**
     * The revocation date of certificate (if revoked).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revokedAt")
    public String revokedAt;
    public CertificateSummaryV2 withRevokedAt(String revokedAt) {
        this.revokedAt = revokedAt;
        return this;
    }
    
    /**
     * Serial number of certificate (if issued or revoked).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumber")
    public String serialNumber;
    public CertificateSummaryV2 withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * Number of subject alternative names (SAN) to be included in certificate (if UCC): 
     *   * `FIVE` - Five slot UCC request
     *   * `TEN` - Ten slot UCC request
     *   * `FIFTEEN` - Fifteen slot UCC request
     *   * `TWENTY` - Twenty slot UCC request
     *   * `THIRTY` - Thirty slot UCC request
     *   * `FOURTY` - Fourty slot UCC request
     *   * `FIFTY` - Fifty slot UCC request
     *   * `ONE_HUNDRED` - One hundred slot UCC request
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slotSize")
    public CertificateSummaryV2SlotSizeEnum slotSize;
    public CertificateSummaryV2 withSlotSize(CertificateSummaryV2SlotSizeEnum slotSize) {
        this.slotSize = slotSize;
        return this;
    }
    
    /**
     * Certificate status (if issued or revoked): 
     *   * `CANCELED` - Certificate request was canceled by customer
     *   * `DENIED` - Certificate request was denied by customer
     *   * `EXPIRED` - Issued certificate has exceeded the valid end date
     *   * `ISSUED` - Certificate has been issued and is within validity period
     *   * `PENDING_ISSUANCE` - Certificate request has completed domain verification and is in the process of being issued
     *   * `PENDING_REKEY` - Previously issued certificate was rekeyed by customer and is in the process of being reissued
     *   * `PENDING_REVOCATION` - Previously issued certificate is in the process of being revoked
     *   * `REVOKED` - Issued certificate has been revoked
     *   * `UNUSED` - Certificate in an error state
     * 
     */
    @JsonProperty("status")
    public CertificateSummaryV2StatusEnum status;
    public CertificateSummaryV2 withStatus(CertificateSummaryV2StatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Subject Alternative names (if UCC). Collection of subjectAlternativeNames to be included in certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjectAlternativeNames")
    public String[] subjectAlternativeNames;
    public CertificateSummaryV2 withSubjectAlternativeNames(String[] subjectAlternativeNames) {
        this.subjectAlternativeNames = subjectAlternativeNames;
        return this;
    }
    
    /**
     * Certificate type: 
     *   * `DV_SSL` - (Domain Validated Secure Sockets Layer) SSL certificate validated using domain name only
     *   * `DV_WILDCARD_SSL` - SSL certificate containing subdomains which is validated using domain name only
     *   * `EV_SSL` - (Extended Validation) SSL certificate validated using organization information, domain name, business legal status, and other factors
     *   * `OV_CODE_SIGNING` - Code signing SSL certificate used by software developers to digitally sign apps. Validated using organization information
     *   * `OV_DRIVER_SIGNING` - Driver signing SSL certificate request used by software developers to digitally sign secure code for Windows hardware drivers. Validated using organization information
     *   * `OV_SSL` - SSL certificate validated using organization information and domain name
     *   * `OV_WILDCARD_SSL` - SSL certificate containing subdomains which is validated using organization information and domain name
     *   * `UCC_DV_SSL` - (Unified Communication Certificate) Multi domain SSL certificate validated using domain name only
     *   * `UCC_EV_SSL` - Multi domain SSL certificate validated using organization information, domain name, business legal status, and other factors
     *   * `UCC_OV_SSL` - Multi domain SSL certificate validated using organization information and domain name
     * 
     */
    @JsonProperty("type")
    public CertificateSummaryV2TypeEnum type;
    public CertificateSummaryV2 withType(CertificateSummaryV2TypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The end date of the certificate's validity (if issued or revoked).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validEndAt")
    public String validEndAt;
    public CertificateSummaryV2 withValidEndAt(String validEndAt) {
        this.validEndAt = validEndAt;
        return this;
    }
    
    /**
     * The start date of the certificate's validity (if issued or revoked).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validStartAt")
    public String validStartAt;
    public CertificateSummaryV2 withValidStartAt(String validStartAt) {
        this.validStartAt = validStartAt;
        return this;
    }
    
}
