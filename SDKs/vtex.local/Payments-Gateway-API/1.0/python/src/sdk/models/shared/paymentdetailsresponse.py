"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fields1 as shared_fields1
from ..shared import self_ as shared_self_
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentDetailsResponse:
    
    allow_installments: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowInstallments') }})  
    allow_issuer: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowIssuer') }})  
    allow_notification: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowNotification') }})  
    connector: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connector') }})  
    connector_response: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorResponse') }})  
    connector_responses: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectorResponses') }})  
    currency_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode') }})  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    fields_: list[shared_fields1.Fields1] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields') }})  
    group: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    installments: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installments') }})  
    installments_interest_rate: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installmentsInterestRate') }})  
    installments_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installmentsValue') }})  
    is_available: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isAvailable') }})  
    is_custom: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCustom') }})  
    merchant_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantName') }})  
    payment_system: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentSystem') }})  
    payment_system_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentSystemName') }})  
    provider: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provider') }})  
    reference_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceValue') }})  
    return_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnCode') }})  
    return_message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnMessage') }})  
    self_: shared_self_.Self = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('self') }})  
    sheets: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sheets') }})  
    show_connector_responses: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShowConnectorResponses') }})  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    tid: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tid') }})  
    value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})  
    