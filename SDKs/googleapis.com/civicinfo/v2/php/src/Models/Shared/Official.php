<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Official - Information about a person holding an elected office.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Official
{
    /**
     * Addresses at which to contact the official.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SimpleAddressType> $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SimpleAddressType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $address = null;
    
    /**
     * A list of known (social) media channels for this official.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Channel> $channels
     */
	#[\JMS\Serializer\Annotation\SerializedName('channels')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Channel>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $channels = null;
    
    /**
     * The direct email addresses for the official.
     * 
     * @var ?array<string> $emails
     */
	#[\JMS\Serializer\Annotation\SerializedName('emails')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emails = null;
    
    /**
     * Detailed summary about the official's address's geocoding
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GeocodingSummary> $geocodingSummaries
     */
	#[\JMS\Serializer\Annotation\SerializedName('geocodingSummaries')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GeocodingSummary>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $geocodingSummaries = null;
    
    /**
     * The official's name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The full name of the party the official belongs to.
     * 
     * @var ?string $party
     */
	#[\JMS\Serializer\Annotation\SerializedName('party')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $party = null;
    
    /**
     * The official's public contact phone numbers.
     * 
     * @var ?array<string> $phones
     */
	#[\JMS\Serializer\Annotation\SerializedName('phones')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $phones = null;
    
    /**
     * A URL for a photo of the official.
     * 
     * @var ?string $photoUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('photoUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $photoUrl = null;
    
    /**
     * The official's public website URLs.
     * 
     * @var ?array<string> $urls
     */
	#[\JMS\Serializer\Annotation\SerializedName('urls')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $urls = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->channels = null;
		$this->emails = null;
		$this->geocodingSummaries = null;
		$this->name = null;
		$this->party = null;
		$this->phones = null;
		$this->photoUrl = null;
		$this->urls = null;
	}
}
