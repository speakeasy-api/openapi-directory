// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetFailoverClusterHierarchyChildrenObjectTypeEnum - Filter by node object type.
type GetFailoverClusterHierarchyChildrenObjectTypeEnum string

const (
	GetFailoverClusterHierarchyChildrenObjectTypeEnumFailoverClusterApp  GetFailoverClusterHierarchyChildrenObjectTypeEnum = "FailoverClusterApp"
	GetFailoverClusterHierarchyChildrenObjectTypeEnumFileset             GetFailoverClusterHierarchyChildrenObjectTypeEnum = "Fileset"
	GetFailoverClusterHierarchyChildrenObjectTypeEnumHostFailoverCluster GetFailoverClusterHierarchyChildrenObjectTypeEnum = "HostFailoverCluster"
	GetFailoverClusterHierarchyChildrenObjectTypeEnumWindowsCluster      GetFailoverClusterHierarchyChildrenObjectTypeEnum = "WindowsCluster"
)

func (e GetFailoverClusterHierarchyChildrenObjectTypeEnum) ToPointer() *GetFailoverClusterHierarchyChildrenObjectTypeEnum {
	return &e
}

func (e *GetFailoverClusterHierarchyChildrenObjectTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FailoverClusterApp":
		fallthrough
	case "Fileset":
		fallthrough
	case "HostFailoverCluster":
		fallthrough
	case "WindowsCluster":
		*e = GetFailoverClusterHierarchyChildrenObjectTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFailoverClusterHierarchyChildrenObjectTypeEnum: %v", v)
	}
}

// GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum - Filter a response based on the failover cluster operating system type.
type GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum string

const (
	GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnumAny      GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum = "ANY"
	GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnumAix      GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum = "AIX"
	GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnumHpux     GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum = "HPUX"
	GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnumLinux    GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum = "Linux"
	GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnumSunOs    GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum = "SunOS"
	GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnumUnixLike GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum = "UnixLike"
	GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnumWindows  GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum = "Windows"
)

func (e GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum) ToPointer() *GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum {
	return &e
}

func (e *GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANY":
		fallthrough
	case "AIX":
		fallthrough
	case "HPUX":
		fallthrough
	case "Linux":
		fallthrough
	case "SunOS":
		fallthrough
	case "UnixLike":
		fallthrough
	case "Windows":
		*e = GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum: %v", v)
	}
}

// GetFailoverClusterHierarchyChildrenSLAAssignmentEnum - Filter by SLA assignment type.
type GetFailoverClusterHierarchyChildrenSLAAssignmentEnum string

const (
	GetFailoverClusterHierarchyChildrenSLAAssignmentEnumDerived    GetFailoverClusterHierarchyChildrenSLAAssignmentEnum = "Derived"
	GetFailoverClusterHierarchyChildrenSLAAssignmentEnumDirect     GetFailoverClusterHierarchyChildrenSLAAssignmentEnum = "Direct"
	GetFailoverClusterHierarchyChildrenSLAAssignmentEnumUnassigned GetFailoverClusterHierarchyChildrenSLAAssignmentEnum = "Unassigned"
)

func (e GetFailoverClusterHierarchyChildrenSLAAssignmentEnum) ToPointer() *GetFailoverClusterHierarchyChildrenSLAAssignmentEnum {
	return &e
}

func (e *GetFailoverClusterHierarchyChildrenSLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = GetFailoverClusterHierarchyChildrenSLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFailoverClusterHierarchyChildrenSLAAssignmentEnum: %v", v)
	}
}

// GetFailoverClusterHierarchyChildrenSortByEnum - Attribute to sort the results on.
type GetFailoverClusterHierarchyChildrenSortByEnum string

const (
	GetFailoverClusterHierarchyChildrenSortByEnumName                   GetFailoverClusterHierarchyChildrenSortByEnum = "name"
	GetFailoverClusterHierarchyChildrenSortByEnumEffectiveSLADomainName GetFailoverClusterHierarchyChildrenSortByEnum = "effectiveSlaDomainName"
)

func (e GetFailoverClusterHierarchyChildrenSortByEnum) ToPointer() *GetFailoverClusterHierarchyChildrenSortByEnum {
	return &e
}

func (e *GetFailoverClusterHierarchyChildrenSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "effectiveSlaDomainName":
		*e = GetFailoverClusterHierarchyChildrenSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFailoverClusterHierarchyChildrenSortByEnum: %v", v)
	}
}

// GetFailoverClusterHierarchyChildrenSortOrderEnum - Sort order, either ascending or descending.
type GetFailoverClusterHierarchyChildrenSortOrderEnum string

const (
	GetFailoverClusterHierarchyChildrenSortOrderEnumAsc  GetFailoverClusterHierarchyChildrenSortOrderEnum = "asc"
	GetFailoverClusterHierarchyChildrenSortOrderEnumDesc GetFailoverClusterHierarchyChildrenSortOrderEnum = "desc"
)

func (e GetFailoverClusterHierarchyChildrenSortOrderEnum) ToPointer() *GetFailoverClusterHierarchyChildrenSortOrderEnum {
	return &e
}

func (e *GetFailoverClusterHierarchyChildrenSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = GetFailoverClusterHierarchyChildrenSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFailoverClusterHierarchyChildrenSortOrderEnum: %v", v)
	}
}

type GetFailoverClusterHierarchyChildrenRequest struct {
	// Filter by configured SLA domain.
	ConfiguredSLADomainID *string `queryParam:"style=form,explode=true,name=configured_sla_domain_id"`
	// ID of the parent failover cluster hierarchy object. To get top-level nodes, use **root** as the ID.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// An integer that specifies the maximum number of matches to return.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter a response by making an infix comparison of the failover cluster name or failover cluster app name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Filter by node object type.
	ObjectType *GetFailoverClusterHierarchyChildrenObjectTypeEnum `queryParam:"style=form,explode=true,name=object_type"`
	// An integer that specifies a number of initial matches to ignore.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter a response based on the failover cluster operating system type.
	OperatingSystemType *GetFailoverClusterHierarchyChildrenOperatingSystemTypeEnum `queryParam:"style=form,explode=true,name=operating_system_type"`
	// Filter by primary cluster ID, or **local**.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Filter by SLA assignment type.
	SLAAssignment *GetFailoverClusterHierarchyChildrenSLAAssignmentEnum `queryParam:"style=form,explode=true,name=sla_assignment"`
	// Attribute to sort the results on.
	SortBy *GetFailoverClusterHierarchyChildrenSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *GetFailoverClusterHierarchyChildrenSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type GetFailoverClusterHierarchyChildrenResponse struct {
	ContentType string
	// Summary list of descendant objects.
	FailoverClusterHierarchyObjectSummaryListResponse *shared.FailoverClusterHierarchyObjectSummaryListResponse
	StatusCode                                        int
	RawResponse                                       *http.Response
}
