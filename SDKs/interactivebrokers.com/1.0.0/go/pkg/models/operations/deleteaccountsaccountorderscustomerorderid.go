// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteAccountsAccountOrdersCustomerOrderIDRequest struct {
	// Customer Order ID
	CustomerOrderID string `pathParam:"style=simple,explode=false,name=CustomerOrderId"`
	// Account Number
	Account string `pathParam:"style=simple,explode=false,name=account"`
}

type DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum string

const (
	DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnumOne DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum = "1"
	DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnumTwo DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum = "2"
)

func (e *DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		*e = DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum: %s", s)
	}
}

type DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSON struct {
	CustomerOrderID *string  `json:"CustomerOrderId,omitempty"`
	OrderQty        *float64 `json:"OrderQty,omitempty"`
	// Market = '1'
	// Limit = '2'
	// Stop = '3'
	// StopLimit = '4'
	//
	OrderType *shared.OrderTypeEnum                                                 `json:"OrderType,omitempty"`
	Price     *string                                                               `json:"Price,omitempty"`
	Side      *DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum `json:"Side,omitempty"`
	// Status of the order
	// InvalidOrderStatus = '-1'
	// New = '0'
	// PartiallyFilled = '1'
	// Filled = '2'
	// DoneForTheDay = '3'
	// Canceled = '4'
	// Replaced = '5'
	// PendingCancelReplace = '6'
	// Stopped = '7'
	// Rejected = '8'
	// Suspended = '9'
	// PendingNew = 'A'
	// Calculated = 'B'
	// Expired = 'C'
	// AcceptedForBidding = 'D'
	// PendingReplace = 'E'
	//
	Status  *shared.OrderStatusEnum `json:"Status,omitempty"`
	Symbol  *float64                `json:"Symbol,omitempty"`
	Warning *string                 `json:"Warning,omitempty"`
}

type DeleteAccountsAccountOrdersCustomerOrderIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Returns result of cancellation attempt
	DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONObjects []DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSON
}
