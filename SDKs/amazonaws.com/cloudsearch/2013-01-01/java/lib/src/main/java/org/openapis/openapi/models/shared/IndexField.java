/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * IndexField - Configuration information for a field in the index, including its name, type, and options. The supported options depend on the &lt;code&gt;&lt;a&gt;IndexFieldType&lt;/a&gt;&lt;/code&gt;.
 */
public class IndexField {
    /**
     * Options for a field that contains an array of dates. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;date-array&lt;/code&gt;. All options are enabled by default.
     */
    
    public DateArrayOptions dateArrayOptions;
    public IndexField withDateArrayOptions(DateArrayOptions dateArrayOptions) {
        this.dateArrayOptions = dateArrayOptions;
        return this;
    }
    
    /**
     * Options for a date field. Dates and times are specified in UTC (Coordinated Universal Time) according to IETF RFC3339: yyyy-mm-ddT00:00:00Z. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;date&lt;/code&gt;. All options are enabled by default.
     */
    
    public DateOptions dateOptions;
    public IndexField withDateOptions(DateOptions dateOptions) {
        this.dateOptions = dateOptions;
        return this;
    }
    
    /**
     * Options for a field that contains an array of double-precision 64-bit floating point values. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;double-array&lt;/code&gt;. All options are enabled by default.
     */
    
    public DoubleArrayOptions doubleArrayOptions;
    public IndexField withDoubleArrayOptions(DoubleArrayOptions doubleArrayOptions) {
        this.doubleArrayOptions = doubleArrayOptions;
        return this;
    }
    
    /**
     * Options for a double-precision 64-bit floating point field. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;double&lt;/code&gt;. All options are enabled by default.
     */
    
    public DoubleOptions doubleOptions;
    public IndexField withDoubleOptions(DoubleOptions doubleOptions) {
        this.doubleOptions = doubleOptions;
        return this;
    }
    
    
    public String indexFieldName;
    public IndexField withIndexFieldName(String indexFieldName) {
        this.indexFieldName = indexFieldName;
        return this;
    }
    
    /**
     * The type of field. The valid options for a field depend on the field type. For more information about the supported field types, see &lt;a href="http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html" target="_blank"&gt;Configuring Index Fields&lt;/a&gt; in the &lt;i&gt;Amazon CloudSearch Developer Guide&lt;/i&gt;.
     */
    
    public IndexFieldTypeEnum indexFieldType;
    public IndexField withIndexFieldType(IndexFieldTypeEnum indexFieldType) {
        this.indexFieldType = indexFieldType;
        return this;
    }
    
    /**
     * Options for a field that contains an array of 64-bit signed integers. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;int-array&lt;/code&gt;. All options are enabled by default.
     */
    
    public IntArrayOptions intArrayOptions;
    public IndexField withIntArrayOptions(IntArrayOptions intArrayOptions) {
        this.intArrayOptions = intArrayOptions;
        return this;
    }
    
    /**
     * Options for a 64-bit signed integer field. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;int&lt;/code&gt;. All options are enabled by default.
     */
    
    public IntOptions intOptions;
    public IndexField withIntOptions(IntOptions intOptions) {
        this.intOptions = intOptions;
        return this;
    }
    
    /**
     * Options for a latlon field. A latlon field contains a location stored as a latitude and longitude value pair. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;latlon&lt;/code&gt;. All options are enabled by default.
     */
    
    public LatLonOptions latLonOptions;
    public IndexField withLatLonOptions(LatLonOptions latLonOptions) {
        this.latLonOptions = latLonOptions;
        return this;
    }
    
    /**
     * Options for a field that contains an array of literal strings. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;literal-array&lt;/code&gt;. All options are enabled by default.
     */
    
    public LiteralArrayOptions literalArrayOptions;
    public IndexField withLiteralArrayOptions(LiteralArrayOptions literalArrayOptions) {
        this.literalArrayOptions = literalArrayOptions;
        return this;
    }
    
    /**
     * Options for literal field. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;literal&lt;/code&gt;. All options are enabled by default.
     */
    
    public LiteralOptions literalOptions;
    public IndexField withLiteralOptions(LiteralOptions literalOptions) {
        this.literalOptions = literalOptions;
        return this;
    }
    
    /**
     * Options for a field that contains an array of text strings. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;text-array&lt;/code&gt;. A &lt;code&gt;text-array&lt;/code&gt; field is always searchable. All options are enabled by default.
     */
    
    public TextArrayOptions textArrayOptions;
    public IndexField withTextArrayOptions(TextArrayOptions textArrayOptions) {
        this.textArrayOptions = textArrayOptions;
        return this;
    }
    
    /**
     * Options for text field. Present if &lt;code&gt;IndexFieldType&lt;/code&gt; specifies the field is of type &lt;code&gt;text&lt;/code&gt;. A &lt;code&gt;text&lt;/code&gt; field is always searchable. All options are enabled by default.
     */
    
    public TextOptions textOptions;
    public IndexField withTextOptions(TextOptions textOptions) {
        this.textOptions = textOptions;
        return this;
    }
    
}
