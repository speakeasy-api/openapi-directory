<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class OrgsUpdateWebhookRequestBody
{
    /**
     * Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
    /**
     * Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/github-ae@latest/rest/reference/orgs#update-hook-config-params).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\OrgsUpdateWebhookRequestBodyConfig $config
     */
	#[\JMS\Serializer\Annotation\SerializedName('config')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\OrgsUpdateWebhookRequestBodyConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrgsUpdateWebhookRequestBodyConfig $config = null;
    
    /**
     * Determines what [events](https://docs.github.com/github-ae@latest/webhooks/event-payloads) the hook is triggered for.
     * 
     * @var ?array<string> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->active = null;
		$this->config = null;
		$this->events = null;
		$this->name = null;
	}
}
