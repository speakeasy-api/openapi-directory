<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ReportedParallelism - Represents the level of parallelism in a WorkItem's input, reported by the worker.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ReportedParallelism
{
    /**
     * Specifies whether the parallelism is infinite. If true, "value" is ignored. Infinite parallelism means the service will assume that the work item can always be split into more non-empty work items by dynamic splitting. This is a work-around for lack of support for infinity by the current JSON-based Java RPC stack.
     * 
     * @var ?bool $isInfinite
     */
	#[\JMS\Serializer\Annotation\SerializedName('isInfinite')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isInfinite = null;
    
    /**
     * Specifies the level of parallelism in case it is finite.
     * 
     * @var ?float $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $value = null;
    
	public function __construct()
	{
		$this->isInfinite = null;
		$this->value = null;
	}
}
