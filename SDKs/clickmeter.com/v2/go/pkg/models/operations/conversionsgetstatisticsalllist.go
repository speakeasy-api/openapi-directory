// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConversionsGetStatisticsAllListGroupByEnum - The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
type ConversionsGetStatisticsAllListGroupByEnum string

const (
	ConversionsGetStatisticsAllListGroupByEnumWeek  ConversionsGetStatisticsAllListGroupByEnum = "week"
	ConversionsGetStatisticsAllListGroupByEnumMonth ConversionsGetStatisticsAllListGroupByEnum = "month"
)

func (e *ConversionsGetStatisticsAllListGroupByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "week":
		fallthrough
	case "month":
		*e = ConversionsGetStatisticsAllListGroupByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetStatisticsAllListGroupByEnum: %s", s)
	}
}

// ConversionsGetStatisticsAllListStatusEnum - Status of conversion ("deleted"/"active")
type ConversionsGetStatisticsAllListStatusEnum string

const (
	ConversionsGetStatisticsAllListStatusEnumDeleted ConversionsGetStatisticsAllListStatusEnum = "deleted"
	ConversionsGetStatisticsAllListStatusEnumActive  ConversionsGetStatisticsAllListStatusEnum = "active"
)

func (e *ConversionsGetStatisticsAllListStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleted":
		fallthrough
	case "active":
		*e = ConversionsGetStatisticsAllListStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetStatisticsAllListStatusEnum: %s", s)
	}
}

// ConversionsGetStatisticsAllListTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type ConversionsGetStatisticsAllListTimeFrameEnum string

const (
	ConversionsGetStatisticsAllListTimeFrameEnumToday         ConversionsGetStatisticsAllListTimeFrameEnum = "today"
	ConversionsGetStatisticsAllListTimeFrameEnumYesterday     ConversionsGetStatisticsAllListTimeFrameEnum = "yesterday"
	ConversionsGetStatisticsAllListTimeFrameEnumLast7         ConversionsGetStatisticsAllListTimeFrameEnum = "last7"
	ConversionsGetStatisticsAllListTimeFrameEnumLast30        ConversionsGetStatisticsAllListTimeFrameEnum = "last30"
	ConversionsGetStatisticsAllListTimeFrameEnumLastmonth     ConversionsGetStatisticsAllListTimeFrameEnum = "lastmonth"
	ConversionsGetStatisticsAllListTimeFrameEnumCurrentmonth  ConversionsGetStatisticsAllListTimeFrameEnum = "currentmonth"
	ConversionsGetStatisticsAllListTimeFrameEnumPreviousmonth ConversionsGetStatisticsAllListTimeFrameEnum = "previousmonth"
	ConversionsGetStatisticsAllListTimeFrameEnumLast90        ConversionsGetStatisticsAllListTimeFrameEnum = "last90"
	ConversionsGetStatisticsAllListTimeFrameEnumLast120       ConversionsGetStatisticsAllListTimeFrameEnum = "last120"
	ConversionsGetStatisticsAllListTimeFrameEnumLast180       ConversionsGetStatisticsAllListTimeFrameEnum = "last180"
	ConversionsGetStatisticsAllListTimeFrameEnumLast12months  ConversionsGetStatisticsAllListTimeFrameEnum = "last12months"
	ConversionsGetStatisticsAllListTimeFrameEnumLastyear      ConversionsGetStatisticsAllListTimeFrameEnum = "lastyear"
	ConversionsGetStatisticsAllListTimeFrameEnumCurrentyear   ConversionsGetStatisticsAllListTimeFrameEnum = "currentyear"
	ConversionsGetStatisticsAllListTimeFrameEnumBeginning     ConversionsGetStatisticsAllListTimeFrameEnum = "beginning"
	ConversionsGetStatisticsAllListTimeFrameEnumCustom        ConversionsGetStatisticsAllListTimeFrameEnum = "custom"
)

func (e *ConversionsGetStatisticsAllListTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = ConversionsGetStatisticsAllListTimeFrameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetStatisticsAllListTimeFrameEnum: %s", s)
	}
}

type ConversionsGetStatisticsAllListRequest struct {
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
	GroupBy *ConversionsGetStatisticsAllListGroupByEnum `queryParam:"style=form,explode=true,name=groupBy"`
	// Status of conversion ("deleted"/"active")
	Status *ConversionsGetStatisticsAllListStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame ConversionsGetStatisticsAllListTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type ConversionsGetStatisticsAllListResponse struct {
	APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult *shared.APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
