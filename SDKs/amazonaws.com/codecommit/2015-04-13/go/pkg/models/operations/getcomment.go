// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCommentXAmzTargetEnum
type GetCommentXAmzTargetEnum string

const (
	GetCommentXAmzTargetEnumCodeCommit20150413GetComment GetCommentXAmzTargetEnum = "CodeCommit_20150413.GetComment"
)

func (e *GetCommentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeCommit_20150413.GetComment":
		*e = GetCommentXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCommentXAmzTargetEnum: %s", s)
	}
}

type GetCommentRequest struct {
	GetCommentInput   shared.GetCommentInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetCommentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetCommentResponse struct {
	// CommentDeletedException
	CommentDeletedException interface{}
	// CommentDoesNotExistException
	CommentDoesNotExistException interface{}
	// CommentIdRequiredException
	CommentIDRequiredException interface{}
	ContentType                string
	// EncryptionIntegrityChecksFailedException
	EncryptionIntegrityChecksFailedException interface{}
	// EncryptionKeyAccessDeniedException
	EncryptionKeyAccessDeniedException interface{}
	// EncryptionKeyDisabledException
	EncryptionKeyDisabledException interface{}
	// EncryptionKeyNotFoundException
	EncryptionKeyNotFoundException interface{}
	// EncryptionKeyUnavailableException
	EncryptionKeyUnavailableException interface{}
	// Success
	GetCommentOutput *shared.GetCommentOutput
	// InvalidCommentIdException
	InvalidCommentIDException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
