/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * HdfsDetail - Details of the new HDFS directory.
 */
public class HdfsDetail {
    /**
     * The ID of the SLA Domain configured directly on the Rubrik object.
     */
    @JsonProperty("configuredSlaDomainId")
    public String configuredSlaDomainId;

    public HdfsDetail withConfiguredSlaDomainId(String configuredSlaDomainId) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        return this;
    }
    
    /**
     * The name of the SLA Domain configured directly on the Rubrik object.
     */
    @JsonProperty("configuredSlaDomainName")
    public String configuredSlaDomainName;

    public HdfsDetail withConfiguredSlaDomainName(String configuredSlaDomainName) {
        this.configuredSlaDomainName = configuredSlaDomainName;
        return this;
    }
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainType")
    public ConfiguredSlaTypeEnum configuredSlaDomainType;

    public HdfsDetail withConfiguredSlaDomainType(ConfiguredSlaTypeEnum configuredSlaDomainType) {
        this.configuredSlaDomainType = configuredSlaDomainType;
        return this;
    }
    
    /**
     * The ID of the effective SLA Domain for a HDFS directory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaDomainId")
    public String effectiveSlaDomainId;

    public HdfsDetail withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * The name of the effective SLA Domain for this HDFS directory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaDomainName")
    public String effectiveSlaDomainName;

    public HdfsDetail withEffectiveSlaDomainName(String effectiveSlaDomainName) {
        this.effectiveSlaDomainName = effectiveSlaDomainName;
        return this;
    }
    
    /**
     * An optional field that contains the Polaris managed ID of the effective SLA Domain. Only applicable to SLA Domains managed by Polaris.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaDomainPolarisManagedId")
    public String effectiveSlaDomainPolarisManagedId;

    public HdfsDetail withEffectiveSlaDomainPolarisManagedId(String effectiveSlaDomainPolarisManagedId) {
        this.effectiveSlaDomainPolarisManagedId = effectiveSlaDomainPolarisManagedId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exceptions")
    public String[] exceptions;

    public HdfsDetail withExceptions(String[] exceptions) {
        this.exceptions = exceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludes")
    public String[] excludes;

    public HdfsDetail withExcludes(String[] excludes) {
        this.excludes = excludes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostId")
    public String hostId;

    public HdfsDetail withHostId(String hostId) {
        this.hostId = hostId;
        return this;
    }
    
    @JsonProperty("hostName")
    public String hostName;

    public HdfsDetail withHostName(String hostName) {
        this.hostName = hostName;
        return this;
    }
    
    /**
     * The ID of the Rubrik object.
     */
    @JsonProperty("id")
    public String id;

    public HdfsDetail withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("includes")
    public String[] includes;

    public HdfsDetail withIncludes(String[] includes) {
        this.includes = includes;
        return this;
    }
    
    /**
     * Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isConfiguredSlaDomainRetentionLocked")
    public Boolean isConfiguredSlaDomainRetentionLocked;

    public HdfsDetail withIsConfiguredSlaDomainRetentionLocked(Boolean isConfiguredSlaDomainRetentionLocked) {
        this.isConfiguredSlaDomainRetentionLocked = isConfiguredSlaDomainRetentionLocked;
        return this;
    }
    
    /**
     * An optional Boolean value that specifies whether the effective SLA Domain of a HDFS directory is Retention Locked. When this value is 'true,' the SLA Domain is retention locked. When this value is 'false,' the SLA Domain is not Retention Locked.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEffectiveSlaDomainRetentionLocked")
    public Boolean isEffectiveSlaDomainRetentionLocked;

    public HdfsDetail withIsEffectiveSlaDomainRetentionLocked(Boolean isEffectiveSlaDomainRetentionLocked) {
        this.isEffectiveSlaDomainRetentionLocked = isEffectiveSlaDomainRetentionLocked;
        return this;
    }
    
    @JsonProperty("isRelic")
    public Boolean isRelic;

    public HdfsDetail withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localStorage")
    public Long localStorage;

    public HdfsDetail withLocalStorage(Long localStorage) {
        this.localStorage = localStorage;
        return this;
    }
    
    /**
     * The name of the Rubrik object.
     */
    @JsonProperty("name")
    public String name;

    public HdfsDetail withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ID of the cluster that manages the Rubrik object.
     */
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public HdfsDetail withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("protectionDate")
    public OffsetDateTime protectionDate;

    public HdfsDetail withProtectionDate(OffsetDateTime protectionDate) {
        this.protectionDate = protectionDate;
        return this;
    }
    
    /**
     * The UTC time when the SLA Domain was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("slaLastUpdateTime")
    public OffsetDateTime slaLastUpdateTime;

    public HdfsDetail withSlaLastUpdateTime(OffsetDateTime slaLastUpdateTime) {
        this.slaLastUpdateTime = slaLastUpdateTime;
        return this;
    }
    
    @JsonProperty("snapshotCount")
    public Integer snapshotCount;

    public HdfsDetail withSnapshotCount(Integer snapshotCount) {
        this.snapshotCount = snapshotCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshots")
    public HdfsSnapshotSummary[] snapshots;

    public HdfsDetail withSnapshots(HdfsSnapshotSummary[] snapshots) {
        this.snapshots = snapshots;
        return this;
    }
    
    @JsonProperty("templateId")
    public String templateId;

    public HdfsDetail withTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }
    
    @JsonProperty("templateName")
    public String templateName;

    public HdfsDetail withTemplateName(String templateName) {
        this.templateName = templateName;
        return this;
    }
    
    public HdfsDetail(@JsonProperty("configuredSlaDomainId") String configuredSlaDomainId, @JsonProperty("configuredSlaDomainName") String configuredSlaDomainName, @JsonProperty("hostName") String hostName, @JsonProperty("id") String id, @JsonProperty("includes") String[] includes, @JsonProperty("isRelic") Boolean isRelic, @JsonProperty("name") String name, @JsonProperty("primaryClusterId") String primaryClusterId, @JsonProperty("snapshotCount") Integer snapshotCount, @JsonProperty("templateId") String templateId, @JsonProperty("templateName") String templateName) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        this.configuredSlaDomainName = configuredSlaDomainName;
        this.hostName = hostName;
        this.id = id;
        this.includes = includes;
        this.isRelic = isRelic;
        this.name = name;
        this.primaryClusterId = primaryClusterId;
        this.snapshotCount = snapshotCount;
        this.templateId = templateId;
        this.templateName = templateName;
  }
}
