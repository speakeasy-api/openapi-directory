// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeIpamScopesActionEnum
type POSTDescribeIpamScopesActionEnum string

const (
	POSTDescribeIpamScopesActionEnumDescribeIpamScopes POSTDescribeIpamScopesActionEnum = "DescribeIpamScopes"
)

func (e POSTDescribeIpamScopesActionEnum) ToPointer() *POSTDescribeIpamScopesActionEnum {
	return &e
}

func (e *POSTDescribeIpamScopesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeIpamScopes":
		*e = POSTDescribeIpamScopesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeIpamScopesActionEnum: %v", v)
	}
}

// POSTDescribeIpamScopesVersionEnum
type POSTDescribeIpamScopesVersionEnum string

const (
	POSTDescribeIpamScopesVersionEnumTwoThousandAndSixteen1115 POSTDescribeIpamScopesVersionEnum = "2016-11-15"
)

func (e POSTDescribeIpamScopesVersionEnum) ToPointer() *POSTDescribeIpamScopesVersionEnum {
	return &e
}

func (e *POSTDescribeIpamScopesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDescribeIpamScopesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeIpamScopesVersionEnum: %v", v)
	}
}

type POSTDescribeIpamScopesRequest struct {
	Action POSTDescribeIpamScopesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                           `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                            `request:"mediaType=text/xml"`
	Version           POSTDescribeIpamScopesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeIpamScopesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
