/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2FieldTransformation } from "./googleprivacydlpv2fieldtransformation";
import { GooglePrivacyDlpV2RecordSuppression } from "./googleprivacydlpv2recordsuppression";
import { Expose, Type } from "class-transformer";

/**
 * A type of transformation that is applied over structured data such as a table.
 */
export class GooglePrivacyDlpV2RecordTransformations extends SpeakeasyBase {
  /**
   * Transform the record by applying various field transformations.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2FieldTransformation })
  @Expose({ name: "fieldTransformations" })
  @Type(() => GooglePrivacyDlpV2FieldTransformation)
  fieldTransformations?: GooglePrivacyDlpV2FieldTransformation[];

  /**
   * Configuration defining which records get suppressed entirely. Records that match any suppression rule are omitted from the output.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2RecordSuppression })
  @Expose({ name: "recordSuppressions" })
  @Type(() => GooglePrivacyDlpV2RecordSuppression)
  recordSuppressions?: GooglePrivacyDlpV2RecordSuppression[];
}
