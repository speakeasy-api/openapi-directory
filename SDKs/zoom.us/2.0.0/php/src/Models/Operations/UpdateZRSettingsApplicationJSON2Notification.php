<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateZRSettingsApplicationJSON2Notification - [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. 
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateZRSettingsApplicationJSON2Notification
{
    /**
     * Send an alert when the audio echo test result meets usability threshold.
     * 
     * @var ?bool $audioMeetUsabilityThreshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('audio_meet_usability_threshold')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $audioMeetUsabilityThreshold = null;
    
    /**
     * Send an alert when the audio echo test result does not meet usability threshold.
     * 
     * @var ?bool $audioNotMeetUsabilityThreshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('audio_not_meet_usability_threshold')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $audioNotMeetUsabilityThreshold = null;
    
    /**
     * Send an alert when the battery starts charging.
     * 
     * @var ?bool $batteryIsCharging
     */
	#[\JMS\Serializer\Annotation\SerializedName('battery_is_charging')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $batteryIsCharging = null;
    
    /**
     * Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
     * 
     * @var ?bool $batteryLowAndNotCharging
     */
	#[\JMS\Serializer\Annotation\SerializedName('battery_low_and_not_charging')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $batteryLowAndNotCharging = null;
    
    /**
     * Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.
     * 
     * @var ?string $batteryPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('battery_percentage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $batteryPercentage = null;
    
    /**
     * Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
     * 
     * @var ?bool $controllerSchedulingDisconnected
     */
	#[\JMS\Serializer\Annotation\SerializedName('controller_scheduling_disconnected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $controllerSchedulingDisconnected = null;
    
    /**
     * Send an alert when the Controller or Scheduling Display can be detected again.
     * 
     * @var ?bool $controllerSchedulingReconnected
     */
	#[\JMS\Serializer\Annotation\SerializedName('controller_scheduling_reconnected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $controllerSchedulingReconnected = null;
    
    /**
     * Send an alert when CPU usage is above 90%.
     * 
     * @var ?bool $cpuUsageHighDetected
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpu_usage_high_detected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cpuUsageHighDetected = null;
    
    /**
     * Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.
     * 
     * @var ?bool $micSpeakerCameraDisconnected
     */
	#[\JMS\Serializer\Annotation\SerializedName('mic_speaker_camera_disconnected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $micSpeakerCameraDisconnected = null;
    
    /**
     * Send an alert when the mic, speaker or camera is reconnected.
     * 
     * @var ?bool $micSpeakerCameraReconnected
     */
	#[\JMS\Serializer\Annotation\SerializedName('mic_speaker_camera_reconnected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $micSpeakerCameraReconnected = null;
    
    /**
     * Send an alert when low bandwidth network is detected
     * 
     * @var ?bool $networkUnstableDetected
     */
	#[\JMS\Serializer\Annotation\SerializedName('network_unstable_detected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $networkUnstableDetected = null;
    
    /**
     * Send an alert when SIP registration stops working. 
     * 
     * @var ?bool $sipRegistrationFailed
     */
	#[\JMS\Serializer\Annotation\SerializedName('sip_registration_failed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $sipRegistrationFailed = null;
    
    /**
     * Send an alert after the SIP registration is re-enabled.
     * 
     * @var ?bool $sipRegistrationReEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('sip_registration_re_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $sipRegistrationReEnabled = null;
    
    /**
     * Send an alert when the Zoom Room is online after previously being offline.
     * 
     * @var ?bool $zoomRoomComeBackOnline
     */
	#[\JMS\Serializer\Annotation\SerializedName('zoom_room_come_back_online')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $zoomRoomComeBackOnline = null;
    
    /**
     * Send an alert when the TV display is disconnected
     * 
     * @var ?bool $zoomRoomDisplayDisconnected
     */
	#[\JMS\Serializer\Annotation\SerializedName('zoom_room_display_disconnected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $zoomRoomDisplayDisconnected = null;
    
    /**
     * Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
     * 
     * @var ?bool $zoomRoomOffline
     */
	#[\JMS\Serializer\Annotation\SerializedName('zoom_room_offline')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $zoomRoomOffline = null;
    
	public function __construct()
	{
		$this->audioMeetUsabilityThreshold = null;
		$this->audioNotMeetUsabilityThreshold = null;
		$this->batteryIsCharging = null;
		$this->batteryLowAndNotCharging = null;
		$this->batteryPercentage = null;
		$this->controllerSchedulingDisconnected = null;
		$this->controllerSchedulingReconnected = null;
		$this->cpuUsageHighDetected = null;
		$this->micSpeakerCameraDisconnected = null;
		$this->micSpeakerCameraReconnected = null;
		$this->networkUnstableDetected = null;
		$this->sipRegistrationFailed = null;
		$this->sipRegistrationReEnabled = null;
		$this->zoomRoomComeBackOnline = null;
		$this->zoomRoomDisplayDisconnected = null;
		$this->zoomRoomOffline = null;
	}
}
