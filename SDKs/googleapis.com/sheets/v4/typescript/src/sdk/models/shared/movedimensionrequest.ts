/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DimensionRange } from "./dimensionrange";
import { Expose, Type } from "class-transformer";

/**
 * Moves one or more rows or columns.
 */
export class MoveDimensionRequest extends SpeakeasyBase {
  /**
   * The zero-based start index of where to move the source data to, based on the coordinates *before* the source data is removed from the grid. Existing data will be shifted down or right (depending on the dimension) to make room for the moved dimensions. The source dimensions are removed from the grid, so the the data may end up in a different index than specified. For example, given `A1..A5` of `0, 1, 2, 3, 4` and wanting to move `"1"` and `"2"` to between `"3"` and `"4"`, the source would be `ROWS [1..3)`,and the destination index would be `"4"` (the zero-based index of row 5). The end result would be `A1..A5` of `0, 3, 1, 2, 4`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destinationIndex" })
  destinationIndex?: number;

  /**
   * A range along a single dimension on a sheet. All indexes are zero-based. Indexes are half open: the start index is inclusive and the end index is exclusive. Missing indexes indicate the range is unbounded on that side.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => DimensionRange)
  source?: DimensionRange;
}
