"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class CreateOrderTriggerParamsTriggerEventEnum(str, Enum):
    r"""Condition for the charge to become active.
    
    If the value of this field is `SpecificDate`, use the `specificTriggerDate` field to specify the date when the charge becomes active.
    """
    CONTRACT_EFFECTIVE = 'ContractEffective'
    SERVICE_ACTIVATION = 'ServiceActivation'
    CUSTOMER_ACCEPTANCE = 'CustomerAcceptance'
    SPECIFIC_DATE = 'SpecificDate'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateOrderTriggerParams:
    r"""Specifies when a charge becomes active."""
    
    specific_trigger_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('specificTriggerDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date in YYYY-MM-DD format. Only applicable if the value of the `triggerEvent` field is `SpecificDate`.
    
    While this field is applicable, if this field is not set, your `CreateSubscription` order action creates a `Pending` order and a `Pending Acceptance` subscription. If at the same time the service activation date is required and not set, a `Pending Activation` subscription is created.
    
    While this field is applicable, if this field is not set, the following order actions create a `Pending` order but do not impact the subscription status. **Note**: This feature is in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * AddProduct
     * UpdateProduct
     * RemoveProduct
     * RenewSubscription
     * TermsAndConditions
    """  
    trigger_event: Optional[CreateOrderTriggerParamsTriggerEventEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerEvent'), 'exclude': lambda f: f is None }})
    r"""Condition for the charge to become active.
    
    If the value of this field is `SpecificDate`, use the `specificTriggerDate` field to specify the date when the charge becomes active.
    """  
    