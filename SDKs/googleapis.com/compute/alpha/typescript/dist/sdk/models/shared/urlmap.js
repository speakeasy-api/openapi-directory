"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UrlMap = void 0;
var utils_1 = require("../../../internal/utils");
var customerrorresponsepolicy_1 = require("./customerrorresponsepolicy");
var hostrule_1 = require("./hostrule");
var httpheaderaction_1 = require("./httpheaderaction");
var httpredirectaction_1 = require("./httpredirectaction");
var httprouteaction_1 = require("./httprouteaction");
var pathmatcher_1 = require("./pathmatcher");
var urlmaptest_1 = require("./urlmaptest");
var class_transformer_1 = require("class-transformer");
/**
 * Represents a URL Map resource. Compute Engine has two URL Map resources: * [Global](/compute/docs/reference/rest/alpha/urlMaps) * [Regional](/compute/docs/reference/rest/alpha/regionUrlMaps) A URL map resource is a component of certain types of cloud load balancers and Traffic Director: * urlMaps are used by external HTTP(S) load balancers and Traffic Director. * regionUrlMaps are used by internal HTTP(S) load balancers. For a list of supported URL map features by the load balancer type, see the Load balancing features: Routing and traffic management table. For a list of supported URL map features for Traffic Director, see the Traffic Director features: Routing and traffic management table. This resource defines mappings from hostnames and URL paths to either a backend service or a backend bucket. To use the global urlMaps resource, the backend service must have a loadBalancingScheme of either EXTERNAL or INTERNAL_SELF_MANAGED. To use the regionUrlMaps resource, the backend service must have a loadBalancingScheme of INTERNAL_MANAGED. For more information, read URL Map Concepts.
 */
var UrlMap = /** @class */ (function (_super) {
    __extends(UrlMap, _super);
    function UrlMap() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultCustomErrorResponsePolicy" }),
        (0, class_transformer_1.Type)(function () { return customerrorresponsepolicy_1.CustomErrorResponsePolicy; }),
        __metadata("design:type", customerrorresponsepolicy_1.CustomErrorResponsePolicy)
    ], UrlMap.prototype, "defaultCustomErrorResponsePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultRouteAction" }),
        (0, class_transformer_1.Type)(function () { return httprouteaction_1.HttpRouteAction; }),
        __metadata("design:type", httprouteaction_1.HttpRouteAction)
    ], UrlMap.prototype, "defaultRouteAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultService" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "defaultService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultUrlRedirect" }),
        (0, class_transformer_1.Type)(function () { return httpredirectaction_1.HttpRedirectAction; }),
        __metadata("design:type", httpredirectaction_1.HttpRedirectAction)
    ], UrlMap.prototype, "defaultUrlRedirect", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fingerprint" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "fingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "headerAction" }),
        (0, class_transformer_1.Type)(function () { return httpheaderaction_1.HttpHeaderAction; }),
        __metadata("design:type", httpheaderaction_1.HttpHeaderAction)
    ], UrlMap.prototype, "headerAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: hostrule_1.HostRule }),
        (0, class_transformer_1.Expose)({ name: "hostRules" }),
        (0, class_transformer_1.Type)(function () { return hostrule_1.HostRule; }),
        __metadata("design:type", Array)
    ], UrlMap.prototype, "hostRules", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: pathmatcher_1.PathMatcher }),
        (0, class_transformer_1.Expose)({ name: "pathMatchers" }),
        (0, class_transformer_1.Type)(function () { return pathmatcher_1.PathMatcher; }),
        __metadata("design:type", Array)
    ], UrlMap.prototype, "pathMatchers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], UrlMap.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: urlmaptest_1.UrlMapTest }),
        (0, class_transformer_1.Expose)({ name: "tests" }),
        (0, class_transformer_1.Type)(function () { return urlmaptest_1.UrlMapTest; }),
        __metadata("design:type", Array)
    ], UrlMap.prototype, "tests", void 0);
    return UrlMap;
}(utils_1.SpeakeasyBase));
exports.UrlMap = UrlMap;
