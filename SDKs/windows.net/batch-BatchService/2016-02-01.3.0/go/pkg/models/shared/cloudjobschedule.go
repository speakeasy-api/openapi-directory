// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CloudJobSchedulePreviousStateEnum - The previous state of the job schedule.
type CloudJobSchedulePreviousStateEnum string

const (
	CloudJobSchedulePreviousStateEnumActive      CloudJobSchedulePreviousStateEnum = "active"
	CloudJobSchedulePreviousStateEnumCompleted   CloudJobSchedulePreviousStateEnum = "completed"
	CloudJobSchedulePreviousStateEnumDisabled    CloudJobSchedulePreviousStateEnum = "disabled"
	CloudJobSchedulePreviousStateEnumTerminating CloudJobSchedulePreviousStateEnum = "terminating"
	CloudJobSchedulePreviousStateEnumDeleting    CloudJobSchedulePreviousStateEnum = "deleting"
)

func (e *CloudJobSchedulePreviousStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "completed":
		fallthrough
	case "disabled":
		fallthrough
	case "terminating":
		fallthrough
	case "deleting":
		*e = CloudJobSchedulePreviousStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudJobSchedulePreviousStateEnum: %s", s)
	}
}

// CloudJobScheduleStateEnum - The current state of the job schedule.
type CloudJobScheduleStateEnum string

const (
	CloudJobScheduleStateEnumActive      CloudJobScheduleStateEnum = "active"
	CloudJobScheduleStateEnumCompleted   CloudJobScheduleStateEnum = "completed"
	CloudJobScheduleStateEnumDisabled    CloudJobScheduleStateEnum = "disabled"
	CloudJobScheduleStateEnumTerminating CloudJobScheduleStateEnum = "terminating"
	CloudJobScheduleStateEnumDeleting    CloudJobScheduleStateEnum = "deleting"
)

func (e *CloudJobScheduleStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "completed":
		fallthrough
	case "disabled":
		fallthrough
	case "terminating":
		fallthrough
	case "deleting":
		*e = CloudJobScheduleStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudJobScheduleStateEnum: %s", s)
	}
}

// CloudJobSchedule - A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
type CloudJobSchedule struct {
	// The creation time of the job schedule.
	CreationTime *time.Time `json:"creationTime,omitempty"`
	// The display name for the schedule.
	DisplayName *string `json:"displayName,omitempty"`
	// The ETag of the job schedule.
	ETag *string `json:"eTag,omitempty"`
	// Specifies how tasks should be run in a job associated with a job schedule.
	ExecutionInfo *JobScheduleExecutionInformation `json:"executionInfo,omitempty"`
	// A string that uniquely identifies the schedule within the account. A GUID is recommended.
	ID *string `json:"id,omitempty"`
	// Specifies details of the jobs to be created on a schedule.
	JobSpecification *JobSpecification `json:"jobSpecification,omitempty"`
	// The last modified time of the job schedule.
	LastModified *time.Time `json:"lastModified,omitempty"`
	// A list of name-value pairs associated with the schedule as metadata.
	Metadata []MetadataItem `json:"metadata,omitempty"`
	// The previous state of the job schedule.
	PreviousState *CloudJobSchedulePreviousStateEnum `json:"previousState,omitempty"`
	// The time at which the job schedule entered its previous state.
	PreviousStateTransitionTime *time.Time `json:"previousStateTransitionTime,omitempty"`
	// The schedule according to which jobs will be created
	Schedule *Schedule `json:"schedule,omitempty"`
	// The current state of the job schedule.
	State *CloudJobScheduleStateEnum `json:"state,omitempty"`
	// The time at which the job schedule entered the current state.
	StateTransitionTime *time.Time `json:"stateTransitionTime,omitempty"`
	// Resource usage statistics for a job schedule.
	Stats *JobScheduleStatistics `json:"stats,omitempty"`
	// The URL of the job schedule.
	URL *string `json:"url,omitempty"`
}
