"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import appspeccontent as shared_appspeccontent
from ..shared import githublocation as shared_githublocation
from ..shared import rawstring as shared_rawstring
from ..shared import revisionlocationtype_enum as shared_revisionlocationtype_enum
from ..shared import s3location as shared_s3location
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RevisionLocation:
    r"""Information about the location of an application revision."""
    
    app_spec_content: Optional[shared_appspeccontent.AppSpecContent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appSpecContent'), 'exclude': lambda f: f is None }})  
    git_hub_location: Optional[shared_githublocation.GitHubLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gitHubLocation'), 'exclude': lambda f: f is None }})  
    revision_type: Optional[shared_revisionlocationtype_enum.RevisionLocationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revisionType'), 'exclude': lambda f: f is None }})  
    s3_location: Optional[shared_s3location.S3Location] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('s3Location'), 'exclude': lambda f: f is None }})  
    string: Optional[shared_rawstring.RawString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('string'), 'exclude': lambda f: f is None }})  
    