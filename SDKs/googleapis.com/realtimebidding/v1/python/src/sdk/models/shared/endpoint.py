"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EndpointBidProtocolEnum(str, Enum):
    r"""The protocol that the bidder endpoint is using."""
    BID_PROTOCOL_UNSPECIFIED = 'BID_PROTOCOL_UNSPECIFIED'
    GOOGLE_RTB = 'GOOGLE_RTB'
    OPENRTB_JSON = 'OPENRTB_JSON'
    OPENRTB_PROTOBUF = 'OPENRTB_PROTOBUF'

class EndpointTradingLocationEnum(str, Enum):
    r"""The trading location that bid requests should be sent from. See https://developers.google.com/authorized-buyers/rtb/peer-guide#trading-locations for further information."""
    TRADING_LOCATION_UNSPECIFIED = 'TRADING_LOCATION_UNSPECIFIED'
    US_WEST = 'US_WEST'
    US_EAST = 'US_EAST'
    EUROPE = 'EUROPE'
    ASIA = 'ASIA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Endpoint:
    r"""Bidder endpoint that receives bid requests."""
    
    bid_protocol: Optional[EndpointBidProtocolEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bidProtocol'), 'exclude': lambda f: f is None }})
    r"""The protocol that the bidder endpoint is using."""  
    maximum_qps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maximumQps'), 'exclude': lambda f: f is None }})
    r"""The maximum number of queries per second allowed to be sent to this server."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Name of the endpoint resource that must follow the pattern `bidders/{bidderAccountId}/endpoints/{endpointId}`, where {bidderAccountId} is the account ID of the bidder who operates this endpoint, and {endpointId} is a unique ID assigned by the server."""  
    trading_location: Optional[EndpointTradingLocationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tradingLocation'), 'exclude': lambda f: f is None }})
    r"""The trading location that bid requests should be sent from. See https://developers.google.com/authorized-buyers/rtb/peer-guide#trading-locations for further information."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""Output only. The URL that bid requests should be sent to."""  
    