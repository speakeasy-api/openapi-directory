"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import leaderboardscorerank as shared_leaderboardscorerank
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PlayerLeaderboardScoreTimeSpanEnum(str, Enum):
    r"""The time span of this score."""
    SCORE_TIME_SPAN_UNSPECIFIED = 'SCORE_TIME_SPAN_UNSPECIFIED'
    ALL_TIME = 'ALL_TIME'
    WEEKLY = 'WEEKLY'
    DAILY = 'DAILY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlayerLeaderboardScore:
    r"""A player leaderboard score object."""
    
    friends_rank: Optional[shared_leaderboardscorerank.LeaderboardScoreRank] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('friendsRank'), 'exclude': lambda f: f is None }})
    r"""A score rank in a leaderboard."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#playerLeaderboardScore`."""  
    leaderboard_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('leaderboard_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the leaderboard this score is in."""  
    public_rank: Optional[shared_leaderboardscorerank.LeaderboardScoreRank] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicRank'), 'exclude': lambda f: f is None }})
    r"""A score rank in a leaderboard."""  
    score_string: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scoreString'), 'exclude': lambda f: f is None }})
    r"""The formatted value of this score."""  
    score_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scoreTag'), 'exclude': lambda f: f is None }})
    r"""Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."""  
    score_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scoreValue'), 'exclude': lambda f: f is None }})
    r"""The numerical value of this score."""  
    social_rank: Optional[shared_leaderboardscorerank.LeaderboardScoreRank] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('socialRank'), 'exclude': lambda f: f is None }})
    r"""A score rank in a leaderboard."""  
    time_span: Optional[PlayerLeaderboardScoreTimeSpanEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeSpan'), 'exclude': lambda f: f is None }})
    r"""The time span of this score."""  
    write_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('writeTimestamp'), 'exclude': lambda f: f is None }})
    r"""The timestamp at which this score was recorded, in milliseconds since the epoch in UTC."""  
    