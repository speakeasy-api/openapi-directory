// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JQStatusEnum string

const (
	JQStatusEnumCreating JQStatusEnum = "CREATING"
	JQStatusEnumUpdating JQStatusEnum = "UPDATING"
	JQStatusEnumDeleting JQStatusEnum = "DELETING"
	JQStatusEnumDeleted  JQStatusEnum = "DELETED"
	JQStatusEnumValid    JQStatusEnum = "VALID"
	JQStatusEnumInvalid  JQStatusEnum = "INVALID"
)

func (e *JQStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		fallthrough
	case "VALID":
		fallthrough
	case "INVALID":
		*e = JQStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JQStatusEnum: %s", s)
	}
}
