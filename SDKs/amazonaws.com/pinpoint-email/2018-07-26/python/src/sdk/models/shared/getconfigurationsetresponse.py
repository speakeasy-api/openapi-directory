"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deliveryoptions as shared_deliveryoptions
from ..shared import reputationoptions as shared_reputationoptions
from ..shared import sendingoptions as shared_sendingoptions
from ..shared import tag as shared_tag
from ..shared import trackingoptions as shared_trackingoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetConfigurationSetResponse:
    r"""Information about a configuration set."""
    
    configuration_set_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationSetName'), 'exclude': lambda f: f is None }})  
    delivery_options: Optional[shared_deliveryoptions.DeliveryOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryOptions'), 'exclude': lambda f: f is None }})  
    reputation_options: Optional[shared_reputationoptions.ReputationOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReputationOptions'), 'exclude': lambda f: f is None }})  
    sending_options: Optional[shared_sendingoptions.SendingOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SendingOptions'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    tracking_options: Optional[shared_trackingoptions.TrackingOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrackingOptions'), 'exclude': lambda f: f is None }})  
    