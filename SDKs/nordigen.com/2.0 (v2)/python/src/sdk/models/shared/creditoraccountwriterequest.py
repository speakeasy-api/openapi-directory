"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import addresscountryenum_enum as shared_addresscountryenum_enum
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreditorAccountWriteRequestTypeEnum(str, Enum):
    r"""Creditor account type"""
    IBAN = 'IBAN'
    SCAN = 'SCAN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreditorAccountWriteRequest:
    r"""Creditor account write serializer."""
    
    account: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account') }})
    r"""Creditor account type identifier"""  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})
    r"""Creditor account currency"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Creditor account name"""  
    address_country: Optional[shared_addresscountryenum_enum.AddressCountryEnumEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address_country'), 'exclude': lambda f: f is None }})  
    address_street: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address_street'), 'exclude': lambda f: f is None }})
    r"""Creditor account address street"""  
    agent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agent'), 'exclude': lambda f: f is None }})
    r"""Creditor account BICFI Identifier"""  
    agent_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agent_name'), 'exclude': lambda f: f is None }})
    r"""Creditor account agent name"""  
    institution_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('institution_id'), 'exclude': lambda f: f is None }})
    r"""an Institution ID for this CreditorAccount"""  
    post_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('post_code'), 'exclude': lambda f: f is None }})
    r"""Creditor account address post code"""  
    type: Optional[CreditorAccountWriteRequestTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Creditor account type"""  
    