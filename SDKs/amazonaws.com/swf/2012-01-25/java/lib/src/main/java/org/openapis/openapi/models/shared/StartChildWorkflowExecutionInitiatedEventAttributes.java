/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StartChildWorkflowExecutionInitiatedEventAttributes - Provides the details of the &lt;code&gt;StartChildWorkflowExecutionInitiated&lt;/code&gt; event.
 */
public class StartChildWorkflowExecutionInitiatedEventAttributes {
    @JsonProperty("childPolicy")
    public ChildPolicyEnum childPolicy;

    public StartChildWorkflowExecutionInitiatedEventAttributes withChildPolicy(ChildPolicyEnum childPolicy) {
        this.childPolicy = childPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("control")
    public String control;

    public StartChildWorkflowExecutionInitiatedEventAttributes withControl(String control) {
        this.control = control;
        return this;
    }
    
    @JsonProperty("decisionTaskCompletedEventId")
    public Long decisionTaskCompletedEventId;

    public StartChildWorkflowExecutionInitiatedEventAttributes withDecisionTaskCompletedEventId(Long decisionTaskCompletedEventId) {
        this.decisionTaskCompletedEventId = decisionTaskCompletedEventId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionStartToCloseTimeout")
    public String executionStartToCloseTimeout;

    public StartChildWorkflowExecutionInitiatedEventAttributes withExecutionStartToCloseTimeout(String executionStartToCloseTimeout) {
        this.executionStartToCloseTimeout = executionStartToCloseTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("input")
    public String input;

    public StartChildWorkflowExecutionInitiatedEventAttributes withInput(String input) {
        this.input = input;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lambdaRole")
    public String lambdaRole;

    public StartChildWorkflowExecutionInitiatedEventAttributes withLambdaRole(String lambdaRole) {
        this.lambdaRole = lambdaRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagList")
    public String[] tagList;

    public StartChildWorkflowExecutionInitiatedEventAttributes withTagList(String[] tagList) {
        this.tagList = tagList;
        return this;
    }
    
    @JsonProperty("taskList")
    public TaskList taskList;

    public StartChildWorkflowExecutionInitiatedEventAttributes withTaskList(TaskList taskList) {
        this.taskList = taskList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskPriority")
    public String taskPriority;

    public StartChildWorkflowExecutionInitiatedEventAttributes withTaskPriority(String taskPriority) {
        this.taskPriority = taskPriority;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskStartToCloseTimeout")
    public String taskStartToCloseTimeout;

    public StartChildWorkflowExecutionInitiatedEventAttributes withTaskStartToCloseTimeout(String taskStartToCloseTimeout) {
        this.taskStartToCloseTimeout = taskStartToCloseTimeout;
        return this;
    }
    
    @JsonProperty("workflowId")
    public String workflowId;

    public StartChildWorkflowExecutionInitiatedEventAttributes withWorkflowId(String workflowId) {
        this.workflowId = workflowId;
        return this;
    }
    
    @JsonProperty("workflowType")
    public WorkflowType workflowType;

    public StartChildWorkflowExecutionInitiatedEventAttributes withWorkflowType(WorkflowType workflowType) {
        this.workflowType = workflowType;
        return this;
    }
    
    public StartChildWorkflowExecutionInitiatedEventAttributes(@JsonProperty("childPolicy") ChildPolicyEnum childPolicy, @JsonProperty("decisionTaskCompletedEventId") Long decisionTaskCompletedEventId, @JsonProperty("taskList") TaskList taskList, @JsonProperty("workflowId") String workflowId, @JsonProperty("workflowType") WorkflowType workflowType) {
        this.childPolicy = childPolicy;
        this.decisionTaskCompletedEventId = decisionTaskCompletedEventId;
        this.taskList = taskList;
        this.workflowId = workflowId;
        this.workflowType = workflowType;
  }
}
