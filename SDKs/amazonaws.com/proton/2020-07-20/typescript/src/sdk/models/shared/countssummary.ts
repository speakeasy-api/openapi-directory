/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceCountsSummary } from "./resourcecountssummary";
import { Expose, Type } from "class-transformer";

/**
 * Summary counts of each Proton resource type.
 */
export class CountsSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "components" })
  @Type(() => ResourceCountsSummary)
  components?: ResourceCountsSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentTemplates" })
  @Type(() => ResourceCountsSummary)
  environmentTemplates?: ResourceCountsSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "environments" })
  @Type(() => ResourceCountsSummary)
  environments?: ResourceCountsSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "pipelines" })
  @Type(() => ResourceCountsSummary)
  pipelines?: ResourceCountsSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceInstances" })
  @Type(() => ResourceCountsSummary)
  serviceInstances?: ResourceCountsSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceTemplates" })
  @Type(() => ResourceCountsSummary)
  serviceTemplates?: ResourceCountsSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "services" })
  @Type(() => ResourceCountsSummary)
  services?: ResourceCountsSummary;
}
