// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartSpeechSynthesisTaskRequestBodyEngineEnum - Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.
type StartSpeechSynthesisTaskRequestBodyEngineEnum string

const (
	StartSpeechSynthesisTaskRequestBodyEngineEnumStandard StartSpeechSynthesisTaskRequestBodyEngineEnum = "standard"
	StartSpeechSynthesisTaskRequestBodyEngineEnumNeural   StartSpeechSynthesisTaskRequestBodyEngineEnum = "neural"
)

func (e StartSpeechSynthesisTaskRequestBodyEngineEnum) ToPointer() *StartSpeechSynthesisTaskRequestBodyEngineEnum {
	return &e
}

func (e *StartSpeechSynthesisTaskRequestBodyEngineEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "standard":
		fallthrough
	case "neural":
		*e = StartSpeechSynthesisTaskRequestBodyEngineEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSpeechSynthesisTaskRequestBodyEngineEnum: %v", v)
	}
}

// StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum - <p>Optional language code for the Speech Synthesis request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>
type StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum string

const (
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumArb     StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "arb"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumCmnCn   StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "cmn-CN"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumCyGb    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "cy-GB"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumDaDk    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "da-DK"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumDeDe    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "de-DE"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEnAu    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "en-AU"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEnGb    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "en-GB"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEnGbWls StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "en-GB-WLS"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEnIn    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "en-IN"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEnUs    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "en-US"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEsEs    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "es-ES"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEsMx    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "es-MX"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEsUs    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "es-US"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumFrCa    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "fr-CA"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumFrFr    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "fr-FR"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumIsIs    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "is-IS"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumItIt    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "it-IT"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumJaJp    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "ja-JP"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumHiIn    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "hi-IN"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumKoKr    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "ko-KR"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumNbNo    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "nb-NO"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumNlNl    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "nl-NL"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumPlPl    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "pl-PL"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumPtBr    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "pt-BR"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumPtPt    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "pt-PT"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumRoRo    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "ro-RO"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumRuRu    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "ru-RU"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumSvSe    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "sv-SE"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumTrTr    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "tr-TR"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEnNz    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "en-NZ"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumEnZa    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "en-ZA"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumCaEs    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "ca-ES"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumDeAt    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "de-AT"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumYueCn   StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "yue-CN"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumArAe    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "ar-AE"
	StartSpeechSynthesisTaskRequestBodyLanguageCodeEnumFiFi    StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum = "fi-FI"
)

func (e StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum) ToPointer() *StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum {
	return &e
}

func (e *StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "arb":
		fallthrough
	case "cmn-CN":
		fallthrough
	case "cy-GB":
		fallthrough
	case "da-DK":
		fallthrough
	case "de-DE":
		fallthrough
	case "en-AU":
		fallthrough
	case "en-GB":
		fallthrough
	case "en-GB-WLS":
		fallthrough
	case "en-IN":
		fallthrough
	case "en-US":
		fallthrough
	case "es-ES":
		fallthrough
	case "es-MX":
		fallthrough
	case "es-US":
		fallthrough
	case "fr-CA":
		fallthrough
	case "fr-FR":
		fallthrough
	case "is-IS":
		fallthrough
	case "it-IT":
		fallthrough
	case "ja-JP":
		fallthrough
	case "hi-IN":
		fallthrough
	case "ko-KR":
		fallthrough
	case "nb-NO":
		fallthrough
	case "nl-NL":
		fallthrough
	case "pl-PL":
		fallthrough
	case "pt-BR":
		fallthrough
	case "pt-PT":
		fallthrough
	case "ro-RO":
		fallthrough
	case "ru-RU":
		fallthrough
	case "sv-SE":
		fallthrough
	case "tr-TR":
		fallthrough
	case "en-NZ":
		fallthrough
	case "en-ZA":
		fallthrough
	case "ca-ES":
		fallthrough
	case "de-AT":
		fallthrough
	case "yue-CN":
		fallthrough
	case "ar-AE":
		fallthrough
	case "fi-FI":
		*e = StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum: %v", v)
	}
}

// StartSpeechSynthesisTaskRequestBodyOutputFormatEnum - The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json.
type StartSpeechSynthesisTaskRequestBodyOutputFormatEnum string

const (
	StartSpeechSynthesisTaskRequestBodyOutputFormatEnumJSON      StartSpeechSynthesisTaskRequestBodyOutputFormatEnum = "json"
	StartSpeechSynthesisTaskRequestBodyOutputFormatEnumMp3       StartSpeechSynthesisTaskRequestBodyOutputFormatEnum = "mp3"
	StartSpeechSynthesisTaskRequestBodyOutputFormatEnumOggVorbis StartSpeechSynthesisTaskRequestBodyOutputFormatEnum = "ogg_vorbis"
	StartSpeechSynthesisTaskRequestBodyOutputFormatEnumPcm       StartSpeechSynthesisTaskRequestBodyOutputFormatEnum = "pcm"
)

func (e StartSpeechSynthesisTaskRequestBodyOutputFormatEnum) ToPointer() *StartSpeechSynthesisTaskRequestBodyOutputFormatEnum {
	return &e
}

func (e *StartSpeechSynthesisTaskRequestBodyOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "mp3":
		fallthrough
	case "ogg_vorbis":
		fallthrough
	case "pcm":
		*e = StartSpeechSynthesisTaskRequestBodyOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSpeechSynthesisTaskRequestBodyOutputFormatEnum: %v", v)
	}
}

// StartSpeechSynthesisTaskRequestBodyTextTypeEnum - Specifies whether the input text is plain text or SSML. The default value is plain text.
type StartSpeechSynthesisTaskRequestBodyTextTypeEnum string

const (
	StartSpeechSynthesisTaskRequestBodyTextTypeEnumSsml StartSpeechSynthesisTaskRequestBodyTextTypeEnum = "ssml"
	StartSpeechSynthesisTaskRequestBodyTextTypeEnumText StartSpeechSynthesisTaskRequestBodyTextTypeEnum = "text"
)

func (e StartSpeechSynthesisTaskRequestBodyTextTypeEnum) ToPointer() *StartSpeechSynthesisTaskRequestBodyTextTypeEnum {
	return &e
}

func (e *StartSpeechSynthesisTaskRequestBodyTextTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ssml":
		fallthrough
	case "text":
		*e = StartSpeechSynthesisTaskRequestBodyTextTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSpeechSynthesisTaskRequestBodyTextTypeEnum: %v", v)
	}
}

// StartSpeechSynthesisTaskRequestBodyVoiceIDEnum - Voice ID to use for the synthesis.
type StartSpeechSynthesisTaskRequestBodyVoiceIDEnum string

const (
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumAditi     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Aditi"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumAmy       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Amy"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumAstrid    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Astrid"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumBianca    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Bianca"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumBrian     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Brian"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumCamila    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Camila"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumCarla     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Carla"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumCarmen    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Carmen"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumCeline    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Celine"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumChantal   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Chantal"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumConchita  StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Conchita"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumCristiano StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Cristiano"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumDora      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Dora"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumEmma      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Emma"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumEnrique   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Enrique"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumEwa       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ewa"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumFiliz     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Filiz"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumGabrielle StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Gabrielle"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumGeraint   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Geraint"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumGiorgio   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Giorgio"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumGwyneth   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Gwyneth"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumHans      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Hans"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumInes      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ines"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumIvy       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ivy"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumJacek     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Jacek"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumJan       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Jan"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumJoanna    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Joanna"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumJoey      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Joey"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumJustin    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Justin"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumKarl      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Karl"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumKendra    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Kendra"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumKevin     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Kevin"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumKimberly  StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Kimberly"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumLea       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Lea"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumLiv       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Liv"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumLotte     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Lotte"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumLucia     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Lucia"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumLupe      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Lupe"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMads      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Mads"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMaja      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Maja"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMarlene   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Marlene"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMathieu   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Mathieu"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMatthew   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Matthew"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMaxim     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Maxim"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMia       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Mia"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMiguel    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Miguel"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumMizuki    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Mizuki"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumNaja      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Naja"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumNicole    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Nicole"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumOlivia    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Olivia"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumPenelope  StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Penelope"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumRaveena   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Raveena"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumRicardo   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ricardo"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumRuben     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ruben"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumRussell   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Russell"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumSalli     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Salli"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumSeoyeon   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Seoyeon"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumTakumi    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Takumi"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumTatyana   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Tatyana"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumVicki     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Vicki"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumVitoria   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Vitoria"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumZeina     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Zeina"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumZhiyu     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Zhiyu"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumAria      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Aria"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumAyanda    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ayanda"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumArlet     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Arlet"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumHannah    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Hannah"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumArthur    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Arthur"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumDaniel    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Daniel"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumLiam      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Liam"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumPedro     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Pedro"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumKajal     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Kajal"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumHiujin    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Hiujin"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumLaura     StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Laura"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumElin      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Elin"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumIda       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ida"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumSuvi      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Suvi"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumOla       StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ola"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumHala      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Hala"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumAndres    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Andres"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumSergio    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Sergio"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumRemi      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Remi"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumAdriano   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Adriano"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumThiago    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Thiago"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumRuth      StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Ruth"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumStephen   StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Stephen"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumKazuha    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Kazuha"
	StartSpeechSynthesisTaskRequestBodyVoiceIDEnumTomoko    StartSpeechSynthesisTaskRequestBodyVoiceIDEnum = "Tomoko"
)

func (e StartSpeechSynthesisTaskRequestBodyVoiceIDEnum) ToPointer() *StartSpeechSynthesisTaskRequestBodyVoiceIDEnum {
	return &e
}

func (e *StartSpeechSynthesisTaskRequestBodyVoiceIDEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Aditi":
		fallthrough
	case "Amy":
		fallthrough
	case "Astrid":
		fallthrough
	case "Bianca":
		fallthrough
	case "Brian":
		fallthrough
	case "Camila":
		fallthrough
	case "Carla":
		fallthrough
	case "Carmen":
		fallthrough
	case "Celine":
		fallthrough
	case "Chantal":
		fallthrough
	case "Conchita":
		fallthrough
	case "Cristiano":
		fallthrough
	case "Dora":
		fallthrough
	case "Emma":
		fallthrough
	case "Enrique":
		fallthrough
	case "Ewa":
		fallthrough
	case "Filiz":
		fallthrough
	case "Gabrielle":
		fallthrough
	case "Geraint":
		fallthrough
	case "Giorgio":
		fallthrough
	case "Gwyneth":
		fallthrough
	case "Hans":
		fallthrough
	case "Ines":
		fallthrough
	case "Ivy":
		fallthrough
	case "Jacek":
		fallthrough
	case "Jan":
		fallthrough
	case "Joanna":
		fallthrough
	case "Joey":
		fallthrough
	case "Justin":
		fallthrough
	case "Karl":
		fallthrough
	case "Kendra":
		fallthrough
	case "Kevin":
		fallthrough
	case "Kimberly":
		fallthrough
	case "Lea":
		fallthrough
	case "Liv":
		fallthrough
	case "Lotte":
		fallthrough
	case "Lucia":
		fallthrough
	case "Lupe":
		fallthrough
	case "Mads":
		fallthrough
	case "Maja":
		fallthrough
	case "Marlene":
		fallthrough
	case "Mathieu":
		fallthrough
	case "Matthew":
		fallthrough
	case "Maxim":
		fallthrough
	case "Mia":
		fallthrough
	case "Miguel":
		fallthrough
	case "Mizuki":
		fallthrough
	case "Naja":
		fallthrough
	case "Nicole":
		fallthrough
	case "Olivia":
		fallthrough
	case "Penelope":
		fallthrough
	case "Raveena":
		fallthrough
	case "Ricardo":
		fallthrough
	case "Ruben":
		fallthrough
	case "Russell":
		fallthrough
	case "Salli":
		fallthrough
	case "Seoyeon":
		fallthrough
	case "Takumi":
		fallthrough
	case "Tatyana":
		fallthrough
	case "Vicki":
		fallthrough
	case "Vitoria":
		fallthrough
	case "Zeina":
		fallthrough
	case "Zhiyu":
		fallthrough
	case "Aria":
		fallthrough
	case "Ayanda":
		fallthrough
	case "Arlet":
		fallthrough
	case "Hannah":
		fallthrough
	case "Arthur":
		fallthrough
	case "Daniel":
		fallthrough
	case "Liam":
		fallthrough
	case "Pedro":
		fallthrough
	case "Kajal":
		fallthrough
	case "Hiujin":
		fallthrough
	case "Laura":
		fallthrough
	case "Elin":
		fallthrough
	case "Ida":
		fallthrough
	case "Suvi":
		fallthrough
	case "Ola":
		fallthrough
	case "Hala":
		fallthrough
	case "Andres":
		fallthrough
	case "Sergio":
		fallthrough
	case "Remi":
		fallthrough
	case "Adriano":
		fallthrough
	case "Thiago":
		fallthrough
	case "Ruth":
		fallthrough
	case "Stephen":
		fallthrough
	case "Kazuha":
		fallthrough
	case "Tomoko":
		*e = StartSpeechSynthesisTaskRequestBodyVoiceIDEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSpeechSynthesisTaskRequestBodyVoiceIDEnum: %v", v)
	}
}

type StartSpeechSynthesisTaskRequestBody struct {
	// Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.
	Engine *StartSpeechSynthesisTaskRequestBodyEngineEnum `json:"Engine,omitempty"`
	// <p>Optional language code for the Speech Synthesis request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the <a href="https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>
	LanguageCode *StartSpeechSynthesisTaskRequestBodyLanguageCodeEnum `json:"LanguageCode,omitempty"`
	// List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice.
	LexiconNames []string `json:"LexiconNames,omitempty"`
	// The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json.
	OutputFormat StartSpeechSynthesisTaskRequestBodyOutputFormatEnum `json:"OutputFormat"`
	// Amazon S3 bucket name to which the output file will be saved.
	OutputS3BucketName string `json:"OutputS3BucketName"`
	// The Amazon S3 key prefix for the output speech file.
	OutputS3KeyPrefix *string `json:"OutputS3KeyPrefix,omitempty"`
	// <p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050", and "24000". The default value for standard voices is "22050". The default value for neural voices is "24000".</p> <p>Valid values for pcm are "8000" and "16000" The default value is "16000". </p>
	SampleRate *string `json:"SampleRate,omitempty"`
	// ARN for the SNS topic optionally used for providing status notification for a speech synthesis task.
	SnsTopicArn *string `json:"SnsTopicArn,omitempty"`
	// The type of speech marks returned for the input text.
	SpeechMarkTypes []shared.SpeechMarkTypeEnum `json:"SpeechMarkTypes,omitempty"`
	// The input text to synthesize. If you specify ssml as the TextType, follow the SSML format for the input text.
	Text string `json:"Text"`
	// Specifies whether the input text is plain text or SSML. The default value is plain text.
	TextType *StartSpeechSynthesisTaskRequestBodyTextTypeEnum `json:"TextType,omitempty"`
	// Voice ID to use for the synthesis.
	VoiceID StartSpeechSynthesisTaskRequestBodyVoiceIDEnum `json:"VoiceId"`
}

type StartSpeechSynthesisTaskRequest struct {
	RequestBody       StartSpeechSynthesisTaskRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type StartSpeechSynthesisTaskResponse struct {
	ContentType string
	// EngineNotSupportedException
	EngineNotSupportedException interface{}
	// InvalidS3BucketException
	InvalidS3BucketException interface{}
	// InvalidS3KeyException
	InvalidS3KeyException interface{}
	// InvalidSampleRateException
	InvalidSampleRateException interface{}
	// InvalidSnsTopicArnException
	InvalidSnsTopicArnException interface{}
	// InvalidSsmlException
	InvalidSsmlException interface{}
	// LanguageNotSupportedException
	LanguageNotSupportedException interface{}
	// LexiconNotFoundException
	LexiconNotFoundException interface{}
	// MarksNotSupportedForFormatException
	MarksNotSupportedForFormatException interface{}
	// ServiceFailureException
	ServiceFailureException interface{}
	// SsmlMarksNotSupportedForTextTypeException
	SsmlMarksNotSupportedForTextTypeException interface{}
	// Success
	StartSpeechSynthesisTaskOutput *shared.StartSpeechSynthesisTaskOutput
	StatusCode                     int
	RawResponse                    *http.Response
	// TextLengthExceededException
	TextLengthExceededException interface{}
}
