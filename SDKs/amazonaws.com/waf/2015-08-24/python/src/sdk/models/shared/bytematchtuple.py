"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldtomatch as shared_fieldtomatch
from ..shared import positionalconstraint_enum as shared_positionalconstraint_enum
from ..shared import texttransformation_enum as shared_texttransformation_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ByteMatchTuple:
    r"""<note> <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href=\\"https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html\\">AWS WAF Classic</a> in the developer guide.</p> <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href=\\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html\\">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p> </note> <p>The bytes (typically a string that corresponds with ASCII characters) that you want AWS WAF to search for in web requests, the location in requests that you want AWS WAF to search, and other settings.</p>"""
    
    field_to_match: shared_fieldtomatch.FieldToMatch = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FieldToMatch') }})  
    positional_constraint: shared_positionalconstraint_enum.PositionalConstraintEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PositionalConstraint') }})  
    target_string: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetString') }})  
    text_transformation: shared_texttransformation_enum.TextTransformationEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TextTransformation') }})  
    