// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExecutionStateEnum - Output only. State of the underlying AI Platform job.
type ExecutionStateEnum string

const (
	ExecutionStateEnumStateUnspecified ExecutionStateEnum = "STATE_UNSPECIFIED"
	ExecutionStateEnumQueued           ExecutionStateEnum = "QUEUED"
	ExecutionStateEnumPreparing        ExecutionStateEnum = "PREPARING"
	ExecutionStateEnumRunning          ExecutionStateEnum = "RUNNING"
	ExecutionStateEnumSucceeded        ExecutionStateEnum = "SUCCEEDED"
	ExecutionStateEnumFailed           ExecutionStateEnum = "FAILED"
	ExecutionStateEnumCancelling       ExecutionStateEnum = "CANCELLING"
	ExecutionStateEnumCancelled        ExecutionStateEnum = "CANCELLED"
	ExecutionStateEnumExpired          ExecutionStateEnum = "EXPIRED"
	ExecutionStateEnumInitializing     ExecutionStateEnum = "INITIALIZING"
)

func (e ExecutionStateEnum) ToPointer() *ExecutionStateEnum {
	return &e
}

func (e *ExecutionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "QUEUED":
		fallthrough
	case "PREPARING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "INITIALIZING":
		*e = ExecutionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionStateEnum: %v", v)
	}
}

// Execution - The definition of a single executed notebook.
type Execution struct {
	// Output only. Time the Execution was instantiated.
	CreateTime *string `json:"createTime,omitempty"`
	// A brief description of this execution.
	Description *string `json:"description,omitempty"`
	// Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.
	DisplayName *string `json:"displayName,omitempty"`
	// The description a notebook execution workload.
	ExecutionTemplate *ExecutionTemplate `json:"executionTemplate,omitempty"`
	// Output only. The URI of the external job used to execute the notebook.
	JobURI *string `json:"jobUri,omitempty"`
	// Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`
	Name *string `json:"name,omitempty"`
	// Output notebook file generated by this execution
	OutputNotebookFile *string `json:"outputNotebookFile,omitempty"`
	// Output only. State of the underlying AI Platform job.
	State *ExecutionStateEnum `json:"state,omitempty"`
	// Output only. Time the Execution was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// ExecutionInput - The definition of a single executed notebook.
type ExecutionInput struct {
	// A brief description of this execution.
	Description *string `json:"description,omitempty"`
	// The description a notebook execution workload.
	ExecutionTemplate *ExecutionTemplate `json:"executionTemplate,omitempty"`
	// Output notebook file generated by this execution
	OutputNotebookFile *string `json:"outputNotebookFile,omitempty"`
}
