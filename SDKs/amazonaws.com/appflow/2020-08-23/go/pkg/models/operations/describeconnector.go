// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeConnectorHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// DescribeConnectorRequestBodyConnectorTypeEnum - The connector type, such as CUSTOMCONNECTOR, Saleforce, Marketo. Please choose CUSTOMCONNECTOR for Lambda based custom connectors.
type DescribeConnectorRequestBodyConnectorTypeEnum string

const (
	DescribeConnectorRequestBodyConnectorTypeEnumSalesforce       DescribeConnectorRequestBodyConnectorTypeEnum = "Salesforce"
	DescribeConnectorRequestBodyConnectorTypeEnumSingular         DescribeConnectorRequestBodyConnectorTypeEnum = "Singular"
	DescribeConnectorRequestBodyConnectorTypeEnumSlack            DescribeConnectorRequestBodyConnectorTypeEnum = "Slack"
	DescribeConnectorRequestBodyConnectorTypeEnumRedshift         DescribeConnectorRequestBodyConnectorTypeEnum = "Redshift"
	DescribeConnectorRequestBodyConnectorTypeEnumS3               DescribeConnectorRequestBodyConnectorTypeEnum = "S3"
	DescribeConnectorRequestBodyConnectorTypeEnumMarketo          DescribeConnectorRequestBodyConnectorTypeEnum = "Marketo"
	DescribeConnectorRequestBodyConnectorTypeEnumGoogleanalytics  DescribeConnectorRequestBodyConnectorTypeEnum = "Googleanalytics"
	DescribeConnectorRequestBodyConnectorTypeEnumZendesk          DescribeConnectorRequestBodyConnectorTypeEnum = "Zendesk"
	DescribeConnectorRequestBodyConnectorTypeEnumServicenow       DescribeConnectorRequestBodyConnectorTypeEnum = "Servicenow"
	DescribeConnectorRequestBodyConnectorTypeEnumDatadog          DescribeConnectorRequestBodyConnectorTypeEnum = "Datadog"
	DescribeConnectorRequestBodyConnectorTypeEnumTrendmicro       DescribeConnectorRequestBodyConnectorTypeEnum = "Trendmicro"
	DescribeConnectorRequestBodyConnectorTypeEnumSnowflake        DescribeConnectorRequestBodyConnectorTypeEnum = "Snowflake"
	DescribeConnectorRequestBodyConnectorTypeEnumDynatrace        DescribeConnectorRequestBodyConnectorTypeEnum = "Dynatrace"
	DescribeConnectorRequestBodyConnectorTypeEnumInfornexus       DescribeConnectorRequestBodyConnectorTypeEnum = "Infornexus"
	DescribeConnectorRequestBodyConnectorTypeEnumAmplitude        DescribeConnectorRequestBodyConnectorTypeEnum = "Amplitude"
	DescribeConnectorRequestBodyConnectorTypeEnumVeeva            DescribeConnectorRequestBodyConnectorTypeEnum = "Veeva"
	DescribeConnectorRequestBodyConnectorTypeEnumEventBridge      DescribeConnectorRequestBodyConnectorTypeEnum = "EventBridge"
	DescribeConnectorRequestBodyConnectorTypeEnumLookoutMetrics   DescribeConnectorRequestBodyConnectorTypeEnum = "LookoutMetrics"
	DescribeConnectorRequestBodyConnectorTypeEnumUpsolver         DescribeConnectorRequestBodyConnectorTypeEnum = "Upsolver"
	DescribeConnectorRequestBodyConnectorTypeEnumHoneycode        DescribeConnectorRequestBodyConnectorTypeEnum = "Honeycode"
	DescribeConnectorRequestBodyConnectorTypeEnumCustomerProfiles DescribeConnectorRequestBodyConnectorTypeEnum = "CustomerProfiles"
	DescribeConnectorRequestBodyConnectorTypeEnumSapoData         DescribeConnectorRequestBodyConnectorTypeEnum = "SAPOData"
	DescribeConnectorRequestBodyConnectorTypeEnumCustomConnector  DescribeConnectorRequestBodyConnectorTypeEnum = "CustomConnector"
	DescribeConnectorRequestBodyConnectorTypeEnumPardot           DescribeConnectorRequestBodyConnectorTypeEnum = "Pardot"
)

func (e *DescribeConnectorRequestBodyConnectorTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Salesforce":
		fallthrough
	case "Singular":
		fallthrough
	case "Slack":
		fallthrough
	case "Redshift":
		fallthrough
	case "S3":
		fallthrough
	case "Marketo":
		fallthrough
	case "Googleanalytics":
		fallthrough
	case "Zendesk":
		fallthrough
	case "Servicenow":
		fallthrough
	case "Datadog":
		fallthrough
	case "Trendmicro":
		fallthrough
	case "Snowflake":
		fallthrough
	case "Dynatrace":
		fallthrough
	case "Infornexus":
		fallthrough
	case "Amplitude":
		fallthrough
	case "Veeva":
		fallthrough
	case "EventBridge":
		fallthrough
	case "LookoutMetrics":
		fallthrough
	case "Upsolver":
		fallthrough
	case "Honeycode":
		fallthrough
	case "CustomerProfiles":
		fallthrough
	case "SAPOData":
		fallthrough
	case "CustomConnector":
		fallthrough
	case "Pardot":
		*e = DescribeConnectorRequestBodyConnectorTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeConnectorRequestBodyConnectorTypeEnum: %s", s)
	}
}

type DescribeConnectorRequestBody struct {
	// The label of the connector. The label is unique for each <code>ConnectorRegistration</code> in your Amazon Web Services account. Only needed if calling for CUSTOMCONNECTOR connector type/.
	ConnectorLabel *string `json:"connectorLabel,omitempty"`
	// The connector type, such as CUSTOMCONNECTOR, Saleforce, Marketo. Please choose CUSTOMCONNECTOR for Lambda based custom connectors.
	ConnectorType DescribeConnectorRequestBodyConnectorTypeEnum `json:"connectorType"`
}

type DescribeConnectorRequest struct {
	Headers DescribeConnectorHeaders
	Request DescribeConnectorRequestBody `request:"mediaType=application/json"`
}

type DescribeConnectorResponse struct {
	ContentType string
	// Success
	DescribeConnectorResponse *shared.DescribeConnectorResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
