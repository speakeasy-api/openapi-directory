/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TestCreateSubscriptionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class TestCreateSubscriptionRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export class TestCreateSubscriptionSubscriptionSubscriptionTier extends SpeakeasyBase {
  /**
   * The name of the tier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Subscription information
 */
export class TestCreateSubscriptionSubscription extends SpeakeasyBase {
  /**
   * Is the subscription currently active?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Customer limits on concurrent devices
   */
  @SpeakeasyMetadata()
  @Expose({ name: "concurrentDevicesLimit" })
  concurrentDevicesLimit?: number;

  /**
   * The number of days left in the subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "daysLeft" })
  daysLeft?: number;

  /**
   * The date the subscription will end or ended
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endsAt" })
  endsAt?: string;

  /**
   * Id of the subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Current device concurrency utilization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runningDevices" })
  runningDevices?: number;

  /**
   * The date the subscription began
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startsAt" })
  startsAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tier" })
  @Type(() => TestCreateSubscriptionSubscriptionSubscriptionTier)
  tier?: TestCreateSubscriptionSubscriptionSubscriptionTier;
}

export class TestCreateSubscriptionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  subscription?: TestCreateSubscriptionSubscription;
}
