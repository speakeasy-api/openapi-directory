"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import processingjob as shared_processingjob
from ..shared import trainingjob as shared_trainingjob
from ..shared import transformjob as shared_transformjob
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrialComponentSourceDetail:
    r"""Detailed information about the source of a trial component. Either <code>ProcessingJob</code> or <code>TrainingJob</code> is returned."""
    
    processing_job: Optional[shared_processingjob.ProcessingJob] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProcessingJob'), 'exclude': lambda f: f is None }})  
    source_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceArn'), 'exclude': lambda f: f is None }})  
    training_job: Optional[shared_trainingjob.TrainingJob] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrainingJob'), 'exclude': lambda f: f is None }})  
    transform_job: Optional[shared_transformjob.TransformJob] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransformJob'), 'exclude': lambda f: f is None }})  
    