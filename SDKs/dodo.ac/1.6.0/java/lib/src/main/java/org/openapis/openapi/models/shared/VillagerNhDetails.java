/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VillagerNhDetails - An object that holds villager data specific to *New Horizons*. If the villager does not appear in *New Horizons*, this field will be set to null.
 */
public class VillagerNhDetails {
    /**
     * The default phrase a villager will use when speaking to the player.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catchphrase")
    public String catchphrase;

    public VillagerNhDetails withCatchphrase(String catchphrase) {
        this.catchphrase = catchphrase;
        return this;
    }
    
    /**
     * The default clothing that the villager wears.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clothing")
    public String clothing;

    public VillagerNhDetails withClothing(String clothing) {
        this.clothing = clothing;
        return this;
    }
    
    /**
     * The variation of the clothing (usually a color).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clothing_variation")
    public String clothingVariation;

    public VillagerNhDetails withClothingVariation(String clothingVariation) {
        this.clothingVariation = clothingVariation;
        return this;
    }
    
    /**
     * The villager's favorite colors (giving the villager a gift with one of their favorite colors increases friendship points).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fav_colors")
    public String[] favColors;

    public VillagerNhDetails withFavColors(String[] favColors) {
        this.favColors = favColors;
        return this;
    }
    
    /**
     * The villager's favorite clothing styles.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fav_styles")
    public String[] favStyles;

    public VillagerNhDetails withFavStyles(String[] favStyles) {
        this.favStyles = favStyles;
        return this;
    }
    
    /**
     * The villager's primary hobby, which determines most of the activities they will do around the island (e.g. education villagers will frequently read books and visit the museum). Learn more at https://nookipedia.com/wiki/Hobbies
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hobby")
    public VillagerNhDetailsHobbyEnum hobby;

    public VillagerNhDetails withHobby(VillagerNhDetailsHobbyEnum hobby) {
        this.hobby = hobby;
        return this;
    }
    
    /**
     * A rendered model of the villager's house exterior. Note that this is not an official Nintendo asset, but a render based of the in-game model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("house_exterior_url")
    public String houseExteriorUrl;

    public VillagerNhDetails withHouseExteriorUrl(String houseExteriorUrl) {
        this.houseExteriorUrl = houseExteriorUrl;
        return this;
    }
    
    /**
     * The flooring in the villager's house.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("house_flooring")
    public String houseFlooring;

    public VillagerNhDetails withHouseFlooring(String houseFlooring) {
        this.houseFlooring = houseFlooring;
        return this;
    }
    
    /**
     * A screenshot of the villager's house interior.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("house_interior_url")
    public String houseInteriorUrl;

    public VillagerNhDetails withHouseInteriorUrl(String houseInteriorUrl) {
        this.houseInteriorUrl = houseInteriorUrl;
        return this;
    }
    
    /**
     * The music in the villager's house.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("house_music")
    public String houseMusic;

    public VillagerNhDetails withHouseMusic(String houseMusic) {
        this.houseMusic = houseMusic;
        return this;
    }
    
    /**
     * Any notes about the villager's music. If populated, this is usually "Does not contain a stereo initially", meaning that the villager's house will not play music unless provided with a stereo.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("house_music_note")
    public String houseMusicNote;

    public VillagerNhDetails withHouseMusicNote(String houseMusicNote) {
        this.houseMusicNote = houseMusicNote;
        return this;
    }
    
    /**
     * The wallpaper in the villager's house.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("house_wallpaper")
    public String houseWallpaper;

    public VillagerNhDetails withHouseWallpaper(String houseWallpaper) {
        this.houseWallpaper = houseWallpaper;
        return this;
    }
    
    /**
     * The villager's icon of their head. See https://nookipedia.com/wiki/Category:New_Horizons_character_icons for full list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon_url")
    public String iconUrl;

    public VillagerNhDetails withIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }
    
    /**
     * Image of the villager from *New Horizons*.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image_url")
    public String imageUrl;

    public VillagerNhDetails withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * The villager's photo, received by the player after attaining a certain friendship level. See https://nookipedia.com/wiki/Category:New_Horizons_pictures for full list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photo_url")
    public String photoUrl;

    public VillagerNhDetails withPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
        return this;
    }
    
    /**
     * The villager's quote, as found on the back of their in-game photo.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quote")
    public String quote;

    public VillagerNhDetails withQuote(String quote) {
        this.quote = quote;
        return this;
    }
    
    /**
     * Each personality in *New Horizons* has two sub-personalities, currently referred to as just A and B. The effect of a sub-personality is currently unknown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sub-personality")
    public VillagerNhDetailsSubPersonalityEnum subPersonality;

    public VillagerNhDetails withSubPersonality(VillagerNhDetailsSubPersonalityEnum subPersonality) {
        this.subPersonality = subPersonality;
        return this;
    }
    
    public VillagerNhDetails(){}
}
