// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum - Indicates whether there are findings.
type DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum string

const (
	DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnumTrue    DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum = "true"
	DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnumFalse   DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum = "false"
	DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnumUnknown DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum = "unknown"
)

func (e DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum) ToPointer() *DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum {
	return &e
}

func (e *DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "true":
		fallthrough
	case "false":
		fallthrough
	case "unknown":
		*e = DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum: %v", v)
	}
}

// DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum - The status.
type DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum string

const (
	DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnumRunning   DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum = "running"
	DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnumSucceeded DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum = "succeeded"
	DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnumFailed    DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum = "failed"
)

func (e DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum) ToPointer() *DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum {
	return &e
}

func (e *DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "running":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		*e = DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum: %v", v)
	}
}

// DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesTags - Describes a tag.
type DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesTags struct {
	Key   *string
	Value *string
}

// DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalyses - Describes a Network Access Scope analysis.
type DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalyses struct {
	AnalyzedEniCount                      *int64
	EndDate                               *time.Time
	FindingsFound                         *DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesFindingsFoundEnum
	NetworkInsightsAccessScopeAnalysisArn *string
	NetworkInsightsAccessScopeAnalysisID  *string
	NetworkInsightsAccessScopeID          *string
	StartDate                             *time.Time
	Status                                *DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesStatusEnum
	StatusMessage                         *string
	Tags                                  []DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalysesTags
	WarningMessage                        *string
}

// DescribeNetworkInsightsAccessScopeAnalysesResult - Success
type DescribeNetworkInsightsAccessScopeAnalysesResult struct {
	NetworkInsightsAccessScopeAnalyses []DescribeNetworkInsightsAccessScopeAnalysesResultNetworkInsightsAccessScopeAnalyses
	NextToken                          *string
}
