// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PhoneUserSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PhoneUserRequest struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type PhoneUser200ApplicationXMLCallingPlan struct {
	// The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan.
	Type *int64
}

type PhoneUser200ApplicationXMLPhoneNumbers struct {
	// Phone Number Id
	ID *string
	// Phone number
	Number *string
}

// PhoneUser200ApplicationXMLStatusEnum - The status of the user.<br>
// `activate`: An active user. <br>
// `deactivate`: User has been deactivated from the ZoomPhone system.
type PhoneUser200ApplicationXMLStatusEnum string

const (
	PhoneUser200ApplicationXMLStatusEnumActivate   PhoneUser200ApplicationXMLStatusEnum = "activate"
	PhoneUser200ApplicationXMLStatusEnumDeactivate PhoneUser200ApplicationXMLStatusEnum = "deactivate"
)

func (e *PhoneUser200ApplicationXMLStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "activate":
		fallthrough
	case "deactivate":
		*e = PhoneUser200ApplicationXMLStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneUser200ApplicationXMLStatusEnum: %s", s)
	}
}

// PhoneUser200ApplicationXML - Zoom User Profile
type PhoneUser200ApplicationXML struct {
	// Calling Plan of the user
	CallingPlan []PhoneUser200ApplicationXMLCallingPlan
	// Email address of the user.
	Email *string
	// Extension number
	ExtensionNumber *int64
	// Zoom User Id.
	ID           *string
	PhoneNumbers []PhoneUser200ApplicationXMLPhoneNumbers
	// Zoom Phone User Id.
	PhoneUserID *string
	// Indicates whether the user is a [site admin](https://support.zoom.us/hc/en-us/articles/360042099012) or not.
	SiteAdmin *bool
	// Unique Identifier of a [site](https://support.zoom.us/hc/en-us/articles/360020809672).
	SiteID *string
	// The status of the user.<br>
	// `activate`: An active user. <br>
	// `deactivate`: User has been deactivated from the ZoomPhone system.
	Status *PhoneUser200ApplicationXMLStatusEnum
}

type PhoneUser200ApplicationJSONCallingPlan struct {
	// The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan.
	Type *int64 `json:"type,omitempty"`
}

type PhoneUser200ApplicationJSONPhoneNumbers struct {
	// Phone Number Id
	ID *string `json:"id,omitempty"`
	// Phone number
	Number *string `json:"number,omitempty"`
}

// PhoneUser200ApplicationJSONStatusEnum - The status of the user.<br>
// `activate`: An active user. <br>
// `deactivate`: User has been deactivated from the ZoomPhone system.
type PhoneUser200ApplicationJSONStatusEnum string

const (
	PhoneUser200ApplicationJSONStatusEnumActivate   PhoneUser200ApplicationJSONStatusEnum = "activate"
	PhoneUser200ApplicationJSONStatusEnumDeactivate PhoneUser200ApplicationJSONStatusEnum = "deactivate"
)

func (e *PhoneUser200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "activate":
		fallthrough
	case "deactivate":
		*e = PhoneUser200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneUser200ApplicationJSONStatusEnum: %s", s)
	}
}

// PhoneUser200ApplicationJSON - Zoom User Profile
type PhoneUser200ApplicationJSON struct {
	// Calling Plan of the user
	CallingPlan []PhoneUser200ApplicationJSONCallingPlan `json:"calling_plan,omitempty"`
	// Email address of the user.
	Email *string `json:"email,omitempty"`
	// Extension number
	ExtensionNumber *int64 `json:"extension_number,omitempty"`
	// Zoom User Id.
	ID           *string                                   `json:"id,omitempty"`
	PhoneNumbers []PhoneUser200ApplicationJSONPhoneNumbers `json:"phone_numbers,omitempty"`
	// Zoom Phone User Id.
	PhoneUserID *string `json:"phone_user_id,omitempty"`
	// Indicates whether the user is a [site admin](https://support.zoom.us/hc/en-us/articles/360042099012) or not.
	SiteAdmin *bool `json:"site_admin,omitempty"`
	// Unique Identifier of a [site](https://support.zoom.us/hc/en-us/articles/360020809672).
	SiteID *string `json:"site_id,omitempty"`
	// The status of the user.<br>
	// `activate`: An active user. <br>
	// `deactivate`: User has been deactivated from the ZoomPhone system.
	Status *PhoneUser200ApplicationJSONStatusEnum `json:"status,omitempty"`
}

type PhoneUserResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` <br>User profile object returned.
	PhoneUser200ApplicationJSONObject *PhoneUser200ApplicationJSON
}
