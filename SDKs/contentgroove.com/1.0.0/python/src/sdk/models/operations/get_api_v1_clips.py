"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Any, Optional


@dataclasses.dataclass
class GetAPIV1ClipsSecurity:
    
    bearer_header: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Authorization' }})  
    
class GetAPIV1ClipsSortEnum(str, Enum):
    r"""Sorting to be applied to the query. For more info: https://jsonapi.org/format/#fetching-sorting"""
    CREATED_AT = 'created_at'
    MINUS_CREATED_AT = '-created_at'
    ORIGINAL_CREATED_AT = 'original_created_at'
    MINUS_ORIGINAL_CREATED_AT = '-original_created_at'
    NAME = 'name'
    MINUS_NAME = '-name'


@dataclasses.dataclass
class GetAPIV1ClipsRequest:
    
    filter: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'deepObject', 'explode': True }})
    r"""Filters to be applied to the query.
    
    Query params in the url must look like this: \"filter[attributeName_*matcher*]\"
    
    (i.e. filter[name_eq]=chimp%20into%20space)
    
    Available matchers can be found here: https://activerecord-hackery.github.io/ransack/getting-started/search-matches/
    """  
    page: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'deepObject', 'explode': True }})
    r"""Specify page number and page size for the query"""  
    sort: Optional[GetAPIV1ClipsSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Sorting to be applied to the query. For more info: https://jsonapi.org/format/#fetching-sorting"""  
    

@dataclasses.dataclass
class GetAPIV1ClipsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    