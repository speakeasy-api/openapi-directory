"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomerResponsiblePersonsDTO:
    
    project_manager_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectManagerId') }})
    r"""project manager"""  
    sales_person_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesPersonId') }})
    r"""sales person"""  
    account_manager_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountManagerId'), 'exclude': lambda f: f is None }})
    r"""account manager"""  
    project_coordinator_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectCoordinatorId'), 'exclude': lambda f: f is None }})
    r"""project coordinator"""  
    