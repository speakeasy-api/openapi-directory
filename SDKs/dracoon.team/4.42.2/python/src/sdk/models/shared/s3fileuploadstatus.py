"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import errorresponse as shared_errorresponse
from ..shared import node as shared_node
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class S3FileUploadStatus:
    r"""S3 file upload status information"""
    
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""S3 file upload status:
    
    * `transfer` - upload in progress
    
    * `finishing` - completing file upload
    
    * `done` - file upload successully done
    
    * `error` - an error occurred while file upload
    """  
    error_details: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorDetails'), 'exclude': lambda f: f is None }})
    r"""Error information"""  
    node: Optional[shared_node.Node] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('node'), 'exclude': lambda f: f is None }})
    r"""Node information (Node can be a room, folder or file)"""  
    