<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class DownloadCertificateRequest
{
    /**
     * The file format of the returned file stream:
     * 
     * <ul><li>PFX: Also known as PKCS #12, is a single, password protected certificate archive that contains the entire certificate chain plus the matching private key.</li></ul>
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SslCertificateFileFormatEnum $fileFormat
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=file_format')]
    public \OpenAPI\OpenAPI\Models\Shared\SslCertificateFileFormatEnum $fileFormat;
    
    /**
     * The password used to protect the certificate file.<br />
     * 
     * @var string $password
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=password')]
    public string $password;
    
    /**
     * Automatically added
     * 
     * @var string $sha1FingerprintPathParameter
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=sha1Fingerprint')]
    public string $sha1FingerprintPathParameter;
    
    /**
     * The SHA-1 fingerprint of the certificate.
     * 
     * @var string $sha1FingerprintQueryParameter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sha1_fingerprint')]
    public string $sha1FingerprintQueryParameter;
    
	public function __construct()
	{
		$this->fileFormat = \OpenAPI\OpenAPI\Models\Shared\SslCertificateFileFormatEnum::PFX;
		$this->password = "";
		$this->sha1FingerprintPathParameter = "";
		$this->sha1FingerprintQueryParameter = "";
	}
}
