"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import serviceactionassociationerrorcode_enum as shared_serviceactionassociationerrorcode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FailedServiceActionAssociation:
    r"""An object containing information about the error, along with identifying information about the self-service action and its associations."""
    
    error_code: Optional[shared_serviceactionassociationerrorcode_enum.ServiceActionAssociationErrorCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ErrorCode'), 'exclude': lambda f: f is None }})  
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ErrorMessage'), 'exclude': lambda f: f is None }})  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProductId'), 'exclude': lambda f: f is None }})  
    provisioning_artifact_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisioningArtifactId'), 'exclude': lambda f: f is None }})  
    service_action_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceActionId'), 'exclude': lambda f: f is None }})  
    