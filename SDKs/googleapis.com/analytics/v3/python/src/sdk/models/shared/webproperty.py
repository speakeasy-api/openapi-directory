"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebpropertyChildLink:
    r"""Child link for this web property. Points to the list of views (profiles) for this web property."""
    
    href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href'), 'exclude': lambda f: f is None }})
    r"""Link to the list of views (profiles) for this web property."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the parent link. Its value is \\"analytics#profiles\\"."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebpropertyParentLink:
    r"""Parent link for this web property. Points to the account to which this web property belongs."""
    
    href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href'), 'exclude': lambda f: f is None }})
    r"""Link to the account for this web property."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the parent link. Its value is \\"analytics#account\\"."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebpropertyPermissions:
    r"""Permissions the user has for this web property."""
    
    effective: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effective'), 'exclude': lambda f: f is None }})
    r"""All the permissions that the user has for this web property. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent account."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Webproperty:
    r"""JSON template for an Analytics web property."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""Account ID to which this web property belongs."""  
    child_link: Optional[WebpropertyChildLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('childLink'), 'exclude': lambda f: f is None }})
    r"""Child link for this web property. Points to the list of views (profiles) for this web property."""  
    created: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Time this web property was created."""  
    data_retention_reset_on_new_activity: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataRetentionResetOnNewActivity'), 'exclude': lambda f: f is None }})
    r"""Set to true to reset the retention period of the user identifier with each new event from that user (thus setting the expiration date to current time plus retention period).
    Set to false to delete data associated with the user identifier automatically after the rentention period.
    This property cannot be set on insert.
    """  
    data_retention_ttl: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataRetentionTtl'), 'exclude': lambda f: f is None }})
    r"""The length of time for which user and event data is retained.
    This property cannot be set on insert.
    """  
    default_profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultProfileId'), 'exclude': lambda f: f is None }})
    r"""Default view (profile) ID."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Web property ID of the form UA-XXXXX-YY."""  
    industry_vertical: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('industryVertical'), 'exclude': lambda f: f is None }})
    r"""The industry vertical/category selected for this web property."""  
    internal_web_property_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('internalWebPropertyId'), 'exclude': lambda f: f is None }})
    r"""Internal ID for this web property."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Resource type for Analytics WebProperty."""  
    level: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('level'), 'exclude': lambda f: f is None }})
    r"""Level for this web property. Possible values are STANDARD or PREMIUM."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of this web property."""  
    parent_link: Optional[WebpropertyParentLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentLink'), 'exclude': lambda f: f is None }})
    r"""Parent link for this web property. Points to the account to which this web property belongs."""  
    permissions: Optional[WebpropertyPermissions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})
    r"""Permissions the user has for this web property."""  
    profile_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profileCount'), 'exclude': lambda f: f is None }})
    r"""View (Profile) count for this web property."""  
    self_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selfLink'), 'exclude': lambda f: f is None }})
    r"""Link for this web property."""  
    starred: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('starred'), 'exclude': lambda f: f is None }})
    r"""Indicates whether this web property is starred or not."""  
    updated: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Time this web property was last modified."""  
    website_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('websiteUrl'), 'exclude': lambda f: f is None }})
    r"""Website url for this web property."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebpropertyInput:
    r"""JSON template for an Analytics web property."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""Account ID to which this web property belongs."""  
    child_link: Optional[WebpropertyChildLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('childLink'), 'exclude': lambda f: f is None }})
    r"""Child link for this web property. Points to the list of views (profiles) for this web property."""  
    data_retention_reset_on_new_activity: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataRetentionResetOnNewActivity'), 'exclude': lambda f: f is None }})
    r"""Set to true to reset the retention period of the user identifier with each new event from that user (thus setting the expiration date to current time plus retention period).
    Set to false to delete data associated with the user identifier automatically after the rentention period.
    This property cannot be set on insert.
    """  
    data_retention_ttl: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataRetentionTtl'), 'exclude': lambda f: f is None }})
    r"""The length of time for which user and event data is retained.
    This property cannot be set on insert.
    """  
    default_profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultProfileId'), 'exclude': lambda f: f is None }})
    r"""Default view (profile) ID."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Web property ID of the form UA-XXXXX-YY."""  
    industry_vertical: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('industryVertical'), 'exclude': lambda f: f is None }})
    r"""The industry vertical/category selected for this web property."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of this web property."""  
    parent_link: Optional[WebpropertyParentLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentLink'), 'exclude': lambda f: f is None }})
    r"""Parent link for this web property. Points to the account to which this web property belongs."""  
    starred: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('starred'), 'exclude': lambda f: f is None }})
    r"""Indicates whether this web property is starred or not."""  
    website_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('websiteUrl'), 'exclude': lambda f: f is None }})
    r"""Website url for this web property."""  
    