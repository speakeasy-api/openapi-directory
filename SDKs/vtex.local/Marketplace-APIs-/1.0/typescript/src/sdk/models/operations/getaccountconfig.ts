/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetaccountconfigRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=accountName",
  })
  accountName: string;
}

/**
 * OK
 */
export class Getaccountconfig200ApplicationJSON extends SpeakeasyBase {
  /**
   * This field determines the type of approval configuration applied to SKUs received from a seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MatchFlux" })
  matchFlux?: string;

  /**
   * All Matchers configured on the marketplace, and their respective details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Matchers" })
  matchers?: any[];

  /**
   * Items and products.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Rules" })
  rules?: Record<string, any>;

  /**
   * Matcher scores for approving and rejecting SKUs received from sellers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Score" })
  score?: Record<string, any>;

  /**
   * Mapping of product and SKU specifications, per seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SpecificationsMapping" })
  specificationsMapping?: any[];
}

export class GetaccountconfigResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getaccountconfig200ApplicationJSONObject?: Getaccountconfig200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
