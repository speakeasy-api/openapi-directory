/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionState } from "./actionstate";
import { StageExecution } from "./stageexecution";
import { TransitionState } from "./transitionstate";
import { Expose, Type } from "class-transformer";

/**
 * Represents information about the state of the stage.
 */
export class StageState extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ActionState })
  @Expose({ name: "actionStates" })
  @Type(() => ActionState)
  actionStates?: ActionState[];

  /**
   * Represents information about the run of a stage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inboundExecution" })
  @Type(() => StageExecution)
  inboundExecution?: StageExecution;

  @SpeakeasyMetadata()
  @Expose({ name: "inboundTransitionState" })
  @Type(() => TransitionState)
  inboundTransitionState?: TransitionState;

  @SpeakeasyMetadata()
  @Expose({ name: "latestExecution" })
  @Type(() => StageExecution)
  latestExecution?: StageExecution;

  @SpeakeasyMetadata()
  @Expose({ name: "stageName" })
  stageName?: string;
}
