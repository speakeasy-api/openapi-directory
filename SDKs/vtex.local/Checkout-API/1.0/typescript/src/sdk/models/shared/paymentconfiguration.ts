/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Payment Configuration object
 */
export class PaymentConfiguration extends SpeakeasyBase {
  /**
   * By default (when `false`), on a multi-seller purchase is on the run, a simple intersection with installments options configured by every seller will be available. When `true`, this option allows a more complex but flexible installment option, since it considers max installments of every seller configuration, even if those don't match. Installment values   may not be equal in this case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowInstallmentsMerge" })
  allowInstallmentsMerge?: boolean;

  /**
   * Determines whether pre-authorized payments require authentication
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requiresAuthenticationForPreAuthorizedPaymentOption" })
  requiresAuthenticationForPreAuthorizedPaymentOption: boolean;
}
