// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteDhcpOptionsActionEnum
type GETDeleteDhcpOptionsActionEnum string

const (
	GETDeleteDhcpOptionsActionEnumDeleteDhcpOptions GETDeleteDhcpOptionsActionEnum = "DeleteDhcpOptions"
)

func (e *GETDeleteDhcpOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteDhcpOptions":
		*e = GETDeleteDhcpOptionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDhcpOptionsActionEnum: %s", s)
	}
}

// GETDeleteDhcpOptionsVersionEnum
type GETDeleteDhcpOptionsVersionEnum string

const (
	GETDeleteDhcpOptionsVersionEnumTwoThousandAndSixteen1115 GETDeleteDhcpOptionsVersionEnum = "2016-11-15"
)

func (e *GETDeleteDhcpOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteDhcpOptionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDhcpOptionsVersionEnum: %s", s)
	}
}

type GETDeleteDhcpOptionsRequest struct {
	Action GETDeleteDhcpOptionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the DHCP options set.
	DhcpOptionsID string `queryParam:"style=form,explode=true,name=DhcpOptionsId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun            *bool                           `queryParam:"style=form,explode=true,name=DryRun"`
	Version           GETDeleteDhcpOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteDhcpOptionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
