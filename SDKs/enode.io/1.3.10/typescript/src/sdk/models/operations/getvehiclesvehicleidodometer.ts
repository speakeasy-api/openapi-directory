/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class GetVehiclesVehicleidOdometerSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken1?: string;
}

export class GetVehiclesVehicleidOdometerRequest extends SpeakeasyBase {
  /**
   * ID of the Vehicle
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=vehicleId",
  })
  vehicleId: string;
}

/**
 * Vehicle's odometer with timestamp
 */
export class GetVehiclesVehicleidOdometer200ApplicationJSON extends SpeakeasyBase {
  /**
   * Odometer in kilometers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distance" })
  distance?: number;

  /**
   * ISO8601 UTC timestamp of last received odometer update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;
}

export class GetVehiclesVehicleidOdometerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Vehicle's odometer with timestamp
   */
  @SpeakeasyMetadata()
  getVehiclesVehicleidOdometer200ApplicationJSONObject?: GetVehiclesVehicleidOdometer200ApplicationJSON;
}
