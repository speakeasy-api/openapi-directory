// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateParagraphBulletsRequestBulletPresetEnum - The kinds of bullet glyphs to be used. Defaults to the `BULLET_DISC_CIRCLE_SQUARE` preset.
type CreateParagraphBulletsRequestBulletPresetEnum string

const (
	CreateParagraphBulletsRequestBulletPresetEnumBulletDiscCircleSquare            CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_DISC_CIRCLE_SQUARE"
	CreateParagraphBulletsRequestBulletPresetEnumBulletDiamondxArrow3DSquare       CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_DIAMONDX_ARROW3D_SQUARE"
	CreateParagraphBulletsRequestBulletPresetEnumBulletCheckbox                    CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_CHECKBOX"
	CreateParagraphBulletsRequestBulletPresetEnumBulletArrowDiamondDisc            CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_ARROW_DIAMOND_DISC"
	CreateParagraphBulletsRequestBulletPresetEnumBulletStarCircleSquare            CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_STAR_CIRCLE_SQUARE"
	CreateParagraphBulletsRequestBulletPresetEnumBulletArrow3DCircleSquare         CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_ARROW3D_CIRCLE_SQUARE"
	CreateParagraphBulletsRequestBulletPresetEnumBulletLefttriangleDiamondDisc     CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_LEFTTRIANGLE_DIAMOND_DISC"
	CreateParagraphBulletsRequestBulletPresetEnumBulletDiamondxHollowdiamondSquare CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_DIAMONDX_HOLLOWDIAMOND_SQUARE"
	CreateParagraphBulletsRequestBulletPresetEnumBulletDiamondCircleSquare         CreateParagraphBulletsRequestBulletPresetEnum = "BULLET_DIAMOND_CIRCLE_SQUARE"
	CreateParagraphBulletsRequestBulletPresetEnumNumberedDigitAlphaRoman           CreateParagraphBulletsRequestBulletPresetEnum = "NUMBERED_DIGIT_ALPHA_ROMAN"
	CreateParagraphBulletsRequestBulletPresetEnumNumberedDigitAlphaRomanParens     CreateParagraphBulletsRequestBulletPresetEnum = "NUMBERED_DIGIT_ALPHA_ROMAN_PARENS"
	CreateParagraphBulletsRequestBulletPresetEnumNumberedDigitNested               CreateParagraphBulletsRequestBulletPresetEnum = "NUMBERED_DIGIT_NESTED"
	CreateParagraphBulletsRequestBulletPresetEnumNumberedUpperalphaAlphaRoman      CreateParagraphBulletsRequestBulletPresetEnum = "NUMBERED_UPPERALPHA_ALPHA_ROMAN"
	CreateParagraphBulletsRequestBulletPresetEnumNumberedUpperromanUpperalphaDigit CreateParagraphBulletsRequestBulletPresetEnum = "NUMBERED_UPPERROMAN_UPPERALPHA_DIGIT"
	CreateParagraphBulletsRequestBulletPresetEnumNumberedZerodigitAlphaRoman       CreateParagraphBulletsRequestBulletPresetEnum = "NUMBERED_ZERODIGIT_ALPHA_ROMAN"
)

func (e CreateParagraphBulletsRequestBulletPresetEnum) ToPointer() *CreateParagraphBulletsRequestBulletPresetEnum {
	return &e
}

func (e *CreateParagraphBulletsRequestBulletPresetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BULLET_DISC_CIRCLE_SQUARE":
		fallthrough
	case "BULLET_DIAMONDX_ARROW3D_SQUARE":
		fallthrough
	case "BULLET_CHECKBOX":
		fallthrough
	case "BULLET_ARROW_DIAMOND_DISC":
		fallthrough
	case "BULLET_STAR_CIRCLE_SQUARE":
		fallthrough
	case "BULLET_ARROW3D_CIRCLE_SQUARE":
		fallthrough
	case "BULLET_LEFTTRIANGLE_DIAMOND_DISC":
		fallthrough
	case "BULLET_DIAMONDX_HOLLOWDIAMOND_SQUARE":
		fallthrough
	case "BULLET_DIAMOND_CIRCLE_SQUARE":
		fallthrough
	case "NUMBERED_DIGIT_ALPHA_ROMAN":
		fallthrough
	case "NUMBERED_DIGIT_ALPHA_ROMAN_PARENS":
		fallthrough
	case "NUMBERED_DIGIT_NESTED":
		fallthrough
	case "NUMBERED_UPPERALPHA_ALPHA_ROMAN":
		fallthrough
	case "NUMBERED_UPPERROMAN_UPPERALPHA_DIGIT":
		fallthrough
	case "NUMBERED_ZERODIGIT_ALPHA_ROMAN":
		*e = CreateParagraphBulletsRequestBulletPresetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateParagraphBulletsRequestBulletPresetEnum: %v", v)
	}
}

// CreateParagraphBulletsRequest - Creates bullets for all of the paragraphs that overlap with the given text index range. The nesting level of each paragraph will be determined by counting leading tabs in front of each paragraph. To avoid excess space between the bullet and the corresponding paragraph, these leading tabs are removed by this request. This may change the indices of parts of the text. If the paragraph immediately before paragraphs being updated is in a list with a matching preset, the paragraphs being updated are added to that preceding list.
type CreateParagraphBulletsRequest struct {
	// The kinds of bullet glyphs to be used. Defaults to the `BULLET_DISC_CIRCLE_SQUARE` preset.
	BulletPreset *CreateParagraphBulletsRequestBulletPresetEnum `json:"bulletPreset,omitempty"`
	// A location of a single table cell within a table.
	CellLocation *TableCellLocation `json:"cellLocation,omitempty"`
	// The object ID of the shape or table containing the text to add bullets to.
	ObjectID *string `json:"objectId,omitempty"`
	// Specifies a contiguous range of an indexed collection, such as characters in text.
	TextRange *Range `json:"textRange,omitempty"`
}
