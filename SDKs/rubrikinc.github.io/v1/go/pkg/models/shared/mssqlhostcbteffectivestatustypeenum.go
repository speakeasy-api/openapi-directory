// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MssqlHostCbtEffectiveStatusTypeEnum - Effective CBT status for Host/Windows Failover Cluster.
type MssqlHostCbtEffectiveStatusTypeEnum string

const (
	MssqlHostCbtEffectiveStatusTypeEnumOn               MssqlHostCbtEffectiveStatusTypeEnum = "On"
	MssqlHostCbtEffectiveStatusTypeEnumOff              MssqlHostCbtEffectiveStatusTypeEnum = "Off"
	MssqlHostCbtEffectiveStatusTypeEnumPartiallyEnabled MssqlHostCbtEffectiveStatusTypeEnum = "PartiallyEnabled"
	MssqlHostCbtEffectiveStatusTypeEnumOnDefault        MssqlHostCbtEffectiveStatusTypeEnum = "OnDefault"
	MssqlHostCbtEffectiveStatusTypeEnumOffDefault       MssqlHostCbtEffectiveStatusTypeEnum = "OffDefault"
)

func (e MssqlHostCbtEffectiveStatusTypeEnum) ToPointer() *MssqlHostCbtEffectiveStatusTypeEnum {
	return &e
}

func (e *MssqlHostCbtEffectiveStatusTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "On":
		fallthrough
	case "Off":
		fallthrough
	case "PartiallyEnabled":
		fallthrough
	case "OnDefault":
		fallthrough
	case "OffDefault":
		*e = MssqlHostCbtEffectiveStatusTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MssqlHostCbtEffectiveStatusTypeEnum: %v", v)
	}
}
