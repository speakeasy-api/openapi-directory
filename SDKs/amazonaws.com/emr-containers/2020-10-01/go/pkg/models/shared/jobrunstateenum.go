// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JobRunStateEnum string

const (
	JobRunStateEnumPending       JobRunStateEnum = "PENDING"
	JobRunStateEnumSubmitted     JobRunStateEnum = "SUBMITTED"
	JobRunStateEnumRunning       JobRunStateEnum = "RUNNING"
	JobRunStateEnumFailed        JobRunStateEnum = "FAILED"
	JobRunStateEnumCancelled     JobRunStateEnum = "CANCELLED"
	JobRunStateEnumCancelPending JobRunStateEnum = "CANCEL_PENDING"
	JobRunStateEnumCompleted     JobRunStateEnum = "COMPLETED"
)

func (e *JobRunStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "SUBMITTED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "CANCEL_PENDING":
		fallthrough
	case "COMPLETED":
		*e = JobRunStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobRunStateEnum: %s", s)
	}
}
