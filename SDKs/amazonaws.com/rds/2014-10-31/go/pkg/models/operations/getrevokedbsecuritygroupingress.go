// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRevokeDBSecurityGroupIngressActionEnum
type GETRevokeDBSecurityGroupIngressActionEnum string

const (
	GETRevokeDBSecurityGroupIngressActionEnumRevokeDbSecurityGroupIngress GETRevokeDBSecurityGroupIngressActionEnum = "RevokeDBSecurityGroupIngress"
)

func (e *GETRevokeDBSecurityGroupIngressActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RevokeDBSecurityGroupIngress":
		*e = GETRevokeDBSecurityGroupIngressActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRevokeDBSecurityGroupIngressActionEnum: %s", s)
	}
}

// GETRevokeDBSecurityGroupIngressVersionEnum
type GETRevokeDBSecurityGroupIngressVersionEnum string

const (
	GETRevokeDBSecurityGroupIngressVersionEnumTwoThousandAndFourteen1031 GETRevokeDBSecurityGroupIngressVersionEnum = "2014-10-31"
)

func (e *GETRevokeDBSecurityGroupIngressVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETRevokeDBSecurityGroupIngressVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRevokeDBSecurityGroupIngressVersionEnum: %s", s)
	}
}

type GETRevokeDBSecurityGroupIngressQueryParams struct {
	Action GETRevokeDBSecurityGroupIngressActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The IP range to revoke access from. Must be a valid CIDR range. If <code>CIDRIP</code> is specified, <code>EC2SecurityGroupName</code>, <code>EC2SecurityGroupId</code> and <code>EC2SecurityGroupOwnerId</code> can't be provided.
	Cidrip *string `queryParam:"style=form,explode=true,name=CIDRIP"`
	// The name of the DB security group to revoke ingress from.
	DBSecurityGroupName string `queryParam:"style=form,explode=true,name=DBSecurityGroupName"`
	// The id of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
	Ec2SecurityGroupID *string `queryParam:"style=form,explode=true,name=EC2SecurityGroupId"`
	// The name of the EC2 security group to revoke access from. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
	Ec2SecurityGroupName *string `queryParam:"style=form,explode=true,name=EC2SecurityGroupName"`
	// The Amazon Web Services account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, EC2SecurityGroupOwnerId and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
	Ec2SecurityGroupOwnerID *string                                    `queryParam:"style=form,explode=true,name=EC2SecurityGroupOwnerId"`
	Version                 GETRevokeDBSecurityGroupIngressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETRevokeDBSecurityGroupIngressHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRevokeDBSecurityGroupIngressRequest struct {
	QueryParams GETRevokeDBSecurityGroupIngressQueryParams
	Headers     GETRevokeDBSecurityGroupIngressHeaders
}

type GETRevokeDBSecurityGroupIngressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
