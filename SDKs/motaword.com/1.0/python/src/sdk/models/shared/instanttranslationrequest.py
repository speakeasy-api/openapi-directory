"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fileasdata as shared_fileasdata
from ..shared import instanttranslationfilter as shared_instanttranslationfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InstantTranslationRequest:
    
    contents: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contents'), 'exclude': lambda f: f is None }})
    r"""Simple list of strings to be translated. You can also choose to upload files instead of strings."""  
    documents: Optional[list[shared_fileasdata.FileAsData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documents'), 'exclude': lambda f: f is None }})
    r"""You can add as many files as you want in documents parameter."""  
    filters: Optional[shared_instanttranslationfilter.InstantTranslationFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filters'), 'exclude': lambda f: f is None }})  
    meta: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta'), 'exclude': lambda f: f is None }})
    r"""Free-form meta data to attach to your instant translation request. This can be used in statistics and analytical dashboards."""  
    