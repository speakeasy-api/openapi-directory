"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import problem_detail as shared_problem_detail
from typing import Optional


@dataclasses.dataclass
class StoryIDCollaboratorsUseridPermissiontypeGetRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""the id from the story object"""  
    permissiontype: str = dataclasses.field(metadata={'path_param': { 'field_name': 'permissiontype', 'style': 'simple', 'explode': False }})
    r"""the type of permission requested.  can be a permission_type object name (e.g., owner, editor, create, viewer, admin) or a permission type field (e.g., can_edit, can_view, can_add_collaborators, can_delete)"""  
    story_collaborator_userid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'story_collaborator_userid', 'style': 'simple', 'explode': False }})
    r"""The presalytics userid (NOT the Id of the story_collaborator object)"""  
    

@dataclasses.dataclass
class StoryIDCollaboratorsUseridPermissiontypeGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    problem_detail: Optional[shared_problem_detail.ProblemDetail] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    