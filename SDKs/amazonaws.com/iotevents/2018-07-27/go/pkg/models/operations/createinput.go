// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateInputRequestBodyInputDefinition - The definition of the input.
type CreateInputRequestBodyInputDefinition struct {
	Attributes []shared.Attribute `json:"attributes,omitempty"`
}

type CreateInputRequestBody struct {
	// The definition of the input.
	InputDefinition CreateInputRequestBodyInputDefinition `json:"inputDefinition"`
	// A brief description of the input.
	InputDescription *string `json:"inputDescription,omitempty"`
	// The name you want to give to the input.
	InputName string `json:"inputName"`
	// Metadata that can be used to manage the input.
	Tags []shared.Tag `json:"tags,omitempty"`
}

type CreateInputRequest struct {
	RequestBody       CreateInputRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateInputResponse struct {
	ContentType string
	// Success
	CreateInputResponse *shared.CreateInputResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
