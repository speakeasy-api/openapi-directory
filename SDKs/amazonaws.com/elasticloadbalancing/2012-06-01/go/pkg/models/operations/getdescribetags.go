// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeTagsActionEnum
type GETDescribeTagsActionEnum string

const (
	GETDescribeTagsActionEnumDescribeTags GETDescribeTagsActionEnum = "DescribeTags"
)

func (e GETDescribeTagsActionEnum) ToPointer() *GETDescribeTagsActionEnum {
	return &e
}

func (e *GETDescribeTagsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeTags":
		*e = GETDescribeTagsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeTagsActionEnum: %v", v)
	}
}

// GETDescribeTagsVersionEnum
type GETDescribeTagsVersionEnum string

const (
	GETDescribeTagsVersionEnumTwoThousandAndTwelve0601 GETDescribeTagsVersionEnum = "2012-06-01"
)

func (e GETDescribeTagsVersionEnum) ToPointer() *GETDescribeTagsVersionEnum {
	return &e
}

func (e *GETDescribeTagsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-06-01":
		*e = GETDescribeTagsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeTagsVersionEnum: %v", v)
	}
}

type GETDescribeTagsRequest struct {
	Action GETDescribeTagsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The names of the load balancers.
	LoadBalancerNames []string                   `queryParam:"style=form,explode=true,name=LoadBalancerNames"`
	Version           GETDescribeTagsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeTagsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
