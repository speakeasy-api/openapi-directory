<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CertificateRenew - The renew request info
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CertificateRenew
{
    /**
     * Required if client would like to receive stateful actions via callback during certificate lifecyle
     * 
     * @var ?string $callbackUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('callbackUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $callbackUrl = null;
    
    /**
     * The common name of certificate to be secured
     * 
     * @var ?string $commonName
     */
	#[\JMS\Serializer\Annotation\SerializedName('commonName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commonName = null;
    
    /**
     * Certificate Signing Request.
     * 
     * @var ?string $csr
     */
	#[\JMS\Serializer\Annotation\SerializedName('csr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $csr = null;
    
    /**
     * Number of years for certificate validity period, if different from previous certificate
     * 
     * @var ?int $period
     */
	#[\JMS\Serializer\Annotation\SerializedName('period')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $period = null;
    
    /**
     * Root Type. Depending on certificate expiration date, SHA_1 not be allowed. Will default to SHA_2 if expiration date exceeds sha1 allowed date
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CertificateRenewRootTypeEnum $rootType
     */
	#[\JMS\Serializer\Annotation\SerializedName('rootType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CertificateRenewRootTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateRenewRootTypeEnum $rootType = null;
    
    /**
     * Only used for UCC products. An array of subject alternative names to include in certificate. Not including a subject alternative name that was in the previous certificate will remove it from the renewed certificate.
     * 
     * @var ?array<string> $subjectAlternativeNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('subjectAlternativeNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subjectAlternativeNames = null;
    
	public function __construct()
	{
		$this->callbackUrl = null;
		$this->commonName = null;
		$this->csr = null;
		$this->period = null;
		$this->rootType = null;
		$this->subjectAlternativeNames = null;
	}
}
