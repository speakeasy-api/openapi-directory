// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveAnAchPrenotificationRequest struct {
	AchPrenotificationID string `pathParam:"style=simple,explode=false,name=ach_prenotification_id"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum = 429
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON13 struct {
	Detail     string                                                         `json:"detail"`
	RetryAfter *int64                                                         `json:"retry_after,omitempty"`
	Status     RetrieveAnAchPrenotificationDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                         `json:"title"`
	Type       RetrieveAnAchPrenotificationDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum = 403
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON12 struct {
	Detail string                                                         `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                         `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum = 404
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON11 struct {
	Detail string                                                         `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                         `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnumFourHundred RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum = 400
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON10 struct {
	Detail string                                                         `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                         `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnumFourHundred RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum = 400
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                      `json:"errors"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum = 409
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON8 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum = 401
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON7 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnumFiveHundred RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum = 500
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnumInternalServerError RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON6 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum = 403
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON5 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum = 422
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON4 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum = 409
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON3 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum = 403
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON2 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum int64

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum = 404
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum string

const (
	RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum) ToPointer() *RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type RetrieveAnAchPrenotificationDefaultApplicationJSON1 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnAchPrenotificationDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnAchPrenotificationDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveAnAchPrenotificationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ACH Prenotification
	AchPrenotification *shared.AchPrenotification
	// Error
	Error interface{}
}
