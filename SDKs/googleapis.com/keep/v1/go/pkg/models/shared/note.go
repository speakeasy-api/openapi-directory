// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Note - A single note.
type Note struct {
	// Output only. The attachments attached to this note.
	Attachments []Attachment `json:"attachments,omitempty"`
	// The content of the note.
	Body *Section `json:"body,omitempty"`
	// Output only. When this note was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The resource name of this note. See general note on identifiers in KeepService.
	Name *string `json:"name,omitempty"`
	// Output only. The list of permissions set on the note. Contains at least one entry for the note owner.
	Permissions []Permission `json:"permissions,omitempty"`
	// The title of the note. Length must be less than 1,000 characters.
	Title *string `json:"title,omitempty"`
	// Output only. When this note was trashed. If `trashed`, the note is eventually deleted. If the note is not trashed, this field is not set (and the trashed field is `false`).
	TrashTime *string `json:"trashTime,omitempty"`
	// Output only. `true` if this note has been trashed. If trashed, the note is eventually deleted.
	Trashed *bool `json:"trashed,omitempty"`
	// Output only. When this note was last modified.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// NoteInput - A single note.
type NoteInput struct {
	// The content of the note.
	Body *Section `json:"body,omitempty"`
	// The title of the note. Length must be less than 1,000 characters.
	Title *string `json:"title,omitempty"`
}
