/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.SerializedBody;

/**
 * ErgoPay payment portal
 */
public class PaymentPortal {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public PaymentPortal(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Creates a new payment request. Will return request id to check for transaction state and ergopay url to show the user as QR code
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AddPaymentRequestResponse addPaymentRequest(org.openapis.openapi.models.shared.CreatePaymentRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/payment/addrequest");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AddPaymentRequestResponse res = new org.openapis.openapi.models.operations.AddPaymentRequestResponse() {{
            body = null;
            addPaymentRequest400WildcardString = null;
            addPaymentRequest401WildcardString = null;
            addPaymentRequest404WildcardString = null;
            addPaymentRequest409WildcardString = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                byte[] out = httpRes.body();
                res.body = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.addPaymentRequest400WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.addPaymentRequest401WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.addPaymentRequest404WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 409) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.addPaymentRequest409WildcardString = out;
            }
        }

        return res;
    }

    /**
     * Returns the state of a payment request. Please note that payment requests are purged after some time, so persist the state at your side when needed
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetPaymentStateResponse getPaymentState(org.openapis.openapi.models.operations.GetPaymentStateRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetPaymentStateRequest.class, baseUrl, "/payment/state/{requestId}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetPaymentStateResponse res = new org.openapis.openapi.models.operations.GetPaymentStateResponse() {{
            body = null;
            getPaymentState400WildcardString = null;
            getPaymentState401WildcardString = null;
            getPaymentState404WildcardString = null;
            getPaymentState409WildcardString = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                byte[] out = httpRes.body();
                res.body = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getPaymentState400WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getPaymentState401WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getPaymentState404WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 409) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getPaymentState409WildcardString = out;
            }
        }

        return res;
    }
}