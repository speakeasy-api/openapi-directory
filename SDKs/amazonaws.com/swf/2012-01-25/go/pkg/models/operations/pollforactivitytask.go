// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PollForActivityTaskXAmzTargetEnum
type PollForActivityTaskXAmzTargetEnum string

const (
	PollForActivityTaskXAmzTargetEnumSimpleWorkflowServicePollForActivityTask PollForActivityTaskXAmzTargetEnum = "SimpleWorkflowService.PollForActivityTask"
)

func (e PollForActivityTaskXAmzTargetEnum) ToPointer() *PollForActivityTaskXAmzTargetEnum {
	return &e
}

func (e *PollForActivityTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SimpleWorkflowService.PollForActivityTask":
		*e = PollForActivityTaskXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PollForActivityTaskXAmzTargetEnum: %v", v)
	}
}

type PollForActivityTaskRequest struct {
	PollForActivityTaskInput shared.PollForActivityTaskInput   `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               PollForActivityTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PollForActivityTaskResponse struct {
	// Success
	ActivityTask *shared.ActivityTask
	ContentType  string
	// LimitExceededFault
	LimitExceededFault interface{}
	// OperationNotPermittedFault
	OperationNotPermittedFault interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// UnknownResourceFault
	UnknownResourceFault interface{}
}
