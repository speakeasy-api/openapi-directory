/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetUpdatedVideosSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode?: string;
}

/**
 * Sort by oldest or newest videos first
 */
export enum GetUpdatedVideosSortEnum {
  Newest = "newest",
  Oldest = "oldest",
}

export class GetUpdatedVideosRequest extends SpeakeasyBase {
  /**
   * Show videos updated before the specified date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end_date;dateTimeFormat=YYYY-MM-DD",
  })
  endDate?: Date;

  /**
   * Show videos updated in the specified time period, where the time period is an interval (like SQL INTERVAL) such as 1 DAY, 6 HOUR, or 30 MINUTE; the default is 1 HOUR, which shows videos that were updated in the hour preceding the request
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=interval",
  })
  interval?: string;

  /**
   * Page number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of results per page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Sort by oldest or newest videos first
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetUpdatedVideosSortEnum;

  /**
   * Show videos updated on or after the specified date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=start_date;dateTimeFormat=YYYY-MM-DD",
  })
  startDate?: Date;
}

export class GetUpdatedVideosResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  updatedMediaDataList?: shared.UpdatedMediaDataList;
}
