"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Commit = exports.CommitStats = exports.CommitParents = exports.CommitFiles = exports.CommitCommit = exports.CommitCommitTree = void 0;
var utils_1 = require("../../../internal/utils");
var nullablegituser_1 = require("./nullablegituser");
var nullablesimpleuser_1 = require("./nullablesimpleuser");
var verification_1 = require("./verification");
var class_transformer_1 = require("class-transformer");
var CommitCommitTree = /** @class */ (function (_super) {
    __extends(CommitCommitTree, _super);
    function CommitCommitTree() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sha" }),
        __metadata("design:type", String)
    ], CommitCommitTree.prototype, "sha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], CommitCommitTree.prototype, "url", void 0);
    return CommitCommitTree;
}(utils_1.SpeakeasyBase));
exports.CommitCommitTree = CommitCommitTree;
var CommitCommit = /** @class */ (function (_super) {
    __extends(CommitCommit, _super);
    function CommitCommit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "author" }),
        (0, class_transformer_1.Type)(function () { return nullablegituser_1.NullableGitUser; }),
        __metadata("design:type", nullablegituser_1.NullableGitUser)
    ], CommitCommit.prototype, "author", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment_count" }),
        __metadata("design:type", Number)
    ], CommitCommit.prototype, "commentCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "committer" }),
        (0, class_transformer_1.Type)(function () { return nullablegituser_1.NullableGitUser; }),
        __metadata("design:type", nullablegituser_1.NullableGitUser)
    ], CommitCommit.prototype, "committer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], CommitCommit.prototype, "message", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tree" }),
        (0, class_transformer_1.Type)(function () { return CommitCommitTree; }),
        __metadata("design:type", CommitCommitTree)
    ], CommitCommit.prototype, "tree", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], CommitCommit.prototype, "url", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "verification" }),
        (0, class_transformer_1.Type)(function () { return verification_1.Verification; }),
        __metadata("design:type", verification_1.Verification)
    ], CommitCommit.prototype, "verification", void 0);
    return CommitCommit;
}(utils_1.SpeakeasyBase));
exports.CommitCommit = CommitCommit;
var CommitFiles = /** @class */ (function (_super) {
    __extends(CommitFiles, _super);
    function CommitFiles() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "additions" }),
        __metadata("design:type", Number)
    ], CommitFiles.prototype, "additions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blob_url" }),
        __metadata("design:type", String)
    ], CommitFiles.prototype, "blobUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "changes" }),
        __metadata("design:type", Number)
    ], CommitFiles.prototype, "changes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contents_url" }),
        __metadata("design:type", String)
    ], CommitFiles.prototype, "contentsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deletions" }),
        __metadata("design:type", Number)
    ], CommitFiles.prototype, "deletions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "filename" }),
        __metadata("design:type", String)
    ], CommitFiles.prototype, "filename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "patch" }),
        __metadata("design:type", String)
    ], CommitFiles.prototype, "patch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_filename" }),
        __metadata("design:type", String)
    ], CommitFiles.prototype, "previousFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "raw_url" }),
        __metadata("design:type", String)
    ], CommitFiles.prototype, "rawUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sha" }),
        __metadata("design:type", String)
    ], CommitFiles.prototype, "sha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], CommitFiles.prototype, "status", void 0);
    return CommitFiles;
}(utils_1.SpeakeasyBase));
exports.CommitFiles = CommitFiles;
var CommitParents = /** @class */ (function (_super) {
    __extends(CommitParents, _super);
    function CommitParents() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "html_url" }),
        __metadata("design:type", String)
    ], CommitParents.prototype, "htmlUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sha" }),
        __metadata("design:type", String)
    ], CommitParents.prototype, "sha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], CommitParents.prototype, "url", void 0);
    return CommitParents;
}(utils_1.SpeakeasyBase));
exports.CommitParents = CommitParents;
var CommitStats = /** @class */ (function (_super) {
    __extends(CommitStats, _super);
    function CommitStats() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "additions" }),
        __metadata("design:type", Number)
    ], CommitStats.prototype, "additions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deletions" }),
        __metadata("design:type", Number)
    ], CommitStats.prototype, "deletions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total" }),
        __metadata("design:type", Number)
    ], CommitStats.prototype, "total", void 0);
    return CommitStats;
}(utils_1.SpeakeasyBase));
exports.CommitStats = CommitStats;
/**
 * Commit
 */
var Commit = /** @class */ (function (_super) {
    __extends(Commit, _super);
    function Commit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "author" }),
        (0, class_transformer_1.Type)(function () { return nullablesimpleuser_1.NullableSimpleUser; }),
        __metadata("design:type", nullablesimpleuser_1.NullableSimpleUser)
    ], Commit.prototype, "author", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comments_url" }),
        __metadata("design:type", String)
    ], Commit.prototype, "commentsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "commit" }),
        (0, class_transformer_1.Type)(function () { return CommitCommit; }),
        __metadata("design:type", CommitCommit)
    ], Commit.prototype, "commit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "committer" }),
        (0, class_transformer_1.Type)(function () { return nullablesimpleuser_1.NullableSimpleUser; }),
        __metadata("design:type", nullablesimpleuser_1.NullableSimpleUser)
    ], Commit.prototype, "committer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CommitFiles }),
        (0, class_transformer_1.Expose)({ name: "files" }),
        (0, class_transformer_1.Type)(function () { return CommitFiles; }),
        __metadata("design:type", Array)
    ], Commit.prototype, "files", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "html_url" }),
        __metadata("design:type", String)
    ], Commit.prototype, "htmlUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "node_id" }),
        __metadata("design:type", String)
    ], Commit.prototype, "nodeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CommitParents }),
        (0, class_transformer_1.Expose)({ name: "parents" }),
        (0, class_transformer_1.Type)(function () { return CommitParents; }),
        __metadata("design:type", Array)
    ], Commit.prototype, "parents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sha" }),
        __metadata("design:type", String)
    ], Commit.prototype, "sha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stats" }),
        (0, class_transformer_1.Type)(function () { return CommitStats; }),
        __metadata("design:type", CommitStats)
    ], Commit.prototype, "stats", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], Commit.prototype, "url", void 0);
    return Commit;
}(utils_1.SpeakeasyBase));
exports.Commit = Commit;
