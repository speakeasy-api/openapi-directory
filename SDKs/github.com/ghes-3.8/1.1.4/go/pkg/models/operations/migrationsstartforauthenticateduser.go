// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MigrationsStartForAuthenticatedUserRequestBodyExcludeEnum - Allowed values that can be passed to the exclude param.
type MigrationsStartForAuthenticatedUserRequestBodyExcludeEnum string

const (
	MigrationsStartForAuthenticatedUserRequestBodyExcludeEnumRepositories MigrationsStartForAuthenticatedUserRequestBodyExcludeEnum = "repositories"
)

func (e *MigrationsStartForAuthenticatedUserRequestBodyExcludeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "repositories":
		*e = MigrationsStartForAuthenticatedUserRequestBodyExcludeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MigrationsStartForAuthenticatedUserRequestBodyExcludeEnum: %s", s)
	}
}

type MigrationsStartForAuthenticatedUserRequestBody struct {
	// Exclude attributes from the API response to improve performance
	Exclude []MigrationsStartForAuthenticatedUserRequestBodyExcludeEnum `json:"exclude,omitempty"`
	// Do not include attachments in the migration
	ExcludeAttachments *bool `json:"exclude_attachments,omitempty"`
	// Indicates whether the repository git data should be excluded from the migration.
	ExcludeGitData *bool `json:"exclude_git_data,omitempty"`
	// Indicates whether metadata should be excluded and only git source should be included for the migration.
	ExcludeMetadata *bool `json:"exclude_metadata,omitempty"`
	// Indicates whether projects owned by the organization or users should be excluded.
	ExcludeOwnerProjects *bool `json:"exclude_owner_projects,omitempty"`
	// Do not include releases in the migration
	ExcludeReleases *bool `json:"exclude_releases,omitempty"`
	// Lock the repositories being migrated at the start of the migration
	LockRepositories *bool `json:"lock_repositories,omitempty"`
	// Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
	OrgMetadataOnly *bool    `json:"org_metadata_only,omitempty"`
	Repositories    []string `json:"repositories"`
}

type MigrationsStartForAuthenticatedUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Requires authentication
	BasicError *shared.BasicError
	// Response
	Migration *shared.Migration
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
