/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ECSServiceRecommendation -  Describes an Amazon ECS service recommendation. 
 */
public class ECSServiceRecommendation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public ECSServiceRecommendation withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentPerformanceRisk")
    public CurrentPerformanceRiskEnum currentPerformanceRisk;

    public ECSServiceRecommendation withCurrentPerformanceRisk(CurrentPerformanceRiskEnum currentPerformanceRisk) {
        this.currentPerformanceRisk = currentPerformanceRisk;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentServiceConfiguration")
    public ServiceConfiguration currentServiceConfiguration;

    public ECSServiceRecommendation withCurrentServiceConfiguration(ServiceConfiguration currentServiceConfiguration) {
        this.currentServiceConfiguration = currentServiceConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("finding")
    public ECSServiceRecommendationFindingEnum finding;

    public ECSServiceRecommendation withFinding(ECSServiceRecommendationFindingEnum finding) {
        this.finding = finding;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("findingReasonCodes")
    public ECSServiceRecommendationFindingReasonCodeEnum[] findingReasonCodes;

    public ECSServiceRecommendation withFindingReasonCodes(ECSServiceRecommendationFindingReasonCodeEnum[] findingReasonCodes) {
        this.findingReasonCodes = findingReasonCodes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastRefreshTimestamp")
    public OffsetDateTime lastRefreshTimestamp;

    public ECSServiceRecommendation withLastRefreshTimestamp(OffsetDateTime lastRefreshTimestamp) {
        this.lastRefreshTimestamp = lastRefreshTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchType")
    public ECSServiceLaunchTypeEnum launchType;

    public ECSServiceRecommendation withLaunchType(ECSServiceLaunchTypeEnum launchType) {
        this.launchType = launchType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lookbackPeriodInDays")
    public Double lookbackPeriodInDays;

    public ECSServiceRecommendation withLookbackPeriodInDays(Double lookbackPeriodInDays) {
        this.lookbackPeriodInDays = lookbackPeriodInDays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceArn")
    public String serviceArn;

    public ECSServiceRecommendation withServiceArn(String serviceArn) {
        this.serviceArn = serviceArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceRecommendationOptions")
    public ECSServiceRecommendationOption[] serviceRecommendationOptions;

    public ECSServiceRecommendation withServiceRecommendationOptions(ECSServiceRecommendationOption[] serviceRecommendationOptions) {
        this.serviceRecommendationOptions = serviceRecommendationOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("utilizationMetrics")
    public ECSServiceUtilizationMetric[] utilizationMetrics;

    public ECSServiceRecommendation withUtilizationMetrics(ECSServiceUtilizationMetric[] utilizationMetrics) {
        this.utilizationMetrics = utilizationMetrics;
        return this;
    }
    
    public ECSServiceRecommendation(){}
}
