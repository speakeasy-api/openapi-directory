"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import language_enum as shared_language_enum
from ..shared import voice_name_enum as shared_voice_name_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartTalkRequest:
    r"""Action to perform"""
    
    text: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text') }})
    r"""The text to read"""  
    language: Optional[shared_language_enum.LanguageEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language'), 'exclude': lambda f: f is None }})
    r"""The language to use"""  
    level: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('level'), 'exclude': lambda f: f is None }})
    r"""The volume level that the speech is played. This can be any value between `-1` to `1` in `0.1` increments, with `0` being the default."""  
    loop: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loop'), 'exclude': lambda f: f is None }})
    r"""The number of times to repeat the text the file, 0 for infinite"""  
    premium: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('premium'), 'exclude': lambda f: f is None }})
    r"""Set to true to use the premium version of the specified style if available, otherwise the standard version will be used. The default value is false. You can find more information about Premium Voices in the [Text-To-Speech guide](/voice/voice-api/guides/text-to-speech#premium-voices)."""  
    style: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('style'), 'exclude': lambda f: f is None }})
    r"""The vocal style (vocal range, tessitura, and timbre) to use"""  
    voice_name: Optional[shared_voice_name_enum.VoiceNameEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_name'), 'exclude': lambda f: f is None }})
    r"""<strong>DEPRECATED</strong> The voice & language to use"""  
    