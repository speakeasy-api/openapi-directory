<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class ListTableStorageOptimizersRequestBody
{
    /**
     * The Catalog ID of the table.
     * 
     * @var ?string $catalogId
     */
	#[\JMS\Serializer\Annotation\SerializedName('CatalogId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $catalogId = null;
    
    /**
     * Name of the database where the table is present.
     * 
     * @var string $databaseName
     */
	#[\JMS\Serializer\Annotation\SerializedName('DatabaseName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $databaseName;
    
    /**
     * The number of storage optimizers to return on each call.
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaxResults')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * A continuation token, if this is a continuation call.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('NextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     * The specific type of storage optimizers to list. The supported value is <code>compaction</code>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListTableStorageOptimizersRequestBodyStorageOptimizerTypeEnum $storageOptimizerType
     */
	#[\JMS\Serializer\Annotation\SerializedName('StorageOptimizerType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ListTableStorageOptimizersRequestBodyStorageOptimizerTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ListTableStorageOptimizersRequestBodyStorageOptimizerTypeEnum $storageOptimizerType = null;
    
    /**
     * Name of the table.
     * 
     * @var string $tableName
     */
	#[\JMS\Serializer\Annotation\SerializedName('TableName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tableName;
    
	public function __construct()
	{
		$this->catalogId = null;
		$this->databaseName = "";
		$this->maxResults = null;
		$this->nextToken = null;
		$this->storageOptimizerType = null;
		$this->tableName = "";
	}
}
