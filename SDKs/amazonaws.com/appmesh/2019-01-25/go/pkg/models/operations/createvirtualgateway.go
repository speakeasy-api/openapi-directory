// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateVirtualGatewayPathParams struct {
	// The name of the service mesh to create the virtual gateway in.
	MeshName string `pathParam:"style=simple,explode=false,name=meshName"`
}

type CreateVirtualGatewayQueryParams struct {
	// The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.
	MeshOwner *string `queryParam:"style=form,explode=true,name=meshOwner"`
}

type CreateVirtualGatewayHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateVirtualGatewayRequestBodySpec - An object that represents the specification of a service mesh resource.
type CreateVirtualGatewayRequestBodySpec struct {
	BackendDefaults *shared.VirtualGatewayBackendDefaults `json:"backendDefaults,omitempty"`
	Listeners       []shared.VirtualGatewayListener       `json:"listeners,omitempty"`
	// An object that represents logging information.
	Logging *shared.VirtualGatewayLogging `json:"logging,omitempty"`
}

type CreateVirtualGatewayRequestBody struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.
	ClientToken *string `json:"clientToken,omitempty"`
	// An object that represents the specification of a service mesh resource.
	Spec CreateVirtualGatewayRequestBodySpec `json:"spec"`
	// Optional metadata that you can apply to the virtual gateway to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
	Tags []shared.TagRef `json:"tags,omitempty"`
	// The name to use for the virtual gateway.
	VirtualGatewayName string `json:"virtualGatewayName"`
}

type CreateVirtualGatewayRequest struct {
	PathParams  CreateVirtualGatewayPathParams
	QueryParams CreateVirtualGatewayQueryParams
	Headers     CreateVirtualGatewayHeaders
	Request     CreateVirtualGatewayRequestBody `request:"mediaType=application/json"`
}

type CreateVirtualGatewayResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateVirtualGatewayOutput *shared.CreateVirtualGatewayOutput
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
