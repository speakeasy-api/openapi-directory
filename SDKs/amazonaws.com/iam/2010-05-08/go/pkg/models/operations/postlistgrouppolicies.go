// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListGroupPoliciesActionEnum
type POSTListGroupPoliciesActionEnum string

const (
	POSTListGroupPoliciesActionEnumListGroupPolicies POSTListGroupPoliciesActionEnum = "ListGroupPolicies"
)

func (e *POSTListGroupPoliciesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListGroupPolicies":
		*e = POSTListGroupPoliciesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListGroupPoliciesActionEnum: %s", s)
	}
}

// POSTListGroupPoliciesVersionEnum
type POSTListGroupPoliciesVersionEnum string

const (
	POSTListGroupPoliciesVersionEnumTwoThousandAndTen0508 POSTListGroupPoliciesVersionEnum = "2010-05-08"
)

func (e *POSTListGroupPoliciesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = POSTListGroupPoliciesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListGroupPoliciesVersionEnum: %s", s)
	}
}

type POSTListGroupPoliciesRequest struct {
	Action POSTListGroupPoliciesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                          `queryParam:"style=form,explode=true,name=MaxItems"`
	RequestBody       []byte                           `request:"mediaType=text/xml"`
	Version           POSTListGroupPoliciesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListGroupPoliciesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
