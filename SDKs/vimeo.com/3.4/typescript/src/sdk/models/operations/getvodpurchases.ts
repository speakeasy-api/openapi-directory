/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetVodPurchasesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

/**
 * The sort direction of the results.
 */
export enum GetVodPurchasesDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * The type of On Demand videos to show.
 *
 * @remarks
 *
 * Option descriptions:
 *  * `important` - Will show all pages which are about to expire.
 *
 */
export enum GetVodPurchasesFilterEnum {
  All = "all",
  ExpiringSoon = "expiring_soon",
  Film = "film",
  Important = "important",
  Purchased = "purchased",
  Rented = "rented",
  Series = "series",
  Subscription = "subscription",
  Unwatched = "unwatched",
  Watched = "watched",
}

/**
 * The way to sort the results.
 */
export enum GetVodPurchasesSortEnum {
  Added = "added",
  Alphabetical = "alphabetical",
  Date = "date",
  Name = "name",
  PurchaseTime = "purchase_time",
  Rating = "rating",
  ReleaseDate = "release_date",
}

export class GetVodPurchasesRequest extends SpeakeasyBase {
  /**
   * The sort direction of the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: GetVodPurchasesDirectionEnum;

  /**
   * The type of On Demand videos to show.
   *
   * @remarks
   *
   * Option descriptions:
   *  * `important` - Will show all pages which are about to expire.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: GetVodPurchasesFilterEnum;

  /**
   * The page number of the results to show.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of items to show on each page of results, up to a maximum of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The way to sort the results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetVodPurchasesSortEnum;
}

export class GetVodPurchasesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The authenticated user can't view the purchases and rentals for another user's account.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;

  /**
   * The purchases and rentals were returned.
   */
  @SpeakeasyMetadata({ elemType: shared.OnDemandPage })
  onDemandPages?: shared.OnDemandPage[];
}
