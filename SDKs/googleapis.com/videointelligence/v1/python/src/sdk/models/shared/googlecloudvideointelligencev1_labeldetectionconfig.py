"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudVideointelligenceV1LabelDetectionConfigLabelDetectionModeEnum(str, Enum):
    r"""What labels should be detected with LABEL_DETECTION, in addition to video-level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`."""
    LABEL_DETECTION_MODE_UNSPECIFIED = 'LABEL_DETECTION_MODE_UNSPECIFIED'
    SHOT_MODE = 'SHOT_MODE'
    FRAME_MODE = 'FRAME_MODE'
    SHOT_AND_FRAME_MODE = 'SHOT_AND_FRAME_MODE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVideointelligenceV1LabelDetectionConfig:
    r"""Config for LABEL_DETECTION."""
    
    frame_confidence_threshold: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frameConfidenceThreshold'), 'exclude': lambda f: f is None }})
    r"""The confidence threshold we perform filtering on the labels from frame-level detection. If not set, it is set to 0.4 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model."""  
    label_detection_mode: Optional[GoogleCloudVideointelligenceV1LabelDetectionConfigLabelDetectionModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelDetectionMode'), 'exclude': lambda f: f is None }})
    r"""What labels should be detected with LABEL_DETECTION, in addition to video-level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`."""  
    model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    r"""Model to use for label detection. Supported values: \\"builtin/stable\\" (the default if unset) and \\"builtin/latest\\"."""  
    stationary_camera: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stationaryCamera'), 'exclude': lambda f: f is None }})
    r"""Whether the video has been shot from a stationary (i.e., non-moving) camera. When set to true, might improve detection accuracy for moving objects. Should be used with `SHOT_AND_FRAME_MODE` enabled."""  
    video_confidence_threshold: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoConfidenceThreshold'), 'exclude': lambda f: f is None }})
    r"""The confidence threshold we perform filtering on the labels from video-level and shot-level detections. If not set, it's set to 0.3 by default. The valid range for this threshold is [0.1, 0.9]. Any value set outside of this range will be clipped. Note: For best results, follow the default threshold. We will update the default threshold everytime when we release a new model."""  
    