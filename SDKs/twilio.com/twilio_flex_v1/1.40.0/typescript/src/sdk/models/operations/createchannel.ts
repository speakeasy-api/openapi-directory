/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateChannelServerList = ["https://flex-api.twilio.com"] as const;

export class CreateChannelSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateChannelCreateChannelRequest extends SpeakeasyBase {
  /**
   * The chat channel's friendly name.
   */
  @SpeakeasyMetadata({ data: "form, name=ChatFriendlyName" })
  chatFriendlyName: string;

  /**
   * The chat channel's unique name.
   */
  @SpeakeasyMetadata({ data: "form, name=ChatUniqueName" })
  chatUniqueName?: string;

  /**
   * The chat participant's friendly name.
   */
  @SpeakeasyMetadata({ data: "form, name=ChatUserFriendlyName" })
  chatUserFriendlyName: string;

  /**
   * The SID of the Flex Flow.
   */
  @SpeakeasyMetadata({ data: "form, name=FlexFlowSid" })
  flexFlowSid: string;

  /**
   * The `identity` value that uniquely identifies the new resource's chat User.
   */
  @SpeakeasyMetadata({ data: "form, name=Identity" })
  identity: string;

  /**
   * Whether to create the channel as long-lived.
   */
  @SpeakeasyMetadata({ data: "form, name=LongLived" })
  longLived?: boolean;

  /**
   * The pre-engagement data.
   */
  @SpeakeasyMetadata({ data: "form, name=PreEngagementData" })
  preEngagementData?: string;

  /**
   * The Target Contact Identity, for example the phone number of an SMS.
   */
  @SpeakeasyMetadata({ data: "form, name=Target" })
  target?: string;

  /**
   * The Task attributes to be added for the TaskRouter Task.
   */
  @SpeakeasyMetadata({ data: "form, name=TaskAttributes" })
  taskAttributes?: string;

  /**
   * The SID of the TaskRouter Task. Only valid when integration type is `task`. `null` for integration types `studio` & `external`
   */
  @SpeakeasyMetadata({ data: "form, name=TaskSid" })
  taskSid?: string;
}

export class CreateChannelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  flexV1Channel?: shared.FlexV1Channel;
}
