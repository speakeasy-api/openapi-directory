// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetSpacesAllTypeEnum - Type of the space
type GetSpacesAllTypeEnum string

const (
	GetSpacesAllTypeEnumPrivate     GetSpacesAllTypeEnum = "private"
	GetSpacesAllTypeEnumEnterprise  GetSpacesAllTypeEnum = "enterprise"
	GetSpacesAllTypeEnumCompany     GetSpacesAllTypeEnum = "company"
	GetSpacesAllTypeEnumAssociation GetSpacesAllTypeEnum = "association"
)

func (e GetSpacesAllTypeEnum) ToPointer() *GetSpacesAllTypeEnum {
	return &e
}

func (e *GetSpacesAllTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private":
		fallthrough
	case "enterprise":
		fallthrough
	case "company":
		fallthrough
	case "association":
		*e = GetSpacesAllTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesAllTypeEnum: %v", v)
	}
}

type GetSpacesAllRequest struct {
	// Name of the space
	Name *string `queryParam:"style=form,explode=true,name=Name"`
	// Type of the space
	Type *GetSpacesAllTypeEnum `queryParam:"style=form,explode=true,name=Type"`
}

type GetSpacesAll200ApplicationJSONTypeEnum string

const (
	GetSpacesAll200ApplicationJSONTypeEnumPrivate     GetSpacesAll200ApplicationJSONTypeEnum = "private"
	GetSpacesAll200ApplicationJSONTypeEnumEnterprise  GetSpacesAll200ApplicationJSONTypeEnum = "enterprise"
	GetSpacesAll200ApplicationJSONTypeEnumCompany     GetSpacesAll200ApplicationJSONTypeEnum = "company"
	GetSpacesAll200ApplicationJSONTypeEnumAssociation GetSpacesAll200ApplicationJSONTypeEnum = "association"
)

func (e GetSpacesAll200ApplicationJSONTypeEnum) ToPointer() *GetSpacesAll200ApplicationJSONTypeEnum {
	return &e
}

func (e *GetSpacesAll200ApplicationJSONTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private":
		fallthrough
	case "enterprise":
		fallthrough
	case "company":
		fallthrough
	case "association":
		*e = GetSpacesAll200ApplicationJSONTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesAll200ApplicationJSONTypeEnum: %v", v)
	}
}

type GetSpacesAll200ApplicationJSON struct {
	ID                 *string                                 `json:"Id,omitempty"`
	ModificationDate   *string                                 `json:"ModificationDate,omitempty"`
	Name               *string                                 `json:"Name,omitempty"`
	RegistrationNumber *string                                 `json:"RegistrationNumber,omitempty"`
	Type               *GetSpacesAll200ApplicationJSONTypeEnum `json:"Type,omitempty"`
}

type GetSpacesAllResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of Spaces
	GetSpacesAll200ApplicationJSONObjects []GetSpacesAll200ApplicationJSON
}
