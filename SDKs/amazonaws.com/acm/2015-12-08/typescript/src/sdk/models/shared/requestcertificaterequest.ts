/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateOptions } from "./certificateoptions";
import { DomainValidationOption } from "./domainvalidationoption";
import { KeyAlgorithmEnum } from "./keyalgorithmenum";
import { Tag } from "./tag";
import { ValidationMethodEnum } from "./validationmethodenum";
import { Expose, Type } from "class-transformer";

export class RequestCertificateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateAuthorityArn" })
  certificateAuthorityArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName: string;

  @SpeakeasyMetadata({ elemType: DomainValidationOption })
  @Expose({ name: "DomainValidationOptions" })
  @Type(() => DomainValidationOption)
  domainValidationOptions?: DomainValidationOption[];

  @SpeakeasyMetadata()
  @Expose({ name: "IdempotencyToken" })
  idempotencyToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KeyAlgorithm" })
  keyAlgorithm?: KeyAlgorithmEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Options" })
  @Type(() => CertificateOptions)
  options?: CertificateOptions;

  @SpeakeasyMetadata()
  @Expose({ name: "SubjectAlternativeNames" })
  subjectAlternativeNames?: string[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "ValidationMethod" })
  validationMethod?: ValidationMethodEnum;
}
