/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
 */
export enum GetEtymologiesUseCanonicalEnum {
  False = "false",
  True = "true",
}

export class GetEtymologiesRequest extends SpeakeasyBase {
  /**
   * If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=useCanonical",
  })
  useCanonical?: GetEtymologiesUseCanonicalEnum;

  /**
   * Word to return
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=word",
  })
  word: string;
}

export class GetEtymologiesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
