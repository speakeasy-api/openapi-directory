// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProjectVersionStatusEnum string

const (
	ProjectVersionStatusEnumTrainingInProgress ProjectVersionStatusEnum = "TRAINING_IN_PROGRESS"
	ProjectVersionStatusEnumTrainingCompleted  ProjectVersionStatusEnum = "TRAINING_COMPLETED"
	ProjectVersionStatusEnumTrainingFailed     ProjectVersionStatusEnum = "TRAINING_FAILED"
	ProjectVersionStatusEnumStarting           ProjectVersionStatusEnum = "STARTING"
	ProjectVersionStatusEnumRunning            ProjectVersionStatusEnum = "RUNNING"
	ProjectVersionStatusEnumFailed             ProjectVersionStatusEnum = "FAILED"
	ProjectVersionStatusEnumStopping           ProjectVersionStatusEnum = "STOPPING"
	ProjectVersionStatusEnumStopped            ProjectVersionStatusEnum = "STOPPED"
	ProjectVersionStatusEnumDeleting           ProjectVersionStatusEnum = "DELETING"
	ProjectVersionStatusEnumCopyingInProgress  ProjectVersionStatusEnum = "COPYING_IN_PROGRESS"
	ProjectVersionStatusEnumCopyingCompleted   ProjectVersionStatusEnum = "COPYING_COMPLETED"
	ProjectVersionStatusEnumCopyingFailed      ProjectVersionStatusEnum = "COPYING_FAILED"
)

func (e *ProjectVersionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TRAINING_IN_PROGRESS":
		fallthrough
	case "TRAINING_COMPLETED":
		fallthrough
	case "TRAINING_FAILED":
		fallthrough
	case "STARTING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FAILED":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "DELETING":
		fallthrough
	case "COPYING_IN_PROGRESS":
		fallthrough
	case "COPYING_COMPLETED":
		fallthrough
	case "COPYING_FAILED":
		*e = ProjectVersionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectVersionStatusEnum: %s", s)
	}
}
