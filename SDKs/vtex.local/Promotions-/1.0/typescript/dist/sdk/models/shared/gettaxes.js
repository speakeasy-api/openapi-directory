"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetTaxes = exports.GetTaxesScope = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Scope of the tax.
 */
var GetTaxesScope = /** @class */ (function (_super) {
    __extends(GetTaxesScope, _super);
    function GetTaxesScope() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allCatalog" }),
        __metadata("design:type", Boolean)
    ], GetTaxesScope.prototype, "allCatalog", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "brands" }),
        __metadata("design:type", Number)
    ], GetTaxesScope.prototype, "brands", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "brandsAreInclusive" }),
        __metadata("design:type", Boolean)
    ], GetTaxesScope.prototype, "brandsAreInclusive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "categories" }),
        __metadata("design:type", Number)
    ], GetTaxesScope.prototype, "categories", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "categoriesAreInclusive" }),
        __metadata("design:type", Boolean)
    ], GetTaxesScope.prototype, "categoriesAreInclusive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "collections" }),
        __metadata("design:type", Number)
    ], GetTaxesScope.prototype, "collections", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "collectionsAreInclusive" }),
        __metadata("design:type", Boolean)
    ], GetTaxesScope.prototype, "collectionsAreInclusive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "products" }),
        __metadata("design:type", Number)
    ], GetTaxesScope.prototype, "products", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "productsAreInclusive" }),
        __metadata("design:type", Boolean)
    ], GetTaxesScope.prototype, "productsAreInclusive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sellers" }),
        __metadata("design:type", Number)
    ], GetTaxesScope.prototype, "sellers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sellersAreInclusive" }),
        __metadata("design:type", Boolean)
    ], GetTaxesScope.prototype, "sellersAreInclusive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "skus" }),
        __metadata("design:type", Number)
    ], GetTaxesScope.prototype, "skus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "skusAreInclusive" }),
        __metadata("design:type", Boolean)
    ], GetTaxesScope.prototype, "skusAreInclusive", void 0);
    return GetTaxesScope;
}(utils_1.SpeakeasyBase));
exports.GetTaxesScope = GetTaxesScope;
/**
 * Object with information about a tax.
 */
var GetTaxes = /** @class */ (function (_super) {
    __extends(GetTaxes, _super);
    function GetTaxes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Campaigns" }),
        __metadata("design:type", Array)
    ], GetTaxes.prototype, "campaigns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "activateGiftsMultiplier" }),
        __metadata("design:type", Boolean)
    ], GetTaxes.prototype, "activateGiftsMultiplier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "areSalesChannelIdsExclusive" }),
        __metadata("design:type", Boolean)
    ], GetTaxes.prototype, "areSalesChannelIdsExclusive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beginDate" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "beginDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "endDate" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "endDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hasMaxPricePerItem" }),
        __metadata("design:type", Boolean)
    ], GetTaxes.prototype, "hasMaxPricePerItem", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idCalculatorConfiguration" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "idCalculatorConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idsSalesChannel" }),
        __metadata("design:type", Array)
    ], GetTaxes.prototype, "idsSalesChannel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isActive" }),
        __metadata("design:type", Boolean)
    ], GetTaxes.prototype, "isActive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isArchived" }),
        __metadata("design:type", Boolean)
    ], GetTaxes.prototype, "isArchived", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isTax" }),
        __metadata("design:type", Boolean)
    ], GetTaxes.prototype, "isTax", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastModifiedUtc" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "lastModifiedUtc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxUsage" }),
        __metadata("design:type", Number)
    ], GetTaxes.prototype, "maxUsage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "percentualTax" }),
        __metadata("design:type", Number)
    ], GetTaxes.prototype, "percentualTax", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scope" }),
        (0, class_transformer_1.Type)(function () { return GetTaxesScope; }),
        __metadata("design:type", GetTaxesScope)
    ], GetTaxes.prototype, "scope", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "utmCampain" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "utmCampain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "utmSource" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "utmSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "utmiCampaign" }),
        __metadata("design:type", String)
    ], GetTaxes.prototype, "utmiCampaign", void 0);
    return GetTaxes;
}(utils_1.SpeakeasyBase));
exports.GetTaxes = GetTaxes;
