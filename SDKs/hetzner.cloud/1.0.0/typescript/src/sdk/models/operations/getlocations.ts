/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetLocationsRequest extends SpeakeasyBase {
  /**
   * Can be used to filter Locations by their name. The response will only contain the Location matching the specified name.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;
}

export class GetLocations200ApplicationJSONLocations extends SpeakeasyBase {
  /**
   * City the Location is closest to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  /**
   * ISO 3166-1 alpha-2 code of the country the Location resides in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  /**
   * Description of the Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * ID of the Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Latitude of the city closest to the Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude: number;

  /**
   * Longitude of the city closest to the Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude: number;

  /**
   * Unique identifier of the Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Name of network zone this Location resides in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network_zone" })
  networkZone: string;
}

/**
 * The `locations` key in the reply contains an array of Location objects with this structure
 */
export class GetLocations200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetLocations200ApplicationJSONLocations })
  @Expose({ name: "locations" })
  @Type(() => GetLocations200ApplicationJSONLocations)
  locations: GetLocations200ApplicationJSONLocations[];
}

export class GetLocationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The `locations` key in the reply contains an array of Location objects with this structure
   */
  @SpeakeasyMetadata()
  getLocations200ApplicationJSONObject?: GetLocations200ApplicationJSON;
}
