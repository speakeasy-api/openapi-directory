"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import player as shared_player
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LeaderboardEntryTimeSpanEnum(str, Enum):
    r"""The time span of this high score."""
    SCORE_TIME_SPAN_UNSPECIFIED = 'SCORE_TIME_SPAN_UNSPECIFIED'
    ALL_TIME = 'ALL_TIME'
    WEEKLY = 'WEEKLY'
    DAILY = 'DAILY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LeaderboardEntry:
    r"""The Leaderboard Entry resource."""
    
    formatted_score: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formattedScore'), 'exclude': lambda f: f is None }})
    r"""The localized string for the numerical value of this score."""  
    formatted_score_rank: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formattedScoreRank'), 'exclude': lambda f: f is None }})
    r"""The localized string for the rank of this score for this leaderboard."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardEntry`."""  
    player: Optional[shared_player.Player] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('player'), 'exclude': lambda f: f is None }})
    r"""A Player resource."""  
    score_rank: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scoreRank'), 'exclude': lambda f: f is None }})
    r"""The rank of this score for this leaderboard."""  
    score_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scoreTag'), 'exclude': lambda f: f is None }})
    r"""Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986."""  
    score_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scoreValue'), 'exclude': lambda f: f is None }})
    r"""The numerical value of this score."""  
    time_span: Optional[LeaderboardEntryTimeSpanEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeSpan'), 'exclude': lambda f: f is None }})
    r"""The time span of this high score."""  
    write_timestamp_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('writeTimestampMillis'), 'exclude': lambda f: f is None }})
    r"""The timestamp at which this score was recorded, in milliseconds since the epoch in UTC."""  
    