// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateSignalingChannelHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateSignalingChannelRequestBodySingleMasterConfiguration - A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
type UpdateSignalingChannelRequestBodySingleMasterConfiguration struct {
	MessageTTLSeconds *int64 `json:"MessageTtlSeconds,omitempty"`
}

type UpdateSignalingChannelRequestBody struct {
	// The Amazon Resource Name (ARN) of the signaling channel that you want to update.
	ChannelARN string `json:"ChannelARN"`
	// The current version of the signaling channel that you want to update.
	CurrentVersion string `json:"CurrentVersion"`
	// A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
	SingleMasterConfiguration *UpdateSignalingChannelRequestBodySingleMasterConfiguration `json:"SingleMasterConfiguration,omitempty"`
}

type UpdateSignalingChannelRequest struct {
	Headers UpdateSignalingChannelHeaders
	Request UpdateSignalingChannelRequestBody `request:"mediaType=application/json"`
}

type UpdateSignalingChannelResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateSignalingChannelOutput map[string]interface{}
	// VersionMismatchException
	VersionMismatchException interface{}
}
