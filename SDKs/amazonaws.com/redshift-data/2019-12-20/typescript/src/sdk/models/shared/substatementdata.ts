/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StatementStatusStringEnum } from "./statementstatusstringenum";
import { Expose, Transform } from "class-transformer";

/**
 * Information about an SQL statement.
 */
export class SubStatementData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Duration" })
  duration?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HasResultSet" })
  hasResultSet?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "QueryString" })
  queryString?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RedshiftQueryId" })
  redshiftQueryId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ResultRows" })
  resultRows?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ResultSize" })
  resultSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: StatementStatusStringEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
