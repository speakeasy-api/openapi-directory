"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SyncV1ServiceSyncMapSyncMapPermission:
    r"""OK"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Sync Map Permission resource."""  
    identity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identity'), 'exclude': lambda f: f is None }})
    r"""The application-defined string that uniquely identifies the resource's User within the Service to an FPA token."""  
    manage: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manage'), 'exclude': lambda f: f is None }})
    r"""Whether the identity can delete the Sync Map."""  
    map_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('map_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Sync Map to which the Permission applies."""  
    read: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('read'), 'exclude': lambda f: f is None }})
    r"""Whether the identity can read the Sync Map and its Items."""  
    service_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) the resource is associated with."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The absolute URL of the Sync Map Permission resource."""  
    write: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('write'), 'exclude': lambda f: f is None }})
    r"""Whether the identity can create, update, and delete Items in the Sync Map."""  
    