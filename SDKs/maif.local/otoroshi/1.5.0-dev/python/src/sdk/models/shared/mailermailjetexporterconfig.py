"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MailerMailjetExporterConfigTypeEnum(str, Enum):
    r"""Type of mailer"""
    MAILJET = 'mailjet'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MailerMailjetExporterConfig:
    r"""Data Exporter config"""
    
    type: MailerMailjetExporterConfigTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of mailer"""  
    api_key_private: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiKeyPrivate'), 'exclude': lambda f: f is None }})
    r"""Mailjet private apiKey"""  
    api_key_public: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiKeyPublic'), 'exclude': lambda f: f is None }})
    r"""Mailjet public apiKey"""  
    to: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to'), 'exclude': lambda f: f is None }})
    r"""Email adresses of recipents"""  
    