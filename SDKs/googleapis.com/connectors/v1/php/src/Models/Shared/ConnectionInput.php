<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConnectionInput - Connection represents an instance of connector.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConnectionInput
{
    /**
     * AuthConfig defines details of a authentication type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuthConfig $authConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('authConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AuthConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuthConfig $authConfig = null;
    
    /**
     * Optional. Configuration for configuring the connection with an external system.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConfigVariable> $configVariables
     */
	#[\JMS\Serializer\Annotation\SerializedName('configVariables')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConfigVariable>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $configVariables = null;
    
    /**
     * Required. Connector version on which the connection is created. The format is: projects/* /locations/* /providers/* /connectors/* /versions/* Only global location is supported for ConnectorVersion resource.
     * 
     * @var ?string $connectorVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $connectorVersion = null;
    
    /**
     * Optional. Description of the resource.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DestinationConfig> $destinationConfigs
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationConfigs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DestinationConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $destinationConfigs = null;
    
    /**
     * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Determines whether or no a connection is locked. If locked, a reason must be specified.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LockConfig $lockConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('lockConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LockConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LockConfig $lockConfig = null;
    
    /**
     * Log configuration for the connection.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConnectorsLogConfig $logConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('logConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConnectorsLogConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectorsLogConfig $logConfig = null;
    
    /**
     * Node configuration for the connection.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NodeConfig $nodeConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NodeConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NodeConfig $nodeConfig = null;
    
    /**
     * Optional. Service account needed for runtime plane to access GCP resources.
     * 
     * @var ?string $serviceAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceAccount = null;
    
    /**
     * SSL Configuration of a connection
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SslConfig $sslConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('sslConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SslConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SslConfig $sslConfig = null;
    
    /**
     * ConnectionStatus indicates the state of the connection.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConnectionStatus $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConnectionStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectionStatus $status = null;
    
    /**
     * Optional. Suspended indicates if a user has suspended a connection or not.
     * 
     * @var ?bool $suspended
     */
	#[\JMS\Serializer\Annotation\SerializedName('suspended')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $suspended = null;
    
	public function __construct()
	{
		$this->authConfig = null;
		$this->configVariables = null;
		$this->connectorVersion = null;
		$this->description = null;
		$this->destinationConfigs = null;
		$this->labels = null;
		$this->lockConfig = null;
		$this->logConfig = null;
		$this->nodeConfig = null;
		$this->serviceAccount = null;
		$this->sslConfig = null;
		$this->status = null;
		$this->suspended = null;
	}
}
