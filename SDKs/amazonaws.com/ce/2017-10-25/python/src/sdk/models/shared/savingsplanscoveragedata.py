"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SavingsPlansCoverageData:
    r"""Specific coverage percentage, On-Demand costs, and spend covered by Savings Plans, and total Savings Plans costs for an account."""
    
    coverage_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CoveragePercentage'), 'exclude': lambda f: f is None }})  
    on_demand_cost: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OnDemandCost'), 'exclude': lambda f: f is None }})  
    spend_covered_by_savings_plans: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpendCoveredBySavingsPlans'), 'exclude': lambda f: f is None }})  
    total_cost: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalCost'), 'exclude': lambda f: f is None }})  
    