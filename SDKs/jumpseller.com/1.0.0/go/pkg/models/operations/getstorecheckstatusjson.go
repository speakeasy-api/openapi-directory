// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetStoreCheckStatusJSONQueryParams struct {
	// Partner authentication token.
	AuthToken string `queryParam:"style=form,explode=true,name=auth_token"`
	// ISO 3166-2 code of the language used in the response messages.
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
	// Partner code.
	PartnerCode string `queryParam:"style=form,explode=true,name=partner_code"`
	// Store Code
	StoreCode string `queryParam:"style=form,explode=true,name=store_code"`
}

type GetStoreCheckStatusJSONRequest struct {
	QueryParams GetStoreCheckStatusJSONQueryParams
}

type GetStoreCheckStatusJSON200ApplicationJSONType string

const (
	GetStoreCheckStatusJSON200ApplicationJSONTypePartnerStoreStatus GetStoreCheckStatusJSON200ApplicationJSONType = "PartnerStoreStatus"
	GetStoreCheckStatusJSON200ApplicationJSONTypeNewPartnerStore    GetStoreCheckStatusJSON200ApplicationJSONType = "NewPartnerStore"
)

type GetStoreCheckStatusJSON200ApplicationJSON struct {
	PartnerStoreStatus *shared.PartnerStoreStatus
	NewPartnerStore    *shared.NewPartnerStore

	Type GetStoreCheckStatusJSON200ApplicationJSONType
}

func CreateGetStoreCheckStatusJSON200ApplicationJSONPartnerStoreStatus(partnerStoreStatus shared.PartnerStoreStatus) GetStoreCheckStatusJSON200ApplicationJSON {
	typ := GetStoreCheckStatusJSON200ApplicationJSONTypePartnerStoreStatus

	return GetStoreCheckStatusJSON200ApplicationJSON{
		PartnerStoreStatus: &partnerStoreStatus,
		Type:               typ,
	}
}

func CreateGetStoreCheckStatusJSON200ApplicationJSONNewPartnerStore(newPartnerStore shared.NewPartnerStore) GetStoreCheckStatusJSON200ApplicationJSON {
	typ := GetStoreCheckStatusJSON200ApplicationJSONTypeNewPartnerStore

	return GetStoreCheckStatusJSON200ApplicationJSON{
		NewPartnerStore: &newPartnerStore,
		Type:            typ,
	}
}

func (u *GetStoreCheckStatusJSON200ApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	partnerStoreStatus := new(shared.PartnerStoreStatus)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&partnerStoreStatus); err == nil {
		u.PartnerStoreStatus = partnerStoreStatus
		u.Type = GetStoreCheckStatusJSON200ApplicationJSONTypePartnerStoreStatus
		return nil
	}

	newPartnerStore := new(shared.NewPartnerStore)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&newPartnerStore); err == nil {
		u.NewPartnerStore = newPartnerStore
		u.Type = GetStoreCheckStatusJSON200ApplicationJSONTypeNewPartnerStore
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetStoreCheckStatusJSON200ApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.PartnerStoreStatus != nil {
		return json.Marshal(u.PartnerStoreStatus)
	}

	if u.NewPartnerStore != nil {
		return json.Marshal(u.NewPartnerStore)
	}

	return nil, nil
}

type GetStoreCheckStatusJSONResponse struct {
	ContentType string
	// Bad Request.
	PartnerError *shared.PartnerError
	StatusCode   int
	RawResponse  *http.Response
	// A Store status object if creation is still in progress. A new Partner Store object when creation is done.
	GetStoreCheckStatusJSON200ApplicationJSONOneOf *GetStoreCheckStatusJSON200ApplicationJSON
}
