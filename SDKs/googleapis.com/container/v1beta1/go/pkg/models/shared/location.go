// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LocationTypeEnum - Contains the type of location this Location is for. Regional or Zonal.
type LocationTypeEnum string

const (
	LocationTypeEnumLocationTypeUnspecified LocationTypeEnum = "LOCATION_TYPE_UNSPECIFIED"
	LocationTypeEnumZone                    LocationTypeEnum = "ZONE"
	LocationTypeEnumRegion                  LocationTypeEnum = "REGION"
)

func (e LocationTypeEnum) ToPointer() *LocationTypeEnum {
	return &e
}

func (e *LocationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOCATION_TYPE_UNSPECIFIED":
		fallthrough
	case "ZONE":
		fallthrough
	case "REGION":
		*e = LocationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LocationTypeEnum: %v", v)
	}
}

// Location - Location returns the location name, and if the location is recommended for GKE cluster scheduling.
type Location struct {
	// Contains the name of the resource requested. Specified in the format `projects/*/locations/*`.
	Name *string `json:"name,omitempty"`
	// Whether the location is recommended for GKE cluster scheduling.
	Recommended *bool `json:"recommended,omitempty"`
	// Contains the type of location this Location is for. Regional or Zonal.
	Type *LocationTypeEnum `json:"type,omitempty"`
}
