"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SessionInput = exports.SessionIntentEnum = exports.SessionAcquiringChannelEnum = void 0;
var utils_1 = require("../../../internal/utils");
var address_1 = require("./address");
var attachment_1 = require("./attachment");
var customer_1 = require("./customer");
var merchanturls_1 = require("./merchanturls");
var options_1 = require("./options");
var orderline_1 = require("./orderline");
var class_transformer_1 = require("class-transformer");
/**
 * The acquiring channel in which the session takes place. Ecommerce is default unless specified. Any other values should be defined in the agreement.
 */
var SessionAcquiringChannelEnum;
(function (SessionAcquiringChannelEnum) {
    SessionAcquiringChannelEnum["Ecommerce"] = "ECOMMERCE";
    SessionAcquiringChannelEnum["InStore"] = "IN_STORE";
    SessionAcquiringChannelEnum["Telesales"] = "TELESALES";
})(SessionAcquiringChannelEnum = exports.SessionAcquiringChannelEnum || (exports.SessionAcquiringChannelEnum = {}));
/**
 * Intent for the session. The field is designed to let partners inform Klarna of the purpose of the customerâ€™s session.
 */
var SessionIntentEnum;
(function (SessionIntentEnum) {
    SessionIntentEnum["Buy"] = "buy";
    SessionIntentEnum["Tokenize"] = "tokenize";
    SessionIntentEnum["BuyAndTokenize"] = "buy_and_tokenize";
})(SessionIntentEnum = exports.SessionIntentEnum || (exports.SessionIntentEnum = {}));
/**
 * session_request
 */
var SessionInput = /** @class */ (function (_super) {
    __extends(SessionInput, _super);
    function SessionInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "acquiring_channel" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "acquiringChannel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "attachment" }),
        (0, class_transformer_1.Type)(function () { return attachment_1.Attachment; }),
        __metadata("design:type", attachment_1.Attachment)
    ], SessionInput.prototype, "attachment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billing_address" }),
        (0, class_transformer_1.Type)(function () { return address_1.Address; }),
        __metadata("design:type", address_1.Address)
    ], SessionInput.prototype, "billingAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_payment_method_ids" }),
        __metadata("design:type", Array)
    ], SessionInput.prototype, "customPaymentMethodIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customer" }),
        (0, class_transformer_1.Type)(function () { return customer_1.Customer; }),
        __metadata("design:type", customer_1.Customer)
    ], SessionInput.prototype, "customer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "design" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "design", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "intent" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "intent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locale" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "locale", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_data" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "merchantData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_reference1" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "merchantReference1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_reference2" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "merchantReference2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merchant_urls" }),
        (0, class_transformer_1.Type)(function () { return merchanturls_1.MerchantUrls; }),
        __metadata("design:type", merchanturls_1.MerchantUrls)
    ], SessionInput.prototype, "merchantUrls", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "options" }),
        (0, class_transformer_1.Type)(function () { return options_1.Options; }),
        __metadata("design:type", options_1.Options)
    ], SessionInput.prototype, "options", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "order_amount" }),
        __metadata("design:type", Number)
    ], SessionInput.prototype, "orderAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: orderline_1.OrderLine }),
        (0, class_transformer_1.Expose)({ name: "order_lines" }),
        (0, class_transformer_1.Type)(function () { return orderline_1.OrderLine; }),
        __metadata("design:type", Array)
    ], SessionInput.prototype, "orderLines", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "order_tax_amount" }),
        __metadata("design:type", Number)
    ], SessionInput.prototype, "orderTaxAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "purchase_country" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "purchaseCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "purchase_currency" }),
        __metadata("design:type", String)
    ], SessionInput.prototype, "purchaseCurrency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shipping_address" }),
        (0, class_transformer_1.Type)(function () { return address_1.Address; }),
        __metadata("design:type", address_1.Address)
    ], SessionInput.prototype, "shippingAddress", void 0);
    return SessionInput;
}(utils_1.SpeakeasyBase));
exports.SessionInput = SessionInput;
