// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type SchemaResponsesReadRequest struct {
	// The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`.
	SchemaResponseID string `pathParam:"style=simple,explode=false,name=schema_response_id"`
}

// SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum - A string that represents Schema Response state. `initial` is the state of a Schema Response on a newly registered Registration, to edit a Schema Response you must create a Schema Response Action that triggers a new submission.
type SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum string

const (
	SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnumInitial           SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum = "initial"
	SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnumInProgress        SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum = "in_progress"
	SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnumApproved          SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum = "approved"
	SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnumPendingModeration SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum = "pending_moderation"
)

func (e SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum) ToPointer() *SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum {
	return &e
}

func (e *SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initial":
		fallthrough
	case "in_progress":
		fallthrough
	case "approved":
		fallthrough
	case "pending_moderation":
		*e = SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum: %v", v)
	}
}

// SchemaResponsesReadSchemaResponsesAttributes - The properties of the Schema Response.
type SchemaResponsesReadSchemaResponsesAttributes struct {
	// The date the Schema Response was created
	DateCreated *int64
	// The date the Schema Response was most recently changed.
	DateModified *int64
	// The date the Schema Response was submitted for approval.
	DateSubmitted *int64
	// A bool that represents whether the Schema Response is the original one that was made when the registration was created.
	IsOriginalResponse *bool
	// A bool that represents whether the Schema Response needs the current user to approve the state transition.
	IsPendingCurrentUserApproval *bool
	// A string that represents Schema Response state. `initial` is the state of a Schema Response on a newly registered Registration, to edit a Schema Response you must create a Schema Response Action that triggers a new submission.
	ReviewsState *SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum
	// A user provided string representing the reason a new Schema Response was needed.
	RevisionJustification *string
	// A dictionary object representing responses to to the revision where the key is the block key for that the response. For example in the registration response `{"q1": "Answer 1"}` the block key is `q1`..
	RevisionResponses map[string]interface{}
	// A list of strings which the response keys for Registration Response Blocks that were updated from the previous schema.
	UpdatedResponseKeys []interface{}
}

// SchemaResponsesReadSchemaResponsesLinks - URLs to alternative representations of the Schema Response entity.
type SchemaResponsesReadSchemaResponsesLinks struct {
	// A link to the detail page for a Schema Response.
	Self *string
}

// SchemaResponsesReadSchemaResponsesRelationships - Links to other entities or entity collections that have a relationship to the file entity.
type SchemaResponsesReadSchemaResponsesRelationships struct {
	// A link to the Registration Schema Actions endpoint for this Schema Response.
	Actions *string
	// A link to the User who initiated the creation of the Schema Response.
	InitiatedBy *string
	// A link to the Registration for this Schema Response.
	Registration *string
	// A link to the Registration Schema for this Schema Response.
	RegistrationSchema *string
}

// SchemaResponsesReadSchemaResponses - OK
type SchemaResponsesReadSchemaResponses struct {
	// The properties of the Schema Response.
	Attributes SchemaResponsesReadSchemaResponsesAttributes
	// The unique identifier of the Schema Response.
	ID *string
	// URLs to alternative representations of the Schema Response entity.
	Links *SchemaResponsesReadSchemaResponsesLinks
	// Links to other entities or entity collections that have a relationship to the file entity.
	Relationships *SchemaResponsesReadSchemaResponsesRelationships
	// The type identifier of the Schema Response (`schema-response`).
	Type string
}

type SchemaResponsesReadResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
