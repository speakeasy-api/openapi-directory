/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * APIPeriodUsageOut - Print current API usage.
 */
public class APIPeriodUsageOut {
    /**
     * The current billing period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingPeriod")
    public APIBillingPeriodUsageOut billingPeriod;
    public APIPeriodUsageOut withBillingPeriod(APIBillingPeriodUsageOut billingPeriod) {
        this.billingPeriod = billingPeriod;
        return this;
    }
    
    /**
     * Currency of the overage amount.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overageCurrency")
    public String overageCurrency;
    public APIPeriodUsageOut withOverageCurrency(String overageCurrency) {
        this.overageCurrency = overageCurrency;
        return this;
    }
    
    /**
     * Overage amount including any tax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overageExclTax")
    public Double overageExclTax;
    public APIPeriodUsageOut withOverageExclTax(Double overageExclTax) {
        this.overageExclTax = overageExclTax;
        return this;
    }
    
    /**
     * Overage amount including tax (if applicable).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overageInclTax")
    public Double overageInclTax;
    public APIPeriodUsageOut withOverageInclTax(Double overageInclTax) {
        this.overageInclTax = overageInclTax;
        return this;
    }
    
    /**
     * Quantity above monthly quota of the current subscritpion, in units.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overageQuantity")
    public Long overageQuantity;
    public APIPeriodUsageOut withOverageQuantity(Long overageQuantity) {
        this.overageQuantity = overageQuantity;
        return this;
    }
    
    /**
     * The API Plan governing the subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription")
    public APIPlanSubscriptionOut subscription;
    public APIPeriodUsageOut withSubscription(APIPlanSubscriptionOut subscription) {
        this.subscription = subscription;
        return this;
    }
    
}
