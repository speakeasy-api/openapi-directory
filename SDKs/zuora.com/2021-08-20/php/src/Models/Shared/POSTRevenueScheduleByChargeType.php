<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * POSTRevenueScheduleByChargeType - Container for custom fields of a Revenue Schedule object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class POSTRevenueScheduleByChargeType
{
    /**
     * The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`
     * 
     * 
     * 
     * @var string $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $amount;
    
    /**
     * The accounting code for deferred revenue, such as Monthly Recurring Liability. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
     * 
     * 
     * 
     * @var ?string $deferredRevenueAccountingCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('deferredRevenueAccountingCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deferredRevenueAccountingCode = null;
    
    /**
     * The type of the deferred revenue accounting code, such as Deferred Revenue. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
     * 
     * 
     * 
     * @var ?string $deferredRevenueAccountingCodeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('deferredRevenueAccountingCodeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deferredRevenueAccountingCodeType = null;
    
    /**
     * Additional information about this record.
     * 
     * 
     * Character Limit: 2,000
     * 
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * When overriding accounting codes from a charge, `recognizedRevenueAccountingCode` and `deferredRevenue AccountingCode` must be in the request body and can have the empty value.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum $overrideChargeAccountingCodes
     */
	#[\JMS\Serializer\Annotation\SerializedName('overrideChargeAccountingCodes')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum $overrideChargeAccountingCodes = null;
    
    /**
     * The accounting code for recognized revenue, such as Monthly Recurring Charges or Overage Charges. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, the value is ignored.
     * 
     * 
     * 
     * @var ?string $recognizedRevenueAccountingCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('recognizedRevenueAccountingCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recognizedRevenueAccountingCode = null;
    
    /**
     * The type of the recognized revenue accounting code, such as Sales Revenue or Sales Discount. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
     * 
     * 
     * 
     * @var ?string $recognizedRevenueAccountingCodeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('recognizedRevenueAccountingCodeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recognizedRevenueAccountingCodeType = null;
    
    /**
     * Reference ID is used only in the custom unlimited rule to create a revenue schedule. In this scenario, the revenue schedule is not linked to an invoice item or invoice item adjustment.
     * 
     * 
     * Character Limit: 100
     * 
     * 
     * @var ?string $referenceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('referenceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $referenceId = null;
    
    /**
     * An array of revenue distributions. Represents how you want to distribute revenue for this revenue schedule. You can distribute revenue into a maximum of 250 accounting periods with one revenue schedule.
     * 
     * 
     * The sum of the newAmount fields must be equal to the amount field.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\POSTDistributionItemType> $revenueDistributions
     */
	#[\JMS\Serializer\Annotation\SerializedName('revenueDistributions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\POSTDistributionItemType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $revenueDistributions = null;
    
    /**
     * Represents a change to a revenue schedule, such as posting an invoice or distributing revenue.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTRevenueScheduleByChargeTypeRevenueEvent $revenueEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('revenueEvent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\POSTRevenueScheduleByChargeTypeRevenueEvent')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTRevenueScheduleByChargeTypeRevenueEvent $revenueEvent = null;
    
    /**
     * The effective date of the revenue schedule. For example, the revenue schedule date for bookings-based revenue recognition is typically set to the order date or contract date.
     * 
     * 
     * The date cannot be in a closed accounting period. The date must be in `yyyy-mm-dd` format.
     * 
     * 
     * @var \DateTime $revenueScheduleDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('revenueScheduleDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $revenueScheduleDate;
    
	public function __construct()
	{
		$this->amount = "";
		$this->deferredRevenueAccountingCode = null;
		$this->deferredRevenueAccountingCodeType = null;
		$this->notes = null;
		$this->overrideChargeAccountingCodes = null;
		$this->recognizedRevenueAccountingCode = null;
		$this->recognizedRevenueAccountingCodeType = null;
		$this->referenceId = null;
		$this->revenueDistributions = null;
		$this->revenueEvent = null;
		$this->revenueScheduleDate = new \DateTime();
	}
}
