"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import subordinateconfigchain as shared_subordinateconfigchain
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubordinateConfig:
    r"""Describes a subordinate CA's issuers. This is either a resource name to a known issuing CertificateAuthority, or a PEM issuer certificate chain."""
    
    certificate_authority: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateAuthority'), 'exclude': lambda f: f is None }})
    r"""Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`."""  
    pem_issuer_chain: Optional[shared_subordinateconfigchain.SubordinateConfigChain] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pemIssuerChain'), 'exclude': lambda f: f is None }})
    r"""This message describes a subordinate CA's issuer certificate chain. This wrapper exists for compatibility reasons."""  
    