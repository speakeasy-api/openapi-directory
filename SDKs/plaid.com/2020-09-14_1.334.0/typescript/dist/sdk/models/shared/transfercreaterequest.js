"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferCreateRequest = exports.TransferCreateRequestTransferTypeEnum = exports.TransferCreateRequestTransferNetworkEnum = exports.TransferCreateRequestACHClassEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Specifies the use case of the transfer. Required for transfers on an ACH network.
 *
 * @remarks
 *
 * `"ccd"` - Corporate Credit or Debit - fund transfer between two corporate bank accounts
 *
 * `"ppd"` - Prearranged Payment or Deposit - the transfer is part of a pre-existing relationship with a consumer, eg. bill payment
 *
 * `"tel"` - Telephone-Initiated Entry
 *
 * `"web"` - Internet-Initiated Entry - debits from a consumerâ€™s account where their authorization is obtained over the Internet
 */
var TransferCreateRequestACHClassEnum;
(function (TransferCreateRequestACHClassEnum) {
    TransferCreateRequestACHClassEnum["Ccd"] = "ccd";
    TransferCreateRequestACHClassEnum["Ppd"] = "ppd";
    TransferCreateRequestACHClassEnum["Tel"] = "tel";
    TransferCreateRequestACHClassEnum["Web"] = "web";
})(TransferCreateRequestACHClassEnum = exports.TransferCreateRequestACHClassEnum || (exports.TransferCreateRequestACHClassEnum = {}));
/**
 * The network or rails used for the transfer.
 *
 * @remarks
 *
 * For transfers submitted as either `ach` or `same-day-ach` the cutoff for same-day is 9:30 AM Pacific Time and the cutoff for next-day transfers is 5:30 PM Pacific Time. It is recommended to submit a transfer at least 15 minutes before the cutoff time in order to ensure that it will be processed before the cutoff. Any transfer that is indicated as `same-day-ach` and that misses the same-day cutoff, but is submitted in time for the next-day cutoff, will be sent over next-day rails and will not incur same-day charges. Note that both legs of the transfer will be downgraded if applicable.
 */
var TransferCreateRequestTransferNetworkEnum;
(function (TransferCreateRequestTransferNetworkEnum) {
    TransferCreateRequestTransferNetworkEnum["Ach"] = "ach";
    TransferCreateRequestTransferNetworkEnum["SameDayAch"] = "same-day-ach";
    TransferCreateRequestTransferNetworkEnum["Rtp"] = "rtp";
})(TransferCreateRequestTransferNetworkEnum = exports.TransferCreateRequestTransferNetworkEnum || (exports.TransferCreateRequestTransferNetworkEnum = {}));
/**
 * The type of transfer. This will be either `debit` or `credit`.  A `debit` indicates a transfer of money into the origination account; a `credit` indicates a transfer of money out of the origination account.
 */
var TransferCreateRequestTransferTypeEnum;
(function (TransferCreateRequestTransferTypeEnum) {
    TransferCreateRequestTransferTypeEnum["Debit"] = "debit";
    TransferCreateRequestTransferTypeEnum["Credit"] = "credit";
})(TransferCreateRequestTransferTypeEnum = exports.TransferCreateRequestTransferTypeEnum || (exports.TransferCreateRequestTransferTypeEnum = {}));
/**
 * Defines the request schema for `/transfer/create`
 */
var TransferCreateRequest = /** @class */ (function (_super) {
    __extends(TransferCreateRequest, _super);
    function TransferCreateRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "access_token" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "accessToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_id" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ach_class" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "achClass", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authorization_id" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "authorizationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "client_id" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "clientId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idempotency_key" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "idempotencyKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iso_currency_code" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "isoCurrencyCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metadata" }),
        __metadata("design:type", Object)
    ], TransferCreateRequest.prototype, "metadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "network", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "origination_account_id" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "originationAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payment_profile_token" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "paymentProfileToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secret" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "secret", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TransferCreateRequest.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user" }),
        __metadata("design:type", Object)
    ], TransferCreateRequest.prototype, "user", void 0);
    return TransferCreateRequest;
}(utils_1.SpeakeasyBase));
exports.TransferCreateRequest = TransferCreateRequest;
