/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DestinyDefinitionsDestinyInventoryItemDefinitionAction - If an item can have an action performed on it (like "Dismantle"), it will be defined here if you care.
 */
public class DestinyDefinitionsDestinyInventoryItemDefinitionAction {
    /**
     * The internal identifier for the action.
     */
    
    public String actionTypeLabel;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withActionTypeLabel(String actionTypeLabel) {
        this.actionTypeLabel = actionTypeLabel;
        return this;
    }
    
    /**
     * If true, the entire stack is deleted when the action completes.
     */
    
    public Boolean consumeEntireStack;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withConsumeEntireStack(Boolean consumeEntireStack) {
        this.consumeEntireStack = consumeEntireStack;
        return this;
    }
    
    /**
     * If true, the item is deleted when the action completes.
     */
    
    public Boolean deleteOnAction;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withDeleteOnAction(Boolean deleteOnAction) {
        this.deleteOnAction = deleteOnAction;
        return this;
    }
    
    /**
     * The content has this property, however it's not entirely clear how it is used.
     */
    
    public Boolean isPositive;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withIsPositive(Boolean isPositive) {
        this.isPositive = isPositive;
        return this;
    }
    
    /**
     * The icon associated with the overlay screen for the action, if any.
     */
    
    public String overlayIcon;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withOverlayIcon(String overlayIcon) {
        this.overlayIcon = overlayIcon;
        return this;
    }
    
    /**
     * If the action has an overlay screen associated with it, this is the name of that screen. Unfortunately, we cannot return the screen's data itself.
     */
    
    public String overlayScreenName;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withOverlayScreenName(String overlayScreenName) {
        this.overlayScreenName = overlayScreenName;
        return this;
    }
    
    /**
     * If performing this action earns you Progression, this is the list of progressions and values granted for those progressions by performing this action.
     */
    
    public DestinyDefinitionsDestinyProgressionRewardDefinition[] progressionRewards;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withProgressionRewards(DestinyDefinitionsDestinyProgressionRewardDefinition[] progressionRewards) {
        this.progressionRewards = progressionRewards;
        return this;
    }
    
    /**
     * The identifier hash for the Cooldown associated with this action. We have not pulled this data yet for you to have more data to use for cooldowns.
     */
    
    public Long requiredCooldownHash;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withRequiredCooldownHash(Long requiredCooldownHash) {
        this.requiredCooldownHash = requiredCooldownHash;
        return this;
    }
    
    /**
     * The number of seconds to delay before allowing this action to be performed again.
     */
    
    public Integer requiredCooldownSeconds;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withRequiredCooldownSeconds(Integer requiredCooldownSeconds) {
        this.requiredCooldownSeconds = requiredCooldownSeconds;
        return this;
    }
    
    /**
     * If the action requires other items to exist or be destroyed, this is the list of those items and requirements.
     */
    
    public DestinyDefinitionsDestinyItemActionRequiredItemDefinition[] requiredItems;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withRequiredItems(DestinyDefinitionsDestinyItemActionRequiredItemDefinition[] requiredItems) {
        this.requiredItems = requiredItems;
        return this;
    }
    
    /**
     * Theoretically, an item could have a localized string for a hint about the location in which the action should be performed. In practice, no items yet have this property.
     */
    
    public String requiredLocation;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withRequiredLocation(String requiredLocation) {
        this.requiredLocation = requiredLocation;
        return this;
    }
    
    /**
     * If true, this action will be performed as soon as you earn this item. Some rewards work this way, providing you a single item to pick up from a reward-granting vendor in-game and then immediately consuming itself to provide you multiple items.
     */
    
    public Boolean useOnAcquire;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withUseOnAcquire(Boolean useOnAcquire) {
        this.useOnAcquire = useOnAcquire;
        return this;
    }
    
    /**
     * Localized text describing the action being performed.
     */
    
    public String verbDescription;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withVerbDescription(String verbDescription) {
        this.verbDescription = verbDescription;
        return this;
    }
    
    /**
     * Localized text for the verb of the action being performed.
     */
    
    public String verbName;

    public DestinyDefinitionsDestinyInventoryItemDefinitionAction withVerbName(String verbName) {
        this.verbName = verbName;
        return this;
    }
    
    public DestinyDefinitionsDestinyInventoryItemDefinitionAction(){}
}
