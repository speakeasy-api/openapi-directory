"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import customextension as shared_customextension
from ..shared import extendedkeyusage as shared_extendedkeyusage
from ..shared import generalname as shared_generalname
from ..shared import keyusage as shared_keyusage
from ..shared import policyinformation as shared_policyinformation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Extensions:
    r"""Contains X.509 extension information for a certificate."""
    
    certificate_policies: Optional[list[shared_policyinformation.PolicyInformation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CertificatePolicies'), 'exclude': lambda f: f is None }})  
    custom_extensions: Optional[list[shared_customextension.CustomExtension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomExtensions'), 'exclude': lambda f: f is None }})  
    extended_key_usage: Optional[list[shared_extendedkeyusage.ExtendedKeyUsage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExtendedKeyUsage'), 'exclude': lambda f: f is None }})  
    key_usage: Optional[shared_keyusage.KeyUsage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyUsage'), 'exclude': lambda f: f is None }})
    r"""Defines one or more purposes for which the key contained in the certificate can be used. Default value for each option is false."""  
    subject_alternative_names: Optional[list[shared_generalname.GeneralName]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubjectAlternativeNames'), 'exclude': lambda f: f is None }})  
    