"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PublisherProvidedForecast:
    r"""This message carries publisher provided forecasting information."""
    
    dimensions: Optional[list[shared_dimension.Dimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})
    r"""Publisher provided dimensions. E.g. geo, sizes etc..."""  
    weekly_impressions: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weeklyImpressions'), 'exclude': lambda f: f is None }})
    r"""Publisher provided weekly impressions."""  
    weekly_uniques: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weeklyUniques'), 'exclude': lambda f: f is None }})
    r"""Publisher provided weekly uniques."""  
    