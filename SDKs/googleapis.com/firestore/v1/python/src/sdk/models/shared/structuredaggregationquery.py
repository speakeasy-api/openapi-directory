"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregation as shared_aggregation
from ..shared import structuredquery as shared_structuredquery
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StructuredAggregationQuery:
    r"""Firestore query for running an aggregation over a StructuredQuery."""
    
    aggregations: Optional[list[shared_aggregation.Aggregation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregations'), 'exclude': lambda f: f is None }})
    r"""Optional. Series of aggregations to apply over the results of the `structured_query`. Requires: * A minimum of one and maximum of five aggregations per query."""  
    structured_query: Optional[shared_structuredquery.StructuredQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('structuredQuery'), 'exclude': lambda f: f is None }})
    r"""A Firestore query."""  
    