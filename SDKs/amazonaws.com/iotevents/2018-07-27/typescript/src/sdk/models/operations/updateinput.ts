/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The definition of the input.
 */
export class UpdateInputRequestBodyInputDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Attribute })
  @Expose({ name: "attributes" })
  @Type(() => shared.Attribute)
  attributes?: shared.Attribute[];
}

export class UpdateInputRequestBody extends SpeakeasyBase {
  /**
   * The definition of the input.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inputDefinition" })
  @Type(() => UpdateInputRequestBodyInputDefinition)
  inputDefinition: UpdateInputRequestBodyInputDefinition;

  /**
   * A brief description of the input.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inputDescription" })
  inputDescription?: string;
}

export class UpdateInputRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateInputRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name of the input you want to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=inputName",
  })
  inputName: string;
}

export class UpdateInputResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceInUseException
   */
  @SpeakeasyMetadata()
  resourceInUseException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateInputResponse?: shared.UpdateInputResponse;
}
