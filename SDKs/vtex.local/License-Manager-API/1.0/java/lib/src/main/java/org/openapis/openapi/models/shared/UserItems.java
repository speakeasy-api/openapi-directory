/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserItems - Object representing users
 */
public class UserItems {
    /**
     * Array of account names
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNames")
    public String[] accountNames;

    public UserItems withAccountNames(String[] accountNames) {
        this.accountNames = accountNames;
        return this;
    }
    
    /**
     * Email of the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public UserItems withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * ID of the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public UserItems withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * If user is admin
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAdmin")
    public Boolean isAdmin;

    public UserItems withIsAdmin(Boolean isAdmin) {
        this.isAdmin = isAdmin;
        return this;
    }
    
    /**
     * If user is blocked
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isBlocked")
    public Boolean isBlocked;

    public UserItems withIsBlocked(Boolean isBlocked) {
        this.isBlocked = isBlocked;
        return this;
    }
    
    /**
     * For internal use only
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isReliable")
    public Boolean isReliable;

    public UserItems withIsReliable(Boolean isReliable) {
        this.isReliable = isReliable;
        return this;
    }
    
    /**
     * Name of the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public UserItems withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Array of roles
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roles")
    public String[] roles;

    public UserItems withRoles(String[] roles) {
        this.roles = roles;
        return this;
    }
    
    public UserItems(){}
}
