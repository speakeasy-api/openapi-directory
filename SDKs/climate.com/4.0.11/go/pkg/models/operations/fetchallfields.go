// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FetchAllFieldsSecurity struct {
	APIKey                  *string `security:"scheme,type=apiKey,subtype=header,name=X-Api-Key"`
	Oauth2AuthorizationCode *string `security:"scheme,type=oauth2,name=Authorization"`
}

type FetchAllFieldsRequest struct {
	// Max number of results to return per batch.  Must be between 1 and 100 inclusive.  Defaults to 100.
	XLimit *int `header:"style=simple,explode=false,name=X-Limit"`
	// Opaque string which allows for fetching the next batch of results.  Can be used to poll for changes.
	XNextToken *string `header:"style=simple,explode=false,name=X-Next-Token"`
	// Optional prefix filter for field name. Must be at least 3 characters.
	FieldName *string `queryParam:"style=form,explode=true,name=fieldName"`
}

type FetchAllFieldsResponse struct {
	ContentType string
	// Not Modified
	Empty map[string]interface{}
	// Bad Input
	Error *shared.Error
	// OK
	Fields      *shared.Fields
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
}
