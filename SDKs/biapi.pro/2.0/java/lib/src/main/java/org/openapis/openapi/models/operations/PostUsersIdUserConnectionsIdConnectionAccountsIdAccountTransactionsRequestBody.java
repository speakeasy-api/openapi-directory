/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody {
    /**
     * 1 if the transaction should be taken into account by pfm services (default: 1)
     */
    @SpeakeasyMetadata("multipartForm:name=active")
    public Boolean active;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * 1 if the transaction has already been debited (default: 0)
     */
    @SpeakeasyMetadata("multipartForm:name=coming")
    public Boolean coming;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withComing(Boolean coming) {
        this.coming = coming;
        return this;
    }
    
    /**
     * date of the transaction
     */
    @SpeakeasyMetadata("multipartForm:name=date")
    public LocalDate date;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withDate(LocalDate date) {
        this.date = date;
        return this;
    }
    
    /**
     * date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)
     */
    @SpeakeasyMetadata("multipartForm:name=date_scraped")
    public OffsetDateTime dateScraped;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withDateScraped(OffsetDateTime dateScraped) {
        this.dateScraped = dateScraped;
        return this;
    }
    
    /**
     * account of the transaction. If not supplied, it has to be given in the route
     */
    @SpeakeasyMetadata("multipartForm:name=id_account")
    public Long idAccount;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withIdAccount(Long idAccount) {
        this.idAccount = idAccount;
        return this;
    }
    
    /**
     * label of the transaction
     */
    @SpeakeasyMetadata("multipartForm:name=original_wording")
    public String originalWording;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withOriginalWording(String originalWording) {
        this.originalWording = originalWording;
        return this;
    }
    
    /**
     * realisation date of the transaction (default: value of date)
     */
    @SpeakeasyMetadata("multipartForm:name=rdate")
    public LocalDate rdate;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withRdate(LocalDate rdate) {
        this.rdate = rdate;
        return this;
    }
    
    /**
     * nature of the transaction (default: new)
     */
    @SpeakeasyMetadata("multipartForm:name=state")
    public String state;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * type of the transaction (default: unknown)
     */
    @SpeakeasyMetadata("multipartForm:name=type")
    public String type;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * vallue of the transaction
     */
    @SpeakeasyMetadata("multipartForm:name=value")
    public Long value;

    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody withValue(Long value) {
        this.value = value;
        return this;
    }
    
    public PostUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequestBody(@JsonProperty("date") LocalDate date, @JsonProperty("original_wording") String originalWording, @JsonProperty("value") Long value) {
        this.date = date;
        this.originalWording = originalWording;
        this.value = value;
  }
}
