/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A certificate that has been transferred but not yet accepted.
 */
export class OutgoingCertificate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "certificateArn" })
  certificateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "certificateId" })
  certificateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "transferDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  transferDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "transferMessage" })
  transferMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transferredTo" })
  transferredTo?: string;
}
