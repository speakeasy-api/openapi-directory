// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PremiumNewsByTeamFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PremiumNewsByTeamFormatEnum string

const (
	PremiumNewsByTeamFormatEnumXML  PremiumNewsByTeamFormatEnum = "xml"
	PremiumNewsByTeamFormatEnumJSON PremiumNewsByTeamFormatEnum = "json"
)

func (e *PremiumNewsByTeamFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = PremiumNewsByTeamFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PremiumNewsByTeamFormatEnum: %s", s)
	}
}

type PremiumNewsByTeamPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PremiumNewsByTeamFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Abbreviation of the team. Example: <code>WAS</code>.
	Team string `pathParam:"style=simple,explode=false,name=team"`
}

type PremiumNewsByTeamRequest struct {
	PathParams PremiumNewsByTeamPathParams
}

type PremiumNewsByTeamResponse struct {
	ContentType string
	News        []shared.News
	StatusCode  int
	RawResponse *http.Response
}
