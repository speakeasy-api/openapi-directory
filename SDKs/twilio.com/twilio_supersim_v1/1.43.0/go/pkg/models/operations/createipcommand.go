// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateIPCommandServerList = []string{
	"https://supersim.twilio.com",
}

type CreateIPCommandSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// CreateIPCommandCreateIPCommandRequestCallbackMethodEnum - The HTTP method we should use to call `callback_url`. Can be `GET` or `POST`, and the default is `POST`.
type CreateIPCommandCreateIPCommandRequestCallbackMethodEnum string

const (
	CreateIPCommandCreateIPCommandRequestCallbackMethodEnumHead   CreateIPCommandCreateIPCommandRequestCallbackMethodEnum = "HEAD"
	CreateIPCommandCreateIPCommandRequestCallbackMethodEnumGet    CreateIPCommandCreateIPCommandRequestCallbackMethodEnum = "GET"
	CreateIPCommandCreateIPCommandRequestCallbackMethodEnumPost   CreateIPCommandCreateIPCommandRequestCallbackMethodEnum = "POST"
	CreateIPCommandCreateIPCommandRequestCallbackMethodEnumPatch  CreateIPCommandCreateIPCommandRequestCallbackMethodEnum = "PATCH"
	CreateIPCommandCreateIPCommandRequestCallbackMethodEnumPut    CreateIPCommandCreateIPCommandRequestCallbackMethodEnum = "PUT"
	CreateIPCommandCreateIPCommandRequestCallbackMethodEnumDelete CreateIPCommandCreateIPCommandRequestCallbackMethodEnum = "DELETE"
)

func (e CreateIPCommandCreateIPCommandRequestCallbackMethodEnum) ToPointer() *CreateIPCommandCreateIPCommandRequestCallbackMethodEnum {
	return &e
}

func (e *CreateIPCommandCreateIPCommandRequestCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateIPCommandCreateIPCommandRequestCallbackMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIPCommandCreateIPCommandRequestCallbackMethodEnum: %v", v)
	}
}

type CreateIPCommandCreateIPCommandRequest struct {
	// The HTTP method we should use to call `callback_url`. Can be `GET` or `POST`, and the default is `POST`.
	CallbackMethod *CreateIPCommandCreateIPCommandRequestCallbackMethodEnum `form:"name=CallbackMethod"`
	// The URL we should call using the `callback_method` after we have sent the IP Command.
	CallbackURL *string `form:"name=CallbackUrl"`
	// The device port to which the IP Command will be sent.
	DevicePort int64 `form:"name=DevicePort"`
	// The data that will be sent to the device. The payload cannot exceed 1300 bytes. If the PayloadType is set to text, the payload is encoded in UTF-8. If PayloadType is set to binary, the payload is encoded in Base64.
	Payload     string                               `form:"name=Payload"`
	PayloadType *shared.IPCommandEnumPayloadTypeEnum `form:"name=PayloadType"`
	// The `sid` or `unique_name` of the [Super SIM](https://www.twilio.com/docs/iot/supersim/api/sim-resource) to send the IP Command to.
	Sim string `form:"name=Sim"`
}

type CreateIPCommandResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	SupersimV1IPCommand *shared.SupersimV1IPCommand
}
