"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resourcedatasyncdestinationdatasharing as shared_resourcedatasyncdestinationdatasharing
from ..shared import resourcedatasyncs3format_enum as shared_resourcedatasyncs3format_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceDataSyncS3Destination:
    r"""Information about the target S3 bucket for the resource data sync."""
    
    bucket_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BucketName') }})  
    region: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Region') }})  
    sync_format: shared_resourcedatasyncs3format_enum.ResourceDataSyncS3FormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SyncFormat') }})  
    awskms_key_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AWSKMSKeyARN'), 'exclude': lambda f: f is None }})  
    destination_data_sharing: Optional[shared_resourcedatasyncdestinationdatasharing.ResourceDataSyncDestinationDataSharing] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DestinationDataSharing'), 'exclude': lambda f: f is None }})  
    prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Prefix'), 'exclude': lambda f: f is None }})  
    