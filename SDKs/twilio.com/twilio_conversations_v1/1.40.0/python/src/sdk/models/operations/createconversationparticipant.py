"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import conversation_participant_enum_webhook_enabled_type_enum as shared_conversation_participant_enum_webhook_enabled_type_enum
from ..shared import conversations_v1_conversation_conversation_participant as shared_conversations_v1_conversation_conversation_participant
from datetime import datetime
from typing import Optional

CREATE_CONVERSATION_PARTICIPANT_SERVERS = [
	"https://conversations.twilio.com",
]


@dataclasses.dataclass
class CreateConversationParticipantSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateConversationParticipantCreateConversationParticipantRequest:
    
    attributes: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Attributes' }})
    r"""An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \\"{}\\" will be returned."""  
    date_created: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DateCreated' }})
    r"""The date that this resource was created."""  
    date_updated: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DateUpdated' }})
    r"""The date that this resource was last updated."""  
    identity: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Identity' }})
    r"""A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters."""  
    messaging_binding_address: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'MessagingBinding.Address' }})
    r"""The address of the participant's device, e.g. a phone or WhatsApp number. Together with the Proxy address, this determines a participant uniquely. This field (with proxy_address) is only null when the participant is interacting from an SDK endpoint (see the 'identity' field)."""  
    messaging_binding_projected_address: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'MessagingBinding.ProjectedAddress' }})
    r"""The address of the Twilio phone number that is used in Group MMS. Communication mask for the Conversation participant with Identity."""  
    messaging_binding_proxy_address: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'MessagingBinding.ProxyAddress' }})
    r"""The address of the Twilio phone number (or WhatsApp number) that the participant is in contact with. This field, together with participant address, is only null when the participant is interacting from an SDK endpoint (see the 'identity' field)."""  
    role_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'RoleSid' }})
    r"""The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant."""  
    

@dataclasses.dataclass
class CreateConversationParticipantRequest:
    
    conversation_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ConversationSid', 'style': 'simple', 'explode': False }})
    r"""The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant."""  
    request_body: Optional[CreateConversationParticipantCreateConversationParticipantRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    x_twilio_webhook_enabled: Optional[shared_conversation_participant_enum_webhook_enabled_type_enum.ConversationParticipantEnumWebhookEnabledTypeEnum] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Twilio-Webhook-Enabled', 'style': 'simple', 'explode': False }})
    r"""The X-Twilio-Webhook-Enabled HTTP request header"""  
    

@dataclasses.dataclass
class CreateConversationParticipantResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    conversations_v1_conversation_conversation_participant: Optional[shared_conversations_v1_conversation_conversation_participant.ConversationsV1ConversationConversationParticipant] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    