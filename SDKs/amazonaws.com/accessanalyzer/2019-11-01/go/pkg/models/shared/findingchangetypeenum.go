// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FindingChangeTypeEnum string

const (
	FindingChangeTypeEnumChanged   FindingChangeTypeEnum = "CHANGED"
	FindingChangeTypeEnumNew       FindingChangeTypeEnum = "NEW"
	FindingChangeTypeEnumUnchanged FindingChangeTypeEnum = "UNCHANGED"
)

func (e FindingChangeTypeEnum) ToPointer() *FindingChangeTypeEnum {
	return &e
}

func (e *FindingChangeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CHANGED":
		fallthrough
	case "NEW":
		fallthrough
	case "UNCHANGED":
		*e = FindingChangeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindingChangeTypeEnum: %v", v)
	}
}
