<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class QueryBannedUsersRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('created_at_after')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAtAfter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at_after_or_equal')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAtAfterOrEqual = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at_before')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAtBefore = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at_before_or_equal')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAtBeforeOrEqual = null;
    
    /**
     * $filterConditions
     * 
     * @var array<string, mixed> $filterConditions
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter_conditions')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $filterConditions;
    
	#[\JMS\Serializer\Annotation\SerializedName('limit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $limit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $offset = null;
    
    /**
     * $sort
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SortParam> $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SortParam>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sort = null;
    
    /**
     * Represents chat user
     * 
     * @var ?array<string, mixed> $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $user = null;
    
    /**
     * **Server-side only**. User ID which server acts upon
     * 
     * @var ?string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
	public function __construct()
	{
		$this->createdAtAfter = null;
		$this->createdAtAfterOrEqual = null;
		$this->createdAtBefore = null;
		$this->createdAtBeforeOrEqual = null;
		$this->filterConditions = [];
		$this->limit = null;
		$this->offset = null;
		$this->sort = null;
		$this->user = null;
		$this->userId = null;
	}
}
