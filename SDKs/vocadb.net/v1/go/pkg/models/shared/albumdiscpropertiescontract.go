// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AlbumDiscPropertiesContractMediaTypeEnum string

const (
	AlbumDiscPropertiesContractMediaTypeEnumAudio AlbumDiscPropertiesContractMediaTypeEnum = "Audio"
	AlbumDiscPropertiesContractMediaTypeEnumVideo AlbumDiscPropertiesContractMediaTypeEnum = "Video"
)

func (e *AlbumDiscPropertiesContractMediaTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Audio":
		fallthrough
	case "Video":
		*e = AlbumDiscPropertiesContractMediaTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumDiscPropertiesContractMediaTypeEnum: %s", s)
	}
}

type AlbumDiscPropertiesContract struct {
	DiscNumber *int                                      `json:"discNumber,omitempty"`
	ID         *int                                      `json:"id,omitempty"`
	MediaType  *AlbumDiscPropertiesContractMediaTypeEnum `json:"mediaType,omitempty"`
	Name       *string                                   `json:"name,omitempty"`
}
