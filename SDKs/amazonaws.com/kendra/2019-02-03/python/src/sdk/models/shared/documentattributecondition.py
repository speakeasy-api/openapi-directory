"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import conditionoperator_enum as shared_conditionoperator_enum
from ..shared import documentattributevalue as shared_documentattributevalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentAttributeCondition:
    r"""<p>The condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. You use this with <a href=\\"https://docs.aws.amazon.com/kendra/latest/dg/API_DocumentAttributeTarget.html\\">DocumentAttributeTarget to apply the condition</a>.</p> <p>For example, you can create the 'Department' target field and have it prefill department names associated with the documents based on information in the 'Source_URI' field. Set the condition that if the 'Source_URI' field contains 'financial' in its URI value, then prefill the target field 'Department' with the target value 'Finance' for the document.</p> <p>Amazon Kendra cannot create a target field if it has not already been created as an index field. After you create your index field, you can create a document metadata field using <code>DocumentAttributeTarget</code>. Amazon Kendra then will map your newly created metadata field to your index field.</p>"""
    
    condition_document_attribute_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConditionDocumentAttributeKey') }})  
    operator: shared_conditionoperator_enum.ConditionOperatorEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Operator') }})  
    condition_on_value: Optional[shared_documentattributevalue.DocumentAttributeValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConditionOnValue'), 'exclude': lambda f: f is None }})  
    