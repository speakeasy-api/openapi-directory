// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ThirdPartyLinkStatusLinkStatusEnum string

const (
	ThirdPartyLinkStatusLinkStatusEnumUnknown ThirdPartyLinkStatusLinkStatusEnum = "unknown"
	ThirdPartyLinkStatusLinkStatusEnumFailed  ThirdPartyLinkStatusLinkStatusEnum = "failed"
	ThirdPartyLinkStatusLinkStatusEnumPending ThirdPartyLinkStatusLinkStatusEnum = "pending"
	ThirdPartyLinkStatusLinkStatusEnumLinked  ThirdPartyLinkStatusLinkStatusEnum = "linked"
)

func (e ThirdPartyLinkStatusLinkStatusEnum) ToPointer() *ThirdPartyLinkStatusLinkStatusEnum {
	return &e
}

func (e *ThirdPartyLinkStatusLinkStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unknown":
		fallthrough
	case "failed":
		fallthrough
	case "pending":
		fallthrough
	case "linked":
		*e = ThirdPartyLinkStatusLinkStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThirdPartyLinkStatusLinkStatusEnum: %v", v)
	}
}

// ThirdPartyLinkStatus - The third-party link status object contains information about the status of the link.
type ThirdPartyLinkStatus struct {
	LinkStatus *ThirdPartyLinkStatusLinkStatusEnum `json:"linkStatus,omitempty"`
}
