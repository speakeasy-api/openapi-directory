<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PoolSpecification - Specification for creating a new pool.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PoolSpecification
{
    /**
     * Gets or sets the list of application packages to be installed on each compute node in the pool.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ApplicationPackageReference> $applicationPackageReferences
     */
	#[\JMS\Serializer\Annotation\SerializedName('applicationPackageReferences')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ApplicationPackageReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $applicationPackageReferences = null;
    
    /**
     * Gets or sets a time interval for the desired AutoScale evaluation period in the pool.
     * 
     * @var ?string $autoScaleEvaluationInterval
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoScaleEvaluationInterval')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $autoScaleEvaluationInterval = null;
    
    /**
     * Gets or sets the formula for the desired number of compute nodes in the pool.
     * 
     * @var ?string $autoScaleFormula
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoScaleFormula')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $autoScaleFormula = null;
    
    /**
     * Gets or sets a list of certificates to be installed on each compute node in the pool.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CertificateReference> $certificateReferences
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateReferences')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CertificateReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $certificateReferences = null;
    
    /**
     * Gets or sets the display name for the pool.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Gets or sets whether the pool size should automatically adjust over time.
     * 
     * @var ?bool $enableAutoScale
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableAutoScale')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableAutoScale = null;
    
    /**
     * Gets or sets whether the pool permits direct communication between nodes.
     * 
     * @var ?bool $enableInterNodeCommunication
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableInterNodeCommunication')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableInterNodeCommunication = null;
    
    /**
     * Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
     * 
     * @var ?int $maxTasksPerNode
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxTasksPerNode')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxTasksPerNode = null;
    
    /**
     * Gets or sets a list of name-value pairs associated with the pool as metadata.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MetadataItem> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MetadataItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
     * 
     * @var ?string $osFamily
     */
	#[\JMS\Serializer\Annotation\SerializedName('osFamily')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $osFamily = null;
    
    /**
     * Gets or sets the timeout for allocation of compute nodes to the pool.
     * 
     * @var ?string $resizeTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('resizeTimeout')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resizeTimeout = null;
    
    /**
     * A task defined on a pool and run by compute nodes when they join the pool.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StartTask $startTask
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTask')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StartTask')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StartTask $startTask = null;
    
    /**
     * Gets or sets the desired number of compute nodes in the pool.
     * 
     * @var ?int $targetDedicated
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetDedicated')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $targetDedicated = null;
    
    /**
     * Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool.
     * 
     * @var ?string $targetOSVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetOSVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetOSVersion = null;
    
    /**
     * Specifies how tasks should be distributed across compute nodes.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TaskSchedulingPolicy $taskSchedulingPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskSchedulingPolicy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TaskSchedulingPolicy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TaskSchedulingPolicy $taskSchedulingPolicy = null;
    
    /**
     * Gets or sets the size of the virtual machines in the pool. All VMs in a pool are the same size.
     * 
     * @var ?string $vmSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmSize')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmSize = null;
    
	public function __construct()
	{
		$this->applicationPackageReferences = null;
		$this->autoScaleEvaluationInterval = null;
		$this->autoScaleFormula = null;
		$this->certificateReferences = null;
		$this->displayName = null;
		$this->enableAutoScale = null;
		$this->enableInterNodeCommunication = null;
		$this->maxTasksPerNode = null;
		$this->metadata = null;
		$this->osFamily = null;
		$this->resizeTimeout = null;
		$this->startTask = null;
		$this->targetDedicated = null;
		$this->targetOSVersion = null;
		$this->taskSchedulingPolicy = null;
		$this->vmSize = null;
	}
}
