/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HookOutput - Represents the output of lists hooks request.
 */
public class HookOutput {
    /**
     * List of hooks in current page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hooks")
    public Hook[] hooks;
    public HookOutput withHooks(Hook[] hooks) {
        this.hooks = hooks;
        return this;
    }
    
    /**
     * Next page URL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    public String next;
    public HookOutput withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * Current page URL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    public String self;
    public HookOutput withSelf(String self) {
        this.self = self;
        return this;
    }
    
    /**
     * HMAC key needed to decode the JWTs you will receive. All events are sent in JWT format, this key is needed in order to ensure that only authorized users can decode the information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signing_key")
    public String signingKey;
    public HookOutput withSigningKey(String signingKey) {
        this.signingKey = signingKey;
        return this;
    }
    
}
