"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import game as shared_game
from ..shared import play as shared_play
from ..shared import quarter as shared_quarter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlayByPlay:
    
    game: Optional[shared_game.Game] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Game'), 'exclude': lambda f: f is None }})  
    plays: Optional[list[shared_play.Play]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Plays'), 'exclude': lambda f: f is None }})  
    quarters: Optional[list[shared_quarter.Quarter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Quarters'), 'exclude': lambda f: f is None }})  
    