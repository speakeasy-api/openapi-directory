/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyGetInvoiceAdjustment - Container for custom fields of an Invoice Adjustment object.
 * 
 */
public class ProxyGetInvoiceAdjustment {
    /**
     *  The ID of the account that owns the invoice.
     * **Character limit**: 32 **Values**: inherited from Account.ID for the invoice owner 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountId")
    public String accountId;
    public ProxyGetInvoiceAdjustment withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The accounting code for the invoice adjustment. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountingCode")
    public String accountingCode;
    public ProxyGetInvoiceAdjustment withAccountingCode(String accountingCode) {
        this.accountingCode = accountingCode;
        return this;
    }
    
    /**
     *  The date when the invoice adjustment is applied. This date must be the same as the invoice's date or later.
     * **Character limit**: 29 **Values**: Leave null to automatically generate the current date 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("AdjustmentDate")
    public LocalDate adjustmentDate;
    public ProxyGetInvoiceAdjustment withAdjustmentDate(LocalDate adjustmentDate) {
        this.adjustmentDate = adjustmentDate;
        return this;
    }
    
    /**
     *  A unique string to identify an individual invoice adjustment.
     * **Character limit**: 255 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdjustmentNumber")
    public String adjustmentNumber;
    public ProxyGetInvoiceAdjustment withAdjustmentNumber(String adjustmentNumber) {
        this.adjustmentNumber = adjustmentNumber;
        return this;
    }
    
    /**
     *  The amount of the invoice adjustment.
     * **Character limit**: 16 **Values**: a valid currency amount 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Amount")
    public Double amount;
    public ProxyGetInvoiceAdjustment withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     *  The ID of the Zuora user who canceled the invoice adjustment. Zuora generates this read-only field only if the adjustment is canceled.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CancelledById")
    public String cancelledById;
    public ProxyGetInvoiceAdjustment withCancelledById(String cancelledById) {
        this.cancelledById = cancelledById;
        return this;
    }
    
    /**
     *  The date when the invoice adjustment is canceled. Zuora generates this read-only field if this adjustment is canceled.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CancelledOn")
    public OffsetDateTime cancelledOn;
    public ProxyGetInvoiceAdjustment withCancelledOn(OffsetDateTime cancelledOn) {
        this.cancelledOn = cancelledOn;
        return this;
    }
    
    /**
     *  Use this field to record comments about the invoice adjustment.
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Comments")
    public String comments;
    public ProxyGetInvoiceAdjustment withComments(String comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     *  The user ID of the person who created the invoice adjustment.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public ProxyGetInvoiceAdjustment withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     *  The date the invoice adjustment was created.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public ProxyGetInvoiceAdjustment withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     *  The name of the account that owns the associated invoice.
     * 
     * **Character limit**: 50
     * 
     * **Values**: inherited from `Account.Name`
     * 
     * **Note**: This value changes if `Account.Name` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceAdjustment` do not change when `Account.Name` is updated. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerName")
    public String customerName;
    public ProxyGetInvoiceAdjustment withCustomerName(String customerName) {
        this.customerName = customerName;
        return this;
    }
    
    /**
     *  The unique account number of the customer's account.
     * 
     * **Character limit**: 70
     * 
     * **Values**: inherited from `Account.AccountNumber`
     * 
     * **Note**: This value changes if `Account.AccountNumber` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceAdjustment` do not change when `Account.AccountNumber` is updated. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerNumber")
    public String customerNumber;
    public ProxyGetInvoiceAdjustment withCustomerNumber(String customerNumber) {
        this.customerNumber = customerNumber;
        return this;
    }
    
    /**
     * Object identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ProxyGetInvoiceAdjustment withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     *  The amount that changes the balance of the associated invoice.
     * **Character limit**: 16 **Values**: automatically calculated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImpactAmount")
    public Double impactAmount;
    public ProxyGetInvoiceAdjustment withImpactAmount(Double impactAmount) {
        this.impactAmount = impactAmount;
        return this;
    }
    
    /**
     *  The ID of the invoice associated with the adjustment. This field is required if you don't specify a value for the `InvoiceNumber` field.
     * **Character limit**: 32 **Values**: a valid invoice ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceId")
    public String invoiceId;
    public ProxyGetInvoiceAdjustment withInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
        return this;
    }
    
    /**
     *  The unique identification number for the associated invoice. This field is required if you don't specify a value for the `InvoiceId` field.
     * **Character limit**: 32 **Values**: a valid invoice number 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceNumber")
    public String invoiceNumber;
    public ProxyGetInvoiceAdjustment withInvoiceNumber(String invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
        return this;
    }
    
    /**
     *  A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.
     * **Character limit**: 32 **V****alues**: a valid reason code 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReasonCode")
    public String reasonCode;
    public ProxyGetInvoiceAdjustment withReasonCode(String reasonCode) {
        this.reasonCode = reasonCode;
        return this;
    }
    
    /**
     *  A code to reference an object external to Zuora. For example, you can use this field to reference a case number in an external system.
     * **Character limit**: 60 **Values**: a string of 60 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReferenceId")
    public String referenceId;
    public ProxyGetInvoiceAdjustment withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    /**
     *  The status of the invoice adjustment. This field is required in the Query call, but is automatically generated in other calls.
     * **Character limit**: 9 **Values**: `Canceled`, `Processed` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public ProxyGetInvoiceAdjustment withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Indicates the status of the adjustment's transfer to an external accounting system, such as NetSuite.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransferredToAccounting")
    public ProxyGetInvoiceAdjustmentTransferredToAccountingEnum transferredToAccounting;
    public ProxyGetInvoiceAdjustment withTransferredToAccounting(ProxyGetInvoiceAdjustmentTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
    /**
     *  Indicates whether the adjustment credits or debits the invoice amount.
     * **Character limit**: 6 **Values**: `Credit`, `Charge` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public String type;
    public ProxyGetInvoiceAdjustment withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     *  The ID of the user who last updated the invoice.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public ProxyGetInvoiceAdjustment withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     *  The date when the invoice was last updated.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public ProxyGetInvoiceAdjustment withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
