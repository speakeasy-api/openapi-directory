"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsACLRulePortRange:
    r"""The range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsACLRule:
    r"""The network ACL rule."""
    
    cidr: Optional[str] = dataclasses.field(default=None)  
    egress: Optional[bool] = dataclasses.field(default=None)  
    port_range: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsACLRulePortRange] = dataclasses.field(default=None)  
    protocol: Optional[str] = dataclasses.field(default=None)  
    rule_action: Optional[str] = dataclasses.field(default=None)  
    rule_number: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsComponent:
    r"""The path component."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsLoadBalancers:
    r"""Describes a path component."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions:
    r"""Describes additional settings for a stateful rule."""
    
    keyword: Optional[str] = dataclasses.field(default=None)  
    settings: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairs:
    r"""Describes the rule options for a stateful rule group."""
    
    rule_group_arn: Optional[str] = dataclasses.field(default=None)  
    rule_options: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupTypePairs:
    r"""Describes the type of a stateful rule group."""
    
    rule_group_arn: Optional[str] = dataclasses.field(default=None)  
    rule_group_type: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleOptions:
    r"""Describes additional settings for a stateful rule."""
    
    keyword: Optional[str] = dataclasses.field(default=None)  
    settings: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsVpcEndpointService:
    r"""The VPC endpoint service."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetails:
    r"""Describes an additional detail for a path analysis. For more information, see <a href=\\"https://docs.aws.amazon.com/vpc/latest/reachability/additional-detail-codes.html\\">Reachability Analyzer additional detail codes</a>."""
    
    additional_detail_type: Optional[str] = dataclasses.field(default=None)  
    component: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsComponent] = dataclasses.field(default=None)  
    load_balancers: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsLoadBalancers]] = dataclasses.field(default=None)  
    rule_group_rule_options_pairs: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupRuleOptionsPairs]] = dataclasses.field(default=None)  
    rule_group_type_pairs: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleGroupTypePairs]] = dataclasses.field(default=None)  
    rule_options: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsRuleOptions]] = dataclasses.field(default=None)  
    service_name: Optional[str] = dataclasses.field(default=None)  
    vpc_endpoint_service: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetailsVpcEndpointService] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAttachedTo:
    r"""The resource to which the path component is attached."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsComponent:
    r"""The component."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsDestinationVpc:
    r"""The destination VPC."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsElasticLoadBalancerListener:
    r"""The load balancer listener."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsACL:
    r"""The network ACL."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsACLRulePortRange:
    r"""The range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsACLRule:
    r"""The network ACL rule."""
    
    cidr: Optional[str] = dataclasses.field(default=None)  
    egress: Optional[bool] = dataclasses.field(default=None)  
    port_range: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsACLRulePortRange] = dataclasses.field(default=None)  
    protocol: Optional[str] = dataclasses.field(default=None)  
    rule_action: Optional[str] = dataclasses.field(default=None)  
    rule_number: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAttachedTo:
    r"""The resource to which the component is attached."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsClassicLoadBalancerListener:
    r"""The listener for a Classic Load Balancer."""
    
    instance_port: Optional[int] = dataclasses.field(default=None)  
    load_balancer_port: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsComponent:
    r"""The component."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsCustomerGateway:
    r"""The customer gateway."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsDestination:
    r"""The destination."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsDestinationVpc:
    r"""The destination VPC."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsElasticLoadBalancerListener:
    r"""The load balancer listener."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleDestinationPorts:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleSourcePorts:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRule:
    r"""The Network Firewall stateful rule."""
    
    destination_ports: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleDestinationPorts]] = dataclasses.field(default=None)  
    destinations: Optional[list[str]] = dataclasses.field(default=None)  
    direction: Optional[str] = dataclasses.field(default=None)  
    protocol: Optional[str] = dataclasses.field(default=None)  
    rule_action: Optional[str] = dataclasses.field(default=None)  
    rule_group_arn: Optional[str] = dataclasses.field(default=None)  
    source_ports: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRuleSourcePorts]] = dataclasses.field(default=None)  
    sources: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleDestinationPorts:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleSourcePorts:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRule:
    r"""The Network Firewall stateless rule."""
    
    destination_ports: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleDestinationPorts]] = dataclasses.field(default=None)  
    destinations: Optional[list[str]] = dataclasses.field(default=None)  
    priority: Optional[int] = dataclasses.field(default=None)  
    protocols: Optional[list[int]] = dataclasses.field(default=None)  
    rule_action: Optional[str] = dataclasses.field(default=None)  
    rule_group_arn: Optional[str] = dataclasses.field(default=None)  
    source_ports: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRuleSourcePorts]] = dataclasses.field(default=None)  
    sources: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsIngressRouteTable:
    r"""The route table."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsInternetGateway:
    r"""The internet gateway."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetInstance:
    r"""Information about the instance."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTarget:
    r"""The target."""
    
    address: Optional[str] = dataclasses.field(default=None)  
    availability_zone: Optional[str] = dataclasses.field(default=None)  
    instance: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetInstance] = dataclasses.field(default=None)  
    port: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroup:
    r"""The target group."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroups:
    r"""Describes a path component."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsNatGateway:
    r"""The NAT gateway."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsNetworkInterface:
    r"""The network interface."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPortRanges:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPrefixList:
    r"""The prefix list."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsRouteTable:
    r"""The route table."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsRouteTableRoute:
    r"""The route table route."""
    
    carrier_gateway_id: Optional[str] = dataclasses.field(default=None)  
    core_network_arn: Optional[str] = dataclasses.field(default=None)  
    destination_cidr: Optional[str] = dataclasses.field(default=None)  
    destination_prefix_list_id: Optional[str] = dataclasses.field(default=None)  
    egress_only_internet_gateway_id: Optional[str] = dataclasses.field(default=None)  
    gateway_id: Optional[str] = dataclasses.field(default=None)  
    instance_id: Optional[str] = dataclasses.field(default=None)  
    local_gateway_id: Optional[str] = dataclasses.field(default=None)  
    nat_gateway_id: Optional[str] = dataclasses.field(default=None)  
    network_interface_id: Optional[str] = dataclasses.field(default=None)  
    origin: Optional[str] = dataclasses.field(default=None)  
    state: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_id: Optional[str] = dataclasses.field(default=None)  
    vpc_peering_connection_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroup:
    r"""The security group."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroupRulePortRange:
    r"""The port range."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroupRule:
    r"""The security group rule."""
    
    cidr: Optional[str] = dataclasses.field(default=None)  
    direction: Optional[str] = dataclasses.field(default=None)  
    port_range: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroupRulePortRange] = dataclasses.field(default=None)  
    prefix_list_id: Optional[str] = dataclasses.field(default=None)  
    protocol: Optional[str] = dataclasses.field(default=None)  
    security_group_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroups:
    r"""Describes a path component."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSourceVpc:
    r"""The source VPC."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSubnet:
    r"""The subnet."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSubnetRouteTable:
    r"""The route table for the subnet."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGateway:
    r"""The transit gateway."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayAttachment:
    r"""The transit gateway attachment."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayRouteTable:
    r"""The transit gateway route table."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayRouteTableRoute:
    r"""The transit gateway route table route."""
    
    attachment_id: Optional[str] = dataclasses.field(default=None)  
    destination_cidr: Optional[str] = dataclasses.field(default=None)  
    prefix_list_id: Optional[str] = dataclasses.field(default=None)  
    resource_id: Optional[str] = dataclasses.field(default=None)  
    resource_type: Optional[str] = dataclasses.field(default=None)  
    route_origin: Optional[str] = dataclasses.field(default=None)  
    state: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpc:
    r"""The component VPC."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpcEndpoint:
    r"""The VPC endpoint."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpcPeeringConnection:
    r"""The VPC peering connection."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpnConnection:
    r"""The VPN connection."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpnGateway:
    r"""The VPN gateway."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanations:
    r"""Describes an explanation code for an unreachable path. For more information, see <a href=\\"https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html\\">Reachability Analyzer explanation codes</a>."""
    
    acl: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsACL] = dataclasses.field(default=None)  
    acl_rule: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsACLRule] = dataclasses.field(default=None)  
    address: Optional[str] = dataclasses.field(default=None)  
    addresses: Optional[list[str]] = dataclasses.field(default=None)  
    attached_to: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsAttachedTo] = dataclasses.field(default=None)  
    availability_zones: Optional[list[str]] = dataclasses.field(default=None)  
    cidrs: Optional[list[str]] = dataclasses.field(default=None)  
    classic_load_balancer_listener: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsClassicLoadBalancerListener] = dataclasses.field(default=None)  
    component: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsComponent] = dataclasses.field(default=None)  
    component_account: Optional[str] = dataclasses.field(default=None)  
    component_region: Optional[str] = dataclasses.field(default=None)  
    customer_gateway: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsCustomerGateway] = dataclasses.field(default=None)  
    destination: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsDestination] = dataclasses.field(default=None)  
    destination_vpc: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsDestinationVpc] = dataclasses.field(default=None)  
    direction: Optional[str] = dataclasses.field(default=None)  
    elastic_load_balancer_listener: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsElasticLoadBalancerListener] = dataclasses.field(default=None)  
    explanation_code: Optional[str] = dataclasses.field(default=None)  
    firewall_stateful_rule: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatefulRule] = dataclasses.field(default=None)  
    firewall_stateless_rule: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsFirewallStatelessRule] = dataclasses.field(default=None)  
    ingress_route_table: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsIngressRouteTable] = dataclasses.field(default=None)  
    internet_gateway: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsInternetGateway] = dataclasses.field(default=None)  
    load_balancer_arn: Optional[str] = dataclasses.field(default=None)  
    load_balancer_listener_port: Optional[int] = dataclasses.field(default=None)  
    load_balancer_target: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTarget] = dataclasses.field(default=None)  
    load_balancer_target_group: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroup] = dataclasses.field(default=None)  
    load_balancer_target_groups: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsLoadBalancerTargetGroups]] = dataclasses.field(default=None)  
    load_balancer_target_port: Optional[int] = dataclasses.field(default=None)  
    missing_component: Optional[str] = dataclasses.field(default=None)  
    nat_gateway: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsNatGateway] = dataclasses.field(default=None)  
    network_interface: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsNetworkInterface] = dataclasses.field(default=None)  
    packet_field: Optional[str] = dataclasses.field(default=None)  
    port: Optional[int] = dataclasses.field(default=None)  
    port_ranges: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPortRanges]] = dataclasses.field(default=None)  
    prefix_list: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsPrefixList] = dataclasses.field(default=None)  
    protocols: Optional[list[str]] = dataclasses.field(default=None)  
    route_table: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsRouteTable] = dataclasses.field(default=None)  
    route_table_route: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsRouteTableRoute] = dataclasses.field(default=None)  
    security_group: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroup] = dataclasses.field(default=None)  
    security_group_rule: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroupRule] = dataclasses.field(default=None)  
    security_groups: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSecurityGroups]] = dataclasses.field(default=None)  
    source_vpc: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSourceVpc] = dataclasses.field(default=None)  
    state: Optional[str] = dataclasses.field(default=None)  
    subnet: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSubnet] = dataclasses.field(default=None)  
    subnet_route_table: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsSubnetRouteTable] = dataclasses.field(default=None)  
    transit_gateway: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGateway] = dataclasses.field(default=None)  
    transit_gateway_attachment: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayAttachment] = dataclasses.field(default=None)  
    transit_gateway_route_table: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayRouteTable] = dataclasses.field(default=None)  
    transit_gateway_route_table_route: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsTransitGatewayRouteTableRoute] = dataclasses.field(default=None)  
    vpc: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpc] = dataclasses.field(default=None)  
    vpc_endpoint: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpcEndpoint] = dataclasses.field(default=None)  
    vpc_peering_connection: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpcPeeringConnection] = dataclasses.field(default=None)  
    vpn_connection: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpnConnection] = dataclasses.field(default=None)  
    vpn_gateway: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanationsVpnGateway] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleDestinationPorts:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleSourcePorts:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRule:
    r"""The Network Firewall stateful rule."""
    
    destination_ports: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleDestinationPorts]] = dataclasses.field(default=None)  
    destinations: Optional[list[str]] = dataclasses.field(default=None)  
    direction: Optional[str] = dataclasses.field(default=None)  
    protocol: Optional[str] = dataclasses.field(default=None)  
    rule_action: Optional[str] = dataclasses.field(default=None)  
    rule_group_arn: Optional[str] = dataclasses.field(default=None)  
    source_ports: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRuleSourcePorts]] = dataclasses.field(default=None)  
    sources: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleDestinationPorts:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleSourcePorts:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRule:
    r"""The Network Firewall stateless rule."""
    
    destination_ports: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleDestinationPorts]] = dataclasses.field(default=None)  
    destinations: Optional[list[str]] = dataclasses.field(default=None)  
    priority: Optional[int] = dataclasses.field(default=None)  
    protocols: Optional[list[int]] = dataclasses.field(default=None)  
    rule_action: Optional[str] = dataclasses.field(default=None)  
    rule_group_arn: Optional[str] = dataclasses.field(default=None)  
    source_ports: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRuleSourcePorts]] = dataclasses.field(default=None)  
    sources: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderDestinationPortRanges:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderSourcePortRanges:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeader:
    r"""The inbound header."""
    
    destination_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    destination_port_ranges: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderDestinationPortRanges]] = dataclasses.field(default=None)  
    protocol: Optional[str] = dataclasses.field(default=None)  
    source_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    source_port_ranges: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeaderSourcePortRanges]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderDestinationPortRanges:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderSourcePortRanges:
    r"""Describes a range of ports."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeader:
    r"""The outbound header."""
    
    destination_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    destination_port_ranges: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderDestinationPortRanges]] = dataclasses.field(default=None)  
    protocol: Optional[str] = dataclasses.field(default=None)  
    source_addresses: Optional[list[str]] = dataclasses.field(default=None)  
    source_port_ranges: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeaderSourcePortRanges]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsRouteTableRoute:
    r"""The route table route."""
    
    carrier_gateway_id: Optional[str] = dataclasses.field(default=None)  
    core_network_arn: Optional[str] = dataclasses.field(default=None)  
    destination_cidr: Optional[str] = dataclasses.field(default=None)  
    destination_prefix_list_id: Optional[str] = dataclasses.field(default=None)  
    egress_only_internet_gateway_id: Optional[str] = dataclasses.field(default=None)  
    gateway_id: Optional[str] = dataclasses.field(default=None)  
    instance_id: Optional[str] = dataclasses.field(default=None)  
    local_gateway_id: Optional[str] = dataclasses.field(default=None)  
    nat_gateway_id: Optional[str] = dataclasses.field(default=None)  
    network_interface_id: Optional[str] = dataclasses.field(default=None)  
    origin: Optional[str] = dataclasses.field(default=None)  
    state: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_id: Optional[str] = dataclasses.field(default=None)  
    vpc_peering_connection_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSecurityGroupRulePortRange:
    r"""The port range."""
    
    from_: Optional[int] = dataclasses.field(default=None)  
    to: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSecurityGroupRule:
    r"""The security group rule."""
    
    cidr: Optional[str] = dataclasses.field(default=None)  
    direction: Optional[str] = dataclasses.field(default=None)  
    port_range: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSecurityGroupRulePortRange] = dataclasses.field(default=None)  
    prefix_list_id: Optional[str] = dataclasses.field(default=None)  
    protocol: Optional[str] = dataclasses.field(default=None)  
    security_group_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSourceVpc:
    r"""The source VPC."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSubnet:
    r"""The subnet."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsTransitGateway:
    r"""The transit gateway."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsTransitGatewayRouteTableRoute:
    r"""The route in a transit gateway route table."""
    
    attachment_id: Optional[str] = dataclasses.field(default=None)  
    destination_cidr: Optional[str] = dataclasses.field(default=None)  
    prefix_list_id: Optional[str] = dataclasses.field(default=None)  
    resource_id: Optional[str] = dataclasses.field(default=None)  
    resource_type: Optional[str] = dataclasses.field(default=None)  
    route_origin: Optional[str] = dataclasses.field(default=None)  
    state: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsVpc:
    r"""The component VPC."""
    
    arn: Optional[str] = dataclasses.field(default=None)  
    id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponents:
    r"""Describes a path component."""
    
    acl_rule: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsACLRule] = dataclasses.field(default=None)  
    additional_details: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAdditionalDetails]] = dataclasses.field(default=None)  
    attached_to: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsAttachedTo] = dataclasses.field(default=None)  
    component: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsComponent] = dataclasses.field(default=None)  
    destination_vpc: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsDestinationVpc] = dataclasses.field(default=None)  
    elastic_load_balancer_listener: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsElasticLoadBalancerListener] = dataclasses.field(default=None)  
    explanations: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsExplanations]] = dataclasses.field(default=None)  
    firewall_stateful_rule: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatefulRule] = dataclasses.field(default=None)  
    firewall_stateless_rule: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsFirewallStatelessRule] = dataclasses.field(default=None)  
    inbound_header: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsInboundHeader] = dataclasses.field(default=None)  
    outbound_header: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsOutboundHeader] = dataclasses.field(default=None)  
    route_table_route: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsRouteTableRoute] = dataclasses.field(default=None)  
    security_group_rule: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSecurityGroupRule] = dataclasses.field(default=None)  
    sequence_number: Optional[int] = dataclasses.field(default=None)  
    service_name: Optional[str] = dataclasses.field(default=None)  
    source_vpc: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSourceVpc] = dataclasses.field(default=None)  
    subnet: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsSubnet] = dataclasses.field(default=None)  
    transit_gateway: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsTransitGateway] = dataclasses.field(default=None)  
    transit_gateway_route_table_route: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsTransitGatewayRouteTableRoute] = dataclasses.field(default=None)  
    vpc: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponentsVpc] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindings:
    r"""Describes a finding for a Network Access Scope."""
    
    finding_components: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindingsFindingComponents]] = dataclasses.field(default=None)  
    finding_id: Optional[str] = dataclasses.field(default=None)  
    network_insights_access_scope_analysis_id: Optional[str] = dataclasses.field(default=None)  
    network_insights_access_scope_id: Optional[str] = dataclasses.field(default=None)  
    
class GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisStatusEnum(str, Enum):
    r"""The status of Network Access Scope Analysis."""
    RUNNING = 'running'
    SUCCEEDED = 'succeeded'
    FAILED = 'failed'


@dataclasses.dataclass
class GetNetworkInsightsAccessScopeAnalysisFindingsResult:
    r"""Success"""
    
    analysis_findings: Optional[list[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisFindings]] = dataclasses.field(default=None)  
    analysis_status: Optional[GetNetworkInsightsAccessScopeAnalysisFindingsResultAnalysisStatusEnum] = dataclasses.field(default=None)  
    network_insights_access_scope_analysis_id: Optional[str] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    