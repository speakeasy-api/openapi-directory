/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ChannelMetadataInteractions - A list of resource URIs related to the channel.
 */
public class ChannelMetadataInteractions {
    /**
     * An action indicating that the authenticated user is the owner of the channel and may therefore add other users as channel moderators. This data requires a bearer token with the `private` scope.
     */
    @JsonProperty("add_moderators")
    public ChannelMetadataInteractionsAddModerators addModerators;
    public ChannelMetadataInteractions withAddModerators(ChannelMetadataInteractionsAddModerators addModerators) {
        this.addModerators = addModerators;
        return this;
    }
    
    /**
     * When a channel appears in the context of adding or removing a video from it (`/videos/{video_id}/available_channels`), include information about adding or removing the video. This data requires a bearer token with the `private` scope.
     */
    @JsonProperty("add_to")
    public ChannelMetadataInteractionsAddTo addTo;
    public ChannelMetadataInteractions withAddTo(ChannelMetadataInteractionsAddTo addTo) {
        this.addTo = addTo;
        return this;
    }
    
    /**
     * An action indicating if the authenticated user has followed this channel. This data requires a bearer token with the `private` scope.
     */
    @JsonProperty("follow")
    public ChannelMetadataInteractionsFollow follow;
    public ChannelMetadataInteractions withFollow(ChannelMetadataInteractionsFollow follow) {
        this.follow = follow;
        return this;
    }
    
    /**
     * An action indicating that the authenticated user is a moderator of the channel and may therefore add or remove videos from the channel. This data requires a bearer token with the `private` scope.
     */
    @JsonProperty("moderate_videos")
    public ChannelMetadataInteractionsModerateVideos moderateVideos;
    public ChannelMetadataInteractions withModerateVideos(ChannelMetadataInteractionsModerateVideos moderateVideos) {
        this.moderateVideos = moderateVideos;
        return this;
    }
    
}
