/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PromotionReportDetail - This type defines the fields in a promotion-level report.
 */
public class PromotionReportDetail {
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averageItemDiscount")
    public Amount averageItemDiscount;
    public PromotionReportDetail withAverageItemDiscount(Amount averageItemDiscount) {
        this.averageItemDiscount = averageItemDiscount;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averageItemRevenue")
    public Amount averageItemRevenue;
    public PromotionReportDetail withAverageItemRevenue(Amount averageItemRevenue) {
        this.averageItemRevenue = averageItemRevenue;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averageOrderDiscount")
    public Amount averageOrderDiscount;
    public PromotionReportDetail withAverageOrderDiscount(Amount averageOrderDiscount) {
        this.averageOrderDiscount = averageOrderDiscount;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averageOrderRevenue")
    public Amount averageOrderRevenue;
    public PromotionReportDetail withAverageOrderRevenue(Amount averageOrderRevenue) {
        this.averageOrderRevenue = averageOrderRevenue;
        return this;
    }
    
    /**
     * The &lt;i&gt;average order size&lt;/i&gt; is the average number of items that each order contained in a promotion. This value is calculated as follows:  &lt;br&gt;&lt;br&gt;&lt;b&gt;itemsSoldQuantity&lt;/b&gt; / &lt;b&gt;numberOfOrdersSold&lt;/b&gt; = &lt;b&gt;averageOrderSize&lt;/b&gt; 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averageOrderSize")
    public String averageOrderSize;
    public PromotionReportDetail withAverageOrderSize(String averageOrderSize) {
        this.averageOrderSize = averageOrderSize;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseSale")
    public Amount baseSale;
    public PromotionReportDetail withBaseSale(Amount baseSale) {
        this.baseSale = baseSale;
        return this;
    }
    
    /**
     * This is the quantity of items purchased in a threshold promotion where the threshold &lt;i&gt;has been met&lt;/i&gt; and the discount was applied. &lt;br&gt;&lt;br&gt;For example, suppose you're running a "Buy 1, get 1 at 50%" promotion on $5 socks. One buyer purchases two pairs of socks, so they pay $7.50 for both pairs (rather than the full price of $10). Your number of items sold (&lt;b&gt;itemsSoldQuantity&lt;/b&gt;) would be 2 and you number of orders sold (&lt;b&gt;numberOfOrdersSold&lt;/b&gt;) would be 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemsSoldQuantity")
    public Integer itemsSoldQuantity;
    public PromotionReportDetail withItemsSoldQuantity(Integer itemsSoldQuantity) {
        this.itemsSoldQuantity = itemsSoldQuantity;
        return this;
    }
    
    /**
     * This is the number of orders sold in a threshold promotion where the threshold &lt;i&gt;has been met&lt;/i&gt; and the discount was applied. &lt;br&gt;&lt;br&gt;For example, suppose you're running a "Buy 1, get 1 at 50%" promotion on $5 socks. One buyer purchases two pairs of socks, so they pay $7.50 for both pairs (rather than the full price of $10). Your &lt;b&gt;numberOfOrdersSold&lt;/b&gt; would be 1 and your &lt;b&gt;itemsSoldQuantity&lt;/b&gt; would be 2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfOrdersSold")
    public Integer numberOfOrdersSold;
    public PromotionReportDetail withNumberOfOrdersSold(Integer numberOfOrdersSold) {
        this.numberOfOrdersSold = numberOfOrdersSold;
        return this;
    }
    
    /**
     * The &lt;i&gt;percentage sales lift&lt;/i&gt; is the total dollar amount gained due to promotions. This value is calculated as follows:  &lt;br&gt;&lt;br&gt; &lt;b&gt;promotionSale&lt;/b&gt; / &lt;b&gt;totalSale&lt;/b&gt; =  &lt;b&gt;percentageSalesLift&lt;/b&gt; 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentageSalesLift")
    public String percentageSalesLift;
    public PromotionReportDetail withPercentageSalesLift(String percentageSalesLift) {
        this.percentageSalesLift = percentageSalesLift;
        return this;
    }
    
    /**
     * The URI of the promotion report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotionHref")
    public String promotionHref;
    public PromotionReportDetail withPromotionHref(String promotionHref) {
        this.promotionHref = promotionHref;
        return this;
    }
    
    /**
     * A unique eBay-assigned ID for the promotion that's generated when the promotion is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotionId")
    public String promotionId;
    public PromotionReportDetail withPromotionId(String promotionId) {
        this.promotionId = promotionId;
        return this;
    }
    
    /**
     * The unique eBay-assigned ID of the promotion report that is generated when the report is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotionReportId")
    public String promotionReportId;
    public PromotionReportDetail withPromotionReportId(String promotionReportId) {
        this.promotionReportId = promotionReportId;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotionSale")
    public Amount promotionSale;
    public PromotionReportDetail withPromotionSale(Amount promotionSale) {
        this.promotionSale = promotionSale;
        return this;
    }
    
    /**
     * Indicates the type of the promotion, either &lt;code&gt;CODED_COUPON&lt;/code&gt;, &lt;code&gt;MARKDOWN_SALE&lt;/code&gt;, &lt;code&gt;ORDER_DISCOUNT&lt;/code&gt;, or &lt;code&gt;VOLUME_DISCOUNT&lt;/code&gt;. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/marketing/types/sme:PromotionTypeEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotionType")
    public String promotionType;
    public PromotionReportDetail withPromotionType(String promotionType) {
        this.promotionType = promotionType;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalDiscount")
    public Amount totalDiscount;
    public PromotionReportDetail withTotalDiscount(Amount totalDiscount) {
        this.totalDiscount = totalDiscount;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalSale")
    public Amount totalSale;
    public PromotionReportDetail withTotalSale(Amount totalSale) {
        this.totalSale = totalSale;
        return this;
    }
    
}
