"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import result as shared_result
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Report:
    
    file_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_id') }})
    r"""Id of the file on which the report was applied."""  
    process_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('process_id') }})
    r"""Process_id of the process which was applied. Processes are \\"color-classification\\"."""  
    report_number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('report_number') }})
    r"""Number of the created report."""  
    result_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result_id') }})
    r"""Result_id of the result which was created."""  
    created: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The Date when the report was created."""  
    result: Optional[shared_result.Result] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})  
    