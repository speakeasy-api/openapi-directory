// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SecretVersionStateEnum - Output only. The current state of the SecretVersion.
type SecretVersionStateEnum string

const (
	SecretVersionStateEnumStateUnspecified SecretVersionStateEnum = "STATE_UNSPECIFIED"
	SecretVersionStateEnumEnabled          SecretVersionStateEnum = "ENABLED"
	SecretVersionStateEnumDisabled         SecretVersionStateEnum = "DISABLED"
	SecretVersionStateEnumDestroyed        SecretVersionStateEnum = "DESTROYED"
)

func (e SecretVersionStateEnum) ToPointer() *SecretVersionStateEnum {
	return &e
}

func (e *SecretVersionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "DESTROYED":
		*e = SecretVersionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SecretVersionStateEnum: %v", v)
	}
}

// SecretVersion - A secret version resource in the Secret Manager API.
type SecretVersion struct {
	// Output only. The time at which the SecretVersion was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The time this SecretVersion was destroyed. Only present if state is DESTROYED.
	DestroyTime *string `json:"destroyTime,omitempty"`
	// Output only. The resource name of the SecretVersion in the format `projects/*/secrets/*/versions/*`. SecretVersion IDs in a Secret start at 1 and are incremented for each subsequent version of the secret.
	Name *string `json:"name,omitempty"`
	// Output only. The current state of the SecretVersion.
	State *SecretVersionStateEnum `json:"state,omitempty"`
}
