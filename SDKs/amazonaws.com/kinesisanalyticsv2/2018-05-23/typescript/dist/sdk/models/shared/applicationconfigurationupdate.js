"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationConfigurationUpdate = void 0;
var utils_1 = require("../../../internal/utils");
var applicationcodeconfigurationupdate_1 = require("./applicationcodeconfigurationupdate");
var applicationsnapshotconfigurationupdate_1 = require("./applicationsnapshotconfigurationupdate");
var environmentpropertyupdates_1 = require("./environmentpropertyupdates");
var flinkapplicationconfigurationupdate_1 = require("./flinkapplicationconfigurationupdate");
var sqlapplicationconfigurationupdate_1 = require("./sqlapplicationconfigurationupdate");
var vpcconfigurationupdate_1 = require("./vpcconfigurationupdate");
var zeppelinapplicationconfigurationupdate_1 = require("./zeppelinapplicationconfigurationupdate");
var class_transformer_1 = require("class-transformer");
/**
 * Describes updates to an application's configuration.
 */
var ApplicationConfigurationUpdate = /** @class */ (function (_super) {
    __extends(ApplicationConfigurationUpdate, _super);
    function ApplicationConfigurationUpdate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ApplicationCodeConfigurationUpdate" }),
        (0, class_transformer_1.Type)(function () { return applicationcodeconfigurationupdate_1.ApplicationCodeConfigurationUpdate; }),
        __metadata("design:type", applicationcodeconfigurationupdate_1.ApplicationCodeConfigurationUpdate)
    ], ApplicationConfigurationUpdate.prototype, "applicationCodeConfigurationUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ApplicationSnapshotConfigurationUpdate" }),
        (0, class_transformer_1.Type)(function () { return applicationsnapshotconfigurationupdate_1.ApplicationSnapshotConfigurationUpdate; }),
        __metadata("design:type", applicationsnapshotconfigurationupdate_1.ApplicationSnapshotConfigurationUpdate)
    ], ApplicationConfigurationUpdate.prototype, "applicationSnapshotConfigurationUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EnvironmentPropertyUpdates" }),
        (0, class_transformer_1.Type)(function () { return environmentpropertyupdates_1.EnvironmentPropertyUpdates; }),
        __metadata("design:type", environmentpropertyupdates_1.EnvironmentPropertyUpdates)
    ], ApplicationConfigurationUpdate.prototype, "environmentPropertyUpdates", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FlinkApplicationConfigurationUpdate" }),
        (0, class_transformer_1.Type)(function () { return flinkapplicationconfigurationupdate_1.FlinkApplicationConfigurationUpdate; }),
        __metadata("design:type", flinkapplicationconfigurationupdate_1.FlinkApplicationConfigurationUpdate)
    ], ApplicationConfigurationUpdate.prototype, "flinkApplicationConfigurationUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SqlApplicationConfigurationUpdate" }),
        (0, class_transformer_1.Type)(function () { return sqlapplicationconfigurationupdate_1.SqlApplicationConfigurationUpdate; }),
        __metadata("design:type", sqlapplicationconfigurationupdate_1.SqlApplicationConfigurationUpdate)
    ], ApplicationConfigurationUpdate.prototype, "sqlApplicationConfigurationUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: vpcconfigurationupdate_1.VpcConfigurationUpdate }),
        (0, class_transformer_1.Expose)({ name: "VpcConfigurationUpdates" }),
        (0, class_transformer_1.Type)(function () { return vpcconfigurationupdate_1.VpcConfigurationUpdate; }),
        __metadata("design:type", Array)
    ], ApplicationConfigurationUpdate.prototype, "vpcConfigurationUpdates", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ZeppelinApplicationConfigurationUpdate" }),
        (0, class_transformer_1.Type)(function () { return zeppelinapplicationconfigurationupdate_1.ZeppelinApplicationConfigurationUpdate; }),
        __metadata("design:type", zeppelinapplicationconfigurationupdate_1.ZeppelinApplicationConfigurationUpdate)
    ], ApplicationConfigurationUpdate.prototype, "zeppelinApplicationConfigurationUpdate", void 0);
    return ApplicationConfigurationUpdate;
}(utils_1.SpeakeasyBase));
exports.ApplicationConfigurationUpdate = ApplicationConfigurationUpdate;
