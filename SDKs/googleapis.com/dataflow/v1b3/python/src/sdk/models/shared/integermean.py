"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import splitint64 as shared_splitint64
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IntegerMean:
    r"""A representation of an integer mean metric contribution."""
    
    count: Optional[shared_splitint64.SplitInt64] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""A representation of an int64, n, that is immune to precision loss when encoded in JSON."""  
    sum: Optional[shared_splitint64.SplitInt64] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sum'), 'exclude': lambda f: f is None }})
    r"""A representation of an int64, n, that is immune to precision loss when encoded in JSON."""  
    