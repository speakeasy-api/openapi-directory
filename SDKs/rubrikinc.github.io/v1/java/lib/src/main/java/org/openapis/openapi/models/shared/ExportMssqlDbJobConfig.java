/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExportMssqlDbJobConfig - Configuration for the export.
 */
public class ExportMssqlDbJobConfig {
    /**
     * A Boolean value that determines whether an existing database can be overwritten by a database this is exported from a backup. Set to false to prevent overwrites. This is the default. Set to true to allow overwrites.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowOverwrite")
    public Boolean allowOverwrite;

    public ExportMssqlDbJobConfig withAllowOverwrite(Boolean allowOverwrite) {
        this.allowOverwrite = allowOverwrite;
        return this;
    }
    
    /**
     * A Boolean value that determines the recovery option to use during database restore. When this value is 'true', the database is restored using the RECOVERY option and is fully functional at the end of the restore operation. When this value is 'false', the database is restored using the NORECOVERY option and remains in recovering mode at the end of the restore operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("finishRecovery")
    public Boolean finishRecovery;

    public ExportMssqlDbJobConfig withFinishRecovery(Boolean finishRecovery) {
        this.finishRecovery = finishRecovery;
        return this;
    }
    
    /**
     * Maximum number of parallel data streams that can be used to copy data to the target system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDataStreams")
    public Integer maxDataStreams;

    public ExportMssqlDbJobConfig withMaxDataStreams(Integer maxDataStreams) {
        this.maxDataStreams = maxDataStreams;
        return this;
    }
    
    @JsonProperty("recoveryPoint")
    public MssqlRecoveryPoint recoveryPoint;

    public ExportMssqlDbJobConfig withRecoveryPoint(MssqlRecoveryPoint recoveryPoint) {
        this.recoveryPoint = recoveryPoint;
        return this;
    }
    
    /**
     * The target path to store all data files.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetDataFilePath")
    public String targetDataFilePath;

    public ExportMssqlDbJobConfig withTargetDataFilePath(String targetDataFilePath) {
        this.targetDataFilePath = targetDataFilePath;
        return this;
    }
    
    /**
     * Name of the new database.
     */
    @JsonProperty("targetDatabaseName")
    public String targetDatabaseName;

    public ExportMssqlDbJobConfig withTargetDatabaseName(String targetDatabaseName) {
        this.targetDatabaseName = targetDatabaseName;
        return this;
    }
    
    /**
     * One target path for each individual database file. Overrides targetDataFilePath and targetLogFilePath.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetFilePaths")
    public MssqlDbFileExportPath[] targetFilePaths;

    public ExportMssqlDbJobConfig withTargetFilePaths(MssqlDbFileExportPath[] targetFilePaths) {
        this.targetFilePaths = targetFilePaths;
        return this;
    }
    
    /**
     * ID of the Microsoft SQL instance for the new database.
     */
    @JsonProperty("targetInstanceId")
    public String targetInstanceId;

    public ExportMssqlDbJobConfig withTargetInstanceId(String targetInstanceId) {
        this.targetInstanceId = targetInstanceId;
        return this;
    }
    
    /**
     * The target path to store all log files.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetLogFilePath")
    public String targetLogFilePath;

    public ExportMssqlDbJobConfig withTargetLogFilePath(String targetLogFilePath) {
        this.targetLogFilePath = targetLogFilePath;
        return this;
    }
    
    public ExportMssqlDbJobConfig(@JsonProperty("recoveryPoint") MssqlRecoveryPoint recoveryPoint, @JsonProperty("targetDatabaseName") String targetDatabaseName, @JsonProperty("targetInstanceId") String targetInstanceId) {
        this.recoveryPoint = recoveryPoint;
        this.targetDatabaseName = targetDatabaseName;
        this.targetInstanceId = targetInstanceId;
  }
}
