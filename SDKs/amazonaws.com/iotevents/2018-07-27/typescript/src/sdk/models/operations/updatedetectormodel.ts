/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Information that defines how a detector operates.
 */
export class UpdateDetectorModelRequestBodyDetectorModelDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "initialStateName" })
  initialStateName?: string;

  @SpeakeasyMetadata({ elemType: shared.State })
  @Expose({ name: "states" })
  @Type(() => shared.State)
  states?: shared.State[];
}

/**
 * Information about the order in which events are evaluated and how actions are executed.
 */
export enum UpdateDetectorModelRequestBodyEvaluationMethodEnum {
  Batch = "BATCH",
  Serial = "SERIAL",
}

export class UpdateDetectorModelRequestBody extends SpeakeasyBase {
  /**
   * Information that defines how a detector operates.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detectorModelDefinition" })
  @Type(() => UpdateDetectorModelRequestBodyDetectorModelDefinition)
  detectorModelDefinition: UpdateDetectorModelRequestBodyDetectorModelDefinition;

  /**
   * A brief description of the detector model.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detectorModelDescription" })
  detectorModelDescription?: string;

  /**
   * Information about the order in which events are evaluated and how actions are executed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "evaluationMethod" })
  evaluationMethod?: UpdateDetectorModelRequestBodyEvaluationMethodEnum;

  /**
   * The ARN of the role that grants permission to AWS IoT Events to perform its operations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn: string;
}

export class UpdateDetectorModelRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateDetectorModelRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name of the detector model that is updated.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=detectorModelName",
  })
  detectorModelName: string;
}

export class UpdateDetectorModelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * ResourceInUseException
   */
  @SpeakeasyMetadata()
  resourceInUseException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateDetectorModelResponse?: shared.UpdateDetectorModelResponse;
}
