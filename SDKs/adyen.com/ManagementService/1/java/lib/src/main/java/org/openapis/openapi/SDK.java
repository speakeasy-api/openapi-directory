/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals.
 * ## Authentication
 * Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.
 * 
 * To access the live endpoints, you need to generate a new API key in your live Customer Area.
 * ## Versioning
 * 
 * Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:
 * 
 * ```text
 * https://management-test.adyen.com/v1/companies/{companyId}/webhooks
 * ```
 * 
 * ## Going live
 * 
 * To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:
 * 
 * ```text
 * https://management-live.adyen.com/v1
 * ```
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        "https://management-test.adyen.com/v1",
	};
  	
    public APICredentialsCompanyLevel apiCredentialsCompanyLevel;
    public APICredentialsMerchantLevel apiCredentialsMerchantLevel;
    public APIKeyCompanyLevel apiKeyCompanyLevel;
    public APIKeyMerchantLevel apiKeyMerchantLevel;
    public AccountCompanyLevel accountCompanyLevel;
    public AccountMerchantLevel accountMerchantLevel;
    public AccountStoreLevel accountStoreLevel;
    public AllowedOriginsCompanyLevel allowedOriginsCompanyLevel;
    public AllowedOriginsMerchantLevel allowedOriginsMerchantLevel;
    public ClientKeyCompanyLevel clientKeyCompanyLevel;
    public ClientKeyMerchantLevel clientKeyMerchantLevel;
    public MyAPICredential myAPICredential;
    public PaymentMethodsMerchantLevel paymentMethodsMerchantLevel;
    public PayoutSettingsMerchantLevel payoutSettingsMerchantLevel;
    public TerminalActionsCompanyLevel terminalActionsCompanyLevel;
    public TerminalActionsTerminalLevel terminalActionsTerminalLevel;
    public TerminalOrdersCompanyLevel terminalOrdersCompanyLevel;
    public TerminalOrdersMerchantLevel terminalOrdersMerchantLevel;
    public TerminalSettingsCompanyLevel terminalSettingsCompanyLevel;
    public TerminalSettingsMerchantLevel terminalSettingsMerchantLevel;
    public TerminalSettingsStoreLevel terminalSettingsStoreLevel;
    public TerminalSettingsTerminalLevel terminalSettingsTerminalLevel;
    public TerminalsTerminalLevel terminalsTerminalLevel;
    public UsersCompanyLevel usersCompanyLevel;
    public UsersMerchantLevel usersMerchantLevel;
    public WebhooksCompanyLevel webhooksCompanyLevel;
    public WebhooksMerchantLevel webhooksMerchantLevel;	

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}
		
		
		this.apiCredentialsCompanyLevel = new APICredentialsCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.apiCredentialsMerchantLevel = new APICredentialsMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.apiKeyCompanyLevel = new APIKeyCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.apiKeyMerchantLevel = new APIKeyMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.accountCompanyLevel = new AccountCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.accountMerchantLevel = new AccountMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.accountStoreLevel = new AccountStoreLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.allowedOriginsCompanyLevel = new AllowedOriginsCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.allowedOriginsMerchantLevel = new AllowedOriginsMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.clientKeyCompanyLevel = new ClientKeyCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.clientKeyMerchantLevel = new ClientKeyMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.myAPICredential = new MyAPICredential(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.paymentMethodsMerchantLevel = new PaymentMethodsMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.payoutSettingsMerchantLevel = new PayoutSettingsMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalActionsCompanyLevel = new TerminalActionsCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalActionsTerminalLevel = new TerminalActionsTerminalLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalOrdersCompanyLevel = new TerminalOrdersCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalOrdersMerchantLevel = new TerminalOrdersMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalSettingsCompanyLevel = new TerminalSettingsCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalSettingsMerchantLevel = new TerminalSettingsMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalSettingsStoreLevel = new TerminalSettingsStoreLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalSettingsTerminalLevel = new TerminalSettingsTerminalLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.terminalsTerminalLevel = new TerminalsTerminalLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.usersCompanyLevel = new UsersCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.usersMerchantLevel = new UsersMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.webhooksCompanyLevel = new WebhooksCompanyLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.webhooksMerchantLevel = new WebhooksMerchantLevel(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
	}
}