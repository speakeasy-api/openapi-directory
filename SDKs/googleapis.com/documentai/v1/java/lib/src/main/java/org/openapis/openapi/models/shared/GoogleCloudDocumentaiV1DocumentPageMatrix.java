/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDocumentaiV1DocumentPageMatrix - Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.
 */
public class GoogleCloudDocumentaiV1DocumentPageMatrix {
    /**
     * Number of columns in the matrix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cols")
    public Integer cols;

    public GoogleCloudDocumentaiV1DocumentPageMatrix withCols(Integer cols) {
        this.cols = cols;
        return this;
    }
    
    /**
     * The matrix data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public String data;

    public GoogleCloudDocumentaiV1DocumentPageMatrix withData(String data) {
        this.data = data;
        return this;
    }
    
    /**
     * Number of rows in the matrix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public Integer rows;

    public GoogleCloudDocumentaiV1DocumentPageMatrix withRows(Integer rows) {
        this.rows = rows;
        return this;
    }
    
    /**
     * This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public Integer type;

    public GoogleCloudDocumentaiV1DocumentPageMatrix withType(Integer type) {
        this.type = type;
        return this;
    }
    
    public GoogleCloudDocumentaiV1DocumentPageMatrix(){}
}
