// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type FindAllGlobalAuthModulesSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type FindAllGlobalAuthModules200ApplicationJSONType string

const (
	FindAllGlobalAuthModules200ApplicationJSONTypeLdapAuthModuleConfig      FindAllGlobalAuthModules200ApplicationJSONType = "LdapAuthModuleConfig"
	FindAllGlobalAuthModules200ApplicationJSONTypeInMemoryAuthModuleConfig  FindAllGlobalAuthModules200ApplicationJSONType = "InMemoryAuthModuleConfig"
	FindAllGlobalAuthModules200ApplicationJSONTypeGenericOauth2ModuleConfig FindAllGlobalAuthModules200ApplicationJSONType = "GenericOauth2ModuleConfig"
)

type FindAllGlobalAuthModules200ApplicationJSON struct {
	LdapAuthModuleConfig      *shared.LdapAuthModuleConfig
	InMemoryAuthModuleConfig  *shared.InMemoryAuthModuleConfig
	GenericOauth2ModuleConfig *shared.GenericOauth2ModuleConfig

	Type FindAllGlobalAuthModules200ApplicationJSONType
}

func CreateFindAllGlobalAuthModules200ApplicationJSONLdapAuthModuleConfig(ldapAuthModuleConfig shared.LdapAuthModuleConfig) FindAllGlobalAuthModules200ApplicationJSON {
	typ := FindAllGlobalAuthModules200ApplicationJSONTypeLdapAuthModuleConfig

	return FindAllGlobalAuthModules200ApplicationJSON{
		LdapAuthModuleConfig: &ldapAuthModuleConfig,
		Type:                 typ,
	}
}

func CreateFindAllGlobalAuthModules200ApplicationJSONInMemoryAuthModuleConfig(inMemoryAuthModuleConfig shared.InMemoryAuthModuleConfig) FindAllGlobalAuthModules200ApplicationJSON {
	typ := FindAllGlobalAuthModules200ApplicationJSONTypeInMemoryAuthModuleConfig

	return FindAllGlobalAuthModules200ApplicationJSON{
		InMemoryAuthModuleConfig: &inMemoryAuthModuleConfig,
		Type:                     typ,
	}
}

func CreateFindAllGlobalAuthModules200ApplicationJSONGenericOauth2ModuleConfig(genericOauth2ModuleConfig shared.GenericOauth2ModuleConfig) FindAllGlobalAuthModules200ApplicationJSON {
	typ := FindAllGlobalAuthModules200ApplicationJSONTypeGenericOauth2ModuleConfig

	return FindAllGlobalAuthModules200ApplicationJSON{
		GenericOauth2ModuleConfig: &genericOauth2ModuleConfig,
		Type:                      typ,
	}
}

func (u *FindAllGlobalAuthModules200ApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	ldapAuthModuleConfig := new(shared.LdapAuthModuleConfig)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&ldapAuthModuleConfig); err == nil {
		u.LdapAuthModuleConfig = ldapAuthModuleConfig
		u.Type = FindAllGlobalAuthModules200ApplicationJSONTypeLdapAuthModuleConfig
		return nil
	}

	inMemoryAuthModuleConfig := new(shared.InMemoryAuthModuleConfig)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&inMemoryAuthModuleConfig); err == nil {
		u.InMemoryAuthModuleConfig = inMemoryAuthModuleConfig
		u.Type = FindAllGlobalAuthModules200ApplicationJSONTypeInMemoryAuthModuleConfig
		return nil
	}

	genericOauth2ModuleConfig := new(shared.GenericOauth2ModuleConfig)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&genericOauth2ModuleConfig); err == nil {
		u.GenericOauth2ModuleConfig = genericOauth2ModuleConfig
		u.Type = FindAllGlobalAuthModules200ApplicationJSONTypeGenericOauth2ModuleConfig
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u FindAllGlobalAuthModules200ApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.LdapAuthModuleConfig != nil {
		return json.Marshal(u.LdapAuthModuleConfig)
	}

	if u.InMemoryAuthModuleConfig != nil {
		return json.Marshal(u.InMemoryAuthModuleConfig)
	}

	if u.GenericOauth2ModuleConfig != nil {
		return json.Marshal(u.GenericOauth2ModuleConfig)
	}

	return nil, nil
}

type FindAllGlobalAuthModulesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	FindAllGlobalAuthModules200ApplicationJSONOneoves []FindAllGlobalAuthModules200ApplicationJSON
}
