/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DescribeScheduledInstanceAvailabilityRequest - Contains the parameters for DescribeScheduledInstanceAvailability.
 */
public class DescribeScheduledInstanceAvailabilityRequest {
    
    public Boolean dryRun;
    public DescribeScheduledInstanceAvailabilityRequest withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    
    public DescribeScheduledInstanceAvailabilityRequestFilters[] filters;
    public DescribeScheduledInstanceAvailabilityRequest withFilters(DescribeScheduledInstanceAvailabilityRequestFilters[] filters) {
        this.filters = filters;
        return this;
    }
    
    
    public SlotDateTimeRangeRequest firstSlotStartTimeRange;
    public DescribeScheduledInstanceAvailabilityRequest withFirstSlotStartTimeRange(SlotDateTimeRangeRequest firstSlotStartTimeRange) {
        this.firstSlotStartTimeRange = firstSlotStartTimeRange;
        return this;
    }
    
    
    public Long maxResults;
    public DescribeScheduledInstanceAvailabilityRequest withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    
    public Long maxSlotDurationInHours;
    public DescribeScheduledInstanceAvailabilityRequest withMaxSlotDurationInHours(Long maxSlotDurationInHours) {
        this.maxSlotDurationInHours = maxSlotDurationInHours;
        return this;
    }
    
    
    public Long minSlotDurationInHours;
    public DescribeScheduledInstanceAvailabilityRequest withMinSlotDurationInHours(Long minSlotDurationInHours) {
        this.minSlotDurationInHours = minSlotDurationInHours;
        return this;
    }
    
    
    public String nextToken;
    public DescribeScheduledInstanceAvailabilityRequest withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    
    public ScheduledInstanceRecurrenceRequest recurrence;
    public DescribeScheduledInstanceAvailabilityRequest withRecurrence(ScheduledInstanceRecurrenceRequest recurrence) {
        this.recurrence = recurrence;
        return this;
    }
    
}
