/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DescribeAccessPointsQueryParams {
    /**
     * (Optional) Specifies an EFS access point to describe in the response; mutually exclusive with &lt;code&gt;FileSystemId&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AccessPointId")
    public String accessPointId;
    public DescribeAccessPointsQueryParams withAccessPointId(String accessPointId) {
        this.accessPointId = accessPointId;
        return this;
    }
    
    /**
     * (Optional) If you provide a &lt;code&gt;FileSystemId&lt;/code&gt;, EFS returns all access points for that file system; mutually exclusive with &lt;code&gt;AccessPointId&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=FileSystemId")
    public String fileSystemId;
    public DescribeAccessPointsQueryParams withFileSystemId(String fileSystemId) {
        this.fileSystemId = fileSystemId;
        return this;
    }
    
    /**
     * (Optional) When retrieving all access points for a file system, you can optionally specify the &lt;code&gt;MaxItems&lt;/code&gt; parameter to limit the number of objects returned in a response. The default value is 100. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxResults")
    public Long maxResults;
    public DescribeAccessPointsQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     *  &lt;code&gt;NextToken&lt;/code&gt; is present if the response is paginated. You can use &lt;code&gt;NextMarker&lt;/code&gt; in the subsequent request to fetch the next page of access point descriptions.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NextToken")
    public String nextToken;
    public DescribeAccessPointsQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
}
