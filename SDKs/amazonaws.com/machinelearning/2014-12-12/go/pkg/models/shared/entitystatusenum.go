// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EntityStatusEnum - <p>Object status with the following possible values:</p> <ul> <li> <p> <code>PENDING</code> </p> </li> <li> <p> <code>INPROGRESS</code> </p> </li> <li> <p> <code>FAILED</code> </p> </li> <li> <p> <code>COMPLETED</code> </p> </li> <li> <p> <code>DELETED</code> </p> </li> </ul>
type EntityStatusEnum string

const (
	EntityStatusEnumPending    EntityStatusEnum = "PENDING"
	EntityStatusEnumInprogress EntityStatusEnum = "INPROGRESS"
	EntityStatusEnumFailed     EntityStatusEnum = "FAILED"
	EntityStatusEnumCompleted  EntityStatusEnum = "COMPLETED"
	EntityStatusEnumDeleted    EntityStatusEnum = "DELETED"
)

func (e *EntityStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "INPROGRESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "DELETED":
		*e = EntityStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityStatusEnum: %s", s)
	}
}
