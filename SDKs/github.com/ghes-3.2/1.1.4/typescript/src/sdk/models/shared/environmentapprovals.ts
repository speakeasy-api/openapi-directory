/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SimpleUser } from "./simpleuser";
import { Expose, Transform, Type } from "class-transformer";

export class EnvironmentApprovalsEnvironments extends SpeakeasyBase {
  /**
   * The time that the environment was created, in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl?: string;

  /**
   * The id of the environment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The name of the environment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId?: string;

  /**
   * The time that the environment was last updated, in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Whether deployment to the environment(s) was approved or rejected
 */
export enum EnvironmentApprovalsStateEnum {
  Approved = "approved",
  Rejected = "rejected",
}

/**
 * An entry in the reviews log for environment deployments
 */
export class EnvironmentApprovals extends SpeakeasyBase {
  /**
   * The comment submitted with the deployment review
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment: string;

  /**
   * The list of environments that were approved or rejected
   */
  @SpeakeasyMetadata({ elemType: EnvironmentApprovalsEnvironments })
  @Expose({ name: "environments" })
  @Type(() => EnvironmentApprovalsEnvironments)
  environments: EnvironmentApprovalsEnvironments[];

  /**
   * Whether deployment to the environment(s) was approved or rejected
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: EnvironmentApprovalsStateEnum;

  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => SimpleUser)
  user: SimpleUser;
}
