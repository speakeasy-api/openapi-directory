// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateMetricAttributionXAmzTargetEnum
type CreateMetricAttributionXAmzTargetEnum string

const (
	CreateMetricAttributionXAmzTargetEnumAmazonPersonalizeCreateMetricAttribution CreateMetricAttributionXAmzTargetEnum = "AmazonPersonalize.CreateMetricAttribution"
)

func (e CreateMetricAttributionXAmzTargetEnum) ToPointer() *CreateMetricAttributionXAmzTargetEnum {
	return &e
}

func (e *CreateMetricAttributionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonPersonalize.CreateMetricAttribution":
		*e = CreateMetricAttributionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateMetricAttributionXAmzTargetEnum: %v", v)
	}
}

type CreateMetricAttributionRequest struct {
	CreateMetricAttributionRequest shared.CreateMetricAttributionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     CreateMetricAttributionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateMetricAttributionResponse struct {
	ContentType string
	// Success
	CreateMetricAttributionResponse *shared.CreateMetricAttributionResponse
	// InvalidInputException
	InvalidInputException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
