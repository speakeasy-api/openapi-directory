<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * KerberosConfig - Specifies Kerberos related configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class KerberosConfig
{
    /**
     * Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
     * 
     * @var ?string $crossRealmTrustAdminServer
     */
	#[\JMS\Serializer\Annotation\SerializedName('crossRealmTrustAdminServer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $crossRealmTrustAdminServer = null;
    
    /**
     * Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
     * 
     * @var ?string $crossRealmTrustKdc
     */
	#[\JMS\Serializer\Annotation\SerializedName('crossRealmTrustKdc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $crossRealmTrustKdc = null;
    
    /**
     * Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
     * 
     * @var ?string $crossRealmTrustRealm
     */
	#[\JMS\Serializer\Annotation\SerializedName('crossRealmTrustRealm')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $crossRealmTrustRealm = null;
    
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
     * 
     * @var ?string $crossRealmTrustSharedPasswordUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('crossRealmTrustSharedPasswordUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $crossRealmTrustSharedPasswordUri = null;
    
    /**
     * Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
     * 
     * @var ?bool $enableKerberos
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableKerberos')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableKerberos = null;
    
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
     * 
     * @var ?string $kdcDbKeyUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('kdcDbKeyUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kdcDbKeyUri = null;
    
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
     * 
     * @var ?string $keyPasswordUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyPasswordUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keyPasswordUri = null;
    
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
     * 
     * @var ?string $keystorePasswordUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('keystorePasswordUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keystorePasswordUri = null;
    
    /**
     * Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
     * 
     * @var ?string $keystoreUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('keystoreUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keystoreUri = null;
    
    /**
     * Optional. The uri of the KMS key used to encrypt various sensitive files.
     * 
     * @var ?string $kmsKeyUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('kmsKeyUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kmsKeyUri = null;
    
    /**
     * Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
     * 
     * @var ?string $realm
     */
	#[\JMS\Serializer\Annotation\SerializedName('realm')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $realm = null;
    
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
     * 
     * @var ?string $rootPrincipalPasswordUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('rootPrincipalPasswordUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rootPrincipalPasswordUri = null;
    
    /**
     * Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
     * 
     * @var ?int $tgtLifetimeHours
     */
	#[\JMS\Serializer\Annotation\SerializedName('tgtLifetimeHours')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $tgtLifetimeHours = null;
    
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
     * 
     * @var ?string $truststorePasswordUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('truststorePasswordUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $truststorePasswordUri = null;
    
    /**
     * Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
     * 
     * @var ?string $truststoreUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('truststoreUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $truststoreUri = null;
    
	public function __construct()
	{
		$this->crossRealmTrustAdminServer = null;
		$this->crossRealmTrustKdc = null;
		$this->crossRealmTrustRealm = null;
		$this->crossRealmTrustSharedPasswordUri = null;
		$this->enableKerberos = null;
		$this->kdcDbKeyUri = null;
		$this->keyPasswordUri = null;
		$this->keystorePasswordUri = null;
		$this->keystoreUri = null;
		$this->kmsKeyUri = null;
		$this->realm = null;
		$this->rootPrincipalPasswordUri = null;
		$this->tgtLifetimeHours = null;
		$this->truststorePasswordUri = null;
		$this->truststoreUri = null;
	}
}
