/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Status of the Product used as filter
 */
export enum GetProductsStatusStatusJsonStatusEnum {
  Available = "available",
  NotAvailable = "not-available",
  Disabled = "disabled",
}

export class GetProductsStatusStatusJsonRequest extends SpeakeasyBase {
  /**
   * API OAuth token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=authtoken",
  })
  authtoken: string;

  /**
   * Locale code of the translation
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locale",
  })
  locale?: string;

  /**
   * API OAuth login.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=login" })
  login: string;

  /**
   * Status of the Product used as filter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=status",
  })
  status: GetProductsStatusStatusJsonStatusEnum;
}

export class GetProductsStatusStatusJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.Product })
  products?: shared.Product[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Status Invalid.
   */
  @SpeakeasyMetadata()
  statusInvalid?: shared.StatusInvalid;
}
