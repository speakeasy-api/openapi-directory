/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Round } from "./round";
import { Expose, Type } from "class-transformer";

export class Season extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CompetitionId" })
  competitionId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CompetitionName" })
  competitionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrentSeason" })
  currentSeason?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EndDate" })
  endDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: Round })
  @Expose({ name: "Rounds" })
  @Type(() => Round)
  rounds?: Round[];

  @SpeakeasyMetadata()
  @Expose({ name: "Season" })
  season?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SeasonId" })
  seasonId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  startDate?: string;
}
