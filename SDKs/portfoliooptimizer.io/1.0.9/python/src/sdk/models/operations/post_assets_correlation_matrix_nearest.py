"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsCorrelationMatrixNearestRequestBody:
    
    assets: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assets') }})
    r"""The number of assets"""  
    assets_approximate_correlation_matrix: list[list[float]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetsApproximateCorrelationMatrix') }})
    r"""assetsApproximateCorrelationMatrix[i][i] is the approximate correlation between the asset i and the asset j"""  
    assets_fixed_correlations: Optional[list[list[int]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetsFixedCorrelations'), 'exclude': lambda f: f is None }})
    r"""assetsFixedCorrelations[k] is the couple of indices (i,j) of the assets i and j for which to keep the approximate correlation assetsApproximateCorrelationMatrix[i][j] fixed"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsCorrelationMatrixNearest200ApplicationJSON:
    r"""OK"""
    
    assets_correlation_matrix: list[list[float]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetsCorrelationMatrix') }})
    r"""assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j"""  
    

@dataclasses.dataclass
class PostAssetsCorrelationMatrixNearestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_assets_correlation_matrix_nearest_200_application_json_object: Optional[PostAssetsCorrelationMatrixNearest200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    