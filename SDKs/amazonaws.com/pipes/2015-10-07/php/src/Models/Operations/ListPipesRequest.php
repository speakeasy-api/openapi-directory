<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListPipesRequest
{
    /**
     * The state the pipe is in.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListPipesCurrentStateEnum $currentState
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=CurrentState')]
    public ?ListPipesCurrentStateEnum $currentState = null;
    
    /**
     * The state the pipe should be in.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListPipesDesiredStateEnum $desiredState
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DesiredState')]
    public ?ListPipesDesiredStateEnum $desiredState = null;
    
    /**
     * The maximum number of pipes to include in the response.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Limit')]
    public ?int $limit = null;
    
    /**
     * A value that will return a subset of the pipes associated with this account. For example, <code>"NamePrefix": "ABC"</code> will return all endpoints with "ABC" in the name.
     * 
     * @var ?string $namePrefix
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NamePrefix')]
    public ?string $namePrefix = null;
    
    /**
     * If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged. Each pagination token expires after 24 hours. Using an expired pagination token will return an HTTP 400 InvalidToken error.
     * 
     * @var ?string $nextToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NextToken')]
    public ?string $nextToken = null;
    
    /**
     * The prefix matching the pipe source.
     * 
     * @var ?string $sourcePrefix
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SourcePrefix')]
    public ?string $sourcePrefix = null;
    
    /**
     * The prefix matching the pipe target.
     * 
     * @var ?string $targetPrefix
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TargetPrefix')]
    public ?string $targetPrefix = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->currentState = null;
		$this->desiredState = null;
		$this->limit = null;
		$this->namePrefix = null;
		$this->nextToken = null;
		$this->sourcePrefix = null;
		$this->targetPrefix = null;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
