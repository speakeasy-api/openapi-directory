<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class SendMessageRequestBody5ImageViberService
{
    /**
     * Node for Viber action buttons.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SendMessageRequestBody5ImageViberServiceAction $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\SendMessageRequestBody5ImageViberServiceAction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SendMessageRequestBody5ImageViberServiceAction $action = null;
    
    /**
     * The use of different category tags enables the business to send messages for different use cases. For Viber Business Messages the first message sent from a business to a user must be personal, informative & a targeted message - not promotional. By default Vonage sends the `transaction` category to Viber Business Messages.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SendMessageRequestBody5ImageViberServiceCategoryEnum $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\SendMessageRequestBody5ImageViberServiceCategoryEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SendMessageRequestBody5ImageViberServiceCategoryEnum $category = null;
    
    /**
     * Set the time-to-live of message to be delivered in seconds. i.e. if the message is not delivered in 600 seconds then delete the message.
     * 
     * @var ?int $ttl
     */
	#[\JMS\Serializer\Annotation\SerializedName('ttl')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ttl = null;
    
    /**
     * Viber-specific type definition. To use "template", please contact your Vonage Account Manager to setup your templates. To find out more please visit the [product page](https://www.vonage.com/communications-apis/messages/)
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->category = null;
		$this->ttl = null;
		$this->type = null;
	}
}
