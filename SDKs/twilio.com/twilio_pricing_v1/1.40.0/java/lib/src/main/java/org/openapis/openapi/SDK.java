/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * This is the public Twilio REST API.
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        "https://pricing.twilio.com",
	};
    /**
	 * FETCH_MESSAGING_COUNTRY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_MESSAGING_COUNTRY_SERVERS = {
        "https://pricing.twilio.com",
    };
	
    /**
	 * FETCH_PHONE_NUMBER_COUNTRY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_PHONE_NUMBER_COUNTRY_SERVERS = {
        "https://pricing.twilio.com",
    };
	
    /**
	 * FETCH_VOICE_COUNTRY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_VOICE_COUNTRY_SERVERS = {
        "https://pricing.twilio.com",
    };
	
    /**
	 * FETCH_VOICE_NUMBER_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] FETCH_VOICE_NUMBER_SERVERS = {
        "https://pricing.twilio.com",
    };
	
    /**
	 * LIST_MESSAGING_COUNTRY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_MESSAGING_COUNTRY_SERVERS = {
        "https://pricing.twilio.com",
    };
	
    /**
	 * LIST_PHONE_NUMBER_COUNTRY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_PHONE_NUMBER_COUNTRY_SERVERS = {
        "https://pricing.twilio.com",
    };
	
    /**
	 * LIST_VOICE_COUNTRY_SERVERS contains the list of server urls available to the SDK.
	 */
    public static final String[] LIST_VOICE_COUNTRY_SERVERS = {
        "https://pricing.twilio.com",
    };
	
  		

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}
		
	}

    public org.openapis.openapi.models.operations.FetchMessagingCountryResponse fetchMessagingCountry(org.openapis.openapi.models.operations.FetchMessagingCountryRequest request, org.openapis.openapi.models.operations.FetchMessagingCountrySecurity security) throws Exception {
        return this.fetchMessagingCountry(request, security, null);
    }

    public org.openapis.openapi.models.operations.FetchMessagingCountryResponse fetchMessagingCountry(org.openapis.openapi.models.operations.FetchMessagingCountryRequest request, org.openapis.openapi.models.operations.FetchMessagingCountrySecurity security, String serverURL) throws Exception {
        String baseUrl = FETCH_MESSAGING_COUNTRY_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchMessagingCountryRequest.class, baseUrl, "/v1/Messaging/Countries/{IsoCountry}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchMessagingCountryResponse res = new org.openapis.openapi.models.operations.FetchMessagingCountryResponse() {{
            pricingV1MessagingMessagingCountryInstance = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PricingV1MessagingMessagingCountryInstance out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PricingV1MessagingMessagingCountryInstance.class);
                res.pricingV1MessagingMessagingCountryInstance = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.FetchPhoneNumberCountryResponse fetchPhoneNumberCountry(org.openapis.openapi.models.operations.FetchPhoneNumberCountryRequest request, org.openapis.openapi.models.operations.FetchPhoneNumberCountrySecurity security) throws Exception {
        return this.fetchPhoneNumberCountry(request, security, null);
    }

    public org.openapis.openapi.models.operations.FetchPhoneNumberCountryResponse fetchPhoneNumberCountry(org.openapis.openapi.models.operations.FetchPhoneNumberCountryRequest request, org.openapis.openapi.models.operations.FetchPhoneNumberCountrySecurity security, String serverURL) throws Exception {
        String baseUrl = FETCH_PHONE_NUMBER_COUNTRY_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchPhoneNumberCountryRequest.class, baseUrl, "/v1/PhoneNumbers/Countries/{IsoCountry}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchPhoneNumberCountryResponse res = new org.openapis.openapi.models.operations.FetchPhoneNumberCountryResponse() {{
            pricingV1PhoneNumberPhoneNumberCountryInstance = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PricingV1PhoneNumberPhoneNumberCountryInstance out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PricingV1PhoneNumberPhoneNumberCountryInstance.class);
                res.pricingV1PhoneNumberPhoneNumberCountryInstance = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.FetchVoiceCountryResponse fetchVoiceCountry(org.openapis.openapi.models.operations.FetchVoiceCountryRequest request, org.openapis.openapi.models.operations.FetchVoiceCountrySecurity security) throws Exception {
        return this.fetchVoiceCountry(request, security, null);
    }

    public org.openapis.openapi.models.operations.FetchVoiceCountryResponse fetchVoiceCountry(org.openapis.openapi.models.operations.FetchVoiceCountryRequest request, org.openapis.openapi.models.operations.FetchVoiceCountrySecurity security, String serverURL) throws Exception {
        String baseUrl = FETCH_VOICE_COUNTRY_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchVoiceCountryRequest.class, baseUrl, "/v1/Voice/Countries/{IsoCountry}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchVoiceCountryResponse res = new org.openapis.openapi.models.operations.FetchVoiceCountryResponse() {{
            pricingV1VoiceVoiceCountryInstance = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PricingV1VoiceVoiceCountryInstance out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PricingV1VoiceVoiceCountryInstance.class);
                res.pricingV1VoiceVoiceCountryInstance = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.FetchVoiceNumberResponse fetchVoiceNumber(org.openapis.openapi.models.operations.FetchVoiceNumberRequest request, org.openapis.openapi.models.operations.FetchVoiceNumberSecurity security) throws Exception {
        return this.fetchVoiceNumber(request, security, null);
    }

    public org.openapis.openapi.models.operations.FetchVoiceNumberResponse fetchVoiceNumber(org.openapis.openapi.models.operations.FetchVoiceNumberRequest request, org.openapis.openapi.models.operations.FetchVoiceNumberSecurity security, String serverURL) throws Exception {
        String baseUrl = FETCH_VOICE_NUMBER_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.FetchVoiceNumberRequest.class, baseUrl, "/v1/Voice/Numbers/{Number}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.FetchVoiceNumberResponse res = new org.openapis.openapi.models.operations.FetchVoiceNumberResponse() {{
            pricingV1VoiceVoiceNumber = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PricingV1VoiceVoiceNumber out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PricingV1VoiceVoiceNumber.class);
                res.pricingV1VoiceVoiceNumber = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.ListMessagingCountryResponse listMessagingCountry(org.openapis.openapi.models.operations.ListMessagingCountryRequest request, org.openapis.openapi.models.operations.ListMessagingCountrySecurity security) throws Exception {
        return this.listMessagingCountry(request, security, null);
    }

    public org.openapis.openapi.models.operations.ListMessagingCountryResponse listMessagingCountry(org.openapis.openapi.models.operations.ListMessagingCountryRequest request, org.openapis.openapi.models.operations.ListMessagingCountrySecurity security, String serverURL) throws Exception {
        String baseUrl = LIST_MESSAGING_COUNTRY_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/Messaging/Countries");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListMessagingCountryRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListMessagingCountryResponse res = new org.openapis.openapi.models.operations.ListMessagingCountryResponse() {{
            listMessagingCountryResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListMessagingCountryListMessagingCountryResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListMessagingCountryListMessagingCountryResponse.class);
                res.listMessagingCountryResponse = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.ListPhoneNumberCountryResponse listPhoneNumberCountry(org.openapis.openapi.models.operations.ListPhoneNumberCountryRequest request, org.openapis.openapi.models.operations.ListPhoneNumberCountrySecurity security) throws Exception {
        return this.listPhoneNumberCountry(request, security, null);
    }

    public org.openapis.openapi.models.operations.ListPhoneNumberCountryResponse listPhoneNumberCountry(org.openapis.openapi.models.operations.ListPhoneNumberCountryRequest request, org.openapis.openapi.models.operations.ListPhoneNumberCountrySecurity security, String serverURL) throws Exception {
        String baseUrl = LIST_PHONE_NUMBER_COUNTRY_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/PhoneNumbers/Countries");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListPhoneNumberCountryRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListPhoneNumberCountryResponse res = new org.openapis.openapi.models.operations.ListPhoneNumberCountryResponse() {{
            listPhoneNumberCountryResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListPhoneNumberCountryListPhoneNumberCountryResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListPhoneNumberCountryListPhoneNumberCountryResponse.class);
                res.listPhoneNumberCountryResponse = out;
            }
        }

        return res;
    }

    public org.openapis.openapi.models.operations.ListVoiceCountryResponse listVoiceCountry(org.openapis.openapi.models.operations.ListVoiceCountryRequest request, org.openapis.openapi.models.operations.ListVoiceCountrySecurity security) throws Exception {
        return this.listVoiceCountry(request, security, null);
    }

    public org.openapis.openapi.models.operations.ListVoiceCountryResponse listVoiceCountry(org.openapis.openapi.models.operations.ListVoiceCountryRequest request, org.openapis.openapi.models.operations.ListVoiceCountrySecurity security, String serverURL) throws Exception {
        String baseUrl = LIST_VOICE_COUNTRY_SERVERS[0];
        if (serverURL != null && !serverURL.isBlank()) {
            baseUrl = serverURL;
        }
        
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v1/Voice/Countries");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.ListVoiceCountryRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListVoiceCountryResponse res = new org.openapis.openapi.models.operations.ListVoiceCountryResponse() {{
            listVoiceCountryResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.ListVoiceCountryListVoiceCountryResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.ListVoiceCountryListVoiceCountryResponse.class);
                res.listVoiceCountryResponse = out;
            }
        }

        return res;
    }
}