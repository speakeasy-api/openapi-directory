"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import aggregationperiod_enum as shared_aggregationperiod_enum
from ..shared import framemetricdatum as shared_framemetricdatum
from ..shared import timestampstructure as shared_timestampstructure
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchGetFrameMetricDataResponse:
    r"""The structure representing the BatchGetFrameMetricDataResponse."""
    
    end_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    end_times: list[shared_timestampstructure.TimestampStructure] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTimes') }})  
    frame_metric_data: list[shared_framemetricdatum.FrameMetricDatum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frameMetricData') }})  
    resolution: shared_aggregationperiod_enum.AggregationPeriodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})  
    start_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    unprocessed_end_times: dict[str, list[shared_timestampstructure.TimestampStructure]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unprocessedEndTimes') }})  
    