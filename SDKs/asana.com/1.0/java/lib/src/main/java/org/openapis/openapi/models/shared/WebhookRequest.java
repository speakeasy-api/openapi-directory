/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class WebhookRequest {
    /**
     * An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filters")
    public WebhookRequestFilters[] filters;
    public WebhookRequest withFilters(WebhookRequestFilters[] filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * A resource ID to subscribe to. Many Asana resources are valid to create webhooks on, but higher-level resources require filters.
     */
    @JsonProperty("resource")
    public String resource;
    public WebhookRequest withResource(String resource) {
        this.resource = resource;
        return this;
    }
    
    /**
     * The URL to receive the HTTP POST. The full URL will be used to deliver events from this webhook (including parameters) which allows encoding of application-specific state when the webhook is created.
     */
    @JsonProperty("target")
    public String target;
    public WebhookRequest withTarget(String target) {
        this.target = target;
        return this;
    }
    
}
