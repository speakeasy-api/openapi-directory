/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SshPublicKey - Provides information about the public Secure Shell (SSH) key that is associated with a user account for the specific file transfer protocol-enabled server (as identified by &lt;code&gt;ServerId&lt;/code&gt;). The information returned includes the date the key was imported, the public key contents, and the public key ID. A user can store more than one SSH public key associated with their user name on a specific server.
 */
public class SshPublicKey {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("DateImported")
    public OffsetDateTime dateImported;

    public SshPublicKey withDateImported(OffsetDateTime dateImported) {
        this.dateImported = dateImported;
        return this;
    }
    
    @JsonProperty("SshPublicKeyBody")
    public String sshPublicKeyBody;

    public SshPublicKey withSshPublicKeyBody(String sshPublicKeyBody) {
        this.sshPublicKeyBody = sshPublicKeyBody;
        return this;
    }
    
    @JsonProperty("SshPublicKeyId")
    public String sshPublicKeyId;

    public SshPublicKey withSshPublicKeyId(String sshPublicKeyId) {
        this.sshPublicKeyId = sshPublicKeyId;
        return this;
    }
    
    public SshPublicKey(@JsonProperty("DateImported") OffsetDateTime dateImported, @JsonProperty("SshPublicKeyBody") String sshPublicKeyBody, @JsonProperty("SshPublicKeyId") String sshPublicKeyId) {
        this.dateImported = dateImported;
        this.sshPublicKeyBody = sshPublicKeyBody;
        this.sshPublicKeyId = sshPublicKeyId;
  }
}
