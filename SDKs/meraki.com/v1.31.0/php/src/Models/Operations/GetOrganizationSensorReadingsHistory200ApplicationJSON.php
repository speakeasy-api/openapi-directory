<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetOrganizationSensorReadingsHistory200ApplicationJSON
{
    /**
     * Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONBattery $battery
     */
	#[\JMS\Serializer\Annotation\SerializedName('battery')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONBattery')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONBattery $battery = null;
    
    /**
     * Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONButton $button
     */
	#[\JMS\Serializer\Annotation\SerializedName('button')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONButton')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONButton $button = null;
    
    /**
     * Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONDoor $door
     */
	#[\JMS\Serializer\Annotation\SerializedName('door')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONDoor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONDoor $door = null;
    
    /**
     * Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity $humidity
     */
	#[\JMS\Serializer\Annotation\SerializedName('humidity')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity $humidity = null;
    
    /**
     * Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality $indoorAirQuality
     */
	#[\JMS\Serializer\Annotation\SerializedName('indoorAirQuality')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality $indoorAirQuality = null;
    
    /**
     * Type of sensor reading.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum $metric
     */
	#[\JMS\Serializer\Annotation\SerializedName('metric')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum $metric = null;
    
    /**
     * Network to which the sensor belongs.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork $network = null;
    
    /**
     * Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONNoise $noise
     */
	#[\JMS\Serializer\Annotation\SerializedName('noise')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONNoise')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONNoise $noise = null;
    
    /**
     * Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONPm25 $pm25
     */
	#[\JMS\Serializer\Annotation\SerializedName('pm25')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONPm25')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONPm25 $pm25 = null;
    
    /**
     * Serial number of the sensor that took the reading.
     * 
     * @var ?string $serial
     */
	#[\JMS\Serializer\Annotation\SerializedName('serial')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serial = null;
    
    /**
     * Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature $temperature
     */
	#[\JMS\Serializer\Annotation\SerializedName('temperature')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature $temperature = null;
    
    /**
     * Time at which the reading occurred, in ISO8601 format.
     * 
     * @var ?string $ts
     */
	#[\JMS\Serializer\Annotation\SerializedName('ts')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ts = null;
    
    /**
     * Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc $tvoc
     */
	#[\JMS\Serializer\Annotation\SerializedName('tvoc')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc $tvoc = null;
    
    /**
     * Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONWater $water
     */
	#[\JMS\Serializer\Annotation\SerializedName('water')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsHistory200ApplicationJSONWater')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsHistory200ApplicationJSONWater $water = null;
    
	public function __construct()
	{
		$this->battery = null;
		$this->button = null;
		$this->door = null;
		$this->humidity = null;
		$this->indoorAirQuality = null;
		$this->metric = null;
		$this->network = null;
		$this->noise = null;
		$this->pm25 = null;
		$this->serial = null;
		$this->temperature = null;
		$this->ts = null;
		$this->tvoc = null;
		$this->water = null;
	}
}
