// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerSeasonStatsFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerSeasonStatsFormatEnum string

const (
	ProjectedPlayerSeasonStatsFormatEnumXML  ProjectedPlayerSeasonStatsFormatEnum = "XML"
	ProjectedPlayerSeasonStatsFormatEnumJSON ProjectedPlayerSeasonStatsFormatEnum = "JSON"
)

func (e *ProjectedPlayerSeasonStatsFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = ProjectedPlayerSeasonStatsFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerSeasonStatsFormatEnum: %s", s)
	}
}

type ProjectedPlayerSeasonStatsPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerSeasonStatsFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2019</code>, etc.
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type ProjectedPlayerSeasonStatsRequest struct {
	PathParams ProjectedPlayerSeasonStatsPathParams
}

type ProjectedPlayerSeasonStatsResponse struct {
	ContentType             string
	PlayerSeasonProjections []shared.PlayerSeasonProjection
	StatusCode              int
	RawResponse             *http.Response
}
