// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CurrentSeasontypeFormatEnum - Desired response format. Valid entries are <code>xml</code> or <code>json</code>.
type CurrentSeasontypeFormatEnum string

const (
	CurrentSeasontypeFormatEnumXML  CurrentSeasontypeFormatEnum = "XML"
	CurrentSeasontypeFormatEnumJSON CurrentSeasontypeFormatEnum = "JSON"
)

func (e CurrentSeasontypeFormatEnum) ToPointer() *CurrentSeasontypeFormatEnum {
	return &e
}

func (e *CurrentSeasontypeFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = CurrentSeasontypeFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CurrentSeasontypeFormatEnum: %v", v)
	}
}

type CurrentSeasontypeRequest struct {
	// Desired response format. Valid entries are <code>xml</code> or <code>json</code>.
	Format CurrentSeasontypeFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type CurrentSeasontypeResponse struct {
	ContentType                               string
	CurrentSeasontype200ApplicationJSONString *string
	StatusCode                                int
	RawResponse                               *http.Response
}
