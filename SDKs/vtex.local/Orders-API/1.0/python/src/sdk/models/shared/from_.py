"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class From:
    r"""Conversation sender."""
    
    alias_mask_type: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aliasMaskType') }})
    r"""Conversation tracker mask type."""  
    conversation_related_to: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversationRelatedTo') }})
    r"""Related order ID."""  
    conversation_subject: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversationSubject') }})
    r"""Conversation subject."""  
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""Sender's email."""  
    email_alias: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailAlias') }})
    r"""Sender transactional tracker email."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Sender's name."""  
    role: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role') }})
    r"""If it is a client or null, for transactional emails."""  
    