/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ShareMessage {
    /**
     * Share invitation message text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    public String body;
    public ShareMessage withBody(String body) {
        this.body = body;
        return this;
    }
    
    /**
     * Timestamp of message creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;
    public ShareMessage withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * Message id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;
    public ShareMessage withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Timestamp of message modification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modified")
    public OffsetDateTime modified;
    public ShareMessage withModified(OffsetDateTime modified) {
        this.modified = modified;
        return this;
    }
    
    /**
     * ID of associated share
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareId")
    public Integer shareId;
    public ShareMessage withShareId(Integer shareId) {
        this.shareId = shareId;
        return this;
    }
    
    /**
     * Share invitation message subject.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subject")
    public String subject;
    public ShareMessage withSubject(String subject) {
        this.subject = subject;
        return this;
    }
    
    /**
     * User ID who generated share invite
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userId")
    public Integer userId;
    public ShareMessage withUserId(Integer userId) {
        this.userId = userId;
        return this;
    }
    
}
