/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigurationEnumStatusEnum } from "./configurationenumstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * OK
 */
export class FlexV1Configuration extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Configuration resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * An object that contains application-specific data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: any;

  /**
   * Whether call recording is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_recording_enabled" })
  callRecordingEnabled?: boolean;

  /**
   * The call recording webhook URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_recording_webhook_url" })
  callRecordingWebhookUrl?: string;

  /**
   * Settings for different limits for Flex Conversations channels attachments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel_configs" })
  channelConfigs?: any[];

  /**
   * The SID of the chat service this user belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chat_service_instance_sid" })
  chatServiceInstanceSid?: string;

  /**
   * An object that contains the CRM attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crm_attributes" })
  crmAttributes?: any;

  /**
   * The CRM Callback URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crm_callback_url" })
  crmCallbackUrl?: string;

  /**
   * Whether CRM is present for Flex.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crm_enabled" })
  crmEnabled?: boolean;

  /**
   * The CRM Fallback URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crm_fallback_url" })
  crmFallbackUrl?: string;

  /**
   * The CRM type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crm_type" })
  crmType?: string;

  /**
   * The date and time in GMT when the Configuration resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date and time in GMT when the Configuration resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * Configurable parameters for Debugger Integration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debugger_integration" })
  debuggerIntegration?: any;

  /**
   * Setting this to true will redirect Flex UI to the URL set in flex_url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flex_insights_drilldown" })
  flexInsightsDrilldown?: boolean;

  /**
   * Object with enabled/disabled flag with list of workspaces.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flex_insights_hr" })
  flexInsightsHr?: any;

  /**
   * The SID of the Flex service instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flex_service_instance_sid" })
  flexServiceInstanceSid?: string;

  /**
   * Configurable parameters for Flex UI Status report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flex_ui_status_report" })
  flexUiStatusReport?: any;

  /**
   * URL to redirect to in case drilldown is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flex_url" })
  flexUrl?: string;

  /**
   * A list of objects that contain the configurations for the Integrations supported in this configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "integrations" })
  integrations?: any[];

  /**
   * Configurable parameters for Markdown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "markdown" })
  markdown?: any;

  /**
   * The SID of the Messaging service instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messaging_service_instance_sid" })
  messagingServiceInstanceSid?: string;

  /**
   * Configurable parameters for Notifications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notifications" })
  notifications?: any;

  /**
   * The list of outbound call flows.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outbound_call_flows" })
  outboundCallFlows?: any;

  /**
   * The plugin service attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plugin_service_attributes" })
  pluginServiceAttributes?: any;

  /**
   * Whether the plugin service enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plugin_service_enabled" })
  pluginServiceEnabled?: boolean;

  /**
   * The list of public attributes, which are visible to unauthenticated clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public_attributes" })
  publicAttributes?: any;

  /**
   * Configurable parameters for Queues Statistics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queue_stats_configuration" })
  queueStatsConfiguration?: any;

  /**
   * The URL where the Flex instance is hosted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runtime_domain" })
  runtimeDomain?: string;

  /**
   * The list of serverless service SIDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serverless_service_sids" })
  serverlessServiceSids?: string[];

  /**
   * The Flex Service version.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_version" })
  serviceVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ConfigurationEnumStatusEnum;

  /**
   * The TaskRouter SID of the offline activity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskrouter_offline_activity_sid" })
  taskrouterOfflineActivitySid?: string;

  /**
   * The Skill description for TaskRouter workers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskrouter_skills" })
  taskrouterSkills?: any[];

  /**
   * The SID of the TaskRouter Target TaskQueue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskrouter_target_taskqueue_sid" })
  taskrouterTargetTaskqueueSid?: string;

  /**
   * The SID of the TaskRouter target Workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskrouter_target_workflow_sid" })
  taskrouterTargetWorkflowSid?: string;

  /**
   * The list of TaskRouter TaskQueues.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskrouter_taskqueues" })
  taskrouterTaskqueues?: any[];

  /**
   * The TaskRouter Worker attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskrouter_worker_attributes" })
  taskrouterWorkerAttributes?: any;

  /**
   * The TaskRouter default channel capacities and availability for workers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskrouter_worker_channels" })
  taskrouterWorkerChannels?: any;

  /**
   * The SID of the TaskRouter Workspace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskrouter_workspace_sid" })
  taskrouterWorkspaceSid?: string;

  /**
   * The object that describes Flex UI characteristics and settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ui_attributes" })
  uiAttributes?: any;

  /**
   * The object that defines the NPM packages and versions to be used in Hosted Flex.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ui_dependencies" })
  uiDependencies?: any;

  /**
   * The primary language of the Flex UI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ui_language" })
  uiLanguage?: string;

  /**
   * The Pinned UI version.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ui_version" })
  uiVersion?: string;

  /**
   * The absolute URL of the Configuration resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
