"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import freezeperiod as shared_freezeperiod
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SystemUpdateTypeEnum(str, Enum):
    r"""The type of system update to configure."""
    SYSTEM_UPDATE_TYPE_UNSPECIFIED = 'SYSTEM_UPDATE_TYPE_UNSPECIFIED'
    AUTOMATIC = 'AUTOMATIC'
    WINDOWED = 'WINDOWED'
    POSTPONE = 'POSTPONE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SystemUpdate:
    r"""Configuration for managing system updates"""
    
    end_minutes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endMinutes'), 'exclude': lambda f: f is None }})
    r"""If the type is WINDOWED, the end of the maintenance window, measured as the number of minutes after midnight in device's local time. This value must be between 0 and 1439, inclusive. If this value is less than start_minutes, then the maintenance window spans midnight. If the maintenance window specified is smaller than 30 minutes, the actual window is extended to 30 minutes beyond the start time."""  
    freeze_periods: Optional[list[shared_freezeperiod.FreezePeriod]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freezePeriods'), 'exclude': lambda f: f is None }})
    r"""An annually repeating time period in which over-the-air (OTA) system updates are postponed to freeze the OS version running on a device. To prevent freezing the device indefinitely, each freeze period must be separated by at least 60 days."""  
    start_minutes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startMinutes'), 'exclude': lambda f: f is None }})
    r"""If the type is WINDOWED, the start of the maintenance window, measured as the number of minutes after midnight in the device's local time. This value must be between 0 and 1439, inclusive."""  
    type: Optional[SystemUpdateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of system update to configure."""  
    