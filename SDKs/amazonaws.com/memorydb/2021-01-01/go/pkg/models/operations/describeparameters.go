// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeParametersQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// DescribeParametersXAmzTargetEnum
type DescribeParametersXAmzTargetEnum string

const (
	DescribeParametersXAmzTargetEnumAmazonMemoryDbDescribeParameters DescribeParametersXAmzTargetEnum = "AmazonMemoryDB.DescribeParameters"
)

func (e *DescribeParametersXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonMemoryDB.DescribeParameters":
		*e = DescribeParametersXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeParametersXAmzTargetEnum: %s", s)
	}
}

type DescribeParametersHeaders struct {
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeParametersXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeParametersRequest struct {
	QueryParams DescribeParametersQueryParams
	Headers     DescribeParametersHeaders
	Request     shared.DescribeParametersRequest `request:"mediaType=application/json"`
}

type DescribeParametersResponse struct {
	ContentType string
	// Success
	DescribeParametersResponse *shared.DescribeParametersResponse
	// InvalidParameterCombinationException
	InvalidParameterCombinationException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// ParameterGroupNotFoundFault
	ParameterGroupNotFoundFault interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceLinkedRoleNotFoundFault
	ServiceLinkedRoleNotFoundFault interface{}
}
