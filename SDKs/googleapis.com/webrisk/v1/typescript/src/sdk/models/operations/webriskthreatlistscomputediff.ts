/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class WebriskThreatListsComputeDiffSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

export enum WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum {
  CompressionTypeUnspecified = "COMPRESSION_TYPE_UNSPECIFIED",
  Raw = "RAW",
  Rice = "RICE",
}

/**
 * Required. The threat list to update. Only a single ThreatType should be specified per request. If you want to handle multiple ThreatTypes, you must make one request per ThreatType.
 */
export enum WebriskThreatListsComputeDiffThreatTypeEnum {
  ThreatTypeUnspecified = "THREAT_TYPE_UNSPECIFIED",
  Malware = "MALWARE",
  SocialEngineering = "SOCIAL_ENGINEERING",
  UnwantedSoftware = "UNWANTED_SOFTWARE",
  SocialEngineeringExtendedCoverage = "SOCIAL_ENGINEERING_EXTENDED_COVERAGE",
}

export class WebriskThreatListsComputeDiffRequest extends SpeakeasyBase {
  /**
   * V1 error format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=$.xgafv",
  })
  dollarXgafv?: shared.XgafvEnum;

  /**
   * OAuth access token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=access_token",
  })
  accessToken?: string;

  /**
   * Data format for response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=alt" })
  alt?: shared.AltEnum;

  /**
   * JSONP
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callback",
  })
  callback?: string;

  /**
   * Sets the maximum number of entries that the client is willing to have in the local database. This should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=constraints.maxDatabaseEntries",
  })
  constraintsMaxDatabaseEntries?: number;

  /**
   * The maximum size in number of entries. The diff will not contain more entries than this value. This should be a power of 2 between 2**10 and 2**20. If zero, no diff size limit is set.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=constraints.maxDiffEntries",
  })
  constraintsMaxDiffEntries?: number;

  /**
   * The compression types supported by the client.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=constraints.supportedCompressions",
  })
  constraintsSupportedCompressions?: WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum[];

  /**
   * Selector specifying which fields to include in a partial response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * OAuth 2.0 token for the current user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oauth_token",
  })
  oauthToken?: string;

  /**
   * Returns response with indentations and line breaks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=prettyPrint",
  })
  prettyPrint?: boolean;

  /**
   * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quotaUser",
  })
  quotaUser?: string;

  /**
   * Required. The threat list to update. Only a single ThreatType should be specified per request. If you want to handle multiple ThreatTypes, you must make one request per ThreatType.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=threatType",
  })
  threatType?: WebriskThreatListsComputeDiffThreatTypeEnum;

  /**
   * Legacy upload protocol for media (e.g. "media", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=uploadType",
  })
  uploadType?: string;

  /**
   * Upload protocol for media (e.g. "raw", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=upload_protocol",
  })
  uploadProtocol?: string;

  /**
   * The current version token of the client for the requested list (the client version that was received from the last successful diff). If the client does not have a version token (this is the first time calling ComputeThreatListDiff), this may be left empty and a full database snapshot will be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=versionToken",
  })
  versionToken?: string;
}

export class WebriskThreatListsComputeDiffResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  googleCloudWebriskV1ComputeThreatListDiffResponse?: shared.GoogleCloudWebriskV1ComputeThreatListDiffResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
