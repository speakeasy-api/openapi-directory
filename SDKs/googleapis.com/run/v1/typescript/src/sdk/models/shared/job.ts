/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { JobSpec } from "./jobspec";
import { JobStatus } from "./jobstatus";
import { ObjectMeta } from "./objectmeta";
import { Expose, Type } from "class-transformer";

/**
 * Job represents the configuration of a single job, which references a container image which is run to completion.
 */
export class Job extends SpeakeasyBase {
  /**
   * Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apiVersion" })
  apiVersion?: string;

  /**
   * Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => ObjectMeta)
  metadata?: ObjectMeta;

  /**
   * JobSpec describes how the job will look.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spec" })
  @Type(() => JobSpec)
  spec?: JobSpec;

  /**
   * JobStatus represents the current state of a Job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => JobStatus)
  status?: JobStatus;
}
