"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Any, Optional

class Offers:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def offers_lounges_by_location_get(self, request: operations.OffersLoungesByLocationGetRequest, security: operations.OffersLoungesByLocationGetSecurity) -> operations.OffersLoungesByLocationGetResponse:
        r"""Lounges
        Lounge information
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.OffersLoungesByLocationGetRequest, base_url, '/offers/lounges/{location}', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.OffersLoungesByLocationGetRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.OffersLoungesByLocationGetResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[dict[str, Any]])
                res.offers_lounges_by_location_get_200_application_json_object = out

        return res

    def offers_seatmaps_destination_date_cabin_class_by_flight_number_and_origin_get(self, request: operations.OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetRequest, security: operations.OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetSecurity) -> operations.OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetResponse:
        r"""Seat Maps
        Cabin layout and seat characteristics.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetRequest, base_url, '/offers/seatmaps/{flightNumber}/{origin}/{destination}/{date}/{cabinClass}', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[dict[str, Any]])
                res.offers_seatmaps_destination_date_cabin_class_by_flight_number_and_origin_get_200_application_json_object = out

        return res

    