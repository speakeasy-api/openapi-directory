// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateCostCategoryDefinitionXAmzTargetEnum
type CreateCostCategoryDefinitionXAmzTargetEnum string

const (
	CreateCostCategoryDefinitionXAmzTargetEnumAwsInsightsIndexServiceCreateCostCategoryDefinition CreateCostCategoryDefinitionXAmzTargetEnum = "AWSInsightsIndexService.CreateCostCategoryDefinition"
)

func (e CreateCostCategoryDefinitionXAmzTargetEnum) ToPointer() *CreateCostCategoryDefinitionXAmzTargetEnum {
	return &e
}

func (e *CreateCostCategoryDefinitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSInsightsIndexService.CreateCostCategoryDefinition":
		*e = CreateCostCategoryDefinitionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCostCategoryDefinitionXAmzTargetEnum: %v", v)
	}
}

type CreateCostCategoryDefinitionRequest struct {
	CreateCostCategoryDefinitionRequest shared.CreateCostCategoryDefinitionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          CreateCostCategoryDefinitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateCostCategoryDefinitionResponse struct {
	ContentType string
	// Success
	CreateCostCategoryDefinitionResponse *shared.CreateCostCategoryDefinitionResponse
	// LimitExceededException
	LimitExceededException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
}
