// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PartnerEntityStatusEnum - Output only. The status of the partner.
type PartnerEntityStatusEnum string

const (
	PartnerEntityStatusEnumEntityStatusUnspecified          PartnerEntityStatusEnum = "ENTITY_STATUS_UNSPECIFIED"
	PartnerEntityStatusEnumEntityStatusActive               PartnerEntityStatusEnum = "ENTITY_STATUS_ACTIVE"
	PartnerEntityStatusEnumEntityStatusArchived             PartnerEntityStatusEnum = "ENTITY_STATUS_ARCHIVED"
	PartnerEntityStatusEnumEntityStatusDraft                PartnerEntityStatusEnum = "ENTITY_STATUS_DRAFT"
	PartnerEntityStatusEnumEntityStatusPaused               PartnerEntityStatusEnum = "ENTITY_STATUS_PAUSED"
	PartnerEntityStatusEnumEntityStatusScheduledForDeletion PartnerEntityStatusEnum = "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
)

func (e PartnerEntityStatusEnum) ToPointer() *PartnerEntityStatusEnum {
	return &e
}

func (e *PartnerEntityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENTITY_STATUS_UNSPECIFIED":
		fallthrough
	case "ENTITY_STATUS_ACTIVE":
		fallthrough
	case "ENTITY_STATUS_ARCHIVED":
		fallthrough
	case "ENTITY_STATUS_DRAFT":
		fallthrough
	case "ENTITY_STATUS_PAUSED":
		fallthrough
	case "ENTITY_STATUS_SCHEDULED_FOR_DELETION":
		*e = PartnerEntityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PartnerEntityStatusEnum: %v", v)
	}
}

// Partner - A single partner in Display & Video 360 (DV360).
type Partner struct {
	// Ad server related settings of a partner.
	AdServerConfig *PartnerAdServerConfig `json:"adServerConfig,omitempty"`
	// Settings that control how partner related data may be accessed.
	DataAccessConfig *PartnerDataAccessConfig `json:"dataAccessConfig,omitempty"`
	// The display name of the partner. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// Output only. The status of the partner.
	EntityStatus *PartnerEntityStatusEnum `json:"entityStatus,omitempty"`
	// Settings that control which exchanges are enabled for a partner.
	ExchangeConfig *ExchangeConfig `json:"exchangeConfig,omitempty"`
	// General settings of a partner.
	GeneralConfig *PartnerGeneralConfig `json:"generalConfig,omitempty"`
	// Output only. The resource name of the partner.
	Name *string `json:"name,omitempty"`
	// Output only. The unique ID of the partner. Assigned by the system.
	PartnerID *string `json:"partnerId,omitempty"`
	// Output only. The timestamp when the partner was last updated. Assigned by the system.
	UpdateTime *string `json:"updateTime,omitempty"`
}
