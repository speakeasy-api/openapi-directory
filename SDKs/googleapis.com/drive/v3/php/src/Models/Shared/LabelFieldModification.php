<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LabelFieldModification - A modification to a label's field.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LabelFieldModification
{
    /**
     * The ID of the Field to be modified.
     * 
     * @var ?string $fieldId
     */
	#[\JMS\Serializer\Annotation\SerializedName('fieldId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fieldId = null;
    
    /**
     * This is always drive#labelFieldModification.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Replaces a dateString field with these new values. The values must be strings in the RFC 3339 full-date format: YYYY-MM-DD.
     * 
     * @var ?array<\DateTime> $setDateValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('setDateValues')]
    #[\JMS\Serializer\Annotation\Type('array<DateTime>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $setDateValues = null;
    
    /**
     * Replaces an integer field with these new values.
     * 
     * @var ?array<string> $setIntegerValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('setIntegerValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $setIntegerValues = null;
    
    /**
     * Replaces a selection field with these new values.
     * 
     * @var ?array<string> $setSelectionValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('setSelectionValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $setSelectionValues = null;
    
    /**
     * Replaces a text field with these new values.
     * 
     * @var ?array<string> $setTextValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('setTextValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $setTextValues = null;
    
    /**
     * Replaces a user field with these new values. The values must be valid email addresses.
     * 
     * @var ?array<string> $setUserValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('setUserValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $setUserValues = null;
    
    /**
     * Unsets the values for this field.
     * 
     * @var ?bool $unsetValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('unsetValues')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $unsetValues = null;
    
	public function __construct()
	{
		$this->fieldId = null;
		$this->kind = null;
		$this->setDateValues = null;
		$this->setIntegerValues = null;
		$this->setSelectionValues = null;
		$this->setTextValues = null;
		$this->setUserValues = null;
		$this->unsetValues = null;
	}
}
