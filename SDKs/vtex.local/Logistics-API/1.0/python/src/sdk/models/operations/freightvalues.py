"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class FreightValuesRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"""  
    carrier_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'carrierId', 'style': 'simple', 'explode': False }})
    r"""Carrier ID"""  
    cep: str = dataclasses.field(metadata={'path_param': { 'field_name': 'cep', 'style': 'simple', 'explode': False }})
    r"""Postal code."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FreightValues200ApplicationJSON:
    
    absolute_money_cost: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('absoluteMoneyCost') }})  
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})  
    max_volume: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxVolume') }})  
    minimum_value_insurance: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumValueInsurance') }})  
    operation_type: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operationType') }})  
    polygon: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('polygon') }})  
    price_percent: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pricePercent') }})  
    price_percent_by_weight: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pricePercentByWeight') }})  
    restricted_freights: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restrictedFreights') }})  
    time_cost: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeCost') }})  
    weight_end: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weightEnd') }})  
    weight_start: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weightStart') }})  
    zip_code_end: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zipCodeEnd') }})  
    zip_code_start: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zipCodeStart') }})  
    

@dataclasses.dataclass
class FreightValuesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    freight_values_200_application_json_objects: Optional[list[FreightValues200ApplicationJSON]] = dataclasses.field(default=None)
    r"""OK"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    