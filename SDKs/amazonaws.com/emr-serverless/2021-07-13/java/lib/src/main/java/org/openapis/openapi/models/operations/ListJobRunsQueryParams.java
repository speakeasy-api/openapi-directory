/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListJobRunsQueryParams {
    /**
     * The lower bound of the option to filter by creation date and time.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdAtAfter")
    public OffsetDateTime createdAtAfter;
    public ListJobRunsQueryParams withCreatedAtAfter(OffsetDateTime createdAtAfter) {
        this.createdAtAfter = createdAtAfter;
        return this;
    }
    
    /**
     * The upper bound of the option to filter by creation date and time.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdAtBefore")
    public OffsetDateTime createdAtBefore;
    public ListJobRunsQueryParams withCreatedAtBefore(OffsetDateTime createdAtBefore) {
        this.createdAtBefore = createdAtBefore;
        return this;
    }
    
    /**
     * The maximum number of job runs that can be listed.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public ListJobRunsQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token for the next set of job run results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListJobRunsQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * An optional filter for job run states. Note that if this filter contains multiple states, the resulting list will be grouped by the state.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=states")
    public org.openapis.openapi.models.shared.JobRunStateEnum[] states;
    public ListJobRunsQueryParams withStates(org.openapis.openapi.models.shared.JobRunStateEnum[] states) {
        this.states = states;
        return this;
    }
    
}
