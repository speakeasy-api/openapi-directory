// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ShareProfileAcknowledgementStatusEnum string

const (
	ShareProfileAcknowledgementStatusEnumSuccess ShareProfileAcknowledgementStatusEnum = "SUCCESS"
	ShareProfileAcknowledgementStatusEnumFailure ShareProfileAcknowledgementStatusEnum = "FAILURE"
)

func (e ShareProfileAcknowledgementStatusEnum) ToPointer() *ShareProfileAcknowledgementStatusEnum {
	return &e
}

func (e *ShareProfileAcknowledgementStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		fallthrough
	case "FAILURE":
		*e = ShareProfileAcknowledgementStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ShareProfileAcknowledgementStatusEnum: %v", v)
	}
}

type ShareProfileAcknowledgement struct {
	HealthID string                                `json:"healthId"`
	Status   ShareProfileAcknowledgementStatusEnum `json:"status"`
}
