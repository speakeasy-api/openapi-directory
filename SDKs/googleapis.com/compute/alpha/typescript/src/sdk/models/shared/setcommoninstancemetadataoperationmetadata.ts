/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo } from "./setcommoninstancemetadataoperationmetadataperlocationoperationinfo";
import { Expose, Transform } from "class-transformer";

/**
 * Encapsulates partial completion metadata for SetCommonInstanceMetadata. Will be propagated on Operation.metadata as per go/partial-completion-api-clean. See go/gce-aips/2822 for API council results.
 */
export class SetCommonInstanceMetadataOperationMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "clientOperationId" })
  clientOperationId?: string;

  @SpeakeasyMetadata({
    elemType:
      SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo,
  })
  @Expose({ name: "perLocationOperations" })
  @Transform(
    ({ value }) => {
      const obj: Record<
        string,
        SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo
      > = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  perLocationOperations?: Record<
    string,
    SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo
  >;
}
