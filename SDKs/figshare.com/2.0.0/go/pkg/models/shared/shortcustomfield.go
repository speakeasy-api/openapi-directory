// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ShortCustomFieldFieldTypeEnum - Custom field type
type ShortCustomFieldFieldTypeEnum string

const (
	ShortCustomFieldFieldTypeEnumText              ShortCustomFieldFieldTypeEnum = "text"
	ShortCustomFieldFieldTypeEnumTextarea          ShortCustomFieldFieldTypeEnum = "textarea"
	ShortCustomFieldFieldTypeEnumDropdown          ShortCustomFieldFieldTypeEnum = "dropdown"
	ShortCustomFieldFieldTypeEnumURL               ShortCustomFieldFieldTypeEnum = "url"
	ShortCustomFieldFieldTypeEnumEmail             ShortCustomFieldFieldTypeEnum = "email"
	ShortCustomFieldFieldTypeEnumDate              ShortCustomFieldFieldTypeEnum = "date"
	ShortCustomFieldFieldTypeEnumDropdownLargeList ShortCustomFieldFieldTypeEnum = "dropdown_large_list"
)

func (e *ShortCustomFieldFieldTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "text":
		fallthrough
	case "textarea":
		fallthrough
	case "dropdown":
		fallthrough
	case "url":
		fallthrough
	case "email":
		fallthrough
	case "date":
		fallthrough
	case "dropdown_large_list":
		*e = ShortCustomFieldFieldTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ShortCustomFieldFieldTypeEnum: %s", s)
	}
}

type ShortCustomField struct {
	// Custom field type
	FieldType ShortCustomFieldFieldTypeEnum `json:"field_type"`
	// Custom field id
	ID int64 `json:"id"`
	// Custom field name
	Name string `json:"name"`
}
