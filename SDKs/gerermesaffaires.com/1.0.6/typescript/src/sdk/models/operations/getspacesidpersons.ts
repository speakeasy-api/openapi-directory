/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Status of the person
 */
export enum GetSpacesIdPersonsValidatedEnum {
  True = "true",
  False = "false",
}

export class GetSpacesIdPersonsRequest extends SpeakeasyBase {
  /**
   * Email of the person
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Email" })
  email?: string;

  /**
   * Function of the person
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Function",
  })
  function?: string;

  /**
   * Name of the person
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Name" })
  name?: string;

  /**
   * index range of the results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Range" })
  range?: string;

  /**
   * Status of the person
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Validated",
  })
  validated?: GetSpacesIdPersonsValidatedEnum;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class GetSpacesIdPersonsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of persons
   */
  @SpeakeasyMetadata({ elemType: shared.Person })
  getSpacesIdPersons200ApplicationJSONAllOfs?: shared.Person[];
}
