"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransferEntry:
    r"""Contains details of the transfer request."""
    
    credits: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credits') }})
    r"""The amount of credits to transfer."""  
    to_user_id: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toUserId') }})
    r"""The numeric user ID of the account that will receive the credits.
    The ID must match the username.
    """  
    to_username: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toUsername') }})
    r"""The username of the account that will receive the credits."""  
    comment_on_from: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commentOnFrom'), 'exclude': lambda f: f is None }})
    r"""An optional note that will be shown on the credit history of your account.
    The maximum length of the comment is 100.
    """  
    comment_on_to: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commentOnTo'), 'exclude': lambda f: f is None }})
    r"""An optional note that will be shown on the credit history of the recipient's account.
    The maximum length of the comment is 100.
    """  
    