/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * A boolean parameter. If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
 */
export enum ProvincesOptionalEnum {
  One = "1",
  Zero = "0",
  True = "true",
  False = "false",
}

export class ProvincesRequest extends SpeakeasyBase {
  /**
   * A boolean parameter. If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=optional",
  })
  optional?: ProvincesOptionalEnum;

  /**
   * A calendar year
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

/**
 * OK
 */
export class Provinces200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Province })
  @Expose({ name: "provinces" })
  @Type(() => shared.Province)
  provinces?: shared.Province[];
}

export class ProvincesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  provinces200ApplicationJSONObject?: Provinces200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
