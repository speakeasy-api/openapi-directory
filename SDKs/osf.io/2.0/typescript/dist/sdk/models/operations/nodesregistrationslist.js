"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodesRegistrationsListResponse = exports.NodesRegistrationsListRegistration = exports.NodesRegistrationsListRegistrationRelationships = exports.NodesRegistrationsListRegistrationLinks = exports.NodesRegistrationsListRegistrationAttributes = exports.NodesRegistrationsListRegistrationAttributesCategoryEnum = exports.NodesRegistrationsListRequest = void 0;
var utils_1 = require("../../../internal/utils");
var NodesRegistrationsListRequest = /** @class */ (function (_super) {
    __extends(NodesRegistrationsListRequest, _super);
    function NodesRegistrationsListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=node_id",
        }),
        __metadata("design:type", String)
    ], NodesRegistrationsListRequest.prototype, "nodeId", void 0);
    return NodesRegistrationsListRequest;
}(utils_1.SpeakeasyBase));
exports.NodesRegistrationsListRequest = NodesRegistrationsListRequest;
/**
 * The category of the registered node.
 */
var NodesRegistrationsListRegistrationAttributesCategoryEnum;
(function (NodesRegistrationsListRegistrationAttributesCategoryEnum) {
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Analysis"] = "analysis";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Communication"] = "communication";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Data"] = "data";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Hypothesis"] = "hypothesis";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Instrumentation"] = "instrumentation";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["MethodsAndMeasures"] = "methods and measures";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Procedure"] = "procedure";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Project"] = "project";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Software"] = "software";
    NodesRegistrationsListRegistrationAttributesCategoryEnum["Other"] = "other";
})(NodesRegistrationsListRegistrationAttributesCategoryEnum = exports.NodesRegistrationsListRegistrationAttributesCategoryEnum || (exports.NodesRegistrationsListRegistrationAttributesCategoryEnum = {}));
/**
 * The properties of the registration entity.
 */
var NodesRegistrationsListRegistrationAttributes = /** @class */ (function (_super) {
    __extends(NodesRegistrationsListRegistrationAttributes, _super);
    function NodesRegistrationsListRegistrationAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "collection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "currentUserCanComment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "currentUserPermissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "dateCreated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "dateModified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "dateRegistered", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "dateWithdrawn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "embargoEndDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "fork", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "nodeLicense", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "pendingEmbargoApproval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "pendingRegistrationApproval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "pendingWithdrawal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "preprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "public", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "registeredMeta", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "registration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "registrationSupplement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "templateFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "withdrawalJustification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesRegistrationsListRegistrationAttributes.prototype, "withdrawn", void 0);
    return NodesRegistrationsListRegistrationAttributes;
}(utils_1.SpeakeasyBase));
exports.NodesRegistrationsListRegistrationAttributes = NodesRegistrationsListRegistrationAttributes;
/**
 * URLs to alternative representations of the registrations entity.
 */
var NodesRegistrationsListRegistrationLinks = /** @class */ (function (_super) {
    __extends(NodesRegistrationsListRegistrationLinks, _super);
    function NodesRegistrationsListRegistrationLinks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationLinks.prototype, "html", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationLinks.prototype, "self", void 0);
    return NodesRegistrationsListRegistrationLinks;
}(utils_1.SpeakeasyBase));
exports.NodesRegistrationsListRegistrationLinks = NodesRegistrationsListRegistrationLinks;
/**
 * URLs to other entities or entity collections that have a relationship to the registration entity.
 */
var NodesRegistrationsListRegistrationRelationships = /** @class */ (function (_super) {
    __extends(NodesRegistrationsListRegistrationRelationships, _super);
    function NodesRegistrationsListRegistrationRelationships() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "affiliatedInstitutions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "children", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "citation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "comments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "contributors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "files", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "forks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "identifiers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "linkedNodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "logs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "nodeLinks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "parent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "registeredBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "registeredFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "registrationSchema", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "root", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "viewOnlyLinks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistrationRelationships.prototype, "wikis", void 0);
    return NodesRegistrationsListRegistrationRelationships;
}(utils_1.SpeakeasyBase));
exports.NodesRegistrationsListRegistrationRelationships = NodesRegistrationsListRegistrationRelationships;
var NodesRegistrationsListRegistration = /** @class */ (function (_super) {
    __extends(NodesRegistrationsListRegistration, _super);
    function NodesRegistrationsListRegistration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", NodesRegistrationsListRegistrationAttributes)
    ], NodesRegistrationsListRegistration.prototype, "attributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistration.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", NodesRegistrationsListRegistrationLinks)
    ], NodesRegistrationsListRegistration.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", NodesRegistrationsListRegistrationRelationships)
    ], NodesRegistrationsListRegistration.prototype, "relationships", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListRegistration.prototype, "type", void 0);
    return NodesRegistrationsListRegistration;
}(utils_1.SpeakeasyBase));
exports.NodesRegistrationsListRegistration = NodesRegistrationsListRegistration;
var NodesRegistrationsListResponse = /** @class */ (function (_super) {
    __extends(NodesRegistrationsListResponse, _super);
    function NodesRegistrationsListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], NodesRegistrationsListResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesRegistrationsListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], NodesRegistrationsListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], NodesRegistrationsListResponse.prototype, "rawResponse", void 0);
    return NodesRegistrationsListResponse;
}(utils_1.SpeakeasyBase));
exports.NodesRegistrationsListResponse = NodesRegistrationsListResponse;
