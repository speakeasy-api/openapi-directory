/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApplicationReport - Information reported about an installed app.
 */
public class ApplicationReport {
    /**
     * The source of the package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationSource")
    public ApplicationReportApplicationSourceEnum applicationSource;
    public ApplicationReport withApplicationSource(ApplicationReportApplicationSourceEnum applicationSource) {
        this.applicationSource = applicationSource;
        return this;
    }
    
    /**
     * The display name of the app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public ApplicationReport withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The list of app events which have occurred in the last 30 hours.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("events")
    public ApplicationEvent[] events;
    public ApplicationReport withEvents(ApplicationEvent[] events) {
        this.events = events;
        return this;
    }
    
    /**
     * The package name of the app that installed this app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("installerPackageName")
    public String installerPackageName;
    public ApplicationReport withInstallerPackageName(String installerPackageName) {
        this.installerPackageName = installerPackageName;
        return this;
    }
    
    /**
     * List of keyed app states reported by the app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyedAppStates")
    public KeyedAppState[] keyedAppStates;
    public ApplicationReport withKeyedAppStates(KeyedAppState[] keyedAppStates) {
        this.keyedAppStates = keyedAppStates;
        return this;
    }
    
    /**
     * Package name of the app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageName")
    public String packageName;
    public ApplicationReport withPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }
    
    /**
     * The SHA-256 hash of the app's APK file, which can be used to verify the app hasn't been modified. Each byte of the hash value is represented as a two-digit hexadecimal number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageSha256Hash")
    public String packageSha256Hash;
    public ApplicationReport withPackageSha256Hash(String packageSha256Hash) {
        this.packageSha256Hash = packageSha256Hash;
        return this;
    }
    
    /**
     * The SHA-1 hash of each android.content.pm.Signature (https://developer.android.com/reference/android/content/pm/Signature.html) associated with the app package. Each byte of each hash value is represented as a two-digit hexadecimal number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signingKeyCertFingerprints")
    public String[] signingKeyCertFingerprints;
    public ApplicationReport withSigningKeyCertFingerprints(String[] signingKeyCertFingerprints) {
        this.signingKeyCertFingerprints = signingKeyCertFingerprints;
        return this;
    }
    
    /**
     * Application state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ApplicationReportStateEnum state;
    public ApplicationReport withState(ApplicationReportStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The app version code, which can be used to determine whether one version is more recent than another.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionCode")
    public Integer versionCode;
    public ApplicationReport withVersionCode(Integer versionCode) {
        this.versionCode = versionCode;
        return this;
    }
    
    /**
     * The app version as displayed to the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionName")
    public String versionName;
    public ApplicationReport withVersionName(String versionName) {
        this.versionName = versionName;
        return this;
    }
    
}
