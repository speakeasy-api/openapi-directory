// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CloudInterconnectWorkloadInterconnectTypeEnum - Vlan attachment type.
type CloudInterconnectWorkloadInterconnectTypeEnum string

const (
	CloudInterconnectWorkloadInterconnectTypeEnumInterconnectTypeUnspecified CloudInterconnectWorkloadInterconnectTypeEnum = "INTERCONNECT_TYPE_UNSPECIFIED"
	CloudInterconnectWorkloadInterconnectTypeEnumInterconnectTypeDedicated   CloudInterconnectWorkloadInterconnectTypeEnum = "INTERCONNECT_TYPE_DEDICATED"
	CloudInterconnectWorkloadInterconnectTypeEnumInterconnectTypePartner     CloudInterconnectWorkloadInterconnectTypeEnum = "INTERCONNECT_TYPE_PARTNER"
)

func (e CloudInterconnectWorkloadInterconnectTypeEnum) ToPointer() *CloudInterconnectWorkloadInterconnectTypeEnum {
	return &e
}

func (e *CloudInterconnectWorkloadInterconnectTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INTERCONNECT_TYPE_UNSPECIFIED":
		fallthrough
	case "INTERCONNECT_TYPE_DEDICATED":
		fallthrough
	case "INTERCONNECT_TYPE_PARTNER":
		*e = CloudInterconnectWorkloadInterconnectTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudInterconnectWorkloadInterconnectTypeEnum: %v", v)
	}
}

// CloudInterconnectWorkloadLinkTypeEnum - Interconnect circuit link type.
type CloudInterconnectWorkloadLinkTypeEnum string

const (
	CloudInterconnectWorkloadLinkTypeEnumLinkTypeUnspecified    CloudInterconnectWorkloadLinkTypeEnum = "LINK_TYPE_UNSPECIFIED"
	CloudInterconnectWorkloadLinkTypeEnumLinkTypeEthernet10GLr  CloudInterconnectWorkloadLinkTypeEnum = "LINK_TYPE_ETHERNET_10G_LR"
	CloudInterconnectWorkloadLinkTypeEnumLinkTypeEthernet100GLr CloudInterconnectWorkloadLinkTypeEnum = "LINK_TYPE_ETHERNET_100G_LR"
)

func (e CloudInterconnectWorkloadLinkTypeEnum) ToPointer() *CloudInterconnectWorkloadLinkTypeEnum {
	return &e
}

func (e *CloudInterconnectWorkloadLinkTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LINK_TYPE_UNSPECIFIED":
		fallthrough
	case "LINK_TYPE_ETHERNET_10G_LR":
		fallthrough
	case "LINK_TYPE_ETHERNET_100G_LR":
		*e = CloudInterconnectWorkloadLinkTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudInterconnectWorkloadLinkTypeEnum: %v", v)
	}
}

// CloudInterconnectWorkload - Specifies usage for Cloud Interconnect resources.
type CloudInterconnectWorkload struct {
	// VLAN attachment used for interconnect.
	InterconnectAttachments []VlanAttachment `json:"interconnectAttachments,omitempty"`
	// Vlan attachment type.
	InterconnectType *CloudInterconnectWorkloadInterconnectTypeEnum `json:"interconnectType,omitempty"`
	// Interconnect circuit link type.
	LinkType *CloudInterconnectWorkloadLinkTypeEnum `json:"linkType,omitempty"`
	// An amount of usage over a time frame.
	ProvisionedLinkCount *Usage `json:"provisionedLinkCount,omitempty"`
}
