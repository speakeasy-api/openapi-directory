"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import beleg as shared_beleg
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BelegeBelegeGruppe:
    
    belege_kompakt: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Belege-kompakt') }})  
    signaturzertifikat: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Signaturzertifikat') }})  
    zertifizierungsstellen: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Zertifizierungsstellen') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Belege:
    r"""The `Beleg` collection from the \\"Datenerfassungsprotokoll\\"."""
    
    belege: Optional[list[shared_beleg.Beleg]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Belege'), 'exclude': lambda f: f is None }})  
    belege_gruppe: Optional[list[BelegeBelegeGruppe]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Belege-Gruppe'), 'exclude': lambda f: f is None }})  
    