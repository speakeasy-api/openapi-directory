<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BillbeeInterfacesBillbeeAPIModelShipment - Represents a single shipment.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BillbeeInterfacesBillbeeAPIModelShipment
{
    /**
     * The billbee internal id of the shipment
     * 
     * @var ?int $billbeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('BillbeeId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $billbeeId = null;
    
    /**
     * The creation date
     * 
     * @var ?\DateTime $created
     */
	#[\JMS\Serializer\Annotation\SerializedName('Created')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $created = null;
    
    /**
     * Shipment Type, 0 if Shipment, 1 if Retoure
     * 
     * @var ?int $shipmentType
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShipmentType')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $shipmentType = null;
    
    /**
     * The name of the shipping provider
     * 
     * @var ?string $shipper
     */
	#[\JMS\Serializer\Annotation\SerializedName('Shipper')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shipper = null;
    
    /**
     * The carrier used to ship the parcel with
     * 
     * @var ?int $shippingCarrier
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingCarrier')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $shippingCarrier = null;
    
    /**
     * The id of this shipment
     * 
     * @var ?string $shippingId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shippingId = null;
    
    /**
     * The id of the used shipping provider
     * 
     * @var ?int $shippingProviderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingProviderId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $shippingProviderId = null;
    
    /**
     * The id of the used shipping provider product
     * 
     * @var ?int $shippingProviderProductId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingProviderProductId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $shippingProviderProductId = null;
    
    /**
     * The url to track this shipment
     * 
     * @var ?string $trackingUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('TrackingUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $trackingUrl = null;
    
	public function __construct()
	{
		$this->billbeeId = null;
		$this->created = null;
		$this->shipmentType = null;
		$this->shipper = null;
		$this->shippingCarrier = null;
		$this->shippingId = null;
		$this->shippingProviderId = null;
		$this->shippingProviderProductId = null;
		$this->trackingUrl = null;
	}
}
