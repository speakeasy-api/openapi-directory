/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserRole - Contains properties of auser role, which is used to manage user access.
 */
public class UserRole {
    /**
     * Account ID of this user role. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public UserRole withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Whether this is a default user role. Default user roles are created by the system for the account/subaccount and cannot be modified or deleted. Each default user role comes with a basic set of preassigned permissions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultUserRole")
    public Boolean defaultUserRole;
    public UserRole withDefaultUserRole(Boolean defaultUserRole) {
        this.defaultUserRole = defaultUserRole;
        return this;
    }
    
    /**
     * ID of this user role. This is a read-only, auto-generated field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public UserRole withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRole".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public UserRole withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Name of this user role. This is a required field. Must be less than 256 characters long. If this user role is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this user role is a top-level user role, and the name must be unique among top-level user roles of the same account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UserRole withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * ID of the user role that this user role is based on or copied from. This is a required field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentUserRoleId")
    public String parentUserRoleId;
    public UserRole withParentUserRoleId(String parentUserRoleId) {
        this.parentUserRoleId = parentUserRoleId;
        return this;
    }
    
    /**
     * List of permissions associated with this user role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public UserRolePermission[] permissions;
    public UserRole withPermissions(UserRolePermission[] permissions) {
        this.permissions = permissions;
        return this;
    }
    
    /**
     * Subaccount ID of this user role. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subaccountId")
    public String subaccountId;
    public UserRole withSubaccountId(String subaccountId) {
        this.subaccountId = subaccountId;
        return this;
    }
    
}
