/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MeasureValueTypeEnum } from "./measurevaluetypeenum";
import { MultiMeasureAttributeMapping } from "./multimeasureattributemapping";
import { Expose, Type } from "class-transformer";

/**
 * <p/>
 */
export class MixedMeasureMapping extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MeasureName" })
  measureName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MeasureValueType" })
  measureValueType: MeasureValueTypeEnum;

  @SpeakeasyMetadata({ elemType: MultiMeasureAttributeMapping })
  @Expose({ name: "MultiMeasureAttributeMappings" })
  @Type(() => MultiMeasureAttributeMapping)
  multiMeasureAttributeMappings?: MultiMeasureAttributeMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "SourceColumn" })
  sourceColumn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TargetMeasureName" })
  targetMeasureName?: string;
}
