// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// BrandedFoodObjectItemsCountryDetails - An object containing additional information on the countries where this item is found
type BrandedFoodObjectItemsCountryDetails struct {
	// The number of countries where English is the country's primary language
	EnglishSpeaking *int64 `json:"english_speaking,omitempty"`
	// The number of countries where English is not the country's primary language
	NonEnglishSpeaking *int64 `json:"non_english_speaking,omitempty"`
}

// BrandedFoodObjectItemsDietFlags - An object containing information on an individual ingredient that was flagged as potentially not being compatible with a certain diet
type BrandedFoodObjectItemsDietFlags struct {
	// A description of how we graded this ingredient for compatibility with the diet
	CompatibilityDescription *string `json:"compatibility_description,omitempty"`
	// A numeric representation of if we believe this ingredient is compatible with the diet. Higher values indicate more compatibility
	CompatibilityLevel *int64 `json:"compatibility_level,omitempty"`
	// Name of the diet with which this ingredient may not be compatible
	DietLabel *string `json:"diet_label,omitempty"`
	// Ingredient name
	Ingredient *string `json:"ingredient,omitempty"`
	// Description of the ingredient
	IngredientDescription *string `json:"ingredient_description,omitempty"`
	// Boolean representing if the ingredient is a known allergen
	IsAllergen *bool `json:"is_allergen,omitempty"`
	// A description of if we believe this ingredient is compatible with the diet
	IsCompatible *string `json:"is_compatible,omitempty"`
}

// BrandedFoodObjectItemsDietLabelsGlutenFree - An object containing information on this item's compatibility with Gluten Free diets
type BrandedFoodObjectItemsDietLabelsGlutenFree struct {
	// Numeric representation of how compatible this item is with this diet. Higher values indicate more compatibility
	CompatibilityLevel *int64 `json:"compatibility_level,omitempty"`
	// Boolean that indicates if we are confident in how this item is graded for this diet
	Confidence *int64 `json:"confidence,omitempty"`
	// Description of our confidence that this item was graded correctly
	ConfidenceDescription *string `json:"confidence_description,omitempty"`
	// Boolean describing if this item is compatible with this diet
	IsCompatible *bool `json:"is_compatible,omitempty"`
	// Diet name
	Name *string `json:"name,omitempty"`
}

// BrandedFoodObjectItemsDietLabelsVegan - An object containing information on this item's compatibility with the Vegan diets
type BrandedFoodObjectItemsDietLabelsVegan struct {
	// Numeric representation of how compatible this item is with this diet. Higher values indicate more compatibility
	CompatibilityLevel *int64 `json:"compatibility_level,omitempty"`
	// Boolean that indicates if we are confident in how this item is graded for this diet
	Confidence *int64 `json:"confidence,omitempty"`
	// Description of our confidence that this item was graded correctly
	ConfidenceDescription *string `json:"confidence_description,omitempty"`
	// Boolean describing if this item is compatible with this diet
	IsCompatible *bool `json:"is_compatible,omitempty"`
	// Diet name
	Name *string `json:"name,omitempty"`
}

// BrandedFoodObjectItemsDietLabelsVegetarian - An object containing information on this item's compatibility with Vegetarian diets
type BrandedFoodObjectItemsDietLabelsVegetarian struct {
	// Numeric representation of how compatible this item is with this diet. Higher values indicate more compatibility
	CompatibilityLevel *int64 `json:"compatibility_level,omitempty"`
	// Boolean that indicates if we are confident in how this item is graded for this diet
	Confidence *int64 `json:"confidence,omitempty"`
	// Description of our confidence that this item was graded correctly
	ConfidenceDescription *string `json:"confidence_description,omitempty"`
	// Boolean describing if this item is compatible with this diet
	IsCompatible *bool `json:"is_compatible,omitempty"`
	// Diet name
	Name *string `json:"name,omitempty"`
}

// BrandedFoodObjectItemsDietLabels - An object containing this item's compatibility grades for each supported diet
type BrandedFoodObjectItemsDietLabels struct {
	// An object containing information on this item's compatibility with Gluten Free diets
	GlutenFree *BrandedFoodObjectItemsDietLabelsGlutenFree `json:"gluten_free,omitempty"`
	// An object containing information on this item's compatibility with the Vegan diets
	Vegan *BrandedFoodObjectItemsDietLabelsVegan `json:"vegan,omitempty"`
	// An object containing information on this item's compatibility with Vegetarian diets
	Vegetarian *BrandedFoodObjectItemsDietLabelsVegetarian `json:"vegetarian,omitempty"`
}

// BrandedFoodObjectItemsNutrients - An object containing information for a specific nutrient found in this food item
type BrandedFoodObjectItemsNutrients struct {
	// Number of observations on which the value is based
	DataPoints *int64 `json:"data_points,omitempty"`
	// Description of the nutrient source
	Description *string `json:"description,omitempty"`
	// The unit used for the measure of this nutrient
	MeasurementUnit *string `json:"measurement_unit,omitempty"`
	// Nutrient name
	Name *string `json:"name,omitempty"`
	// Amount of the nutrient per 100g of food
	Per100g *float64 `json:"per_100g,omitempty"`
	// Nutrient rank
	Rank *int64 `json:"rank,omitempty"`
}

// BrandedFoodObjectItemsPackage - An object containing basic packaging information about this item
type BrandedFoodObjectItemsPackage struct {
	// Package quantity
	Quantity *int64 `json:"quantity,omitempty"`
	// Package size
	Size *string `json:"size,omitempty"`
}

// BrandedFoodObjectItemsPackagingPhotosFront - An object containing photos of the front of this item's packaging
type BrandedFoodObjectItemsPackagingPhotosFront struct {
	// Full-sized photo of the front of this item's packaging
	Display *string `json:"display,omitempty"`
	// Small photo of the front of this item's packaging
	Small *string `json:"small,omitempty"`
	// Thumbnail photo of the front of this item's packaging
	Thumb *string `json:"thumb,omitempty"`
}

// BrandedFoodObjectItemsPackagingPhotosIngredients - An object containing photos of the ingredients on this item's packaging
type BrandedFoodObjectItemsPackagingPhotosIngredients struct {
	// Full-sized photo of the ingredients on this item's packaging
	Display *string `json:"display,omitempty"`
	// Small photo of the ingredients on this item's packaging
	Small *string `json:"small,omitempty"`
	// Thumbnail photo of the ingredients on this item's packaging
	Thumb *string `json:"thumb,omitempty"`
}

// BrandedFoodObjectItemsPackagingPhotosNutrition - An object containing photos of this item's nutrition label
type BrandedFoodObjectItemsPackagingPhotosNutrition struct {
	// Full-sized photo of this item's nutrition label
	Display *string `json:"display,omitempty"`
	// Small photo of this item's nutrition label
	Small *string `json:"small,omitempty"`
	// Thumbnail photo of this item's nutrition label
	Thumb *string `json:"thumb,omitempty"`
}

// BrandedFoodObjectItemsPackagingPhotos - A object containing a collection of photos of this item's packaging
type BrandedFoodObjectItemsPackagingPhotos struct {
	// An object containing photos of the front of this item's packaging
	Front *BrandedFoodObjectItemsPackagingPhotosFront `json:"front,omitempty"`
	// An object containing photos of the ingredients on this item's packaging
	Ingredients *BrandedFoodObjectItemsPackagingPhotosIngredients `json:"ingredients,omitempty"`
	// An object containing photos of this item's nutrition label
	Nutrition *BrandedFoodObjectItemsPackagingPhotosNutrition `json:"nutrition,omitempty"`
}

// BrandedFoodObjectItemsServing - An object containing serving information for this item
type BrandedFoodObjectItemsServing struct {
	// Measurement unit for each serving (e.g. if measure is 3 tsp, the unit is tsp)
	MeasurementUnit *string `json:"measurement_unit,omitempty"`
	// Serving size
	Size *string `json:"size,omitempty"`
	// Serving size description
	SizeFulltext *string `json:"size_fulltext,omitempty"`
}

// BrandedFoodObjectItems - An object containing information for this specific item.
type BrandedFoodObjectItems struct {
	// An array of ingredients in this item that may cause allergic reactions in people
	Allergens []string `json:"allergens,omitempty"`
	// EAN/UPC barcode
	Barcode *string `json:"barcode,omitempty"`
	// The brand name that owns this item
	Brand *string `json:"brand,omitempty"`
	// An array of brands we have associated with this item. Some items are sold by more than 1 brand.
	BrandList  []string `json:"brand_list,omitempty"`
	Categories []string `json:"categories,omitempty"`
	// An array of countries where this item is sold
	Countries []string `json:"countries,omitempty"`
	// An object containing additional information on the countries where this item is found
	CountryDetails *BrandedFoodObjectItemsCountryDetails `json:"country_details,omitempty"`
	// A description of this item
	Description *string `json:"description,omitempty"`
	// An array of ingredient objects that were flagged while grading this item for compatibility with each diet
	DietFlags []BrandedFoodObjectItemsDietFlags `json:"diet_flags,omitempty"`
	// An object containing this item's compatibility grades for each supported diet
	DietLabels *BrandedFoodObjectItemsDietLabels `json:"diet_labels,omitempty"`
	// A boolean indicating if we have English ingredients for this item
	HasEnglishIngredients *bool `json:"has_english_ingredients,omitempty"`
	// An array of this item's ingredients
	IngredientList []string `json:"ingredient_list,omitempty"`
	// This food item's ingredients from greatest quantity to least
	Ingredients *string `json:"ingredients,omitempty"`
	// An array of keywords that can be used to describe this item
	Keywords []string `json:"keywords,omitempty"`
	// An array of minerals that this item contains
	Minerals []string `json:"minerals,omitempty"`
	// Item name as provided by brand owner or as shown on packaging
	Name *string `json:"name,omitempty"`
	// An array containing nutrient informatio objects for this food item
	Nutrients []BrandedFoodObjectItemsNutrients `json:"nutrients,omitempty"`
	// An object containing basic packaging information about this item
	Package *BrandedFoodObjectItemsPackage `json:"package,omitempty"`
	// A object containing a collection of photos of this item's packaging
	PackagingPhotos *BrandedFoodObjectItemsPackagingPhotos `json:"packaging_photos,omitempty"`
	// An array of ingredients made from palm oil
	PalmOilIngredients []string `json:"palm_oil_ingredients,omitempty"`
	// An object containing serving information for this item
	Serving *BrandedFoodObjectItemsServing `json:"serving,omitempty"`
	// An array of trace ingredients that may be found in this item
	Traces []string `json:"traces,omitempty"`
	// An array of vitamins that are found in this item
	Vitamins []string `json:"vitamins,omitempty"`
}

// BrandedFoodObject - Please read the description of each field in this API response object example. By default, the value of each field is **null**. This indicates an unknown state or that no data exists.
type BrandedFoodObject struct {
	// An array containing an object for each individual item returned by your API call.
	Items []BrandedFoodObjectItems `json:"items,omitempty"`
}
