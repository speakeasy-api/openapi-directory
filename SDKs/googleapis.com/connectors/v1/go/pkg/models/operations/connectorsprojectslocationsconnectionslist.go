// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ConnectorsProjectsLocationsConnectionsListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ConnectorsProjectsLocationsConnectionsListPathParams struct {
	// Required. Parent resource of the Connection, of the form: `projects/*/locations/*`
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
}

// ConnectorsProjectsLocationsConnectionsListViewEnum - Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.
type ConnectorsProjectsLocationsConnectionsListViewEnum string

const (
	ConnectorsProjectsLocationsConnectionsListViewEnumConnectionViewUnspecified ConnectorsProjectsLocationsConnectionsListViewEnum = "CONNECTION_VIEW_UNSPECIFIED"
	ConnectorsProjectsLocationsConnectionsListViewEnumBasic                     ConnectorsProjectsLocationsConnectionsListViewEnum = "BASIC"
	ConnectorsProjectsLocationsConnectionsListViewEnumFull                      ConnectorsProjectsLocationsConnectionsListViewEnum = "FULL"
)

func (e *ConnectorsProjectsLocationsConnectionsListViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONNECTION_VIEW_UNSPECIFIED":
		fallthrough
	case "BASIC":
		fallthrough
	case "FULL":
		*e = ConnectorsProjectsLocationsConnectionsListViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectorsProjectsLocationsConnectionsListViewEnum: %s", s)
	}
}

type ConnectorsProjectsLocationsConnectionsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Filter.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Order by parameters.
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page size.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Page token.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.
	View *ConnectorsProjectsLocationsConnectionsListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type ConnectorsProjectsLocationsConnectionsListRequest struct {
	PathParams  ConnectorsProjectsLocationsConnectionsListPathParams
	QueryParams ConnectorsProjectsLocationsConnectionsListQueryParams
	Security    ConnectorsProjectsLocationsConnectionsListSecurity
}

type ConnectorsProjectsLocationsConnectionsListResponse struct {
	ContentType string
	// Successful response
	ListConnectionsResponse *shared.ListConnectionsResponse
	StatusCode              int
	RawResponse             *http.Response
}
