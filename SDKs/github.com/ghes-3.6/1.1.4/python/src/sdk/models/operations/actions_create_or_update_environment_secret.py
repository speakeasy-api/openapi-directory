"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsCreateOrUpdateEnvironmentSecretRequestBody:
    
    encrypted_value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encrypted_value') }})
    r"""Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an environment public key](https://docs.github.com/enterprise-server@3.6/rest/reference/actions#get-an-environment-public-key) endpoint."""  
    key_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key_id') }})
    r"""ID of the key you used to encrypt the secret."""  
    

@dataclasses.dataclass
class ActionsCreateOrUpdateEnvironmentSecretRequest:
    
    environment_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'environment_name', 'style': 'simple', 'explode': False }})
    r"""The name of the environment."""  
    repository_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'repository_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the repository."""  
    request_body: ActionsCreateOrUpdateEnvironmentSecretRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    secret_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'secret_name', 'style': 'simple', 'explode': False }})
    r"""The name of the secret."""  
    

@dataclasses.dataclass
class ActionsCreateOrUpdateEnvironmentSecretResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    empty_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Response when creating a secret"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    