// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CodespacesRepoMachinesForAuthenticatedUserPathParams struct {
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type CodespacesRepoMachinesForAuthenticatedUserQueryParams struct {
	// IP for location auto-detection when proxying a request
	ClientIP *string `queryParam:"style=form,explode=true,name=client_ip"`
	// The location to check for available machines. Assigned by IP if not provided.
	Location *string `queryParam:"style=form,explode=true,name=location"`
}

type CodespacesRepoMachinesForAuthenticatedUserRequest struct {
	PathParams  CodespacesRepoMachinesForAuthenticatedUserPathParams
	QueryParams CodespacesRepoMachinesForAuthenticatedUserQueryParams
}

// CodespacesRepoMachinesForAuthenticatedUser200ApplicationJSON - Response
type CodespacesRepoMachinesForAuthenticatedUser200ApplicationJSON struct {
	Machines   []shared.CodespaceMachine `json:"machines"`
	TotalCount int64                     `json:"total_count"`
}

type CodespacesRepoMachinesForAuthenticatedUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Requires authentication
	BasicError *shared.BasicError
	// Response
	CodespacesRepoMachinesForAuthenticatedUser200ApplicationJSONObject *CodespacesRepoMachinesForAuthenticatedUser200ApplicationJSON
}
