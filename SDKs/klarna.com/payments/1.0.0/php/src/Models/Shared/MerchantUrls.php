<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class MerchantUrls
{
    /**
     * URL for receiving the authorization token when payment is completed. Used for Authorization Callback.
     * 
     * @var ?string $authorization
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorization')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authorization = null;
    
    /**
     * URL of the merchant confirmation page. The consumer will be redirected back to the confirmation page if the consumer is sent to the redirect URL after placing the order. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL(max 2000 characters).
     * 
     * @var ?string $confirmation
     */
	#[\JMS\Serializer\Annotation\SerializedName('confirmation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $confirmation = null;
    
    /**
     * URL for notifications on pending orders. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL (max 2000 characters).
     * 
     * @var ?string $notification
     */
	#[\JMS\Serializer\Annotation\SerializedName('notification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notification = null;
    
    /**
     * URL that will be requested when an order is completed. Should be different than checkout and confirmation URLs. Insert {session.id} and/or {order.id} as placeholder to connect either of those IDs to the URL (max 2000 characters).
     * 
     * @var ?string $push
     */
	#[\JMS\Serializer\Annotation\SerializedName('push')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $push = null;
    
	public function __construct()
	{
		$this->authorization = null;
		$this->confirmation = null;
		$this->notification = null;
		$this->push = null;
	}
}
