/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListAppliedSchemaArnsRequestBody {
    /**
     * The ARN of the directory you are listing.
     */
    @JsonProperty("DirectoryArn")
    public String directoryArn;

    public ListAppliedSchemaArnsRequestBody withDirectoryArn(String directoryArn) {
        this.directoryArn = directoryArn;
        return this;
    }
    
    /**
     * The maximum number of results to retrieve.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;

    public ListAppliedSchemaArnsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The pagination token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;

    public ListAppliedSchemaArnsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * The response for &lt;code&gt;ListAppliedSchemaArns&lt;/code&gt; when this parameter is used will list all minor version ARNs for a major version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SchemaArn")
    public String schemaArn;

    public ListAppliedSchemaArnsRequestBody withSchemaArn(String schemaArn) {
        this.schemaArn = schemaArn;
        return this;
    }
    
    public ListAppliedSchemaArnsRequestBody(@JsonProperty("DirectoryArn") String directoryArn) {
        this.directoryArn = directoryArn;
  }
}
