"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReturnPolicyOnlinePolicyTypeEnum(str, Enum):
    r"""Policy type."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    NUMBER_OF_DAYS_AFTER_DELIVERY = 'NUMBER_OF_DAYS_AFTER_DELIVERY'
    NO_RETURNS = 'NO_RETURNS'
    LIFETIME_RETURNS = 'LIFETIME_RETURNS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReturnPolicyOnlinePolicy:
    r"""The available policies."""
    
    days: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('days'), 'exclude': lambda f: f is None }})
    r"""The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. Required for `numberOfDaysAfterDelivery` returns."""  
    type: Optional[ReturnPolicyOnlinePolicyTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Policy type."""  
    