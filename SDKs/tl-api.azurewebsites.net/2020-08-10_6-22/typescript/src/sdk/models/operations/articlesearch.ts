/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ArticleSearchRequest extends SpeakeasyBase {
  /**
   * Active Status 1 : Active, 2: Inactive, 3: All, Default : 1
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=activeStatus",
  })
  activeStatus?: number;

  /**
   * -1 for all gyms
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=gymId" })
  gymId?: number;

  /**
   * number of recode in result and default is 100. use negative numbers to order by desc
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * number of recodes to skip
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * order by column.!-- invalid column will give internal server error
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderBy",
  })
  orderBy?: string;

  /**
   * part of article name
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=searchText",
  })
  searchText?: string;

  /**
   * filter article type. default is 'all'
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: string;
}

export class ArticleSearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiResponse?: shared.ApiResponse;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * API Response with set of a Article entities
   */
  @SpeakeasyMetadata()
  defaultResponseDTOOfListOfArticleSearchDTO?: shared.DefaultResponseDTOOfListOfArticleSearchDTO;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
