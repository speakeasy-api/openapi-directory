/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ListingFinance } from "./listingfinance";
import { ListingLease } from "./listinglease";
import { Expose, Type } from "class-transformer";

/**
 * Represents a car history entry
 */
export class HistoricalListing extends SpeakeasyBase {
  /**
   * Flag to indicate whether listing is carfax_1_owner
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carfax_1_owner" })
  carfax1Owner?: boolean;

  /**
   * Flag to indicate whether listing is carfax_clean_title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carfax_clean_title" })
  carfaxCleanTitle?: boolean;

  /**
   * City of the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Data source of the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data_source" })
  dataSource?: string;

  /**
   * Unique MC assigned dealers id for the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dealer_id" })
  dealerId?: number;

  /**
   * Days on Market value for the car based on current and historical listings found in the Marketcheck database for this car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dom" })
  dom?: number;

  /**
   * Days on Market value for the car based on current and last 6 month listings found in the Marketcheck database for this car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dom_180" })
  dom180?: number;

  /**
   * Days on Market value for the car based on current and last 30 days listings found in the Marketcheck database for this car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dom_active" })
  domActive?: number;

  /**
   * Exterior color of the car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exterior_color" })
  exteriorColor?: string;

  /**
   * Array of all finance offers for this listing
   */
  @SpeakeasyMetadata({ elemType: ListingFinance })
  @Expose({ name: "financing_options" })
  @Type(() => ListingFinance)
  financingOptions?: ListingFinance[];

  /**
   * Listing first seen at first scraped timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_seen_at" })
  firstSeenAt?: number;

  /**
   * Listing first seen at first scraped date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_seen_at_date" })
  firstSeenAtDate?: string;

  /**
   * Listing title as displayed on the source website
   */
  @SpeakeasyMetadata()
  @Expose({ name: "heading" })
  heading?: string;

  /**
   * Unique identifier representing a specific listing from the Marketcheck database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Interior color of the car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interior_color" })
  interiorColor?: string;

  /**
   * Inventory type of car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inventory_type" })
  inventoryType?: string;

  /**
   * Certified car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_certified" })
  isCertified?: number;

  /**
   * Flag to indicate listing is marked searchable or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_searchable" })
  isSearchable?: string;

  /**
   * Listing last seen at (most recent) timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_seen_at" })
  lastSeenAt?: number;

  /**
   * Listing last seen at (most recent) date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_seen_at_date" })
  lastSeenAtDate?: string;

  /**
   * Latitude of the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: string;

  /**
   * Array of all finance offers for this listing
   */
  @SpeakeasyMetadata({ elemType: ListingLease })
  @Expose({ name: "leasing_options" })
  @Type(() => ListingLease)
  leasingOptions?: ListingLease[];

  /**
   * Longitude of the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: string;

  /**
   * Odometer reading / reported miles usage for the car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "miles" })
  miles?: number;

  /**
   * MSRP for the car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "msrp" })
  msrp?: number;

  /**
   * Asking price for the car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Last Odometer reading / reported miles usage for the car. If the asking miles value is not or is available then the last_miles could perhaps be used. last_miles is the miles for the car listed on the source website as of last_miles_dt date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ref_miles" })
  refMiles?: string;

  /**
   * The date at which the last miles was reported online. This is earlier to last_seen_date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ref_miles_dt" })
  refMilesDt?: number;

  /**
   * Last reported price for the car. If the asking price value is not or is available then the last_price could perhaps be used. last_price is the price for the car listed on the source website as of last_price_dt date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ref_price" })
  refPrice?: string;

  /**
   * The date at which the last price was reported online. This is earlier to last_seen_date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ref_price_dt" })
  refPriceDt?: number;

  /**
   * Listing last seen at date timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scraped_at" })
  scrapedAt?: number;

  /**
   * Listing last seen at date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scraped_at_date" })
  scrapedAtDate?: string;

  /**
   * Seller name of the listing from the Marketcheck database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller_name" })
  sellerName?: string;

  /**
   * Seller name of the listing from the Marketcheck database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller_name_o" })
  sellerNameO?: string;

  /**
   * Seller type for the car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller_type" })
  sellerType?: string;

  /**
   * Source domain of the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  /**
   * State of the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Timestamp of status date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_date" })
  statusDate?: number;

  /**
   * Stock number of car in dealers inventory
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stock_no" })
  stockNo?: string;

  /**
   * Street of the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;

  /**
   * Trim of the car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trim_r" })
  trimR?: string;

  /**
   * Vehicle Details Page url of the specific car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vdp_url" })
  vdpUrl?: string;

  /**
   * VIN for the car
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vin" })
  vin?: string;

  /**
   * Zip of the listing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zip" })
  zip?: string;
}
