/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PostInvoiceType - Container for custom fields of an Invoice object.
 * 
 */
public class PostInvoiceType {
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public PostInvoiceType withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public PostInvoiceType withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public PostInvoiceType withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * The ID of the account associated with the invoice.
     * 
     */
    @JsonProperty("accountId")
    public String accountId;
    public PostInvoiceType withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Whether invoices are automatically picked up for processing in the corresponding payment run.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPay")
    public Boolean autoPay;
    public PostInvoiceType withAutoPay(Boolean autoPay) {
        this.autoPay = autoPay;
        return this;
    }
    
    /**
     * Comments about the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public String comments;
    public PostInvoiceType withComments(String comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * The date by which the payment for this invoice is due, in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("dueDate")
    public LocalDate dueDate;
    public PostInvoiceType withDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * The date that appears on the invoice being created, in `yyyy-mm-dd` format. The value cannot fall in a closed accounting period.
     * 
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("invoiceDate")
    public LocalDate invoiceDate;
    public PostInvoiceType withInvoiceDate(LocalDate invoiceDate) {
        this.invoiceDate = invoiceDate;
        return this;
    }
    
    /**
     * Container for invoice items. The maximum number of invoice items is 1,000.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceItems")
    public PostInvoiceItemType[] invoiceItems;
    public PostInvoiceType withInvoiceItems(PostInvoiceItemType[] invoiceItems) {
        this.invoiceItems = invoiceItems;
        return this;
    }
    
    /**
     * The status of invoice. By default, the invoice status is Draft.
     * 
     * When creating an invoice, if you set this field to `Posted`, the invoice is created and posted directly.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PostInvoiceTypeStatusEnum status;
    public PostInvoiceType withStatus(PostInvoiceTypeStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferredToAccounting")
    public PostInvoiceTypeTransferredToAccountingEnum transferredToAccounting;
    public PostInvoiceType withTransferredToAccounting(PostInvoiceTypeTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
}
