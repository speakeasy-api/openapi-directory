<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HTTPGetAction - HTTPGetAction describes an action based on HTTP Get requests.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HTTPGetAction
{
    /**
     * Not supported by Cloud Run.
     * 
     * @var ?string $host
     */
	#[\JMS\Serializer\Annotation\SerializedName('host')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $host = null;
    
    /**
     * Custom headers to set in the request. HTTP allows repeated headers.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\HTTPHeader> $httpHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('httpHeaders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\HTTPHeader>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $httpHeaders = null;
    
    /**
     * Path to access on the HTTP server.
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * Port number to access on the container. Number must be in the range 1 to 65535.
     * 
     * @var ?int $port
     */
	#[\JMS\Serializer\Annotation\SerializedName('port')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $port = null;
    
    /**
     * Not supported by Cloud Run.
     * 
     * @var ?string $scheme
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheme')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scheme = null;
    
	public function __construct()
	{
		$this->host = null;
		$this->httpHeaders = null;
		$this->path = null;
		$this->port = null;
		$this->scheme = null;
	}
}
