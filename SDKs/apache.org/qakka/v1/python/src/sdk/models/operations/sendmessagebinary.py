"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apiresponse as shared_apiresponse
from typing import Optional


@dataclasses.dataclass
class SendMessageBinaryRequest:
    
    content_type: str = dataclasses.field(metadata={'query_param': { 'field_name': 'contentType', 'style': 'form', 'explode': True }})
    r"""Content type of the data to be sent with Queue Message"""  
    queue_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'queueName', 'style': 'simple', 'explode': False }})
    r"""Name of Queue"""  
    request_body: bytes = dataclasses.field(metadata={'request': { 'media_type': 'application/octet-stream' }})
    r"""Data to be send with Queue Message"""  
    delay: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'delay', 'style': 'form', 'explode': True }})  
    expiration: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expiration', 'style': 'form', 'explode': True }})  
    regions: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'regions', 'style': 'form', 'explode': True }})
    r"""Regions to which message is to be sent"""  
    

@dataclasses.dataclass
class SendMessageBinaryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_response: Optional[shared_apiresponse.APIResponse] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    