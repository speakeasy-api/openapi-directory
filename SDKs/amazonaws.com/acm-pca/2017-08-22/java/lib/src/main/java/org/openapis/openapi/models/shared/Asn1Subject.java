/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Asn1Subject - Contains information about the certificate subject. The &lt;code&gt;Subject&lt;/code&gt; field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The &lt;code&gt;Subject &lt;/code&gt;must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate.
 */
public class Asn1Subject {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CommonName")
    public String commonName;

    public Asn1Subject withCommonName(String commonName) {
        this.commonName = commonName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Country")
    public String country;

    public Asn1Subject withCountry(String country) {
        this.country = country;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomAttributes")
    public CustomAttribute[] customAttributes;

    public Asn1Subject withCustomAttributes(CustomAttribute[] customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DistinguishedNameQualifier")
    public String distinguishedNameQualifier;

    public Asn1Subject withDistinguishedNameQualifier(String distinguishedNameQualifier) {
        this.distinguishedNameQualifier = distinguishedNameQualifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GenerationQualifier")
    public String generationQualifier;

    public Asn1Subject withGenerationQualifier(String generationQualifier) {
        this.generationQualifier = generationQualifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GivenName")
    public String givenName;

    public Asn1Subject withGivenName(String givenName) {
        this.givenName = givenName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Initials")
    public String initials;

    public Asn1Subject withInitials(String initials) {
        this.initials = initials;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Locality")
    public String locality;

    public Asn1Subject withLocality(String locality) {
        this.locality = locality;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Organization")
    public String organization;

    public Asn1Subject withOrganization(String organization) {
        this.organization = organization;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrganizationalUnit")
    public String organizationalUnit;

    public Asn1Subject withOrganizationalUnit(String organizationalUnit) {
        this.organizationalUnit = organizationalUnit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Pseudonym")
    public String pseudonym;

    public Asn1Subject withPseudonym(String pseudonym) {
        this.pseudonym = pseudonym;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SerialNumber")
    public String serialNumber;

    public Asn1Subject withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public String state;

    public Asn1Subject withState(String state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Surname")
    public String surname;

    public Asn1Subject withSurname(String surname) {
        this.surname = surname;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Title")
    public String title;

    public Asn1Subject withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public Asn1Subject(){}
}
