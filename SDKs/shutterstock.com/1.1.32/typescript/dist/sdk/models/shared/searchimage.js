"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchImage = exports.SearchImageViewEnum = exports.SearchImageSortEnum = exports.SearchImagePeopleGenderEnum = exports.SearchImagePeopleEthnicityEnum = exports.SearchImagePeopleAgeEnum = exports.SearchImageOrientationEnum = exports.SearchImageLicenseEnum = exports.SearchImageImageTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var languageenum_1 = require("./languageenum");
var class_transformer_1 = require("class-transformer");
var SearchImageImageTypeEnum;
(function (SearchImageImageTypeEnum) {
    SearchImageImageTypeEnum["Photo"] = "photo";
    SearchImageImageTypeEnum["Illustration"] = "illustration";
    SearchImageImageTypeEnum["Vector"] = "vector";
})(SearchImageImageTypeEnum = exports.SearchImageImageTypeEnum || (exports.SearchImageImageTypeEnum = {}));
var SearchImageLicenseEnum;
(function (SearchImageLicenseEnum) {
    SearchImageLicenseEnum["Commercial"] = "commercial";
    SearchImageLicenseEnum["Editorial"] = "editorial";
    SearchImageLicenseEnum["Enhanced"] = "enhanced";
})(SearchImageLicenseEnum = exports.SearchImageLicenseEnum || (exports.SearchImageLicenseEnum = {}));
/**
 * Show image results with horizontal or vertical orientation
 */
var SearchImageOrientationEnum;
(function (SearchImageOrientationEnum) {
    SearchImageOrientationEnum["Horizontal"] = "horizontal";
    SearchImageOrientationEnum["Vertical"] = "vertical";
})(SearchImageOrientationEnum = exports.SearchImageOrientationEnum || (exports.SearchImageOrientationEnum = {}));
/**
 * Show images that feature people of the specified age category
 */
var SearchImagePeopleAgeEnum;
(function (SearchImagePeopleAgeEnum) {
    SearchImagePeopleAgeEnum["Infants"] = "infants";
    SearchImagePeopleAgeEnum["Children"] = "children";
    SearchImagePeopleAgeEnum["Teenagers"] = "teenagers";
    SearchImagePeopleAgeEnum["Twentys"] = "20s";
    SearchImagePeopleAgeEnum["Thirtys"] = "30s";
    SearchImagePeopleAgeEnum["Fortys"] = "40s";
    SearchImagePeopleAgeEnum["Fiftys"] = "50s";
    SearchImagePeopleAgeEnum["Sixtys"] = "60s";
    SearchImagePeopleAgeEnum["Older"] = "older";
})(SearchImagePeopleAgeEnum = exports.SearchImagePeopleAgeEnum || (exports.SearchImagePeopleAgeEnum = {}));
var SearchImagePeopleEthnicityEnum;
(function (SearchImagePeopleEthnicityEnum) {
    SearchImagePeopleEthnicityEnum["African"] = "african";
    SearchImagePeopleEthnicityEnum["AfricanAmerican"] = "african_american";
    SearchImagePeopleEthnicityEnum["Black"] = "black";
    SearchImagePeopleEthnicityEnum["Brazilian"] = "brazilian";
    SearchImagePeopleEthnicityEnum["Chinese"] = "chinese";
    SearchImagePeopleEthnicityEnum["Caucasian"] = "caucasian";
    SearchImagePeopleEthnicityEnum["EastAsian"] = "east_asian";
    SearchImagePeopleEthnicityEnum["Hispanic"] = "hispanic";
    SearchImagePeopleEthnicityEnum["Japanese"] = "japanese";
    SearchImagePeopleEthnicityEnum["MiddleEastern"] = "middle_eastern";
    SearchImagePeopleEthnicityEnum["NativeAmerican"] = "native_american";
    SearchImagePeopleEthnicityEnum["PacificIslander"] = "pacific_islander";
    SearchImagePeopleEthnicityEnum["SouthAsian"] = "south_asian";
    SearchImagePeopleEthnicityEnum["SoutheastAsian"] = "southeast_asian";
    SearchImagePeopleEthnicityEnum["Other"] = "other";
    SearchImagePeopleEthnicityEnum["NOTAfrican"] = "NOT african";
    SearchImagePeopleEthnicityEnum["NOTAfricanAmerican"] = "NOT african_american";
    SearchImagePeopleEthnicityEnum["NOTBlack"] = "NOT black";
    SearchImagePeopleEthnicityEnum["NOTBrazilian"] = "NOT brazilian";
    SearchImagePeopleEthnicityEnum["NOTChinese"] = "NOT chinese";
    SearchImagePeopleEthnicityEnum["NOTCaucasian"] = "NOT caucasian";
    SearchImagePeopleEthnicityEnum["NOTEastAsian"] = "NOT east_asian";
    SearchImagePeopleEthnicityEnum["NOTHispanic"] = "NOT hispanic";
    SearchImagePeopleEthnicityEnum["NOTJapanese"] = "NOT japanese";
    SearchImagePeopleEthnicityEnum["NOTMiddleEastern"] = "NOT middle_eastern";
    SearchImagePeopleEthnicityEnum["NOTNativeAmerican"] = "NOT native_american";
    SearchImagePeopleEthnicityEnum["NOTPacificIslander"] = "NOT pacific_islander";
    SearchImagePeopleEthnicityEnum["NOTSouthAsian"] = "NOT south_asian";
    SearchImagePeopleEthnicityEnum["NOTSoutheastAsian"] = "NOT southeast_asian";
    SearchImagePeopleEthnicityEnum["NOTOther"] = "NOT other";
})(SearchImagePeopleEthnicityEnum = exports.SearchImagePeopleEthnicityEnum || (exports.SearchImagePeopleEthnicityEnum = {}));
/**
 * Show images with people of the specified gender
 */
var SearchImagePeopleGenderEnum;
(function (SearchImagePeopleGenderEnum) {
    SearchImagePeopleGenderEnum["Male"] = "male";
    SearchImagePeopleGenderEnum["Female"] = "female";
    SearchImagePeopleGenderEnum["Both"] = "both";
})(SearchImagePeopleGenderEnum = exports.SearchImagePeopleGenderEnum || (exports.SearchImagePeopleGenderEnum = {}));
/**
 * Sort by
 */
var SearchImageSortEnum;
(function (SearchImageSortEnum) {
    SearchImageSortEnum["Newest"] = "newest";
    SearchImageSortEnum["Popular"] = "popular";
    SearchImageSortEnum["Relevance"] = "relevance";
    SearchImageSortEnum["Random"] = "random";
})(SearchImageSortEnum = exports.SearchImageSortEnum || (exports.SearchImageSortEnum = {}));
/**
 * Amount of detail to render in the response
 */
var SearchImageViewEnum;
(function (SearchImageViewEnum) {
    SearchImageViewEnum["Minimal"] = "minimal";
    SearchImageViewEnum["Full"] = "full";
})(SearchImageViewEnum = exports.SearchImageViewEnum || (exports.SearchImageViewEnum = {}));
/**
 * Data required to search for an image
 */
var SearchImage = /** @class */ (function (_super) {
    __extends(SearchImage, _super);
    function SearchImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "added_date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], SearchImage.prototype, "addedDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "added_date_end" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], SearchImage.prototype, "addedDateEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "added_date_start" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], SearchImage.prototype, "addedDateStart", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "aspect_ratio" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "aspectRatio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "aspect_ratio_max" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "aspectRatioMax", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "aspect_ratio_min" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "aspectRatioMin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentic" }),
        __metadata("design:type", Boolean)
    ], SearchImage.prototype, "authentic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "category" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "color" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "color", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contributor" }),
        __metadata("design:type", Array)
    ], SearchImage.prototype, "contributor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contributor_country" }),
        __metadata("design:type", Object)
    ], SearchImage.prototype, "contributorCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fields" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "fields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "height", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height_from" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "heightFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height_to" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "heightTo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image_type" }),
        __metadata("design:type", Array)
    ], SearchImage.prototype, "imageType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyword_safe_search" }),
        __metadata("design:type", Boolean)
    ], SearchImage.prototype, "keywordSafeSearch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "language" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "language", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "license" }),
        __metadata("design:type", Array)
    ], SearchImage.prototype, "license", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "model" }),
        __metadata("design:type", Array)
    ], SearchImage.prototype, "model", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "orientation" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "orientation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "page", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "people_age" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "peopleAge", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "people_ethnicity" }),
        __metadata("design:type", Array)
    ], SearchImage.prototype, "peopleEthnicity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "people_gender" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "peopleGender", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "people_model_released" }),
        __metadata("design:type", Boolean)
    ], SearchImage.prototype, "peopleModelReleased", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "people_number" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "peopleNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "per_page" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "perPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "query" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "query", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        __metadata("design:type", Object)
    ], SearchImage.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "safe" }),
        __metadata("design:type", Boolean)
    ], SearchImage.prototype, "safe", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sort" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "sort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "spellcheck_query" }),
        __metadata("design:type", Boolean)
    ], SearchImage.prototype, "spellcheckQuery", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "view" }),
        __metadata("design:type", String)
    ], SearchImage.prototype, "view", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "width", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width_from" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "widthFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width_to" }),
        __metadata("design:type", Number)
    ], SearchImage.prototype, "widthTo", void 0);
    return SearchImage;
}(utils_1.SpeakeasyBase));
exports.SearchImage = SearchImage;
