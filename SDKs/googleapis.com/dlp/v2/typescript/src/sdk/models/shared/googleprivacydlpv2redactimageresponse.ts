/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2InspectResult } from "./googleprivacydlpv2inspectresult";
import { Expose, Type } from "class-transformer";

/**
 * Results of redacting an image.
 */
export class GooglePrivacyDlpV2RedactImageResponse extends SpeakeasyBase {
  /**
   * If an image was being inspected and the InspectConfig's include_quote was set to true, then this field will include all text, if any, that was found in the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extractedText" })
  extractedText?: string;

  /**
   * All the findings for a single scanned item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inspectResult" })
  @Type(() => GooglePrivacyDlpV2InspectResult)
  inspectResult?: GooglePrivacyDlpV2InspectResult;

  /**
   * The redacted image. The type will be the same as the original image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redactedImage" })
  redactedImage?: string;
}
