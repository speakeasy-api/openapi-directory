// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserFieldsParameterEnum string

const (
	UserFieldsParameterEnumID              UserFieldsParameterEnum = "id"
	UserFieldsParameterEnumCreatedAt       UserFieldsParameterEnum = "created_at"
	UserFieldsParameterEnumName            UserFieldsParameterEnum = "name"
	UserFieldsParameterEnumUsername        UserFieldsParameterEnum = "username"
	UserFieldsParameterEnumProtected       UserFieldsParameterEnum = "protected"
	UserFieldsParameterEnumVerified        UserFieldsParameterEnum = "verified"
	UserFieldsParameterEnumWithheld        UserFieldsParameterEnum = "withheld"
	UserFieldsParameterEnumProfileImageURL UserFieldsParameterEnum = "profile_image_url"
	UserFieldsParameterEnumLocation        UserFieldsParameterEnum = "location"
	UserFieldsParameterEnumURL             UserFieldsParameterEnum = "url"
	UserFieldsParameterEnumDescription     UserFieldsParameterEnum = "description"
	UserFieldsParameterEnumEntities        UserFieldsParameterEnum = "entities"
	UserFieldsParameterEnumPinnedTweetID   UserFieldsParameterEnum = "pinned_tweet_id"
	UserFieldsParameterEnumPublicMetrics   UserFieldsParameterEnum = "public_metrics"
)

func (e *UserFieldsParameterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "id":
		fallthrough
	case "created_at":
		fallthrough
	case "name":
		fallthrough
	case "username":
		fallthrough
	case "protected":
		fallthrough
	case "verified":
		fallthrough
	case "withheld":
		fallthrough
	case "profile_image_url":
		fallthrough
	case "location":
		fallthrough
	case "url":
		fallthrough
	case "description":
		fallthrough
	case "entities":
		fallthrough
	case "pinned_tweet_id":
		fallthrough
	case "public_metrics":
		*e = UserFieldsParameterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserFieldsParameterEnum: %s", s)
	}
}
