/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ExecuteStatementRequestBody {
    /**
     * &lt;p&gt;A value that indicates whether to continue running the statement after the call times out. By default, the statement stops running when the call times out.&lt;/p&gt; &lt;note&gt; &lt;p&gt;For DDL statements, we recommend continuing to run the statement after the call times out. When a DDL statement terminates before it is finished running, it can result in errors and possibly corrupted data structures.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("continueAfterTimeout")
    public Boolean continueAfterTimeout;
    public ExecuteStatementRequestBody withContinueAfterTimeout(Boolean continueAfterTimeout) {
        this.continueAfterTimeout = continueAfterTimeout;
        return this;
    }
    
    /**
     * The name of the database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("database")
    public String database;
    public ExecuteStatementRequestBody withDatabase(String database) {
        this.database = database;
        return this;
    }
    
    /**
     * &lt;p&gt;A value that indicates whether to format the result set as a single JSON string. This parameter only applies to &lt;code&gt;SELECT&lt;/code&gt; statements and is ignored for other types of statements. Allowed values are &lt;code&gt;NONE&lt;/code&gt; and &lt;code&gt;JSON&lt;/code&gt;. The default value is &lt;code&gt;NONE&lt;/code&gt;. The result is returned in the &lt;code&gt;formattedRecords&lt;/code&gt; field.&lt;/p&gt; &lt;p&gt;For usage information about the JSON format for result sets, see &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html"&gt;Using the Data API&lt;/a&gt; in the &lt;i&gt;Amazon Aurora User Guide&lt;/i&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formatRecordsAs")
    public ExecuteStatementRequestBodyFormatRecordsAsEnum formatRecordsAs;
    public ExecuteStatementRequestBody withFormatRecordsAs(ExecuteStatementRequestBodyFormatRecordsAsEnum formatRecordsAs) {
        this.formatRecordsAs = formatRecordsAs;
        return this;
    }
    
    /**
     * A value that indicates whether to include metadata in the results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeResultMetadata")
    public Boolean includeResultMetadata;
    public ExecuteStatementRequestBody withIncludeResultMetadata(Boolean includeResultMetadata) {
        this.includeResultMetadata = includeResultMetadata;
        return this;
    }
    
    /**
     * &lt;p&gt;The parameters for the SQL statement.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Array parameters are not supported.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public org.openapis.openapi.models.shared.SqlParameter[] parameters;
    public ExecuteStatementRequestBody withParameters(org.openapis.openapi.models.shared.SqlParameter[] parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.
     */
    @JsonProperty("resourceArn")
    public String resourceArn;
    public ExecuteStatementRequestBody withResourceArn(String resourceArn) {
        this.resourceArn = resourceArn;
        return this;
    }
    
    /**
     * Options that control how the result set is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultSetOptions")
    public ExecuteStatementRequestBodyResultSetOptions resultSetOptions;
    public ExecuteStatementRequestBody withResultSetOptions(ExecuteStatementRequestBodyResultSetOptions resultSetOptions) {
        this.resultSetOptions = resultSetOptions;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the database schema.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Currently, the &lt;code&gt;schema&lt;/code&gt; parameter isn't supported.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schema")
    public String schema;
    public ExecuteStatementRequestBody withSchema(String schema) {
        this.schema = schema;
        return this;
    }
    
    /**
     * &lt;p&gt;The ARN of the secret that enables access to the DB cluster. Enter the database user name and password for the credentials in the secret.&lt;/p&gt; &lt;p&gt;For information about creating the secret, see &lt;a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_database_secret.html"&gt;Create a database secret&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonProperty("secretArn")
    public String secretArn;
    public ExecuteStatementRequestBody withSecretArn(String secretArn) {
        this.secretArn = secretArn;
        return this;
    }
    
    /**
     * The SQL statement to run.
     */
    @JsonProperty("sql")
    public String sql;
    public ExecuteStatementRequestBody withSql(String sql) {
        this.sql = sql;
        return this;
    }
    
    /**
     * &lt;p&gt;The identifier of a transaction that was started by using the &lt;code&gt;BeginTransaction&lt;/code&gt; operation. Specify the transaction ID of the transaction that you want to include the SQL statement in.&lt;/p&gt; &lt;p&gt;If the SQL statement is not part of a transaction, don't set this parameter.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionId")
    public String transactionId;
    public ExecuteStatementRequestBody withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
}
