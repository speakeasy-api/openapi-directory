// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PutTeamsUsernameProjectsProjectKeySecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

type PutTeamsUsernameProjectsProjectKeyPathParams struct {
	// The project in question. This can either be the actual `key` assigned
	// to the project or the `UUID` (surrounded by curly-braces (`{}`)).
	//
	ProjectKey string `pathParam:"style=simple,explode=false,name=project_key"`
	// This can either be the username or the UUID of the account,
	// surrounded by curly-braces, for example: `{account UUID}`. An account
	// is either a team or user.
	//
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type PutTeamsUsernameProjectsProjectKeyRequest struct {
	PathParams PutTeamsUsernameProjectsProjectKeyPathParams
	Request    map[string]interface{} `request:"mediaType=application/json"`
	Security   PutTeamsUsernameProjectsProjectKeySecurity
}

type PutTeamsUsernameProjectsProjectKeyResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// The requesting user isn't authorized to update or create the project.
	Error map[string]interface{}
	// The existing project is has been updated.
	Project map[string]interface{}
}
