/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Datafeed - Datafeed configuration data.
 */
public class Datafeed {
    /**
     * The two-letter ISO 639-1 language in which the attributes are defined in the data feed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributeLanguage")
    public String attributeLanguage;

    public Datafeed withAttributeLanguage(String attributeLanguage) {
        this.attributeLanguage = attributeLanguage;
        return this;
    }
    
    /**
     * Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - "`local products`" - "`product inventory`" - "`products`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentType")
    public String contentType;

    public Datafeed withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fetchSchedule")
    public DatafeedFetchSchedule fetchSchedule;

    public Datafeed withFetchSchedule(DatafeedFetchSchedule fetchSchedule) {
        this.fetchSchedule = fetchSchedule;
        return this;
    }
    
    /**
     * Required. The filename of the feed. All feeds must have a unique file name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileName")
    public String fileName;

    public Datafeed withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("format")
    public DatafeedFormat format;

    public Datafeed withFormat(DatafeedFormat format) {
        this.format = format;
        return this;
    }
    
    /**
     * Required for update. The ID of the data feed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Datafeed withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "`content#datafeed`"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Datafeed withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Required for insert. A descriptive name of the data feed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Datafeed withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The targets this feed should apply to (country, language, destinations).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targets")
    public DatafeedTarget[] targets;

    public Datafeed withTargets(DatafeedTarget[] targets) {
        this.targets = targets;
        return this;
    }
    
    public Datafeed(){}
}
