// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SongAPIGetByPVFieldsEnum - List of optional fields (optional). Possible values are Albums, Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
type SongAPIGetByPVFieldsEnum string

const (
	SongAPIGetByPVFieldsEnumNone            SongAPIGetByPVFieldsEnum = "None"
	SongAPIGetByPVFieldsEnumAdditionalNames SongAPIGetByPVFieldsEnum = "AdditionalNames"
	SongAPIGetByPVFieldsEnumAlbums          SongAPIGetByPVFieldsEnum = "Albums"
	SongAPIGetByPVFieldsEnumArtists         SongAPIGetByPVFieldsEnum = "Artists"
	SongAPIGetByPVFieldsEnumLyrics          SongAPIGetByPVFieldsEnum = "Lyrics"
	SongAPIGetByPVFieldsEnumMainPicture     SongAPIGetByPVFieldsEnum = "MainPicture"
	SongAPIGetByPVFieldsEnumNames           SongAPIGetByPVFieldsEnum = "Names"
	SongAPIGetByPVFieldsEnumPVs             SongAPIGetByPVFieldsEnum = "PVs"
	SongAPIGetByPVFieldsEnumReleaseEvent    SongAPIGetByPVFieldsEnum = "ReleaseEvent"
	SongAPIGetByPVFieldsEnumTags            SongAPIGetByPVFieldsEnum = "Tags"
	SongAPIGetByPVFieldsEnumThumbURL        SongAPIGetByPVFieldsEnum = "ThumbUrl"
	SongAPIGetByPVFieldsEnumWebLinks        SongAPIGetByPVFieldsEnum = "WebLinks"
)

func (e *SongAPIGetByPVFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Albums":
		fallthrough
	case "Artists":
		fallthrough
	case "Lyrics":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "Tags":
		fallthrough
	case "ThumbUrl":
		fallthrough
	case "WebLinks":
		*e = SongAPIGetByPVFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetByPVFieldsEnum: %s", s)
	}
}

// SongAPIGetByPVLangEnum - Content language preference (optional).
type SongAPIGetByPVLangEnum string

const (
	SongAPIGetByPVLangEnumDefault  SongAPIGetByPVLangEnum = "Default"
	SongAPIGetByPVLangEnumJapanese SongAPIGetByPVLangEnum = "Japanese"
	SongAPIGetByPVLangEnumRomaji   SongAPIGetByPVLangEnum = "Romaji"
	SongAPIGetByPVLangEnumEnglish  SongAPIGetByPVLangEnum = "English"
)

func (e *SongAPIGetByPVLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = SongAPIGetByPVLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetByPVLangEnum: %s", s)
	}
}

// SongAPIGetByPVPVServiceEnum - PV service (required). Possible values are NicoNicoDouga, Youtube, SoundCloud, Vimeo, Piapro, Bilibili.
type SongAPIGetByPVPVServiceEnum string

const (
	SongAPIGetByPVPVServiceEnumNicoNicoDouga SongAPIGetByPVPVServiceEnum = "NicoNicoDouga"
	SongAPIGetByPVPVServiceEnumYoutube       SongAPIGetByPVPVServiceEnum = "Youtube"
	SongAPIGetByPVPVServiceEnumSoundCloud    SongAPIGetByPVPVServiceEnum = "SoundCloud"
	SongAPIGetByPVPVServiceEnumVimeo         SongAPIGetByPVPVServiceEnum = "Vimeo"
	SongAPIGetByPVPVServiceEnumPiapro        SongAPIGetByPVPVServiceEnum = "Piapro"
	SongAPIGetByPVPVServiceEnumBilibili      SongAPIGetByPVPVServiceEnum = "Bilibili"
	SongAPIGetByPVPVServiceEnumFile          SongAPIGetByPVPVServiceEnum = "File"
	SongAPIGetByPVPVServiceEnumLocalFile     SongAPIGetByPVPVServiceEnum = "LocalFile"
	SongAPIGetByPVPVServiceEnumCreofuga      SongAPIGetByPVPVServiceEnum = "Creofuga"
	SongAPIGetByPVPVServiceEnumBandcamp      SongAPIGetByPVPVServiceEnum = "Bandcamp"
)

func (e *SongAPIGetByPVPVServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NicoNicoDouga":
		fallthrough
	case "Youtube":
		fallthrough
	case "SoundCloud":
		fallthrough
	case "Vimeo":
		fallthrough
	case "Piapro":
		fallthrough
	case "Bilibili":
		fallthrough
	case "File":
		fallthrough
	case "LocalFile":
		fallthrough
	case "Creofuga":
		fallthrough
	case "Bandcamp":
		*e = SongAPIGetByPVPVServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetByPVPVServiceEnum: %s", s)
	}
}

type SongAPIGetByPVQueryParams struct {
	// List of optional fields (optional). Possible values are Albums, Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
	Fields *SongAPIGetByPVFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Content language preference (optional).
	Lang *SongAPIGetByPVLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// PV Id (required). For example sm123456.
	PvID string `queryParam:"style=form,explode=true,name=pvId"`
	// PV service (required). Possible values are NicoNicoDouga, Youtube, SoundCloud, Vimeo, Piapro, Bilibili.
	PvService SongAPIGetByPVPVServiceEnum `queryParam:"style=form,explode=true,name=pvService"`
}

type SongAPIGetByPVRequest struct {
	QueryParams SongAPIGetByPVQueryParams
}

type SongAPIGetByPVResponse struct {
	Body        []byte
	ContentType string
	// OK
	SongForAPIContract *shared.SongForAPIContract
	StatusCode         int
	RawResponse        *http.Response
}
