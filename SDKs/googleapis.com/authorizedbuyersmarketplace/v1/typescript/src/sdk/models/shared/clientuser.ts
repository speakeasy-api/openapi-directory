/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. The state of the client user.
 */
export enum ClientUserStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Invited = "INVITED",
  Active = "ACTIVE",
  Inactive = "INACTIVE",
}

/**
 * A user of a client who has restricted access to the Marketplace and certain other sections of the Authorized Buyers UI based on the role granted to the associated client.
 */
export class ClientUser extends SpeakeasyBase {
  /**
   * Required. The client user's email address that has to be unique across all users for the same client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Output only. The resource name of the client user. Format: `buyers/{accountId}/clients/{clientAccountId}/users/{userId}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The state of the client user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ClientUserStateEnum;
}

/**
 * A user of a client who has restricted access to the Marketplace and certain other sections of the Authorized Buyers UI based on the role granted to the associated client.
 */
export class ClientUserInput extends SpeakeasyBase {
  /**
   * Required. The client user's email address that has to be unique across all users for the same client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;
}
