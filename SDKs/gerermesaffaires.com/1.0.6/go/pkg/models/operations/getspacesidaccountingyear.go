// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSpacesIDAccountingYearRequest struct {
	// Effective date inside  the accounting year  (range not available)
	EffectiveDate *string `queryParam:"style=form,explode=true,name=EffectiveDate"`
	// End date of the accounting year (YYYYMM or YYYYMMDD) (range not available)
	End *string `queryParam:"style=form,explode=true,name=End"`
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type GetSpacesIDAccountingYear200ApplicationJSONLevelEnum string

const (
	GetSpacesIDAccountingYear200ApplicationJSONLevelEnumConfidential GetSpacesIDAccountingYear200ApplicationJSONLevelEnum = "confidential"
	GetSpacesIDAccountingYear200ApplicationJSONLevelEnumRegular      GetSpacesIDAccountingYear200ApplicationJSONLevelEnum = "regular"
	GetSpacesIDAccountingYear200ApplicationJSONLevelEnumPublic       GetSpacesIDAccountingYear200ApplicationJSONLevelEnum = "public"
)

func (e GetSpacesIDAccountingYear200ApplicationJSONLevelEnum) ToPointer() *GetSpacesIDAccountingYear200ApplicationJSONLevelEnum {
	return &e
}

func (e *GetSpacesIDAccountingYear200ApplicationJSONLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = GetSpacesIDAccountingYear200ApplicationJSONLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesIDAccountingYear200ApplicationJSONLevelEnum: %v", v)
	}
}

type GetSpacesIDAccountingYear200ApplicationJSON struct {
	About            *string                                               `json:"About,omitempty"`
	ArchivalDate     *string                                               `json:"ArchivalDate,omitempty"`
	Class            *string                                               `json:"Class,omitempty"`
	Comment          *string                                               `json:"Comment,omitempty"`
	End              *string                                               `json:"End,omitempty"`
	Home             *bool                                                 `json:"Home,omitempty"`
	ID               *string                                               `json:"Id,omitempty"`
	Keywords         []string                                              `json:"Keywords,omitempty"`
	Level            *GetSpacesIDAccountingYear200ApplicationJSONLevelEnum `json:"Level,omitempty"`
	ModificationDate *string                                               `json:"ModificationDate,omitempty"`
	Name             *string                                               `json:"Name,omitempty"`
	NetIncome        *float64                                              `json:"NetIncome,omitempty"`
	NetPosition      *float64                                              `json:"NetPosition,omitempty"`
	Parent           *string                                               `json:"Parent,omitempty"`
	Start            *string                                               `json:"Start,omitempty"`
	Tax              *float64                                              `json:"Tax,omitempty"`
	TaxableIncome    *float64                                              `json:"TaxableIncome,omitempty"`
	Turnover         *float64                                              `json:"Turnover,omitempty"`
}

type GetSpacesIDAccountingYearResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of accounting years
	GetSpacesIDAccountingYear200ApplicationJSONAnies []GetSpacesIDAccountingYear200ApplicationJSON
}
