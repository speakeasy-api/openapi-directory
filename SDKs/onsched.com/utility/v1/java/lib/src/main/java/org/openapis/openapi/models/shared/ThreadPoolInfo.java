/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ThreadPoolInfo - Success
 */
public class ThreadPoolInfo {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableCompletionThreads")
    public Integer availableCompletionThreads;

    public ThreadPoolInfo withAvailableCompletionThreads(Integer availableCompletionThreads) {
        this.availableCompletionThreads = availableCompletionThreads;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableWorkerThreads")
    public Integer availableWorkerThreads;

    public ThreadPoolInfo withAvailableWorkerThreads(Integer availableWorkerThreads) {
        this.availableWorkerThreads = availableWorkerThreads;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxCompletionThreads")
    public Integer maxCompletionThreads;

    public ThreadPoolInfo withMaxCompletionThreads(Integer maxCompletionThreads) {
        this.maxCompletionThreads = maxCompletionThreads;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxWorkerThreads")
    public Integer maxWorkerThreads;

    public ThreadPoolInfo withMaxWorkerThreads(Integer maxWorkerThreads) {
        this.maxWorkerThreads = maxWorkerThreads;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minCompletionThreads")
    public Integer minCompletionThreads;

    public ThreadPoolInfo withMinCompletionThreads(Integer minCompletionThreads) {
        this.minCompletionThreads = minCompletionThreads;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minWorkerThreads")
    public Integer minWorkerThreads;

    public ThreadPoolInfo withMinWorkerThreads(Integer minWorkerThreads) {
        this.minWorkerThreads = minWorkerThreads;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("occupiedCompletionThreads")
    public Integer occupiedCompletionThreads;

    public ThreadPoolInfo withOccupiedCompletionThreads(Integer occupiedCompletionThreads) {
        this.occupiedCompletionThreads = occupiedCompletionThreads;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("occupiedWorkerThreads")
    public Integer occupiedWorkerThreads;

    public ThreadPoolInfo withOccupiedWorkerThreads(Integer occupiedWorkerThreads) {
        this.occupiedWorkerThreads = occupiedWorkerThreads;
        return this;
    }
    
    public ThreadPoolInfo(){}
}
