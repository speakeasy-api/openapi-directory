// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateBuildXAmzTargetEnum
type CreateBuildXAmzTargetEnum string

const (
	CreateBuildXAmzTargetEnumGameLiftCreateBuild CreateBuildXAmzTargetEnum = "GameLift.CreateBuild"
)

func (e CreateBuildXAmzTargetEnum) ToPointer() *CreateBuildXAmzTargetEnum {
	return &e
}

func (e *CreateBuildXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GameLift.CreateBuild":
		*e = CreateBuildXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBuildXAmzTargetEnum: %v", v)
	}
}

type CreateBuildRequest struct {
	CreateBuildInput  shared.CreateBuildInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateBuildXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateBuildResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateBuildOutput *shared.CreateBuildOutput
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// TaggingFailedException
	TaggingFailedException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
