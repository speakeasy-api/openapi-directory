/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetItemUsagesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  jwtsa: string;
}

/**
 * Item usages response object
 */
export class GetItemUsages200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.ItemUsage })
  @Expose({ name: "items" })
  @Type(() => shared.ItemUsage)
  items?: shared.ItemUsage[];
}

export class GetItemUsagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Item usages response object
   */
  @SpeakeasyMetadata()
  getItemUsages200ApplicationJSONObject?: GetItemUsages200ApplicationJSON;
}
