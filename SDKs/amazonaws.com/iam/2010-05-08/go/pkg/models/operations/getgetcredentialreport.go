// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETCredentialReportActionEnum
type GETGETCredentialReportActionEnum string

const (
	GETGETCredentialReportActionEnumGetCredentialReport GETGETCredentialReportActionEnum = "GetCredentialReport"
)

func (e *GETGETCredentialReportActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetCredentialReport":
		*e = GETGETCredentialReportActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETCredentialReportActionEnum: %s", s)
	}
}

// GETGETCredentialReportVersionEnum
type GETGETCredentialReportVersionEnum string

const (
	GETGETCredentialReportVersionEnumTwoThousandAndTen0508 GETGETCredentialReportVersionEnum = "2010-05-08"
)

func (e *GETGETCredentialReportVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETGETCredentialReportVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETCredentialReportVersionEnum: %s", s)
	}
}

type GETGETCredentialReportQueryParams struct {
	Action  GETGETCredentialReportActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version GETGETCredentialReportVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETGETCredentialReportHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETCredentialReportRequest struct {
	QueryParams GETGETCredentialReportQueryParams
	Headers     GETGETCredentialReportHeaders
}

type GETGETCredentialReportResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
