<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateFleetResponse
{
    /**
     * ConflictException
     * 
     * @var mixed $conflictException
     */
	
    public mixed $conflictException = null;
    
	
    public string $contentType;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateFleetOutput $createFleetOutput
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\CreateFleetOutput $createFleetOutput = null;
    
    /**
     * InternalServiceException
     * 
     * @var mixed $internalServiceException
     */
	
    public mixed $internalServiceException = null;
    
    /**
     * InvalidRequestException
     * 
     * @var mixed $invalidRequestException
     */
	
    public mixed $invalidRequestException = null;
    
    /**
     * LimitExceededException
     * 
     * @var mixed $limitExceededException
     */
	
    public mixed $limitExceededException = null;
    
    /**
     * NotFoundException
     * 
     * @var mixed $notFoundException
     */
	
    public mixed $notFoundException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * TaggingFailedException
     * 
     * @var mixed $taggingFailedException
     */
	
    public mixed $taggingFailedException = null;
    
    /**
     * UnauthorizedException
     * 
     * @var mixed $unauthorizedException
     */
	
    public mixed $unauthorizedException = null;
    
    /**
     * UnsupportedRegionException
     * 
     * @var mixed $unsupportedRegionException
     */
	
    public mixed $unsupportedRegionException = null;
    
	public function __construct()
	{
		$this->conflictException = null;
		$this->contentType = "";
		$this->createFleetOutput = null;
		$this->internalServiceException = null;
		$this->invalidRequestException = null;
		$this->limitExceededException = null;
		$this->notFoundException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->taggingFailedException = null;
		$this->unauthorizedException = null;
		$this->unsupportedRegionException = null;
	}
}
