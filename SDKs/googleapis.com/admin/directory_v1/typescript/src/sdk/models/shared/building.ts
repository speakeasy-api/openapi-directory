/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BuildingAddress } from "./buildingaddress";
import { BuildingCoordinates } from "./buildingcoordinates";
import { Expose, Type } from "class-transformer";

/**
 * Public API: Resources.buildings
 */
export class Building extends SpeakeasyBase {
  /**
   * Public API: Resources.buildings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => BuildingAddress)
  address?: BuildingAddress;

  /**
   * Unique identifier for the building. The maximum length is 100 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buildingId" })
  buildingId?: string;

  /**
   * The building name as seen by users in Calendar. Must be unique for the customer. For example, "NYC-CHEL". The maximum length is 100 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buildingName" })
  buildingName?: string;

  /**
   * Public API: Resources.buildings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coordinates" })
  @Type(() => BuildingCoordinates)
  coordinates?: BuildingCoordinates;

  /**
   * A brief description of the building. For example, "Chelsea Market".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etags" })
  etags?: string;

  /**
   * The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, ["B2", "B1", "L", "1", "2", "2M", "3", "PH"] Must contain at least one entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floorNames" })
  floorNames?: string[];

  /**
   * Kind of resource this is.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;
}
