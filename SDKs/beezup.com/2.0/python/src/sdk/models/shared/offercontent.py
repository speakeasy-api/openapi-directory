"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contractbillingperiodinfo as shared_contractbillingperiodinfo
from ..shared import contractbonusinfo as shared_contractbonusinfo
from ..shared import contractclickinfo as shared_contractclickinfo
from ..shared import contractcommitmentinfo as shared_contractcommitmentinfo
from ..shared import contractdiscountinfo as shared_contractdiscountinfo
from ..shared import contractmoneyinfo as shared_contractmoneyinfo
from ..shared import contractstoreinfo as shared_contractstoreinfo
from ..shared import previousfixperiodinvoiceproratainfo as shared_previousfixperiodinvoiceproratainfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OfferContent:
    
    contract_billing_period_info: shared_contractbillingperiodinfo.ContractBillingPeriodInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractBillingPeriodInfo') }})
    r"""Describe the billing period information related to the offer."""  
    contract_bonus_info: shared_contractbonusinfo.ContractBonusInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractBonusInfo') }})
    r"""Describe the bonus information related to your current contract."""  
    contract_click_info: shared_contractclickinfo.ContractClickInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractClickInfo') }})
    r"""Describe the click information related to the offer."""  
    contract_commitment_info: shared_contractcommitmentinfo.ContractCommitmentInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractCommitmentInfo') }})
    r"""Describe the commitment information related to the offer."""  
    contract_discount_info: shared_contractdiscountinfo.ContractDiscountInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractDiscountInfo') }})
    r"""Describe the discount information related to the offer."""  
    contract_money_info: shared_contractmoneyinfo.ContractMoneyInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractMoneyInfo') }})
    r"""Describe the pricing information related to the offer."""  
    contract_store_info: shared_contractstoreinfo.ContractStoreInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractStoreInfo') }})
    r"""Describe the store information related to the offer."""  
    notify_vat_exemption: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notifyVatExemption') }})
    r"""Internal usage: Indicates if we have to notify you about VAT exemption."""  
    previous_fix_period_invoice_prorata_info: shared_previousfixperiodinvoiceproratainfo.PreviousFixPeriodInvoiceProrataInfo = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previousFixPeriodInvoiceProrataInfo') }})
    r"""Describe the prorata info based on your previous invoice"""  
    contract_termination_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractTerminationReason'), 'exclude': lambda f: f is None }})
    r"""The termination reason, if your current contract is scheduled to be terminated."""  
    contract_termination_reason_type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractTerminationReasonType'), 'exclude': lambda f: f is None }})
    r"""The contract termination reason type identifier, if your current contract is scheduled to be terminated. The value is based on the list of values /user/lov/ContractTerminationReason"""  
    