// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETEnterStandbyActionEnum
type GETEnterStandbyActionEnum string

const (
	GETEnterStandbyActionEnumEnterStandby GETEnterStandbyActionEnum = "EnterStandby"
)

func (e *GETEnterStandbyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EnterStandby":
		*e = GETEnterStandbyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnterStandbyActionEnum: %s", s)
	}
}

// GETEnterStandbyVersionEnum
type GETEnterStandbyVersionEnum string

const (
	GETEnterStandbyVersionEnumTwoThousandAndEleven0101 GETEnterStandbyVersionEnum = "2011-01-01"
)

func (e *GETEnterStandbyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETEnterStandbyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnterStandbyVersionEnum: %s", s)
	}
}

type GETEnterStandbyRequest struct {
	Action GETEnterStandbyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The IDs of the instances. You can specify up to 20 instances.
	InstanceIds []string `queryParam:"style=form,explode=true,name=InstanceIds"`
	// Indicates whether to decrement the desired capacity of the Auto Scaling group by the number of instances moved to <code>Standby</code> mode.
	ShouldDecrementDesiredCapacity bool                       `queryParam:"style=form,explode=true,name=ShouldDecrementDesiredCapacity"`
	Version                        GETEnterStandbyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                  *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETEnterStandbyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
