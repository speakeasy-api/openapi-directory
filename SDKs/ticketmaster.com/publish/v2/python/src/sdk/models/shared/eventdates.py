"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accessdates as shared_accessdates
from ..shared import enddates as shared_enddates
from ..shared import eventstatus as shared_eventstatus
from ..shared import startdates as shared_startdates
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventDates:
    r"""Event's Dates"""
    
    access: Optional[shared_accessdates.AccessDates] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access'), 'exclude': lambda f: f is None }})
    r"""Event's Access Date"""  
    end: Optional[shared_enddates.EndDates] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end'), 'exclude': lambda f: f is None }})
    r"""Event's End Dates"""  
    start: Optional[shared_startdates.StartDates] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start'), 'exclude': lambda f: f is None }})
    r"""Event's Start Dates"""  
    status: Optional[shared_eventstatus.EventStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Event's Status"""  
    timezone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timezone'), 'exclude': lambda f: f is None }})
    r"""Event's timezone"""  
    