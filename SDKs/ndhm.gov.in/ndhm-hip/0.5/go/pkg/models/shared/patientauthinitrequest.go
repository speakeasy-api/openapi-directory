// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PatientAuthInitRequestQueryRequesterTypeEnum string

const (
	PatientAuthInitRequestQueryRequesterTypeEnumHip PatientAuthInitRequestQueryRequesterTypeEnum = "HIP"
	PatientAuthInitRequestQueryRequesterTypeEnumHiu PatientAuthInitRequestQueryRequesterTypeEnum = "HIU"
)

func (e *PatientAuthInitRequestQueryRequesterTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HIP":
		fallthrough
	case "HIU":
		*e = PatientAuthInitRequestQueryRequesterTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatientAuthInitRequestQueryRequesterTypeEnum: %s", s)
	}
}

// PatientAuthInitRequestQueryRequester - identification of requester
type PatientAuthInitRequestQueryRequester struct {
	ID   string                                       `json:"id"`
	Type PatientAuthInitRequestQueryRequesterTypeEnum `json:"type"`
}

type PatientAuthInitRequestQuery struct {
	// Subjected to CM specific capability
	//  1. MOBILE_OTP - for SMS OTP
	//  2. DIRECT - for authentication directly with the patient. e.g. Mobile App, SMS
	//  3. AADHAAR_OTP - for auth using OTP sent to Aadhaar number
	//  4. DEMOGRAPHICS - for auth using demographic verification.
	//
	AuthMode *AuthenticationModeEnum `json:"authMode,omitempty"`
	// id  of the patient understood by the CM
	ID string `json:"id"`
	// what is the purpose of user auth
	Purpose PatientAuthPurposeEnum `json:"purpose"`
	// identification of requester
	Requester PatientAuthInitRequestQueryRequester `json:"requester"`
}

type PatientAuthInitRequest struct {
	Query PatientAuthInitRequestQuery `json:"query"`
	// a nonce, unique for each HTTP request
	RequestID string `json:"requestId"`
	// Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
	Timestamp time.Time `json:"timestamp"`
}
