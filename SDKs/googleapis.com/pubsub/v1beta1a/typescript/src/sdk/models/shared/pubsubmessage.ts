/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Label } from "./label";
import { Expose, Type } from "class-transformer";

/**
 * A message data and its labels.
 */
export class PubsubMessage extends SpeakeasyBase {
  /**
   * The message payload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;

  /**
   * Optional list of labels for this message. Keys in this collection must be unique.
   */
  @SpeakeasyMetadata({ elemType: Label })
  @Expose({ name: "label" })
  @Type(() => Label)
  label?: Label[];

  /**
   * ID of this message assigned by the server at publication time. Guaranteed to be unique within the topic. This value may be read by a subscriber that receives a PubsubMessage via a Pull call or a push delivery. It must not be populated by a publisher in a Publish call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageId" })
  messageId?: string;

  /**
   * The time at which the message was published. The time is milliseconds since the UNIX epoch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publishTime" })
  publishTime?: string;
}
