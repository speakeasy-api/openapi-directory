"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetForecastTimeSeriesRequest:
    
    latitude: float = dataclasses.field(metadata={'path_param': { 'field_name': 'latitude', 'style': 'simple', 'explode': False }})
    r"""latitude for the forecast"""  
    longitude: float = dataclasses.field(metadata={'path_param': { 'field_name': 'longitude', 'style': 'simple', 'explode': False }})
    r"""longitude for the forecast"""  
    weather: str = dataclasses.field(metadata={'query_param': { 'field_name': 'weather', 'style': 'form', 'explode': True }})
    r"""Comma separated values for the weather parameteres temperature,rain,wind_u,wind_v,gust,pressure,cloud,humidity&wave=height,direction,period"""  
    days: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'days', 'style': 'form', 'explode': True }})
    r"""optional number of days in string. Will be added to init forecast date"""  
    endtime: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endtime', 'style': 'form', 'explode': True }})
    r"""end date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ"""  
    entryid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'entryid', 'style': 'form', 'explode': True }})
    r"""Direct file I want to extract"""  
    hours: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'hours', 'style': 'form', 'explode': True }})
    r"""optional number of hours in string. Will be added to init forecast date"""  
    inittime: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'inittime', 'style': 'form', 'explode': True }})
    r"""initial date for the forecast ISO string YYYY-MM-DDTHH:mm:SS.SZ"""  
    wave: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'wave', 'style': 'form', 'explode': True }})
    r"""Comma separated values for the wave parameteres height,direction,period"""  
    

@dataclasses.dataclass
class GetForecastTimeSeriesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    