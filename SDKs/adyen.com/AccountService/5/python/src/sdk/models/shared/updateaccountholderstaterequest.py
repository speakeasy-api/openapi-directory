"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdateAccountHolderStateRequestStateTypeEnum(str, Enum):
    r"""The state to be updated.
    >Permitted values are: `Processing`, `Payout`
    """
    LIMITED_PAYOUT = 'LimitedPayout'
    LIMITED_PROCESSING = 'LimitedProcessing'
    LIMITLESS_PAYOUT = 'LimitlessPayout'
    LIMITLESS_PROCESSING = 'LimitlessProcessing'
    PAYOUT = 'Payout'
    PROCESSING = 'Processing'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateAccountHolderStateRequest:
    
    account_holder_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderCode') }})
    r"""The code of the Account Holder on which to update the state."""  
    disable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disable') }})
    r"""If true, disable the requested state.  If false, enable the requested state."""  
    state_type: UpdateAccountHolderStateRequestStateTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateType') }})
    r"""The state to be updated.
    >Permitted values are: `Processing`, `Payout`
    """  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""The reason that the state is being updated.
    >Required if the state is being disabled.
    """  
    