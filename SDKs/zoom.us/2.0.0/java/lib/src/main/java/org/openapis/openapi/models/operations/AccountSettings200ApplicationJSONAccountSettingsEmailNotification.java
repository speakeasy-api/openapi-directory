/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountSettings200ApplicationJSONAccountSettingsEmailNotification - Account Settings: Notification.
 */
public class AccountSettings200ApplicationJSONAccountSettingsEmailNotification {
    /**
     * Notify when an alternative host is set or removed from a meeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alternative_host_reminder")
    public Boolean alternativeHostReminder;
    public AccountSettings200ApplicationJSONAccountSettingsEmailNotification withAlternativeHostReminder(Boolean alternativeHostReminder) {
        this.alternativeHostReminder = alternativeHostReminder;
        return this;
    }
    
    /**
     * Notify the host and participants when a meeting is cancelled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancel_meeting_reminder")
    public Boolean cancelMeetingReminder;
    public AccountSettings200ApplicationJSONAccountSettingsEmailNotification withCancelMeetingReminder(Boolean cancelMeetingReminder) {
        this.cancelMeetingReminder = cancelMeetingReminder;
        return this;
    }
    
    /**
     * Notify host when cloud recording is available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloud_recording_avaliable_reminder")
    public Boolean cloudRecordingAvaliableReminder;
    public AccountSettings200ApplicationJSONAccountSettingsEmailNotification withCloudRecordingAvaliableReminder(Boolean cloudRecordingAvaliableReminder) {
        this.cloudRecordingAvaliableReminder = cloudRecordingAvaliableReminder;
        return this;
    }
    
    /**
     * Notify the host when participants join the meeting before them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jbh_reminder")
    public Boolean jbhReminder;
    public AccountSettings200ApplicationJSONAccountSettingsEmailNotification withJbhReminder(Boolean jbhReminder) {
        this.jbhReminder = jbhReminder;
        return this;
    }
    
    /**
     * Notify user when host licenses are running low.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("low_host_count_reminder")
    public Boolean lowHostCountReminder;
    public AccountSettings200ApplicationJSONAccountSettingsEmailNotification withLowHostCountReminder(Boolean lowHostCountReminder) {
        this.lowHostCountReminder = lowHostCountReminder;
        return this;
    }
    
    /**
     * Notify the host there is a meeting is scheduled, rescheduled, or cancelled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule_for_reminder")
    public Boolean scheduleForReminder;
    public AccountSettings200ApplicationJSONAccountSettingsEmailNotification withScheduleForReminder(Boolean scheduleForReminder) {
        this.scheduleForReminder = scheduleForReminder;
        return this;
    }
    
}
