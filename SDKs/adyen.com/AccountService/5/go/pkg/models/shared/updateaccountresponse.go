// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateAccountResponsePayoutSpeedEnum - Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
type UpdateAccountResponsePayoutSpeedEnum string

const (
	UpdateAccountResponsePayoutSpeedEnumInstant  UpdateAccountResponsePayoutSpeedEnum = "INSTANT"
	UpdateAccountResponsePayoutSpeedEnumSameDay  UpdateAccountResponsePayoutSpeedEnum = "SAME_DAY"
	UpdateAccountResponsePayoutSpeedEnumStandard UpdateAccountResponsePayoutSpeedEnum = "STANDARD"
)

func (e UpdateAccountResponsePayoutSpeedEnum) ToPointer() *UpdateAccountResponsePayoutSpeedEnum {
	return &e
}

func (e *UpdateAccountResponsePayoutSpeedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INSTANT":
		fallthrough
	case "SAME_DAY":
		fallthrough
	case "STANDARD":
		*e = UpdateAccountResponsePayoutSpeedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountResponsePayoutSpeedEnum: %v", v)
	}
}

// UpdateAccountResponse - OK - the request has succeeded.
type UpdateAccountResponse struct {
	// The code of the account.
	AccountCode string `json:"accountCode"`
	// The bankAccountUUID of the bank account held by the account holder to couple the account with. Scheduled payouts in currencies matching the currency of this bank account will be sent to this bank account. Payouts in different currencies will be sent to a matching bank account of the account holder.
	BankAccountUUID *string `json:"bankAccountUUID,omitempty"`
	// The description of the account.
	Description *string `json:"description,omitempty"`
	// A list of fields that caused the `/updateAccount` request to fail.
	InvalidFields []ErrorFieldType `json:"invalidFields,omitempty"`
	// A set of key and value pairs containing metadata.
	Metadata map[string]string `json:"metadata,omitempty"`
	// The payout method code held by the account holder to couple the account with. Scheduled card payouts will be sent using this payout method code.
	PayoutMethodCode *string                 `json:"payoutMethodCode,omitempty"`
	PayoutSchedule   *PayoutScheduleResponse `json:"payoutSchedule,omitempty"`
	// Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
	PayoutSpeed *UpdateAccountResponsePayoutSpeedEnum `json:"payoutSpeed,omitempty"`
	// The reference of a request. Can be used to uniquely identify the request.
	PspReference *string `json:"pspReference,omitempty"`
	// The result code.
	ResultCode *string `json:"resultCode,omitempty"`
}
