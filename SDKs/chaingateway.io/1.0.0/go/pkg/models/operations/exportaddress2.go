// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Exportaddress2RequestBody struct {
	Password *string `json:"password,omitempty"`
}

type Exportaddress2Request struct {
	RequestBody *Exportaddress2RequestBody `request:"mediaType=application/json"`
	// BSC address
	Address string `pathParam:"style=simple,explode=false,name=address"`
}

type Exportaddress2200ApplicationJSONDataContentCryptoCipherparams struct {
	Iv *string `json:"iv,omitempty"`
}

type Exportaddress2200ApplicationJSONDataContentCryptoKdfparams struct {
	Dklen *float64 `json:"dklen,omitempty"`
	N     *float64 `json:"n,omitempty"`
	P     *float64 `json:"p,omitempty"`
	R     *float64 `json:"r,omitempty"`
	Salt  *string  `json:"salt,omitempty"`
}

type Exportaddress2200ApplicationJSONDataContentCrypto struct {
	Cipher       *string                                                        `json:"cipher,omitempty"`
	Cipherparams *Exportaddress2200ApplicationJSONDataContentCryptoCipherparams `json:"cipherparams,omitempty"`
	Ciphertext   *string                                                        `json:"ciphertext,omitempty"`
	Kdf          *string                                                        `json:"kdf,omitempty"`
	Kdfparams    *Exportaddress2200ApplicationJSONDataContentCryptoKdfparams    `json:"kdfparams,omitempty"`
	Mac          *string                                                        `json:"mac,omitempty"`
}

type Exportaddress2200ApplicationJSONDataContent struct {
	Address *string                                            `json:"address,omitempty"`
	Crypto  *Exportaddress2200ApplicationJSONDataContentCrypto `json:"crypto,omitempty"`
	ID      *string                                            `json:"id,omitempty"`
	Version *float64                                           `json:"version,omitempty"`
}

type Exportaddress2200ApplicationJSONData struct {
	Address  *string                                      `json:"address,omitempty"`
	Content  *Exportaddress2200ApplicationJSONDataContent `json:"content,omitempty"`
	Filename *string                                      `json:"filename,omitempty"`
}

// Exportaddress2200ApplicationJSON - exportAddress
type Exportaddress2200ApplicationJSON struct {
	Data    *Exportaddress2200ApplicationJSONData `json:"data,omitempty"`
	Message *string                               `json:"message,omitempty"`
	Ok      *bool                                 `json:"ok,omitempty"`
	Status  *float64                              `json:"status,omitempty"`
}

type Exportaddress2Response struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// exportAddress
	Exportaddress2200ApplicationJSONObject *Exportaddress2200ApplicationJSON
}
