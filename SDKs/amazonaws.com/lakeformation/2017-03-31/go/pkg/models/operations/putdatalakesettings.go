// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PutDataLakeSettingsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// PutDataLakeSettingsRequestBodyDataLakeSettings - A structure representing a list of Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
type PutDataLakeSettingsRequestBodyDataLakeSettings struct {
	AllowExternalDataFiltering       *bool                         `json:"AllowExternalDataFiltering,omitempty"`
	AuthorizedSessionTagValueList    []string                      `json:"AuthorizedSessionTagValueList,omitempty"`
	CreateDatabaseDefaultPermissions []shared.PrincipalPermissions `json:"CreateDatabaseDefaultPermissions,omitempty"`
	CreateTableDefaultPermissions    []shared.PrincipalPermissions `json:"CreateTableDefaultPermissions,omitempty"`
	DataLakeAdmins                   []shared.DataLakePrincipal    `json:"DataLakeAdmins,omitempty"`
	ExternalDataFilteringAllowList   []shared.DataLakePrincipal    `json:"ExternalDataFilteringAllowList,omitempty"`
	Parameters                       map[string]string             `json:"Parameters,omitempty"`
	TrustedResourceOwners            []string                      `json:"TrustedResourceOwners,omitempty"`
}

type PutDataLakeSettingsRequestBody struct {
	// The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
	CatalogID *string `json:"CatalogId,omitempty"`
	// A structure representing a list of Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
	DataLakeSettings PutDataLakeSettingsRequestBodyDataLakeSettings `json:"DataLakeSettings"`
}

type PutDataLakeSettingsRequest struct {
	Headers PutDataLakeSettingsHeaders
	Request PutDataLakeSettingsRequestBody `request:"mediaType=application/json"`
}

type PutDataLakeSettingsResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	PutDataLakeSettingsResponse map[string]interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
