"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import memberability_enum as shared_memberability_enum
from ..shared import membershipquerylogstatus_enum as shared_membershipquerylogstatus_enum
from ..shared import membershipstatus_enum as shared_membershipstatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Membership:
    r"""The membership object."""
    
    arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arn') }})  
    collaboration_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collaborationArn') }})  
    collaboration_creator_account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collaborationCreatorAccountId') }})  
    collaboration_creator_display_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collaborationCreatorDisplayName') }})  
    collaboration_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collaborationId') }})  
    collaboration_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collaborationName') }})  
    create_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    member_abilities: list[shared_memberability_enum.MemberAbilityEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberAbilities') }})  
    query_log_status: shared_membershipquerylogstatus_enum.MembershipQueryLogStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryLogStatus') }})  
    status: shared_membershipstatus_enum.MembershipStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    update_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    