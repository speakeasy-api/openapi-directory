"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error_400 as shared_error_400
from ..shared import error_500 as shared_error_500
from ..shared import itinerary_price_metric as shared_itinerary_price_metric
from ..shared import warning as shared_warning
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetItineraryPriceMetricsRequest:
    
    departure_date: str = dataclasses.field(metadata={'query_param': { 'field_name': 'departureDate', 'style': 'form', 'explode': True }})
    r"""The date on which the traveler will depart from the origin to go to the destination.
    
    Dates are specified in the[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format.
    """  
    destination_iata_code: str = dataclasses.field(metadata={'query_param': { 'field_name': 'destinationIataCode', 'style': 'form', 'explode': True }})
    r"""airport code, following [IATA standard](http://www.iata.org/publications/Pages/code-search.aspx), to which the traveler is going."""  
    origin_iata_code: str = dataclasses.field(metadata={'query_param': { 'field_name': 'originIataCode', 'style': 'form', 'explode': True }})
    r"""airport code, following [IATA standard](http://www.iata.org/publications/Pages/code-search.aspx), from which the traveler will depart"""  
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'currencyCode', 'style': 'form', 'explode': True }})
    r"""the preferred currency for display. Currency is specified in the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format, e.g. EUR for Euro"""  
    one_way: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'oneWay', 'style': 'form', 'explode': True }})
    r"""true to get price metrics for a one way trip,
    false to get price metrics for a round trip
    """  
    
class GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJSONLinksMethodsEnum(str, Enum):
    GET = 'GET'
    POST = 'POST'
    PUT = 'PUT'
    PATCH = 'PATCH'
    DELETE = 'DELETE'
    OPTIONS = 'OPTIONS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJSONLinks:
    r"""Links related to the returned objects(s)"""
    
    href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href'), 'exclude': lambda f: f is None }})
    r"""URL value"""  
    methods: Optional[list[GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJSONLinksMethodsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('methods'), 'exclude': lambda f: f is None }})
    r"""HTTP methods supported by the sibling URI"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJSON:
    r"""Successful reply"""
    
    data: Optional[list[shared_itinerary_price_metric.ItineraryPriceMetric]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})  
    meta: Optional[GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJSONLinks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta'), 'exclude': lambda f: f is None }})
    r"""Links related to the returned objects(s)"""  
    warnings: Optional[list[shared_warning.WarningT]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warnings'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetItineraryPriceMetricsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_400: Optional[shared_error_400.Error400] = dataclasses.field(default=None)
    r"""code    | title
    ------- | ------------------------------------- 
    477     | INVALID FORMAT
    572     | INVALID OPTION                            
    32171   | MANDATORY DATA MISSING
    """  
    error_500: Optional[shared_error_500.Error500] = dataclasses.field(default=None)
    r"""Internal Server Error"""  
    get_itinerary_price_metrics_200_application_vnd_amadeus_plus_json_object: Optional[GetItineraryPriceMetrics200ApplicationVndAmadeusPlusJSON] = dataclasses.field(default=None)
    r"""Successful reply"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    