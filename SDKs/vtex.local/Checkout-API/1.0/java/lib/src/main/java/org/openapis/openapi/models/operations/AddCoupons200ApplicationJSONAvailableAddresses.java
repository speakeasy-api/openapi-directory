/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AddCoupons200ApplicationJSONAvailableAddresses {
    /**
     * Address ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addressId")
    public String addressId;

    public AddCoupons200ApplicationJSONAvailableAddresses withAddressId(String addressId) {
        this.addressId = addressId;
        return this;
    }
    
    /**
     * Address type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addressType")
    public String addressType;

    public AddCoupons200ApplicationJSONAvailableAddresses withAddressType(String addressType) {
        this.addressType = addressType;
        return this;
    }
    
    /**
     * City of the address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;

    public AddCoupons200ApplicationJSONAvailableAddresses withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Complement to the address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complement")
    public String complement;

    public AddCoupons200ApplicationJSONAvailableAddresses withComplement(String complement) {
        this.complement = complement;
        return this;
    }
    
    /**
     * Country of the address. ISO three-letter code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public AddCoupons200ApplicationJSONAvailableAddresses withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Array containing two floats with geocoordinates, first longitude, then latitude.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geoCoordinates")
    public Double[] geoCoordinates;

    public AddCoupons200ApplicationJSONAvailableAddresses withGeoCoordinates(Double[] geoCoordinates) {
        this.geoCoordinates = geoCoordinates;
        return this;
    }
    
    /**
     * Indicates whether address is disposable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDisposable")
    public Boolean isDisposable;

    public AddCoupons200ApplicationJSONAvailableAddresses withIsDisposable(Boolean isDisposable) {
        this.isDisposable = isDisposable;
        return this;
    }
    
    /**
     * Neighborhood of the address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("neighborhood")
    public String neighborhood;

    public AddCoupons200ApplicationJSONAvailableAddresses withNeighborhood(String neighborhood) {
        this.neighborhood = neighborhood;
        return this;
    }
    
    /**
     * Number of the address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;

    public AddCoupons200ApplicationJSONAvailableAddresses withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Name of the receiver.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiverName")
    public String receiverName;

    public AddCoupons200ApplicationJSONAvailableAddresses withReceiverName(String receiverName) {
        this.receiverName = receiverName;
        return this;
    }
    
    /**
     * Reference that may help in the location of the address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public AddCoupons200ApplicationJSONAvailableAddresses withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * State of the address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public AddCoupons200ApplicationJSONAvailableAddresses withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Street of the address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("street")
    public String street;

    public AddCoupons200ApplicationJSONAvailableAddresses withStreet(String street) {
        this.street = street;
        return this;
    }
    
    public AddCoupons200ApplicationJSONAvailableAddresses(){}
}
