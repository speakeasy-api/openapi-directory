"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import batchreadexception as shared_batchreadexception
from ..shared import batchreadsuccessfulresponse as shared_batchreadsuccessfulresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchReadOperationResponse:
    r"""Represents the output of a <code>BatchRead</code> response operation."""
    
    exception_response: Optional[shared_batchreadexception.BatchReadException] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExceptionResponse'), 'exclude': lambda f: f is None }})  
    successful_response: Optional[shared_batchreadsuccessfulresponse.BatchReadSuccessfulResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SuccessfulResponse'), 'exclude': lambda f: f is None }})  
    