// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InputFieldDefinitionSupportedValueTypesEnum string

const (
	InputFieldDefinitionSupportedValueTypesEnumStaticValue    InputFieldDefinitionSupportedValueTypesEnum = "STATIC_VALUE"
	InputFieldDefinitionSupportedValueTypesEnumObjectProperty InputFieldDefinitionSupportedValueTypesEnum = "OBJECT_PROPERTY"
	InputFieldDefinitionSupportedValueTypesEnumFieldData      InputFieldDefinitionSupportedValueTypesEnum = "FIELD_DATA"
)

func (e InputFieldDefinitionSupportedValueTypesEnum) ToPointer() *InputFieldDefinitionSupportedValueTypesEnum {
	return &e
}

func (e *InputFieldDefinitionSupportedValueTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATIC_VALUE":
		fallthrough
	case "OBJECT_PROPERTY":
		fallthrough
	case "FIELD_DATA":
		*e = InputFieldDefinitionSupportedValueTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InputFieldDefinitionSupportedValueTypesEnum: %v", v)
	}
}

// InputFieldDefinition - Configuration for an input field on the custom action
type InputFieldDefinition struct {
	// Whether the field is required for the custom action to be valid
	IsRequired bool `json:"isRequired"`
	// Controls what kind of input a customer can use to specify the field value. Must contain exactly one of `STATIC_VALUE` or `OBJECT_PROPERTY`. If `STATIC_VALUE`, the customer will be able to choose a value when configuring the custom action; if `OBJECT_PROPERTY`, the customer will be able to choose a property from the enrolled workflow object that the field value will be copied from. In the future we may support more than one input control type here.
	SupportedValueTypes []InputFieldDefinitionSupportedValueTypesEnum `json:"supportedValueTypes,omitempty"`
	// The data type expected by an input field.
	TypeDefinition FieldTypeDefinition `json:"typeDefinition"`
}
