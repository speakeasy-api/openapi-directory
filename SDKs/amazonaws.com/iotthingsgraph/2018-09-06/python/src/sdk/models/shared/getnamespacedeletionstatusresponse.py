"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import namespacedeletionstatus_enum as shared_namespacedeletionstatus_enum
from ..shared import namespacedeletionstatuserrorcodes_enum as shared_namespacedeletionstatuserrorcodes_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetNamespaceDeletionStatusResponse:
    r"""Success"""
    
    error_code: Optional[shared_namespacedeletionstatuserrorcodes_enum.NamespaceDeletionStatusErrorCodesEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCode'), 'exclude': lambda f: f is None }})  
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorMessage'), 'exclude': lambda f: f is None }})  
    namespace_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namespaceArn'), 'exclude': lambda f: f is None }})  
    namespace_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namespaceName'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_namespacedeletionstatus_enum.NamespaceDeletionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    