/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FileKey } from "./filekey";
import { S3FileUploadPart } from "./s3fileuploadpart";
import { Expose, Type } from "class-transformer";

/**
 * Node conflict resolution strategy:
 *
 * @remarks
 *
 * * `autorename`
 *
 * * `overwrite`
 *
 * * `fail`
 */
export enum CompleteS3FileUploadRequestResolutionStrategyEnum {
  Autorename = "autorename",
  Overwrite = "overwrite",
  Fail = "fail",
}

/**
 * Request model for completing a S3 file upload
 */
export class CompleteS3FileUploadRequest extends SpeakeasyBase {
  /**
   * File key information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileKey" })
  @Type(() => FileKey)
  fileKey?: FileKey;

  /**
   * New file name to store with
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileName" })
  fileName?: string;

  /**
   * Preserve Download Share Links and point them to the new node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keepShareLinks" })
  keepShareLinks?: boolean;

  /**
   * List of S3 file upload parts
   */
  @SpeakeasyMetadata({ elemType: S3FileUploadPart })
  @Expose({ name: "parts" })
  @Type(() => S3FileUploadPart)
  parts: S3FileUploadPart[];

  /**
   * Node conflict resolution strategy:
   *
   * @remarks
   *
   * * `autorename`
   *
   * * `overwrite`
   *
   * * `fail`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolutionStrategy" })
  resolutionStrategy?: CompleteS3FileUploadRequestResolutionStrategyEnum;
}
