/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.
 */
export enum PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum {
  Usd = "USD",
}

/**
 * Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.
 */
export class PurchaseReservedInstancesOfferingRequestLimitPrice extends SpeakeasyBase {
  @SpeakeasyMetadata()
  amount?: number;

  @SpeakeasyMetadata()
  currencyCode?: PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum;
}

/**
 * Contains the parameters for PurchaseReservedInstancesOffering.
 */
export class PurchaseReservedInstancesOfferingRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  dryRun?: boolean;

  @SpeakeasyMetadata()
  instanceCount: number;

  @SpeakeasyMetadata()
  limitPrice?: PurchaseReservedInstancesOfferingRequestLimitPrice;

  @SpeakeasyMetadata()
  purchaseTime?: Date;

  @SpeakeasyMetadata()
  reservedInstancesOfferingId: string;
}
