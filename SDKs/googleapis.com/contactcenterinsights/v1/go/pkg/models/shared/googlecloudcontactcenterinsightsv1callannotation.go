// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GoogleCloudContactcenterinsightsV1CallAnnotation - A piece of metadata that applies to a window of a call.
type GoogleCloudContactcenterinsightsV1CallAnnotation struct {
	// A point in a conversation that marks the start or the end of an annotation.
	AnnotationEndBoundary *GoogleCloudContactcenterinsightsV1AnnotationBoundary `json:"annotationEndBoundary,omitempty"`
	// A point in a conversation that marks the start or the end of an annotation.
	AnnotationStartBoundary *GoogleCloudContactcenterinsightsV1AnnotationBoundary `json:"annotationStartBoundary,omitempty"`
	// The channel of the audio where the annotation occurs. For single-channel audio, this field is not populated.
	ChannelTag *int `json:"channelTag,omitempty"`
	// The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation.
	EntityMentionData *GoogleCloudContactcenterinsightsV1EntityMentionData `json:"entityMentionData,omitempty"`
	// The data for a hold annotation.
	HoldData map[string]interface{} `json:"holdData,omitempty"`
	// The data for an intent match. Represents an intent match for a text segment in the conversation. A text segment can be part of a sentence, a complete sentence, or an utterance with multiple sentences.
	IntentMatchData *GoogleCloudContactcenterinsightsV1IntentMatchData `json:"intentMatchData,omitempty"`
	// The data for an interruption annotation.
	InterruptionData map[string]interface{} `json:"interruptionData,omitempty"`
	// The data for an issue match annotation.
	IssueMatchData *GoogleCloudContactcenterinsightsV1IssueMatchData `json:"issueMatchData,omitempty"`
	// The data for a matched phrase matcher. Represents information identifying a phrase matcher for a given match.
	PhraseMatchData *GoogleCloudContactcenterinsightsV1PhraseMatchData `json:"phraseMatchData,omitempty"`
	// The data for a sentiment annotation.
	SentimentData *GoogleCloudContactcenterinsightsV1SentimentData `json:"sentimentData,omitempty"`
	// The data for a silence annotation.
	SilenceData map[string]interface{} `json:"silenceData,omitempty"`
}
