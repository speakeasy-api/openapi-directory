/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WaterfallChartSeries - A single series of data for a waterfall chart.
 */
public class WaterfallChartSeries {
    /**
     * Custom subtotal columns appearing in this series. The order in which subtotals are defined is not significant. Only one subtotal may be defined for each data point.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customSubtotals")
    public WaterfallChartCustomSubtotal[] customSubtotals;

    public WaterfallChartSeries withCustomSubtotals(WaterfallChartCustomSubtotal[] customSubtotals) {
        this.customSubtotals = customSubtotals;
        return this;
    }
    
    /**
     * The data included in a domain or series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public ChartData data;

    public WaterfallChartSeries withData(ChartData data) {
        this.data = data;
        return this;
    }
    
    /**
     * Settings for one set of data labels. Data labels are annotations that appear next to a set of data, such as the points on a line chart, and provide additional information about what the data represents, such as a text representation of the value behind that point on the graph.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataLabel")
    public DataLabel dataLabel;

    public WaterfallChartSeries withDataLabel(DataLabel dataLabel) {
        this.dataLabel = dataLabel;
        return this;
    }
    
    /**
     * True to hide the subtotal column from the end of the series. By default, a subtotal column will appear at the end of each series. Setting this field to true will hide that subtotal column for this series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hideTrailingSubtotal")
    public Boolean hideTrailingSubtotal;

    public WaterfallChartSeries withHideTrailingSubtotal(Boolean hideTrailingSubtotal) {
        this.hideTrailingSubtotal = hideTrailingSubtotal;
        return this;
    }
    
    /**
     * Styles for a waterfall chart column.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("negativeColumnsStyle")
    public WaterfallChartColumnStyle negativeColumnsStyle;

    public WaterfallChartSeries withNegativeColumnsStyle(WaterfallChartColumnStyle negativeColumnsStyle) {
        this.negativeColumnsStyle = negativeColumnsStyle;
        return this;
    }
    
    /**
     * Styles for a waterfall chart column.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("positiveColumnsStyle")
    public WaterfallChartColumnStyle positiveColumnsStyle;

    public WaterfallChartSeries withPositiveColumnsStyle(WaterfallChartColumnStyle positiveColumnsStyle) {
        this.positiveColumnsStyle = positiveColumnsStyle;
        return this;
    }
    
    /**
     * Styles for a waterfall chart column.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtotalColumnsStyle")
    public WaterfallChartColumnStyle subtotalColumnsStyle;

    public WaterfallChartSeries withSubtotalColumnsStyle(WaterfallChartColumnStyle subtotalColumnsStyle) {
        this.subtotalColumnsStyle = subtotalColumnsStyle;
        return this;
    }
    
    public WaterfallChartSeries(){}
}
