"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filterexpression as shared_filterexpression
from ..shared import filterlogicaloperator_enum as shared_filterlogicaloperator_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Filter:
    r"""Specifies a transform that splits a dataset into two, based on a filter condition."""
    
    filters: list[shared_filterexpression.FilterExpression] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Filters') }})  
    inputs: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inputs') }})  
    logical_operator: shared_filterlogicaloperator_enum.FilterLogicalOperatorEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LogicalOperator') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    