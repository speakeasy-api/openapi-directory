/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VoiceCapabilityWebhooksEventUrl - Vonage will send call events (e.g. `ringing`, `answered`) to this URL
 */
public class VoiceCapabilityWebhooksEventUrl {
    /**
     * The URL that Vonage sends events related to your call to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;

    public VoiceCapabilityWebhooksEventUrl withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * If Vonage can't connect to the webhook URL for this specified amount of time, then Vonage makes one additional attempt to connect to the webhook endpoint. This is an integer value specified in milliseconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connection_timeout")
    public Long connectionTimeout;

    public VoiceCapabilityWebhooksEventUrl withConnectionTimeout(Long connectionTimeout) {
        this.connectionTimeout = connectionTimeout;
        return this;
    }
    
    /**
     * The HTTP method used to send events to your server
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("http_method")
    public VoiceCapabilityWebhooksEventUrlHttpMethodEnum httpMethod;

    public VoiceCapabilityWebhooksEventUrl withHttpMethod(VoiceCapabilityWebhooksEventUrlHttpMethodEnum httpMethod) {
        this.httpMethod = httpMethod;
        return this;
    }
    
    /**
     * If a response from the webhook URL can't be read for this specified amount of time, then Vonage makes one additional attempt to read the webhook endpoint. This is an integer value specified in milliseconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("socket_timeout")
    public Long socketTimeout;

    public VoiceCapabilityWebhooksEventUrl withSocketTimeout(Long socketTimeout) {
        this.socketTimeout = socketTimeout;
        return this;
    }
    
    public VoiceCapabilityWebhooksEventUrl(){}
}
