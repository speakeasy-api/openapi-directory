"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from typing import Optional


@dataclasses.dataclass
class DestinyDestinyItemQuantity:
    r"""Used in a number of Destiny contracts to return data about an item stack and its quantity. Can optionally return an itemInstanceId if the item is instanced - in which case, the quantity returned will be 1. If it's not... uh, let me know okay? Thanks."""
    
    has_conditional_visibility: Optional[bool] = dataclasses.field(default=None)
    r"""Indicates that this item quantity may be conditionally shown or hidden, based on various sources of state. For example: server flags, account state, or character progress."""  
    item_hash: Optional[int] = dataclasses.field(default=None)
    r"""The hash identifier for the item in question. Use it to look up the item's DestinyInventoryItemDefinition."""  
    item_instance_id: Optional[int] = dataclasses.field(default=None)
    r"""If this quantity is referring to a specific instance of an item, this will have the item's instance ID. Normally, this will be null."""  
    quantity: Optional[int] = dataclasses.field(default=None)
    r"""The amount of the item needed/available depending on the context of where DestinyItemQuantity is being used."""  
    