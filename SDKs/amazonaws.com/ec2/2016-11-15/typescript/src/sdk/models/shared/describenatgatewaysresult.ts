/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Indicates whether the NAT gateway supports public or private connectivity.
 */
export enum DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum {
  Private = "private",
  Public = "public",
}

/**
 * The address status.
 */
export enum DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum {
  Assigning = "assigning",
  Unassigning = "unassigning",
  Associating = "associating",
  Disassociating = "disassociating",
  Succeeded = "succeeded",
  Failed = "failed",
}

/**
 * Describes the IP addresses and network interface associated with a NAT gateway.
 */
export class DescribeNatGatewaysResultNatGatewaysNatGatewayAddresses extends SpeakeasyBase {
  @SpeakeasyMetadata()
  allocationId?: string;

  @SpeakeasyMetadata()
  associationId?: string;

  @SpeakeasyMetadata()
  failureMessage?: string;

  @SpeakeasyMetadata()
  isPrimary?: boolean;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  privateIp?: string;

  @SpeakeasyMetadata()
  publicIp?: string;

  @SpeakeasyMetadata()
  status?: DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum;
}

/**
 * Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
 */
export class DescribeNatGatewaysResultNatGatewaysProvisionedBandwidth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  provisionTime?: Date;

  @SpeakeasyMetadata()
  provisioned?: string;

  @SpeakeasyMetadata()
  requestTime?: Date;

  @SpeakeasyMetadata()
  requested?: string;

  @SpeakeasyMetadata()
  status?: string;
}

/**
 * <p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>
 */
export enum DescribeNatGatewaysResultNatGatewaysStateEnum {
  Pending = "pending",
  Failed = "failed",
  Available = "available",
  Deleting = "deleting",
  Deleted = "deleted",
}

/**
 * Describes a tag.
 */
export class DescribeNatGatewaysResultNatGatewaysTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a NAT gateway.
 */
export class DescribeNatGatewaysResultNatGateways extends SpeakeasyBase {
  @SpeakeasyMetadata()
  connectivityType?: DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum;

  @SpeakeasyMetadata()
  createTime?: Date;

  @SpeakeasyMetadata()
  deleteTime?: Date;

  @SpeakeasyMetadata()
  failureCode?: string;

  @SpeakeasyMetadata()
  failureMessage?: string;

  @SpeakeasyMetadata({
    elemType: DescribeNatGatewaysResultNatGatewaysNatGatewayAddresses,
  })
  natGatewayAddresses?: DescribeNatGatewaysResultNatGatewaysNatGatewayAddresses[];

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  provisionedBandwidth?: DescribeNatGatewaysResultNatGatewaysProvisionedBandwidth;

  @SpeakeasyMetadata()
  state?: DescribeNatGatewaysResultNatGatewaysStateEnum;

  @SpeakeasyMetadata()
  subnetId?: string;

  @SpeakeasyMetadata({ elemType: DescribeNatGatewaysResultNatGatewaysTags })
  tags?: DescribeNatGatewaysResultNatGatewaysTags[];

  @SpeakeasyMetadata()
  vpcId?: string;
}

/**
 * Success
 */
export class DescribeNatGatewaysResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DescribeNatGatewaysResultNatGateways })
  natGateways?: DescribeNatGatewaysResultNatGateways[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
