/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * <p/>
 */
export class CreateReplicationInstanceMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllocatedStorage" })
  allocatedStorage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoMinorVersionUpgrade" })
  autoMinorVersionUpgrade?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AvailabilityZone" })
  availabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DnsNameServers" })
  dnsNameServers?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EngineVersion" })
  engineVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MultiAZ" })
  multiAZ?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkType" })
  networkType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PreferredMaintenanceWindow" })
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PubliclyAccessible" })
  publiclyAccessible?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstanceClass" })
  replicationInstanceClass: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstanceIdentifier" })
  replicationInstanceIdentifier: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationSubnetGroupIdentifier" })
  replicationSubnetGroupIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceIdentifier" })
  resourceIdentifier?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "VpcSecurityGroupIds" })
  vpcSecurityGroupIds?: string[];
}
