/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConflictDetectionTypeEnum } from "./conflictdetectiontypeenum";
import { ConflictHandlerTypeEnum } from "./conflicthandlertypeenum";
import { LambdaConflictHandlerConfig } from "./lambdaconflicthandlerconfig";
import { Expose, Type } from "class-transformer";

/**
 * <p>Describes a Sync configuration for a resolver.</p> <p>Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.</p>
 */
export class SyncConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "conflictDetection" })
  conflictDetection?: ConflictDetectionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "conflictHandler" })
  conflictHandler?: ConflictHandlerTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lambdaConflictHandlerConfig" })
  @Type(() => LambdaConflictHandlerConfig)
  lambdaConflictHandlerConfig?: LambdaConflictHandlerConfig;
}
