// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCompleteLifecycleActionActionEnum
type POSTCompleteLifecycleActionActionEnum string

const (
	POSTCompleteLifecycleActionActionEnumCompleteLifecycleAction POSTCompleteLifecycleActionActionEnum = "CompleteLifecycleAction"
)

func (e *POSTCompleteLifecycleActionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CompleteLifecycleAction":
		*e = POSTCompleteLifecycleActionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCompleteLifecycleActionActionEnum: %s", s)
	}
}

// POSTCompleteLifecycleActionVersionEnum
type POSTCompleteLifecycleActionVersionEnum string

const (
	POSTCompleteLifecycleActionVersionEnumTwoThousandAndEleven0101 POSTCompleteLifecycleActionVersionEnum = "2011-01-01"
)

func (e *POSTCompleteLifecycleActionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = POSTCompleteLifecycleActionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCompleteLifecycleActionVersionEnum: %s", s)
	}
}

type POSTCompleteLifecycleActionRequest struct {
	Action            POSTCompleteLifecycleActionActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                 `request:"mediaType=text/xml"`
	Version           POSTCompleteLifecycleActionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCompleteLifecycleActionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
