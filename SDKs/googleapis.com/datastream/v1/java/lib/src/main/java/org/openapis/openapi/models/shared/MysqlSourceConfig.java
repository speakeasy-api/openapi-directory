/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MysqlSourceConfig - MySQL source configuration
 */
public class MysqlSourceConfig {
    /**
     * MySQL database structure
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludeObjects")
    public MysqlRdbms excludeObjects;
    public MysqlSourceConfig withExcludeObjects(MysqlRdbms excludeObjects) {
        this.excludeObjects = excludeObjects;
        return this;
    }
    
    /**
     * MySQL database structure
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeObjects")
    public MysqlRdbms includeObjects;
    public MysqlSourceConfig withIncludeObjects(MysqlRdbms includeObjects) {
        this.includeObjects = includeObjects;
        return this;
    }
    
    /**
     * Maximum number of concurrent backfill tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxConcurrentBackfillTasks")
    public Integer maxConcurrentBackfillTasks;
    public MysqlSourceConfig withMaxConcurrentBackfillTasks(Integer maxConcurrentBackfillTasks) {
        this.maxConcurrentBackfillTasks = maxConcurrentBackfillTasks;
        return this;
    }
    
    /**
     * Maximum number of concurrent CDC tasks. The number should be non negative. If not set (or set to 0), the system's default value will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxConcurrentCdcTasks")
    public Integer maxConcurrentCdcTasks;
    public MysqlSourceConfig withMaxConcurrentCdcTasks(Integer maxConcurrentCdcTasks) {
        this.maxConcurrentCdcTasks = maxConcurrentCdcTasks;
        return this;
    }
    
}
