"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InputTransformer:
    r"""Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event."""
    
    input_template: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputTemplate') }})  
    input_paths_map: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputPathsMap'), 'exclude': lambda f: f is None }})  
    