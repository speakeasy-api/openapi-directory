<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class AggregateBucket
{
    /**
     * Available for Bucket.Type.ACTIVITY_TYPE, Bucket.Type.ACTIVITY_SEGMENT
     * 
     * @var ?int $activity
     */
	#[\JMS\Serializer\Annotation\SerializedName('activity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $activity = null;
    
    /**
     * There will be one dataset per AggregateBy in the request.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Dataset> $dataset
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataset')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Dataset>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dataset = null;
    
    /**
     * The end time for the aggregated data, in milliseconds since epoch, inclusive.
     * 
     * @var ?string $endTimeMillis
     */
	#[\JMS\Serializer\Annotation\SerializedName('endTimeMillis')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endTimeMillis = null;
    
    /**
     * Sessions contain metadata, such as a user-friendly name and time interval information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Session $session
     */
	#[\JMS\Serializer\Annotation\SerializedName('session')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Session')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Session $session = null;
    
    /**
     * The start time for the aggregated data, in milliseconds since epoch, inclusive.
     * 
     * @var ?string $startTimeMillis
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTimeMillis')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTimeMillis = null;
    
    /**
     * The type of a bucket signifies how the data aggregation is performed in the bucket.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AggregateBucketTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AggregateBucketTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AggregateBucketTypeEnum $type = null;
    
	public function __construct()
	{
		$this->activity = null;
		$this->dataset = null;
		$this->endTimeMillis = null;
		$this->session = null;
		$this->startTimeMillis = null;
		$this->type = null;
	}
}
