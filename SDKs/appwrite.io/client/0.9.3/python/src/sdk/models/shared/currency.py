"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Currency:
    r"""Currency"""
    
    code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})
    r"""Currency code in [ISO 4217-1](http://en.wikipedia.org/wiki/ISO_4217) three-character format."""  
    decimal_digits: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('decimalDigits') }})
    r"""Number of decimal digits."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Currency name."""  
    name_plural: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namePlural') }})
    r"""Currency plural name"""  
    rounding: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rounding') }})
    r"""Currency digit rounding."""  
    symbol: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbol') }})
    r"""Currency symbol."""  
    symbol_native: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbolNative') }})
    r"""Currency native symbol."""  
    