// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateACheckTransferDefaultApplicationJSON13StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CreateACheckTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CreateACheckTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CreateACheckTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON13TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON13TypeEnumRateLimitedError CreateACheckTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CreateACheckTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON13 struct {
	Detail     string                                                 `json:"detail"`
	RetryAfter *int64                                                 `json:"retry_after,omitempty"`
	Status     CreateACheckTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                 `json:"title"`
	Type       CreateACheckTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON12StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree CreateACheckTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CreateACheckTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateACheckTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON12TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError CreateACheckTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CreateACheckTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON12 struct {
	Detail string                                                 `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON11StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour CreateACheckTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CreateACheckTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateACheckTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON11TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError CreateACheckTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CreateACheckTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON11 struct {
	Detail string                                                 `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON10StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON10StatusEnumFourHundred CreateACheckTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CreateACheckTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateACheckTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON10TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON10TypeEnumMalformedRequestError CreateACheckTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CreateACheckTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON10 struct {
	Detail string                                                 `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON9StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON9StatusEnumFourHundred CreateACheckTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CreateACheckTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateACheckTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON9TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON9TypeEnumInvalidParametersError CreateACheckTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CreateACheckTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                              `json:"errors,omitempty"`
	Status CreateACheckTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON8StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine CreateACheckTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CreateACheckTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateACheckTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON8TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON8TypeEnumInvalidOperationError CreateACheckTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CreateACheckTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON8 struct {
	Detail string                                                `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON7StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne CreateACheckTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CreateACheckTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CreateACheckTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON7TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CreateACheckTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CreateACheckTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON7 struct {
	Detail string                                                `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON6StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON6StatusEnumFiveHundred CreateACheckTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CreateACheckTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CreateACheckTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON6TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON6TypeEnumInternalServerError CreateACheckTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CreateACheckTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON6 struct {
	Detail string                                                `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON5StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree CreateACheckTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CreateACheckTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateACheckTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON5TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CreateACheckTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CreateACheckTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON5 struct {
	Detail string                                                `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON4StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CreateACheckTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CreateACheckTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CreateACheckTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON4TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CreateACheckTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CreateACheckTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON4 struct {
	Detail string                                                `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON3StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine CreateACheckTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CreateACheckTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateACheckTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON3TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError CreateACheckTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CreateACheckTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON3 struct {
	Detail string                                                `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON2StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree CreateACheckTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CreateACheckTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateACheckTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON2TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CreateACheckTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CreateACheckTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON2 struct {
	Detail string                                                `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CreateACheckTransferDefaultApplicationJSON1StatusEnum string

const (
	CreateACheckTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour CreateACheckTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CreateACheckTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateACheckTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON1TypeEnum string

const (
	CreateACheckTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CreateACheckTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CreateACheckTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CreateACheckTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateACheckTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CreateACheckTransferDefaultApplicationJSON1 struct {
	Detail string                                                `json:"detail"`
	Status CreateACheckTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   CreateACheckTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CreateACheckTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Transfer
	CheckTransfer *shared.CheckTransfer
	// Error
	Error interface{}
}
