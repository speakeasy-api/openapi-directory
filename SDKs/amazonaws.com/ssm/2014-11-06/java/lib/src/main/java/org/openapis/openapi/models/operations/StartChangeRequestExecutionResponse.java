/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class StartChangeRequestExecutionResponse {
    /**
     * AutomationDefinitionNotApprovedException
     */
    
    public Object automationDefinitionNotApprovedException;

    public StartChangeRequestExecutionResponse withAutomationDefinitionNotApprovedException(Object automationDefinitionNotApprovedException) {
        this.automationDefinitionNotApprovedException = automationDefinitionNotApprovedException;
        return this;
    }
    
    /**
     * AutomationDefinitionNotFoundException
     */
    
    public Object automationDefinitionNotFoundException;

    public StartChangeRequestExecutionResponse withAutomationDefinitionNotFoundException(Object automationDefinitionNotFoundException) {
        this.automationDefinitionNotFoundException = automationDefinitionNotFoundException;
        return this;
    }
    
    /**
     * AutomationDefinitionVersionNotFoundException
     */
    
    public Object automationDefinitionVersionNotFoundException;

    public StartChangeRequestExecutionResponse withAutomationDefinitionVersionNotFoundException(Object automationDefinitionVersionNotFoundException) {
        this.automationDefinitionVersionNotFoundException = automationDefinitionVersionNotFoundException;
        return this;
    }
    
    /**
     * AutomationExecutionLimitExceededException
     */
    
    public Object automationExecutionLimitExceededException;

    public StartChangeRequestExecutionResponse withAutomationExecutionLimitExceededException(Object automationExecutionLimitExceededException) {
        this.automationExecutionLimitExceededException = automationExecutionLimitExceededException;
        return this;
    }
    
    
    public String contentType;

    public StartChangeRequestExecutionResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * IdempotentParameterMismatch
     */
    
    public Object idempotentParameterMismatch;

    public StartChangeRequestExecutionResponse withIdempotentParameterMismatch(Object idempotentParameterMismatch) {
        this.idempotentParameterMismatch = idempotentParameterMismatch;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;

    public StartChangeRequestExecutionResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * InvalidAutomationExecutionParametersException
     */
    
    public Object invalidAutomationExecutionParametersException;

    public StartChangeRequestExecutionResponse withInvalidAutomationExecutionParametersException(Object invalidAutomationExecutionParametersException) {
        this.invalidAutomationExecutionParametersException = invalidAutomationExecutionParametersException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.StartChangeRequestExecutionResult startChangeRequestExecutionResult;

    public StartChangeRequestExecutionResponse withStartChangeRequestExecutionResult(org.openapis.openapi.models.shared.StartChangeRequestExecutionResult startChangeRequestExecutionResult) {
        this.startChangeRequestExecutionResult = startChangeRequestExecutionResult;
        return this;
    }
    
    
    public Integer statusCode;

    public StartChangeRequestExecutionResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public StartChangeRequestExecutionResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public StartChangeRequestExecutionResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
