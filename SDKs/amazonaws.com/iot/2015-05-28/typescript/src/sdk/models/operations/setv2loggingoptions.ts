/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The default logging level.
 */
export enum SetV2LoggingOptionsRequestBodyDefaultLogLevelEnum {
  Debug = "DEBUG",
  Info = "INFO",
  Error = "ERROR",
  Warn = "WARN",
  Disabled = "DISABLED",
}

export class SetV2LoggingOptionsRequestBody extends SpeakeasyBase {
  /**
   * The default logging level.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultLogLevel" })
  defaultLogLevel?: SetV2LoggingOptionsRequestBodyDefaultLogLevelEnum;

  /**
   * If true all logs are disabled. The default is false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disableAllLogs" })
  disableAllLogs?: boolean;

  /**
   * The ARN of the role that allows IoT to write to Cloudwatch logs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;
}

export class SetV2LoggingOptionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: SetV2LoggingOptionsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class SetV2LoggingOptionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalException
   */
  @SpeakeasyMetadata()
  internalException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;
}
