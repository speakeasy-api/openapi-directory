<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Store
{
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Address')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Address $address = null;
    
    /**
     * The description of the store.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The list of terminals assigned to the store.
     * 
     * @var ?array<string> $inStoreTerminals
     */
	#[\JMS\Serializer\Annotation\SerializedName('inStoreTerminals')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $inStoreTerminals = null;
    
    /**
     * The code of the merchant account.
     * 
     * @var ?string $merchantAccountCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantAccountCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantAccountCode = null;
    
    /**
     * The status of the store:
     * 
     * 
     * - `PreActive`: the store has been created, but not yet activated. 
     * 
     * - `Active`: the store has been activated. This means you can process payments for this store. 
     * 
     * - `Inactive`: the store is currently not active. 
     * 
     * - `InactiveWithModifications`: the store is currently not active, but payment modifications such as refunds are possible. 
     * 
     * - `Closed`: the store has been closed. 
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * The code of the store.
     * 
     * @var string $store
     */
	#[\JMS\Serializer\Annotation\SerializedName('store')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $store;
    
	public function __construct()
	{
		$this->address = null;
		$this->description = null;
		$this->inStoreTerminals = null;
		$this->merchantAccountCode = null;
		$this->status = null;
		$this->store = "";
	}
}
