/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryVmRequest {
    /**
     * Filter by ID of effective SLA Domain.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=effective_sla_domain_id")
    public String effectiveSlaDomainId;

    public QueryVmRequest withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * Filters by the name of operating system using infix search.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=guest_os_name")
    public String guestOsName;

    public QueryVmRequest withGuestOsName(String guestOsName) {
        this.guestOsName = guestOsName;
        return this;
    }
    
    /**
     * Filter by the isRelic field of the virtual machine. When this parameter is not set, return both relic and non-relic virtual machines.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_relic")
    public Boolean isRelic;

    public QueryVmRequest withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QueryVmRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Search by using a virtual machine managed object ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=moid")
    public String moid;

    public QueryVmRequest withMoid(String moid) {
        this.moid = moid;
        return this;
    }
    
    /**
     * Search by using a virtual machine name.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public QueryVmRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Ignore these many matches in the beginning.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QueryVmRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Filter by primary cluster ID, or **local**.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_cluster_id")
    public String primaryClusterId;

    public QueryVmRequest withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Filter by SLA Domain assignment type.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sla_assignment")
    public QueryVmSLAAssignmentEnum slaAssignment;

    public QueryVmRequest withSlaAssignment(QueryVmSLAAssignmentEnum slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * Sort results based on the specified attribute.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryVmSortByEnum sortBy;

    public QueryVmRequest withSortBy(QueryVmSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Sort order, either ascending or descending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryVmSortOrderEnum sortOrder;

    public QueryVmRequest withSortOrder(QueryVmSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QueryVmRequest(){}
}
