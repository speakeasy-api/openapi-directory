"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CancelTestMatrixResponseTestStateEnum(str, Enum):
    r"""The current rolled-up state of the test matrix. If this state is already final, then the cancelation request will have no effect."""
    TEST_STATE_UNSPECIFIED = 'TEST_STATE_UNSPECIFIED'
    VALIDATING = 'VALIDATING'
    PENDING = 'PENDING'
    RUNNING = 'RUNNING'
    FINISHED = 'FINISHED'
    ERROR = 'ERROR'
    UNSUPPORTED_ENVIRONMENT = 'UNSUPPORTED_ENVIRONMENT'
    INCOMPATIBLE_ENVIRONMENT = 'INCOMPATIBLE_ENVIRONMENT'
    INCOMPATIBLE_ARCHITECTURE = 'INCOMPATIBLE_ARCHITECTURE'
    CANCELLED = 'CANCELLED'
    INVALID = 'INVALID'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CancelTestMatrixResponse:
    r"""Response containing the current state of the specified test matrix."""
    
    test_state: Optional[CancelTestMatrixResponseTestStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testState'), 'exclude': lambda f: f is None }})
    r"""The current rolled-up state of the test matrix. If this state is already final, then the cancelation request will have no effect."""  
    