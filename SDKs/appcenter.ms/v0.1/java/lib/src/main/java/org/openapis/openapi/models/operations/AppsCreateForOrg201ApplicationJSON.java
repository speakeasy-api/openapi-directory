/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AppsCreateForOrg201ApplicationJSON - Success
 */
public class AppsCreateForOrg201ApplicationJSON {
    /**
     * A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics
     */
    @JsonProperty("app_secret")
    public String appSecret;
    public AppsCreateForOrg201ApplicationJSON withAppSecret(String appSecret) {
        this.appSecret = appSecret;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("azure_subscription")
    public AppsCreateForOrg201ApplicationJSONAzureSubscription azureSubscription;
    public AppsCreateForOrg201ApplicationJSON withAzureSubscription(AppsCreateForOrg201ApplicationJSONAzureSubscription azureSubscription) {
        this.azureSubscription = azureSubscription;
        return this;
    }
    
    /**
     * The created date of this app
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;
    public AppsCreateForOrg201ApplicationJSON withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The description of the app
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public AppsCreateForOrg201ApplicationJSON withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The display name of the app
     */
    @JsonProperty("display_name")
    public String displayName;
    public AppsCreateForOrg201ApplicationJSON withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The string representation of the source of the app's icon
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon_source")
    public String iconSource;
    public AppsCreateForOrg201ApplicationJSON withIconSource(String iconSource) {
        this.iconSource = iconSource;
        return this;
    }
    
    /**
     * The string representation of the URL pointing to the app's icon
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon_url")
    public String iconUrl;
    public AppsCreateForOrg201ApplicationJSON withIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }
    
    /**
     * The unique ID (UUID) of the app
     */
    @JsonProperty("id")
    public String id;
    public AppsCreateForOrg201ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The permissions of the calling user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("member_permissions")
    public AppsCreateForOrg201ApplicationJSONMemberPermissionsEnum[] memberPermissions;
    public AppsCreateForOrg201ApplicationJSON withMemberPermissions(AppsCreateForOrg201ApplicationJSONMemberPermissionsEnum[] memberPermissions) {
        this.memberPermissions = memberPermissions;
        return this;
    }
    
    /**
     * The name of the app used in URLs
     */
    @JsonProperty("name")
    public String name;
    public AppsCreateForOrg201ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The creation origin of this app
     */
    @JsonProperty("origin")
    public AppsCreateForOrg201ApplicationJSONOriginEnum origin;
    public AppsCreateForOrg201ApplicationJSON withOrigin(AppsCreateForOrg201ApplicationJSONOriginEnum origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * The OS the app will be running on
     */
    @JsonProperty("os")
    public AppsCreateForOrg201ApplicationJSONOsEnum os;
    public AppsCreateForOrg201ApplicationJSON withOs(AppsCreateForOrg201ApplicationJSONOsEnum os) {
        this.os = os;
        return this;
    }
    
    /**
     * The information about the app's owner
     */
    @JsonProperty("owner")
    public AppsCreateForOrg201ApplicationJSONOwner owner;
    public AppsCreateForOrg201ApplicationJSON withOwner(AppsCreateForOrg201ApplicationJSONOwner owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * The platform of the app
     */
    @JsonProperty("platform")
    public AppsCreateForOrg201ApplicationJSONPlatformEnum platform;
    public AppsCreateForOrg201ApplicationJSON withPlatform(AppsCreateForOrg201ApplicationJSONPlatformEnum platform) {
        this.platform = platform;
        return this;
    }
    
    /**
     * A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("release_type")
    public String releaseType;
    public AppsCreateForOrg201ApplicationJSON withReleaseType(String releaseType) {
        this.releaseType = releaseType;
        return this;
    }
    
    /**
     * The last updated date of this app
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;
    public AppsCreateForOrg201ApplicationJSON withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
