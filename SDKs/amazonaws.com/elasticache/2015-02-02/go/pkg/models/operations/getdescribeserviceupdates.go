// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETDescribeServiceUpdatesActionEnum
type GETDescribeServiceUpdatesActionEnum string

const (
	GETDescribeServiceUpdatesActionEnumDescribeServiceUpdates GETDescribeServiceUpdatesActionEnum = "DescribeServiceUpdates"
)

func (e GETDescribeServiceUpdatesActionEnum) ToPointer() *GETDescribeServiceUpdatesActionEnum {
	return &e
}

func (e *GETDescribeServiceUpdatesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeServiceUpdates":
		*e = GETDescribeServiceUpdatesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeServiceUpdatesActionEnum: %v", v)
	}
}

// GETDescribeServiceUpdatesVersionEnum
type GETDescribeServiceUpdatesVersionEnum string

const (
	GETDescribeServiceUpdatesVersionEnumTwoThousandAndFifteen0202 GETDescribeServiceUpdatesVersionEnum = "2015-02-02"
)

func (e GETDescribeServiceUpdatesVersionEnum) ToPointer() *GETDescribeServiceUpdatesVersionEnum {
	return &e
}

func (e *GETDescribeServiceUpdatesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETDescribeServiceUpdatesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeServiceUpdatesVersionEnum: %v", v)
	}
}

type GETDescribeServiceUpdatesRequest struct {
	Action GETDescribeServiceUpdatesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of records to include in the response
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// The unique ID of the service update
	ServiceUpdateName *string `queryParam:"style=form,explode=true,name=ServiceUpdateName"`
	// The status of the service update
	ServiceUpdateStatus []shared.ServiceUpdateStatusEnum     `queryParam:"style=form,explode=true,name=ServiceUpdateStatus"`
	Version             GETDescribeServiceUpdatesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm       *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeServiceUpdatesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
