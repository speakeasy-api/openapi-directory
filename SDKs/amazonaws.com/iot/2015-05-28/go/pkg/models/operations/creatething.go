// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateThingRequestBodyAttributePayload - The attribute payload.
type CreateThingRequestBodyAttributePayload struct {
	Attributes map[string]string `json:"attributes,omitempty"`
	Merge      *bool             `json:"merge,omitempty"`
}

type CreateThingRequestBody struct {
	// The attribute payload.
	AttributePayload *CreateThingRequestBodyAttributePayload `json:"attributePayload,omitempty"`
	// The name of the billing group the thing will be added to.
	BillingGroupName *string `json:"billingGroupName,omitempty"`
	// The name of the thing type associated with the new thing.
	ThingTypeName *string `json:"thingTypeName,omitempty"`
}

type CreateThingRequest struct {
	RequestBody       CreateThingRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// <p>The name of the thing to create.</p> <p>You can't change a thing's name after you create it. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.</p>
	ThingName string `pathParam:"style=simple,explode=false,name=thingName"`
}

type CreateThingResponse struct {
	ContentType string
	// Success
	CreateThingResponse *shared.CreateThingResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
