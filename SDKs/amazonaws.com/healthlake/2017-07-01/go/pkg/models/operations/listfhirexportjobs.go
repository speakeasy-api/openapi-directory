// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListFHIRExportJobsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListFHIRExportJobsXAmzTargetEnum
type ListFHIRExportJobsXAmzTargetEnum string

const (
	ListFHIRExportJobsXAmzTargetEnumHealthLakeListFhirExportJobs ListFHIRExportJobsXAmzTargetEnum = "HealthLake.ListFHIRExportJobs"
)

func (e *ListFHIRExportJobsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HealthLake.ListFHIRExportJobs":
		*e = ListFHIRExportJobsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFHIRExportJobsXAmzTargetEnum: %s", s)
	}
}

type ListFHIRExportJobsHeaders struct {
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListFHIRExportJobsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListFHIRExportJobsRequest struct {
	QueryParams ListFHIRExportJobsQueryParams
	Headers     ListFHIRExportJobsHeaders
	Request     shared.ListFHIRExportJobsRequest `request:"mediaType=application/json"`
}

type ListFHIRExportJobsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListFHIRExportJobsResponse *shared.ListFHIRExportJobsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
