// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListMetricStreamsActionEnum
type GETListMetricStreamsActionEnum string

const (
	GETListMetricStreamsActionEnumListMetricStreams GETListMetricStreamsActionEnum = "ListMetricStreams"
)

func (e *GETListMetricStreamsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListMetricStreams":
		*e = GETListMetricStreamsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListMetricStreamsActionEnum: %s", s)
	}
}

// GETListMetricStreamsVersionEnum
type GETListMetricStreamsVersionEnum string

const (
	GETListMetricStreamsVersionEnumTwoThousandAndTen0801 GETListMetricStreamsVersionEnum = "2010-08-01"
)

func (e *GETListMetricStreamsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-08-01":
		*e = GETListMetricStreamsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListMetricStreamsVersionEnum: %s", s)
	}
}

type GETListMetricStreamsQueryParams struct {
	Action GETListMetricStreamsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The maximum number of results to return in one operation.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// Include this value, if it was returned by the previous call, to get the next set of metric streams.
	NextToken *string                         `queryParam:"style=form,explode=true,name=NextToken"`
	Version   GETListMetricStreamsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETListMetricStreamsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListMetricStreamsRequest struct {
	QueryParams GETListMetricStreamsQueryParams
	Headers     GETListMetricStreamsHeaders
}

type GETListMetricStreamsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
