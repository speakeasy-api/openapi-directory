<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class BINLookupResponse
{
    /**
     * The BIN or IIN number
     * 
     * @var string $binNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('bin-number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $binNumber;
    
    /**
     * The card brand (e.g. Visa or Mastercard)
     * 
     * @var string $cardBrand
     */
	#[\JMS\Serializer\Annotation\SerializedName('card-brand')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cardBrand;
    
    /**
     * The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID
     * 
     * @var string $cardCategory
     */
	#[\JMS\Serializer\Annotation\SerializedName('card-category')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cardCategory;
    
    /**
     * The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD
     * 
     * @var string $cardType
     */
	#[\JMS\Serializer\Annotation\SerializedName('card-type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cardType;
    
    /**
     * The full country name of the issuer
     * 
     * @var string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $country;
    
    /**
     * The ISO 2-letter country code of the issuer
     * 
     * @var string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('country-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $countryCode;
    
    /**
     * The ISO 3-letter country code of the issuer
     * 
     * @var string $countryCode3
     */
	#[\JMS\Serializer\Annotation\SerializedName('country-code3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $countryCode3;
    
    /**
     * ISO 4217 currency code associated with the country of the issuer
     * 
     * @var string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currencyCode;
    
    /**
     * True if the customers IP is listed on one of our blocklists, see the <a href="http://www.neutrinoapi.com/api/ip-blocklist/">IP Blocklist API</a>
     * 
     * @var bool $ipBlocklisted
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip-blocklisted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $ipBlocklisted;
    
    /**
     * An array of strings indicating which blocklists this IP is listed on
     * 
     * @var array<string> $ipBlocklists
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip-blocklists')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $ipBlocklists;
    
    /**
     * The city of the customers IP (if detectable)
     * 
     * @var string $ipCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip-city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ipCity;
    
    /**
     * The country of the customers IP
     * 
     * @var string $ipCountry
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip-country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ipCountry;
    
    /**
     * The ISO 2-letter country code of the customers IP
     * 
     * @var string $ipCountryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip-country-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ipCountryCode;
    
    /**
     * The ISO 3-letter country code of the customers IP
     * 
     * @var string $ipCountryCode3
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip-country-code3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ipCountryCode3;
    
    /**
     * True if the customers IP country matches the BIN country
     * 
     * @var bool $ipMatchesBin
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip-matches-bin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $ipMatchesBin;
    
    /**
     * The region of the customers IP (if detectable)
     * 
     * @var string $ipRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip-region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ipRegion;
    
    /**
     * Is this a commercial/business use card
     * 
     * @var bool $isCommercial
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-commercial')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isCommercial;
    
    /**
     * Is this a prepaid or prepaid reloadable card
     * 
     * @var bool $isPrepaid
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-prepaid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isPrepaid;
    
    /**
     * The card issuer
     * 
     * @var string $issuer
     */
	#[\JMS\Serializer\Annotation\SerializedName('issuer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issuer;
    
    /**
     * The card issuers phone number
     * 
     * @var string $issuerPhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('issuer-phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issuerPhone;
    
    /**
     * The card issuers website
     * 
     * @var string $issuerWebsite
     */
	#[\JMS\Serializer\Annotation\SerializedName('issuer-website')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issuerWebsite;
    
    /**
     * Is this a valid BIN or IIN number
     * 
     * @var bool $valid
     */
	#[\JMS\Serializer\Annotation\SerializedName('valid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $valid;
    
	public function __construct()
	{
		$this->binNumber = "";
		$this->cardBrand = "";
		$this->cardCategory = "";
		$this->cardType = "";
		$this->country = "";
		$this->countryCode = "";
		$this->countryCode3 = "";
		$this->currencyCode = "";
		$this->ipBlocklisted = false;
		$this->ipBlocklists = [];
		$this->ipCity = "";
		$this->ipCountry = "";
		$this->ipCountryCode = "";
		$this->ipCountryCode3 = "";
		$this->ipMatchesBin = false;
		$this->ipRegion = "";
		$this->isCommercial = false;
		$this->isPrepaid = false;
		$this->issuer = "";
		$this->issuerPhone = "";
		$this->issuerWebsite = "";
		$this->valid = false;
	}
}
