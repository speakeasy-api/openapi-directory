<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateMapRequestBody
{
    /**
     * Specifies the map tile style selected from an available provider.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateMapRequestBodyConfiguration $configuration
     */
	#[\JMS\Serializer\Annotation\SerializedName('Configuration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateMapRequestBodyConfiguration')]
    public CreateMapRequestBodyConfiguration $configuration;
    
    /**
     * An optional description for the map resource.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * <p>The name for the map resource.</p> <p>Requirements:</p> <ul> <li> <p>Must contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique map resource name. </p> </li> <li> <p>No spaces allowed. For example, <code>ExampleMap</code>.</p> </li> </ul>
     * 
     * @var string $mapName
     */
	#[\JMS\Serializer\Annotation\SerializedName('MapName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $mapName;
    
    /**
     * No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateMapRequestBodyPricingPlanEnum $pricingPlan
     */
	#[\JMS\Serializer\Annotation\SerializedName('PricingPlan')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateMapRequestBodyPricingPlanEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateMapRequestBodyPricingPlanEnum $pricingPlan = null;
    
    /**
     * <p>Applies one or more tags to the map resource. A tag is a key-value pair helps manage, identify, search, and filter your resources by labelling them.</p> <p>Format: <code>"key" : "value"</code> </p> <p>Restrictions:</p> <ul> <li> <p>Maximum 50 tags per resource</p> </li> <li> <p>Each resource tag must be unique with a maximum of one value.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in UTF-8</p> </li> <li> <p>Maximum value length: 256 Unicode characters in UTF-8</p> </li> <li> <p>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + - = . _ : / @. </p> </li> <li> <p>Cannot use "aws:" as a prefix for a key.</p> </li> </ul>
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->configuration = new \OpenAPI\OpenAPI\Models\Operations\CreateMapRequestBodyConfiguration();
		$this->description = null;
		$this->mapName = "";
		$this->pricingPlan = null;
		$this->tags = null;
	}
}
