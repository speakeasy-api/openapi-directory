// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ApplicationEventEventTypeEnum - App event type.
type ApplicationEventEventTypeEnum string

const (
	ApplicationEventEventTypeEnumApplicationEventTypeUnspecified ApplicationEventEventTypeEnum = "APPLICATION_EVENT_TYPE_UNSPECIFIED"
	ApplicationEventEventTypeEnumInstalled                       ApplicationEventEventTypeEnum = "INSTALLED"
	ApplicationEventEventTypeEnumChanged                         ApplicationEventEventTypeEnum = "CHANGED"
	ApplicationEventEventTypeEnumDataCleared                     ApplicationEventEventTypeEnum = "DATA_CLEARED"
	ApplicationEventEventTypeEnumRemoved                         ApplicationEventEventTypeEnum = "REMOVED"
	ApplicationEventEventTypeEnumReplaced                        ApplicationEventEventTypeEnum = "REPLACED"
	ApplicationEventEventTypeEnumRestarted                       ApplicationEventEventTypeEnum = "RESTARTED"
	ApplicationEventEventTypeEnumPinned                          ApplicationEventEventTypeEnum = "PINNED"
	ApplicationEventEventTypeEnumUnpinned                        ApplicationEventEventTypeEnum = "UNPINNED"
)

func (e *ApplicationEventEventTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "APPLICATION_EVENT_TYPE_UNSPECIFIED":
		fallthrough
	case "INSTALLED":
		fallthrough
	case "CHANGED":
		fallthrough
	case "DATA_CLEARED":
		fallthrough
	case "REMOVED":
		fallthrough
	case "REPLACED":
		fallthrough
	case "RESTARTED":
		fallthrough
	case "PINNED":
		fallthrough
	case "UNPINNED":
		*e = ApplicationEventEventTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationEventEventTypeEnum: %s", s)
	}
}

// ApplicationEvent - An app-related event.
type ApplicationEvent struct {
	// The creation time of the event.
	CreateTime *string `json:"createTime,omitempty"`
	// App event type.
	EventType *ApplicationEventEventTypeEnum `json:"eventType,omitempty"`
}
