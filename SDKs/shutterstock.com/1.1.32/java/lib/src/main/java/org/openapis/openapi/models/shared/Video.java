/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * Video - Information about a video
 */
public class Video {
    /**
     * Date this video was added to the Shutterstock library
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("added_date")
    public LocalDate addedDate;

    public Video withAddedDate(LocalDate addedDate) {
        this.addedDate = addedDate;
        return this;
    }
    
    /**
     * Affiliate referral link; appears only for registered affiliate partners
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("affiliate_url")
    public String affiliateUrl;

    public Video withAffiliateUrl(String affiliateUrl) {
        this.affiliateUrl = affiliateUrl;
        return this;
    }
    
    /**
     * Aspect ratio of this video in decimal format, such as 0.6667
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aspect")
    public Double aspect;

    public Video withAspect(Double aspect) {
        this.aspect = aspect;
        return this;
    }
    
    /**
     * Aspect ratio of the video as a ratio, such as 16:9
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aspect_ratio")
    public String aspectRatio;

    public Video withAspectRatio(String aspectRatio) {
        this.aspectRatio = aspectRatio;
        return this;
    }
    
    /**
     * Video asset information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assets")
    public VideoAssets assets;

    public Video withAssets(VideoAssets assets) {
        this.assets = assets;
        return this;
    }
    
    /**
     * List of categories
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories")
    public Category[] categories;

    public Video withCategories(Category[] categories) {
        this.categories = categories;
        return this;
    }
    
    /**
     * Information about a contributor
     */
    @JsonProperty("contributor")
    public Contributor contributor;

    public Video withContributor(Contributor contributor) {
        this.contributor = contributor;
        return this;
    }
    
    /**
     * Description of this video
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Video withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Duration of this video, in seconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Double duration;

    public Video withDuration(Double duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Whether or not this video has been released for use by the model appearing in it
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_model_release")
    public Boolean hasModelRelease;

    public Video withHasModelRelease(Boolean hasModelRelease) {
        this.hasModelRelease = hasModelRelease;
        return this;
    }
    
    /**
     * Whether or not this video has received a release to show the landmark or property appearing in it
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_property_release")
    public Boolean hasPropertyRelease;

    public Video withHasPropertyRelease(Boolean hasPropertyRelease) {
        this.hasPropertyRelease = hasPropertyRelease;
        return this;
    }
    
    /**
     * ID of the video
     */
    @JsonProperty("id")
    public String id;

    public Video withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether or not this video contains adult content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_adult")
    public Boolean isAdult;

    public Video withIsAdult(Boolean isAdult) {
        this.isAdult = isAdult;
        return this;
    }
    
    /**
     * Whether or not this video is editorial content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_editorial")
    public Boolean isEditorial;

    public Video withIsEditorial(Boolean isEditorial) {
        this.isEditorial = isEditorial;
        return this;
    }
    
    /**
     * Keywords associated with the content of this video
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keywords")
    public String[] keywords;

    public Video withKeywords(String[] keywords) {
        this.keywords = keywords;
        return this;
    }
    
    /**
     * Media type of this video, should always be "video"
     */
    @JsonProperty("media_type")
    public String mediaType;

    public Video withMediaType(String mediaType) {
        this.mediaType = mediaType;
        return this;
    }
    
    /**
     * List of models in this video
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("models")
    public Model[] models;

    public Video withModels(Model[] models) {
        this.models = models;
        return this;
    }
    
    /**
     * Link to video information page; included only for certain accounts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public Video withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public Video(@JsonProperty("contributor") Contributor contributor, @JsonProperty("id") String id, @JsonProperty("media_type") String mediaType) {
        this.contributor = contributor;
        this.id = id;
        this.mediaType = mediaType;
  }
}
