/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * NotebookExecutionSummary - Details for a notebook execution. The details include information such as the unique ID and status of the notebook execution.
 */
public class NotebookExecutionSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EditorId")
    public String editorId;

    public NotebookExecutionSummary withEditorId(String editorId) {
        this.editorId = editorId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;

    public NotebookExecutionSummary withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotebookExecutionId")
    public String notebookExecutionId;

    public NotebookExecutionSummary withNotebookExecutionId(String notebookExecutionId) {
        this.notebookExecutionId = notebookExecutionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotebookExecutionName")
    public String notebookExecutionName;

    public NotebookExecutionSummary withNotebookExecutionName(String notebookExecutionName) {
        this.notebookExecutionName = notebookExecutionName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;

    public NotebookExecutionSummary withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public NotebookExecutionStatusEnum status;

    public NotebookExecutionSummary withStatus(NotebookExecutionStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public NotebookExecutionSummary(){}
}
