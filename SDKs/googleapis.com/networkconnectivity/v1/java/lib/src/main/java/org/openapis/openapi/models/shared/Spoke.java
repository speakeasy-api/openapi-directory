/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Spoke - A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances
 */
public class Spoke {
    /**
     * Output only. The time the spoke was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Spoke withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * An optional description of the spoke.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Spoke withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Immutable. The name of the hub that this spoke is attached to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hub")
    public String hub;

    public Spoke withHub(String hub) {
        this.hub = hub;
        return this;
    }
    
    /**
     * Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Spoke withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedInterconnectAttachments")
    public LinkedInterconnectAttachments linkedInterconnectAttachments;

    public Spoke withLinkedInterconnectAttachments(LinkedInterconnectAttachments linkedInterconnectAttachments) {
        this.linkedInterconnectAttachments = linkedInterconnectAttachments;
        return this;
    }
    
    /**
     * A collection of router appliance instances. If you configure multiple router appliance instances to receive data from the same set of sites outside of Google Cloud, we recommend that you associate those instances with the same spoke.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedRouterApplianceInstances")
    public LinkedRouterApplianceInstances linkedRouterApplianceInstances;

    public Spoke withLinkedRouterApplianceInstances(LinkedRouterApplianceInstances linkedRouterApplianceInstances) {
        this.linkedRouterApplianceInstances = linkedRouterApplianceInstances;
        return this;
    }
    
    /**
     * A collection of Cloud VPN tunnel resources. These resources should be redundant HA VPN tunnels that all advertise the same prefixes to Google Cloud. Alternatively, in a passive/active configuration, all tunnels should be capable of advertising the same prefixes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedVpnTunnels")
    public LinkedVpnTunnels linkedVpnTunnels;

    public Spoke withLinkedVpnTunnels(LinkedVpnTunnels linkedVpnTunnels) {
        this.linkedVpnTunnels = linkedVpnTunnels;
        return this;
    }
    
    /**
     * Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Spoke withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The current lifecycle state of this spoke.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public SpokeStateEnum state;

    public Spoke withState(SpokeStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different unique_id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uniqueId")
    public String uniqueId;

    public Spoke withUniqueId(String uniqueId) {
        this.uniqueId = uniqueId;
        return this;
    }
    
    /**
     * Output only. The time the spoke was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Spoke withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Spoke(){}
}
