/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DestinyDestinyItemQuantity - Used in a number of Destiny contracts to return data about an item stack and its quantity. Can optionally return an itemInstanceId if the item is instanced - in which case, the quantity returned will be 1. If it's not... uh, let me know okay? Thanks.
 */
public class DestinyDestinyItemQuantity {
    /**
     * Indicates that this item quantity may be conditionally shown or hidden, based on various sources of state. For example: server flags, account state, or character progress.
     */
    
    public Boolean hasConditionalVisibility;

    public DestinyDestinyItemQuantity withHasConditionalVisibility(Boolean hasConditionalVisibility) {
        this.hasConditionalVisibility = hasConditionalVisibility;
        return this;
    }
    
    /**
     * The hash identifier for the item in question. Use it to look up the item's DestinyInventoryItemDefinition.
     */
    
    public Long itemHash;

    public DestinyDestinyItemQuantity withItemHash(Long itemHash) {
        this.itemHash = itemHash;
        return this;
    }
    
    /**
     * If this quantity is referring to a specific instance of an item, this will have the item's instance ID. Normally, this will be null.
     */
    
    public Long itemInstanceId;

    public DestinyDestinyItemQuantity withItemInstanceId(Long itemInstanceId) {
        this.itemInstanceId = itemInstanceId;
        return this;
    }
    
    /**
     * The amount of the item needed/available depending on the context of where DestinyItemQuantity is being used.
     */
    
    public Integer quantity;

    public DestinyDestinyItemQuantity withQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }
    
    public DestinyDestinyItemQuantity(){}
}
