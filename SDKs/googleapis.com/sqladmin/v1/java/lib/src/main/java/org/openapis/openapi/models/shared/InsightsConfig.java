/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InsightsConfig - Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.
 */
public class InsightsConfig {
    /**
     * Whether Query Insights feature is enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryInsightsEnabled")
    public Boolean queryInsightsEnabled;

    public InsightsConfig withQueryInsightsEnabled(Boolean queryInsightsEnabled) {
        this.queryInsightsEnabled = queryInsightsEnabled;
        return this;
    }
    
    /**
     * Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryPlansPerMinute")
    public Integer queryPlansPerMinute;

    public InsightsConfig withQueryPlansPerMinute(Integer queryPlansPerMinute) {
        this.queryPlansPerMinute = queryPlansPerMinute;
        return this;
    }
    
    /**
     * Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryStringLength")
    public Integer queryStringLength;

    public InsightsConfig withQueryStringLength(Integer queryStringLength) {
        this.queryStringLength = queryStringLength;
        return this;
    }
    
    /**
     * Whether Query Insights will record application tags from query when enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordApplicationTags")
    public Boolean recordApplicationTags;

    public InsightsConfig withRecordApplicationTags(Boolean recordApplicationTags) {
        this.recordApplicationTags = recordApplicationTags;
        return this;
    }
    
    /**
     * Whether Query Insights will record client address when enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordClientAddress")
    public Boolean recordClientAddress;

    public InsightsConfig withRecordClientAddress(Boolean recordClientAddress) {
        this.recordClientAddress = recordClientAddress;
        return this;
    }
    
    public InsightsConfig(){}
}
