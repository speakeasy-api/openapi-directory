/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Getblockchaininfo200ApplicationJSONData {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bestblockhash")
    public String bestblockhash;

    public Getblockchaininfo200ApplicationJSONData withBestblockhash(String bestblockhash) {
        this.bestblockhash = bestblockhash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blocks")
    public Double blocks;

    public Getblockchaininfo200ApplicationJSONData withBlocks(Double blocks) {
        this.blocks = blocks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chain")
    public String chain;

    public Getblockchaininfo200ApplicationJSONData withChain(String chain) {
        this.chain = chain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chainwork")
    public String chainwork;

    public Getblockchaininfo200ApplicationJSONData withChainwork(String chainwork) {
        this.chainwork = chainwork;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("difficulty")
    public Double difficulty;

    public Getblockchaininfo200ApplicationJSONData withDifficulty(Double difficulty) {
        this.difficulty = difficulty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public Double headers;

    public Getblockchaininfo200ApplicationJSONData withHeaders(Double headers) {
        this.headers = headers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialblockdownload")
    public Boolean initialblockdownload;

    public Getblockchaininfo200ApplicationJSONData withInitialblockdownload(Boolean initialblockdownload) {
        this.initialblockdownload = initialblockdownload;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediantime")
    public Double mediantime;

    public Getblockchaininfo200ApplicationJSONData withMediantime(Double mediantime) {
        this.mediantime = mediantime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pruned")
    public Boolean pruned;

    public Getblockchaininfo200ApplicationJSONData withPruned(Boolean pruned) {
        this.pruned = pruned;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size_on_disk")
    public Double sizeOnDisk;

    public Getblockchaininfo200ApplicationJSONData withSizeOnDisk(Double sizeOnDisk) {
        this.sizeOnDisk = sizeOnDisk;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time")
    public Double time;

    public Getblockchaininfo200ApplicationJSONData withTime(Double time) {
        this.time = time;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verificationprogress")
    public Double verificationprogress;

    public Getblockchaininfo200ApplicationJSONData withVerificationprogress(Double verificationprogress) {
        this.verificationprogress = verificationprogress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warnings")
    public String warnings;

    public Getblockchaininfo200ApplicationJSONData withWarnings(String warnings) {
        this.warnings = warnings;
        return this;
    }
    
    public Getblockchaininfo200ApplicationJSONData(){}
}
