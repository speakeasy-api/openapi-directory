/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class PublicUserPlan extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collaborators" })
  collaborators: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "private_repos" })
  privateRepos: number;

  @SpeakeasyMetadata()
  @Expose({ name: "space" })
  space: number;
}

/**
 * Public User
 */
export class PublicUser extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bio" })
  bio: string;

  @SpeakeasyMetadata()
  @Expose({ name: "blog" })
  blog: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborators" })
  collaborators?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  company: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "disk_usage" })
  diskUsage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  @SpeakeasyMetadata()
  @Expose({ name: "events_url" })
  eventsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "followers" })
  followers: number;

  @SpeakeasyMetadata()
  @Expose({ name: "followers_url" })
  followersUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "following" })
  following: number;

  @SpeakeasyMetadata()
  @Expose({ name: "following_url" })
  followingUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gists_url" })
  gistsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gravatar_id" })
  gravatarId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hireable" })
  hireable: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location: string;

  @SpeakeasyMetadata()
  @Expose({ name: "login" })
  login: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "organizations_url" })
  organizationsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owned_private_repos" })
  ownedPrivateRepos?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "plan" })
  @Type(() => PublicUserPlan)
  plan?: PublicUserPlan;

  @SpeakeasyMetadata()
  @Expose({ name: "private_gists" })
  privateGists?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "public_gists" })
  publicGists: number;

  @SpeakeasyMetadata()
  @Expose({ name: "public_repos" })
  publicRepos: number;

  @SpeakeasyMetadata()
  @Expose({ name: "received_events_url" })
  receivedEventsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repos_url" })
  reposUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site_admin" })
  siteAdmin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "starred_url" })
  starredUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subscriptions_url" })
  subscriptionsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "suspended_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  suspendedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "total_private_repos" })
  totalPrivateRepos?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "twitter_username" })
  twitterUsername?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
