"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FstabEntry:
    r"""Single fstab entry."""
    
    file: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file'), 'exclude': lambda f: f is None }})
    r"""The mount point for the filesystem."""  
    freq: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freq'), 'exclude': lambda f: f is None }})
    r"""Used by dump to determine which filesystems need to be dumped."""  
    mntops: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mntops'), 'exclude': lambda f: f is None }})
    r"""Mount options associated with the filesystem."""  
    passno: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('passno'), 'exclude': lambda f: f is None }})
    r"""Used by the fsck(8) program to determine the order in which filesystem checks are done at reboot time."""  
    spec: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec'), 'exclude': lambda f: f is None }})
    r"""The block special device or remote filesystem to be mounted."""  
    vfstype: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vfstype'), 'exclude': lambda f: f is None }})
    r"""The type of the filesystem."""  
    