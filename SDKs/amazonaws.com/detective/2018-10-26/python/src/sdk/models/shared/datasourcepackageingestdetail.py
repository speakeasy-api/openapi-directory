"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasourcepackageingeststate_enum as shared_datasourcepackageingeststate_enum
from ..shared import timestampforcollection as shared_timestampforcollection
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatasourcePackageIngestDetail:
    r"""Details about the data source packages ingested by your behavior graph."""
    
    datasource_package_ingest_state: Optional[shared_datasourcepackageingeststate_enum.DatasourcePackageIngestStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatasourcePackageIngestState'), 'exclude': lambda f: f is None }})  
    last_ingest_state_change: Optional[dict[str, shared_timestampforcollection.TimestampForCollection]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastIngestStateChange'), 'exclude': lambda f: f is None }})  
    