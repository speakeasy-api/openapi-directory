"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FolderData:
    r"""Container class for the folder API"""
    
    electricity_counter_value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ElectricityCounterValue'), 'exclude': lambda f: f is None }})
    r"""The Counter values for electricity (kWh)"""  
    electricity_power: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ElectricityPower'), 'exclude': lambda f: f is None }})
    r"""The Power for electricity (kW)"""  
    gas_counter_value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GasCounterValue'), 'exclude': lambda f: f is None }})
    r"""The Counter values for Gas (m3)"""  
    gas_flow_rate: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GasFlowRate'), 'exclude': lambda f: f is None }})
    r"""The Flow Rate for Gas (m3/h)"""  
    heat_counter_value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HeatCounterValue'), 'exclude': lambda f: f is None }})
    r"""The Counter values for Heat (kWh)"""  
    heat_power: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HeatPower'), 'exclude': lambda f: f is None }})
    r"""The Power for Heat (kW)"""  
    water_counter_value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WaterCounterValue'), 'exclude': lambda f: f is None }})
    r"""The Counter values for Water (m3)"""  
    water_flow_rate: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WaterFlowRate'), 'exclude': lambda f: f is None }})
    r"""The Flow Rate for Water (m3/h)"""  
    