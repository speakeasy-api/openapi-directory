// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MLModelFilterVariableEnum string

const (
	MLModelFilterVariableEnumCreatedAt              MLModelFilterVariableEnum = "CreatedAt"
	MLModelFilterVariableEnumLastUpdatedAt          MLModelFilterVariableEnum = "LastUpdatedAt"
	MLModelFilterVariableEnumStatus                 MLModelFilterVariableEnum = "Status"
	MLModelFilterVariableEnumName                   MLModelFilterVariableEnum = "Name"
	MLModelFilterVariableEnumIamUser                MLModelFilterVariableEnum = "IAMUser"
	MLModelFilterVariableEnumTrainingDataSourceID   MLModelFilterVariableEnum = "TrainingDataSourceId"
	MLModelFilterVariableEnumRealtimeEndpointStatus MLModelFilterVariableEnum = "RealtimeEndpointStatus"
	MLModelFilterVariableEnumMlModelType            MLModelFilterVariableEnum = "MLModelType"
	MLModelFilterVariableEnumAlgorithm              MLModelFilterVariableEnum = "Algorithm"
	MLModelFilterVariableEnumTrainingDataURI        MLModelFilterVariableEnum = "TrainingDataURI"
)

func (e MLModelFilterVariableEnum) ToPointer() *MLModelFilterVariableEnum {
	return &e
}

func (e *MLModelFilterVariableEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreatedAt":
		fallthrough
	case "LastUpdatedAt":
		fallthrough
	case "Status":
		fallthrough
	case "Name":
		fallthrough
	case "IAMUser":
		fallthrough
	case "TrainingDataSourceId":
		fallthrough
	case "RealtimeEndpointStatus":
		fallthrough
	case "MLModelType":
		fallthrough
	case "Algorithm":
		fallthrough
	case "TrainingDataURI":
		*e = MLModelFilterVariableEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MLModelFilterVariableEnum: %v", v)
	}
}
