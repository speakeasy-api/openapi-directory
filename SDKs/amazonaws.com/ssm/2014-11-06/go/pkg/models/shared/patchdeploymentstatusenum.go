// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PatchDeploymentStatusEnum string

const (
	PatchDeploymentStatusEnumApproved         PatchDeploymentStatusEnum = "APPROVED"
	PatchDeploymentStatusEnumPendingApproval  PatchDeploymentStatusEnum = "PENDING_APPROVAL"
	PatchDeploymentStatusEnumExplicitApproved PatchDeploymentStatusEnum = "EXPLICIT_APPROVED"
	PatchDeploymentStatusEnumExplicitRejected PatchDeploymentStatusEnum = "EXPLICIT_REJECTED"
)

func (e PatchDeploymentStatusEnum) ToPointer() *PatchDeploymentStatusEnum {
	return &e
}

func (e *PatchDeploymentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APPROVED":
		fallthrough
	case "PENDING_APPROVAL":
		fallthrough
	case "EXPLICIT_APPROVED":
		fallthrough
	case "EXPLICIT_REJECTED":
		*e = PatchDeploymentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchDeploymentStatusEnum: %v", v)
	}
}
