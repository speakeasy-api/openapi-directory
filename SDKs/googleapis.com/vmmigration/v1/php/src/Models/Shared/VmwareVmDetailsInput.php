<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VmwareVmDetailsInput - VmwareVmDetails describes a VM in vCenter.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VmwareVmDetailsInput
{
    /**
     * The total size of the storage allocated to the VM in MB.
     * 
     * @var ?string $committedStorageMb
     */
	#[\JMS\Serializer\Annotation\SerializedName('committedStorageMb')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $committedStorageMb = null;
    
    /**
     * The number of cpus in the VM.
     * 
     * @var ?int $cpuCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cpuCount = null;
    
    /**
     * The descriptive name of the vCenter's datacenter this VM is contained in.
     * 
     * @var ?string $datacenterDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('datacenterDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $datacenterDescription = null;
    
    /**
     * The id of the vCenter's datacenter this VM is contained in.
     * 
     * @var ?string $datacenterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('datacenterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $datacenterId = null;
    
    /**
     * The number of disks the VM has.
     * 
     * @var ?int $diskCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $diskCount = null;
    
    /**
     * The display name of the VM. Note that this is not necessarily unique.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * The VM's OS. See for example https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html for types of strings this might hold.
     * 
     * @var ?string $guestDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $guestDescription = null;
    
    /**
     * The size of the memory of the VM in MB.
     * 
     * @var ?int $memoryMb
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryMb')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memoryMb = null;
    
    /**
     * The power state of the VM at the moment list was taken.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VmwareVmDetailsPowerStateEnum $powerState
     */
	#[\JMS\Serializer\Annotation\SerializedName('powerState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VmwareVmDetailsPowerStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VmwareVmDetailsPowerStateEnum $powerState = null;
    
    /**
     * The unique identifier of the VM in vCenter.
     * 
     * @var ?string $uuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uuid = null;
    
    /**
     * The VM's id in the source (note that this is not the MigratingVm's id). This is the moref id of the VM.
     * 
     * @var ?string $vmId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmId = null;
    
	public function __construct()
	{
		$this->committedStorageMb = null;
		$this->cpuCount = null;
		$this->datacenterDescription = null;
		$this->datacenterId = null;
		$this->diskCount = null;
		$this->displayName = null;
		$this->guestDescription = null;
		$this->memoryMb = null;
		$this->powerState = null;
		$this->uuid = null;
		$this->vmId = null;
	}
}
