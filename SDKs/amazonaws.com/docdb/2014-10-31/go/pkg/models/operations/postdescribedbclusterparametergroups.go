// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeDBClusterParameterGroupsActionEnum
type POSTDescribeDBClusterParameterGroupsActionEnum string

const (
	POSTDescribeDBClusterParameterGroupsActionEnumDescribeDbClusterParameterGroups POSTDescribeDBClusterParameterGroupsActionEnum = "DescribeDBClusterParameterGroups"
)

func (e POSTDescribeDBClusterParameterGroupsActionEnum) ToPointer() *POSTDescribeDBClusterParameterGroupsActionEnum {
	return &e
}

func (e *POSTDescribeDBClusterParameterGroupsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeDBClusterParameterGroups":
		*e = POSTDescribeDBClusterParameterGroupsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeDBClusterParameterGroupsActionEnum: %v", v)
	}
}

// POSTDescribeDBClusterParameterGroupsVersionEnum
type POSTDescribeDBClusterParameterGroupsVersionEnum string

const (
	POSTDescribeDBClusterParameterGroupsVersionEnumTwoThousandAndFourteen1031 POSTDescribeDBClusterParameterGroupsVersionEnum = "2014-10-31"
)

func (e POSTDescribeDBClusterParameterGroupsVersionEnum) ToPointer() *POSTDescribeDBClusterParameterGroupsVersionEnum {
	return &e
}

func (e *POSTDescribeDBClusterParameterGroupsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = POSTDescribeDBClusterParameterGroupsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeDBClusterParameterGroupsVersionEnum: %v", v)
	}
}

type POSTDescribeDBClusterParameterGroupsRequest struct {
	Action POSTDescribeDBClusterParameterGroupsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords        *string                                         `queryParam:"style=form,explode=true,name=MaxRecords"`
	RequestBody       []byte                                          `request:"mediaType=text/xml"`
	Version           POSTDescribeDBClusterParameterGroupsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeDBClusterParameterGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
