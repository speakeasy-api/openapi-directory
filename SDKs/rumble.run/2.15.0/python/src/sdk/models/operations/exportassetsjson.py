"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import asset as shared_asset
from typing import Optional


@dataclasses.dataclass
class ExportAssetsJSONSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ExportAssetsJSONRequest:
    
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""an optional list of fields to export, comma-separated"""  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""an optional search string for filtering results"""  
    

@dataclasses.dataclass
class ExportAssetsJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    assets: Optional[list[shared_asset.Asset]] = dataclasses.field(default=None)
    r"""filtered asset results"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    