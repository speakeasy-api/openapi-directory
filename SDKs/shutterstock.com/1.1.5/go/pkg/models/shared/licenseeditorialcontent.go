// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LicenseEditorialContentSizeEnum - Asset size to download
type LicenseEditorialContentSizeEnum string

const (
	LicenseEditorialContentSizeEnumSmall    LicenseEditorialContentSizeEnum = "small"
	LicenseEditorialContentSizeEnumMedium   LicenseEditorialContentSizeEnum = "medium"
	LicenseEditorialContentSizeEnumOriginal LicenseEditorialContentSizeEnum = "original"
)

func (e *LicenseEditorialContentSizeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "small":
		fallthrough
	case "medium":
		fallthrough
	case "original":
		*e = LicenseEditorialContentSizeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseEditorialContentSizeEnum: %s", s)
	}
}

// LicenseEditorialContent - Individual editorial content to license
type LicenseEditorialContent struct {
	// Editorial ID
	EditorialID string `json:"editorial_id"`
	// License agreement to use for licensing
	License string `json:"license"`
	// Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Asset size to download
	Size *LicenseEditorialContentSizeEnum `json:"size,omitempty"`
}
