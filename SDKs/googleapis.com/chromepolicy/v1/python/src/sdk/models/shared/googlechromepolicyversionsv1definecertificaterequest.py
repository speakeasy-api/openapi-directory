"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlechromepolicyversionsv1networksetting as shared_googlechromepolicyversionsv1networksetting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleChromePolicyVersionsV1DefineCertificateRequest:
    r"""Request object for creating a certificate."""
    
    ceritificate_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ceritificateName'), 'exclude': lambda f: f is None }})
    r"""Optional. The optional name of the certificate. If not specified, the certificate issuer will be used as the name."""  
    certificate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificate'), 'exclude': lambda f: f is None }})
    r"""Required. The raw contents of the .PEM, .CRT, or .CER file."""  
    settings: Optional[list[shared_googlechromepolicyversionsv1networksetting.GoogleChromePolicyVersionsV1NetworkSetting]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settings'), 'exclude': lambda f: f is None }})
    r"""Optional. Certificate settings within the chrome.networks.certificates namespace."""  
    target_resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetResource'), 'exclude': lambda f: f is None }})
    r"""Required. The target resource on which this certificate is applied. The following resources are supported: * Organizational Unit (\\"orgunits/{orgunit_id}\\")"""  
    