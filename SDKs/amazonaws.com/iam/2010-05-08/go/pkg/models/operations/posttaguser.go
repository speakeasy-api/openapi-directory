// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTTagUserActionEnum
type POSTTagUserActionEnum string

const (
	POSTTagUserActionEnumTagUser POSTTagUserActionEnum = "TagUser"
)

func (e POSTTagUserActionEnum) ToPointer() *POSTTagUserActionEnum {
	return &e
}

func (e *POSTTagUserActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TagUser":
		*e = POSTTagUserActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTTagUserActionEnum: %v", v)
	}
}

// POSTTagUserVersionEnum
type POSTTagUserVersionEnum string

const (
	POSTTagUserVersionEnumTwoThousandAndTen0508 POSTTagUserVersionEnum = "2010-05-08"
)

func (e POSTTagUserVersionEnum) ToPointer() *POSTTagUserVersionEnum {
	return &e
}

func (e *POSTTagUserVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTTagUserVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTTagUserVersionEnum: %v", v)
	}
}

type POSTTagUserRequest struct {
	Action            POSTTagUserActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                 `request:"mediaType=text/xml"`
	Version           POSTTagUserVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTTagUserResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
