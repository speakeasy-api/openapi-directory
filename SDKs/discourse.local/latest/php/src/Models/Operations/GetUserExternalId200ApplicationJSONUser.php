<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetUserExternalId200ApplicationJSONUser
{
	#[\JMS\Serializer\Annotation\SerializedName('admin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $admin;
    
    /**
     * $allowedPmUsernames
     * 
     * @var array<mixed> $allowedPmUsernames
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowed_pm_usernames')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $allowedPmUsernames;
    
	#[\JMS\Serializer\Annotation\SerializedName('avatar_template')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $avatarTemplate;
    
	#[\JMS\Serializer\Annotation\SerializedName('badge_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $badgeCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_be_deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canBeDeleted;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_change_bio')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canChangeBio;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_change_location')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canChangeLocation;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_change_tracking_preferences')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canChangeTrackingPreferences;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_change_website')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canChangeWebsite;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_delete_all_posts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canDeleteAllPosts;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_edit')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canEdit;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_edit_email')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canEditEmail;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_edit_name')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canEditName;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_edit_username')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canEditUsername;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_ignore_user')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canIgnoreUser;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_mute_user')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canMuteUser;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_send_private_message_to_user')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canSendPrivateMessageToUser;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_send_private_messages')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canSendPrivateMessages;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_upload_profile_header')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canUploadProfileHeader;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_upload_user_card_background')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $canUploadUserCardBackground;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('custom_fields')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserCustomFields')]
    public GetUserExternalId200ApplicationJSONUserCustomFields $customFields;
    
	#[\JMS\Serializer\Annotation\SerializedName('featured_topic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $featuredTopic;
    
    /**
     * $featuredUserBadgeIds
     * 
     * @var array<mixed> $featuredUserBadgeIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('featured_user_badge_ids')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $featuredUserBadgeIds;
    
	#[\JMS\Serializer\Annotation\SerializedName('flair_bg_color')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $flairBgColor;
    
	#[\JMS\Serializer\Annotation\SerializedName('flair_color')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $flairColor;
    
	#[\JMS\Serializer\Annotation\SerializedName('flair_group_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $flairGroupId;
    
	#[\JMS\Serializer\Annotation\SerializedName('flair_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $flairName;
    
	#[\JMS\Serializer\Annotation\SerializedName('flair_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $flairUrl;
    
    /**
     * $groupUsers
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserGroupUsers> $groupUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('group_users')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserGroupUsers>')]
    public array $groupUsers;
    
    /**
     * $groups
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserGroups> $groups
     */
	#[\JMS\Serializer\Annotation\SerializedName('groups')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserGroups>')]
    public array $groups;
    
	#[\JMS\Serializer\Annotation\SerializedName('has_title_badges')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $hasTitleBadges;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('ignored')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $ignored;
    
    /**
     * $ignoredUsernames
     * 
     * @var array<mixed> $ignoredUsernames
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignored_usernames')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $ignoredUsernames;
    
	#[\JMS\Serializer\Annotation\SerializedName('invited_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $invitedBy;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_posted_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lastPostedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_seen_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lastSeenAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('locale')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $locale;
    
	#[\JMS\Serializer\Annotation\SerializedName('mailing_list_posts_per_day')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $mailingListPostsPerDay;
    
	#[\JMS\Serializer\Annotation\SerializedName('moderator')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $moderator;
    
	#[\JMS\Serializer\Annotation\SerializedName('muted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $muted;
    
    /**
     * $mutedCategoryIds
     * 
     * @var array<mixed> $mutedCategoryIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('muted_category_ids')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $mutedCategoryIds;
    
    /**
     * $mutedTags
     * 
     * @var array<mixed> $mutedTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('muted_tags')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $mutedTags;
    
    /**
     * $mutedUsernames
     * 
     * @var array<mixed> $mutedUsernames
     */
	#[\JMS\Serializer\Annotation\SerializedName('muted_usernames')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $mutedUsernames;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('pending_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $pendingCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('pending_posts_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $pendingPostsCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('post_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $postCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('primary_group_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryGroupId;
    
	#[\JMS\Serializer\Annotation\SerializedName('primary_group_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryGroupName;
    
	#[\JMS\Serializer\Annotation\SerializedName('profile_view_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $profileViewCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('recent_time_read')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $recentTimeRead;
    
    /**
     * $regularCategoryIds
     * 
     * @var array<mixed> $regularCategoryIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('regular_category_ids')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $regularCategoryIds;
    
	#[\JMS\Serializer\Annotation\SerializedName('second_factor_backup_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $secondFactorBackupEnabled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('second_factor_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $secondFactorEnabled;
    
	#[\JMS\Serializer\Annotation\SerializedName('staged')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $staged;
    
	#[\JMS\Serializer\Annotation\SerializedName('system_avatar_template')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $systemAvatarTemplate;
    
	#[\JMS\Serializer\Annotation\SerializedName('system_avatar_upload_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $systemAvatarUploadId;
    
	#[\JMS\Serializer\Annotation\SerializedName('time_read')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $timeRead;
    
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
    /**
     * $trackedCategoryIds
     * 
     * @var array<mixed> $trackedCategoryIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('tracked_category_ids')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $trackedCategoryIds;
    
    /**
     * $trackedTags
     * 
     * @var array<mixed> $trackedTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tracked_tags')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $trackedTags;
    
	#[\JMS\Serializer\Annotation\SerializedName('trust_level')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $trustLevel;
    
	#[\JMS\Serializer\Annotation\SerializedName('uploaded_avatar_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uploadedAvatarId;
    
	#[\JMS\Serializer\Annotation\SerializedName('use_logo_small_as_avatar')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $useLogoSmallAsAvatar;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_api_keys')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $userApiKeys;
    
    /**
     * $userAuthTokens
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserUserAuthTokens> $userAuthTokens
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_auth_tokens')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserUserAuthTokens>')]
    public array $userAuthTokens;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_fields')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserUserFields')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetUserExternalId200ApplicationJSONUserUserFields $userFields = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_notification_schedule')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserUserNotificationSchedule')]
    public GetUserExternalId200ApplicationJSONUserUserNotificationSchedule $userNotificationSchedule;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_option')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserUserOption')]
    public GetUserExternalId200ApplicationJSONUserUserOption $userOption;
    
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $username;
    
    /**
     * $watchedCategoryIds
     * 
     * @var array<mixed> $watchedCategoryIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched_category_ids')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $watchedCategoryIds;
    
    /**
     * $watchedFirstPostCategoryIds
     * 
     * @var array<mixed> $watchedFirstPostCategoryIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched_first_post_category_ids')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $watchedFirstPostCategoryIds;
    
    /**
     * $watchedTags
     * 
     * @var array<mixed> $watchedTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched_tags')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $watchedTags;
    
    /**
     * $watchingFirstPostTags
     * 
     * @var array<mixed> $watchingFirstPostTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('watching_first_post_tags')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    public array $watchingFirstPostTags;
    
	public function __construct()
	{
		$this->admin = false;
		$this->allowedPmUsernames = [];
		$this->avatarTemplate = "";
		$this->badgeCount = 0;
		$this->canBeDeleted = false;
		$this->canChangeBio = false;
		$this->canChangeLocation = false;
		$this->canChangeTrackingPreferences = false;
		$this->canChangeWebsite = false;
		$this->canDeleteAllPosts = false;
		$this->canEdit = false;
		$this->canEditEmail = false;
		$this->canEditName = false;
		$this->canEditUsername = false;
		$this->canIgnoreUser = false;
		$this->canMuteUser = false;
		$this->canSendPrivateMessageToUser = false;
		$this->canSendPrivateMessages = false;
		$this->canUploadProfileHeader = false;
		$this->canUploadUserCardBackground = false;
		$this->createdAt = "";
		$this->customFields = new \OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserCustomFields();
		$this->featuredTopic = "";
		$this->featuredUserBadgeIds = [];
		$this->flairBgColor = "";
		$this->flairColor = "";
		$this->flairGroupId = "";
		$this->flairName = "";
		$this->flairUrl = "";
		$this->groupUsers = [];
		$this->groups = [];
		$this->hasTitleBadges = false;
		$this->id = 0;
		$this->ignored = false;
		$this->ignoredUsernames = [];
		$this->invitedBy = "";
		$this->lastPostedAt = "";
		$this->lastSeenAt = "";
		$this->locale = "";
		$this->mailingListPostsPerDay = 0;
		$this->moderator = false;
		$this->muted = false;
		$this->mutedCategoryIds = [];
		$this->mutedTags = [];
		$this->mutedUsernames = [];
		$this->name = "";
		$this->pendingCount = 0;
		$this->pendingPostsCount = null;
		$this->postCount = 0;
		$this->primaryGroupId = "";
		$this->primaryGroupName = "";
		$this->profileViewCount = 0;
		$this->recentTimeRead = 0;
		$this->regularCategoryIds = [];
		$this->secondFactorBackupEnabled = null;
		$this->secondFactorEnabled = false;
		$this->staged = false;
		$this->systemAvatarTemplate = "";
		$this->systemAvatarUploadId = "";
		$this->timeRead = 0;
		$this->title = "";
		$this->trackedCategoryIds = [];
		$this->trackedTags = [];
		$this->trustLevel = 0;
		$this->uploadedAvatarId = "";
		$this->useLogoSmallAsAvatar = false;
		$this->userApiKeys = "";
		$this->userAuthTokens = [];
		$this->userFields = null;
		$this->userNotificationSchedule = new \OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserUserNotificationSchedule();
		$this->userOption = new \OpenAPI\OpenAPI\Models\Operations\GetUserExternalId200ApplicationJSONUserUserOption();
		$this->username = "";
		$this->watchedCategoryIds = [];
		$this->watchedFirstPostCategoryIds = [];
		$this->watchedTags = [];
		$this->watchingFirstPostTags = [];
	}
}
