<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RepositoryInvitation - Repository invitations let you manage who you collaborate with.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RepositoryInvitation
{
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * Whether or not the invitation has expired
     * 
     * @var ?bool $expired
     */
	#[\JMS\Serializer\Annotation\SerializedName('expired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $expired = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $htmlUrl;
    
    /**
     * Unique identifier of the repository invitation.
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * Simple User
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $invitee
     */
	#[\JMS\Serializer\Annotation\SerializedName('invitee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $invitee;
    
    /**
     * Simple User
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $inviter
     */
	#[\JMS\Serializer\Annotation\SerializedName('inviter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $inviter;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
    /**
     * The permission associated with the invitation.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RepositoryInvitationPermissionsEnum $permissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissions')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RepositoryInvitationPermissionsEnum>')]
    public RepositoryInvitationPermissionsEnum $permissions;
    
    /**
     * Minimal Repository
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\MinimalRepository $repository
     */
	#[\JMS\Serializer\Annotation\SerializedName('repository')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MinimalRepository')]
    public MinimalRepository $repository;
    
    /**
     * URL for the repository invitation
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->createdAt = new \DateTime();
		$this->expired = null;
		$this->htmlUrl = "";
		$this->id = 0;
		$this->invitee = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
		$this->inviter = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
		$this->nodeId = "";
		$this->permissions = \OpenAPI\OpenAPI\Models\Shared\RepositoryInvitationPermissionsEnum::READ;
		$this->repository = new \OpenAPI\OpenAPI\Models\Shared\MinimalRepository();
		$this->url = "";
	}
}
