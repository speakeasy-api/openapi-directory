/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Assignment -  The Assignment data structure represents a single assignment of a HIT to a Worker. The assignment tracks the Worker's efforts to complete the HIT, and contains the results for later retrieval. 
 */
public class Assignment {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("AcceptTime")
    public OffsetDateTime acceptTime;

    public Assignment withAcceptTime(OffsetDateTime acceptTime) {
        this.acceptTime = acceptTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Answer")
    public String answer;

    public Assignment withAnswer(String answer) {
        this.answer = answer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ApprovalTime")
    public OffsetDateTime approvalTime;

    public Assignment withApprovalTime(OffsetDateTime approvalTime) {
        this.approvalTime = approvalTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssignmentId")
    public String assignmentId;

    public Assignment withAssignmentId(String assignmentId) {
        this.assignmentId = assignmentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssignmentStatus")
    public AssignmentStatusEnum assignmentStatus;

    public Assignment withAssignmentStatus(AssignmentStatusEnum assignmentStatus) {
        this.assignmentStatus = assignmentStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("AutoApprovalTime")
    public OffsetDateTime autoApprovalTime;

    public Assignment withAutoApprovalTime(OffsetDateTime autoApprovalTime) {
        this.autoApprovalTime = autoApprovalTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Deadline")
    public OffsetDateTime deadline;

    public Assignment withDeadline(OffsetDateTime deadline) {
        this.deadline = deadline;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HITId")
    public String hitId;

    public Assignment withHITId(String hitId) {
        this.hitId = hitId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("RejectionTime")
    public OffsetDateTime rejectionTime;

    public Assignment withRejectionTime(OffsetDateTime rejectionTime) {
        this.rejectionTime = rejectionTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequesterFeedback")
    public String requesterFeedback;

    public Assignment withRequesterFeedback(String requesterFeedback) {
        this.requesterFeedback = requesterFeedback;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("SubmitTime")
    public OffsetDateTime submitTime;

    public Assignment withSubmitTime(OffsetDateTime submitTime) {
        this.submitTime = submitTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkerId")
    public String workerId;

    public Assignment withWorkerId(String workerId) {
        this.workerId = workerId;
        return this;
    }
    
    public Assignment(){}
}
