/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETDescribeEventsActionEnum {
  DescribeEvents = "DescribeEvents",
}

/**
 * If specified, limits the events returned from this call to include only those with the specified severity or higher.
 */
export enum GETDescribeEventsSeverityEnum {
  Trace = "TRACE",
  Debug = "DEBUG",
  Info = "INFO",
  Warn = "WARN",
  Error = "ERROR",
  Fatal = "FATAL",
}

export enum GETDescribeEventsVersionEnum {
  TwoThousandAndTen1201 = "2010-12-01",
}

export class GETDescribeEventsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETDescribeEventsActionEnum;

  /**
   * If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ApplicationName",
  })
  applicationName?: string;

  /**
   *  If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EndTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  endTime?: Date;

  /**
   * If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EnvironmentId",
  })
  environmentId?: string;

  /**
   * If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EnvironmentName",
  })
  environmentName?: string;

  /**
   * Specifies the maximum number of events that can be returned, beginning with the most recent event.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxRecords",
  })
  maxRecords?: number;

  /**
   * Pagination token. If specified, the events return the next batch of results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NextToken",
  })
  nextToken?: string;

  /**
   * The ARN of a custom platform version. If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this custom platform version.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PlatformArn",
  })
  platformArn?: string;

  /**
   * If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RequestId",
  })
  requestId?: string;

  /**
   * If specified, limits the events returned from this call to include only those with the specified severity or higher.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Severity",
  })
  severity?: GETDescribeEventsSeverityEnum;

  /**
   * If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=StartTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startTime?: Date;

  /**
   * If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TemplateName",
  })
  templateName?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETDescribeEventsVersionEnum;

  /**
   * If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VersionLabel",
  })
  versionLabel?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETDescribeEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
