"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_core_responses_entitiesresponse_api_core_dto_aggregated_aggregatedresult_ as shared_api_core_responses_entitiesresponse_api_core_dto_aggregated_aggregatedresult_
from enum import Enum
from typing import Optional

class ConversionsGetStatisticsAllListGroupByEnum(str, Enum):
    r"""The temporal entity you want to group by (\\"week\\"/\\"month\\"). If unspecified is \\"day\\"."""
    WEEK = 'week'
    MONTH = 'month'

class ConversionsGetStatisticsAllListStatusEnum(str, Enum):
    r"""Status of conversion (\\"deleted\\"/\\"active\\")"""
    DELETED = 'deleted'
    ACTIVE = 'active'

class ConversionsGetStatisticsAllListTimeFrameEnum(str, Enum):
    r"""Timeframe of the request. See list at $timeframeList"""
    TODAY = 'today'
    YESTERDAY = 'yesterday'
    LAST7 = 'last7'
    LAST30 = 'last30'
    LASTMONTH = 'lastmonth'
    CURRENTMONTH = 'currentmonth'
    PREVIOUSMONTH = 'previousmonth'
    LAST90 = 'last90'
    LAST120 = 'last120'
    LAST180 = 'last180'
    LAST12MONTHS = 'last12months'
    LASTYEAR = 'lastyear'
    CURRENTYEAR = 'currentyear'
    BEGINNING = 'beginning'
    CUSTOM = 'custom'


@dataclasses.dataclass
class ConversionsGetStatisticsAllListRequest:
    
    time_frame: ConversionsGetStatisticsAllListTimeFrameEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'timeFrame', 'style': 'form', 'explode': True }})
    r"""Timeframe of the request. See list at $timeframeList"""  
    from_day: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fromDay', 'style': 'form', 'explode': True }})
    r"""If using a \\"custom\\" timeFrame you can specify the starting day (YYYYMMDD)"""  
    group_by: Optional[ConversionsGetStatisticsAllListGroupByEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'groupBy', 'style': 'form', 'explode': True }})
    r"""The temporal entity you want to group by (\\"week\\"/\\"month\\"). If unspecified is \\"day\\"."""  
    status: Optional[ConversionsGetStatisticsAllListStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Status of conversion (\\"deleted\\"/\\"active\\")"""  
    to_day: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'toDay', 'style': 'form', 'explode': True }})
    r"""If using a \\"custom\\" timeFrame you can specify the ending day (YYYYMMDD)"""  
    

@dataclasses.dataclass
class ConversionsGetStatisticsAllListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_core_responses_entities_response_api_core_dto_aggregated_aggregated_result: Optional[shared_api_core_responses_entitiesresponse_api_core_dto_aggregated_aggregatedresult_.APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    