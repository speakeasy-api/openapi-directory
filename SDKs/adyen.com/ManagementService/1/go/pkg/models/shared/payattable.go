// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PayAtTableAuthenticationMethodEnum - Allowed authentication methods: Magswipe, Manual Entry.
type PayAtTableAuthenticationMethodEnum string

const (
	PayAtTableAuthenticationMethodEnumMagswipe PayAtTableAuthenticationMethodEnum = "MAGSWIPE"
	PayAtTableAuthenticationMethodEnumMke      PayAtTableAuthenticationMethodEnum = "MKE"
)

func (e *PayAtTableAuthenticationMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MAGSWIPE":
		fallthrough
	case "MKE":
		*e = PayAtTableAuthenticationMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PayAtTableAuthenticationMethodEnum: %s", s)
	}
}

type PayAtTable struct {
	// Allowed authentication methods: Magswipe, Manual Entry.
	AuthenticationMethod *PayAtTableAuthenticationMethodEnum `json:"authenticationMethod,omitempty"`
	// Enable Pay at table.
	EnablePayAtTable *bool `json:"enablePayAtTable,omitempty"`
}
