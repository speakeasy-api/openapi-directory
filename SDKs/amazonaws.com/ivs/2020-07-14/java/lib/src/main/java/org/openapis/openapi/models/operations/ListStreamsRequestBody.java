/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListStreamsRequestBody {
    /**
     * Object specifying the stream attribute on which to filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filterBy")
    public ListStreamsRequestBodyFilterBy filterBy;

    public ListStreamsRequestBody withFilterBy(ListStreamsRequestBodyFilterBy filterBy) {
        this.filterBy = filterBy;
        return this;
    }
    
    /**
     * Maximum number of streams to return. Default: 100.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;

    public ListStreamsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The first stream to retrieve. This is used for pagination; see the &lt;code&gt;nextToken&lt;/code&gt; response field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;

    public ListStreamsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    public ListStreamsRequestBody(){}
}
