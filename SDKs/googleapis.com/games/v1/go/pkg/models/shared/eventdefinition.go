// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EventDefinitionVisibilityEnum - The visibility of event being tracked in this definition.
type EventDefinitionVisibilityEnum string

const (
	EventDefinitionVisibilityEnumEventVisibilityUnspecified EventDefinitionVisibilityEnum = "EVENT_VISIBILITY_UNSPECIFIED"
	EventDefinitionVisibilityEnumRevealed                   EventDefinitionVisibilityEnum = "REVEALED"
	EventDefinitionVisibilityEnumHidden                     EventDefinitionVisibilityEnum = "HIDDEN"
)

func (e EventDefinitionVisibilityEnum) ToPointer() *EventDefinitionVisibilityEnum {
	return &e
}

func (e *EventDefinitionVisibilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EVENT_VISIBILITY_UNSPECIFIED":
		fallthrough
	case "REVEALED":
		fallthrough
	case "HIDDEN":
		*e = EventDefinitionVisibilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventDefinitionVisibilityEnum: %v", v)
	}
}

// EventDefinition - An event definition resource.
type EventDefinition struct {
	// A list of events that are a child of this event.
	ChildEvents []EventChild `json:"childEvents,omitempty"`
	// Description of what this event represents.
	Description *string `json:"description,omitempty"`
	// The name to display for the event.
	DisplayName *string `json:"displayName,omitempty"`
	// The ID of the event.
	ID *string `json:"id,omitempty"`
	// The base URL for the image that represents the event.
	ImageURL *string `json:"imageUrl,omitempty"`
	// Indicates whether the icon image being returned is a default image, or is game-provided.
	IsDefaultImageURL *bool `json:"isDefaultImageUrl,omitempty"`
	// Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinition`.
	Kind *string `json:"kind,omitempty"`
	// The visibility of event being tracked in this definition.
	Visibility *EventDefinitionVisibilityEnum `json:"visibility,omitempty"`
}
