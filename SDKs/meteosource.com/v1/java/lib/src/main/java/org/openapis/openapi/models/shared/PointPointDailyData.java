/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PointPointDailyData {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("afternoon")
    public PointPointDailyAfternoonData afternoon;
    public PointPointDailyData withAfternoon(PointPointDailyAfternoonData afternoon) {
        this.afternoon = afternoon;
        return this;
    }
    
    @JsonProperty("all_day")
    public PointPointDailyAllDayData allDay;
    public PointPointDailyData withAllDay(PointPointDailyAllDayData allDay) {
        this.allDay = allDay;
        return this;
    }
    
    @JsonProperty("astro")
    public PointPointDailyAstroData astro;
    public PointPointDailyData withAstro(PointPointDailyAstroData astro) {
        this.astro = astro;
        return this;
    }
    
    /**
     * Datetime in YYYY-MM-DDTHH:MM:SS format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("day")
    public byte[] day;
    public PointPointDailyData withDay(byte[] day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evening")
    public PointPointDailyEveningData evening;
    public PointPointDailyData withEvening(PointPointDailyEveningData evening) {
        this.evening = evening;
        return this;
    }
    
    /**
     * Numeric identifier of the weather icon. The following values can appear:
     * 
     * * 1 - Not available
     * * 2 - Sunny
     * * 3 - Mostly sunny
     * * 4 - Partly sunny
     * * 5 - Mostly cloudy
     * * 6 - Cloudy
     * * 7 - Overcast
     * * 8 - Overcast with low clouds
     * * 9 - Fog
     * * 10 - Light rain
     * * 11 - Rain
     * * 12 - Possible rain
     * * 13 - Rain shower
     * * 14 - Thunderstorm
     * * 15 - Local thunderstorms
     * * 16 - Light snow
     * * 17 - Snow
     * * 18 - Possible snow
     * * 19 - Snow shower
     * * 20 - Rain and snow
     * * 21 - Possible rain and snow
     * * 22 - Rain and snow
     * * 23 - Freezing rain
     * * 24 - Possible freezing rain
     * * 25 - Hail
     * * 26 - Clear (night)
     * * 27 - Mostly clear (night)
     * * 28 - Partly clear (night)
     * * 29 - Mostly cloudy (night)
     * * 30 - Cloudy (night)
     * * 31 - Overcast with low clouds (night)
     * * 32 - Rain shower (night)
     * * 33 - Local thunderstorms (night)
     * * 34 - Snow shower (night)
     * * 35 - Rain and snow (night)
     * * 36 - Possible freezing rain (night)
     * 
     * Unit: icon
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon")
    public Long icon;
    public PointPointDailyData withIcon(Long icon) {
        this.icon = icon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("morning")
    public PointPointDailyMorningData morning;
    public PointPointDailyData withMorning(PointPointDailyMorningData morning) {
        this.morning = morning;
        return this;
    }
    
    /**
     * Weather predictability. Values from 1 (very high predictability) to 5 (very low predictability).
     * Unit: 1-5
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("predictability")
    public Long predictability;
    public PointPointDailyData withPredictability(Long predictability) {
        this.predictability = predictability;
        return this;
    }
    
    @JsonProperty("statistics")
    public PointPointDailyStatsData statistics;
    public PointPointDailyData withStatistics(PointPointDailyStatsData statistics) {
        this.statistics = statistics;
        return this;
    }
    
    /**
     * Short text summary of the weather, e.g. `Light rain`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("summary")
    public String summary;
    public PointPointDailyData withSummary(String summary) {
        this.summary = summary;
        return this;
    }
    
    /**
     * All day string identifier of the weather icon, e.g. `light_rain`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weather")
    public String weather;
    public PointPointDailyData withWeather(String weather) {
        this.weather = weather;
        return this;
    }
    
}
