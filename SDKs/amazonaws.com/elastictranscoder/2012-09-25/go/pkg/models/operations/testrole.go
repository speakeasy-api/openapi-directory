// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type TestRoleHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type TestRoleRequestBody struct {
	// The Amazon S3 bucket that contains media files to be transcoded. The action attempts to read from this bucket.
	InputBucket string `json:"InputBucket"`
	// The Amazon S3 bucket that Elastic Transcoder writes transcoded media files to. The action attempts to read from this bucket.
	OutputBucket string `json:"OutputBucket"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to test.
	Role string `json:"Role"`
	// The ARNs of one or more Amazon Simple Notification Service (Amazon SNS) topics that you want the action to send a test notification to.
	Topics []string `json:"Topics"`
}

type TestRoleRequest struct {
	Headers TestRoleHeaders
	Request TestRoleRequestBody `request:"mediaType=application/json"`
}

type TestRoleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// IncompatibleVersionException
	IncompatibleVersionException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	TestRoleResponse *shared.TestRoleResponse
	// ValidationException
	ValidationException interface{}
}
