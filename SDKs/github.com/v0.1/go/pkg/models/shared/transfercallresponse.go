// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TransferCallResponseMessageEnum - Response message
type TransferCallResponseMessageEnum string

const (
	TransferCallResponseMessageEnumTransferCallExecuted           TransferCallResponseMessageEnum = "Transfer Call Executed"
	TransferCallResponseMessageEnumCallUUIDParameterMustBePresent TransferCallResponseMessageEnum = "CallUUID Parameter must be present"
	TransferCallResponseMessageEnumURLParameterMustBePresent      TransferCallResponseMessageEnum = "Url Parameter must be present"
	TransferCallResponseMessageEnumURLIsNotValid                  TransferCallResponseMessageEnum = "Url is not Valid"
	TransferCallResponseMessageEnumTransferCallFailedCallNotFound TransferCallResponseMessageEnum = "Transfer Call Failed -- Call not found"
	TransferCallResponseMessageEnumTransferCallFailed             TransferCallResponseMessageEnum = "Transfer Call Failed"
)

func (e *TransferCallResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Transfer Call Executed":
		fallthrough
	case "CallUUID Parameter must be present":
		fallthrough
	case "Url Parameter must be present":
		fallthrough
	case "Url is not Valid":
		fallthrough
	case "Transfer Call Failed -- Call not found":
		fallthrough
	case "Transfer Call Failed":
		*e = TransferCallResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferCallResponseMessageEnum: %s", s)
	}
}

// TransferCallResponse - Response
type TransferCallResponse struct {
	// Response message
	Message TransferCallResponseMessageEnum `json:"Message"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
