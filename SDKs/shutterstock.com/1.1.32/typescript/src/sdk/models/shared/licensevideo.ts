/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Cookie } from "./cookie";
import { Expose, Type } from "class-transformer";

/**
 * Size of the video being licensed
 */
export enum LicenseVideoSizeEnum {
  Web = "web",
  Sd = "sd",
  Hd = "hd",
  Fourk = "4k",
}

/**
 * Data required to license a video
 */
export class LicenseVideo extends SpeakeasyBase {
  /**
   * Cookie object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auth_cookie" })
  @Type(() => Cookie)
  authCookie?: Cookie;

  /**
   * Whether or not this item is editorial content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "editorial_acknowledgement" })
  editorialAcknowledgement?: boolean;

  /**
   * Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, any>;

  /**
   * Retail price amount as a floating-point number in the transaction currency, such as 12.34; only for rev-share partners
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * ID of the search that led to this licensing event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_id" })
  searchId?: string;

  /**
   * (Deprecated)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "show_modal" })
  showModal?: boolean;

  /**
   * Size of the video being licensed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: LicenseVideoSizeEnum;

  /**
   * ID of the subscription used for this license
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription_id" })
  subscriptionId?: string;

  /**
   * ID of the video being licensed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "video_id" })
  videoId: string;
}
