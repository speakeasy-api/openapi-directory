// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GetWorkflowSetupResponse - OK
type GetWorkflowSetupResponse struct {
	// If true, the workflow will run upon an API callout. This field must be `true` for integrating with the Configurable Payment Retry feature or the Collections Window feature in Collect.
	//
	CalloutTrigger *bool `json:"callout_trigger,omitempty"`
	// The date and time when the workflow was created, in the `YYYY-MM-DD HH:MM:SS` format
	//
	CreatedAt *string `json:"createdAt,omitempty"`
	// The description of the workflow definition
	//
	Description *string `json:"description,omitempty"`
	// The unique ID of the workflow definition
	//
	ID *int64 `json:"id,omitempty"`
	// The cron expression for workflows with scheduled_trigger as `true`
	//
	Interval *string `json:"interval,omitempty"`
	// The name of the workflow definition
	//
	Name *string `json:"name,omitempty"`
	// If true, the workflow will run when manually initiated.
	//
	OndemandTrigger *bool `json:"ondemand_trigger,omitempty"`
	// Can be `High`, `Medium`, or `Low`. Higher-priority workflows take precedence over lower-priority workflows. When a workflow of higher priority is initiated, it will be placed ahead of lower-priority workflows that are running. Depending on the available resources, lower-priority workflows may be paused until resources are released.
	//
	Priority *string `json:"priority,omitempty"`
	// If true, the workflow will run based on the configured schedule with the interval field.
	//
	ScheduledTrigger *bool `json:"scheduled_trigger,omitempty"`
	// Can be `Active` or `Inactive`. Active workfow definitions run like normal. Inactive workflow definitions cannot be run.
	//
	Status *string `json:"status,omitempty"`
	// The timezone that corresponds with the cron expression in the interval field. See the [list of accepted timezone values](https://docs.google.com/spreadsheets/d/1skhepi-q5l9LyaMUPZjU_V9gzTphNMqNyV6ST5mygEo/edit?usp=sharing).
	//
	Timezone *string `json:"timezone,omitempty"`
	// The date and time when the workflow was updated the last time, in the `YYYY-MM-DD HH:MM:SS` format
	//
	UpdatedAt *string `json:"updatedAt,omitempty"`
}
