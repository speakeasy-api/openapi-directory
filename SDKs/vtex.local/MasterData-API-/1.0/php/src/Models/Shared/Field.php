<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Field
{
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $displayName;
    
	#[\JMS\Serializer\Annotation\SerializedName('isFilter')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isFilter;
    
	#[\JMS\Serializer\Annotation\SerializedName('isInternal')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isInternal;
    
	#[\JMS\Serializer\Annotation\SerializedName('isNullable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isNullable;
    
	#[\JMS\Serializer\Annotation\SerializedName('isSearchable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isSearchable;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->displayName = "";
		$this->isFilter = false;
		$this->isInternal = false;
		$this->isNullable = false;
		$this->isSearchable = false;
		$this->name = "";
		$this->type = "";
	}
}
