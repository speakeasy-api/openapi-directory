// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StreamingInstanceTypeEnum string

const (
	StreamingInstanceTypeEnumG4dnXlarge   StreamingInstanceTypeEnum = "g4dn.xlarge"
	StreamingInstanceTypeEnumG4dn2xlarge  StreamingInstanceTypeEnum = "g4dn.2xlarge"
	StreamingInstanceTypeEnumG4dn4xlarge  StreamingInstanceTypeEnum = "g4dn.4xlarge"
	StreamingInstanceTypeEnumG4dn8xlarge  StreamingInstanceTypeEnum = "g4dn.8xlarge"
	StreamingInstanceTypeEnumG4dn12xlarge StreamingInstanceTypeEnum = "g4dn.12xlarge"
	StreamingInstanceTypeEnumG4dn16xlarge StreamingInstanceTypeEnum = "g4dn.16xlarge"
	StreamingInstanceTypeEnumG34xlarge    StreamingInstanceTypeEnum = "g3.4xlarge"
	StreamingInstanceTypeEnumG3sXlarge    StreamingInstanceTypeEnum = "g3s.xlarge"
	StreamingInstanceTypeEnumG5Xlarge     StreamingInstanceTypeEnum = "g5.xlarge"
	StreamingInstanceTypeEnumG52xlarge    StreamingInstanceTypeEnum = "g5.2xlarge"
	StreamingInstanceTypeEnumG54xlarge    StreamingInstanceTypeEnum = "g5.4xlarge"
	StreamingInstanceTypeEnumG58xlarge    StreamingInstanceTypeEnum = "g5.8xlarge"
	StreamingInstanceTypeEnumG516xlarge   StreamingInstanceTypeEnum = "g5.16xlarge"
)

func (e *StreamingInstanceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "g4dn.xlarge":
		fallthrough
	case "g4dn.2xlarge":
		fallthrough
	case "g4dn.4xlarge":
		fallthrough
	case "g4dn.8xlarge":
		fallthrough
	case "g4dn.12xlarge":
		fallthrough
	case "g4dn.16xlarge":
		fallthrough
	case "g3.4xlarge":
		fallthrough
	case "g3s.xlarge":
		fallthrough
	case "g5.xlarge":
		fallthrough
	case "g5.2xlarge":
		fallthrough
	case "g5.4xlarge":
		fallthrough
	case "g5.8xlarge":
		fallthrough
	case "g5.16xlarge":
		*e = StreamingInstanceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StreamingInstanceTypeEnum: %s", s)
	}
}
