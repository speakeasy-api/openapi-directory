// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DimensionFilterClauseOperatorEnum - The operator for combining multiple dimension filters. If unspecified, it is treated as an `OR`.
type DimensionFilterClauseOperatorEnum string

const (
	DimensionFilterClauseOperatorEnumOperatorUnspecified DimensionFilterClauseOperatorEnum = "OPERATOR_UNSPECIFIED"
	DimensionFilterClauseOperatorEnumOr                  DimensionFilterClauseOperatorEnum = "OR"
	DimensionFilterClauseOperatorEnumAnd                 DimensionFilterClauseOperatorEnum = "AND"
)

func (e DimensionFilterClauseOperatorEnum) ToPointer() *DimensionFilterClauseOperatorEnum {
	return &e
}

func (e *DimensionFilterClauseOperatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATOR_UNSPECIFIED":
		fallthrough
	case "OR":
		fallthrough
	case "AND":
		*e = DimensionFilterClauseOperatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DimensionFilterClauseOperatorEnum: %v", v)
	}
}

// DimensionFilterClause - A group of dimension filters. Set the operator value to specify how the filters are logically combined.
type DimensionFilterClause struct {
	// The repeated set of filters. They are logically combined based on the operator specified.
	Filters []DimensionFilter `json:"filters,omitempty"`
	// The operator for combining multiple dimension filters. If unspecified, it is treated as an `OR`.
	Operator *DimensionFilterClauseOperatorEnum `json:"operator,omitempty"`
}
