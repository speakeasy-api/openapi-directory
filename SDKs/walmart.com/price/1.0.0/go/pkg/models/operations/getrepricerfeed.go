// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetRepricerFeedRequestBodyItemStrategy struct {
	MaximumSellerAllowedPrice *float64 `json:"maximumSellerAllowedPrice,omitempty"`
	MinimumSellerAllowedPrice *float64 `json:"minimumSellerAllowedPrice,omitempty"`
	RepricerStrategy          *string  `json:"repricerStrategy,omitempty"`
	Sku                       *string  `json:"sku,omitempty"`
}

type GetRepricerFeedRequestBodyItem struct {
	Strategy *GetRepricerFeedRequestBodyItemStrategy `json:"Strategy,omitempty"`
}

type GetRepricerFeedRequestBodyItemFeedHeader struct {
	Locale         *string `json:"locale,omitempty"`
	Mart           *string `json:"mart,omitempty"`
	ProcessMode    *string `json:"processMode,omitempty"`
	SellingChannel *string `json:"sellingChannel,omitempty"`
	Subset         *string `json:"subset,omitempty"`
	Version        *string `json:"version,omitempty"`
}

type GetRepricerFeedRequestBody struct {
	Item           []GetRepricerFeedRequestBodyItem          `json:"Item,omitempty"`
	ItemFeedHeader *GetRepricerFeedRequestBodyItemFeedHeader `json:"ItemFeedHeader,omitempty"`
}

type GetRepricerFeedRequest struct {
	RequestBody GetRepricerFeedRequestBody `request:"mediaType=application/json"`
	// A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding
	WmConsumerChannelType *string `header:"style=simple,explode=false,name=WM_CONSUMER.CHANNEL.TYPE"`
	// A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID
	WmQosCorrelationID string `header:"style=simple,explode=false,name=WM_QOS.CORRELATION_ID"`
	// The access token retrieved in the Token API call
	WmSecAccessToken string `header:"style=simple,explode=false,name=WM_SEC.ACCESS_TOKEN"`
	// Walmart Service Name
	WmSvcName string `header:"style=simple,explode=false,name=WM_SVC.NAME"`
}

// GetRepricerFeed200ApplicationJSON - Successful Operation
type GetRepricerFeed200ApplicationJSON struct {
	FeedID *string `json:"feedId,omitempty"`
}

type GetRepricerFeedResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful Operation
	GetRepricerFeed200ApplicationJSONObject *GetRepricerFeed200ApplicationJSON
}
