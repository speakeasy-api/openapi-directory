"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import displaydata as shared_displaydata
from ..shared import executionstagesummary as shared_executionstagesummary
from ..shared import transformsummary as shared_transformsummary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PipelineDescription:
    r"""A descriptive representation of submitted pipeline as well as the executed form. This data is provided by the Dataflow service for ease of visualizing the pipeline and interpreting Dataflow provided metrics."""
    
    display_data: Optional[list[shared_displaydata.DisplayData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayData'), 'exclude': lambda f: f is None }})
    r"""Pipeline level display data."""  
    execution_pipeline_stage: Optional[list[shared_executionstagesummary.ExecutionStageSummary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionPipelineStage'), 'exclude': lambda f: f is None }})
    r"""Description of each stage of execution of the pipeline."""  
    original_pipeline_transform: Optional[list[shared_transformsummary.TransformSummary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originalPipelineTransform'), 'exclude': lambda f: f is None }})
    r"""Description of each transform in the pipeline and collections between them."""  
    step_names_hash: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stepNamesHash'), 'exclude': lambda f: f is None }})
    r"""A hash value of the submitted pipeline portable graph step names if exists."""  
    