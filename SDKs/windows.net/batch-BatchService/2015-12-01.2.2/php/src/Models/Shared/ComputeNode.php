<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ComputeNode - A compute node in the Batch service.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ComputeNode
{
    /**
     * Gets or sets an identifier which can be passed in the Add Task API to request that the task be scheduled close to this compute node.
     * 
     * @var ?string $affinityId
     */
	#[\JMS\Serializer\Annotation\SerializedName('affinityId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $affinityId = null;
    
    /**
     * Gets or sets the time at which this compute node was allocated to the pool.
     * 
     * @var ?\DateTime $allocationTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('allocationTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $allocationTime = null;
    
    /**
     * Gets or sets the list of certificates installed on the compute node.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CertificateReference> $certificateReferences
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateReferences')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CertificateReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $certificateReferences = null;
    
    /**
     * Gets or sets the list of errors that are currently being encountered by the compute node.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ComputeNodeError> $errors
     */
	#[\JMS\Serializer\Annotation\SerializedName('errors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ComputeNodeError>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $errors = null;
    
    /**
     * Gets or sets the id of the compute node.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Gets or sets the IP address that other compute nodes can use to communicate with this compute node.
     * 
     * @var ?string $ipAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipAddress = null;
    
    /**
     * Gets or sets the time at which the compute node was started.
     * 
     * @var ?\DateTime $lastBootTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastBootTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastBootTime = null;
    
    /**
     * Gets or sets the list of tasks that are currently running on the compute node.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TaskInformation> $recentTasks
     */
	#[\JMS\Serializer\Annotation\SerializedName('recentTasks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TaskInformation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $recentTasks = null;
    
    /**
     * Gets or sets whether the compute node should be available for task scheduling.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ComputeNodeSchedulingStateEnum $schedulingState
     */
	#[\JMS\Serializer\Annotation\SerializedName('schedulingState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ComputeNodeSchedulingStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ComputeNodeSchedulingStateEnum $schedulingState = null;
    
    /**
     * A task defined on a pool and run by compute nodes when they join the pool.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StartTask $startTask
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTask')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StartTask')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StartTask $startTask = null;
    
    /**
     * Information about a start task running on a compute node.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StartTaskInformation $startTaskInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTaskInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StartTaskInformation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StartTaskInformation $startTaskInfo = null;
    
    /**
     * Gets or sets the current state of the compute node.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ComputeNodeStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ComputeNodeStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ComputeNodeStateEnum $state = null;
    
    /**
     * Gets or sets the time at which the compute node entered its current state.
     * 
     * @var ?\DateTime $stateTransitionTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('stateTransitionTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $stateTransitionTime = null;
    
    /**
     * Gets or sets the total number of job tasks completed on the compute node. This includes Job Preparation, Job Release and Job Manager tasks, but not the pool start task.
     * 
     * @var ?int $totalTasksRun
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalTasksRun')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalTasksRun = null;
    
    /**
     * Gets or sets the URL of the compute node.
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * Gets or sets the size of the virtual machine hosting the compute node.
     * 
     * @var ?string $vmSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmSize')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmSize = null;
    
	public function __construct()
	{
		$this->affinityId = null;
		$this->allocationTime = null;
		$this->certificateReferences = null;
		$this->errors = null;
		$this->id = null;
		$this->ipAddress = null;
		$this->lastBootTime = null;
		$this->recentTasks = null;
		$this->schedulingState = null;
		$this->startTask = null;
		$this->startTaskInfo = null;
		$this->state = null;
		$this->stateTransitionTime = null;
		$this->totalTasksRun = null;
		$this->url = null;
		$this->vmSize = null;
	}
}
