"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configmapenvsource as shared_configmapenvsource
from ..shared import secretenvsource as shared_secretenvsource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnvFromSource:
    r"""Not supported by Cloud Run EnvFromSource represents the source of a set of ConfigMaps"""
    
    config_map_ref: Optional[shared_configmapenvsource.ConfigMapEnvSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configMapRef'), 'exclude': lambda f: f is None }})
    r"""Not supported by Cloud Run ConfigMapEnvSource selects a ConfigMap to populate the environment variables with. The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables."""  
    prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prefix'), 'exclude': lambda f: f is None }})
    r"""(Optional) An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER."""  
    secret_ref: Optional[shared_secretenvsource.SecretEnvSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secretRef'), 'exclude': lambda f: f is None }})
    r"""Not supported by Cloud Run SecretEnvSource selects a Secret to populate the environment variables with. The contents of the target Secret's Data field will represent the key-value pairs as environment variables."""  
    