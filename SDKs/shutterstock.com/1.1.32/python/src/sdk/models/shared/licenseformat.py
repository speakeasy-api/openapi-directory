"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LicenseFormatMediaTypeEnum(str, Enum):
    r"""Media type of the license"""
    IMAGE = 'image'
    VIDEO = 'video'
    AUDIO = 'audio'
    EDITORIAL = 'editorial'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LicenseFormat:
    r"""Description of a license"""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the license"""  
    format: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""Format or extension of the media, such as mpeg for videos or jpeg for images"""  
    media_type: Optional[LicenseFormatMediaTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('media_type'), 'exclude': lambda f: f is None }})
    r"""Media type of the license"""  
    min_resolution: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('min_resolution'), 'exclude': lambda f: f is None }})
    r"""Width of the media, in pixels, allowed by this license"""  
    size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size'), 'exclude': lambda f: f is None }})
    r"""Keyword that details the size of the media, such as hd or sd for video, huge or vector for images"""  
    