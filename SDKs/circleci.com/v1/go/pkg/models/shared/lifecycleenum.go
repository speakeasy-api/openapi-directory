// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LifecycleEnum string

const (
	LifecycleEnumQueued     LifecycleEnum = "queued"
	LifecycleEnumScheduled  LifecycleEnum = "scheduled"
	LifecycleEnumNotRun     LifecycleEnum = "not_run"
	LifecycleEnumNotRunning LifecycleEnum = "not_running"
	LifecycleEnumRunning    LifecycleEnum = "running"
	LifecycleEnumFinished   LifecycleEnum = "finished"
)

func (e LifecycleEnum) ToPointer() *LifecycleEnum {
	return &e
}

func (e *LifecycleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "queued":
		fallthrough
	case "scheduled":
		fallthrough
	case "not_run":
		fallthrough
	case "not_running":
		fallthrough
	case "running":
		fallthrough
	case "finished":
		*e = LifecycleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LifecycleEnum: %v", v)
	}
}
