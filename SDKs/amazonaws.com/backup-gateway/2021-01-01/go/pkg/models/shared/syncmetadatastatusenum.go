// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SyncMetadataStatusEnum string

const (
	SyncMetadataStatusEnumCreated         SyncMetadataStatusEnum = "CREATED"
	SyncMetadataStatusEnumRunning         SyncMetadataStatusEnum = "RUNNING"
	SyncMetadataStatusEnumFailed          SyncMetadataStatusEnum = "FAILED"
	SyncMetadataStatusEnumPartiallyFailed SyncMetadataStatusEnum = "PARTIALLY_FAILED"
	SyncMetadataStatusEnumSucceeded       SyncMetadataStatusEnum = "SUCCEEDED"
)

func (e *SyncMetadataStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FAILED":
		fallthrough
	case "PARTIALLY_FAILED":
		fallthrough
	case "SUCCEEDED":
		*e = SyncMetadataStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SyncMetadataStatusEnum: %s", s)
	}
}
