// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GamesApplicationsGetSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// GamesApplicationsGetPlatformTypeEnum - Restrict application details returned to the specific platform.
type GamesApplicationsGetPlatformTypeEnum string

const (
	GamesApplicationsGetPlatformTypeEnumPlatformTypeUnspecified GamesApplicationsGetPlatformTypeEnum = "PLATFORM_TYPE_UNSPECIFIED"
	GamesApplicationsGetPlatformTypeEnumAndroid                 GamesApplicationsGetPlatformTypeEnum = "ANDROID"
	GamesApplicationsGetPlatformTypeEnumIos                     GamesApplicationsGetPlatformTypeEnum = "IOS"
	GamesApplicationsGetPlatformTypeEnumWebApp                  GamesApplicationsGetPlatformTypeEnum = "WEB_APP"
)

func (e *GamesApplicationsGetPlatformTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PLATFORM_TYPE_UNSPECIFIED":
		fallthrough
	case "ANDROID":
		fallthrough
	case "IOS":
		fallthrough
	case "WEB_APP":
		*e = GamesApplicationsGetPlatformTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GamesApplicationsGetPlatformTypeEnum: %s", s)
	}
}

type GamesApplicationsGetRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// The application ID from the Google Play developer console.
	ApplicationID string `pathParam:"style=simple,explode=false,name=applicationId"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The preferred language to use for strings returned by this method.
	Language *string `queryParam:"style=form,explode=true,name=language"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Restrict application details returned to the specific platform.
	PlatformType *GamesApplicationsGetPlatformTypeEnum `queryParam:"style=form,explode=true,name=platformType"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type GamesApplicationsGetResponse struct {
	// Successful response
	Application *shared.Application
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
