<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class InventoryAdjustmentGroup
{
    /**
     * Representative `from_state` for adjustments within the group. For example, for a group adjustment from `IN_STOCK` to `SOLD`,
     * 
     * there can be two component adjustments in the group: one from `IN_STOCK`to `COMPOSED` and the other one from `COMPOSED` to `SOLD`.
     * Here, the representative `from_state` for the `InventoryAdjustmentGroup` is `IN_STOCK`.
     * 
     * @var ?string $fromState
     */
	#[\JMS\Serializer\Annotation\SerializedName('from_state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromState = null;
    
    /**
     * A unique ID generated by Square for the
     * 
     * `InventoryAdjustmentGroup`.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The inventory adjustment of the composed variation.
     * 
     * @var ?string $rootAdjustmentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('root_adjustment_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rootAdjustmentId = null;
    
    /**
     * Representative `to_state` for adjustments within group. For example, for a group adjustment from `IN_STOCK` to `SOLD`,
     * 
     * the two component adjustments in the group can be from `IN_STOCK` to `COMPOSED` and from `COMPOSED` to `SOLD`. 
     * Here, the representative `to_state` of the `InventoryAdjustmentGroup` is `SOLD`.
     * 
     * @var ?string $toState
     */
	#[\JMS\Serializer\Annotation\SerializedName('to_state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $toState = null;
    
	public function __construct()
	{
		$this->fromState = null;
		$this->id = null;
		$this->rootAdjustmentId = null;
		$this->toState = null;
	}
}
