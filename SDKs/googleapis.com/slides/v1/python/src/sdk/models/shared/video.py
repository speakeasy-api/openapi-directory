"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import videoproperties as shared_videoproperties
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VideoSourceEnum(str, Enum):
    r"""The video source."""
    SOURCE_UNSPECIFIED = 'SOURCE_UNSPECIFIED'
    YOUTUBE = 'YOUTUBE'
    DRIVE = 'DRIVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Video:
    r"""A PageElement kind representing a video."""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The video source's unique identifier for this video."""  
    source: Optional[VideoSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""The video source."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""An URL to a video. The URL is valid as long as the source video exists and sharing settings do not change."""  
    video_properties: Optional[shared_videoproperties.VideoProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoProperties'), 'exclude': lambda f: f is None }})
    r"""The properties of the Video."""  
    