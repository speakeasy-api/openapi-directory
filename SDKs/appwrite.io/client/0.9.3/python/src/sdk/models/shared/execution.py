"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Execution:
    r"""Execution"""
    
    dollar_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('$id') }})
    r"""Execution ID."""  
    date_created: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateCreated') }})
    r"""The execution creation date in Unix timestamp."""  
    exit_code: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exitCode') }})
    r"""The script exit code."""  
    function_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('functionId') }})
    r"""Function ID."""  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status of the function execution. Possible values can be: `waiting`, `processing`, `completed`, or `failed`."""  
    stderr: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stderr') }})
    r"""The script stderr output string. Logs the last 4,000 characters of the execution stderr output"""  
    stdout: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stdout') }})
    r"""The script stdout output string. Logs the last 4,000 characters of the execution stdout output."""  
    time: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time') }})
    r"""The script execution time in seconds."""  
    trigger: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trigger') }})
    r"""The trigger that caused the function to execute. Possible values can be: `http`, `schedule`, or `event`."""  
    