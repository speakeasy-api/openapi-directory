// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResolverEndpointStatusEnum string

const (
	ResolverEndpointStatusEnumCreating       ResolverEndpointStatusEnum = "CREATING"
	ResolverEndpointStatusEnumOperational    ResolverEndpointStatusEnum = "OPERATIONAL"
	ResolverEndpointStatusEnumUpdating       ResolverEndpointStatusEnum = "UPDATING"
	ResolverEndpointStatusEnumAutoRecovering ResolverEndpointStatusEnum = "AUTO_RECOVERING"
	ResolverEndpointStatusEnumActionNeeded   ResolverEndpointStatusEnum = "ACTION_NEEDED"
	ResolverEndpointStatusEnumDeleting       ResolverEndpointStatusEnum = "DELETING"
)

func (e *ResolverEndpointStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATING":
		fallthrough
	case "OPERATIONAL":
		fallthrough
	case "UPDATING":
		fallthrough
	case "AUTO_RECOVERING":
		fallthrough
	case "ACTION_NEEDED":
		fallthrough
	case "DELETING":
		*e = ResolverEndpointStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResolverEndpointStatusEnum: %s", s)
	}
}
