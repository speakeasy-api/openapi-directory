// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeImagesActionEnum
type POSTDescribeImagesActionEnum string

const (
	POSTDescribeImagesActionEnumDescribeImages POSTDescribeImagesActionEnum = "DescribeImages"
)

func (e POSTDescribeImagesActionEnum) ToPointer() *POSTDescribeImagesActionEnum {
	return &e
}

func (e *POSTDescribeImagesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeImages":
		*e = POSTDescribeImagesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeImagesActionEnum: %v", v)
	}
}

// POSTDescribeImagesVersionEnum
type POSTDescribeImagesVersionEnum string

const (
	POSTDescribeImagesVersionEnumTwoThousandAndSixteen1115 POSTDescribeImagesVersionEnum = "2016-11-15"
)

func (e POSTDescribeImagesVersionEnum) ToPointer() *POSTDescribeImagesVersionEnum {
	return &e
}

func (e *POSTDescribeImagesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDescribeImagesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeImagesVersionEnum: %v", v)
	}
}

type POSTDescribeImagesRequest struct {
	Action POSTDescribeImagesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                       `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTDescribeImagesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeImagesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
