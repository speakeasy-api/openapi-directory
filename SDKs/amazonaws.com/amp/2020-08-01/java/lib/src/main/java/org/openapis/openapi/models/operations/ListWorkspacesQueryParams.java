/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListWorkspacesQueryParams {
    /**
     * Optional filter for workspace alias. Only the workspaces with aliases that begin with this value will be returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alias")
    public String alias;
    public ListWorkspacesQueryParams withAlias(String alias) {
        this.alias = alias;
        return this;
    }
    
    /**
     * Maximum results to return in response (default=100, maximum=1000).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public ListWorkspacesQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListWorkspaces request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListWorkspacesQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
}
