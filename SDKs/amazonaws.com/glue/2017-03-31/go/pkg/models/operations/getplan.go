// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetPlanXAmzTargetEnum
type GetPlanXAmzTargetEnum string

const (
	GetPlanXAmzTargetEnumAwsGlueGetPlan GetPlanXAmzTargetEnum = "AWSGlue.GetPlan"
)

func (e GetPlanXAmzTargetEnum) ToPointer() *GetPlanXAmzTargetEnum {
	return &e
}

func (e *GetPlanXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.GetPlan":
		*e = GetPlanXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPlanXAmzTargetEnum: %v", v)
	}
}

type GetPlanRequest struct {
	GetPlanRequest    shared.GetPlanRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetPlanXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetPlanResponse struct {
	ContentType string
	// Success
	GetPlanResponse *shared.GetPlanResponse
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
