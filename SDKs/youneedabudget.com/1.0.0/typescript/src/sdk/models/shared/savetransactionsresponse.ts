/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TransactionDetail } from "./transactiondetail";
import { Expose, Type } from "class-transformer";

export class SaveTransactionsResponseData extends SpeakeasyBase {
  /**
   * If multiple transactions were specified, a list of import_ids that were not created because of an existing `import_id` found on the same account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duplicate_import_ids" })
  duplicateImportIds?: string[];

  /**
   * The knowledge of the server
   */
  @SpeakeasyMetadata()
  @Expose({ name: "server_knowledge" })
  serverKnowledge: number;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction" })
  @Type(() => TransactionDetail)
  transaction?: TransactionDetail;

  /**
   * The transaction ids that were saved
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_ids" })
  transactionIds: string[];

  /**
   * If multiple transactions were specified, the transactions that were saved
   */
  @SpeakeasyMetadata({ elemType: TransactionDetail })
  @Expose({ name: "transactions" })
  @Type(() => TransactionDetail)
  transactions?: TransactionDetail[];
}

/**
 * The transactions were successfully updated
 */
export class SaveTransactionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => SaveTransactionsResponseData)
  data: SaveTransactionsResponseData;
}
