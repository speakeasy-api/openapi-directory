/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OneordersPostResponses201ContentApplication1jsonSchemaPropertiesOriginalConsignee } from "./oneorderspostresponses201contentapplication1jsonschemapropertiesoriginalconsignee";
import { OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy } from "./onereturnsgetresponses200contentapplication1jsonschemapropertiesdataitemspropertiesupdatedby";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Responsibility for resolving this issue
 */
export class OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2ActionRequiredBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Human readable description of responsible party to resolve the issue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2Stage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2State extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2 extends SpeakeasyBase {
  /**
   * Responsibility for resolving this issue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actionRequiredBy" })
  @Type(
    () =>
      OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2ActionRequiredBy
  )
  actionRequiredBy?: OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2ActionRequiredBy;

  /**
   * Code, see [status codes](#section/Getting-Started/Status-Codes)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "detailCode" })
  detailCode: string;

  /**
   * Depricated, use code instead
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Depricated, does this status event close the order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isClosed" })
  isClosed?: boolean;

  /**
   * Depricated, use stage/state instead
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Depricated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stage" })
  @Type(
    () =>
      OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2Stage
  )
  stage: OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2Stage;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(
    () =>
      OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2State
  )
  state: OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2State;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  @Type(
    () =>
      OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy
  )
  createdBy?: OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy;

  /**
   * DateTime of Status Event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Explanation for status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(
    () =>
      OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2
  )
  status?: OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2StatusTypeV2;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaMerchantV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Merchant Company Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaConsigneeV2IsoCountryV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Two character ISO code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iso2" })
  iso2?: string;

  /**
   * Country Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaConsigneeV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address1" })
  address1: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address2" })
  address2?: string;

  /**
   * City
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressLocality" })
  addressLocality: string;

  /**
   * Province / State
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressRegion" })
  addressRegion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName?: string;

  /**
   * Ideally provide the two character ISO code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "iso" })
  @Type(
    () =>
      OneordersPostResponses201ContentApplication1jsonSchemaConsigneeV2IsoCountryV2
  )
  iso?: OneordersPostResponses201ContentApplication1jsonSchemaConsigneeV2IsoCountryV2;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * Postal Code / Zip
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedBy" })
  @Type(
    () =>
      OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy
  )
  updatedBy?: OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaParentOrder extends SpeakeasyBase {
  /**
   * Reference to parent `id` if order was grouped
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaTrackingNumberV2CarrierSimpleV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaTrackingNumberV2 extends SpeakeasyBase {
  /**
   * The computer readable alternative to the human readable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "barcodeScanValue" })
  barcodeScanValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "carrier" })
  @Type(
    () =>
      OneordersPostResponses201ContentApplication1jsonSchemaTrackingNumberV2CarrierSimpleV2
  )
  carrier?: OneordersPostResponses201ContentApplication1jsonSchemaTrackingNumberV2CarrierSimpleV2;

  /**
   * The human readable tracking number recipients (consignee) expect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class OneordersPostResponses201ContentApplication1jsonSchemaWarehouseV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

/**
 * Standard Order Response or a Hydrated Response
 */
export class OneordersPostResponses201ContentApplication1jsonSchema extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "currentStatus" })
  @Type(
    () => OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2
  )
  currentStatus: OneordersPostResponses201ContentApplication1jsonSchemaStatusEventV2;

  /**
   * DateTime order departed an FDC warehouse
   */
  @SpeakeasyMetadata()
  @Expose({ name: "departDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  departDate?: Date;

  /**
   * DateTime order was dispatched for fulfillment by FDC
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dispatchDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dispatchDate?: Date;

  /**
   * FDC ID for this order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "merchant" })
  @Type(() => OneordersPostResponses201ContentApplication1jsonSchemaMerchantV2)
  merchant: OneordersPostResponses201ContentApplication1jsonSchemaMerchantV2;

  /**
   * Merchant provided ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantOrderId" })
  merchantOrderId: string;

  /**
   * Requested ship method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantShippingMethod" })
  merchantShippingMethod: string;

  @SpeakeasyMetadata()
  @Expose({ name: "originalConsignee" })
  @Type(() => OneordersPostResponses201ContentApplication1jsonSchemaConsigneeV2)
  originalConsignee: OneordersPostResponses201ContentApplication1jsonSchemaConsigneeV2;

  @SpeakeasyMetadata()
  @Expose({ name: "parentOrder" })
  @Type(() => OneordersPostResponses201ContentApplication1jsonSchemaParentOrder)
  parentOrder?: OneordersPostResponses201ContentApplication1jsonSchemaParentOrder;

  /**
   * Merchant provided PO#
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purchaseOrderNum" })
  purchaseOrderNum?: string;

  /**
   * DateTime order was recorded by FDC
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recordedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  recordedOn: Date;

  @SpeakeasyMetadata({
    elemType:
      OneordersPostResponses201ContentApplication1jsonSchemaTrackingNumberV2,
  })
  @Expose({ name: "trackingNumbers" })
  @Type(
    () => OneordersPostResponses201ContentApplication1jsonSchemaTrackingNumberV2
  )
  trackingNumbers?: OneordersPostResponses201ContentApplication1jsonSchemaTrackingNumberV2[];

  @SpeakeasyMetadata()
  @Expose({ name: "validatedConsignee" })
  @Type(
    () =>
      OneordersPostResponses201ContentApplication1jsonSchemaPropertiesOriginalConsignee
  )
  validatedConsignee: OneordersPostResponses201ContentApplication1jsonSchemaPropertiesOriginalConsignee;

  @SpeakeasyMetadata()
  @Expose({ name: "warehouse" })
  @Type(() => OneordersPostResponses201ContentApplication1jsonSchemaWarehouseV2)
  warehouse?: OneordersPostResponses201ContentApplication1jsonSchemaWarehouseV2;
}
