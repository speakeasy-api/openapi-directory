<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EditInventorySourceReadWriteAccessorsRequest - Request message for InventorySourceService.EditInventorySourceReadWriteAccessors.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EditInventorySourceReadWriteAccessorsRequest
{
    /**
     * Update to the list of advertisers with read/write access to the inventory source.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate $advertisersUpdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('advertisersUpdate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate $advertisersUpdate = null;
    
    /**
     * Set the partner context as read/write accessor of the inventory source. This will remove all other current read/write advertiser accessors.
     * 
     * @var ?bool $assignPartner
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignPartner')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $assignPartner = null;
    
    /**
     * Required. The partner context by which the accessors change is being made.
     * 
     * @var ?string $partnerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('partnerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $partnerId = null;
    
	public function __construct()
	{
		$this->advertisersUpdate = null;
		$this->assignPartner = null;
		$this->partnerId = null;
	}
}
