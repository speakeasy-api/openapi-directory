"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetinventorywithdispatchedreservationsRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent"""  
    item_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'itemId', 'style': 'simple', 'explode': False }})  
    warehouse_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'warehouseId', 'style': 'simple', 'explode': False }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Getinventorywithdispatchedreservations200ApplicationJSON:
    
    available_quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availableQuantity'), 'exclude': lambda f: f is None }})
    r"""Available quantity."""  
    dispatched_reservations_quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dispatchedReservationsQuantity'), 'exclude': lambda f: f is None }})
    r"""Dispatched reservations quantity."""  
    is_unlimited_quantity: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isUnlimitedQuantity'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the SKU's availability is unlimited (\\"infinite inventory\\")."""  
    quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity'), 'exclude': lambda f: f is None }})
    r"""SKU quantity."""  
    sku_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skuId'), 'exclude': lambda f: f is None }})
    r"""SKU ID."""  
    total_reserved_quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalReservedQuantity'), 'exclude': lambda f: f is None }})
    r"""Total reserved quantity of the SKU."""  
    warehouse_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warehouseId'), 'exclude': lambda f: f is None }})
    r"""Warehouse ID."""  
    

@dataclasses.dataclass
class GetinventorywithdispatchedreservationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    getinventorywithdispatchedreservations_200_application_json_objects: Optional[list[Getinventorywithdispatchedreservations200ApplicationJSON]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    