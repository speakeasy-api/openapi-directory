// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MetricHeaderTypeEnum - The metric's data type.
type MetricHeaderTypeEnum string

const (
	MetricHeaderTypeEnumMetricTypeUnspecified MetricHeaderTypeEnum = "METRIC_TYPE_UNSPECIFIED"
	MetricHeaderTypeEnumTypeInteger           MetricHeaderTypeEnum = "TYPE_INTEGER"
	MetricHeaderTypeEnumTypeFloat             MetricHeaderTypeEnum = "TYPE_FLOAT"
	MetricHeaderTypeEnumTypeSeconds           MetricHeaderTypeEnum = "TYPE_SECONDS"
	MetricHeaderTypeEnumTypeMilliseconds      MetricHeaderTypeEnum = "TYPE_MILLISECONDS"
	MetricHeaderTypeEnumTypeMinutes           MetricHeaderTypeEnum = "TYPE_MINUTES"
	MetricHeaderTypeEnumTypeHours             MetricHeaderTypeEnum = "TYPE_HOURS"
	MetricHeaderTypeEnumTypeStandard          MetricHeaderTypeEnum = "TYPE_STANDARD"
	MetricHeaderTypeEnumTypeCurrency          MetricHeaderTypeEnum = "TYPE_CURRENCY"
	MetricHeaderTypeEnumTypeFeet              MetricHeaderTypeEnum = "TYPE_FEET"
	MetricHeaderTypeEnumTypeMiles             MetricHeaderTypeEnum = "TYPE_MILES"
	MetricHeaderTypeEnumTypeMeters            MetricHeaderTypeEnum = "TYPE_METERS"
	MetricHeaderTypeEnumTypeKilometers        MetricHeaderTypeEnum = "TYPE_KILOMETERS"
)

func (e *MetricHeaderTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METRIC_TYPE_UNSPECIFIED":
		fallthrough
	case "TYPE_INTEGER":
		fallthrough
	case "TYPE_FLOAT":
		fallthrough
	case "TYPE_SECONDS":
		fallthrough
	case "TYPE_MILLISECONDS":
		fallthrough
	case "TYPE_MINUTES":
		fallthrough
	case "TYPE_HOURS":
		fallthrough
	case "TYPE_STANDARD":
		fallthrough
	case "TYPE_CURRENCY":
		fallthrough
	case "TYPE_FEET":
		fallthrough
	case "TYPE_MILES":
		fallthrough
	case "TYPE_METERS":
		fallthrough
	case "TYPE_KILOMETERS":
		*e = MetricHeaderTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricHeaderTypeEnum: %s", s)
	}
}

// MetricHeader - Describes a metric column in the report. Visible metrics requested in a report produce column entries within rows and MetricHeaders. However, metrics used exclusively within filters or expressions do not produce columns in a report; correspondingly, those metrics do not produce headers.
type MetricHeader struct {
	// The metric's name.
	Name *string `json:"name,omitempty"`
	// The metric's data type.
	Type *MetricHeaderTypeEnum `json:"type,omitempty"`
}
