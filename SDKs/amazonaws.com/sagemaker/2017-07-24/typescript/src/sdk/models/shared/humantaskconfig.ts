/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnnotationConsolidationConfig } from "./annotationconsolidationconfig";
import { PublicWorkforceTaskPrice } from "./publicworkforcetaskprice";
import { UiConfig } from "./uiconfig";
import { Expose, Type } from "class-transformer";

/**
 * Information required for human workers to complete a labeling task.
 */
export class HumanTaskConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnnotationConsolidationConfig" })
  @Type(() => AnnotationConsolidationConfig)
  annotationConsolidationConfig: AnnotationConsolidationConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrentTaskCount" })
  maxConcurrentTaskCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfHumanWorkersPerDataObject" })
  numberOfHumanWorkersPerDataObject: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PreHumanTaskLambdaArn" })
  preHumanTaskLambdaArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PublicWorkforceTaskPrice" })
  @Type(() => PublicWorkforceTaskPrice)
  publicWorkforceTaskPrice?: PublicWorkforceTaskPrice;

  @SpeakeasyMetadata()
  @Expose({ name: "TaskAvailabilityLifetimeInSeconds" })
  taskAvailabilityLifetimeInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TaskDescription" })
  taskDescription: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TaskKeywords" })
  taskKeywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "TaskTimeLimitInSeconds" })
  taskTimeLimitInSeconds: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TaskTitle" })
  taskTitle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UiConfig" })
  @Type(() => UiConfig)
  uiConfig: UiConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkteamArn" })
  workteamArn: string;
}
