/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SecondaryIpRange } from "./secondaryiprange";
import { Expose, Type } from "class-transformer";

/**
 * Represents a subnet that was created or discovered by a private access management service.
 */
export class Subnetwork extends SpeakeasyBase {
  /**
   * Subnetwork CIDR range in `10.x.x.x/y` format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipCidrRange" })
  ipCidrRange?: string;

  /**
   * Subnetwork name. See https://cloud.google.com/compute/docs/vpc/
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * In the Shared VPC host project, the VPC network that's peered with the consumer network. For example: `projects/1234321/global/networks/host-network`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * This is a discovered subnet that is not within the current consumer allocated ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outsideAllocation" })
  outsideAllocation?: boolean;

  /**
   * GCP region where the subnetwork is located.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * List of secondary IP ranges in this subnetwork.
   */
  @SpeakeasyMetadata({ elemType: SecondaryIpRange })
  @Expose({ name: "secondaryIpRanges" })
  @Type(() => SecondaryIpRange)
  secondaryIpRanges?: SecondaryIpRange[];
}
