/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ActionsCreateOrUpdateRepoSecretRequestBody extends SpeakeasyBase {
  /**
   * Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/enterprise-server@3.0/rest/reference/actions#get-a-repository-public-key) endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encrypted_value" })
  encryptedValue?: string;

  /**
   * ID of the key you used to encrypt the secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key_id" })
  keyId?: string;
}

export class ActionsCreateOrUpdateRepoSecretRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ActionsCreateOrUpdateRepoSecretRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;

  /**
   * secret_name parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=secret_name",
  })
  secretName: string;
}

export class ActionsCreateOrUpdateRepoSecretResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response when creating a secret
   */
  @SpeakeasyMetadata()
  actionsCreateOrUpdateRepoSecret201ApplicationJSONObject?: Record<string, any>;
}
