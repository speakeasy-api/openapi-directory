/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ErrorsListForGroupSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class ErrorsListForGroupRequest extends SpeakeasyBase {
  /**
   * The maximum number of results to return. (0 will fetch all results till the max number.)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=$top" })
  dollarTop?: number;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * Last date time in data in ISO 8601 date time format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  end?: Date;

  /**
   * The id of the error group
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=errorGroupId",
  })
  errorGroupId: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=model" })
  model?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=os" })
  os?: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * Start date time in data in ISO 8601 date time format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=start;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  start: Date;
}

export enum ErrorsListForGroupDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class ErrorsListForGroupDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ErrorsListForGroupDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class ErrorsListForGroupDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorsListForGroupDefaultApplicationJSONError)
  error: ErrorsListForGroupDefaultApplicationJSONError;
}

export class ErrorsListForGroup200ApplicationJSONErrors extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceName" })
  deviceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "errorId" })
  errorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hasAttachments" })
  hasAttachments?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "hasBreadcrumbs" })
  hasBreadcrumbs?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "osType" })
  osType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "osVersion" })
  osVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}

/**
 * Get all errors for group
 */
export class ErrorsListForGroup200ApplicationJSON extends SpeakeasyBase {
  /**
   * Errors list.
   */
  @SpeakeasyMetadata({ elemType: ErrorsListForGroup200ApplicationJSONErrors })
  @Expose({ name: "errors" })
  @Type(() => ErrorsListForGroup200ApplicationJSONErrors)
  errors?: ErrorsListForGroup200ApplicationJSONErrors[];

  @SpeakeasyMetadata()
  @Expose({ name: "nextLink" })
  nextLink?: string;
}

export class ErrorsListForGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Get all errors for group
   */
  @SpeakeasyMetadata()
  errorsListForGroup200ApplicationJSONObject?: ErrorsListForGroup200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  errorsListForGroupDefaultApplicationJSONObject?: ErrorsListForGroupDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
