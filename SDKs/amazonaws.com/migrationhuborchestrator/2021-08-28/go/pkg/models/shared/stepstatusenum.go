// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StepStatusEnum string

const (
	StepStatusEnumAwaitingDependencies  StepStatusEnum = "AWAITING_DEPENDENCIES"
	StepStatusEnumReady                 StepStatusEnum = "READY"
	StepStatusEnumInProgress            StepStatusEnum = "IN_PROGRESS"
	StepStatusEnumCompleted             StepStatusEnum = "COMPLETED"
	StepStatusEnumFailed                StepStatusEnum = "FAILED"
	StepStatusEnumPaused                StepStatusEnum = "PAUSED"
	StepStatusEnumUserAttentionRequired StepStatusEnum = "USER_ATTENTION_REQUIRED"
)

func (e StepStatusEnum) ToPointer() *StepStatusEnum {
	return &e
}

func (e *StepStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWAITING_DEPENDENCIES":
		fallthrough
	case "READY":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "PAUSED":
		fallthrough
	case "USER_ATTENTION_REQUIRED":
		*e = StepStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StepStatusEnum: %v", v)
	}
}
