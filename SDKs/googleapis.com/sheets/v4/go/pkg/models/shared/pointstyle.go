// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PointStyleShapeEnum - The point shape. If empty or unspecified, a default shape is used.
type PointStyleShapeEnum string

const (
	PointStyleShapeEnumPointShapeUnspecified PointStyleShapeEnum = "POINT_SHAPE_UNSPECIFIED"
	PointStyleShapeEnumCircle                PointStyleShapeEnum = "CIRCLE"
	PointStyleShapeEnumDiamond               PointStyleShapeEnum = "DIAMOND"
	PointStyleShapeEnumHexagon               PointStyleShapeEnum = "HEXAGON"
	PointStyleShapeEnumPentagon              PointStyleShapeEnum = "PENTAGON"
	PointStyleShapeEnumSquare                PointStyleShapeEnum = "SQUARE"
	PointStyleShapeEnumStar                  PointStyleShapeEnum = "STAR"
	PointStyleShapeEnumTriangle              PointStyleShapeEnum = "TRIANGLE"
	PointStyleShapeEnumXMark                 PointStyleShapeEnum = "X_MARK"
)

func (e *PointStyleShapeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "POINT_SHAPE_UNSPECIFIED":
		fallthrough
	case "CIRCLE":
		fallthrough
	case "DIAMOND":
		fallthrough
	case "HEXAGON":
		fallthrough
	case "PENTAGON":
		fallthrough
	case "SQUARE":
		fallthrough
	case "STAR":
		fallthrough
	case "TRIANGLE":
		fallthrough
	case "X_MARK":
		*e = PointStyleShapeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PointStyleShapeEnum: %s", s)
	}
}

// PointStyle - The style of a point on the chart.
type PointStyle struct {
	// The point shape. If empty or unspecified, a default shape is used.
	Shape *PointStyleShapeEnum `json:"shape,omitempty"`
	// The point size. If empty, a default size is used.
	Size *float64 `json:"size,omitempty"`
}
