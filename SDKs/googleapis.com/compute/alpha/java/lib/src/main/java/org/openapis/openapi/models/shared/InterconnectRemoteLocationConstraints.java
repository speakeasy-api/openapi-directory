/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class InterconnectRemoteLocationConstraints {
    /**
     * [Output Only] Port pair remote location constraints, which can take one of the following values: PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION, PORT_PAIR_MATCHING_REMOTE_LOCATION. GCP's API refers only to individual ports, but the UI uses this field when ordering a pair of ports, to prevent users from accidentally ordering something that is incompatible with their cloud provider. Specifically, when ordering a redundant pair of Cross-Cloud Interconnect ports, and one of them uses a remote location with portPairMatchingRemoteLocation set to matching, the UI will require that both ports use the same remote location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("portPairRemoteLocation")
    public InterconnectRemoteLocationConstraintsPortPairRemoteLocationEnum portPairRemoteLocation;

    public InterconnectRemoteLocationConstraints withPortPairRemoteLocation(InterconnectRemoteLocationConstraintsPortPairRemoteLocationEnum portPairRemoteLocation) {
        this.portPairRemoteLocation = portPairRemoteLocation;
        return this;
    }
    
    /**
     * [Output Only] Port pair VLAN constraints, which can take one of the following values: PORT_PAIR_UNCONSTRAINED_VLAN, PORT_PAIR_MATCHING_VLAN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("portPairVlan")
    public InterconnectRemoteLocationConstraintsPortPairVlanEnum portPairVlan;

    public InterconnectRemoteLocationConstraints withPortPairVlan(InterconnectRemoteLocationConstraintsPortPairVlanEnum portPairVlan) {
        this.portPairVlan = portPairVlan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetLengthRange")
    public InterconnectRemoteLocationConstraintsSubnetLengthRange subnetLengthRange;

    public InterconnectRemoteLocationConstraints withSubnetLengthRange(InterconnectRemoteLocationConstraintsSubnetLengthRange subnetLengthRange) {
        this.subnetLengthRange = subnetLengthRange;
        return this;
    }
    
    public InterconnectRemoteLocationConstraints(){}
}
