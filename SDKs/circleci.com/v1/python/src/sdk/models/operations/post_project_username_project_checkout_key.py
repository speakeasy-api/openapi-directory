"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import key as shared_key
from enum import Enum
from typing import Optional

class PostProjectUsernameProjectCheckoutKeyRequestBodyEnum(str, Enum):
    r"""The type of key to create. Can be 'deploy-key' or 'github-user-key'."""
    DEPLOY_KEY = 'deploy-key'
    GITHUB_USER_KEY = 'github-user-key'


@dataclasses.dataclass
class PostProjectUsernameProjectCheckoutKeyRequest:
    
    project: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project', 'style': 'simple', 'explode': False }})
    r"""XXXXXXXXX"""  
    username: str = dataclasses.field(metadata={'path_param': { 'field_name': 'username', 'style': 'simple', 'explode': False }})
    r"""XXXXXXXXX"""  
    request_body: Optional[PostProjectUsernameProjectCheckoutKeyRequestBodyEnum] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""The type of key to create. Can be 'deploy-key' or 'github-user-key'."""  
    

@dataclasses.dataclass
class PostProjectUsernameProjectCheckoutKeyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    key: Optional[shared_key.Key] = dataclasses.field(default=None)
    r"""checkout key"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    