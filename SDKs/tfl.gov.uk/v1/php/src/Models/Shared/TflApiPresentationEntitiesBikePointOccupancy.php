<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TflApiPresentationEntitiesBikePointOccupancy - Bike point occupancy
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TflApiPresentationEntitiesBikePointOccupancy
{
    /**
     * Total bike counts
     * 
     * @var ?int $bikesCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('bikesCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bikesCount = null;
    
    /**
     * Total ebikes count
     * 
     * @var ?int $eBikesCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('eBikesCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $eBikesCount = null;
    
    /**
     * Empty docks
     * 
     * @var ?int $emptyDocks
     */
	#[\JMS\Serializer\Annotation\SerializedName('emptyDocks')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $emptyDocks = null;
    
    /**
     * Id of the bike point such as BikePoints_1
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Name / Common name of the bike point
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Total standard bikes count
     * 
     * @var ?int $standardBikesCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('standardBikesCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $standardBikesCount = null;
    
    /**
     * Total docks available
     * 
     * @var ?int $totalDocks
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalDocks')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalDocks = null;
    
	public function __construct()
	{
		$this->bikesCount = null;
		$this->eBikesCount = null;
		$this->emptyDocks = null;
		$this->id = null;
		$this->name = null;
		$this->standardBikesCount = null;
		$this->totalDocks = null;
	}
}
