/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigVariableTemplate } from "./configvariabletemplate";
import { Expose, Type } from "class-transformer";

/**
 * The type of authentication configured.
 */
export enum AuthConfigTemplateAuthTypeEnum {
  AuthTypeUnspecified = "AUTH_TYPE_UNSPECIFIED",
  UserPassword = "USER_PASSWORD",
  Oauth2JwtBearer = "OAUTH2_JWT_BEARER",
  Oauth2ClientCredentials = "OAUTH2_CLIENT_CREDENTIALS",
  SshPublicKey = "SSH_PUBLIC_KEY",
  Oauth2AuthCodeFlow = "OAUTH2_AUTH_CODE_FLOW",
}

/**
 * AuthConfigTemplate defines required field over an authentication type.
 */
export class AuthConfigTemplate extends SpeakeasyBase {
  /**
   * The type of authentication configured.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authType" })
  authType?: AuthConfigTemplateAuthTypeEnum;

  /**
   * Config variables to describe an `AuthConfig` for a `Connection`.
   */
  @SpeakeasyMetadata({ elemType: ConfigVariableTemplate })
  @Expose({ name: "configVariableTemplates" })
  @Type(() => ConfigVariableTemplate)
  configVariableTemplates?: ConfigVariableTemplate[];

  /**
   * Connector specific description for an authentication template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Display name for authentication template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;
}
