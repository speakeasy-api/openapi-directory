"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Image = exports.ImageTypeEnum = exports.ImageScale = exports.ImageRotate = exports.ImagePositionEnum = exports.ImagePanEnum = exports.ImageCrop = exports.ImageChromaKey = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Allows to define a color (or a range of colors) that will be converted to transparent
 */
var ImageChromaKey = /** @class */ (function (_super) {
    __extends(ImageChromaKey, _super);
    function ImageChromaKey() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "color" }),
        __metadata("design:type", String)
    ], ImageChromaKey.prototype, "color", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tolerance" }),
        __metadata("design:type", Number)
    ], ImageChromaKey.prototype, "tolerance", void 0);
    return ImageChromaKey;
}(utils_1.SpeakeasyBase));
exports.ImageChromaKey = ImageChromaKey;
/**
 * Crops the element
 */
var ImageCrop = /** @class */ (function (_super) {
    __extends(ImageCrop, _super);
    function ImageCrop() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height" }),
        __metadata("design:type", Number)
    ], ImageCrop.prototype, "height", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width" }),
        __metadata("design:type", Number)
    ], ImageCrop.prototype, "width", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "x" }),
        __metadata("design:type", Number)
    ], ImageCrop.prototype, "x", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "y" }),
        __metadata("design:type", Number)
    ], ImageCrop.prototype, "y", void 0);
    return ImageCrop;
}(utils_1.SpeakeasyBase));
exports.ImageCrop = ImageCrop;
/**
 * Pans the element to the specified direction. If <code>zoom</code> property is not specified, the effect is a non-zooming pan
 */
var ImagePanEnum;
(function (ImagePanEnum) {
    ImagePanEnum["Left"] = "left";
    ImagePanEnum["Top"] = "top";
    ImagePanEnum["Right"] = "right";
    ImagePanEnum["Bottom"] = "bottom";
    ImagePanEnum["TopLeft"] = "top-left";
    ImagePanEnum["TopRight"] = "top-right";
    ImagePanEnum["BottomLeft"] = "bottom-left";
    ImagePanEnum["BottomRight"] = "bottom-right";
})(ImagePanEnum = exports.ImagePanEnum || (exports.ImagePanEnum = {}));
/**
 * Sets the element position in the scene. A value of 'custom' sets a custom position based on the provided 'x' and 'y' properties
 */
var ImagePositionEnum;
(function (ImagePositionEnum) {
    ImagePositionEnum["TopLeft"] = "top-left";
    ImagePositionEnum["TopRight"] = "top-right";
    ImagePositionEnum["BottomRight"] = "bottom-right";
    ImagePositionEnum["BottomLeft"] = "bottom-left";
    ImagePositionEnum["CenterCenter"] = "center-center";
    ImagePositionEnum["Custom"] = "custom";
})(ImagePositionEnum = exports.ImagePositionEnum || (exports.ImagePositionEnum = {}));
var ImageRotate = /** @class */ (function (_super) {
    __extends(ImageRotate, _super);
    function ImageRotate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "angle" }),
        __metadata("design:type", Number)
    ], ImageRotate.prototype, "angle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "speed" }),
        __metadata("design:type", Number)
    ], ImageRotate.prototype, "speed", void 0);
    return ImageRotate;
}(utils_1.SpeakeasyBase));
exports.ImageRotate = ImageRotate;
var ImageScale = /** @class */ (function (_super) {
    __extends(ImageScale, _super);
    function ImageScale() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height" }),
        __metadata("design:type", Number)
    ], ImageScale.prototype, "height", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width" }),
        __metadata("design:type", Number)
    ], ImageScale.prototype, "width", void 0);
    return ImageScale;
}(utils_1.SpeakeasyBase));
exports.ImageScale = ImageScale;
var ImageTypeEnum;
(function (ImageTypeEnum) {
    ImageTypeEnum["Image"] = "image";
})(ImageTypeEnum = exports.ImageTypeEnum || (exports.ImageTypeEnum = {}));
var Image = /** @class */ (function (_super) {
    __extends(Image, _super);
    function Image() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "chroma-key" }),
        (0, class_transformer_1.Type)(function () { return ImageChromaKey; }),
        __metadata("design:type", ImageChromaKey)
    ], Image.prototype, "chromaKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "crop" }),
        (0, class_transformer_1.Type)(function () { return ImageCrop; }),
        __metadata("design:type", ImageCrop)
    ], Image.prototype, "crop", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pan" }),
        __metadata("design:type", String)
    ], Image.prototype, "pan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "position" }),
        __metadata("design:type", String)
    ], Image.prototype, "position", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rotate" }),
        (0, class_transformer_1.Type)(function () { return ImageRotate; }),
        __metadata("design:type", ImageRotate)
    ], Image.prototype, "rotate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scale" }),
        (0, class_transformer_1.Type)(function () { return ImageScale; }),
        __metadata("design:type", ImageScale)
    ], Image.prototype, "scale", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "src" }),
        __metadata("design:type", String)
    ], Image.prototype, "src", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Image.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "x" }),
        __metadata("design:type", Number)
    ], Image.prototype, "x", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "y" }),
        __metadata("design:type", Number)
    ], Image.prototype, "y", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "zoom" }),
        __metadata("design:type", Number)
    ], Image.prototype, "zoom", void 0);
    return Image;
}(utils_1.SpeakeasyBase));
exports.Image = Image;
