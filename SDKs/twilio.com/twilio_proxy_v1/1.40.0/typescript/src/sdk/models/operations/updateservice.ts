/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateServiceServerList = ["https://proxy.twilio.com"] as const;

export class UpdateServiceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateServiceUpdateServiceRequest extends SpeakeasyBase {
  /**
   * The URL we should call when the interaction status changes.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackUrl" })
  callbackUrl?: string;

  /**
   * The SID of the Chat Service Instance managed by Proxy Service. The Chat Service enables Proxy to forward SMS and channel messages to this chat instance. This is a one-to-one relationship.
   */
  @SpeakeasyMetadata({ data: "form, name=ChatInstanceSid" })
  chatInstanceSid?: string;

  /**
   * The default `ttl` value to set for Sessions created in the Service. The TTL (time to live) is measured in seconds after the Session's last create or last Interaction. The default value of `0` indicates an unlimited Session length. You can override a Session's default TTL value by setting its `ttl` value.
   */
  @SpeakeasyMetadata({ data: "form, name=DefaultTtl" })
  defaultTtl?: number;

  @SpeakeasyMetadata({ data: "form, name=GeoMatchLevel" })
  geoMatchLevel?: shared.ServiceEnumGeoMatchLevelEnum;

  /**
   * The URL we call on each interaction. If we receive a 403 status, we block the interaction; otherwise the interaction continues.
   */
  @SpeakeasyMetadata({ data: "form, name=InterceptCallbackUrl" })
  interceptCallbackUrl?: string;

  @SpeakeasyMetadata({ data: "form, name=NumberSelectionBehavior" })
  numberSelectionBehavior?: shared.ServiceEnumNumberSelectionBehaviorEnum;

  /**
   * The URL we should call when an inbound call or SMS action occurs on a closed or non-existent Session. If your server (or a Twilio [function](https://www.twilio.com/functions)) responds with valid [TwiML](https://www.twilio.com/docs/voice/twiml), we will process it. This means it is possible, for example, to play a message for a call, send an automated text message response, or redirect a call to another Phone Number. See [Out-of-Session Callback Response Guide](https://www.twilio.com/docs/proxy/out-session-callback-response-guide) for more information.
   */
  @SpeakeasyMetadata({ data: "form, name=OutOfSessionCallbackUrl" })
  outOfSessionCallbackUrl?: string;

  /**
   * An application-defined string that uniquely identifies the resource. This value must be 191 characters or fewer in length and be unique. **This value should not have PII.**
   */
  @SpeakeasyMetadata({ data: "form, name=UniqueName" })
  uniqueName?: string;
}

export class UpdateServiceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateServiceUpdateServiceRequest;

  /**
   * The Twilio-provided string that uniquely identifies the Service resource to update.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateServiceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  proxyV1Service?: shared.ProxyV1Service;
}
