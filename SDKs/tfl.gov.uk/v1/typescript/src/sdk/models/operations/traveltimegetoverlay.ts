/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * The direction of travel.
 */
export enum TravelTimeGetOverlayDirectionEnum {
  Average = "Average",
  From = "From",
  To = "To",
}

export class TravelTimeGetOverlayRequest extends SpeakeasyBase {
  /**
   * The direction of travel.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction: TravelTimeGetOverlayDirectionEnum;

  /**
   * The height of the requested overlay.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=height",
  })
  height: number;

  /**
   * The map center latitude.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=mapCenterLat",
  })
  mapCenterLat: number;

  /**
   * The map center longitude.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=mapCenterLon",
  })
  mapCenterLon: number;

  /**
   * The id of the mode.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=modeId",
  })
  modeId: string;

  /**
   * The latitude of the pin.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pinLat",
  })
  pinLat: number;

  /**
   * The longitude of the pin.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pinLon",
  })
  pinLon: number;

  /**
   * The title of the scenario.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=scenarioTitle",
  })
  scenarioTitle: string;

  /**
   * The id for the time of day (AM/INTER/PM)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=timeOfDayId",
  })
  timeOfDayId: string;

  /**
   * The total minutes between the travel time bands
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=travelTimeInterval",
  })
  travelTimeInterval: number;

  /**
   * The width of the requested overlay.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=width",
  })
  width: number;

  /**
   * The zoom level.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=z" })
  z: number;
}

export class TravelTimeGetOverlayResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  systemObject?: Record<string, any>;
}
