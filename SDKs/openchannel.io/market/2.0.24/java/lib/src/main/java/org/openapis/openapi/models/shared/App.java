/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * App - An app
 */
public class App {
    /**
     * A custom defined list of access requirements
     */
    
    public String[] access;

    public App withAccess(String[] access) {
        this.access = access;
        return this;
    }
    
    /**
     * Resticts users from accessing this app
     */
    
    public Restrictions allow;

    public App withAllow(Restrictions allow) {
        this.allow = allow;
        return this;
    }
    
    /**
     * The id of this app
     */
    
    public String appId;

    public App withAppId(String appId) {
        this.appId = appId;
        return this;
    }
    
    /**
     * A custom defined list of app attributes
     */
    
    public java.util.Map<String, Object> attributes;

    public App withAttributes(java.util.Map<String, Object> attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * The date (in millis) that this app was created
     */
    
    public Long created;

    public App withCreated(Long created) {
        this.created = created;
        return this;
    }
    
    /**
     * A custom JSON object that you can create and attach to this record
     */
    
    public java.util.Map<String, Object> customData;

    public App withCustomData(java.util.Map<String, Object> customData) {
        this.customData = customData;
        return this;
    }
    
    /**
     * The id of the developer that owns this app
     */
    
    public String developerId;

    public App withDeveloperId(String developerId) {
        this.developerId = developerId;
        return this;
    }
    
    /**
     * True if this is the live version of the app
     */
    
    public Boolean isLive;

    public App withIsLive(Boolean isLive) {
        this.isLive = isLive;
        return this;
    }
    
    /**
     * The date (in millis) that this app was last modified
     */
    
    public Long lastUpdated;

    public App withLastUpdated(Long lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    /**
     * The models that describes the cost and pricing for this app
     */
    
    public Model[] model;

    public App withModel(Model[] model) {
        this.model = model;
        return this;
    }
    
    /**
     * The name of this app
     */
    
    public String name;

    public App withName(String name) {
        this.name = name;
        return this;
    }
    
    
    public Ownership ownership;

    public App withOwnership(Ownership ownership) {
        this.ownership = ownership;
        return this;
    }
    
    /**
     * A random number that changes hourly and is used for achieving a random sort order when displaying apps
     */
    
    public Long randomize;

    public App withRandomize(Long randomize) {
        this.randomize = randomize;
        return this;
    }
    
    /**
     * The average review rating for this app. Reviews are rated from 100 (one star) to 500 (five star)
     */
    
    public Long rating;

    public App withRating(Long rating) {
        this.rating = rating;
        return this;
    }
    
    /**
     * Resticts users from accessing this app
     */
    
    public Restrictions restrict;

    public App withRestrict(Restrictions restrict) {
        this.restrict = restrict;
        return this;
    }
    
    /**
     * The number of approved reviews for this app.
     */
    
    public Long reviewCount;

    public App withReviewCount(Long reviewCount) {
        this.reviewCount = reviewCount;
        return this;
    }
    
    /**
     * URL safe aliases that can be used to identify this app even after name changes. The current alias is always at position 0.
     */
    
    public String[] safeName;

    public App withSafeName(String[] safeName) {
        this.safeName = safeName;
        return this;
    }
    
    /**
     * A field containing summary stats about the app and is specially designed to allow apps to be sorted by popularity
     */
    
    public java.util.Map<String, Object> statistics;

    public App withStatistics(java.util.Map<String, Object> statistics) {
        this.statistics = statistics;
        return this;
    }
    
    /**
     * The current status of this review
     */
    
    public Status status;

    public App withStatus(Status status) {
        this.status = status;
        return this;
    }
    
    /**
     * The date (in millis) that this app was submitted for approval
     */
    
    public Long submittedDate;

    public App withSubmittedDate(Long submittedDate) {
        this.submittedDate = submittedDate;
        return this;
    }
    
    /**
     * The type for this app
     */
    
    public String type;

    public App withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * The version number for this app
     */
    
    public Long version;

    public App withVersion(Long version) {
        this.version = version;
        return this;
    }
    
    public App(@JsonProperty("allow") Restrictions allow, @JsonProperty("appId") String appId, @JsonProperty("attributes") java.util.Map<String, Object> attributes, @JsonProperty("created") Long created, @JsonProperty("customData") java.util.Map<String, Object> customData, @JsonProperty("developerId") String developerId, @JsonProperty("isLive") Boolean isLive, @JsonProperty("lastUpdated") Long lastUpdated, @JsonProperty("model") Model[] model, @JsonProperty("name") String name, @JsonProperty("randomize") Long randomize, @JsonProperty("rating") Long rating, @JsonProperty("restrict") Restrictions restrict, @JsonProperty("safeName") String[] safeName, @JsonProperty("status") Status status, @JsonProperty("version") Long version) {
        this.allow = allow;
        this.appId = appId;
        this.attributes = attributes;
        this.created = created;
        this.customData = customData;
        this.developerId = developerId;
        this.isLive = isLive;
        this.lastUpdated = lastUpdated;
        this.model = model;
        this.name = name;
        this.randomize = randomize;
        this.rating = rating;
        this.restrict = restrict;
        this.safeName = safeName;
        this.status = status;
        this.version = version;
  }
}
