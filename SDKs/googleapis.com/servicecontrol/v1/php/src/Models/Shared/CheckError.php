<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CheckError - Defines the errors to be returned in google.api.servicecontrol.v1.CheckResponse.check_errors.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CheckError
{
    /**
     * The error code.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CheckErrorCodeEnum $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CheckErrorCodeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CheckErrorCodeEnum $code = null;
    
    /**
     * Free-form text providing details on the error cause of the error.
     * 
     * @var ?string $detail
     */
	#[\JMS\Serializer\Annotation\SerializedName('detail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $detail = null;
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Status $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Status')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Status $status = null;
    
    /**
     * Subject to whom this error applies. See the specific code enum for more details on this field. For example: - "project:" - "folder:" - "organization:"
     * 
     * @var ?string $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subject = null;
    
	public function __construct()
	{
		$this->code = null;
		$this->detail = null;
		$this->status = null;
		$this->subject = null;
	}
}
