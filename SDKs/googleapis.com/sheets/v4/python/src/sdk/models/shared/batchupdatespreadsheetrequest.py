"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import request as shared_request
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchUpdateSpreadsheetRequest:
    r"""The request for updating any aspect of a spreadsheet."""
    
    include_spreadsheet_in_response: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includeSpreadsheetInResponse'), 'exclude': lambda f: f is None }})
    r"""Determines if the update response should include the spreadsheet resource."""  
    requests: Optional[list[shared_request.Request]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requests'), 'exclude': lambda f: f is None }})
    r"""A list of updates to apply to the spreadsheet. Requests will be applied in the order they are specified. If any request is not valid, no requests will be applied."""  
    response_include_grid_data: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseIncludeGridData'), 'exclude': lambda f: f is None }})
    r"""True if grid data should be returned. Meaningful only if include_spreadsheet_in_response is 'true'. This parameter is ignored if a field mask was set in the request."""  
    response_ranges: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseRanges'), 'exclude': lambda f: f is None }})
    r"""Limits the ranges included in the response spreadsheet. Meaningful only if include_spreadsheet_in_response is 'true'."""  
    