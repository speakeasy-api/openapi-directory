/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Internal server error
 */
export class PostBenefitsDocumentUploadValidateDocument500ApplicationJSON extends SpeakeasyBase {
  /**
   * Unambiguous status code. Only present if status = "error"
   *
   * @remarks
   *
   * * `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.
   * * `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.
   * * `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.
   * * `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.
   * * `DOC105` - Invalid or unknown id
   * * `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.
   * * `DOC107` - Empty payload.
   * * `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.
   * * `DOC201` - Upload server error.
   * * `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Human readable error detail. Only present if status = "error"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Unambiguous status code. Only present if status = "error"
   *
   * @remarks
   *
   * * `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.
   * * `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.
   * * `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.
   * * `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.
   * * `DOC105` - Invalid or unknown id
   * * `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.
   * * `DOC107` - Empty payload.
   * * `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.
   * * `DOC201` - Upload server error.
   * * `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Human readable title description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

/**
 * Too many requests
 */
export class PostBenefitsDocumentUploadValidateDocument429ApplicationJSON extends SpeakeasyBase {
  /**
   * message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;
}

/**
 * Document did NOT pass system requirements
 */
export class PostBenefitsDocumentUploadValidateDocument422ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.DocumentValidationErrorModel })
  @Expose({ name: "errors" })
  @Type(() => shared.DocumentValidationErrorModel)
  errors: shared.DocumentValidationErrorModel[];
}

/**
 * Forbidden
 */
export class PostBenefitsDocumentUploadValidateDocument403ApplicationJSON extends SpeakeasyBase {
  /**
   * Error detail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;
}

/**
 * Unauthorized request
 */
export class PostBenefitsDocumentUploadValidateDocument401ApplicationJSON extends SpeakeasyBase {
  /**
   * Error detail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;
}

export class PostBenefitsDocumentUploadValidateDocument200ApplicationJSONDataAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class PostBenefitsDocumentUploadValidateDocument200ApplicationJSONData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(
    () =>
      PostBenefitsDocumentUploadValidateDocument200ApplicationJSONDataAttributes
  )
  attributes?: PostBenefitsDocumentUploadValidateDocument200ApplicationJSONDataAttributes;

  /**
   * schema type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Document passed system requirements
 */
export class PostBenefitsDocumentUploadValidateDocument200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => PostBenefitsDocumentUploadValidateDocument200ApplicationJSONData)
  data?: PostBenefitsDocumentUploadValidateDocument200ApplicationJSONData;
}

export class PostBenefitsDocumentUploadValidateDocumentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Document passed system requirements
   */
  @SpeakeasyMetadata()
  postBenefitsDocumentUploadValidateDocument200ApplicationJSONObject?: PostBenefitsDocumentUploadValidateDocument200ApplicationJSON;

  /**
   * Unauthorized request
   */
  @SpeakeasyMetadata()
  postBenefitsDocumentUploadValidateDocument401ApplicationJSONObject?: PostBenefitsDocumentUploadValidateDocument401ApplicationJSON;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  postBenefitsDocumentUploadValidateDocument403ApplicationJSONObject?: PostBenefitsDocumentUploadValidateDocument403ApplicationJSON;

  /**
   * Document did NOT pass system requirements
   */
  @SpeakeasyMetadata()
  postBenefitsDocumentUploadValidateDocument422ApplicationJSONObject?: PostBenefitsDocumentUploadValidateDocument422ApplicationJSON;

  /**
   * Too many requests
   */
  @SpeakeasyMetadata()
  postBenefitsDocumentUploadValidateDocument429ApplicationJSONObject?: PostBenefitsDocumentUploadValidateDocument429ApplicationJSON;

  /**
   * Internal server error
   */
  @SpeakeasyMetadata()
  postBenefitsDocumentUploadValidateDocument500ApplicationJSONObject?: PostBenefitsDocumentUploadValidateDocument500ApplicationJSON;
}
