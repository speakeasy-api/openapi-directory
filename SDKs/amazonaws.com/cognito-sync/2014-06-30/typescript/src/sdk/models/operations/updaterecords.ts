/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateRecordsRequestBody extends SpeakeasyBase {
  /**
   * The unique ID generated for this device by Cognito.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DeviceId" })
  deviceId?: string;

  /**
   * A list of patch operations.
   */
  @SpeakeasyMetadata({ elemType: shared.RecordPatch })
  @Expose({ name: "RecordPatches" })
  @Type(() => shared.RecordPatch)
  recordPatches?: shared.RecordPatch[];

  /**
   * The SyncSessionToken returned by a previous call to ListRecords for this dataset and identity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SyncSessionToken" })
  syncSessionToken: string;
}

export class UpdateRecordsRequest extends SpeakeasyBase {
  /**
   * A string of up to 128 characters. Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot).
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=DatasetName",
  })
  datasetName: string;

  /**
   * A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=IdentityId",
  })
  identityId: string;

  /**
   * A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=IdentityPoolId",
  })
  identityPoolId: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateRecordsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * Intended to supply a device ID that will populate the lastModifiedBy field referenced in other methods. The ClientContext field is not yet implemented.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-amz-Client-Context",
  })
  xAmzClientContext?: string;
}

export class UpdateRecordsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalErrorException
   */
  @SpeakeasyMetadata()
  internalErrorException?: any;

  /**
   * InvalidLambdaFunctionOutputException
   */
  @SpeakeasyMetadata()
  invalidLambdaFunctionOutputException?: any;

  /**
   * InvalidParameterException
   */
  @SpeakeasyMetadata()
  invalidParameterException?: any;

  /**
   * LambdaThrottledException
   */
  @SpeakeasyMetadata()
  lambdaThrottledException?: any;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  /**
   * NotAuthorizedException
   */
  @SpeakeasyMetadata()
  notAuthorizedException?: any;

  /**
   * ResourceConflictException
   */
  @SpeakeasyMetadata()
  resourceConflictException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateRecordsResponse?: shared.UpdateRecordsResponse;
}
