<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NetworkConfig - Network related configurations.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NetworkConfig
{
    /**
     * Allows the TPU node to send and receive packets with non-matching destination or source IPs. This is required if you plan to use the TPU workers to forward routes.
     * 
     * @var ?bool $canIpForward
     */
	#[\JMS\Serializer\Annotation\SerializedName('canIpForward')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canIpForward = null;
    
    /**
     * Indicates that external IP addresses would be associated with the TPU workers. If set to false, the specified subnetwork or network should have Private Google Access enabled.
     * 
     * @var ?bool $enableExternalIps
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableExternalIps')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableExternalIps = null;
    
    /**
     * The name of the network for the TPU node. It must be a preexisting Google Compute Engine network. If none is provided, "default" will be used.
     * 
     * @var ?string $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $network = null;
    
    /**
     * The name of the subnetwork for the TPU node. It must be a preexisting Google Compute Engine subnetwork. If none is provided, "default" will be used.
     * 
     * @var ?string $subnetwork
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnetwork')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subnetwork = null;
    
	public function __construct()
	{
		$this->canIpForward = null;
		$this->enableExternalIps = null;
		$this->network = null;
		$this->subnetwork = null;
	}
}
