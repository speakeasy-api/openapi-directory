/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PutTransactionsIdRequestBody {
    /**
     * A new amount for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;

    public PutTransactionsIdRequestBody withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The unique identifier of a new category for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category_id")
    public Long categoryId;

    public PutTransactionsIdRequestBody withCategoryId(Long categoryId) {
        this.categoryId = categoryId;
        return this;
    }
    
    /**
     * A new cheque number for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cheque_number")
    public String chequeNumber;

    public PutTransactionsIdRequestBody withChequeNumber(String chequeNumber) {
        this.chequeNumber = chequeNumber;
        return this;
    }
    
    /**
     * A new date for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date")
    public String date;

    public PutTransactionsIdRequestBody withDate(String date) {
        this.date = date;
        return this;
    }
    
    /**
     * Whether the transaction is a transfer or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_transfer")
    public Boolean isTransfer;

    public PutTransactionsIdRequestBody withIsTransfer(Boolean isTransfer) {
        this.isTransfer = isTransfer;
        return this;
    }
    
    /**
     * A new comma-separated set of labels for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public String labels;

    public PutTransactionsIdRequestBody withLabels(String labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * A new memo for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memo")
    public String memo;

    public PutTransactionsIdRequestBody withMemo(String memo) {
        this.memo = memo;
        return this;
    }
    
    /**
     * Whether the transaction needs to be reviewed or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("needs_review")
    public Boolean needsReview;

    public PutTransactionsIdRequestBody withNeedsReview(Boolean needsReview) {
        this.needsReview = needsReview;
        return this;
    }
    
    /**
     * A new note for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("note")
    public String note;

    public PutTransactionsIdRequestBody withNote(String note) {
        this.note = note;
        return this;
    }
    
    /**
     * A new payee for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payee")
    public String payee;

    public PutTransactionsIdRequestBody withPayee(String payee) {
        this.payee = payee;
        return this;
    }
    
    public PutTransactionsIdRequestBody(){}
}
