/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataQualityTargetTable } from "./dataqualitytargettable";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a data quality ruleset returned by <code>GetDataQualityRuleset</code>.
 */
export class DataQualityRulesetListDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RecommendationRunId" })
  recommendationRunId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleCount" })
  ruleCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TargetTable" })
  @Type(() => DataQualityTargetTable)
  targetTable?: DataQualityTargetTable;
}
