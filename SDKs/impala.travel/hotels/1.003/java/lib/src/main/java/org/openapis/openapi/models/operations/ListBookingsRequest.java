/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListBookingsRequest {
    /**
     * Allows for filtering based on creation date and time of the booking in ISO 8601 format (e.g. `2020-11-04T17:37:37Z`) and UTC timezone. Available modifiers include less than (`lt`), greater than (`gt`), lower than or equal to (`lte`), greater than or equal to (`gte`) and equal to (`eq`). Usage example: `?created[lte]=2020-11-04T19:37:37Z&amp;created[gte]=2020-11-04T15:56:37.000Z`
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=created")
    public java.util.Map<String, Object> created;
    public ListBookingsRequest withCreated(java.util.Map<String, Object> created) {
        this.created = created;
        return this;
    }
    
    /**
     * Allows for filtering based on departure date of the booking in ISO 8601 format (e.g. `2021-12-01`). Available modifiers include less than (`lt`), greater than (`gt`), lower than or equal to (`lte`), greater than or equal to (`gte`) and equal to (`eq`). Usage example: `?end[lte]=2021-12-25&amp;end[gte]=2021-12-15`
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=end")
    public java.util.Map<String, Object> end;
    public ListBookingsRequest withEnd(java.util.Map<String, Object> end) {
        this.end = end;
        return this;
    }
    
    /**
     * Pagination offset. Defaults to 0 if omitted.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Double offset;
    public ListBookingsRequest withOffset(Double offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Pagination size. Defaults to 100 if omitted.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=size")
    public Double size;
    public ListBookingsRequest withSize(Double size) {
        this.size = size;
        return this;
    }
    
    /**
     * Order in which the results should be sorted. Currently allows you to sort by `createdAt` and `updatedAt`. Specify multiple paramaters by separating with commas
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sortBy")
    public String sortBy;
    public ListBookingsRequest withSortBy(String sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Allows for filtering based on arrival date of the booking in ISO 8601 format (e.g. `2021-12-01`). Available modifiers include less than (`lt`), greater than (`gt`), lower than or equal to (`lte`), greater than or equal to (`gte`) and equal to (`eq`). Usage example: `?start[lte]=2021-12-20&amp;start[gte]=2021-12-10`
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=start")
    public java.util.Map<String, Object> start;
    public ListBookingsRequest withStart(java.util.Map<String, Object> start) {
        this.start = start;
        return this;
    }
    
    /**
     * Allows for filtering based on the date and time the booking was last updated, in ISO 8601 format (e.g. `2020-11-04T17:37:37Z`) and UTC timezone. Available modifiers include less than (`lt`), greater than (`gt`), lower than or equal to (`lte`), greater than or equal to (`gte`) and equal to (`eq`). Usage example: `?updated[lte]=2020-11-04T19:37:37Z&amp;updated[gte]=2020-11-04T15:56:37.000Z`
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=updated")
    public java.util.Map<String, Object> updated;
    public ListBookingsRequest withUpdated(java.util.Map<String, Object> updated) {
        this.updated = updated;
        return this;
    }
    
}
