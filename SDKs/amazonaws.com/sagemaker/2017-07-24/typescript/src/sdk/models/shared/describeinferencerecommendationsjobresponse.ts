/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EndpointPerformance } from "./endpointperformance";
import { InferenceRecommendation } from "./inferencerecommendation";
import { RecommendationJobInputConfig } from "./recommendationjobinputconfig";
import { RecommendationJobStatusEnum } from "./recommendationjobstatusenum";
import { RecommendationJobStoppingConditions } from "./recommendationjobstoppingconditions";
import { RecommendationJobTypeEnum } from "./recommendationjobtypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeInferenceRecommendationsJobResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CompletionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completionTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata({ elemType: EndpointPerformance })
  @Expose({ name: "EndpointPerformances" })
  @Type(() => EndpointPerformance)
  endpointPerformances?: EndpointPerformance[];

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata({ elemType: InferenceRecommendation })
  @Expose({ name: "InferenceRecommendations" })
  @Type(() => InferenceRecommendation)
  inferenceRecommendations?: InferenceRecommendation[];

  @SpeakeasyMetadata()
  @Expose({ name: "InputConfig" })
  @Type(() => RecommendationJobInputConfig)
  inputConfig: RecommendationJobInputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "JobArn" })
  jobArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobDescription" })
  jobDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobName" })
  jobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobType" })
  jobType: RecommendationJobTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: RecommendationJobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StoppingConditions" })
  @Type(() => RecommendationJobStoppingConditions)
  stoppingConditions?: RecommendationJobStoppingConditions;
}
