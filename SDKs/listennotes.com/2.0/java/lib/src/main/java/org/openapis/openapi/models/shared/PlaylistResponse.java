/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PlaylistResponse - OK
 */
public class PlaylistResponse {
    /**
     * Playlist description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PlaylistResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A 11-character playlist id, which can be used to further fetch detailed playlist metadata via `GET /playlists/{id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public PlaylistResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * High resolution image url of the playlist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public String image;
    public PlaylistResponse withImage(String image) {
        this.image = image;
        return this;
    }
    
    /**
     * A list of playlist items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public PlaylistItem[] items;
    public PlaylistResponse withItems(PlaylistItem[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Passed to the **last_timestamp_ms** parameter of `GET /playlists/{id}` to paginate through items of that playlist.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_timestamp_ms")
    public Long lastTimestampMs;
    public PlaylistResponse withLastTimestampMs(Long lastTimestampMs) {
        this.lastTimestampMs = lastTimestampMs;
        return this;
    }
    
    /**
     * The url of this playlist on ListenNotes.com.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listennotes_url")
    public String listennotesUrl;
    public PlaylistResponse withListennotesUrl(String listennotesUrl) {
        this.listennotesUrl = listennotesUrl;
        return this;
    }
    
    /**
     * Playlist name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PlaylistResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Low resolution image url of the playlist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnail")
    public String thumbnail;
    public PlaylistResponse withThumbnail(String thumbnail) {
        this.thumbnail = thumbnail;
        return this;
    }
    
    /**
     * Total number of items in this playlist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Long total;
    public PlaylistResponse withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    /**
     * Total audio length of all episodes in this playlist, in seconds. It will have a valid value only when type is **episode_list**. In other words, it will be 0 if type is **podcast_list**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_audio_length_sec")
    public Long totalAudioLengthSec;
    public PlaylistResponse withTotalAudioLengthSec(Long totalAudioLengthSec) {
        this.totalAudioLengthSec = totalAudioLengthSec;
        return this;
    }
    
    /**
     * The type of this playlist, which should be either **episode_list** or **podcast_list**.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public PlaylistResponseTypeEnum type;
    public PlaylistResponse withType(PlaylistResponseTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Visibility of this playlist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visibility")
    public PlaylistVisibilityFieldEnum visibility;
    public PlaylistResponse withVisibility(PlaylistVisibilityFieldEnum visibility) {
        this.visibility = visibility;
        return this;
    }
    
}
