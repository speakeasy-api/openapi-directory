/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AllowedClient, AllowedClientInput } from "./allowedclient";
import { Expose, Type } from "class-transformer";

/**
 * Output only. The state of the NFS share.
 */
export enum NfsShareStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Provisioned = "PROVISIONED",
  Creating = "CREATING",
  Updating = "UPDATING",
  Deleting = "DELETING",
}

/**
 * Immutable. The storage type of the underlying volume.
 */
export enum NfsShareStorageTypeEnum {
  StorageTypeUnspecified = "STORAGE_TYPE_UNSPECIFIED",
  Ssd = "SSD",
  Hdd = "HDD",
}

/**
 * An NFS share.
 */
export class NfsShare extends SpeakeasyBase {
  /**
   * List of allowed access points.
   */
  @SpeakeasyMetadata({ elemType: AllowedClient })
  @Expose({ name: "allowedClients" })
  @Type(() => AllowedClient)
  allowedClients?: AllowedClient[];

  /**
   * Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Labels as key value pairs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Immutable. The name of the NFS share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nfsShareId" })
  nfsShareId?: string;

  /**
   * The requested size, in GiB.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedSizeGib" })
  requestedSizeGib?: string;

  /**
   * Output only. The state of the NFS share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: NfsShareStateEnum;

  /**
   * Immutable. The storage type of the underlying volume.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storageType" })
  storageType?: NfsShareStorageTypeEnum;

  /**
   * Output only. The underlying volume of the share. Created automatically during provisioning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "volume" })
  volume?: string;
}

/**
 * An NFS share.
 */
export class NfsShareInput extends SpeakeasyBase {
  /**
   * List of allowed access points.
   */
  @SpeakeasyMetadata({ elemType: AllowedClientInput })
  @Expose({ name: "allowedClients" })
  @Type(() => AllowedClientInput)
  allowedClients?: AllowedClientInput[];

  /**
   * Labels as key value pairs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Immutable. The name of the NFS share.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The requested size, in GiB.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedSizeGib" })
  requestedSizeGib?: string;

  /**
   * Immutable. The storage type of the underlying volume.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storageType" })
  storageType?: NfsShareStorageTypeEnum;
}
