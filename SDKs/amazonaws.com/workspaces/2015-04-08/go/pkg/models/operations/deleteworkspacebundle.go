// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteWorkspaceBundleXAmzTargetEnum
type DeleteWorkspaceBundleXAmzTargetEnum string

const (
	DeleteWorkspaceBundleXAmzTargetEnumWorkspacesServiceDeleteWorkspaceBundle DeleteWorkspaceBundleXAmzTargetEnum = "WorkspacesService.DeleteWorkspaceBundle"
)

func (e *DeleteWorkspaceBundleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkspacesService.DeleteWorkspaceBundle":
		*e = DeleteWorkspaceBundleXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteWorkspaceBundleXAmzTargetEnum: %s", s)
	}
}

type DeleteWorkspaceBundleRequest struct {
	DeleteWorkspaceBundleRequest shared.DeleteWorkspaceBundleRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteWorkspaceBundleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteWorkspaceBundleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DeleteWorkspaceBundleResult map[string]interface{}
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// ResourceAssociatedException
	ResourceAssociatedException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
