/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class StoreReleasesListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class StoreReleasesListRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * The name of the store
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=store_name",
  })
  storeName: string;
}

export enum StoreReleasesListDefaultApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * Error
 */
export class StoreReleasesListDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: StoreReleasesListDefaultApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Destination for this release.
 */
export enum StoreReleasesList200ApplicationJSONDestinationTypeEnum {
  Group = "group",
  Store = "store",
  Tester = "tester",
}

/**
 * A type identifying the type of distribution store.
 */
export enum StoreReleasesList200ApplicationJSONDistributionStoresTypeEnum {
  Googleplay = "googleplay",
  Intune = "intune",
  Apple = "apple",
}

export class StoreReleasesList200ApplicationJSONDistributionStores extends SpeakeasyBase {
  /**
   * ID identifying a unique distribution store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Is the containing release the latest one in this distribution store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_latest" })
  isLatest?: boolean;

  /**
   * A name identifying a unique distribution store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A status identifying the status of release in the distribution store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publishing_status" })
  publishingStatus?: string;

  /**
   * A type identifying the type of distribution store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: StoreReleasesList200ApplicationJSONDistributionStoresTypeEnum;
}

/**
 * Basic information on a release
 */
export class StoreReleasesList200ApplicationJSON extends SpeakeasyBase {
  /**
   * Destination for this release.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination_type" })
  destinationType?: StoreReleasesList200ApplicationJSONDestinationTypeEnum;

  /**
   * a list of distribution stores that are associated with this release.
   */
  @SpeakeasyMetadata({
    elemType: StoreReleasesList200ApplicationJSONDistributionStores,
  })
  @Expose({ name: "distribution_stores" })
  @Type(() => StoreReleasesList200ApplicationJSONDistributionStores)
  distributionStores?: StoreReleasesList200ApplicationJSONDistributionStores[];

  /**
   * ID identifying this unique release.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The release's short version.
   *
   * @remarks
   * For iOS: CFBundleShortVersionString from info.plist.
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "short_version" })
  shortVersion?: string;

  /**
   * UTC time in ISO 8601 format of the uploaded time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_at" })
  uploadedAt?: string;

  /**
   * The release's version.
   *
   * @remarks
   * For iOS: CFBundleVersion from info.plist.
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}

export class StoreReleasesListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: StoreReleasesList200ApplicationJSON })
  storeReleasesList200ApplicationJSONObjects?: StoreReleasesList200ApplicationJSON[];

  /**
   * Error
   */
  @SpeakeasyMetadata()
  storeReleasesListDefaultApplicationJSONObject?: StoreReleasesListDefaultApplicationJSON;
}
