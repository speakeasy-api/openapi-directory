/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Aggregated request sampling data for a sampling rule across all services for a 10-second window.
 */
export class SamplingStatisticSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BorrowCount" })
  borrowCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestCount" })
  requestCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleName" })
  ruleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SampledCount" })
  sampledCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;
}
