"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Timeline:
    
    first_online: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstOnline') }})
    r"""Online posted date"""  
    posted: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('posted') }})
    r"""Posted date"""  
    publisher_acceptance: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisherAcceptance') }})
    r"""Date when the item was accepted for publication"""  
    publisher_publication: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisherPublication') }})
    r"""Publish date"""  
    revision: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revision') }})
    r"""Revision date from curation (if curated)"""  
    submission: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('submission') }})
    r"""Submission date in curation (if curated)"""  
    