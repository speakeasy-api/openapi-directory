// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RichResultsIssueSeverityEnum - Severity of this issue: WARNING, or ERROR. Items with an issue of status ERROR cannot appear with rich result features in Google Search results.
type RichResultsIssueSeverityEnum string

const (
	RichResultsIssueSeverityEnumSeverityUnspecified RichResultsIssueSeverityEnum = "SEVERITY_UNSPECIFIED"
	RichResultsIssueSeverityEnumWarning             RichResultsIssueSeverityEnum = "WARNING"
	RichResultsIssueSeverityEnumError               RichResultsIssueSeverityEnum = "ERROR"
)

func (e RichResultsIssueSeverityEnum) ToPointer() *RichResultsIssueSeverityEnum {
	return &e
}

func (e *RichResultsIssueSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "WARNING":
		fallthrough
	case "ERROR":
		*e = RichResultsIssueSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RichResultsIssueSeverityEnum: %v", v)
	}
}

// RichResultsIssue - Severity and status of a single issue affecting a single rich result instance on a page.
type RichResultsIssue struct {
	// Rich Results issue type.
	IssueMessage *string `json:"issueMessage,omitempty"`
	// Severity of this issue: WARNING, or ERROR. Items with an issue of status ERROR cannot appear with rich result features in Google Search results.
	Severity *RichResultsIssueSeverityEnum `json:"severity,omitempty"`
}
