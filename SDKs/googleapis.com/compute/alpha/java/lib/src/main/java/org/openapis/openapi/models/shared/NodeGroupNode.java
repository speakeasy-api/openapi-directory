/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NodeGroupNode {
    /**
     * Accelerators for this node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accelerators")
    public AcceleratorConfig[] accelerators;
    public NodeGroupNode withAccelerators(AcceleratorConfig[] accelerators) {
        this.accelerators = accelerators;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumedResources")
    public InstanceConsumptionInfo consumedResources;
    public NodeGroupNode withConsumedResources(InstanceConsumptionInfo consumedResources) {
        this.consumedResources = consumedResources;
        return this;
    }
    
    /**
     * CPU overcommit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuOvercommitType")
    public NodeGroupNodeCpuOvercommitTypeEnum cpuOvercommitType;
    public NodeGroupNode withCpuOvercommitType(NodeGroupNodeCpuOvercommitTypeEnum cpuOvercommitType) {
        this.cpuOvercommitType = cpuOvercommitType;
        return this;
    }
    
    /**
     * Local disk configurations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disks")
    public LocalDisk[] disks;
    public NodeGroupNode withDisks(LocalDisk[] disks) {
        this.disks = disks;
        return this;
    }
    
    /**
     * Instance data that shows consumed resources on the node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceConsumptionData")
    public InstanceConsumptionData[] instanceConsumptionData;
    public NodeGroupNode withInstanceConsumptionData(InstanceConsumptionData[] instanceConsumptionData) {
        this.instanceConsumptionData = instanceConsumptionData;
        return this;
    }
    
    /**
     * Instances scheduled on this node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instances")
    public String[] instances;
    public NodeGroupNode withInstances(String[] instances) {
        this.instances = instances;
        return this;
    }
    
    /**
     * The name of the node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public NodeGroupNode withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The type of this node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeType")
    public String nodeType;
    public NodeGroupNode withNodeType(String nodeType) {
        this.nodeType = nodeType;
        return this;
    }
    
    /**
     * [Output Only] Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;
    public NodeGroupNode withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverBinding")
    public ServerBinding serverBinding;
    public NodeGroupNode withServerBinding(ServerBinding serverBinding) {
        this.serverBinding = serverBinding;
        return this;
    }
    
    /**
     * Server ID associated with this node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverId")
    public String serverId;
    public NodeGroupNode withServerId(String serverId) {
        this.serverId = serverId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public NodeGroupNodeStatusEnum status;
    public NodeGroupNode withStatus(NodeGroupNodeStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalResources")
    public InstanceConsumptionInfo totalResources;
    public NodeGroupNode withTotalResources(InstanceConsumptionInfo totalResources) {
        this.totalResources = totalResources;
        return this;
    }
    
    /**
     * Upcoming Maintenance notification information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upcomingMaintenance")
    public UpcomingMaintenance upcomingMaintenance;
    public NodeGroupNode withUpcomingMaintenance(UpcomingMaintenance upcomingMaintenance) {
        this.upcomingMaintenance = upcomingMaintenance;
        return this;
    }
    
}
