/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudNetworksecurityV1beta1CertificateProvider } from "./googlecloudnetworksecurityv1beta1certificateprovider";
import { ValidationCA } from "./validationca";
import { Expose, Type } from "class-transformer";

/**
 * ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource.
 */
export class ClientTlsPolicy extends SpeakeasyBase {
  /**
   * Specification of certificate provider. Defines the mechanism to obtain the certificate and private key for peer to peer authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientCertificate" })
  @Type(() => GoogleCloudNetworksecurityV1beta1CertificateProvider)
  clientCertificate?: GoogleCloudNetworksecurityV1beta1CertificateProvider;

  /**
   * Output only. The timestamp when the resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Optional. Free-text description of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Optional. Set of label tags associated with the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Required. Name of the ClientTlsPolicy resource. It matches the pattern `projects/* /locations/{location}/clientTlsPolicies/{client_tls_policy}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
   */
  @SpeakeasyMetadata({ elemType: ValidationCA })
  @Expose({ name: "serverValidationCa" })
  @Type(() => ValidationCA)
  serverValidationCa?: ValidationCA[];

  /**
   * Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sni" })
  sni?: string;

  /**
   * Output only. The timestamp when the resource was updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource.
 */
export class ClientTlsPolicyInput extends SpeakeasyBase {
  /**
   * Specification of certificate provider. Defines the mechanism to obtain the certificate and private key for peer to peer authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientCertificate" })
  @Type(() => GoogleCloudNetworksecurityV1beta1CertificateProvider)
  clientCertificate?: GoogleCloudNetworksecurityV1beta1CertificateProvider;

  /**
   * Optional. Free-text description of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Optional. Set of label tags associated with the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Required. Name of the ClientTlsPolicy resource. It matches the pattern `projects/* /locations/{location}/clientTlsPolicies/{client_tls_policy}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
   */
  @SpeakeasyMetadata({ elemType: ValidationCA })
  @Expose({ name: "serverValidationCa" })
  @Type(() => ValidationCA)
  serverValidationCa?: ValidationCA[];

  /**
   * Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sni" })
  sni?: string;
}
