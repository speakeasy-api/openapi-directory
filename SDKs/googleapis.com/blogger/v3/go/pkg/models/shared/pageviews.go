// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PageviewsCountsTimeRangeEnum - Time range the given count applies to.
type PageviewsCountsTimeRangeEnum string

const (
	PageviewsCountsTimeRangeEnumAllTime    PageviewsCountsTimeRangeEnum = "ALL_TIME"
	PageviewsCountsTimeRangeEnumThirtyDays PageviewsCountsTimeRangeEnum = "THIRTY_DAYS"
	PageviewsCountsTimeRangeEnumSevenDays  PageviewsCountsTimeRangeEnum = "SEVEN_DAYS"
)

func (e *PageviewsCountsTimeRangeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALL_TIME":
		fallthrough
	case "THIRTY_DAYS":
		fallthrough
	case "SEVEN_DAYS":
		*e = PageviewsCountsTimeRangeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PageviewsCountsTimeRangeEnum: %s", s)
	}
}

type PageviewsCounts struct {
	// Count of page views for the given time range.
	Count *string `json:"count,omitempty"`
	// Time range the given count applies to.
	TimeRange *PageviewsCountsTimeRangeEnum `json:"timeRange,omitempty"`
}

// Pageviews - Successful response
type Pageviews struct {
	// Blog Id.
	BlogID *string `json:"blogId,omitempty"`
	// The container of posts in this blog.
	Counts []PageviewsCounts `json:"counts,omitempty"`
	// The kind of this entry. Always blogger#page_views.
	Kind *string `json:"kind,omitempty"`
}
