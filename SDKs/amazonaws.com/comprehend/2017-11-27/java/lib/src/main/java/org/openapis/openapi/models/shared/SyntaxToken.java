/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SyntaxToken - Represents a work in the input text that was recognized and assigned a part of speech. There is one syntax token record for each word in the source text.
 */
public class SyntaxToken {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BeginOffset")
    public Long beginOffset;

    public SyntaxToken withBeginOffset(Long beginOffset) {
        this.beginOffset = beginOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EndOffset")
    public Long endOffset;

    public SyntaxToken withEndOffset(Long endOffset) {
        this.endOffset = endOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PartOfSpeech")
    public PartOfSpeechTag partOfSpeech;

    public SyntaxToken withPartOfSpeech(PartOfSpeechTag partOfSpeech) {
        this.partOfSpeech = partOfSpeech;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Text")
    public String text;

    public SyntaxToken withText(String text) {
        this.text = text;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TokenId")
    public Long tokenId;

    public SyntaxToken withTokenId(Long tokenId) {
        this.tokenId = tokenId;
        return this;
    }
    
    public SyntaxToken(){}
}
