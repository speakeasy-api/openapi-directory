/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ListAssetsResult } from "./listassetsresult";
import { Expose, Type } from "class-transformer";

/**
 * Response message for listing assets.
 */
export class ListAssetsResponse extends SpeakeasyBase {
  /**
   * Assets matching the list request.
   */
  @SpeakeasyMetadata({ elemType: ListAssetsResult })
  @Expose({ name: "listAssetsResults" })
  @Type(() => ListAssetsResult)
  listAssetsResults?: ListAssetsResult[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Time used for executing the list request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readTime" })
  readTime?: string;

  /**
   * The total number of assets matching the query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSize" })
  totalSize?: number;
}
