/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserRecord - A team member user record
 */
public class UserRecord {
    /**
     * If the user has admin privileges then the user will be able to create password reset requests on behalf of other users, and will also be able to view and edit  the data of other users.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("admin")
    public Boolean admin;
    public UserRecord withAdmin(Boolean admin) {
        this.admin = admin;
        return this;
    }
    
    /**
     * The user's email address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public UserRecord withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The id of the user's record
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public UserRecord withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The user's name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UserRecord withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Not used in this version of the API. For future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("read_only")
    public Boolean readOnly;
    public UserRecord withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }
    
}
