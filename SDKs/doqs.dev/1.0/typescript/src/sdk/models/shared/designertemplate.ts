/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FormatEnum } from "./formatenum";
import { OrientationEnum } from "./orientationenum";
import { Expose, Transform } from "class-transformer";

export class DesignerTemplate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "components" })
  components: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "css" })
  css: string;

  @SpeakeasyMetadata()
  @Expose({ name: "footer_html" })
  footerHtml?: string;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format: FormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "header_html" })
  headerHtml?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orientation" })
  orientation: OrientationEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "preview_payload" })
  previewPayload: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "template_html" })
  templateHtml: string;
}
