"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class DescribeClientVpnEndpointsResultClientVpnEndpointsAssociatedTargetNetworksNetworkTypeEnum(str, Enum):
    r"""The target network type."""
    VPC = 'vpc'


@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsAssociatedTargetNetworks:
    r"""Describes a target network that is associated with a Client VPN endpoint. A target network is a subnet in a VPC."""
    
    network_id: Optional[str] = dataclasses.field(default=None)  
    network_type: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsAssociatedTargetNetworksNetworkTypeEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptionsActiveDirectory:
    r"""Information about the Active Directory, if applicable."""
    
    directory_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptionsFederatedAuthentication:
    r"""Information about the IAM SAML identity provider, if applicable."""
    
    saml_provider_arn: Optional[str] = dataclasses.field(default=None)  
    self_service_saml_provider_arn: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptionsMutualAuthentication:
    r"""Information about the authentication certificates, if applicable."""
    
    client_root_certificate_chain: Optional[str] = dataclasses.field(default=None)  
    
class DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptionsTypeEnum(str, Enum):
    r"""The authentication type used."""
    CERTIFICATE_AUTHENTICATION = 'certificate-authentication'
    DIRECTORY_SERVICE_AUTHENTICATION = 'directory-service-authentication'
    FEDERATED_AUTHENTICATION = 'federated-authentication'


@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptions:
    r"""Describes the authentication methods used by a Client VPN endpoint. For more information, see <a href=\\"https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/client-authentication.html\\">Authentication</a> in the <i>Client VPN Administrator Guide</i>."""
    
    active_directory: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptionsActiveDirectory] = dataclasses.field(default=None)  
    federated_authentication: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptionsFederatedAuthentication] = dataclasses.field(default=None)  
    mutual_authentication: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptionsMutualAuthentication] = dataclasses.field(default=None)  
    type: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptionsTypeEnum] = dataclasses.field(default=None)  
    
class DescribeClientVpnEndpointsResultClientVpnEndpointsClientConnectOptionsStatusCodeEnum(str, Enum):
    r"""The status code."""
    APPLYING = 'applying'
    APPLIED = 'applied'


@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsClientConnectOptionsStatus:
    r"""The status of any updates to the client connect options."""
    
    code: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsClientConnectOptionsStatusCodeEnum] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsClientConnectOptions:
    r"""The options for managing connection authorization for new client connections."""
    
    enabled: Optional[bool] = dataclasses.field(default=None)  
    lambda_function_arn: Optional[str] = dataclasses.field(default=None)  
    status: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsClientConnectOptionsStatus] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsClientLoginBannerOptions:
    r"""Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established."""
    
    banner_text: Optional[str] = dataclasses.field(default=None)  
    enabled: Optional[bool] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsConnectionLogOptions:
    r"""Information about the client connection logging options for the Client VPN endpoint."""
    
    cloudwatch_log_group: Optional[str] = dataclasses.field(default=None)  
    cloudwatch_log_stream: Optional[str] = dataclasses.field(default=None)  
    enabled: Optional[bool] = dataclasses.field(default=None)  
    
class DescribeClientVpnEndpointsResultClientVpnEndpointsStatusCodeEnum(str, Enum):
    r"""<p>The state of the Client VPN endpoint. Possible states include:</p> <ul> <li> <p> <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.</p> </li> <li> <p> <code>available</code> - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.</p> </li> <li> <p> <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.</p> </li> <li> <p> <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.</p> </li> </ul>"""
    PENDING_ASSOCIATE = 'pending-associate'
    AVAILABLE = 'available'
    DELETING = 'deleting'
    DELETED = 'deleted'


@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsStatus:
    r"""The current state of the Client VPN endpoint."""
    
    code: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsStatusCodeEnum] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpointsTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    
class DescribeClientVpnEndpointsResultClientVpnEndpointsTransportProtocolEnum(str, Enum):
    r"""The transport protocol used by the Client VPN endpoint."""
    TCP = 'tcp'
    UDP = 'udp'

class DescribeClientVpnEndpointsResultClientVpnEndpointsVpnProtocolEnum(str, Enum):
    r"""The protocol used by the VPN session."""
    OPENVPN = 'openvpn'


@dataclasses.dataclass
class DescribeClientVpnEndpointsResultClientVpnEndpoints:
    r"""Describes a Client VPN endpoint."""
    
    associated_target_networks: Optional[list[DescribeClientVpnEndpointsResultClientVpnEndpointsAssociatedTargetNetworks]] = dataclasses.field(default=None)  
    authentication_options: Optional[list[DescribeClientVpnEndpointsResultClientVpnEndpointsAuthenticationOptions]] = dataclasses.field(default=None)  
    client_cidr_block: Optional[str] = dataclasses.field(default=None)  
    client_connect_options: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsClientConnectOptions] = dataclasses.field(default=None)  
    client_login_banner_options: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsClientLoginBannerOptions] = dataclasses.field(default=None)  
    client_vpn_endpoint_id: Optional[str] = dataclasses.field(default=None)  
    connection_log_options: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsConnectionLogOptions] = dataclasses.field(default=None)  
    creation_time: Optional[str] = dataclasses.field(default=None)  
    deletion_time: Optional[str] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    dns_name: Optional[str] = dataclasses.field(default=None)  
    dns_servers: Optional[list[str]] = dataclasses.field(default=None)  
    security_group_ids: Optional[list[str]] = dataclasses.field(default=None)  
    self_service_portal_url: Optional[str] = dataclasses.field(default=None)  
    server_certificate_arn: Optional[str] = dataclasses.field(default=None)  
    session_timeout_hours: Optional[int] = dataclasses.field(default=None)  
    split_tunnel: Optional[bool] = dataclasses.field(default=None)  
    status: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsStatus] = dataclasses.field(default=None)  
    tags: Optional[list[DescribeClientVpnEndpointsResultClientVpnEndpointsTags]] = dataclasses.field(default=None)  
    transport_protocol: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsTransportProtocolEnum] = dataclasses.field(default=None)  
    vpc_id: Optional[str] = dataclasses.field(default=None)  
    vpn_port: Optional[int] = dataclasses.field(default=None)  
    vpn_protocol: Optional[DescribeClientVpnEndpointsResultClientVpnEndpointsVpnProtocolEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeClientVpnEndpointsResult:
    r"""Success"""
    
    client_vpn_endpoints: Optional[list[DescribeClientVpnEndpointsResultClientVpnEndpoints]] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    