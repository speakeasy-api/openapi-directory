/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GETAccountSummaryInvoiceType } from "./getaccountsummaryinvoicetype";
import { GETAccountSummaryPaymentType } from "./getaccountsummarypaymenttype";
import { GETAccountSummarySubscriptionType } from "./getaccountsummarysubscriptiontype";
import { GETAccountSummaryTypeBasicInfo } from "./getaccountsummarytypebasicinfo";
import { GETAccountSummaryTypeBillToContact } from "./getaccountsummarytypebilltocontact";
import { GETAccountSummaryTypeSoldToContact } from "./getaccountsummarytypesoldtocontact";
import { GETAccountSummaryUsageType } from "./getaccountsummaryusagetype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Container for tax exempt information, used to establish the tax exempt status of a customer account.
 *
 * @remarks
 *
 */
export class GETAccountSummaryTypeTaxInfo extends SpeakeasyBase {
  /**
   * EU Value Added Tax ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "VATId" })
  vatId?: string;

  /**
   * Unique code that identifies a company account in Avalara.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyCode" })
  companyCode?: string;

  /**
   * ID of the customer tax exemption certificate.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptCertificateId" })
  exemptCertificateId?: string;

  /**
   * Type of tax exemption certificate that the customer holds.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptCertificateType" })
  exemptCertificateType?: string;

  /**
   * Description of the tax exemption certificate that the customer holds.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptDescription" })
  exemptDescription?: string;

  /**
   * Date when the customer tax exemption starts.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptEffectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  exemptEffectiveDate?: Date;

  /**
   * A unique entity use code to apply exemptions in Avalara AvaTax.
   *
   * @remarks
   *
   * This account-level field is required only when you choose Avalara as your tax engine. See [Exempt Transactions](https://developer.avalara.com/avatax/handling-tax-exempt-customers/)for more details.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptEntityUseCode" })
  exemptEntityUseCode?: string;

  /**
   * Date when the customer tax exemption expires.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptExpirationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  exemptExpirationDate?: Date;

  /**
   * Jurisdiction in which the customer tax exemption certificate was issued.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptIssuingJurisdiction" })
  exemptIssuingJurisdiction?: string;

  /**
   * Status of the account tax exemption.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptStatus" })
  exemptStatus?: string;
}

export class GETAccountSummaryType extends SpeakeasyBase {
  /**
   * Container for basic information about the account.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "basicInfo" })
  @Type(() => GETAccountSummaryTypeBasicInfo)
  basicInfo?: GETAccountSummaryTypeBasicInfo;

  /**
   * Container for bill-to contact information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billToContact" })
  @Type(() => GETAccountSummaryTypeBillToContact)
  billToContact?: GETAccountSummaryTypeBillToContact;

  /**
   * Container for invoices. Only returns the last 6 invoices.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETAccountSummaryInvoiceType })
  @Expose({ name: "invoices" })
  @Type(() => GETAccountSummaryInvoiceType)
  invoices?: GETAccountSummaryInvoiceType[];

  /**
   * Container for payments. Only returns the last 6 payments.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETAccountSummaryPaymentType })
  @Expose({ name: "payments" })
  @Type(() => GETAccountSummaryPaymentType)
  payments?: GETAccountSummaryPaymentType[];

  /**
   * Container for sold-to contact information; uses the same structure as `billToContact`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "soldToContact" })
  @Type(() => GETAccountSummaryTypeSoldToContact)
  soldToContact?: GETAccountSummaryTypeSoldToContact;

  /**
   * Container for subscriptions.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETAccountSummarySubscriptionType })
  @Expose({ name: "subscriptions" })
  @Type(() => GETAccountSummarySubscriptionType)
  subscriptions?: GETAccountSummarySubscriptionType[];

  /**
   * Returns `true` if the request was processed successfully.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * Container for tax exempt information, used to establish the tax exempt status of a customer account.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxInfo" })
  @Type(() => GETAccountSummaryTypeTaxInfo)
  taxInfo?: GETAccountSummaryTypeTaxInfo;

  /**
   * Container for usage data. Only returns the last 6 months of usage.
   *
   * @remarks
   *
   * **Note:** If the Active Rating feature is enabled, no usage data is returned in the response body field.
   *
   */
  @SpeakeasyMetadata({ elemType: GETAccountSummaryUsageType })
  @Expose({ name: "usage" })
  @Type(() => GETAccountSummaryUsageType)
  usage?: GETAccountSummaryUsageType[];
}
