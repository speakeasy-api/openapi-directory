// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BooksMyconfigSyncVolumeLicensesSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type BooksMyconfigSyncVolumeLicensesFeaturesEnum string

const (
	BooksMyconfigSyncVolumeLicensesFeaturesEnumFeaturesUndefined BooksMyconfigSyncVolumeLicensesFeaturesEnum = "FEATURES_UNDEFINED"
	BooksMyconfigSyncVolumeLicensesFeaturesEnumRentals           BooksMyconfigSyncVolumeLicensesFeaturesEnum = "RENTALS"
)

func (e *BooksMyconfigSyncVolumeLicensesFeaturesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FEATURES_UNDEFINED":
		fallthrough
	case "RENTALS":
		*e = BooksMyconfigSyncVolumeLicensesFeaturesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BooksMyconfigSyncVolumeLicensesFeaturesEnum: %s", s)
	}
}

type BooksMyconfigSyncVolumeLicensesQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// The device/version ID from which to release the restriction.
	Cpksver string `queryParam:"style=form,explode=true,name=cpksver"`
	// List of features supported by the client, i.e., 'RENTALS'
	Features []BooksMyconfigSyncVolumeLicensesFeaturesEnum `queryParam:"style=form,explode=true,name=features"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Set to true to include non-comics series. Defaults to false.
	IncludeNonComicsSeries *bool `queryParam:"style=form,explode=true,name=includeNonComicsSeries"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
	// The client nonce value.
	Nonce string `queryParam:"style=form,explode=true,name=nonce"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Set to true to show pre-ordered books. Defaults to false.
	ShowPreorders *bool `queryParam:"style=form,explode=true,name=showPreorders"`
	// String to identify the originator of this request.
	Source string `queryParam:"style=form,explode=true,name=source"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// The volume(s) to request download restrictions for.
	VolumeIds []string `queryParam:"style=form,explode=true,name=volumeIds"`
}

type BooksMyconfigSyncVolumeLicensesRequest struct {
	QueryParams BooksMyconfigSyncVolumeLicensesQueryParams
	Security    BooksMyconfigSyncVolumeLicensesSecurity
}

type BooksMyconfigSyncVolumeLicensesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	Volumes *shared.Volumes
}
