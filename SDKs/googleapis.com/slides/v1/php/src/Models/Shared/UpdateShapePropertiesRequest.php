<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UpdateShapePropertiesRequest - Update the properties of a Shape.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UpdateShapePropertiesRequest
{
    /**
     * The fields that should be updated. At least one field must be specified. The root `shapeProperties` is implied and should not be specified. A single `"*"` can be used as short-hand for listing every field. For example to update the shape background solid fill color, set `fields` to `"shapeBackgroundFill.solidFill.color"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.
     * 
     * @var ?string $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fields = null;
    
    /**
     * The object ID of the shape the updates are applied to.
     * 
     * @var ?string $objectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectId = null;
    
    /**
     * The properties of a Shape. If the shape is a placeholder shape as determined by the placeholder field, then these properties may be inherited from a parent placeholder shape. Determining the rendered value of the property depends on the corresponding property_state field value. Any text autofit settings on the shape are automatically deactivated by requests that can impact how text fits in the shape.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShapeProperties $shapeProperties
     */
	#[\JMS\Serializer\Annotation\SerializedName('shapeProperties')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ShapeProperties')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShapeProperties $shapeProperties = null;
    
	public function __construct()
	{
		$this->fields = null;
		$this->objectId = null;
		$this->shapeProperties = null;
	}
}
