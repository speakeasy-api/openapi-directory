<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Profile
{
    /**
     * The type of Wi-Fi network. Possible values: **wpa-psk**, **wpa2-psk**, **wpa-eap**, **wpa2-eap**.
     * 
     * @var string $authType
     */
	#[\JMS\Serializer\Annotation\SerializedName('authType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $authType;
    
    /**
     * Indicates whether to automatically select the best authentication method available. Does not work on older terminal models.
     * 
     * @var ?bool $autoWifi
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoWifi')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoWifi = null;
    
    /**
     * Use **infra** for infrastructure-based networks. This applies to most networks. Use **adhoc** only if the communication is p2p-based between base stations.
     * 
     * @var string $bssType
     */
	#[\JMS\Serializer\Annotation\SerializedName('bssType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bssType;
    
    /**
     * The channel number of the Wi-Fi network. The recommended setting is **0** for automatic channel selection.
     * 
     * @var ?int $channel
     */
	#[\JMS\Serializer\Annotation\SerializedName('channel')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $channel = null;
    
    /**
     * Indicates whether this is your preferred wireless network. If **true**, the terminal will try connecting to this network first.
     * 
     * @var ?bool $defaultProfile
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultProfile')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $defaultProfile = null;
    
    /**
     * For `authType` **wpa-eap** or **wpa2-eap**. Possible values: **tls**, **peap**, **leap**, **fast**
     * 
     * @var ?string $eap
     */
	#[\JMS\Serializer\Annotation\SerializedName('eap')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eap = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('eapCaCert')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\File')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?File $eapCaCert = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('eapClientCert')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\File')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?File $eapClientCert = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('eapClientKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\File')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?File $eapClientKey = null;
    
    /**
     * For `eap` **tls**. The password of the RSA key file, if that file is password-protected.
     * 
     * @var ?string $eapClientPwd
     */
	#[\JMS\Serializer\Annotation\SerializedName('eapClientPwd')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eapClientPwd = null;
    
    /**
     * For `authType` **wpa-eap** or **wpa2-eap**. The EAP-PEAP username from your MS-CHAP account. Must match the configuration of your RADIUS server.
     * 
     * @var ?string $eapIdentity
     */
	#[\JMS\Serializer\Annotation\SerializedName('eapIdentity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eapIdentity = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('eapIntermediateCert')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\File')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?File $eapIntermediateCert = null;
    
    /**
     * For `eap` **peap**. The EAP-PEAP password from your MS-CHAP account. Must match the configuration of your RADIUS server.
     * 
     * @var ?string $eapPwd
     */
	#[\JMS\Serializer\Annotation\SerializedName('eapPwd')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eapPwd = null;
    
    /**
     * Indicates if the network doesn't broadcast its SSID. Mandatory for Android terminals, because these terminals rely on this setting to be able to connect to any network.
     * 
     * @var ?bool $hiddenSsid
     */
	#[\JMS\Serializer\Annotation\SerializedName('hiddenSsid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hiddenSsid = null;
    
    /**
     * Your name for the Wi-Fi profile.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * For `authType` **wpa-psk or **wpa2-psk**. The password to the wireless network.
     * 
     * @var ?string $psk
     */
	#[\JMS\Serializer\Annotation\SerializedName('psk')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $psk = null;
    
    /**
     * The name of the wireless network.
     * 
     * @var string $ssid
     */
	#[\JMS\Serializer\Annotation\SerializedName('ssid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ssid;
    
    /**
     * The type of encryption. Possible values: **auto**, **ccmp** (recommended), **tkip**
     * 
     * @var string $wsec
     */
	#[\JMS\Serializer\Annotation\SerializedName('wsec')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $wsec;
    
	public function __construct()
	{
		$this->authType = "";
		$this->autoWifi = null;
		$this->bssType = "";
		$this->channel = null;
		$this->defaultProfile = null;
		$this->eap = null;
		$this->eapCaCert = null;
		$this->eapClientCert = null;
		$this->eapClientKey = null;
		$this->eapClientPwd = null;
		$this->eapIdentity = null;
		$this->eapIntermediateCert = null;
		$this->eapPwd = null;
		$this->hiddenSsid = null;
		$this->name = null;
		$this->psk = null;
		$this->ssid = "";
		$this->wsec = "";
	}
}
