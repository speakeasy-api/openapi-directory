/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PreprintsCreatePreprintRelationshipsInput - URLs to other entities or entity collections that have a relationship to the preprint entity.
 */
public class PreprintsCreatePreprintRelationshipsInput {
    /**
     * A relationship to the bibliographic contributors that are listed as contributing to this preprint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bibliographic_contributors")
    public String bibliographicContributors;
    public PreprintsCreatePreprintRelationshipsInput withBibliographicContributors(String bibliographicContributors) {
        this.bibliographicContributors = bibliographicContributors;
        return this;
    }
    
    /**
     * A relationship to the license that has been applied to the preprint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("license")
    public String license;
    public PreprintsCreatePreprintRelationshipsInput withLicense(String license) {
        this.license = license;
        return this;
    }
    
    /**
     * A relationship to the node that was created for the preprint, or from which the preprint was created.
     */
    @JsonProperty("node")
    public String node;
    public PreprintsCreatePreprintRelationshipsInput withNode(String node) {
        this.node = node;
        return this;
    }
    
    /**
     * A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
     */
    @JsonProperty("primary_file")
    public String primaryFile;
    public PreprintsCreatePreprintRelationshipsInput withPrimaryFile(String primaryFile) {
        this.primaryFile = primaryFile;
        return this;
    }
    
    /**
     * A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
     */
    @JsonProperty("provider")
    public String provider;
    public PreprintsCreatePreprintRelationshipsInput withProvider(String provider) {
        this.provider = provider;
        return this;
    }
    
}
