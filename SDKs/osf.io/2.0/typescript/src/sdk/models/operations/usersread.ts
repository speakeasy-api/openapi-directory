/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class UsersReadRequest extends SpeakeasyBase {
  /**
   * The unique identifier of the user.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=user_id",
  })
  userId: string;
}

/**
 * The properties of the user entity.
 */
export class UsersReadUserAttributes extends SpeakeasyBase {
  /**
   * Whether or not the user is an active user.
   */
  @SpeakeasyMetadata()
  active: boolean;

  /**
   * The time at which the user registered their account, as an iso8601 formatted timestamp.
   */
  @SpeakeasyMetadata()
  dateRegistered: Date;

  /**
   * The family name of the user, used for bibliographic citations.
   */
  @SpeakeasyMetadata()
  familyName?: string;

  /**
   * The full name of the user, used for display on the OSF.
   */
  @SpeakeasyMetadata()
  fullName: string;

  /**
   * The given name of the user, used for bibliographic citations.
   */
  @SpeakeasyMetadata()
  givenName?: string;

  /**
   * The user's locale, e.g. 'en_US'.
   */
  @SpeakeasyMetadata()
  locale?: string;

  /**
   * The middle names of the user, used for bibliographic citations.
   */
  @SpeakeasyMetadata()
  middleNames?: string;

  /**
   * The suffix of the user, used for bibliographic citations.
   */
  @SpeakeasyMetadata()
  suffix?: string;

  /**
   * The user's timezone, e.g. 'Etc/UTC'.
   */
  @SpeakeasyMetadata()
  timezone?: string;
}

/**
 * URLs to alternative representations of the user entity.
 */
export class UsersReadUserLinks extends SpeakeasyBase {
  /**
   * A link to the user's profile page on the OSF.
   */
  @SpeakeasyMetadata()
  html?: string;

  /**
   * A link to the user's profile image.
   */
  @SpeakeasyMetadata()
  profileImage?: string;
}

/**
 * URLs to other entities or entity collections that have a relationship to the user entity.
 */
export class UsersReadUserRelationships extends SpeakeasyBase {
  /**
   * A link to the list of institutions the user is affiliated with.
   */
  @SpeakeasyMetadata()
  institutions?: string;

  /**
   * A link to the list of nodes the user is a contributor to.
   */
  @SpeakeasyMetadata()
  nodes?: string;
}

/**
 * OK
 */
export class UsersReadUser extends SpeakeasyBase {
  /**
   * The properties of the user entity.
   */
  @SpeakeasyMetadata()
  attributes: UsersReadUserAttributes;

  /**
   * The unique identifier of the user entity.
   */
  @SpeakeasyMetadata()
  id: string;

  /**
   * URLs to alternative representations of the user entity.
   */
  @SpeakeasyMetadata()
  links: UsersReadUserLinks;

  /**
   * URLs to other entities or entity collections that have a relationship to the user entity.
   */
  @SpeakeasyMetadata()
  relationships: UsersReadUserRelationships;

  /**
   * The type identifier of the user entity (`users`).
   */
  @SpeakeasyMetadata()
  type: string;
}

export class UsersReadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
