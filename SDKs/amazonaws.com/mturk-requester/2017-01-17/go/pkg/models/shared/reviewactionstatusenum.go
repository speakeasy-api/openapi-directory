// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReviewActionStatusEnum string

const (
	ReviewActionStatusEnumIntended  ReviewActionStatusEnum = "Intended"
	ReviewActionStatusEnumSucceeded ReviewActionStatusEnum = "Succeeded"
	ReviewActionStatusEnumFailed    ReviewActionStatusEnum = "Failed"
	ReviewActionStatusEnumCancelled ReviewActionStatusEnum = "Cancelled"
)

func (e ReviewActionStatusEnum) ToPointer() *ReviewActionStatusEnum {
	return &e
}

func (e *ReviewActionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Intended":
		fallthrough
	case "Succeeded":
		fallthrough
	case "Failed":
		fallthrough
	case "Cancelled":
		*e = ReviewActionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReviewActionStatusEnum: %v", v)
	}
}
