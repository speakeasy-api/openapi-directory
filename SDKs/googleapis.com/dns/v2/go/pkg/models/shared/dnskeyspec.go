// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DNSKeySpecAlgorithmEnum - String mnemonic specifying the DNSSEC algorithm of this key.
type DNSKeySpecAlgorithmEnum string

const (
	DNSKeySpecAlgorithmEnumRsasha1         DNSKeySpecAlgorithmEnum = "RSASHA1"
	DNSKeySpecAlgorithmEnumRsasha256       DNSKeySpecAlgorithmEnum = "RSASHA256"
	DNSKeySpecAlgorithmEnumRsasha512       DNSKeySpecAlgorithmEnum = "RSASHA512"
	DNSKeySpecAlgorithmEnumEcdsap256Sha256 DNSKeySpecAlgorithmEnum = "ECDSAP256SHA256"
	DNSKeySpecAlgorithmEnumEcdsap384Sha384 DNSKeySpecAlgorithmEnum = "ECDSAP384SHA384"
)

func (e DNSKeySpecAlgorithmEnum) ToPointer() *DNSKeySpecAlgorithmEnum {
	return &e
}

func (e *DNSKeySpecAlgorithmEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RSASHA1":
		fallthrough
	case "RSASHA256":
		fallthrough
	case "RSASHA512":
		fallthrough
	case "ECDSAP256SHA256":
		fallthrough
	case "ECDSAP384SHA384":
		*e = DNSKeySpecAlgorithmEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DNSKeySpecAlgorithmEnum: %v", v)
	}
}

// DNSKeySpecKeyTypeEnum - Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.
type DNSKeySpecKeyTypeEnum string

const (
	DNSKeySpecKeyTypeEnumKeySigning  DNSKeySpecKeyTypeEnum = "KEY_SIGNING"
	DNSKeySpecKeyTypeEnumZoneSigning DNSKeySpecKeyTypeEnum = "ZONE_SIGNING"
)

func (e DNSKeySpecKeyTypeEnum) ToPointer() *DNSKeySpecKeyTypeEnum {
	return &e
}

func (e *DNSKeySpecKeyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KEY_SIGNING":
		fallthrough
	case "ZONE_SIGNING":
		*e = DNSKeySpecKeyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DNSKeySpecKeyTypeEnum: %v", v)
	}
}

// DNSKeySpec - Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.
type DNSKeySpec struct {
	// String mnemonic specifying the DNSSEC algorithm of this key.
	Algorithm *DNSKeySpecAlgorithmEnum `json:"algorithm,omitempty"`
	// Length of the keys in bits.
	KeyLength *int64 `json:"keyLength,omitempty"`
	// Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.
	KeyType *DNSKeySpecKeyTypeEnum `json:"keyType,omitempty"`
	Kind    *string                `json:"kind,omitempty"`
}
