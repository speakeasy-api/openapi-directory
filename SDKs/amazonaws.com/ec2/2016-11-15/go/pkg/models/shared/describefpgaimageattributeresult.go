// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissionsGroupEnum - The name of the group.
type DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissionsGroupEnum string

const (
	DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissionsGroupEnumAll DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissionsGroupEnum = "all"
)

func (e *DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissionsGroupEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		*e = DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissionsGroupEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissionsGroupEnum: %s", s)
	}
}

// DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissions - Describes a load permission.
type DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissions struct {
	Group  *DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissionsGroupEnum
	UserID *string
}

// DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnum - The type of product code.
type DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnum string

const (
	DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnumDevpay      DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnum = "devpay"
	DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnumMarketplace DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnum = "marketplace"
)

func (e *DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "devpay":
		fallthrough
	case "marketplace":
		*e = DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnum: %s", s)
	}
}

// DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodes - Describes a product code.
type DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodes struct {
	ProductCodeID   *string
	ProductCodeType *DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodesProductCodeTypeEnum
}

// DescribeFpgaImageAttributeResultFpgaImageAttribute - Information about the attribute.
type DescribeFpgaImageAttributeResultFpgaImageAttribute struct {
	Description     *string
	FpgaImageID     *string
	LoadPermissions []DescribeFpgaImageAttributeResultFpgaImageAttributeLoadPermissions
	Name            *string
	ProductCodes    []DescribeFpgaImageAttributeResultFpgaImageAttributeProductCodes
}

// DescribeFpgaImageAttributeResult - Success
type DescribeFpgaImageAttributeResult struct {
	FpgaImageAttribute *DescribeFpgaImageAttributeResultFpgaImageAttribute
}
