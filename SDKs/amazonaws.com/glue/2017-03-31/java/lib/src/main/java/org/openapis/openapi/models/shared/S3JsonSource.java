/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * S3JsonSource - Specifies a JSON data store stored in Amazon S3.
 */
public class S3JsonSource {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalOptions")
    public S3DirectSourceAdditionalOptions additionalOptions;

    public S3JsonSource withAdditionalOptions(S3DirectSourceAdditionalOptions additionalOptions) {
        this.additionalOptions = additionalOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CompressionType")
    public CompressionTypeEnum compressionType;

    public S3JsonSource withCompressionType(CompressionTypeEnum compressionType) {
        this.compressionType = compressionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Exclusions")
    public String[] exclusions;

    public S3JsonSource withExclusions(String[] exclusions) {
        this.exclusions = exclusions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GroupFiles")
    public String groupFiles;

    public S3JsonSource withGroupFiles(String groupFiles) {
        this.groupFiles = groupFiles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GroupSize")
    public String groupSize;

    public S3JsonSource withGroupSize(String groupSize) {
        this.groupSize = groupSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JsonPath")
    public String jsonPath;

    public S3JsonSource withJsonPath(String jsonPath) {
        this.jsonPath = jsonPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxBand")
    public Long maxBand;

    public S3JsonSource withMaxBand(Long maxBand) {
        this.maxBand = maxBand;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxFilesInBand")
    public Long maxFilesInBand;

    public S3JsonSource withMaxFilesInBand(Long maxFilesInBand) {
        this.maxFilesInBand = maxFilesInBand;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Multiline")
    public Boolean multiline;

    public S3JsonSource withMultiline(Boolean multiline) {
        this.multiline = multiline;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;

    public S3JsonSource withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputSchemas")
    public GlueSchema[] outputSchemas;

    public S3JsonSource withOutputSchemas(GlueSchema[] outputSchemas) {
        this.outputSchemas = outputSchemas;
        return this;
    }
    
    @JsonProperty("Paths")
    public String[] paths;

    public S3JsonSource withPaths(String[] paths) {
        this.paths = paths;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Recurse")
    public Boolean recurse;

    public S3JsonSource withRecurse(Boolean recurse) {
        this.recurse = recurse;
        return this;
    }
    
    public S3JsonSource(@JsonProperty("Name") String name, @JsonProperty("Paths") String[] paths) {
        this.name = name;
        this.paths = paths;
  }
}
