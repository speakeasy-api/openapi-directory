"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudmlv1_measurement as shared_googlecloudmlv1_measurement
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMlV1CompleteTrialRequest:
    r"""The request message for the CompleteTrial service method."""
    
    final_measurement: Optional[shared_googlecloudmlv1_measurement.GoogleCloudMlV1Measurement] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finalMeasurement'), 'exclude': lambda f: f is None }})
    r"""A message representing a measurement."""  
    infeasible_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infeasibleReason'), 'exclude': lambda f: f is None }})
    r"""Optional. A human readable reason why the trial was infeasible. This should only be provided if `trial_infeasible` is true."""  
    trial_infeasible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trialInfeasible'), 'exclude': lambda f: f is None }})
    r"""Optional. True if the trial cannot be run with the given Parameter, and final_measurement will be ignored."""  
    