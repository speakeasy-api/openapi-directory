/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Edge } from "./edge";
import { HistogramEntry } from "./histogramentry";
import { ServiceStatistics } from "./servicestatistics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about an application that processed requests, users that made requests, or downstream services, resources, and applications that an application used.
 */
export class Service extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId?: string;

  @SpeakeasyMetadata({ elemType: HistogramEntry })
  @Expose({ name: "DurationHistogram" })
  @Type(() => HistogramEntry)
  durationHistogram?: HistogramEntry[];

  @SpeakeasyMetadata({ elemType: Edge })
  @Expose({ name: "Edges" })
  @Type(() => Edge)
  edges?: Edge[];

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Names" })
  names?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ReferenceId" })
  referenceId?: number;

  @SpeakeasyMetadata({ elemType: HistogramEntry })
  @Expose({ name: "ResponseTimeHistogram" })
  @Type(() => HistogramEntry)
  responseTimeHistogram?: HistogramEntry[];

  @SpeakeasyMetadata()
  @Expose({ name: "Root" })
  root?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SummaryStatistics" })
  @Type(() => ServiceStatistics)
  summaryStatistics?: ServiceStatistics;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}
