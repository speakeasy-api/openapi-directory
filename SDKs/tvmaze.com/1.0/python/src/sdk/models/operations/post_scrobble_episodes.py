"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import bulkresponse as shared_bulkresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostScrobbleEpisodesRequestBody:
    
    episode_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('episode_id'), 'exclude': lambda f: f is None }})
    r"""The TVmaze episode ID"""  
    marked_at: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marked_at'), 'exclude': lambda f: f is None }})
    r"""Epoch timestamp for when the user watched the episode, or 0 for unknown."""  
    type: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""0 for watched, 1 for acquired, 2 for skipped"""  
    

@dataclasses.dataclass
class PostScrobbleEpisodesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    bulk_response: Optional[list[shared_bulkresponse.BulkResponse]] = dataclasses.field(default=None)
    r"""All episodes were succesfully marked"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    