// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeFpgaImageAttributeActionEnum
type POSTDescribeFpgaImageAttributeActionEnum string

const (
	POSTDescribeFpgaImageAttributeActionEnumDescribeFpgaImageAttribute POSTDescribeFpgaImageAttributeActionEnum = "DescribeFpgaImageAttribute"
)

func (e *POSTDescribeFpgaImageAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeFpgaImageAttribute":
		*e = POSTDescribeFpgaImageAttributeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeFpgaImageAttributeActionEnum: %s", s)
	}
}

// POSTDescribeFpgaImageAttributeVersionEnum
type POSTDescribeFpgaImageAttributeVersionEnum string

const (
	POSTDescribeFpgaImageAttributeVersionEnumTwoThousandAndSixteen1115 POSTDescribeFpgaImageAttributeVersionEnum = "2016-11-15"
)

func (e *POSTDescribeFpgaImageAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDescribeFpgaImageAttributeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeFpgaImageAttributeVersionEnum: %s", s)
	}
}

type POSTDescribeFpgaImageAttributeQueryParams struct {
	Action  POSTDescribeFpgaImageAttributeActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDescribeFpgaImageAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeFpgaImageAttributeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeFpgaImageAttributeRequest struct {
	QueryParams POSTDescribeFpgaImageAttributeQueryParams
	Headers     POSTDescribeFpgaImageAttributeHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeFpgaImageAttributeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
