"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HTTPHeaderMatch:
    r"""Specification of HTTP header match attributes."""
    
    header_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headerName'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the HTTP header to match. For matching against the HTTP request's authority, use a headerMatch with the header name \\":authority\\". For matching a request's method, use the headerName \\":method\\"."""  
    regex_match: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regexMatch'), 'exclude': lambda f: f is None }})
    r"""Required. The value of the header must match the regular expression specified in regexMatch. For regular expression grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript For matching against a port specified in the HTTP request, use a headerMatch with headerName set to Host and a regular expression that satisfies the RFC2616 Host header's port specifier."""  
    