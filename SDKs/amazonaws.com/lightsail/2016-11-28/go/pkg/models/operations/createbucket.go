// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateBucketXAmzTargetEnum
type CreateBucketXAmzTargetEnum string

const (
	CreateBucketXAmzTargetEnumLightsail20161128CreateBucket CreateBucketXAmzTargetEnum = "Lightsail_20161128.CreateBucket"
)

func (e *CreateBucketXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Lightsail_20161128.CreateBucket":
		*e = CreateBucketXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBucketXAmzTargetEnum: %s", s)
	}
}

type CreateBucketHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateBucketXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateBucketRequest struct {
	Headers CreateBucketHeaders
	Request shared.CreateBucketRequest `request:"mediaType=application/json"`
}

type CreateBucketResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateBucketResult *shared.CreateBucketResult
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ServiceException
	ServiceException interface{}
	// UnauthenticatedException
	UnauthenticatedException interface{}
}
