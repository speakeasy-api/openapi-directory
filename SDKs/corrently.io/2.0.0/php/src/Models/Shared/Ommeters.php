<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Ommeters
{
    /**
     * Factor imposed on metered current by a transducer
     * 
     * @var ?int $currentScalingFactor
     */
	#[\JMS\Serializer\Annotation\SerializedName('currentScalingFactor')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $currentScalingFactor = null;
    
    /**
     * Metering load profile type associated with the meter
     * 
     * @var ?string $loadProfileType
     */
	#[\JMS\Serializer\Annotation\SerializedName('loadProfileType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $loadProfileType = null;
    
    /**
     * Basic address information for geo coding
     * 
     * @var ?string $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
    /**
     * DLMS manufacturerId
     * 
     * @var ?string $manufacturerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('manufacturerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $manufacturerId = null;
    
    /**
     * Physical quantity being measured by the meter
     * 
     * @var ?string $measurementType
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurementType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $measurementType = null;
    
    /**
     * Statistical metadata for this household
     * 
     * @var ?string $meta
     */
	#[\JMS\Serializer\Annotation\SerializedName('meta')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $meta = null;
    
    /**
     * identifier to be used in other methods like readings or activities.
     * 
     * @var ?string $meterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('meterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $meterId = null;
    
    /**
     * Factor imposed on metered current AND voltage by a transducer
     * 
     * @var ?int $scalingFactor
     */
	#[\JMS\Serializer\Annotation\SerializedName('scalingFactor')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $scalingFactor = null;
    
    /**
     * Device type of the meter
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Factor imposed on metered voltage by a transducer
     * 
     * @var ?int $voltageScalingFactor
     */
	#[\JMS\Serializer\Annotation\SerializedName('voltageScalingFactor')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $voltageScalingFactor = null;
    
	public function __construct()
	{
		$this->currentScalingFactor = null;
		$this->loadProfileType = null;
		$this->location = null;
		$this->manufacturerId = null;
		$this->measurementType = null;
		$this->meta = null;
		$this->meterId = null;
		$this->scalingFactor = null;
		$this->type = null;
		$this->voltageScalingFactor = null;
	}
}
