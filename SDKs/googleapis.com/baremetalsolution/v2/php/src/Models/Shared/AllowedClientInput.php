<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AllowedClientInput - Represents an 'access point' for the share.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AllowedClientInput
{
    /**
     * Allow dev flag. Which controls whether to allow creation of devices.
     * 
     * @var ?bool $allowDev
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowDev')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowDev = null;
    
    /**
     * Allow the setuid flag.
     * 
     * @var ?bool $allowSuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowSuid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowSuid = null;
    
    /**
     * The subnet of IP addresses permitted to access the share.
     * 
     * @var ?string $allowedClientsCidr
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowedClientsCidr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $allowedClientsCidr = null;
    
    /**
     * Mount permissions.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AllowedClientMountPermissionsEnum $mountPermissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountPermissions')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AllowedClientMountPermissionsEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AllowedClientMountPermissionsEnum $mountPermissions = null;
    
    /**
     * The network the access point sits on.
     * 
     * @var ?string $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $network = null;
    
    /**
     * Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
     * 
     * @var ?bool $noRootSquash
     */
	#[\JMS\Serializer\Annotation\SerializedName('noRootSquash')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $noRootSquash = null;
    
	public function __construct()
	{
		$this->allowDev = null;
		$this->allowSuid = null;
		$this->allowedClientsCidr = null;
		$this->mountPermissions = null;
		$this->network = null;
		$this->noRootSquash = null;
	}
}
