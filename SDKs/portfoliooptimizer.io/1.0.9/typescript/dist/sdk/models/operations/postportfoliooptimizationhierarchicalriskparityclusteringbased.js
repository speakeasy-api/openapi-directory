"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringOrderingEnum = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The allocation method to use across clusters
 */
var PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum;
(function (PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum) {
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum["EqualWeighting"] = "equalWeighting";
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum["InverseVolatility"] = "inverseVolatility";
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum["InverseVariance"] = "inverseVariance";
})(PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum || (exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyAcrossClusterAllocationMethodEnum = {}));
/**
 * The hierarchical clustering method to use
 */
var PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum;
(function (PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum) {
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum["SingleLinkage"] = "singleLinkage";
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum["AverageLinkage"] = "averageLinkage";
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum["CompleteLinkage"] = "completeLinkage";
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum["WardLinkage"] = "wardLinkage";
})(PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum || (exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringMethodEnum = {}));
/**
 * The order to impose on the hierarchical clustering tree leaves
 */
var PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringOrderingEnum;
(function (PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringOrderingEnum) {
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringOrderingEnum["RHclust"] = "r-hclust";
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringOrderingEnum["Optimal"] = "optimal";
})(PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringOrderingEnum = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringOrderingEnum || (exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyClusteringOrderingEnum = {}));
var PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints = /** @class */ (function (_super) {
    __extends(PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints, _super);
    function PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maximumAssetsWeights" }),
        __metadata("design:type", Array)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints.prototype, "maximumAssetsWeights", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maximumPortfolioExposure" }),
        __metadata("design:type", Number)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints.prototype, "maximumPortfolioExposure", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "minimumAssetsWeights" }),
        __metadata("design:type", Array)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints.prototype, "minimumAssetsWeights", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "minimumPortfolioExposure" }),
        __metadata("design:type", Number)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints.prototype, "minimumPortfolioExposure", void 0);
    return PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints;
}(utils_1.SpeakeasyBase));
exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints = PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints;
/**
 * The allocation method to use within clusters
 */
var PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum;
(function (PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum) {
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum["EqualWeighting"] = "equalWeighting";
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum["InverseVolatility"] = "inverseVolatility";
    PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum["InverseVariance"] = "inverseVariance";
})(PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum = exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum || (exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyWithinClusterAllocationMethodEnum = {}));
var PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody = /** @class */ (function (_super) {
    __extends(PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody, _super);
    function PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "acrossClusterAllocationMethod" }),
        __metadata("design:type", String)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody.prototype, "acrossClusterAllocationMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assets" }),
        __metadata("design:type", Number)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody.prototype, "assets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assetsCovarianceMatrix" }),
        __metadata("design:type", Array)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody.prototype, "assetsCovarianceMatrix", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clusteringMethod" }),
        __metadata("design:type", String)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody.prototype, "clusteringMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clusteringOrdering" }),
        __metadata("design:type", String)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody.prototype, "clusteringOrdering", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clusters" }),
        __metadata("design:type", Number)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody.prototype, "clusters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "constraints" }),
        (0, class_transformer_1.Type)(function () {
            return PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints;
        }),
        __metadata("design:type", PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBodyConstraints)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody.prototype, "constraints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "withinClusterAllocationMethod" }),
        __metadata("design:type", String)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody.prototype, "withinClusterAllocationMethod", void 0);
    return PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody;
}(utils_1.SpeakeasyBase));
exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody = PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedRequestBody;
/**
 * OK
 */
var PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON = /** @class */ (function (_super) {
    __extends(PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON, _super);
    function PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assetsWeights" }),
        __metadata("design:type", Array)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON.prototype, "assetsWeights", void 0);
    return PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON = PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON;
var PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse = /** @class */ (function (_super) {
    __extends(PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse, _super);
    function PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", PostPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSON)
    ], PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse.prototype, "postPortfolioOptimizationHierarchicalRiskParityClusteringBased200ApplicationJSONObject", void 0);
    return PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse;
}(utils_1.SpeakeasyBase));
exports.PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse = PostPortfolioOptimizationHierarchicalRiskParityClusteringBasedResponse;
