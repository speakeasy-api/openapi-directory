/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnumValue } from "./enumvalue";
import { Option } from "./option";
import { SourceContext } from "./sourcecontext";
import { Expose, Type } from "class-transformer";

/**
 * The source syntax.
 */
export enum EnumSyntaxEnum {
  SyntaxProto2 = "SYNTAX_PROTO2",
  SyntaxProto3 = "SYNTAX_PROTO3",
  SyntaxEditions = "SYNTAX_EDITIONS",
}

/**
 * Enum type definition.
 */
export class Enum extends SpeakeasyBase {
  /**
   * The source edition string, only valid when syntax is SYNTAX_EDITIONS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "edition" })
  edition?: string;

  /**
   * Enum value definitions.
   */
  @SpeakeasyMetadata({ elemType: EnumValue })
  @Expose({ name: "enumvalue" })
  @Type(() => EnumValue)
  enumvalue?: EnumValue[];

  /**
   * Enum type name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Protocol buffer options.
   */
  @SpeakeasyMetadata({ elemType: Option })
  @Expose({ name: "options" })
  @Type(() => Option)
  options?: Option[];

  /**
   * `SourceContext` represents information about the source of a protobuf element, like the file in which it is defined.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceContext" })
  @Type(() => SourceContext)
  sourceContext?: SourceContext;

  /**
   * The source syntax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syntax" })
  syntax?: EnumSyntaxEnum;
}
