/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2ContentItem } from "./googleprivacydlpv2contentitem";
import { GooglePrivacyDlpV2DeidentifyConfig } from "./googleprivacydlpv2deidentifyconfig";
import { GooglePrivacyDlpV2InspectConfig } from "./googleprivacydlpv2inspectconfig";
import { Expose, Type } from "class-transformer";

/**
 * Request to de-identify a ContentItem.
 */
export class GooglePrivacyDlpV2DeidentifyContentRequest extends SpeakeasyBase {
  /**
   * The configuration that controls how the data will change.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deidentifyConfig" })
  @Type(() => GooglePrivacyDlpV2DeidentifyConfig)
  deidentifyConfig?: GooglePrivacyDlpV2DeidentifyConfig;

  /**
   * Template to use. Any configuration directly specified in deidentify_config will override those set in the template. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deidentifyTemplateName" })
  deidentifyTemplateName?: string;

  /**
   * Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inspectConfig" })
  @Type(() => GooglePrivacyDlpV2InspectConfig)
  inspectConfig?: GooglePrivacyDlpV2InspectConfig;

  /**
   * Template to use. Any configuration directly specified in inspect_config will override those set in the template. Singular fields that are set in this request will replace their corresponding fields in the template. Repeated fields are appended. Singular sub-messages and groups are recursively merged.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inspectTemplateName" })
  inspectTemplateName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "item" })
  @Type(() => GooglePrivacyDlpV2ContentItem)
  item?: GooglePrivacyDlpV2ContentItem;

  /**
   * Deprecated. This field has no effect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationId" })
  locationId?: string;
}
