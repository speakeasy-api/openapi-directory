<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SimQuery
{
    /**
     * $ids
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Node> $ids
     */
	#[\JMS\Serializer\Annotation\SerializedName('ids')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Node>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ids = null;
    
    /**
     * $negatedIds
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Node> $negatedIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('negated_ids')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Node>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $negatedIds = null;
    
    /**
     * reference individual or class (eg gene, disease)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TypedNode $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TypedNode')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TypedNode $reference = null;
    
    /**
     * $targetIds
     * 
     * @var ?array<array<\OpenAPI\OpenAPI\Models\Shared\Node>> $targetIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_ids')]
    #[\JMS\Serializer\Annotation\Type('array<array<OpenAPI\OpenAPI\Models\Shared\Node>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $targetIds = null;
    
    /**
     * list of unresolved ids
     * 
     * @var ?array<string> $unresolvedIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('unresolved_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $unresolvedIds = null;
    
	public function __construct()
	{
		$this->ids = null;
		$this->negatedIds = null;
		$this->reference = null;
		$this->targetIds = null;
		$this->unresolvedIds = null;
	}
}
