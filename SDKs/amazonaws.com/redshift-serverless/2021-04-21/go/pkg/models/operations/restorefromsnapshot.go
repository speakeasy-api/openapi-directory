// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RestoreFromSnapshotXAmzTargetEnum
type RestoreFromSnapshotXAmzTargetEnum string

const (
	RestoreFromSnapshotXAmzTargetEnumRedshiftServerlessRestoreFromSnapshot RestoreFromSnapshotXAmzTargetEnum = "RedshiftServerless.RestoreFromSnapshot"
)

func (e RestoreFromSnapshotXAmzTargetEnum) ToPointer() *RestoreFromSnapshotXAmzTargetEnum {
	return &e
}

func (e *RestoreFromSnapshotXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RedshiftServerless.RestoreFromSnapshot":
		*e = RestoreFromSnapshotXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RestoreFromSnapshotXAmzTargetEnum: %v", v)
	}
}

type RestoreFromSnapshotRequest struct {
	RestoreFromSnapshotRequest shared.RestoreFromSnapshotRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 RestoreFromSnapshotXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RestoreFromSnapshotResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	RestoreFromSnapshotResponse *shared.RestoreFromSnapshotResponse
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ValidationException
	ValidationException interface{}
}
