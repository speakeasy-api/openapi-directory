// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomFieldRequestCustomLabelPositionEnum - Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.
type CustomFieldRequestCustomLabelPositionEnum string

const (
	CustomFieldRequestCustomLabelPositionEnumPrefix CustomFieldRequestCustomLabelPositionEnum = "prefix"
	CustomFieldRequestCustomLabelPositionEnumSuffix CustomFieldRequestCustomLabelPositionEnum = "suffix"
)

func (e *CustomFieldRequestCustomLabelPositionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "prefix":
		fallthrough
	case "suffix":
		*e = CustomFieldRequestCustomLabelPositionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomFieldRequestCustomLabelPositionEnum: %s", s)
	}
}

// CustomFieldRequestFormatEnum - The format of this custom field.
type CustomFieldRequestFormatEnum string

const (
	CustomFieldRequestFormatEnumCurrency   CustomFieldRequestFormatEnum = "currency"
	CustomFieldRequestFormatEnumIdentifier CustomFieldRequestFormatEnum = "identifier"
	CustomFieldRequestFormatEnumPercentage CustomFieldRequestFormatEnum = "percentage"
	CustomFieldRequestFormatEnumCustom     CustomFieldRequestFormatEnum = "custom"
	CustomFieldRequestFormatEnumNone       CustomFieldRequestFormatEnum = "none"
)

func (e *CustomFieldRequestFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "currency":
		fallthrough
	case "identifier":
		fallthrough
	case "percentage":
		fallthrough
	case "custom":
		fallthrough
	case "none":
		*e = CustomFieldRequestFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomFieldRequestFormatEnum: %s", s)
	}
}

// CustomFieldRequestResourceSubtypeEnum - The type of the custom field. Must be one of the given values.
type CustomFieldRequestResourceSubtypeEnum string

const (
	CustomFieldRequestResourceSubtypeEnumText      CustomFieldRequestResourceSubtypeEnum = "text"
	CustomFieldRequestResourceSubtypeEnumEnum      CustomFieldRequestResourceSubtypeEnum = "enum"
	CustomFieldRequestResourceSubtypeEnumMultiEnum CustomFieldRequestResourceSubtypeEnum = "multi_enum"
	CustomFieldRequestResourceSubtypeEnumNumber    CustomFieldRequestResourceSubtypeEnum = "number"
)

func (e *CustomFieldRequestResourceSubtypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "text":
		fallthrough
	case "enum":
		fallthrough
	case "multi_enum":
		fallthrough
	case "number":
		*e = CustomFieldRequestResourceSubtypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomFieldRequestResourceSubtypeEnum: %s", s)
	}
}

// CustomFieldRequestInput - Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [Custom Fields](/docs/asana-custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.
//
// Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.
type CustomFieldRequestInput struct {
	// ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.
	CurrencyCode *string `json:"currency_code,omitempty"`
	// This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.
	CustomLabel *string `json:"custom_label,omitempty"`
	// Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.
	CustomLabelPosition *CustomFieldRequestCustomLabelPositionEnum `json:"custom_label_position,omitempty"`
	// [Opt In](/docs/input-output-options). The description of the custom field.
	Description *string `json:"description,omitempty"`
	// *Conditional*. Determines if the custom field is enabled or not.
	Enabled *bool `json:"enabled,omitempty"`
	// *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).
	EnumOptions []EnumOptionInput `json:"enum_options,omitempty"`
	// The format of this custom field.
	Format *CustomFieldRequestFormatEnum `json:"format,omitempty"`
	// *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.
	HasNotificationsEnabled *bool `json:"has_notifications_enabled,omitempty"`
	// The name of the custom field.
	Name *string `json:"name,omitempty"`
	// *Conditional*. This number is the value of a number custom field.
	NumberValue *float64 `json:"number_value,omitempty"`
	// Only relevant for custom fields of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.
	// For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.
	// The identifier format will always have a precision of 0.
	Precision *int64 `json:"precision,omitempty"`
	// The type of the custom field. Must be one of the given values.
	//
	ResourceSubtype *CustomFieldRequestResourceSubtypeEnum `json:"resource_subtype,omitempty"`
	// *Conditional*. This string is the value of a text custom field.
	TextValue *string `json:"text_value,omitempty"`
	// *Create-Only* The workspace to create a custom field in.
	Workspace string `json:"workspace"`
}
