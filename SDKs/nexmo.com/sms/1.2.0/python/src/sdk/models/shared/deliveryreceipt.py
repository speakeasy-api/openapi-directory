"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeliveryReceipt:
    
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api-key'), 'exclude': lambda f: f is None }})
    r"""The API key that sent the SMS. This is useful when multiple accounts are sending webhooks to the same endpoint."""  
    client_ref: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client-ref'), 'exclude': lambda f: f is None }})
    r"""If the `client-ref` is set when the SMS is sent, it will be included in the delivery receipt"""  
    err_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('err-code'), 'exclude': lambda f: f is None }})
    r"""The status of the request. Will be a non `0` value if there has been an error, or if the status is unknown. See the [Delivery Receipt documentation](/messaging/sms/guides/delivery-receipts#dlr-error-codes) for more details"""  
    message_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message-timestamp'), 'exclude': lambda f: f is None }})
    r"""The time when Vonage started to push this Delivery Receipt to your webhook endpoint."""  
    message_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messageId'), 'exclude': lambda f: f is None }})
    r"""The Vonage ID for this message."""  
    msisdn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('msisdn'), 'exclude': lambda f: f is None }})
    r"""The number the message was sent to. Numbers are specified in E.164 format."""  
    network_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network-code'), 'exclude': lambda f: f is None }})
    r"""The Mobile Country Code Mobile Network Code (MCCMNC) of the carrier this phone number is registered with."""  
    nonce: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nonce'), 'exclude': lambda f: f is None }})
    r"""A random string to be used when calculating the signature. _Only included if you have signatures enabled_"""  
    price: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})
    r"""The cost of the message"""  
    scts: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scts'), 'exclude': lambda f: f is None }})
    r"""When the DLR was received from the carrier in the following format `YYMMDDHHMM`. For example, `2001011400` is at `2020-01-01 14:00`"""  
    sig: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sig'), 'exclude': lambda f: f is None }})
    r"""The signature to enable verification of the source of this webhook. Please see the [developer documentation for validating signatures](/concepts/guides/signing-messages) for more information, or use one of our published SDKs. _Only included if you have signatures enabled_"""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""A code that explains where the message is in the delivery process."""  
    timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'exclude': lambda f: f is None }})
    r"""A timestamp in Unix (seconds since the epoch) format. _Only included if you have signatures enabled_"""  
    to: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to'), 'exclude': lambda f: f is None }})
    r"""The SenderID you set in `from` in your request."""  
    