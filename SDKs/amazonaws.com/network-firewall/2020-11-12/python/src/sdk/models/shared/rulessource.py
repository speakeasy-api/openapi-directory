"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rulessourcelist as shared_rulessourcelist
from ..shared import statefulrule as shared_statefulrule
from ..shared import statelessrulesandcustomactions as shared_statelessrulesandcustomactions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RulesSource:
    r"""The stateless or stateful rules definitions for use in a single rule group. Each rule group requires a single <code>RulesSource</code>. You can use an instance of this for either stateless rules or stateful rules."""
    
    rules_source_list: Optional[shared_rulessourcelist.RulesSourceList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RulesSourceList'), 'exclude': lambda f: f is None }})  
    rules_string: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RulesString'), 'exclude': lambda f: f is None }})  
    stateful_rules: Optional[list[shared_statefulrule.StatefulRule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatefulRules'), 'exclude': lambda f: f is None }})  
    stateless_rules_and_custom_actions: Optional[shared_statelessrulesandcustomactions.StatelessRulesAndCustomActions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatelessRulesAndCustomActions'), 'exclude': lambda f: f is None }})  
    