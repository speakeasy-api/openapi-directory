"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class ExportOrderReport:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def status_completed(self, request: operations.StatusCompletedRequest) -> operations.StatusCompletedResponse:
        r"""Export order report with status 'Completed'
        Retrieves a list of all order reports that are `completed`, by `accountName`. Be aware that the scope of the export log is per user. 
        
        > This endpoint is for VTEX internal use, and it is not meant to be used by clients.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/api/oms/pvt/admin/reports/completed'
        
        headers = utils.get_headers(request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.StatusCompletedResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[list[shared.ExportCompletedResponse]])
                res.export_completed_responses = out

        return res

    def status_in_progress(self, request: operations.StatusInProgressRequest) -> operations.StatusInProgressResponse:
        r"""Export order report with status 'In Progress'
        Retrieves a list of all order reports that are `in progress`, by `accountName`. Be aware that the scope of the export log is per user. 
        
        > This endpoint is for VTEX internal use, and it is not meant to be used by clients.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/api/oms/pvt/admin/reports/inprogress'
        
        headers = utils.get_headers(request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.StatusInProgressResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[list[shared.ExportInProgressResponse]])
                res.export_in_progress_responses = out

        return res

    