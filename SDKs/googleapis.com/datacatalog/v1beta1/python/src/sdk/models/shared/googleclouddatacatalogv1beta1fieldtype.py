"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatacatalogv1beta1fieldtypeenumtype as shared_googleclouddatacatalogv1beta1fieldtypeenumtype
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum(str, Enum):
    r"""Represents primitive types - string, bool etc."""
    PRIMITIVE_TYPE_UNSPECIFIED = 'PRIMITIVE_TYPE_UNSPECIFIED'
    DOUBLE = 'DOUBLE'
    STRING = 'STRING'
    BOOL = 'BOOL'
    TIMESTAMP = 'TIMESTAMP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1beta1FieldType:
    
    enum_type: Optional[shared_googleclouddatacatalogv1beta1fieldtypeenumtype.GoogleCloudDatacatalogV1beta1FieldTypeEnumType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enumType'), 'exclude': lambda f: f is None }})  
    primitive_type: Optional[GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primitiveType'), 'exclude': lambda f: f is None }})
    r"""Represents primitive types - string, bool etc."""  
    