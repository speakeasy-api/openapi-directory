"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderItemAPIModel:
    
    cost: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Cost'), 'exclude': lambda f: f is None }})
    r"""Work item cost"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""General description"""  
    product_item_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProductItemId'), 'exclude': lambda f: f is None }})
    r"""Foreign key product item id"""  
    quantity: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Quantity'), 'exclude': lambda f: f is None }})
    r"""Work item quantity"""  
    reference_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReferenceId'), 'exclude': lambda f: f is None }})
    r"""Order SKU"""  
    sub_total_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubTotalAmount'), 'exclude': lambda f: f is None }})
    r"""Subtotal amount of product"""  
    tax_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxAmount'), 'exclude': lambda f: f is None }})
    r"""Tax amount"""  
    tax_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxId'), 'exclude': lambda f: f is None }})
    r"""Foreign key Tax id"""  
    tax_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxPercentage'), 'exclude': lambda f: f is None }})
    r"""Tax percentage"""  
    total_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalAmount'), 'exclude': lambda f: f is None }})
    r"""Total amount of product"""  
    work_type_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkTypeId'), 'exclude': lambda f: f is None }})
    r"""Foreign key work type id"""  
    