// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateFileCacheXAmzTargetEnum
type CreateFileCacheXAmzTargetEnum string

const (
	CreateFileCacheXAmzTargetEnumAwsSimbaAPIServiceV20180301CreateFileCache CreateFileCacheXAmzTargetEnum = "AWSSimbaAPIService_v20180301.CreateFileCache"
)

func (e *CreateFileCacheXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSSimbaAPIService_v20180301.CreateFileCache":
		*e = CreateFileCacheXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFileCacheXAmzTargetEnum: %s", s)
	}
}

type CreateFileCacheRequest struct {
	CreateFileCacheRequest shared.CreateFileCacheRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             CreateFileCacheXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateFileCacheResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// Success
	CreateFileCacheResponse *shared.CreateFileCacheResponse
	// IncompatibleParameterError
	IncompatibleParameterError interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidNetworkSettings
	InvalidNetworkSettings interface{}
	// InvalidPerUnitStorageThroughput
	InvalidPerUnitStorageThroughput interface{}
	// MissingFileCacheConfiguration
	MissingFileCacheConfiguration interface{}
	// ServiceLimitExceeded
	ServiceLimitExceeded interface{}
	StatusCode           int
	RawResponse          *http.Response
}
