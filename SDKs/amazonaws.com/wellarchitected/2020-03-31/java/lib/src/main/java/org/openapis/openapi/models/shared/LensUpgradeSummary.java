/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LensUpgradeSummary - Lens upgrade summary return object.
 */
public class LensUpgradeSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrentLensVersion")
    public String currentLensVersion;

    public LensUpgradeSummary withCurrentLensVersion(String currentLensVersion) {
        this.currentLensVersion = currentLensVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatestLensVersion")
    public String latestLensVersion;

    public LensUpgradeSummary withLatestLensVersion(String latestLensVersion) {
        this.latestLensVersion = latestLensVersion;
        return this;
    }
    
    /**
     * &lt;p&gt;The alias of the lens.&lt;/p&gt; &lt;p&gt;For Amazon Web Services official lenses, this is either the lens alias, such as &lt;code&gt;serverless&lt;/code&gt;, or the lens ARN, such as &lt;code&gt;arn:aws:wellarchitected:us-east-1::lens/serverless&lt;/code&gt;. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.&lt;/p&gt; &lt;p&gt;For custom lenses, this is the lens ARN, such as &lt;code&gt;arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;Each lens is identified by its &lt;a&gt;LensSummary$LensAlias&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensAlias")
    public String lensAlias;

    public LensUpgradeSummary withLensAlias(String lensAlias) {
        this.lensAlias = lensAlias;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensArn")
    public String lensArn;

    public LensUpgradeSummary withLensArn(String lensArn) {
        this.lensArn = lensArn;
        return this;
    }
    
    /**
     * The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkloadId")
    public String workloadId;

    public LensUpgradeSummary withWorkloadId(String workloadId) {
        this.workloadId = workloadId;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the workload.&lt;/p&gt; &lt;p&gt;The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkloadName")
    public String workloadName;

    public LensUpgradeSummary withWorkloadName(String workloadName) {
        this.workloadName = workloadName;
        return this;
    }
    
    public LensUpgradeSummary(){}
}
