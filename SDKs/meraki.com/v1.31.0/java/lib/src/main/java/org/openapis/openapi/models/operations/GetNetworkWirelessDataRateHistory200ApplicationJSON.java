/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetNetworkWirelessDataRateHistory200ApplicationJSON {
    /**
     * Average data rate in kilobytes-per-second
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averageKbps")
    public Long averageKbps;
    public GetNetworkWirelessDataRateHistory200ApplicationJSON withAverageKbps(Long averageKbps) {
        this.averageKbps = averageKbps;
        return this;
    }
    
    /**
     * Download rate in kilobytes-per-second
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("downloadKbps")
    public Long downloadKbps;
    public GetNetworkWirelessDataRateHistory200ApplicationJSON withDownloadKbps(Long downloadKbps) {
        this.downloadKbps = downloadKbps;
        return this;
    }
    
    /**
     * The end time of the query range
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTs")
    public OffsetDateTime endTs;
    public GetNetworkWirelessDataRateHistory200ApplicationJSON withEndTs(OffsetDateTime endTs) {
        this.endTs = endTs;
        return this;
    }
    
    /**
     * The start time of the query range
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTs")
    public OffsetDateTime startTs;
    public GetNetworkWirelessDataRateHistory200ApplicationJSON withStartTs(OffsetDateTime startTs) {
        this.startTs = startTs;
        return this;
    }
    
    /**
     * Upload rate in kilobytes-per-second
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uploadKbps")
    public Long uploadKbps;
    public GetNetworkWirelessDataRateHistory200ApplicationJSON withUploadKbps(Long uploadKbps) {
        this.uploadKbps = uploadKbps;
        return this;
    }
    
}
