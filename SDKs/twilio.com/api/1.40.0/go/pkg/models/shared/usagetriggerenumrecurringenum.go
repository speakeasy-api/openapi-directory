// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UsageTriggerEnumRecurringEnum - The frequency of recurring UsageTriggers to read. Can be: `daily`, `monthly`, or `yearly` to read recurring UsageTriggers. An empty value or a value of `alltime` reads non-recurring UsageTriggers.
type UsageTriggerEnumRecurringEnum string

const (
	UsageTriggerEnumRecurringEnumDaily   UsageTriggerEnumRecurringEnum = "daily"
	UsageTriggerEnumRecurringEnumMonthly UsageTriggerEnumRecurringEnum = "monthly"
	UsageTriggerEnumRecurringEnumYearly  UsageTriggerEnumRecurringEnum = "yearly"
	UsageTriggerEnumRecurringEnumAlltime UsageTriggerEnumRecurringEnum = "alltime"
)

func (e *UsageTriggerEnumRecurringEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "daily":
		fallthrough
	case "monthly":
		fallthrough
	case "yearly":
		fallthrough
	case "alltime":
		*e = UsageTriggerEnumRecurringEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UsageTriggerEnumRecurringEnum: %s", s)
	}
}
