/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PurchasedRate - The "rate" that has been selected and purchased for the shipment, as referenced by the &lt;b&gt;rateId&lt;/b&gt; value.
 */
public class PurchasedRate {
    /**
     * An list of additional, optional features that have been purchased for the shipment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalOptions")
    public AdditionalOption[] additionalOptions;
    public PurchasedRate withAdditionalOptions(AdditionalOption[] additionalOptions) {
        this.additionalOptions = additionalOptions;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseShippingCost")
    public Amount baseShippingCost;
    public PurchasedRate withBaseShippingCost(Amount baseShippingCost) {
        this.baseShippingCost = baseShippingCost;
        return this;
    }
    
    /**
     * The time zone of the destination according to &lt;a href="https://www.iana.org/time-zones" target="_blank"&gt;Time Zone Database&lt;/a&gt;. For example, "America/Los_Angeles".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationTimeZone")
    public String destinationTimeZone;
    public PurchasedRate withDestinationTimeZone(String destinationTimeZone) {
        this.destinationTimeZone = destinationTimeZone;
        return this;
    }
    
    /**
     * A string value representing maximum (latest) estimated delivery time, formatted as an &lt;a href="https://www.iso.org/iso-8601-date-and-time-format.html" title="https://www.iso.org" target="_blank"&gt;ISO 8601&lt;/a&gt; string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  &lt;br&gt;&lt;br&gt;&lt;b&gt;Format:&lt;/b&gt; &lt;code&gt;[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z&lt;/code&gt; &lt;br&gt;&lt;b&gt;Example:&lt;/b&gt; &lt;code&gt;2018-08-20T07:09:00.000Z&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxEstimatedDeliveryDate")
    public String maxEstimatedDeliveryDate;
    public PurchasedRate withMaxEstimatedDeliveryDate(String maxEstimatedDeliveryDate) {
        this.maxEstimatedDeliveryDate = maxEstimatedDeliveryDate;
        return this;
    }
    
    /**
     * A string value representing minimum (earliest) estimated delivery time, formatted as an &lt;a href="https://www.iso.org/iso-8601-date-and-time-format.html" title="https://www.iso.org" target="_blank"&gt;ISO 8601&lt;/a&gt;ISO 8601&lt;/a&gt; UTC string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minEstimatedDeliveryDate")
    public String minEstimatedDeliveryDate;
    public PurchasedRate withMinEstimatedDeliveryDate(String minEstimatedDeliveryDate) {
        this.minEstimatedDeliveryDate = minEstimatedDeliveryDate;
        return this;
    }
    
    /**
     * A list of pickup networks compatible with the shipping service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupNetworks")
    public String[] pickupNetworks;
    public PurchasedRate withPickupNetworks(String[] pickupNetworks) {
        this.pickupNetworks = pickupNetworks;
        return this;
    }
    
    /**
     * This unique eBay-assigned ID value is returned only if the shipment has been configured for a scheduled pickup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupSlotId")
    public String pickupSlotId;
    public PurchasedRate withPickupSlotId(String pickupSlotId) {
        this.pickupSlotId = pickupSlotId;
        return this;
    }
    
    /**
     * The type of pickup or drop off configured for the shipment. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/logistics/types/api:PickupTypeEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupType")
    public String pickupType;
    public PurchasedRate withPickupType(String pickupType) {
        this.pickupType = pickupType;
        return this;
    }
    
    /**
     * The eBay-generated ID of the shipping rate that the seller has chosen to purchase for the shipment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rateId")
    public String rateId;
    public PurchasedRate withRateId(String rateId) {
        this.rateId = rateId;
        return this;
    }
    
    /**
     * The ID code for the carrier that was selected for the package shipment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingCarrierCode")
    public String shippingCarrierCode;
    public PurchasedRate withShippingCarrierCode(String shippingCarrierCode) {
        this.shippingCarrierCode = shippingCarrierCode;
        return this;
    }
    
    /**
     * The name of the shipping carrier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingCarrierName")
    public String shippingCarrierName;
    public PurchasedRate withShippingCarrierName(String shippingCarrierName) {
        this.shippingCarrierName = shippingCarrierName;
        return this;
    }
    
    /**
     * The unique eBay-generated ID of the &lt;i&gt;shipping quote&lt;/i&gt; from which the seller selected a shipping rate (&lt;b&gt;rateId&lt;/b&gt;).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingQuoteId")
    public String shippingQuoteId;
    public PurchasedRate withShippingQuoteId(String shippingQuoteId) {
        this.shippingQuoteId = shippingQuoteId;
        return this;
    }
    
    /**
     * String ID code for the shipping service selected for the package shipment. This is a service that the shipping carrier supplies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingServiceCode")
    public String shippingServiceCode;
    public PurchasedRate withShippingServiceCode(String shippingServiceCode) {
        this.shippingServiceCode = shippingServiceCode;
        return this;
    }
    
    /**
     * The name of the shipping service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingServiceName")
    public String shippingServiceName;
    public PurchasedRate withShippingServiceName(String shippingServiceName) {
        this.shippingServiceName = shippingServiceName;
        return this;
    }
    
    /**
     * A complex type that describes the value of a monetary amount as represented by a global currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalShippingCost")
    public Amount totalShippingCost;
    public PurchasedRate withTotalShippingCost(Amount totalShippingCost) {
        this.totalShippingCost = totalShippingCost;
        return this;
    }
    
}
