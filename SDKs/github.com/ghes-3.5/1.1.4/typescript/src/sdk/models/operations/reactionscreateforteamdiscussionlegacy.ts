/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The [reaction type](https://docs.github.com/enterprise-server@3.5/rest/reference/reactions#reaction-types) to add to the team discussion.
 */
export enum ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum {
  Plus1 = "+1",
  Minus1 = "-1",
  Laugh = "laugh",
  Confused = "confused",
  Heart = "heart",
  Hooray = "hooray",
  Rocket = "rocket",
  Eyes = "eyes",
}

export class ReactionsCreateForTeamDiscussionLegacyRequestBody extends SpeakeasyBase {
  /**
   * The [reaction type](https://docs.github.com/enterprise-server@3.5/rest/reference/reactions#reaction-types) to add to the team discussion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content: ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum;
}

export class ReactionsCreateForTeamDiscussionLegacyRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ReactionsCreateForTeamDiscussionLegacyRequestBody;

  /**
   * The number that identifies the discussion.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=discussion_number",
  })
  discussionNumber: number;

  /**
   * The unique identifier of the team.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=team_id",
  })
  teamId: number;
}

export class ReactionsCreateForTeamDiscussionLegacyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  reaction?: shared.Reaction;
}
