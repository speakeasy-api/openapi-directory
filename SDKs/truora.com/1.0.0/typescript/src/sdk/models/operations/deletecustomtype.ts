/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class DeleteCustomTypeSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Truora-API-Key",
  })
  apiKey: string;
}

/**
 * Country where the custom type is valid
 */
export enum DeleteCustomTypeCountryEnum {
  Br = "BR",
  Cl = "CL",
  Co = "CO",
  Cr = "CR",
  Ec = "EC",
  Mx = "MX",
  Pe = "PE",
  All = "ALL",
}

export class DeleteCustomTypeRequest extends SpeakeasyBase {
  /**
   * Country where the custom type is valid
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country",
  })
  country?: DeleteCustomTypeCountryEnum;

  /**
   * Name of the custom type to be deleted
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type: string;
}

export class DeleteCustomTypeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
