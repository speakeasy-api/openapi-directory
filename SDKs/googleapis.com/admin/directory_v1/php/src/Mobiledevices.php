<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Mobiledevices 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Takes an action that affects a mobile device. For example, remotely wiping a device.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionResponse
     */
	public function directoryMobiledevicesAction(
        \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/admin/directory/v1/customer/{customerId}/devices/mobile/{resourceId}/action', \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "mobileDeviceAction", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesActionResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Removes a mobile device.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteResponse
     */
	public function directoryMobiledevicesDelete(
        \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/admin/directory/v1/customer/{customerId}/devices/mobile/{resourceId}', \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Retrieves a mobile device's properties.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetResponse
     */
	public function directoryMobiledevicesGet(
        \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/admin/directory/v1/customer/{customerId}/devices/mobile/{resourceId}', \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->mobileDevice = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\MobileDevice', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieves a paginated list of all user-owned mobile devices for an account. To retrieve a list that includes company-owned devices, use the Cloud Identity [Devices API](https://cloud.google.com/identity/docs/concepts/overview-devices) instead. This method times out after 60 minutes. For more information, see [Troubleshoot error codes](https://developers.google.com/admin-sdk/directory/v1/guides/troubleshoot-error-codes).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListResponse
     */
	public function directoryMobiledevicesList(
        \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/admin/directory/v1/customer/{customerId}/devices/mobile', \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DirectoryMobiledevicesListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->mobileDevices = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\MobileDevices', 'json');
            }
        }

        return $response;
    }
}