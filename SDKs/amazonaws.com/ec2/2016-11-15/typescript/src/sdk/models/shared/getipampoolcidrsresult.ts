/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * An error code related to why an IPAM pool CIDR failed to be provisioned.
 */
export enum GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum {
  CidrNotAvailable = "cidr-not-available",
  LimitExceeded = "limit-exceeded",
}

/**
 * Details related to why an IPAM pool CIDR failed to be provisioned.
 */
export class GetIpamPoolCidrsResultIpamPoolCidrsFailureReason extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * The state of the CIDR.
 */
export enum GetIpamPoolCidrsResultIpamPoolCidrsStateEnum {
  PendingProvision = "pending-provision",
  Provisioned = "provisioned",
  FailedProvision = "failed-provision",
  PendingDeprovision = "pending-deprovision",
  Deprovisioned = "deprovisioned",
  FailedDeprovision = "failed-deprovision",
  PendingImport = "pending-import",
  FailedImport = "failed-import",
}

/**
 * A CIDR provisioned to an IPAM pool.
 */
export class GetIpamPoolCidrsResultIpamPoolCidrs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  failureReason?: GetIpamPoolCidrsResultIpamPoolCidrsFailureReason;

  @SpeakeasyMetadata()
  ipamPoolCidrId?: string;

  @SpeakeasyMetadata()
  netmaskLength?: number;

  @SpeakeasyMetadata()
  state?: GetIpamPoolCidrsResultIpamPoolCidrsStateEnum;
}

/**
 * Success
 */
export class GetIpamPoolCidrsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetIpamPoolCidrsResultIpamPoolCidrs })
  ipamPoolCidrs?: GetIpamPoolCidrsResultIpamPoolCidrs[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
