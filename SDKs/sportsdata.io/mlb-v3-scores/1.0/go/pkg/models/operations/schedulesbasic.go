// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SchedulesBasicFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type SchedulesBasicFormatEnum string

const (
	SchedulesBasicFormatEnumXML  SchedulesBasicFormatEnum = "XML"
	SchedulesBasicFormatEnumJSON SchedulesBasicFormatEnum = "JSON"
)

func (e SchedulesBasicFormatEnum) ToPointer() *SchedulesBasicFormatEnum {
	return &e
}

func (e *SchedulesBasicFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = SchedulesBasicFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchedulesBasicFormatEnum: %v", v)
	}
}

type SchedulesBasicRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format SchedulesBasicFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2018PRE</code>, <code>2018POST</code>, <code>2018STAR</code>, <code>2019</code>, etc.
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type SchedulesBasicResponse struct {
	ContentType    string
	ScheduleBasics []shared.ScheduleBasic
	StatusCode     int
	RawResponse    *http.Response
}
