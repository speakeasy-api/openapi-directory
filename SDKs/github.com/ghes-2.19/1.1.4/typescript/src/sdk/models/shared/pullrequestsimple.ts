/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorAssociationEnum } from "./authorassociationenum";
import { Link } from "./link";
import { NullableMilestone } from "./nullablemilestone";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Repository } from "./repository";
import { SimpleUser } from "./simpleuser";
import { Team } from "./team";
import { Expose, Transform, Type } from "class-transformer";

export class PullRequestSimpleLinks extends SpeakeasyBase {
  /**
   * Hypermedia Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  @Type(() => Link)
  comments: Link;

  /**
   * Hypermedia Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commits" })
  @Type(() => Link)
  commits: Link;

  /**
   * Hypermedia Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "html" })
  @Type(() => Link)
  html: Link;

  /**
   * Hypermedia Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issue" })
  @Type(() => Link)
  issue: Link;

  /**
   * Hypermedia Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "review_comment" })
  @Type(() => Link)
  reviewComment: Link;

  /**
   * Hypermedia Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "review_comments" })
  @Type(() => Link)
  reviewComments: Link;

  /**
   * Hypermedia Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => Link)
  self: Link;

  /**
   * Hypermedia Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statuses" })
  @Type(() => Link)
  statuses: Link;
}

export class PullRequestSimpleBase extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ref" })
  ref: string;

  /**
   * A git repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repo" })
  @Type(() => Repository)
  repo: Repository;

  @SpeakeasyMetadata()
  @Expose({ name: "sha" })
  sha: string;

  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => NullableSimpleUser)
  user: NullableSimpleUser;
}

export class PullRequestSimpleHead extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ref" })
  ref: string;

  /**
   * A git repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repo" })
  @Type(() => Repository)
  repo: Repository;

  @SpeakeasyMetadata()
  @Expose({ name: "sha" })
  sha: string;

  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => NullableSimpleUser)
  user: NullableSimpleUser;
}

export class PullRequestSimpleLabels extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  color?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default" })
  default?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Pull Request Simple
 */
export class PullRequestSimple extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => PullRequestSimpleLinks)
  links: PullRequestSimpleLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "active_lock_reason" })
  activeLockReason?: string;

  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignee" })
  @Type(() => NullableSimpleUser)
  assignee: NullableSimpleUser;

  @SpeakeasyMetadata({ elemType: SimpleUser })
  @Expose({ name: "assignees" })
  @Type(() => SimpleUser)
  assignees?: SimpleUser[];

  /**
   * How the author is associated with the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "author_association" })
  authorAssociation: AuthorAssociationEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "base" })
  @Type(() => PullRequestSimpleBase)
  base: PullRequestSimpleBase;

  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body: string;

  @SpeakeasyMetadata()
  @Expose({ name: "closed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  closedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "comments_url" })
  commentsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commits_url" })
  commitsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "diff_url" })
  diffUrl: string;

  /**
   * Indicates whether or not the pull request is a draft.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "draft" })
  draft?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "head" })
  @Type(() => PullRequestSimpleHead)
  head: PullRequestSimpleHead;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "issue_url" })
  issueUrl: string;

  @SpeakeasyMetadata({ elemType: PullRequestSimpleLabels })
  @Expose({ name: "labels" })
  @Type(() => PullRequestSimpleLabels)
  labels: PullRequestSimpleLabels[];

  @SpeakeasyMetadata()
  @Expose({ name: "locked" })
  locked: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "merge_commit_sha" })
  mergeCommitSha: string;

  @SpeakeasyMetadata()
  @Expose({ name: "merged_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  mergedAt: Date;

  /**
   * A collection of related issues and pull requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "milestone" })
  @Type(() => NullableMilestone)
  milestone: NullableMilestone;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: number;

  @SpeakeasyMetadata()
  @Expose({ name: "patch_url" })
  patchUrl: string;

  @SpeakeasyMetadata({ elemType: SimpleUser })
  @Expose({ name: "requested_reviewers" })
  @Type(() => SimpleUser)
  requestedReviewers?: SimpleUser[];

  @SpeakeasyMetadata({ elemType: Team })
  @Expose({ name: "requested_teams" })
  @Type(() => Team)
  requestedTeams?: Team[];

  @SpeakeasyMetadata()
  @Expose({ name: "review_comment_url" })
  reviewCommentUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "review_comments_url" })
  reviewCommentsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;

  @SpeakeasyMetadata()
  @Expose({ name: "statuses_url" })
  statusesUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => NullableSimpleUser)
  user: NullableSimpleUser;
}
