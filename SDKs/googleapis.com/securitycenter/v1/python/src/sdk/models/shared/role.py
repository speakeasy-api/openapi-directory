"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RoleKindEnum(str, Enum):
    r"""Role type."""
    KIND_UNSPECIFIED = 'KIND_UNSPECIFIED'
    ROLE = 'ROLE'
    CLUSTER_ROLE = 'CLUSTER_ROLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Role:
    r"""Kubernetes Role or ClusterRole."""
    
    kind: Optional[RoleKindEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Role type."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Role name."""  
    ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ns'), 'exclude': lambda f: f is None }})
    r"""Role namespace."""  
    