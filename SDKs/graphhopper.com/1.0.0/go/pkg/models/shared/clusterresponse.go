// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ClusterResponseStatusEnum - Indicates the current status of the job
type ClusterResponseStatusEnum string

const (
	ClusterResponseStatusEnumWaitingInQueue ClusterResponseStatusEnum = "waiting_in_queue"
	ClusterResponseStatusEnumProcessing     ClusterResponseStatusEnum = "processing"
	ClusterResponseStatusEnumFinished       ClusterResponseStatusEnum = "finished"
)

func (e *ClusterResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "waiting_in_queue":
		fallthrough
	case "processing":
		fallthrough
	case "finished":
		*e = ClusterResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterResponseStatusEnum: %s", s)
	}
}

// ClusterResponse - A response containing the solution
type ClusterResponse struct {
	Clusters       []Cluster `json:"clusters,omitempty"`
	Copyrights     []string  `json:"copyrights,omitempty"`
	ProcessingTime *float64  `json:"processing_time,omitempty"`
	// Indicates the current status of the job
	Status             *ClusterResponseStatusEnum `json:"status,omitempty"`
	WaitingTimeInQueue *float64                   `json:"waiting_time_in_queue,omitempty"`
}
