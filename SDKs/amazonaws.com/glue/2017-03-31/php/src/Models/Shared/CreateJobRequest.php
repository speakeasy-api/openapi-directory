<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateJobRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('AllocatedCapacity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $allocatedCapacity = null;
    
    /**
     * $codeGenConfigurationNodes
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\CodeGenConfigurationNode> $codeGenConfigurationNodes
     */
	#[\JMS\Serializer\Annotation\SerializedName('CodeGenConfigurationNodes')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\CodeGenConfigurationNode>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $codeGenConfigurationNodes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Command')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\JobCommand')]
    public JobCommand $command;
    
	#[\JMS\Serializer\Annotation\SerializedName('Connections')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConnectionsList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectionsList $connections = null;
    
    /**
     * $defaultArguments
     * 
     * @var ?array<string, string> $defaultArguments
     */
	#[\JMS\Serializer\Annotation\SerializedName('DefaultArguments')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $defaultArguments = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ExecutionClass')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ExecutionClassEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExecutionClassEnum $executionClass = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ExecutionProperty')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ExecutionProperty')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExecutionProperty $executionProperty = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('GlueVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $glueVersion = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LogUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logUri = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MaxCapacity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maxCapacity = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MaxRetries')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRetries = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * $nonOverridableArguments
     * 
     * @var ?array<string, string> $nonOverridableArguments
     */
	#[\JMS\Serializer\Annotation\SerializedName('NonOverridableArguments')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nonOverridableArguments = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NotificationProperty')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NotificationProperty')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NotificationProperty $notificationProperty = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NumberOfWorkers')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numberOfWorkers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Role')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $role;
    
	#[\JMS\Serializer\Annotation\SerializedName('SecurityConfiguration')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $securityConfiguration = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SourceControlDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SourceControlDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SourceControlDetails $sourceControlDetails = null;
    
    /**
     * $tags
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Timeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $timeout = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('WorkerType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WorkerTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WorkerTypeEnum $workerType = null;
    
	public function __construct()
	{
		$this->allocatedCapacity = null;
		$this->codeGenConfigurationNodes = null;
		$this->command = new \OpenAPI\OpenAPI\Models\Shared\JobCommand();
		$this->connections = null;
		$this->defaultArguments = null;
		$this->description = null;
		$this->executionClass = null;
		$this->executionProperty = null;
		$this->glueVersion = null;
		$this->logUri = null;
		$this->maxCapacity = null;
		$this->maxRetries = null;
		$this->name = "";
		$this->nonOverridableArguments = null;
		$this->notificationProperty = null;
		$this->numberOfWorkers = null;
		$this->role = "";
		$this->securityConfiguration = null;
		$this->sourceControlDetails = null;
		$this->tags = null;
		$this->timeout = null;
		$this->workerType = null;
	}
}
