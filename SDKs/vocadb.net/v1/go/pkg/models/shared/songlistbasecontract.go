// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SongListBaseContractFeaturedCategoryEnum string

const (
	SongListBaseContractFeaturedCategoryEnumNothing         SongListBaseContractFeaturedCategoryEnum = "Nothing"
	SongListBaseContractFeaturedCategoryEnumConcerts        SongListBaseContractFeaturedCategoryEnum = "Concerts"
	SongListBaseContractFeaturedCategoryEnumVocaloidRanking SongListBaseContractFeaturedCategoryEnum = "VocaloidRanking"
	SongListBaseContractFeaturedCategoryEnumPools           SongListBaseContractFeaturedCategoryEnum = "Pools"
	SongListBaseContractFeaturedCategoryEnumOther           SongListBaseContractFeaturedCategoryEnum = "Other"
)

func (e *SongListBaseContractFeaturedCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Concerts":
		fallthrough
	case "VocaloidRanking":
		fallthrough
	case "Pools":
		fallthrough
	case "Other":
		*e = SongListBaseContractFeaturedCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListBaseContractFeaturedCategoryEnum: %s", s)
	}
}

type SongListBaseContract struct {
	FeaturedCategory *SongListBaseContractFeaturedCategoryEnum `json:"featuredCategory,omitempty"`
	ID               *int                                      `json:"id,omitempty"`
	Name             *string                                   `json:"name,omitempty"`
}
