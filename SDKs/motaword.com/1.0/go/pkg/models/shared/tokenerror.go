// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TokenErrorAccountStatusEnum string

const (
	TokenErrorAccountStatusEnumRegistered     TokenErrorAccountStatusEnum = "registered"
	TokenErrorAccountStatusEnumEmailConfirmed TokenErrorAccountStatusEnum = "email_confirmed"
	TokenErrorAccountStatusEnumDeleted        TokenErrorAccountStatusEnum = "deleted"
	TokenErrorAccountStatusEnumSuspended      TokenErrorAccountStatusEnum = "suspended"
	TokenErrorAccountStatusEnumRejected       TokenErrorAccountStatusEnum = "rejected"
	TokenErrorAccountStatusEnumApproved       TokenErrorAccountStatusEnum = "approved"
	TokenErrorAccountStatusEnumResume         TokenErrorAccountStatusEnum = "resume"
	TokenErrorAccountStatusEnumWebinar        TokenErrorAccountStatusEnum = "webinar"
	TokenErrorAccountStatusEnumCourse         TokenErrorAccountStatusEnum = "course"
)

func (e *TokenErrorAccountStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "registered":
		fallthrough
	case "email_confirmed":
		fallthrough
	case "deleted":
		fallthrough
	case "suspended":
		fallthrough
	case "rejected":
		fallthrough
	case "approved":
		fallthrough
	case "resume":
		fallthrough
	case "webinar":
		fallthrough
	case "course":
		*e = TokenErrorAccountStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TokenErrorAccountStatusEnum: %s", s)
	}
}

// TokenError - Authentication error - for vendor auth, it will also fail if their account is not approved yet. In that case, the error response will include "account_status" key.
type TokenError struct {
	AccountStatus *TokenErrorAccountStatusEnum `json:"account_status,omitempty"`
	Code          *string                      `json:"code,omitempty"`
	Help          *string                      `json:"help,omitempty"`
	HTTPCode      *int                         `json:"http_code,omitempty"`
	Message       *string                      `json:"message,omitempty"`
}
