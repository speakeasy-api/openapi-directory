// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OutcomeEnum string

const (
	OutcomeEnumCanceled           OutcomeEnum = "canceled"
	OutcomeEnumInfrastructureFail OutcomeEnum = "infrastructure_fail"
	OutcomeEnumTimedout           OutcomeEnum = "timedout"
	OutcomeEnumFailed             OutcomeEnum = "failed"
	OutcomeEnumNoTests            OutcomeEnum = "no_tests"
	OutcomeEnumSuccess            OutcomeEnum = "success"
)

func (e *OutcomeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "canceled":
		fallthrough
	case "infrastructure_fail":
		fallthrough
	case "timedout":
		fallthrough
	case "failed":
		fallthrough
	case "no_tests":
		fallthrough
	case "success":
		*e = OutcomeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OutcomeEnum: %s", s)
	}
}
