// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type APICoreDtoDomainsDomainTypeEnum string

const (
	APICoreDtoDomainsDomainTypeEnumSystem    APICoreDtoDomainsDomainTypeEnum = "System"
	APICoreDtoDomainsDomainTypeEnumGo        APICoreDtoDomainsDomainTypeEnum = "Go"
	APICoreDtoDomainsDomainTypeEnumDedicated APICoreDtoDomainsDomainTypeEnum = "Dedicated"
	APICoreDtoDomainsDomainTypeEnumPersonal  APICoreDtoDomainsDomainTypeEnum = "Personal"
)

func (e APICoreDtoDomainsDomainTypeEnum) ToPointer() *APICoreDtoDomainsDomainTypeEnum {
	return &e
}

func (e *APICoreDtoDomainsDomainTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "System":
		fallthrough
	case "Go":
		fallthrough
	case "Dedicated":
		fallthrough
	case "Personal":
		*e = APICoreDtoDomainsDomainTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for APICoreDtoDomainsDomainTypeEnum: %v", v)
	}
}

// APICoreDtoDomainsDomain - The domain to create
type APICoreDtoDomainsDomain struct {
	Custom404      *string                          `json:"custom404,omitempty" form:"name=custom404"`
	CustomHomepage *string                          `json:"customHomepage,omitempty" form:"name=customHomepage"`
	ID             *int64                           `json:"id,omitempty" form:"name=id"`
	Name           *string                          `json:"name,omitempty" form:"name=name"`
	Type           *APICoreDtoDomainsDomainTypeEnum `json:"type,omitempty" form:"name=type"`
}
