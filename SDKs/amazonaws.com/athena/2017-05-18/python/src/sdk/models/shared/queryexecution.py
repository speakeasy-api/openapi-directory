"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import engineversion as shared_engineversion
from ..shared import queryexecutioncontext as shared_queryexecutioncontext
from ..shared import queryexecutionstatistics as shared_queryexecutionstatistics
from ..shared import queryexecutionstatus as shared_queryexecutionstatus
from ..shared import resultconfiguration as shared_resultconfiguration
from ..shared import resultreuseconfiguration as shared_resultreuseconfiguration
from ..shared import statementtype_enum as shared_statementtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryExecution:
    r"""Information about a single instance of a query execution."""
    
    engine_version: Optional[shared_engineversion.EngineVersion] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EngineVersion'), 'exclude': lambda f: f is None }})  
    execution_parameters: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionParameters'), 'exclude': lambda f: f is None }})  
    query: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Query'), 'exclude': lambda f: f is None }})  
    query_execution_context: Optional[shared_queryexecutioncontext.QueryExecutionContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryExecutionContext'), 'exclude': lambda f: f is None }})  
    query_execution_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryExecutionId'), 'exclude': lambda f: f is None }})  
    result_configuration: Optional[shared_resultconfiguration.ResultConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultConfiguration'), 'exclude': lambda f: f is None }})  
    result_reuse_configuration: Optional[shared_resultreuseconfiguration.ResultReuseConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultReuseConfiguration'), 'exclude': lambda f: f is None }})  
    statement_type: Optional[shared_statementtype_enum.StatementTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatementType'), 'exclude': lambda f: f is None }})  
    statistics: Optional[shared_queryexecutionstatistics.QueryExecutionStatistics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Statistics'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_queryexecutionstatus.QueryExecutionStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    substatement_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubstatementType'), 'exclude': lambda f: f is None }})  
    work_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkGroup'), 'exclude': lambda f: f is None }})  
    