// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceCodeAnalyzerNameEnum string

const (
	SourceCodeAnalyzerNameEnumCsharpAnalyzer   SourceCodeAnalyzerNameEnum = "CSHARP_ANALYZER"
	SourceCodeAnalyzerNameEnumJavaAnalyzer     SourceCodeAnalyzerNameEnum = "JAVA_ANALYZER"
	SourceCodeAnalyzerNameEnumBytecodeAnalyzer SourceCodeAnalyzerNameEnum = "BYTECODE_ANALYZER"
	SourceCodeAnalyzerNameEnumPortingAssistant SourceCodeAnalyzerNameEnum = "PORTING_ASSISTANT"
)

func (e SourceCodeAnalyzerNameEnum) ToPointer() *SourceCodeAnalyzerNameEnum {
	return &e
}

func (e *SourceCodeAnalyzerNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CSHARP_ANALYZER":
		fallthrough
	case "JAVA_ANALYZER":
		fallthrough
	case "BYTECODE_ANALYZER":
		fallthrough
	case "PORTING_ASSISTANT":
		*e = SourceCodeAnalyzerNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceCodeAnalyzerNameEnum: %v", v)
	}
}
