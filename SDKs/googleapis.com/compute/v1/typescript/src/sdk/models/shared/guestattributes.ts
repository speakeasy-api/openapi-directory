/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GuestAttributesValue } from "./guestattributesvalue";
import { Expose, Type } from "class-transformer";

/**
 * A guest attributes entry.
 */
export class GuestAttributes extends SpeakeasyBase {
  /**
   * [Output Only] Type of the resource. Always compute#guestAttributes for guest attributes entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The path to be queried. This can be the default namespace ('') or a nested namespace ('\/') or a specified key ('\/\').
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryPath" })
  queryPath?: string;

  /**
   * Array of guest attribute namespace/key/value tuples.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryValue" })
  @Type(() => GuestAttributesValue)
  queryValue?: GuestAttributesValue;

  /**
   * [Output Only] Server-defined URL for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * The key to search for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variableKey" })
  variableKey?: string;

  /**
   * [Output Only] The value found for the requested key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variableValue" })
  variableValue?: string;
}
