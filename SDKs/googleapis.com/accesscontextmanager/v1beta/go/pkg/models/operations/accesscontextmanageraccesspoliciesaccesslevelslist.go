// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AccesscontextmanagerAccessPoliciesAccessLevelsListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum - Whether to return `BasicLevels` in the Cloud Common Expression language, as `CustomLevels`, rather than as `BasicLevels`. Defaults to returning `AccessLevels` in the format they were defined.
type AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum string

const (
	AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnumLevelFormatUnspecified AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum = "LEVEL_FORMAT_UNSPECIFIED"
	AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnumAsDefined              AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum = "AS_DEFINED"
	AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnumCel                    AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum = "CEL"
)

func (e *AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LEVEL_FORMAT_UNSPECIFIED":
		fallthrough
	case "AS_DEFINED":
		fallthrough
	case "CEL":
		*e = AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum: %s", s)
	}
}

type AccesscontextmanagerAccessPoliciesAccessLevelsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// Whether to return `BasicLevels` in the Cloud Common Expression language, as `CustomLevels`, rather than as `BasicLevels`. Defaults to returning `AccessLevels` in the format they were defined.
	AccessLevelFormat *AccesscontextmanagerAccessPoliciesAccessLevelsListAccessLevelFormatEnum `queryParam:"style=form,explode=true,name=accessLevelFormat"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Number of Access Levels to include in the list. Default 100.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Next page token for the next batch of Access Level instances. Defaults to the first page of results.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Required. Resource name for the access policy to list Access Levels from. Format: `accessPolicies/{policy_id}`
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type AccesscontextmanagerAccessPoliciesAccessLevelsListResponse struct {
	ContentType string
	// Successful response
	ListAccessLevelsResponse *shared.ListAccessLevelsResponse
	StatusCode               int
	RawResponse              *http.Response
}
