/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RuntimeInfo - Runtime information about workload execution.
 */
public class RuntimeInfo {
    /**
     * Usage metrics represent approximate total resources consumed by a workload.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approximateUsage")
    public UsageMetrics approximateUsage;
    public RuntimeInfo withApproximateUsage(UsageMetrics approximateUsage) {
        this.approximateUsage = approximateUsage;
        return this;
    }
    
    /**
     * The usage snaphot represents the resources consumed by a workload at a specified time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentUsage")
    public UsageSnapshot currentUsage;
    public RuntimeInfo withCurrentUsage(UsageSnapshot currentUsage) {
        this.currentUsage = currentUsage;
        return this;
    }
    
    /**
     * Output only. A URI pointing to the location of the diagnostics tarball.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diagnosticOutputUri")
    public String diagnosticOutputUri;
    public RuntimeInfo withDiagnosticOutputUri(String diagnosticOutputUri) {
        this.diagnosticOutputUri = diagnosticOutputUri;
        return this;
    }
    
    /**
     * Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpoints")
    public java.util.Map<String, String> endpoints;
    public RuntimeInfo withEndpoints(java.util.Map<String, String> endpoints) {
        this.endpoints = endpoints;
        return this;
    }
    
    /**
     * Output only. A URI pointing to the location of the stdout and stderr of the workload.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputUri")
    public String outputUri;
    public RuntimeInfo withOutputUri(String outputUri) {
        this.outputUri = outputUri;
        return this;
    }
    
}
