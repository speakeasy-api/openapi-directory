/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProtectedQueryError } from "./protectedqueryerror";
import { ProtectedQueryResult } from "./protectedqueryresult";
import { ProtectedQueryResultConfiguration } from "./protectedqueryresultconfiguration";
import { ProtectedQuerySQLParameters } from "./protectedquerysqlparameters";
import { ProtectedQueryStatistics } from "./protectedquerystatistics";
import { ProtectedQueryStatusEnum } from "./protectedquerystatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The parameters for an AWS Clean Rooms protected query.
 */
export class ProtectedQuery extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ProtectedQueryError)
  error?: ProtectedQueryError;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "membershipArn" })
  membershipArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "membershipId" })
  membershipId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  @Type(() => ProtectedQueryResult)
  result?: ProtectedQueryResult;

  @SpeakeasyMetadata()
  @Expose({ name: "resultConfiguration" })
  @Type(() => ProtectedQueryResultConfiguration)
  resultConfiguration: ProtectedQueryResultConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "sqlParameters" })
  @Type(() => ProtectedQuerySQLParameters)
  sqlParameters: ProtectedQuerySQLParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "statistics" })
  @Type(() => ProtectedQueryStatistics)
  statistics?: ProtectedQueryStatistics;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ProtectedQueryStatusEnum;
}
