// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeReservedNodeOfferingsActionEnum
type POSTDescribeReservedNodeOfferingsActionEnum string

const (
	POSTDescribeReservedNodeOfferingsActionEnumDescribeReservedNodeOfferings POSTDescribeReservedNodeOfferingsActionEnum = "DescribeReservedNodeOfferings"
)

func (e POSTDescribeReservedNodeOfferingsActionEnum) ToPointer() *POSTDescribeReservedNodeOfferingsActionEnum {
	return &e
}

func (e *POSTDescribeReservedNodeOfferingsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeReservedNodeOfferings":
		*e = POSTDescribeReservedNodeOfferingsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeReservedNodeOfferingsActionEnum: %v", v)
	}
}

// POSTDescribeReservedNodeOfferingsVersionEnum
type POSTDescribeReservedNodeOfferingsVersionEnum string

const (
	POSTDescribeReservedNodeOfferingsVersionEnumTwoThousandAndTwelve1201 POSTDescribeReservedNodeOfferingsVersionEnum = "2012-12-01"
)

func (e POSTDescribeReservedNodeOfferingsVersionEnum) ToPointer() *POSTDescribeReservedNodeOfferingsVersionEnum {
	return &e
}

func (e *POSTDescribeReservedNodeOfferingsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = POSTDescribeReservedNodeOfferingsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeReservedNodeOfferingsVersionEnum: %v", v)
	}
}

type POSTDescribeReservedNodeOfferingsRequest struct {
	Action POSTDescribeReservedNodeOfferingsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords        *string                                      `queryParam:"style=form,explode=true,name=MaxRecords"`
	RequestBody       []byte                                       `request:"mediaType=text/xml"`
	Version           POSTDescribeReservedNodeOfferingsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeReservedNodeOfferingsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
