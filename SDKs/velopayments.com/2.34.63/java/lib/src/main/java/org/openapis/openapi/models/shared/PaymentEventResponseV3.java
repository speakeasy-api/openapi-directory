/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class PaymentEventResponseV3 {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountName")
    public String accountName;
    public PaymentEventResponseV3 withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }
    
    /**
     * The account number attached to the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public PaymentEventResponseV3 withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * The date/time at which the event occurred.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("eventDateTime")
    public OffsetDateTime eventDateTime;
    public PaymentEventResponseV3 withEventDateTime(OffsetDateTime eventDateTime) {
        this.eventDateTime = eventDateTime;
        return this;
    }
    
    /**
     * The id of the event.
     */
    @JsonProperty("eventId")
    public String eventId;
    public PaymentEventResponseV3 withEventId(String eventId) {
        this.eventId = eventId;
        return this;
    }
    
    /**
     * The type of the event. One of the following values: PAYOUT_SUBMITTED, PAYOUT_COMPLETED, PAYOUT_INSTRUCTED_V3, BANK_PAYMENT_REQUESTED, SOURCE_AMOUNT_CONFIRMED, PAYMENT_SUBMITTED, PAYMENT_SUBMITTED_ACCEPTED, PAYMENT_SUBMITTED_REJECTED, PAYMENT_CONFIRMED, PAYMENT_AWAITING_FUNDS, PAYMENT_FUNDED, PAYMENT_UNFUNDED, PAYMENT_FAILED, ACH_SUBMITTED_TO_ODFI, PAYMENT_ACCEPTED_BY_RAILS, ACH_RETURN_RECEIVED, RETURN_PAYMENT_FUNDING_REQUESTED, PAYOUT_BATCH_EXECUTED, PAYOUT_BATCH_QUOTE_EXPIRED, PAYOUT_BATCH_FUNDED, PAYOUT_BATCH_FUNDS_RETURN_REQUEST, PAYOUT_BATCH_FUNDS_RETURNED, PAYOUT_FUNDS_REQUEST, PAYOUT_FUNDS_GRANTED, PAYOUT_FUNDS_DENIED, PAYOUT_BATCH_QUOTED, PAYOUT_QUOTED, ACH_PAYMENT_RETURN_CANCELLED, RETURN_PAYMENT_CANCELLATION_REQUESTED, PAYOUT_WITHDRAWN
     */
    @JsonProperty("eventType")
    public String eventType;
    public PaymentEventResponseV3 withEventType(String eventType) {
        this.eventType = eventType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iban")
    public String iban;
    public PaymentEventResponseV3 withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
    /**
     * The destination amount exposed by the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentAmount")
    public Long paymentAmount;
    public PaymentEventResponseV3 withPaymentAmount(Long paymentAmount) {
        this.paymentAmount = paymentAmount;
        return this;
    }
    
    /**
     * ISO 3 character currency code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentCurrency")
    public String paymentCurrency;
    public PaymentEventResponseV3 withPaymentCurrency(String paymentCurrency) {
        this.paymentCurrency = paymentCurrency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principal")
    public String principal;
    public PaymentEventResponseV3 withPrincipal(String principal) {
        this.principal = principal;
        return this;
    }
    
    /**
     * The routing number attached to the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routingNumber")
    public String routingNumber;
    public PaymentEventResponseV3 withRoutingNumber(String routingNumber) {
        this.routingNumber = routingNumber;
        return this;
    }
    
    /**
     * The source amount exposed by the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceAmount")
    public Long sourceAmount;
    public PaymentEventResponseV3 withSourceAmount(Long sourceAmount) {
        this.sourceAmount = sourceAmount;
        return this;
    }
    
    /**
     * ISO 3 character currency code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceCurrency")
    public String sourceCurrency;
    public PaymentEventResponseV3 withSourceCurrency(String sourceCurrency) {
        this.sourceCurrency = sourceCurrency;
        return this;
    }
    
}
