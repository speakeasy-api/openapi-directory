/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GroupInfo } from "./groupinfo";
import { PendingGroupData } from "./pendinggroupdata";
import { PendingUserData } from "./pendinguserdata";
import { UserInfo } from "./userinfo";
import { Expose, Type } from "class-transformer";

/**
 * Acceptance state:
 *
 * @remarks
 *
 * * `ACCEPTED`
 *
 * * `WAITING`
 *
 * * `DENIED`
 */
export enum PendingAssignmentDataStateEnum {
  Accepted = "ACCEPTED",
  Denied = "DENIED",
  Waiting = "WAITING",
}

/**
 * Pending assignment information
 */
export class PendingAssignmentData extends SpeakeasyBase {
  /**
   * Group information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupInfo" })
  @Type(() => GroupInfo)
  groupInfo: GroupInfo;

  /**
   * Pending group information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pendingGroupData" })
  @Type(() => PendingGroupData)
  pendingGroupData: PendingGroupData;

  /**
   * Pending user information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pendingUserData" })
  @Type(() => PendingUserData)
  pendingUserData: PendingUserData;

  /**
   * Room ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roomId" })
  roomId: number;

  /**
   * Room name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roomName" })
  roomName: string;

  /**
   * Acceptance state:
   *
   * @remarks
   *
   * * `ACCEPTED`
   *
   * * `WAITING`
   *
   * * `DENIED`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: PendingAssignmentDataStateEnum;

  /**
   * User information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userInfo" })
  @Type(() => UserInfo)
  userInfo: UserInfo;
}
