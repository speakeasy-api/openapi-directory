// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostAPIV1AccountsIDMuteSecurity struct {
	BearerAuth shared.SchemeBearerAuth `security:"scheme,type=http,subtype=bearer"`
}

type PostAPIV1AccountsIDMutePathParams struct {
	// The id of the account in the database
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type PostAPIV1AccountsIDMuteRequestBody struct {
	// How long the mute should last, in seconds. Defaults to 0 (indefinite).
	Duration *int64
	// Mute notifications in addition to statuses? Defaults to true.
	Notifications *bool
}

type PostAPIV1AccountsIDMuteRequest struct {
	PathParams PostAPIV1AccountsIDMutePathParams
	Request    []byte `request:"mediaType=application/form-data"`
	Security   PostAPIV1AccountsIDMuteSecurity
}

type PostAPIV1AccountsIDMuteResponse struct {
	ContentType string
	// Invalid or missing Authorization header
	Error *shared.Error
	// Successfully muted, or account was already muted. Note that you can call this API method again with notifications=false to update the relationship so that only statuses are muted.
	Relationship *shared.Relationship
	StatusCode   int
	RawResponse  *http.Response
}
