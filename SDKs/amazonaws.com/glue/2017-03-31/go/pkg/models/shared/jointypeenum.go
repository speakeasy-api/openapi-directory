// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JoinTypeEnum string

const (
	JoinTypeEnumEquijoin JoinTypeEnum = "equijoin"
	JoinTypeEnumLeft     JoinTypeEnum = "left"
	JoinTypeEnumRight    JoinTypeEnum = "right"
	JoinTypeEnumOuter    JoinTypeEnum = "outer"
	JoinTypeEnumLeftsemi JoinTypeEnum = "leftsemi"
	JoinTypeEnumLeftanti JoinTypeEnum = "leftanti"
)

func (e *JoinTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "equijoin":
		fallthrough
	case "left":
		fallthrough
	case "right":
		fallthrough
	case "outer":
		fallthrough
	case "leftsemi":
		fallthrough
	case "leftanti":
		*e = JoinTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JoinTypeEnum: %s", s)
	}
}
