<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CatalogCustomAttributeDefinitionSelectionConfig - Configuration associated with `SELECTION`-type custom attribute definitions.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CatalogCustomAttributeDefinitionSelectionConfig
{
    /**
     * The set of valid `CatalogCustomAttributeSelections`. Up to a maximum of 100
     * 
     * selections can be defined. Can be modified.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection> $allowedSelections
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowed_selections')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowedSelections = null;
    
    /**
     * The maximum number of selections that can be set. The maximum value for this
     * 
     * attribute is 100. The default value is 1. The value can be modified, but changing the value will not
     * affect existing custom attribute values on objects. Clients need to
     * handle custom attributes with more selected values than allowed by this limit.
     * 
     * @var ?int $maxAllowedSelections
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_allowed_selections')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxAllowedSelections = null;
    
	public function __construct()
	{
		$this->allowedSelections = null;
		$this->maxAllowedSelections = null;
	}
}
