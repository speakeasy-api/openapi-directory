/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TflApiPresentationEntitiesPrediction - DTO to capture the prediction details
 */
public class TflApiPresentationEntitiesPrediction {
    /**
     * Bearing (between 0 to 359)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bearing")
    public String bearing;

    public TflApiPresentationEntitiesPrediction withBearing(String bearing) {
        this.bearing = bearing;
        return this;
    }
    
    /**
     * The current location of the vehicle.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentLocation")
    public String currentLocation;

    public TflApiPresentationEntitiesPrediction withCurrentLocation(String currentLocation) {
        this.currentLocation = currentLocation;
        return this;
    }
    
    /**
     * Name of the destination
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationName")
    public String destinationName;

    public TflApiPresentationEntitiesPrediction withDestinationName(String destinationName) {
        this.destinationName = destinationName;
        return this;
    }
    
    /**
     * Naptan Identifier for the prediction's destination
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationNaptanId")
    public String destinationNaptanId;

    public TflApiPresentationEntitiesPrediction withDestinationNaptanId(String destinationNaptanId) {
        this.destinationNaptanId = destinationNaptanId;
        return this;
    }
    
    /**
     * Direction (unified to inbound/outbound)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public String direction;

    public TflApiPresentationEntitiesPrediction withDirection(String direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * The expected arrival time of the vehicle at the stop/station
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expectedArrival")
    public OffsetDateTime expectedArrival;

    public TflApiPresentationEntitiesPrediction withExpectedArrival(OffsetDateTime expectedArrival) {
        this.expectedArrival = expectedArrival;
        return this;
    }
    
    /**
     * The identitier for the prediction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public TflApiPresentationEntitiesPrediction withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Unique identifier for the Line
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineId")
    public String lineId;

    public TflApiPresentationEntitiesPrediction withLineId(String lineId) {
        this.lineId = lineId;
        return this;
    }
    
    /**
     * Line Name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineName")
    public String lineName;

    public TflApiPresentationEntitiesPrediction withLineName(String lineName) {
        this.lineName = lineName;
        return this;
    }
    
    /**
     * The mode name of the station/line the prediction relates to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modeName")
    public String modeName;

    public TflApiPresentationEntitiesPrediction withModeName(String modeName) {
        this.modeName = modeName;
        return this;
    }
    
    /**
     * Identifier for the prediction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("naptanId")
    public String naptanId;

    public TflApiPresentationEntitiesPrediction withNaptanId(String naptanId) {
        this.naptanId = naptanId;
        return this;
    }
    
    /**
     * The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationType")
    public Integer operationType;

    public TflApiPresentationEntitiesPrediction withOperationType(Integer operationType) {
        this.operationType = operationType;
        return this;
    }
    
    /**
     * Platform name (for bus, this is the stop letter)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformName")
    public String platformName;

    public TflApiPresentationEntitiesPrediction withPlatformName(String platformName) {
        this.platformName = platformName;
        return this;
    }
    
    /**
     * Station name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stationName")
    public String stationName;

    public TflApiPresentationEntitiesPrediction withStationName(String stationName) {
        this.stationName = stationName;
        return this;
    }
    
    /**
     * The expiry time for the prediction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timeToLive")
    public OffsetDateTime timeToLive;

    public TflApiPresentationEntitiesPrediction withTimeToLive(OffsetDateTime timeToLive) {
        this.timeToLive = timeToLive;
        return this;
    }
    
    /**
     * Prediction of the Time to station in seconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeToStation")
    public Integer timeToStation;

    public TflApiPresentationEntitiesPrediction withTimeToStation(Integer timeToStation) {
        this.timeToStation = timeToStation;
        return this;
    }
    
    /**
     * Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public TflApiPresentationEntitiesPrediction withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timing")
    public TflApiPresentationEntitiesPredictionTiming timing;

    public TflApiPresentationEntitiesPrediction withTiming(TflApiPresentationEntitiesPredictionTiming timing) {
        this.timing = timing;
        return this;
    }
    
    /**
     * Routing information or other descriptive text about the path of the vehicle towards the destination
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("towards")
    public String towards;

    public TflApiPresentationEntitiesPrediction withTowards(String towards) {
        this.towards = towards;
        return this;
    }
    
    /**
     * The actual vehicle in transit (for train modes, the leading car of the rolling set)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vehicleId")
    public String vehicleId;

    public TflApiPresentationEntitiesPrediction withVehicleId(String vehicleId) {
        this.vehicleId = vehicleId;
        return this;
    }
    
    public TflApiPresentationEntitiesPrediction(){}
}
