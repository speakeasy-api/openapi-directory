// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// NotificationTypeEnum - The type of event that resulted in the notification.
type NotificationTypeEnum string

const (
	NotificationTypeEnumFollow        NotificationTypeEnum = "follow"
	NotificationTypeEnumFollowRequest NotificationTypeEnum = "follow_request"
	NotificationTypeEnumMention       NotificationTypeEnum = "mention"
	NotificationTypeEnumReblog        NotificationTypeEnum = "reblog"
	NotificationTypeEnumFavourite     NotificationTypeEnum = "favourite"
	NotificationTypeEnumPoll          NotificationTypeEnum = "poll"
	NotificationTypeEnumStatus        NotificationTypeEnum = "status"
)

func (e NotificationTypeEnum) ToPointer() *NotificationTypeEnum {
	return &e
}

func (e *NotificationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "follow":
		fallthrough
	case "follow_request":
		fallthrough
	case "mention":
		fallthrough
	case "reblog":
		fallthrough
	case "favourite":
		fallthrough
	case "poll":
		fallthrough
	case "status":
		*e = NotificationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationTypeEnum: %v", v)
	}
}

// Notification - Represents a notification of an event relevant to the user.
// https://docs.joinmastodon.org/entities/notification/
type Notification struct {
	// Represents a user of Mastodon and their associated profile.
	Account Account `json:"account"`
	// The timestamp of the notification. ISO 8601 Datetime.
	CreatedAt time.Time `json:"created_at"`
	// The id of the notification in the database. Cast from an integer, but not guaranteed to be a number.
	ID string `json:"id"`
	// Represents a status posted by an account.
	Status *Status `json:"status,omitempty"`
	// The type of event that resulted in the notification.
	Type NotificationTypeEnum `json:"type"`
}
