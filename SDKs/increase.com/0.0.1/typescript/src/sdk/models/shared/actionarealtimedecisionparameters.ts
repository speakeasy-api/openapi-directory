/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Whether the card authorization should be approved or declined.
 */
export enum ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum {
  Approve = "approve",
  Decline = "decline",
}

/**
 * If the Real-Time Decision relates to a card authorization attempt, this object contains your response to the authorization.
 */
export class ActionARealTimeDecisionParametersCardAuthorization extends SpeakeasyBase {
  /**
   * Whether the card authorization should be approved or declined.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "decision" })
  decision: ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum;
}

/**
 * Whether your application was able to deliver the one-time passcode.
 */
export enum ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum {
  Success = "success",
  Failure = "failure",
}

/**
 * If the Real-Time Decision relates to a digital wallet authentication attempt, this object contains your response to the authentication.
 */
export class ActionARealTimeDecisionParametersDigitalWalletAuthentication extends SpeakeasyBase {
  /**
   * Whether your application was able to deliver the one-time passcode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result: ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum;
}

/**
 * If your application approves the provisioning attempt, this contains metadata about the digital wallet token that will be generated.
 */
export class ActionARealTimeDecisionParametersDigitalWalletTokenApproval extends SpeakeasyBase {
  /**
   * The identifier of the Card Profile to assign to the Digital Wallet token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "card_profile_id" })
  cardProfileId: string;

  /**
   * An email address that can be used to verify the cardholder via one-time passcode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * A phone number that can be used to verify the cardholder via one-time passcode over SMS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;
}

/**
 * If your application declines the provisioning attempt, this contains details about the decline.
 */
export class ActionARealTimeDecisionParametersDigitalWalletTokenDecline extends SpeakeasyBase {
  /**
   * Why the tokenization attempt was declined. This is for logging purposes only and is not displayed to the end-user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

/**
 * If the Real-Time Decision relates to a digital wallet token provisioning attempt, this object contains your response to the attempt.
 */
export class ActionARealTimeDecisionParametersDigitalWalletToken extends SpeakeasyBase {
  /**
   * If your application approves the provisioning attempt, this contains metadata about the digital wallet token that will be generated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approval" })
  @Type(() => ActionARealTimeDecisionParametersDigitalWalletTokenApproval)
  approval?: ActionARealTimeDecisionParametersDigitalWalletTokenApproval;

  /**
   * If your application declines the provisioning attempt, this contains details about the decline.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "decline" })
  @Type(() => ActionARealTimeDecisionParametersDigitalWalletTokenDecline)
  decline?: ActionARealTimeDecisionParametersDigitalWalletTokenDecline;
}

export class ActionARealTimeDecisionParameters extends SpeakeasyBase {
  /**
   * If the Real-Time Decision relates to a card authorization attempt, this object contains your response to the authorization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "card_authorization" })
  @Type(() => ActionARealTimeDecisionParametersCardAuthorization)
  cardAuthorization?: ActionARealTimeDecisionParametersCardAuthorization;

  /**
   * If the Real-Time Decision relates to a digital wallet authentication attempt, this object contains your response to the authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "digital_wallet_authentication" })
  @Type(() => ActionARealTimeDecisionParametersDigitalWalletAuthentication)
  digitalWalletAuthentication?: ActionARealTimeDecisionParametersDigitalWalletAuthentication;

  /**
   * If the Real-Time Decision relates to a digital wallet token provisioning attempt, this object contains your response to the attempt.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "digital_wallet_token" })
  @Type(() => ActionARealTimeDecisionParametersDigitalWalletToken)
  digitalWalletToken?: ActionARealTimeDecisionParametersDigitalWalletToken;
}
