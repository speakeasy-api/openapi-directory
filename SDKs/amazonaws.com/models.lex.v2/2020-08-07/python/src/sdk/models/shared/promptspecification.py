"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import messagegroup as shared_messagegroup
from ..shared import messageselectionstrategy_enum as shared_messageselectionstrategy_enum
from ..shared import promptattemptspecification as shared_promptattemptspecification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PromptSpecification:
    r"""Specifies a list of message groups that Amazon Lex sends to a user to elicit a response."""
    
    max_retries: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxRetries') }})  
    message_groups: list[shared_messagegroup.MessageGroup] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messageGroups') }})  
    allow_interrupt: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowInterrupt'), 'exclude': lambda f: f is None }})  
    message_selection_strategy: Optional[shared_messageselectionstrategy_enum.MessageSelectionStrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messageSelectionStrategy'), 'exclude': lambda f: f is None }})  
    prompt_attempts_specification: Optional[dict[str, shared_promptattemptspecification.PromptAttemptSpecification]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('promptAttemptsSpecification'), 'exclude': lambda f: f is None }})  
    