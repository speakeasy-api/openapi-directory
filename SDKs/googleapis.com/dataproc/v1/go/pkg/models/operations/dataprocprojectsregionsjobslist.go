// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DataprocProjectsRegionsJobsListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// DataprocProjectsRegionsJobsListJobStateMatcherEnum - Optional. Specifies enumerated categories of jobs to list. (default = match ALL jobs).If filter is provided, jobStateMatcher will be ignored.
type DataprocProjectsRegionsJobsListJobStateMatcherEnum string

const (
	DataprocProjectsRegionsJobsListJobStateMatcherEnumAll       DataprocProjectsRegionsJobsListJobStateMatcherEnum = "ALL"
	DataprocProjectsRegionsJobsListJobStateMatcherEnumActive    DataprocProjectsRegionsJobsListJobStateMatcherEnum = "ACTIVE"
	DataprocProjectsRegionsJobsListJobStateMatcherEnumNonActive DataprocProjectsRegionsJobsListJobStateMatcherEnum = "NON_ACTIVE"
)

func (e DataprocProjectsRegionsJobsListJobStateMatcherEnum) ToPointer() *DataprocProjectsRegionsJobsListJobStateMatcherEnum {
	return &e
}

func (e *DataprocProjectsRegionsJobsListJobStateMatcherEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALL":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "NON_ACTIVE":
		*e = DataprocProjectsRegionsJobsListJobStateMatcherEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataprocProjectsRegionsJobsListJobStateMatcherEnum: %v", v)
	}
}

type DataprocProjectsRegionsJobsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Optional. If set, the returned jobs list includes only jobs that were submitted to the named cluster.
	ClusterName *string `queryParam:"style=form,explode=true,name=clusterName"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Optional. A filter constraining the jobs to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is status.state or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be either ACTIVE or NON_ACTIVE. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// Optional. Specifies enumerated categories of jobs to list. (default = match ALL jobs).If filter is provided, jobStateMatcher will be ignored.
	JobStateMatcher *DataprocProjectsRegionsJobsListJobStateMatcherEnum `queryParam:"style=form,explode=true,name=jobStateMatcher"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Optional. The number of results to return in each response.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Optional. The page token, returned by a previous call, to request the next page of results.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Required. The ID of the Google Cloud Platform project that the job belongs to.
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Required. The Dataproc region in which to handle the request.
	Region string `pathParam:"style=simple,explode=false,name=region"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DataprocProjectsRegionsJobsListResponse struct {
	ContentType string
	// Successful response
	ListJobsResponse *shared.ListJobsResponse
	StatusCode       int
	RawResponse      *http.Response
}
