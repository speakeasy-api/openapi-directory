/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PoolAddParameter - A pool in the Azure Batch service to add.
 */
public class PoolAddParameter {
    /**
     * Gets or sets the list of application packages to be installed on each compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationPackageReferences")
    public ApplicationPackageReference[] applicationPackageReferences;
    public PoolAddParameter withApplicationPackageReferences(ApplicationPackageReference[] applicationPackageReferences) {
        this.applicationPackageReferences = applicationPackageReferences;
        return this;
    }
    
    /**
     * Gets or sets a time interval for the desired autoscale evaluation period in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoScaleEvaluationInterval")
    public String autoScaleEvaluationInterval;
    public PoolAddParameter withAutoScaleEvaluationInterval(String autoScaleEvaluationInterval) {
        this.autoScaleEvaluationInterval = autoScaleEvaluationInterval;
        return this;
    }
    
    /**
     * Gets or sets a formula for the desired number of compute nodes in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoScaleFormula")
    public String autoScaleFormula;
    public PoolAddParameter withAutoScaleFormula(String autoScaleFormula) {
        this.autoScaleFormula = autoScaleFormula;
        return this;
    }
    
    /**
     * Gets or sets the list of certificates to be installed on each compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificateReferences")
    public CertificateReference[] certificateReferences;
    public PoolAddParameter withCertificateReferences(CertificateReference[] certificateReferences) {
        this.certificateReferences = certificateReferences;
        return this;
    }
    
    /**
     * Gets or sets the display name for the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public PoolAddParameter withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Gets or sets whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableAutoScale")
    public Boolean enableAutoScale;
    public PoolAddParameter withEnableAutoScale(Boolean enableAutoScale) {
        this.enableAutoScale = enableAutoScale;
        return this;
    }
    
    /**
     * Gets or sets whether the pool permits direct communication between nodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableInterNodeCommunication")
    public Boolean enableInterNodeCommunication;
    public PoolAddParameter withEnableInterNodeCommunication(Boolean enableInterNodeCommunication) {
        this.enableInterNodeCommunication = enableInterNodeCommunication;
        return this;
    }
    
    /**
     * Gets or sets a string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
     */
    @JsonProperty("id")
    public String id;
    public PoolAddParameter withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxTasksPerNode")
    public Integer maxTasksPerNode;
    public PoolAddParameter withMaxTasksPerNode(Integer maxTasksPerNode) {
        this.maxTasksPerNode = maxTasksPerNode;
        return this;
    }
    
    /**
     * Gets or sets a list of name-value pairs associated with the pool as metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public MetadataItem[] metadata;
    public PoolAddParameter withMetadata(MetadataItem[] metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
     */
    @JsonProperty("osFamily")
    public String osFamily;
    public PoolAddParameter withOsFamily(String osFamily) {
        this.osFamily = osFamily;
        return this;
    }
    
    /**
     * Gets or sets the timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resizeTimeout")
    public String resizeTimeout;
    public PoolAddParameter withResizeTimeout(String resizeTimeout) {
        this.resizeTimeout = resizeTimeout;
        return this;
    }
    
    /**
     * A task defined on a pool and run by compute nodes when they join the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTask")
    public StartTask startTask;
    public PoolAddParameter withStartTask(StartTask startTask) {
        this.startTask = startTask;
        return this;
    }
    
    /**
     * Gets or sets the desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetDedicated")
    public Integer targetDedicated;
    public PoolAddParameter withTargetDedicated(Integer targetDedicated) {
        this.targetDedicated = targetDedicated;
        return this;
    }
    
    /**
     * Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool. The default value is * which specifies the latest operating system version for the specified family.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetOSVersion")
    public String targetOSVersion;
    public PoolAddParameter withTargetOSVersion(String targetOSVersion) {
        this.targetOSVersion = targetOSVersion;
        return this;
    }
    
    /**
     * Specifies how tasks should be distributed across compute nodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskSchedulingPolicy")
    public TaskSchedulingPolicy taskSchedulingPolicy;
    public PoolAddParameter withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy) {
        this.taskSchedulingPolicy = taskSchedulingPolicy;
        return this;
    }
    
    /**
     * Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
     */
    @JsonProperty("vmSize")
    public String vmSize;
    public PoolAddParameter withVmSize(String vmSize) {
        this.vmSize = vmSize;
        return this;
    }
    
}
