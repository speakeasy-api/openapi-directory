/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SetpersonsawaySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  codeOauth?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  passwordOauth?: string;
}

export class SetpersonsawayRequest extends SpeakeasyBase {
  /**
   * ID of the Home you're interested in
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=home_id",
  })
  homeId: string;

  /**
   * If a person_id is specified, that person will be set as 'Away'. If no person_id is specified, the Home will be set as 'Empty'.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=person_id",
  })
  personId?: string;
}

export class SetpersonsawayResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  naWelcomePersonsAwayResponse?: shared.NAWelcomePersonsAwayResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
