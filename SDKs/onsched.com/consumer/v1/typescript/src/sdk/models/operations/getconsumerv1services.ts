/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetConsumerV1ServicesRequest extends SpeakeasyBase {
  /**
   * Search All Locations, default is false
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=allLocations",
  })
  allLocations?: boolean;

  /**
   * Filter by default service, default is false
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=defaultService",
  })
  defaultService?: boolean;

  /**
   * Page limit default 20, max 100
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * id of business location, defaults to primary business location
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locationId",
  })
  locationId?: string;

  /**
   * Filter by Name, supports Partial name search
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Starting row of page, default 0
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Filter by scope, Company, Location or All, default is All
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=scope" })
  scope?: shared.ServicesScopeEnum;

  /**
   * Filter by groupId
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=serviceGroupId",
  })
  serviceGroupId?: number;

  /**
   * Filter by ServiceId, using this parameter would ignore all other parameters
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=serviceId",
  })
  serviceId?: string;

  /**
   * Sort results in Descending Order, default true
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sortDescending",
  })
  sortDescending?: boolean;

  /**
   * Sort results using Natural Sort or Sorted alphabetically by Service Names, default is natural
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sortOrder",
  })
  sortOrder?: shared.ServiceSortOrderEnum;
}

export class GetConsumerV1ServicesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  serviceListViewModel?: shared.ServiceListViewModel;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
