// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateBadgeRequestBody struct {
	// The ID for the badge type. 1 for Gold, 2 for Silver,
	// 3 for Bronze.
	BadgeTypeID int64 `json:"badge_type_id"`
	// The name for the new badge.
	Name string `json:"name"`
}

type CreateBadgeRequest struct {
	Request *CreateBadgeRequestBody `request:"mediaType=application/json"`
}

type CreateBadge200ApplicationJSONBadge struct {
	AllowTitle        bool   `json:"allow_title"`
	AutoRevoke        bool   `json:"auto_revoke"`
	BadgeGroupingID   int64  `json:"badge_grouping_id"`
	BadgeTypeID       int64  `json:"badge_type_id"`
	Description       string `json:"description"`
	Enabled           bool   `json:"enabled"`
	GrantCount        int64  `json:"grant_count"`
	Icon              string `json:"icon"`
	ID                int64  `json:"id"`
	ImageURL          string `json:"image_url"`
	Listable          bool   `json:"listable"`
	LongDescription   string `json:"long_description"`
	ManuallyGrantable bool   `json:"manually_grantable"`
	MultipleGrant     bool   `json:"multiple_grant"`
	Name              string `json:"name"`
	Query             string `json:"query"`
	ShowPosts         bool   `json:"show_posts"`
	Slug              string `json:"slug"`
	System            bool   `json:"system"`
	TargetPosts       bool   `json:"target_posts"`
	Trigger           string `json:"trigger"`
}

type CreateBadge200ApplicationJSONBadgeTypes struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	SortOrder int64  `json:"sort_order"`
}

// CreateBadge200ApplicationJSON - success response
type CreateBadge200ApplicationJSON struct {
	Badge      CreateBadge200ApplicationJSONBadge        `json:"badge"`
	BadgeTypes []CreateBadge200ApplicationJSONBadgeTypes `json:"badge_types"`
}

type CreateBadgeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success response
	CreateBadge200ApplicationJSONObject *CreateBadge200ApplicationJSON
}
