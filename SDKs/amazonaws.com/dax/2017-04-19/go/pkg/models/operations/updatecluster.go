// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateClusterXAmzTargetEnum
type UpdateClusterXAmzTargetEnum string

const (
	UpdateClusterXAmzTargetEnumAmazonDaxv3UpdateCluster UpdateClusterXAmzTargetEnum = "AmazonDAXV3.UpdateCluster"
)

func (e *UpdateClusterXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonDAXV3.UpdateCluster":
		*e = UpdateClusterXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateClusterXAmzTargetEnum: %s", s)
	}
}

type UpdateClusterRequest struct {
	UpdateClusterRequest shared.UpdateClusterRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           UpdateClusterXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateClusterResponse struct {
	// ClusterNotFoundFault
	ClusterNotFoundFault interface{}
	ContentType          string
	// InvalidClusterStateFault
	InvalidClusterStateFault interface{}
	// InvalidParameterCombinationException
	InvalidParameterCombinationException interface{}
	// InvalidParameterGroupStateFault
	InvalidParameterGroupStateFault interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// ParameterGroupNotFoundFault
	ParameterGroupNotFoundFault interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceLinkedRoleNotFoundFault
	ServiceLinkedRoleNotFoundFault interface{}
	// Success
	UpdateClusterResponse *shared.UpdateClusterResponse
}
