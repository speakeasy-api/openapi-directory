/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExternalLinksCatalogGetBeezUPColumnsLink } from "./externallinkscataloggetbeezupcolumnslink";
import { LinksAddChannelCatalogLink } from "./linksaddchannelcataloglink";
import { LinksGetChannelCatalogFilterOperatorsLink } from "./linksgetchannelcatalogfilteroperatorslink";
import { LinksGetChannelCatalogsLink } from "./linksgetchannelcatalogslink";
import { Expose, Type } from "class-transformer";

/**
 * Indicates how global actions you can do like how to create a channel catalog, exclusion filter operators, etc...
 *
 * @remarks
 *
 */
export class ChannelCatalogListLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "add" })
  @Type(() => LinksAddChannelCatalogLink)
  add?: LinksAddChannelCatalogLink;

  @SpeakeasyMetadata()
  @Expose({ name: "beezUPColumns" })
  @Type(() => ExternalLinksCatalogGetBeezUPColumnsLink)
  beezUPColumns?: ExternalLinksCatalogGetBeezUPColumnsLink;

  @SpeakeasyMetadata()
  @Expose({ name: "filterOperators" })
  @Type(() => LinksGetChannelCatalogFilterOperatorsLink)
  filterOperators?: LinksGetChannelCatalogFilterOperatorsLink;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => LinksGetChannelCatalogsLink)
  self?: LinksGetChannelCatalogsLink;
}
