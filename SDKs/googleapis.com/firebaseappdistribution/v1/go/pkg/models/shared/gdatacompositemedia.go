// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GdataCompositeMediaReferenceTypeEnum - Describes what the field reference contains.
type GdataCompositeMediaReferenceTypeEnum string

const (
	GdataCompositeMediaReferenceTypeEnumPath                 GdataCompositeMediaReferenceTypeEnum = "PATH"
	GdataCompositeMediaReferenceTypeEnumBlobRef              GdataCompositeMediaReferenceTypeEnum = "BLOB_REF"
	GdataCompositeMediaReferenceTypeEnumInline               GdataCompositeMediaReferenceTypeEnum = "INLINE"
	GdataCompositeMediaReferenceTypeEnumBigstoreRef          GdataCompositeMediaReferenceTypeEnum = "BIGSTORE_REF"
	GdataCompositeMediaReferenceTypeEnumCosmoBinaryReference GdataCompositeMediaReferenceTypeEnum = "COSMO_BINARY_REFERENCE"
)

func (e *GdataCompositeMediaReferenceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PATH":
		fallthrough
	case "BLOB_REF":
		fallthrough
	case "INLINE":
		fallthrough
	case "BIGSTORE_REF":
		fallthrough
	case "COSMO_BINARY_REFERENCE":
		*e = GdataCompositeMediaReferenceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GdataCompositeMediaReferenceTypeEnum: %s", s)
	}
}

// GdataCompositeMedia - A sequence of media data references representing composite data. Introduced to support Bigstore composite objects. For details, visit http://go/bigstore-composites.
type GdataCompositeMedia struct {
	// Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef.
	BlobRef *string
	// Information to read/write to blobstore2.
	Blobstore2Info *GdataBlobstore2Info
	// A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field.
	CosmoBinaryReference *string
	// crc32.c hash for the payload.
	Crc32cHash *int64
	// Media data, set if reference_type is INLINE
	Inline *string
	// Size of the data, in bytes
	Length *string
	// MD5 hash for the payload.
	Md5Hash *string
	// This is a copy of the tech.blob.ObjectId proto, which could not be used directly here due to transitive closure issues with JavaScript support; see http://b/8801763.
	ObjectID *GdataObjectID
	// Path to the data, set if reference_type is PATH
	Path *string
	// Describes what the field reference contains.
	ReferenceType *GdataCompositeMediaReferenceTypeEnum
	// SHA-1 hash for the payload.
	Sha1Hash *string
}
