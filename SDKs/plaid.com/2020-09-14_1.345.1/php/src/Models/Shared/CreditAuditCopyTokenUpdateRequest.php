<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreditAuditCopyTokenUpdateRequest - CreditAuditCopyTokenUpdateRequest defines the request schema for `/credit/audit_copy_token/update`
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreditAuditCopyTokenUpdateRequest
{
    /**
     * The `audit_copy_token` you would like to update.
     * 
     * @var string $auditCopyToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('audit_copy_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $auditCopyToken;
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * Array of tokens which the specified Audit Copy Token will be updated with. The types of token supported are asset report token and employment report token. There can be at most 1 of each token type in the array.
     * 
     * @var array<string> $reportTokens
     */
	#[\JMS\Serializer\Annotation\SerializedName('report_tokens')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $reportTokens;
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * 
     * @var ?string $secret
     */
	#[\JMS\Serializer\Annotation\SerializedName('secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secret = null;
    
	public function __construct()
	{
		$this->auditCopyToken = "";
		$this->clientId = null;
		$this->reportTokens = [];
		$this->secret = null;
	}
}
