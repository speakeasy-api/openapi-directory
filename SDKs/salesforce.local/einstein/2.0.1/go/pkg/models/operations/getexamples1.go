// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetExamples1Security struct {
	BearerToken string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

// GetExamples1SourceEnum - return examples that were created in the dataset as feedback
type GetExamples1SourceEnum string

const (
	GetExamples1SourceEnumAll      GetExamples1SourceEnum = "all"
	GetExamples1SourceEnumFeedback GetExamples1SourceEnum = "feedback"
	GetExamples1SourceEnumUpload   GetExamples1SourceEnum = "upload"
)

func (e *GetExamples1SourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "feedback":
		fallthrough
	case "upload":
		*e = GetExamples1SourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetExamples1SourceEnum: %s", s)
	}
}

type GetExamples1Request struct {
	// Number of examples to return.
	Count *string `queryParam:"style=form,explode=true,name=count"`
	// Dataset Id
	DatasetID string `pathParam:"style=simple,explode=false,name=datasetId"`
	// Index of the example from which you want to start paging.
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// return examples that were created in the dataset as feedback
	Source *GetExamples1SourceEnum `queryParam:"style=form,explode=true,name=source"`
}

type GetExamples1Response struct {
	ContentType string
	// Success
	ExampleList *shared.ExampleList
	StatusCode  int
	RawResponse *http.Response
}
