"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GitHubDocumentCrawlProperties:
    r"""Provides the configuration information to include certain types of GitHub content. You can configure to index repository files only, or also include issues and pull requests, comments, and comment attachments."""
    
    crawl_issue: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlIssue'), 'exclude': lambda f: f is None }})  
    crawl_issue_comment: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlIssueComment'), 'exclude': lambda f: f is None }})  
    crawl_issue_comment_attachment: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlIssueCommentAttachment'), 'exclude': lambda f: f is None }})  
    crawl_pull_request: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlPullRequest'), 'exclude': lambda f: f is None }})  
    crawl_pull_request_comment: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlPullRequestComment'), 'exclude': lambda f: f is None }})  
    crawl_pull_request_comment_attachment: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlPullRequestCommentAttachment'), 'exclude': lambda f: f is None }})  
    crawl_repository_documents: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlRepositoryDocuments'), 'exclude': lambda f: f is None }})  
    