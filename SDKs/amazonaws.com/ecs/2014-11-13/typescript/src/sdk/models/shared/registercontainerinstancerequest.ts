/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attribute } from "./attribute";
import { PlatformDevice } from "./platformdevice";
import { Resource } from "./resource";
import { Tag } from "./tag";
import { VersionInfo } from "./versioninfo";
import { Expose, Type } from "class-transformer";

export class RegisterContainerInstanceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "attributes" })
  @Type(() => Attribute)
  attributes?: Attribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "cluster" })
  cluster?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "containerInstanceArn" })
  containerInstanceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceIdentityDocument" })
  instanceIdentityDocument?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceIdentityDocumentSignature" })
  instanceIdentityDocumentSignature?: string;

  @SpeakeasyMetadata({ elemType: PlatformDevice })
  @Expose({ name: "platformDevices" })
  @Type(() => PlatformDevice)
  platformDevices?: PlatformDevice[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata({ elemType: Resource })
  @Expose({ name: "totalResources" })
  @Type(() => Resource)
  totalResources?: Resource[];

  @SpeakeasyMetadata()
  @Expose({ name: "versionInfo" })
  @Type(() => VersionInfo)
  versionInfo?: VersionInfo;
}
