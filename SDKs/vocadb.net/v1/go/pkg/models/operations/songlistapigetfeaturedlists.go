// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SongListAPIGetFeaturedListsFeaturedCategoryEnum - Filter by a specific featured category. If empty, all categories are returned.
type SongListAPIGetFeaturedListsFeaturedCategoryEnum string

const (
	SongListAPIGetFeaturedListsFeaturedCategoryEnumNothing         SongListAPIGetFeaturedListsFeaturedCategoryEnum = "Nothing"
	SongListAPIGetFeaturedListsFeaturedCategoryEnumConcerts        SongListAPIGetFeaturedListsFeaturedCategoryEnum = "Concerts"
	SongListAPIGetFeaturedListsFeaturedCategoryEnumVocaloidRanking SongListAPIGetFeaturedListsFeaturedCategoryEnum = "VocaloidRanking"
	SongListAPIGetFeaturedListsFeaturedCategoryEnumPools           SongListAPIGetFeaturedListsFeaturedCategoryEnum = "Pools"
	SongListAPIGetFeaturedListsFeaturedCategoryEnumOther           SongListAPIGetFeaturedListsFeaturedCategoryEnum = "Other"
)

func (e *SongListAPIGetFeaturedListsFeaturedCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Concerts":
		fallthrough
	case "VocaloidRanking":
		fallthrough
	case "Pools":
		fallthrough
	case "Other":
		*e = SongListAPIGetFeaturedListsFeaturedCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListAPIGetFeaturedListsFeaturedCategoryEnum: %s", s)
	}
}

// SongListAPIGetFeaturedListsFieldsEnum - List of optional fields (optional).
type SongListAPIGetFeaturedListsFieldsEnum string

const (
	SongListAPIGetFeaturedListsFieldsEnumNone        SongListAPIGetFeaturedListsFieldsEnum = "None"
	SongListAPIGetFeaturedListsFieldsEnumDescription SongListAPIGetFeaturedListsFieldsEnum = "Description"
	SongListAPIGetFeaturedListsFieldsEnumEvents      SongListAPIGetFeaturedListsFieldsEnum = "Events"
	SongListAPIGetFeaturedListsFieldsEnumMainPicture SongListAPIGetFeaturedListsFieldsEnum = "MainPicture"
	SongListAPIGetFeaturedListsFieldsEnumTags        SongListAPIGetFeaturedListsFieldsEnum = "Tags"
)

func (e *SongListAPIGetFeaturedListsFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Description":
		fallthrough
	case "Events":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Tags":
		*e = SongListAPIGetFeaturedListsFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListAPIGetFeaturedListsFieldsEnum: %s", s)
	}
}

// SongListAPIGetFeaturedListsLangEnum - Content language preference (optional).
type SongListAPIGetFeaturedListsLangEnum string

const (
	SongListAPIGetFeaturedListsLangEnumDefault  SongListAPIGetFeaturedListsLangEnum = "Default"
	SongListAPIGetFeaturedListsLangEnumJapanese SongListAPIGetFeaturedListsLangEnum = "Japanese"
	SongListAPIGetFeaturedListsLangEnumRomaji   SongListAPIGetFeaturedListsLangEnum = "Romaji"
	SongListAPIGetFeaturedListsLangEnumEnglish  SongListAPIGetFeaturedListsLangEnum = "English"
)

func (e *SongListAPIGetFeaturedListsLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = SongListAPIGetFeaturedListsLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListAPIGetFeaturedListsLangEnum: %s", s)
	}
}

// SongListAPIGetFeaturedListsNameMatchModeEnum - Match mode for list name (optional, defaults to Auto).
type SongListAPIGetFeaturedListsNameMatchModeEnum string

const (
	SongListAPIGetFeaturedListsNameMatchModeEnumAuto       SongListAPIGetFeaturedListsNameMatchModeEnum = "Auto"
	SongListAPIGetFeaturedListsNameMatchModeEnumPartial    SongListAPIGetFeaturedListsNameMatchModeEnum = "Partial"
	SongListAPIGetFeaturedListsNameMatchModeEnumStartsWith SongListAPIGetFeaturedListsNameMatchModeEnum = "StartsWith"
	SongListAPIGetFeaturedListsNameMatchModeEnumExact      SongListAPIGetFeaturedListsNameMatchModeEnum = "Exact"
	SongListAPIGetFeaturedListsNameMatchModeEnumWords      SongListAPIGetFeaturedListsNameMatchModeEnum = "Words"
)

func (e *SongListAPIGetFeaturedListsNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = SongListAPIGetFeaturedListsNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListAPIGetFeaturedListsNameMatchModeEnum: %s", s)
	}
}

// SongListAPIGetFeaturedListsSortEnum - List sort rule. Possible values are Nothing, Date, CreateDate, Name.
type SongListAPIGetFeaturedListsSortEnum string

const (
	SongListAPIGetFeaturedListsSortEnumNone       SongListAPIGetFeaturedListsSortEnum = "None"
	SongListAPIGetFeaturedListsSortEnumName       SongListAPIGetFeaturedListsSortEnum = "Name"
	SongListAPIGetFeaturedListsSortEnumDate       SongListAPIGetFeaturedListsSortEnum = "Date"
	SongListAPIGetFeaturedListsSortEnumCreateDate SongListAPIGetFeaturedListsSortEnum = "CreateDate"
)

func (e *SongListAPIGetFeaturedListsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Name":
		fallthrough
	case "Date":
		fallthrough
	case "CreateDate":
		*e = SongListAPIGetFeaturedListsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListAPIGetFeaturedListsSortEnum: %s", s)
	}
}

type SongListAPIGetFeaturedListsQueryParams struct {
	// Include child tags, if the tags being filtered by have any.
	ChildTags *bool `queryParam:"style=form,explode=true,name=childTags"`
	// Filter by a specific featured category. If empty, all categories are returned.
	FeaturedCategory *SongListAPIGetFeaturedListsFeaturedCategoryEnum `queryParam:"style=form,explode=true,name=featuredCategory"`
	// List of optional fields (optional).
	Fields *SongListAPIGetFeaturedListsFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Whether to load total number of items (optional, default to false).
	GetTotalCount *bool `queryParam:"style=form,explode=true,name=getTotalCount"`
	// Content language preference (optional).
	Lang *SongListAPIGetFeaturedListsLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// Maximum number of results to be loaded (optional, defaults to 10, maximum of 50).
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Match mode for list name (optional, defaults to Auto).
	NameMatchMode *SongListAPIGetFeaturedListsNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Song list name query (optional).
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// List sort rule. Possible values are Nothing, Date, CreateDate, Name.
	Sort *SongListAPIGetFeaturedListsSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// First item to be retrieved (optional, defaults to 0).
	Start *int `queryParam:"style=form,explode=true,name=start"`
	// Filter by one or more tag Ids (optional).
	TagID []int `queryParam:"style=form,explode=true,name=tagId"`
}

type SongListAPIGetFeaturedListsRequest struct {
	QueryParams SongListAPIGetFeaturedListsQueryParams
}

type SongListAPIGetFeaturedListsResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultSongListForAPIContract *shared.PartialFindResultSongListForAPIContract
	StatusCode                              int
	RawResponse                             *http.Response
}
