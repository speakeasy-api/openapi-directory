"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListSIPTrunksRequest:
    
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'accountId', 'style': 'simple', 'explode': False }})
    r"""Unique Identifier of the Account. To retrieve SIP trunks assigned to a sub account, provide the account ID of the sub account in the as the value of this field. To retrieve SIP trunks of a master account, provide `me` as the value of this field."""  
    

@dataclasses.dataclass
class ListSIPTrunks200ApplicationXMLSIPTrunks:
    
    dnis: Optional[str] = dataclasses.field(default=None)
    r"""DNIS of the SIP trunk."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the sip trunk."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name assigned to the SIP trunk."""  
    number_prefix: Optional[str] = dataclasses.field(default=None)
    r"""Prefix of the SIP Connected Audio phone number."""  
    outbound_caller_id: Optional[str] = dataclasses.field(default=None)
    r"""Outbound caller Id assigned to the trunk."""  
    sip_server_address: Optional[str] = dataclasses.field(default=None)
    r"""IP address or domain of the SIP trunk."""  
    

@dataclasses.dataclass
class ListSIPTrunks200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    List of SIP Trunks returned.
    """
    
    sip_trunks: Optional[list[ListSIPTrunks200ApplicationXMLSIPTrunks]] = dataclasses.field(default=None)  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""Total number of records returned."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListSIPTrunks200ApplicationJSONSIPTrunks:
    
    dnis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnis'), 'exclude': lambda f: f is None }})
    r"""DNIS of the SIP trunk."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the sip trunk."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name assigned to the SIP trunk."""  
    number_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_prefix'), 'exclude': lambda f: f is None }})
    r"""Prefix of the SIP Connected Audio phone number."""  
    outbound_caller_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outbound_caller_id'), 'exclude': lambda f: f is None }})
    r"""Outbound caller Id assigned to the trunk."""  
    sip_server_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sip_server_address'), 'exclude': lambda f: f is None }})
    r"""IP address or domain of the SIP trunk."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListSIPTrunks200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    List of SIP Trunks returned.
    """
    
    sip_trunks: Optional[list[ListSIPTrunks200ApplicationJSONSIPTrunks]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sip_trunks'), 'exclude': lambda f: f is None }})  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""Total number of records returned."""  
    

@dataclasses.dataclass
class ListSIPTrunksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_sip_trunks_200_application_json_object: Optional[ListSIPTrunks200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    List of SIP Trunks returned.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    