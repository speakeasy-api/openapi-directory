/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateStageRequestBody {
    /**
     * Optional name that can be specified for the stage being created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CreateStageRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Array of participant token configuration objects to attach to the new stage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("participantTokenConfigurations")
    public org.openapis.openapi.models.shared.ParticipantTokenConfiguration[] participantTokenConfigurations;
    public CreateStageRequestBody withParticipantTokenConfigurations(org.openapis.openapi.models.shared.ParticipantTokenConfiguration[] participantTokenConfigurations) {
        this.participantTokenConfigurations = participantTokenConfigurations;
        return this;
    }
    
    /**
     * Tags attached to the resource. Array of maps, each of the form &lt;code&gt;string:string (key:value)&lt;/code&gt;. See &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"&gt;Tagging AWS Resources&lt;/a&gt; for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS has no constraints on tags beyond what is documented there. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public CreateStageRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
}
