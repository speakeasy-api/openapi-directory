"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listtransactionsresponse as shared_listtransactionsresponse
from ..shared import transactionstatusenum_enum as shared_transactionstatusenum_enum
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetAccountsAccountIDTransactionsRequest:
    
    account_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'accountId', 'style': 'simple', 'explode': False }})
    r"""The unique identifier for the account."""  
    filter_category: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[category]', 'style': 'form', 'explode': True }})
    r"""The category identifier for which to filter transactions.
    Both parent and child categories can be filtered through
    this parameter. Providing an invalid category identifier
    results in a `404` response.
    """  
    filter_since: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[since]', 'style': 'form', 'explode': True }})
    r"""The start date-time from which to return records,
    formatted according to rfc-3339. Not to be used for
    pagination purposes.
    """  
    filter_status: Optional[shared_transactionstatusenum_enum.TransactionStatusEnumEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[status]', 'style': 'form', 'explode': True }})
    r"""The transaction status for which to return records. This
    can be used to filter `HELD` transactions from those
    that are `SETTLED`.
    """  
    filter_tag: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[tag]', 'style': 'form', 'explode': True }})
    r"""A transaction tag to filter for which to return records.
    If the tag does not exist, zero records are returned and
    a success response is given.
    """  
    filter_until: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[until]', 'style': 'form', 'explode': True }})
    r"""The end date-time up to which to return records,
    formatted according to rfc-3339. Not to be used for
    pagination purposes.
    """  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[size]', 'style': 'form', 'explode': True }})
    r"""The number of records to return in each page."""  
    

@dataclasses.dataclass
class GetAccountsAccountIDTransactionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_transactions_response: Optional[shared_listtransactionsresponse.ListTransactionsResponse] = dataclasses.field(default=None)
    r"""Successful Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    