"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import label_download_type_enum as shared_label_download_type_enum
from ..shared import validate_address_enum as shared_validate_address_enum
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateLabelFromShipmentRequestBodyDisplaySchemeEnum(str, Enum):
    r"""The display format that the label should be shown in."""
    LABEL = 'label'
    QR_CODE = 'qr_code'
    LABEL_AND_QR_CODE = 'label_and_qr_code'

class CreateLabelFromShipmentRequestBodyLabelFormatEnum(str, Enum):
    r"""The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
    
    |Label Format  | Supported Carriers
    |--------------|-----------------------------------
    |`pdf`         | All carriers
    |`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`
    |`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`
    """
    PDF = 'pdf'
    PNG = 'png'
    ZPL = 'zpl'

class CreateLabelFromShipmentRequestBodyLabelLayoutEnum(str, Enum):
    r"""The available layouts (sizes) in which shipping labels can be downloaded.  The label format determines which sizes are supported.  `4x6` is supported for all label formats, whereas `letter` (8.5\\" x 11\\") is only supported for `pdf` format."""
    FOURX6 = '4x6'
    LETTER = 'letter'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateLabelFromShipmentRequestBody:
    r"""A purchase label without shipment request body"""
    
    display_scheme: Optional[CreateLabelFromShipmentRequestBodyDisplaySchemeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_scheme'), 'exclude': lambda f: f is None }})
    r"""The display format that the label should be shown in."""  
    label_download_type: Optional[shared_label_download_type_enum.LabelDownloadTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label_download_type'), 'exclude': lambda f: f is None }})  
    label_format: Optional[CreateLabelFromShipmentRequestBodyLabelFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label_format'), 'exclude': lambda f: f is None }})  
    label_layout: Optional[CreateLabelFromShipmentRequestBodyLabelLayoutEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label_layout'), 'exclude': lambda f: f is None }})  
    validate_address: Optional[shared_validate_address_enum.ValidateAddressEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validate_address'), 'exclude': lambda f: f is None }})  
    