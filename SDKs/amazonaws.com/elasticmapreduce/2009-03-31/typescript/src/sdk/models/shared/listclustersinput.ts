/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClusterStateEnum } from "./clusterstateenum";
import { Expose, Transform } from "class-transformer";

/**
 * This input determines how the ListClusters action filters the list of clusters that it returns.
 */
export class ListClustersInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClusterStates" })
  clusterStates?: ClusterStateEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Marker" })
  marker?: string;
}
