/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssociatedGateway } from "./associatedgateway";
import { DirectConnectGatewayAssociationStateEnum } from "./directconnectgatewayassociationstateenum";
import { RouteFilterPrefix } from "./routefilterprefix";
import { Expose, Type } from "class-transformer";

/**
 * Information about an association between a Direct Connect gateway and a virtual private gateway or transit gateway.
 */
export class DirectConnectGatewayAssociation extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: RouteFilterPrefix })
  @Expose({ name: "allowedPrefixesToDirectConnectGateway" })
  @Type(() => RouteFilterPrefix)
  allowedPrefixesToDirectConnectGateway?: RouteFilterPrefix[];

  @SpeakeasyMetadata()
  @Expose({ name: "associatedGateway" })
  @Type(() => AssociatedGateway)
  associatedGateway?: AssociatedGateway;

  @SpeakeasyMetadata()
  @Expose({ name: "associationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "associationState" })
  associationState?: DirectConnectGatewayAssociationStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "directConnectGatewayId" })
  directConnectGatewayId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "directConnectGatewayOwnerAccount" })
  directConnectGatewayOwnerAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stateChangeError" })
  stateChangeError?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualGatewayId" })
  virtualGatewayId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualGatewayOwnerAccount" })
  virtualGatewayOwnerAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualGatewayRegion" })
  virtualGatewayRegion?: string;
}
