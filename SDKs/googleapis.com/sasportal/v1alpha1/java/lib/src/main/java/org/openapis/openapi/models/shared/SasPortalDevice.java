/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SasPortalDevice - Successful response
 */
public class SasPortalDevice {
    /**
     * Information about the device configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeConfig")
    public SasPortalDeviceConfig activeConfig;

    public SasPortalDevice withActiveConfig(SasPortalDeviceConfig activeConfig) {
        this.activeConfig = activeConfig;
        return this;
    }
    
    /**
     * Output only. Current channels with scores.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentChannels")
    public SasPortalChannelWithScore[] currentChannels;

    public SasPortalDevice withCurrentChannels(SasPortalChannelWithScore[] currentChannels) {
        this.currentChannels = currentChannels;
        return this;
    }
    
    /**
     * Device data overridable by both SAS Portal and registration requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceMetadata")
    public SasPortalDeviceMetadata deviceMetadata;

    public SasPortalDevice withDeviceMetadata(SasPortalDeviceMetadata deviceMetadata) {
        this.deviceMetadata = deviceMetadata;
        return this;
    }
    
    /**
     * Device display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public SasPortalDevice withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The FCC identifier of the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fccId")
    public String fccId;

    public SasPortalDevice withFccId(String fccId) {
        this.fccId = fccId;
        return this;
    }
    
    /**
     * Only ranges that are within the allowlists are available for new grants.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grantRangeAllowlists")
    public SasPortalFrequencyRange[] grantRangeAllowlists;

    public SasPortalDevice withGrantRangeAllowlists(SasPortalFrequencyRange[] grantRangeAllowlists) {
        this.grantRangeAllowlists = grantRangeAllowlists;
        return this;
    }
    
    /**
     * Output only. Grants held by the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grants")
    public SasPortalDeviceGrant[] grants;

    public SasPortalDevice withGrants(SasPortalDeviceGrant[] grants) {
        this.grants = grants;
        return this;
    }
    
    /**
     * Output only. The resource path name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public SasPortalDevice withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Information about the device configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preloadedConfig")
    public SasPortalDeviceConfig preloadedConfig;

    public SasPortalDevice withPreloadedConfig(SasPortalDeviceConfig preloadedConfig) {
        this.preloadedConfig = preloadedConfig;
        return this;
    }
    
    /**
     * A serial number assigned to the device by the device manufacturer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumber")
    public String serialNumber;

    public SasPortalDevice withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * Output only. Device state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public SasPortalDeviceStateEnum state;

    public SasPortalDevice withState(SasPortalDeviceStateEnum state) {
        this.state = state;
        return this;
    }
    
    public SasPortalDevice(){}
}
