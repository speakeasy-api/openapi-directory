/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DmsSslModeValueEnum } from "./dmssslmodevalueenum";
import { DmsTransferSettings } from "./dmstransfersettings";
import { DocDbSettings } from "./docdbsettings";
import { DynamoDbSettings } from "./dynamodbsettings";
import { ElasticsearchSettings } from "./elasticsearchsettings";
import { GcpMySQLSettings } from "./gcpmysqlsettings";
import { IBMDb2Settings } from "./ibmdb2settings";
import { KafkaSettings } from "./kafkasettings";
import { KinesisSettings } from "./kinesissettings";
import { MicrosoftSQLServerSettings } from "./microsoftsqlserversettings";
import { MongoDbSettings } from "./mongodbsettings";
import { MySQLSettings } from "./mysqlsettings";
import { NeptuneSettings } from "./neptunesettings";
import { OracleSettings } from "./oraclesettings";
import { PostgreSQLSettings } from "./postgresqlsettings";
import { RedisSettings } from "./redissettings";
import { RedshiftSettings } from "./redshiftsettings";
import { ReplicationEndpointTypeValueEnum } from "./replicationendpointtypevalueenum";
import { S3Settings } from "./s3settings";
import { SybaseSettings } from "./sybasesettings";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * <p/>
 */
export class CreateEndpointMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateArn" })
  certificateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseName" })
  databaseName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DmsTransferSettings" })
  @Type(() => DmsTransferSettings)
  dmsTransferSettings?: DmsTransferSettings;

  /**
   * Provides information that defines a DocumentDB endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DocDbSettings" })
  @Type(() => DocDbSettings)
  docDbSettings?: DocDbSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "DynamoDbSettings" })
  @Type(() => DynamoDbSettings)
  dynamoDbSettings?: DynamoDbSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "ElasticsearchSettings" })
  @Type(() => ElasticsearchSettings)
  elasticsearchSettings?: ElasticsearchSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointIdentifier" })
  endpointIdentifier: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointType" })
  endpointType: ReplicationEndpointTypeValueEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EngineName" })
  engineName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExternalTableDefinition" })
  externalTableDefinition?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExtraConnectionAttributes" })
  extraConnectionAttributes?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GcpMySQLSettings" })
  @Type(() => GcpMySQLSettings)
  gcpMySQLSettings?: GcpMySQLSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "IBMDb2Settings" })
  @Type(() => IBMDb2Settings)
  ibmDb2Settings?: IBMDb2Settings;

  @SpeakeasyMetadata()
  @Expose({ name: "KafkaSettings" })
  @Type(() => KafkaSettings)
  kafkaSettings?: KafkaSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "KinesisSettings" })
  @Type(() => KinesisSettings)
  kinesisSettings?: KinesisSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MicrosoftSQLServerSettings" })
  @Type(() => MicrosoftSQLServerSettings)
  microsoftSQLServerSettings?: MicrosoftSQLServerSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "MongoDbSettings" })
  @Type(() => MongoDbSettings)
  mongoDbSettings?: MongoDbSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "MySQLSettings" })
  @Type(() => MySQLSettings)
  mySQLSettings?: MySQLSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "NeptuneSettings" })
  @Type(() => NeptuneSettings)
  neptuneSettings?: NeptuneSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "OracleSettings" })
  @Type(() => OracleSettings)
  oracleSettings?: OracleSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "Password" })
  password?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Port" })
  port?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PostgreSQLSettings" })
  @Type(() => PostgreSQLSettings)
  postgreSQLSettings?: PostgreSQLSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "RedisSettings" })
  @Type(() => RedisSettings)
  redisSettings?: RedisSettings;

  /**
   * Provides information that defines an Amazon Redshift endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RedshiftSettings" })
  @Type(() => RedshiftSettings)
  redshiftSettings?: RedshiftSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceIdentifier" })
  resourceIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "S3Settings" })
  @Type(() => S3Settings)
  s3Settings?: S3Settings;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerName" })
  serverName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceAccessRoleArn" })
  serviceAccessRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SslMode" })
  sslMode?: DmsSslModeValueEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SybaseSettings" })
  @Type(() => SybaseSettings)
  sybaseSettings?: SybaseSettings;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "Username" })
  username?: string;
}
