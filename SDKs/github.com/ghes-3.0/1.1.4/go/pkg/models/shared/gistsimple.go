// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type GistSimpleFiles struct {
	Content   *string `json:"content,omitempty"`
	Filename  *string `json:"filename,omitempty"`
	Language  *string `json:"language,omitempty"`
	RawURL    *string `json:"raw_url,omitempty"`
	Size      *int64  `json:"size,omitempty"`
	Truncated *bool   `json:"truncated,omitempty"`
	Type      *string `json:"type,omitempty"`
}

type GistSimpleGistFiles struct {
	Filename *string `json:"filename,omitempty"`
	Language *string `json:"language,omitempty"`
	RawURL   *string `json:"raw_url,omitempty"`
	Size     *int64  `json:"size,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// GistSimpleGist - Gist
type GistSimpleGist struct {
	Comments    int64                          `json:"comments"`
	CommentsURL string                         `json:"comments_url"`
	CommitsURL  string                         `json:"commits_url"`
	CreatedAt   time.Time                      `json:"created_at"`
	Description string                         `json:"description"`
	Files       map[string]GistSimpleGistFiles `json:"files"`
	Forks       []interface{}                  `json:"forks,omitempty"`
	ForksURL    string                         `json:"forks_url"`
	GitPullURL  string                         `json:"git_pull_url"`
	GitPushURL  string                         `json:"git_push_url"`
	History     []interface{}                  `json:"history,omitempty"`
	HTMLURL     string                         `json:"html_url"`
	ID          string                         `json:"id"`
	NodeID      string                         `json:"node_id"`
	// Simple User
	Owner     *NullableSimpleUser `json:"owner,omitempty"`
	Public    bool                `json:"public"`
	Truncated *bool               `json:"truncated,omitempty"`
	UpdatedAt time.Time           `json:"updated_at"`
	URL       string              `json:"url"`
	// Simple User
	User NullableSimpleUser `json:"user"`
}

type GistSimpleForks struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	ID        *string    `json:"id,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	URL       *string    `json:"url,omitempty"`
	// Public User
	User *PublicUser `json:"user,omitempty"`
}

// GistSimple - Gist Simple
type GistSimple struct {
	Comments    *int64                     `json:"comments,omitempty"`
	CommentsURL *string                    `json:"comments_url,omitempty"`
	CommitsURL  *string                    `json:"commits_url,omitempty"`
	CreatedAt   *string                    `json:"created_at,omitempty"`
	Description *string                    `json:"description,omitempty"`
	Files       map[string]GistSimpleFiles `json:"files,omitempty"`
	// Gist
	ForkOf     *GistSimpleGist   `json:"fork_of,omitempty"`
	Forks      []GistSimpleForks `json:"forks,omitempty"`
	ForksURL   *string           `json:"forks_url,omitempty"`
	GitPullURL *string           `json:"git_pull_url,omitempty"`
	GitPushURL *string           `json:"git_push_url,omitempty"`
	History    []GistHistory     `json:"history,omitempty"`
	HTMLURL    *string           `json:"html_url,omitempty"`
	ID         *string           `json:"id,omitempty"`
	NodeID     *string           `json:"node_id,omitempty"`
	// Simple User
	Owner     *SimpleUser `json:"owner,omitempty"`
	Public    *bool       `json:"public,omitempty"`
	Truncated *bool       `json:"truncated,omitempty"`
	UpdatedAt *string     `json:"updated_at,omitempty"`
	URL       *string     `json:"url,omitempty"`
	User      *string     `json:"user,omitempty"`
}
