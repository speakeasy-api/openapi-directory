/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomAction } from "./customaction";
import { StatefulEngineOptions } from "./statefulengineoptions";
import { StatefulRuleGroupReference } from "./statefulrulegroupreference";
import { StatelessRuleGroupReference } from "./statelessrulegroupreference";
import { Expose, Type } from "class-transformer";

/**
 * <p>The firewall policy defines the behavior of a firewall using a collection of stateless and stateful rule groups and other settings. You can use one firewall policy for multiple firewalls. </p> <p>This, along with <a>FirewallPolicyResponse</a>, define the policy. You can retrieve all objects for a firewall policy by calling <a>DescribeFirewallPolicy</a>.</p>
 */
export class FirewallPolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "StatefulDefaultActions" })
  statefulDefaultActions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "StatefulEngineOptions" })
  @Type(() => StatefulEngineOptions)
  statefulEngineOptions?: StatefulEngineOptions;

  @SpeakeasyMetadata({ elemType: StatefulRuleGroupReference })
  @Expose({ name: "StatefulRuleGroupReferences" })
  @Type(() => StatefulRuleGroupReference)
  statefulRuleGroupReferences?: StatefulRuleGroupReference[];

  @SpeakeasyMetadata({ elemType: CustomAction })
  @Expose({ name: "StatelessCustomActions" })
  @Type(() => CustomAction)
  statelessCustomActions?: CustomAction[];

  @SpeakeasyMetadata()
  @Expose({ name: "StatelessDefaultActions" })
  statelessDefaultActions: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "StatelessFragmentDefaultActions" })
  statelessFragmentDefaultActions: string[];

  @SpeakeasyMetadata({ elemType: StatelessRuleGroupReference })
  @Expose({ name: "StatelessRuleGroupReferences" })
  @Type(() => StatelessRuleGroupReference)
  statelessRuleGroupReferences?: StatelessRuleGroupReference[];
}
