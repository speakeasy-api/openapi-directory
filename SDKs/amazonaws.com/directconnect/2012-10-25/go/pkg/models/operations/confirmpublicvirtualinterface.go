// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConfirmPublicVirtualInterfaceXAmzTargetEnum
type ConfirmPublicVirtualInterfaceXAmzTargetEnum string

const (
	ConfirmPublicVirtualInterfaceXAmzTargetEnumOvertureServiceConfirmPublicVirtualInterface ConfirmPublicVirtualInterfaceXAmzTargetEnum = "OvertureService.ConfirmPublicVirtualInterface"
)

func (e *ConfirmPublicVirtualInterfaceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OvertureService.ConfirmPublicVirtualInterface":
		*e = ConfirmPublicVirtualInterfaceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfirmPublicVirtualInterfaceXAmzTargetEnum: %s", s)
	}
}

type ConfirmPublicVirtualInterfaceRequest struct {
	ConfirmPublicVirtualInterfaceRequest shared.ConfirmPublicVirtualInterfaceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           ConfirmPublicVirtualInterfaceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ConfirmPublicVirtualInterfaceResponse struct {
	// Success
	ConfirmPublicVirtualInterfaceResponse *shared.ConfirmPublicVirtualInterfaceResponse
	ContentType                           string
	// DirectConnectClientException
	DirectConnectClientException interface{}
	// DirectConnectServerException
	DirectConnectServerException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
}
