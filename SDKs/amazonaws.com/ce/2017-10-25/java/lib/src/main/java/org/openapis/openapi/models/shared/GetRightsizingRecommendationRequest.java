/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetRightsizingRecommendationRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Configuration")
    public RightsizingRecommendationConfiguration configuration;

    public GetRightsizingRecommendationRequest withConfiguration(RightsizingRecommendationConfiguration configuration) {
        this.configuration = configuration;
        return this;
    }
    
    /**
     * &lt;p&gt;Use &lt;code&gt;Expression&lt;/code&gt; to filter in various Cost Explorer APIs.&lt;/p&gt; &lt;p&gt;Not all &lt;code&gt;Expression&lt;/code&gt; types are supported in each API. Refer to the documentation for each specific API to see what is supported.&lt;/p&gt; &lt;p&gt;There are two patterns:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Simple dimension values.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;There are three types of simple dimension values: &lt;code&gt;CostCategories&lt;/code&gt;, &lt;code&gt;Tags&lt;/code&gt;, and &lt;code&gt;Dimensions&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Specify the &lt;code&gt;CostCategories&lt;/code&gt; field to define a filter that acts on Cost Categories.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Specify the &lt;code&gt;Tags&lt;/code&gt; field to define a filter that acts on Cost Allocation Tags.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Specify the &lt;code&gt;Dimensions&lt;/code&gt; field to define a filter that acts on the &lt;a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DimensionValues.html"&gt; &lt;code&gt;DimensionValues&lt;/code&gt; &lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For each filter type, you can set the dimension name and values for the filters that you plan to use.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For example, you can filter for &lt;code&gt;REGION==us-east-1 OR REGION==us-west-1&lt;/code&gt;. For &lt;code&gt;GetRightsizingRecommendation&lt;/code&gt;, the Region is a full name (for example, &lt;code&gt;REGION==US East (N. Virginia)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The corresponding &lt;code&gt;Expression&lt;/code&gt; for this example is as follows: &lt;code&gt;{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", \u201cus-west-1\u201d ] } }&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;As shown in the previous example, lists of dimension values are combined with &lt;code&gt;OR&lt;/code&gt; when applying the filter.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You can also set different match options to further control how the filter behaves. Not all APIs support match options. Refer to the documentation for each specific API to see what is supported.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For example, you can filter for linked account names that start with \u201ca\u201d.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The corresponding &lt;code&gt;Expression&lt;/code&gt; for this example is as follows: &lt;code&gt;{ "Dimensions": { "Key": "LINKED_ACCOUNT_NAME", "MatchOptions": [ "STARTS_WITH" ], "Values": [ "a" ] } }&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Compound &lt;code&gt;Expression&lt;/code&gt; types with logical operations.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;You can use multiple &lt;code&gt;Expression&lt;/code&gt; types and the logical operators &lt;code&gt;AND/OR/NOT&lt;/code&gt; to create a list of one or more &lt;code&gt;Expression&lt;/code&gt; objects. By doing this, you can filter by more advanced options.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For example, you can filter by &lt;code&gt;((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The corresponding &lt;code&gt;Expression&lt;/code&gt; for this example is as follows: &lt;code&gt;{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] } &lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Because each &lt;code&gt;Expression&lt;/code&gt; can have only one operator, the service returns an error if more than one is specified. The following example shows an &lt;code&gt;Expression&lt;/code&gt; object that creates an error: &lt;code&gt; { "And": [ ... ], "Dimensions": { "Key": "USAGE_TYPE", "Values": [ "DataTransfer" ] } } &lt;/code&gt; &lt;/p&gt; &lt;p&gt;The following is an example of the corresponding error message: &lt;code&gt;"Expression has more than one roots. Only one root operator is allowed for each expression: And, Or, Not, Dimensions, Tags, CostCategories"&lt;/code&gt; &lt;/p&gt; &lt;/note&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;For the &lt;code&gt;GetRightsizingRecommendation&lt;/code&gt; action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to &lt;code&gt;LINKED_ACCOUNT&lt;/code&gt;, &lt;code&gt;REGION&lt;/code&gt;, or &lt;code&gt;RIGHTSIZING_TYPE&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For the &lt;code&gt;GetReservationPurchaseRecommendation&lt;/code&gt; action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to &lt;code&gt;LINKED_ACCOUNT&lt;/code&gt;.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Filter")
    public Expression filter;

    public GetRightsizingRecommendationRequest withFilter(Expression filter) {
        this.filter = filter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextPageToken")
    public String nextPageToken;

    public GetRightsizingRecommendationRequest withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PageSize")
    public Long pageSize;

    public GetRightsizingRecommendationRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    @JsonProperty("Service")
    public String service;

    public GetRightsizingRecommendationRequest withService(String service) {
        this.service = service;
        return this;
    }
    
    public GetRightsizingRecommendationRequest(@JsonProperty("Service") String service) {
        this.service = service;
  }
}
