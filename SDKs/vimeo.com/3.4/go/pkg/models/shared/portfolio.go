// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PortfolioMetadataConnectionsVideos - Information about the videos contained within this portfolio.
type PortfolioMetadataConnectionsVideos struct {
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The total number of videos on this connection.
	Total float64 `json:"total"`
	// The API URI that resolves to the connection data.
	URI string `json:"uri"`
}

// PortfolioMetadataConnections - A list of resource URIs related to the album.
type PortfolioMetadataConnections struct {
	// Information about the videos contained within this portfolio.
	Videos PortfolioMetadataConnectionsVideos `json:"videos"`
}

// PortfolioMetadata - Metadata about the album.
type PortfolioMetadata struct {
	// A list of resource URIs related to the album.
	Connections PortfolioMetadataConnections `json:"connections"`
}

// PortfolioSortEnum - The default video sort order for the portfolio:
//
// Option descriptions:
//   - `alphabetical` - The default sort order is alphabetical by name.
//   - `clips` - The default sort order is video creation date.
//   - `modified` - The default sort order is the order in which the videos were modified.
//   - `recent` - The default sort order is the order in which the videos were added.
type PortfolioSortEnum string

const (
	PortfolioSortEnumAlphabetical PortfolioSortEnum = "alphabetical"
	PortfolioSortEnumClips        PortfolioSortEnum = "clips"
	PortfolioSortEnumModified     PortfolioSortEnum = "modified"
	PortfolioSortEnumRecent       PortfolioSortEnum = "recent"
)

func (e *PortfolioSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "clips":
		fallthrough
	case "modified":
		fallthrough
	case "recent":
		*e = PortfolioSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PortfolioSortEnum: %s", s)
	}
}

// Portfolio - The portfolio was returned.
type Portfolio struct {
	// The time in ISO 8601 format when the portfolio was created.
	CreatedTime string `json:"created_time"`
	// The portfolio's description.
	Description string `json:"description"`
	// The link to the portfolio.
	Link string `json:"link"`
	// Metadata about the album.
	Metadata PortfolioMetadata `json:"metadata"`
	// The time in ISO 8601 format when the portfolio's data was last modified.
	ModifiedTime string `json:"modified_time"`
	// The display name of the portfolio.
	Name string `json:"name"`
	// The default video sort order for the portfolio:
	//
	// Option descriptions:
	//  * `alphabetical` - The default sort order is alphabetical by name.
	//  * `clips` - The default sort order is video creation date.
	//  * `modified` - The default sort order is the order in which the videos were modified.
	//  * `recent` - The default sort order is the order in which the videos were added.
	//
	Sort PortfolioSortEnum `json:"sort"`
	// The canonical relative URI of the portfolio.
	URI string `json:"uri"`
}
