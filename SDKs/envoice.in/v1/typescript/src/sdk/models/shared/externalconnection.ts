/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ExternalConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccessToken" })
  accessToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AccessTokenSecret" })
  accessTokenSecret?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Data" })
  data?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExpiresOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ExternalUserId" })
  externalUserId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExternalUsername" })
  externalUsername?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Provider" })
  provider?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UserId" })
  userId?: number;
}
