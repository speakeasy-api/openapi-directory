// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum - Output only. Current state of the os update.
type GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum string

const (
	GoogleChromeManagementV1OsUpdateStatusUpdateStateEnumUpdateStateUnspecified    GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum = "UPDATE_STATE_UNSPECIFIED"
	GoogleChromeManagementV1OsUpdateStatusUpdateStateEnumOsImageDownloadNotStarted GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum = "OS_IMAGE_DOWNLOAD_NOT_STARTED"
	GoogleChromeManagementV1OsUpdateStatusUpdateStateEnumOsImageDownloadInProgress GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum = "OS_IMAGE_DOWNLOAD_IN_PROGRESS"
	GoogleChromeManagementV1OsUpdateStatusUpdateStateEnumOsUpdateNeedReboot        GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum = "OS_UPDATE_NEED_REBOOT"
)

func (e GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum) ToPointer() *GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum {
	return &e
}

func (e *GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UPDATE_STATE_UNSPECIFIED":
		fallthrough
	case "OS_IMAGE_DOWNLOAD_NOT_STARTED":
		fallthrough
	case "OS_IMAGE_DOWNLOAD_IN_PROGRESS":
		fallthrough
	case "OS_UPDATE_NEED_REBOOT":
		*e = GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum: %v", v)
	}
}

// GoogleChromeManagementV1OsUpdateStatus - Contains information regarding the current OS update status. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceOsUpdateStatus](https://chromeenterprise.google/policies/#ReportDeviceOsUpdateStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_OS_REPORT
type GoogleChromeManagementV1OsUpdateStatus struct {
	// Output only. Timestamp of the last reboot.
	LastRebootTime *string `json:"lastRebootTime,omitempty"`
	// Output only. Timestamp of the last update check.
	LastUpdateCheckTime *string `json:"lastUpdateCheckTime,omitempty"`
	// Output only. Timestamp of the last successful update.
	LastUpdateTime *string `json:"lastUpdateTime,omitempty"`
	// Output only. New platform version of the os image being downloaded and applied. It is only set when update status is OS_IMAGE_DOWNLOAD_IN_PROGRESS or OS_UPDATE_NEED_REBOOT. Note this could be a dummy "0.0.0.0" for OS_UPDATE_NEED_REBOOT status for some edge cases, e.g. update engine is restarted without a reboot.
	NewPlatformVersion *string `json:"newPlatformVersion,omitempty"`
	// Output only. New requested platform version from the pending updated kiosk app.
	NewRequestedPlatformVersion *string `json:"newRequestedPlatformVersion,omitempty"`
	// Output only. Current state of the os update.
	UpdateState *GoogleChromeManagementV1OsUpdateStatusUpdateStateEnum `json:"updateState,omitempty"`
}
