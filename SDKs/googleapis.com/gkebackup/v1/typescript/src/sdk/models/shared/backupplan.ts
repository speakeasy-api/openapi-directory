/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BackupConfig } from "./backupconfig";
import { RetentionPolicy } from "./retentionpolicy";
import { Schedule } from "./schedule";
import { Expose, Type } from "class-transformer";

/**
 * Defines the configuration and scheduling for a "line" of Backups.
 */
export class BackupPlan extends SpeakeasyBase {
  /**
   * BackupConfig defines the configuration of Backups created via this BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backupConfig" })
  @Type(() => BackupConfig)
  backupConfig?: BackupConfig;

  /**
   * Schedule defines scheduling parameters for automatically creating Backups via this BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backupSchedule" })
  @Type(() => Schedule)
  backupSchedule?: Schedule;

  /**
   * Required. Immutable. The source cluster from which Backups will be created via this BackupPlan. Valid formats: - `projects/* /locations/* /clusters/*` - `projects/* /zones/* /clusters/*`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cluster" })
  cluster?: string;

  /**
   * Output only. The timestamp when this BackupPlan resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * This flag indicates whether this BackupPlan has been deactivated. Setting this field to True locks the BackupPlan such that no further updates will be allowed (except deletes), including the deactivated field itself. It also prevents any new Backups from being created via this BackupPlan (including scheduled Backups). Default: False
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deactivated" })
  deactivated?: boolean;

  /**
   * User specified descriptive string for this BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from overwriting each other. It is strongly suggested that systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackupPlan`, and systems are expected to put that etag in the request to `UpdateBackupPlan` or `DeleteBackupPlan` to ensure that their change will be applied to the same version of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * A set of custom labels supplied by user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Output only. The full name of the BackupPlan resource. Format: `projects/* /locations/* /backupPlans/*`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protectedPodCount" })
  protectedPodCount?: number;

  /**
   * RetentionPolicy defines a Backup retention policy for a BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retentionPolicy" })
  @Type(() => RetentionPolicy)
  retentionPolicy?: RetentionPolicy;

  /**
   * Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  /**
   * Output only. The timestamp when this BackupPlan resource was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * Defines the configuration and scheduling for a "line" of Backups.
 */
export class BackupPlanInput extends SpeakeasyBase {
  /**
   * BackupConfig defines the configuration of Backups created via this BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backupConfig" })
  @Type(() => BackupConfig)
  backupConfig?: BackupConfig;

  /**
   * Schedule defines scheduling parameters for automatically creating Backups via this BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backupSchedule" })
  @Type(() => Schedule)
  backupSchedule?: Schedule;

  /**
   * Required. Immutable. The source cluster from which Backups will be created via this BackupPlan. Valid formats: - `projects/* /locations/* /clusters/*` - `projects/* /zones/* /clusters/*`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cluster" })
  cluster?: string;

  /**
   * This flag indicates whether this BackupPlan has been deactivated. Setting this field to True locks the BackupPlan such that no further updates will be allowed (except deletes), including the deactivated field itself. It also prevents any new Backups from being created via this BackupPlan (including scheduled Backups). Default: False
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deactivated" })
  deactivated?: boolean;

  /**
   * User specified descriptive string for this BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * A set of custom labels supplied by user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * RetentionPolicy defines a Backup retention policy for a BackupPlan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retentionPolicy" })
  @Type(() => RetentionPolicy)
  retentionPolicy?: RetentionPolicy;
}
