"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import alarmstatename_enum as shared_alarmstatename_enum
from ..shared import customeraction as shared_customeraction
from ..shared import ruleevaluation as shared_ruleevaluation
from ..shared import systemevent as shared_systemevent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AlarmState:
    r"""Contains information about the current state of the alarm."""
    
    customer_action: Optional[shared_customeraction.CustomerAction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerAction'), 'exclude': lambda f: f is None }})  
    rule_evaluation: Optional[shared_ruleevaluation.RuleEvaluation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ruleEvaluation'), 'exclude': lambda f: f is None }})  
    state_name: Optional[shared_alarmstatename_enum.AlarmStateNameEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateName'), 'exclude': lambda f: f is None }})  
    system_event: Optional[shared_systemevent.SystemEvent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('systemEvent'), 'exclude': lambda f: f is None }})  
    