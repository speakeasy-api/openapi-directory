// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETTagQueueActionEnum
type GETTagQueueActionEnum string

const (
	GETTagQueueActionEnumTagQueue GETTagQueueActionEnum = "TagQueue"
)

func (e GETTagQueueActionEnum) ToPointer() *GETTagQueueActionEnum {
	return &e
}

func (e *GETTagQueueActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TagQueue":
		*e = GETTagQueueActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETTagQueueActionEnum: %v", v)
	}
}

// GETTagQueueVersionEnum
type GETTagQueueVersionEnum string

const (
	GETTagQueueVersionEnumTwoThousandAndTwelve1105 GETTagQueueVersionEnum = "2012-11-05"
)

func (e GETTagQueueVersionEnum) ToPointer() *GETTagQueueVersionEnum {
	return &e
}

func (e *GETTagQueueVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-11-05":
		*e = GETTagQueueVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETTagQueueVersionEnum: %v", v)
	}
}

type GETTagQueueRequest struct {
	// The AWS account number
	AccountNumber int64                 `pathParam:"style=simple,explode=false,name=AccountNumber"`
	Action        GETTagQueueActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the queue
	QueueName string `pathParam:"style=simple,explode=false,name=QueueName"`
	// The list of tags to be added to the specified queue.
	Tags              map[string]string      `queryParam:"style=form,explode=true,name=Tags"`
	Version           GETTagQueueVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETTagQueueResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
