/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Status of event.
 */
export enum PostExternalEventsRequestBodyStatusEnum {
  Success = "success",
  Failure = "failure",
  PartialFailure = "partial_failure",
  InProgress = "in_progress",
  Skipped = "skipped",
}

export class PostExternalEventsRequestBody extends SpeakeasyBase {
  /**
   * Event body
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=body" })
  body: string;

  /**
   * Status of event.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=status" })
  status: PostExternalEventsRequestBodyStatusEnum;
}

export class PostExternalEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The ExternalEvents object.
   */
  @SpeakeasyMetadata()
  externalEventEntity?: shared.ExternalEventEntity;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
