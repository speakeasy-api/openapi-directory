/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaskCategory - Created
 */
public class TaskCategory {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archived")
    public Boolean archived;

    public TaskCategory withArchived(Boolean archived) {
        this.archived = archived;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;

    public TaskCategory withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public TaskCategory withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicates that the category is a system wide (pre-defined) category
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_global")
    public String isGlobal;

    public TaskCategory withIsGlobal(String isGlobal) {
        this.isGlobal = isGlobal;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public TaskCategory withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("practice_group")
    public Long practiceGroup;

    public TaskCategory withPracticeGroup(Long practiceGroup) {
        this.practiceGroup = practiceGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;

    public TaskCategory withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public TaskCategory(@JsonProperty("name") String name, @JsonProperty("practice_group") Long practiceGroup) {
        this.name = name;
        this.practiceGroup = practiceGroup;
  }
}
