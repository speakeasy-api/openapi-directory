// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkApplianceVpnSiteToSiteVpnRequest struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

type GetNetworkApplianceVpnSiteToSiteVpn200ApplicationJSONHubs struct {
	// The network ID of the hub.
	HubID *string `json:"hubId,omitempty"`
	// Indicates whether default route traffic should be sent to this hub.
	UseDefaultRoute *bool `json:"useDefaultRoute,omitempty"`
}

type GetNetworkApplianceVpnSiteToSiteVpn200ApplicationJSONSubnets struct {
	// The CIDR notation subnet used within the VPN
	LocalSubnet *string `json:"localSubnet,omitempty"`
	// Indicates the presence of the subnet in the VPN
	UseVpn *bool `json:"useVpn,omitempty"`
}

// GetNetworkApplianceVpnSiteToSiteVpn200ApplicationJSON - Successful operation
type GetNetworkApplianceVpnSiteToSiteVpn200ApplicationJSON struct {
	// The list of VPN hubs, in order of preference.
	Hubs []GetNetworkApplianceVpnSiteToSiteVpn200ApplicationJSONHubs `json:"hubs,omitempty"`
	// The site-to-site VPN mode.
	Mode *string `json:"mode,omitempty"`
	// The list of subnets and their VPN presence.
	Subnets []GetNetworkApplianceVpnSiteToSiteVpn200ApplicationJSONSubnets `json:"subnets,omitempty"`
}

type GetNetworkApplianceVpnSiteToSiteVpnResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkApplianceVpnSiteToSiteVpn200ApplicationJSONObject *GetNetworkApplianceVpnSiteToSiteVpn200ApplicationJSON
}
