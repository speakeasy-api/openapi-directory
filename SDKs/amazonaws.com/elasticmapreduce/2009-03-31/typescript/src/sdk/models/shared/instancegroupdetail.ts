/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstanceGroupStateEnum } from "./instancegroupstateenum";
import { InstanceRoleTypeEnum } from "./instanceroletypeenum";
import { MarketTypeEnum } from "./markettypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Detailed information about an instance group.
 */
export class InstanceGroupDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BidPrice" })
  bidPrice?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomAmiId" })
  customAmiId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceGroupId" })
  instanceGroupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceRequestCount" })
  instanceRequestCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceRole" })
  instanceRole: InstanceRoleTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceRunningCount" })
  instanceRunningCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceType" })
  instanceType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastStateChangeReason" })
  lastStateChangeReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Market" })
  market: MarketTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReadyDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  readyDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state: InstanceGroupStateEnum;
}
