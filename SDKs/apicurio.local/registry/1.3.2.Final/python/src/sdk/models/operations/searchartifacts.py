"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import artifactsearchresults as shared_artifactsearchresults
from ..shared import error as shared_error
from enum import Enum
from typing import Optional

class SearchArtifactsOrderEnum(str, Enum):
    r"""Sort order, ascending or descending."""
    ASC = 'asc'
    DESC = 'desc'

class SearchArtifactsOverEnum(str, Enum):
    r"""What fields to search."""
    EVERYTHING = 'everything'
    NAME = 'name'
    DESCRIPTION = 'description'
    LABELS = 'labels'


@dataclasses.dataclass
class SearchArtifactsRequest:
    
    limit: int = dataclasses.field(metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The number of artifacts to return."""  
    offset: int = dataclasses.field(metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""The number of artifacts to skip before starting to collect the result set."""  
    order: Optional[SearchArtifactsOrderEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""Sort order, ascending or descending."""  
    over: Optional[SearchArtifactsOverEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'over', 'style': 'form', 'explode': True }})
    r"""What fields to search."""  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""The text to search."""  
    

@dataclasses.dataclass
class SearchArtifactsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    artifact_search_results: Optional[shared_artifactsearchresults.ArtifactSearchResults] = dataclasses.field(default=None)
    r"""On a successful response, returns a result set of artifacts - one for each artifact
    in the registry that matches the criteria.
    """  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Common response for all operations that can fail with an unexpected server error."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    