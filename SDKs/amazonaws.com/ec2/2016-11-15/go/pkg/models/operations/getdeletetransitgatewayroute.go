// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteTransitGatewayRouteActionEnum
type GETDeleteTransitGatewayRouteActionEnum string

const (
	GETDeleteTransitGatewayRouteActionEnumDeleteTransitGatewayRoute GETDeleteTransitGatewayRouteActionEnum = "DeleteTransitGatewayRoute"
)

func (e *GETDeleteTransitGatewayRouteActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteTransitGatewayRoute":
		*e = GETDeleteTransitGatewayRouteActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTransitGatewayRouteActionEnum: %s", s)
	}
}

// GETDeleteTransitGatewayRouteVersionEnum
type GETDeleteTransitGatewayRouteVersionEnum string

const (
	GETDeleteTransitGatewayRouteVersionEnumTwoThousandAndSixteen1115 GETDeleteTransitGatewayRouteVersionEnum = "2016-11-15"
)

func (e *GETDeleteTransitGatewayRouteVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteTransitGatewayRouteVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTransitGatewayRouteVersionEnum: %s", s)
	}
}

type GETDeleteTransitGatewayRouteQueryParams struct {
	Action GETDeleteTransitGatewayRouteActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The CIDR range for the route. This must match the CIDR for the route exactly.
	DestinationCidrBlock string `queryParam:"style=form,explode=true,name=DestinationCidrBlock"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the transit gateway route table.
	TransitGatewayRouteTableID string                                  `queryParam:"style=form,explode=true,name=TransitGatewayRouteTableId"`
	Version                    GETDeleteTransitGatewayRouteVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteTransitGatewayRouteHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteTransitGatewayRouteRequest struct {
	QueryParams GETDeleteTransitGatewayRouteQueryParams
	Headers     GETDeleteTransitGatewayRouteHeaders
}

type GETDeleteTransitGatewayRouteResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
