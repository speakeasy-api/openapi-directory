/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * [Output Only] State of the secure tag, either `EFFECTIVE` or `INEFFECTIVE`. A secure tag is `INEFFECTIVE` when it is deleted or its network is deleted.
 */
export enum FirewallPolicyRuleSecureTagStateEnum {
  Effective = "EFFECTIVE",
  Ineffective = "INEFFECTIVE",
}

export class FirewallPolicyRuleSecureTag extends SpeakeasyBase {
  /**
   * Name of the secure tag, created with TagManager's TagValue API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * [Output Only] State of the secure tag, either `EFFECTIVE` or `INEFFECTIVE`. A secure tag is `INEFFECTIVE` when it is deleted or its network is deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: FirewallPolicyRuleSecureTagStateEnum;
}
