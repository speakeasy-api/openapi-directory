<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class InstanceGroupManagerResizeRequests 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Cancels the specified resize request and removes it from the queue. Cancelled resize request does no longer wait for the resources to be provisioned. Cancel is only possible for requests that are accepted in the queue.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelResponse
     */
	public function computeInstanceGroupManagerResizeRequestsCancel(
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resizeRequests/{resizeRequest}/cancel', \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsCancelResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->operation = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Operation', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Deletes the specified, inactive resize request. Requests that are still active cannot be deleted. Deleting request does not delete instances that were provisioned previously.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteResponse
     */
	public function computeInstanceGroupManagerResizeRequestsDelete(
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resizeRequests/{resizeRequest}', \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->operation = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Operation', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Returns all of the details about the specified resize request.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetResponse
     */
	public function computeInstanceGroupManagerResizeRequestsGet(
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resizeRequests/{resizeRequest}', \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->instanceGroupManagerResizeRequest = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\InstanceGroupManagerResizeRequest', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Creates a new resize request that starts provisioning VMs immediately or queues VM creation.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertResponse
     */
	public function computeInstanceGroupManagerResizeRequestsInsert(
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resizeRequests', \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "instanceGroupManagerResizeRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsInsertResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->operation = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Operation', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieves a list of resize requests that are contained in the managed instance group.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListResponse
     */
	public function computeInstanceGroupManagerResizeRequestsList(
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/projects/{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resizeRequests', \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ComputeInstanceGroupManagerResizeRequestsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->instanceGroupManagerResizeRequestsListResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\InstanceGroupManagerResizeRequestsListResponse', 'json');
            }
        }

        return $response;
    }
}