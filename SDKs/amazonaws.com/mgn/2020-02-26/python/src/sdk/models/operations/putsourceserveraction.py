"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import sourceserveractiondocument as shared_sourceserveractiondocument
from ..shared import ssmexternalparameter as shared_ssmexternalparameter
from ..shared import ssmparameterstoreparameter as shared_ssmparameterstoreparameter
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class PutSourceServerActionRequestBodyCategoryEnum(str, Enum):
    r"""Source server post migration custom action category."""
    DISASTER_RECOVERY = 'DISASTER_RECOVERY'
    OPERATING_SYSTEM = 'OPERATING_SYSTEM'
    LICENSE_AND_SUBSCRIPTION = 'LICENSE_AND_SUBSCRIPTION'
    VALIDATION = 'VALIDATION'
    OBSERVABILITY = 'OBSERVABILITY'
    SECURITY = 'SECURITY'
    NETWORKING = 'NETWORKING'
    CONFIGURATION = 'CONFIGURATION'
    BACKUP = 'BACKUP'
    OTHER = 'OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutSourceServerActionRequestBody:
    
    action_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionID') }})
    r"""Source server post migration custom action ID."""  
    action_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionName') }})
    r"""Source server post migration custom action name."""  
    document_identifier: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentIdentifier') }})
    r"""Source server post migration custom action document identifier."""  
    order: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('order') }})
    r"""Source server post migration custom action order."""  
    source_server_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceServerID') }})
    r"""Source server ID."""  
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""Source server post migration custom action active status."""  
    category: Optional[PutSourceServerActionRequestBodyCategoryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""Source server post migration custom action category."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Source server post migration custom action description."""  
    document_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentVersion'), 'exclude': lambda f: f is None }})
    r"""Source server post migration custom action document version."""  
    external_parameters: Optional[dict[str, shared_ssmexternalparameter.SsmExternalParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalParameters'), 'exclude': lambda f: f is None }})
    r"""Source server post migration custom action external parameters."""  
    must_succeed_for_cutover: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mustSucceedForCutover'), 'exclude': lambda f: f is None }})
    r"""Source server post migration custom action must succeed for cutover."""  
    parameters: Optional[dict[str, list[shared_ssmparameterstoreparameter.SsmParameterStoreParameter]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""Source server post migration custom action parameters."""  
    timeout_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeoutSeconds'), 'exclude': lambda f: f is None }})
    r"""Source server post migration custom action timeout in seconds."""  
    

@dataclasses.dataclass
class PutSourceServerActionRequest:
    
    request_body: PutSourceServerActionRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class PutSourceServerActionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    conflict_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ConflictException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceNotFoundException"""  
    source_server_action_document: Optional[shared_sourceserveractiondocument.SourceServerActionDocument] = dataclasses.field(default=None)
    r"""Success"""  
    uninitialized_account_exception: Optional[Any] = dataclasses.field(default=None)
    r"""UninitializedAccountException"""  
    validation_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ValidationException"""  
    