// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PermissionPermissionPolicyEnum - The permissions' policy
type PermissionPermissionPolicyEnum string

const (
	PermissionPermissionPolicyEnumAllow PermissionPermissionPolicyEnum = "Allow"
	PermissionPermissionPolicyEnumDeny  PermissionPermissionPolicyEnum = "Deny"
)

func (e PermissionPermissionPolicyEnum) ToPointer() *PermissionPermissionPolicyEnum {
	return &e
}

func (e *PermissionPermissionPolicyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Allow":
		fallthrough
	case "Deny":
		*e = PermissionPermissionPolicyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PermissionPermissionPolicyEnum: %v", v)
	}
}

// PermissionPermissionVerbsEnum - The permissions' verbs
type PermissionPermissionVerbsEnum string

const (
	PermissionPermissionVerbsEnumRead   PermissionPermissionVerbsEnum = "Read"
	PermissionPermissionVerbsEnumWrite  PermissionPermissionVerbsEnum = "Write"
	PermissionPermissionVerbsEnumDelete PermissionPermissionVerbsEnum = "Delete"
	PermissionPermissionVerbsEnumAll    PermissionPermissionVerbsEnum = "All"
)

func (e PermissionPermissionVerbsEnum) ToPointer() *PermissionPermissionVerbsEnum {
	return &e
}

func (e *PermissionPermissionVerbsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Read":
		fallthrough
	case "Write":
		fallthrough
	case "Delete":
		fallthrough
	case "All":
		*e = PermissionPermissionVerbsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PermissionPermissionVerbsEnum: %v", v)
	}
}

type PermissionPermission struct {
	// The permissions' description
	Description *string `json:"Description,omitempty"`
	// The permissions' expression
	Expression *string `json:"Expression,omitempty"`
	// The permissions' name
	Name *string `json:"Name,omitempty"`
	// The permissions' policy
	Policy *PermissionPermissionPolicyEnum `json:"Policy,omitempty"`
	// The permissions' verbs
	Verbs *PermissionPermissionVerbsEnum `json:"Verbs,omitempty"`
}

// Permission - The permission object.
type Permission struct {
	Permission *PermissionPermission `json:"Permission,omitempty"`
}
