/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Assignee, AssigneeInput } from "./assignee";
import { CollectionTag, CollectionTagInput } from "./collectiontag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Priority of the ticket
 */
export enum TicketPriorityEnum {
  Low = "low",
  Normal = "normal",
  High = "high",
  Urgent = "urgent",
}

export class TicketInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AssigneeInput })
  @Expose({ name: "assignees" })
  @Type(() => AssigneeInput)
  assignees?: AssigneeInput[];

  /**
   * The ticket's description. HTML version of description is mapped if supported by the third-party platform
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Due date of the ticket
   */
  @SpeakeasyMetadata()
  @Expose({ name: "due_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueDate?: Date;

  /**
   * The ticket's parent ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_id" })
  parentId?: string;

  /**
   * Priority of the ticket
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: TicketPriorityEnum;

  /**
   * The current status of the ticket. Possible values include: open, in_progress, closed, or - in cases where there is no clear mapping - the original value passed through.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Subject of the ticket
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: string;

  @SpeakeasyMetadata({ elemType: CollectionTagInput })
  @Expose({ name: "tags" })
  @Type(() => CollectionTagInput)
  tags?: CollectionTagInput[];

  /**
   * The ticket's type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class Ticket extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Assignee })
  @Expose({ name: "assignees" })
  @Type(() => Assignee)
  assignees?: Assignee[];

  /**
   * The ticket's collection ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collection_id" })
  collectionId?: string;

  /**
   * When the ticket was completed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedAt?: Date;

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * The ticket's description. HTML version of description is mapped if supported by the third-party platform
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Due date of the ticket
   */
  @SpeakeasyMetadata()
  @Expose({ name: "due_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueDate?: Date;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The ticket's parent ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_id" })
  parentId?: string;

  /**
   * Priority of the ticket
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: TicketPriorityEnum;

  /**
   * The current status of the ticket. Possible values include: open, in_progress, closed, or - in cases where there is no clear mapping - the original value passed through.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Subject of the ticket
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: string;

  @SpeakeasyMetadata({ elemType: CollectionTag })
  @Expose({ name: "tags" })
  @Type(() => CollectionTag)
  tags?: CollectionTag[];

  /**
   * The ticket's type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
