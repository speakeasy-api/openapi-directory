// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnvironmentHealthStatusEnum string

const (
	EnvironmentHealthStatusEnumNoData    EnvironmentHealthStatusEnum = "NoData"
	EnvironmentHealthStatusEnumUnknown   EnvironmentHealthStatusEnum = "Unknown"
	EnvironmentHealthStatusEnumPending   EnvironmentHealthStatusEnum = "Pending"
	EnvironmentHealthStatusEnumOk        EnvironmentHealthStatusEnum = "Ok"
	EnvironmentHealthStatusEnumInfo      EnvironmentHealthStatusEnum = "Info"
	EnvironmentHealthStatusEnumWarning   EnvironmentHealthStatusEnum = "Warning"
	EnvironmentHealthStatusEnumDegraded  EnvironmentHealthStatusEnum = "Degraded"
	EnvironmentHealthStatusEnumSevere    EnvironmentHealthStatusEnum = "Severe"
	EnvironmentHealthStatusEnumSuspended EnvironmentHealthStatusEnum = "Suspended"
)

func (e *EnvironmentHealthStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NoData":
		fallthrough
	case "Unknown":
		fallthrough
	case "Pending":
		fallthrough
	case "Ok":
		fallthrough
	case "Info":
		fallthrough
	case "Warning":
		fallthrough
	case "Degraded":
		fallthrough
	case "Severe":
		fallthrough
	case "Suspended":
		*e = EnvironmentHealthStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentHealthStatusEnum: %s", s)
	}
}
