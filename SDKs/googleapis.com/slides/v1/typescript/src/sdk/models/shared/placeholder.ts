/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of the placeholder.
 */
export enum PlaceholderTypeEnum {
  None = "NONE",
  Body = "BODY",
  Chart = "CHART",
  ClipArt = "CLIP_ART",
  CenteredTitle = "CENTERED_TITLE",
  Diagram = "DIAGRAM",
  DateAndTime = "DATE_AND_TIME",
  Footer = "FOOTER",
  Header = "HEADER",
  Media = "MEDIA",
  Object = "OBJECT",
  Picture = "PICTURE",
  SlideNumber = "SLIDE_NUMBER",
  Subtitle = "SUBTITLE",
  Table = "TABLE",
  Title = "TITLE",
  SlideImage = "SLIDE_IMAGE",
}

/**
 * The placeholder information that uniquely identifies a placeholder shape.
 */
export class Placeholder extends SpeakeasyBase {
  /**
   * The index of the placeholder. If the same placeholder types are present in the same page, they would have different index values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "index" })
  index?: number;

  /**
   * The object ID of this shape's parent placeholder. If unset, the parent placeholder shape does not exist, so the shape does not inherit properties from any other shape.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentObjectId" })
  parentObjectId?: string;

  /**
   * The type of the placeholder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: PlaceholderTypeEnum;
}
