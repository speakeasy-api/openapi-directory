/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration - The Connect peer details.
 */
public class CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration {
    
    public CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurations[] bgpConfigurations;
    public CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration withBgpConfigurations(CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurations[] bgpConfigurations) {
        this.bgpConfigurations = bgpConfigurations;
        return this;
    }
    
    
    public String[] insideCidrBlocks;
    public CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration withInsideCidrBlocks(String[] insideCidrBlocks) {
        this.insideCidrBlocks = insideCidrBlocks;
        return this;
    }
    
    
    public String peerAddress;
    public CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration withPeerAddress(String peerAddress) {
        this.peerAddress = peerAddress;
        return this;
    }
    
    
    public CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum protocol;
    public CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration withProtocol(CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }
    
    
    public String transitGatewayAddress;
    public CreateTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration withTransitGatewayAddress(String transitGatewayAddress) {
        this.transitGatewayAddress = transitGatewayAddress;
        return this;
    }
    
}
