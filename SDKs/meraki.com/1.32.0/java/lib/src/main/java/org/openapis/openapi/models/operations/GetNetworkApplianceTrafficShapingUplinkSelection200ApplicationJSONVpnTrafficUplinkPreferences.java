/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferences {
    /**
     * Fail over criterion for uplink preference rule. Must be one of: 'poorPerformance' or 'uplinkDown'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failOverCriterion")
    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesFailOverCriterionEnum failOverCriterion;

    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferences withFailOverCriterion(GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesFailOverCriterionEnum failOverCriterion) {
        this.failOverCriterion = failOverCriterion;
        return this;
    }
    
    /**
     * Performance class setting for uplink preference rule
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("performanceClass")
    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesPerformanceClass performanceClass;

    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferences withPerformanceClass(GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesPerformanceClass performanceClass) {
        this.performanceClass = performanceClass;
        return this;
    }
    
    /**
     * Preferred uplink for uplink preference rule. Must be one of: 'wan1', 'wan2', 'bestForVoIP', 'loadBalancing' or 'defaultUplink'
     */
    @JsonProperty("preferredUplink")
    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesPreferredUplinkEnum preferredUplink;

    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferences withPreferredUplink(GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesPreferredUplinkEnum preferredUplink) {
        this.preferredUplink = preferredUplink;
        return this;
    }
    
    /**
     * Traffic filters
     */
    @JsonProperty("trafficFilters")
    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFilters[] trafficFilters;

    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferences withTrafficFilters(GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFilters[] trafficFilters) {
        this.trafficFilters = trafficFilters;
        return this;
    }
    
    public GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferences(@JsonProperty("preferredUplink") GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesPreferredUplinkEnum preferredUplink, @JsonProperty("trafficFilters") GetNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFilters[] trafficFilters) {
        this.preferredUplink = preferredUplink;
        this.trafficFilters = trafficFilters;
  }
}
