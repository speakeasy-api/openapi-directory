/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CoverageValueReadV1 } from "./coveragevaluereadv1";
import { RiskValueReadV1 } from "./riskvaluereadv1";
import { Expose, Type } from "class-transformer";

/**
 * The status of the application.
 */
export enum ApplicationReadV1StatusEnum {
  Incomplete = "incomplete",
  Complete = "complete",
  Submitted = "submitted",
}

/**
 * An application is a set of information submitted by a producer to institutions in order to get quotes.
 */
export class ApplicationReadV1 extends SpeakeasyBase {
  /**
   * Array of coverage values
   */
  @SpeakeasyMetadata({ elemType: CoverageValueReadV1 })
  @Expose({ name: "coverage_values" })
  @Type(() => CoverageValueReadV1)
  coverageValues?: CoverageValueReadV1[];

  /**
   * `id` for a specific application
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Array of product IDs. You can find a list of supported [products](https://www.heraldapi.com/docs/products) via `GET /products`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "products" })
  products?: string[];

  /**
   * Array of risk values
   */
  @SpeakeasyMetadata({ elemType: RiskValueReadV1 })
  @Expose({ name: "risk_values" })
  @Type(() => RiskValueReadV1)
  riskValues?: RiskValueReadV1[];

  /**
   * The status of the application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ApplicationReadV1StatusEnum;
}
