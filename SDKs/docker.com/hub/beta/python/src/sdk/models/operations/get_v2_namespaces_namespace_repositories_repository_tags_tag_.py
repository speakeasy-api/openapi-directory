"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import tag as shared_tag
from typing import Optional


@dataclasses.dataclass
class GetV2NamespacesNamespaceRepositoriesRepositoryTagsTagRequest:
    
    namespace: str = dataclasses.field(metadata={'path_param': { 'field_name': 'namespace', 'style': 'simple', 'explode': False }})  
    repository: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repository', 'style': 'simple', 'explode': False }})  
    tag: str = dataclasses.field(metadata={'path_param': { 'field_name': 'tag', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GetV2NamespacesNamespaceRepositoriesRepositoryTagsTagResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Forbidden"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tag: Optional[shared_tag.Tag] = dataclasses.field(default=None)
    r"""repository tag"""  
    