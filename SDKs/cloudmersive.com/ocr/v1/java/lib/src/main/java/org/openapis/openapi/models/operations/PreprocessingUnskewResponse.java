/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class PreprocessingUnskewResponse {
    
    public String contentType;

    public PreprocessingUnskewResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * OK
     */
    
    public String preprocessingUnskew200ApplicationJSONByteString;

    public PreprocessingUnskewResponse withPreprocessingUnskew200ApplicationJSONByteString(String preprocessingUnskew200ApplicationJSONByteString) {
        this.preprocessingUnskew200ApplicationJSONByteString = preprocessingUnskew200ApplicationJSONByteString;
        return this;
    }
    
    /**
     * OK
     */
    
    public String preprocessingUnskew200ApplicationXMLByteString;

    public PreprocessingUnskewResponse withPreprocessingUnskew200ApplicationXMLByteString(String preprocessingUnskew200ApplicationXMLByteString) {
        this.preprocessingUnskew200ApplicationXMLByteString = preprocessingUnskew200ApplicationXMLByteString;
        return this;
    }
    
    /**
     * OK
     */
    
    public String preprocessingUnskew200TextJSONByteString;

    public PreprocessingUnskewResponse withPreprocessingUnskew200TextJSONByteString(String preprocessingUnskew200TextJSONByteString) {
        this.preprocessingUnskew200TextJSONByteString = preprocessingUnskew200TextJSONByteString;
        return this;
    }
    
    /**
     * OK
     */
    
    public String preprocessingUnskew200TextXMLByteString;

    public PreprocessingUnskewResponse withPreprocessingUnskew200TextXMLByteString(String preprocessingUnskew200TextXMLByteString) {
        this.preprocessingUnskew200TextXMLByteString = preprocessingUnskew200TextXMLByteString;
        return this;
    }
    
    
    public Integer statusCode;

    public PreprocessingUnskewResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public PreprocessingUnskewResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public PreprocessingUnskewResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
