/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetWebhooksIdWebhookLogsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  /**
   * limit number of results to this user
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id_user",
  })
  idUser?: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_webhook",
  })
  idWebhook: number;

  /**
   * limit number of results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * maximum (inclusive) date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_date;dateTimeFormat=YYYY-MM-DD",
  })
  maxDate?: Date;

  /**
   * minimal (inclusive) date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_date;dateTimeFormat=YYYY-MM-DD",
  })
  minDate?: Date;

  /**
   * offset of first result
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;
}

/**
 * webhooklogs
 */
export class GetWebhooksIdWebhookLogs200ApplicationJSON extends SpeakeasyBase {
  /**
   * total number of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  @SpeakeasyMetadata({ elemType: shared.WebhookLog })
  @Expose({ name: "webhooklogs" })
  @Type(() => shared.WebhookLog)
  webhooklogs: shared.WebhookLog[];
}

export class GetWebhooksIdWebhookLogsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * webhooklogs
   */
  @SpeakeasyMetadata()
  getWebhooksIdWebhookLogs200ApplicationJSONObject?: GetWebhooksIdWebhookLogs200ApplicationJSON;
}
