/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Finding } from "./finding";
import { Resource } from "./resource";
import { Expose, Type } from "class-transformer";

/**
 * State change of the finding between the points in time.
 */
export enum ListFindingsResultStateChangeEnum {
  Unused = "UNUSED",
  Changed = "CHANGED",
  Unchanged = "UNCHANGED",
  Added = "ADDED",
  Removed = "REMOVED",
}

/**
 * Result containing the Finding and its StateChange.
 */
export class ListFindingsResult extends SpeakeasyBase {
  /**
   * Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finding" })
  @Type(() => Finding)
  finding?: Finding;

  /**
   * Information related to the Google Cloud resource that is associated with this finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  @Type(() => Resource)
  resource?: Resource;

  /**
   * State change of the finding between the points in time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateChange" })
  stateChange?: ListFindingsResultStateChangeEnum;
}
