"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createhookinput as shared_createhookinput
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class UpdateHookSecurity:
    
    api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Truora-API-Key' }})  
    

@dataclasses.dataclass
class UpdateHookRequest:
    
    create_hook_input: shared_createhookinput.CreateHookInput = dataclasses.field(metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})
    r"""Request body updates given hook."""  
    hook_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'hook_id', 'style': 'simple', 'explode': False }})
    r"""Hook ID"""  
    

@dataclasses.dataclass
class UpdateHookResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Validation error, at least one of the parameters was invalid."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    