/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * User - Information about a Drive user.
 */
public class User {
    /**
     * A plain text displayable name for this user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public User withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The email address of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailAddress")
    public String emailAddress;

    public User withEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
        return this;
    }
    
    /**
     * Whether this user is the same as the authenticated user for whom the request was made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAuthenticatedUser")
    public Boolean isAuthenticatedUser;

    public User withIsAuthenticatedUser(Boolean isAuthenticatedUser) {
        this.isAuthenticatedUser = isAuthenticatedUser;
        return this;
    }
    
    /**
     * This is always drive#user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public User withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The user's ID as visible in the permissions collection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissionId")
    public String permissionId;

    public User withPermissionId(String permissionId) {
        this.permissionId = permissionId;
        return this;
    }
    
    /**
     * The user's profile picture.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("picture")
    public UserPicture picture;

    public User withPicture(UserPicture picture) {
        this.picture = picture;
        return this;
    }
    
    public User(){}
}
