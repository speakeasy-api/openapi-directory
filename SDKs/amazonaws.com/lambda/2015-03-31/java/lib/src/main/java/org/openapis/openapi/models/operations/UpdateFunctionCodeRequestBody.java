/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateFunctionCodeRequestBody {
    /**
     * The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is &lt;code&gt;x86_64&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Architectures")
    public org.openapis.openapi.models.shared.ArchitectureEnum[] architectures;

    public UpdateFunctionCodeRequestBody withArchitectures(org.openapis.openapi.models.shared.ArchitectureEnum[] architectures) {
        this.architectures = architectures;
        return this;
    }
    
    /**
     * Set to true to validate the request parameters and access permissions without modifying the function code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DryRun")
    public Boolean dryRun;

    public UpdateFunctionCodeRequestBody withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * URI of a container image in the Amazon ECR registry. Do not use for a function defined with a .zip file archive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImageUri")
    public String imageUri;

    public UpdateFunctionCodeRequestBody withImageUri(String imageUri) {
        this.imageUri = imageUri;
        return this;
    }
    
    /**
     * Set to true to publish a new version of the function after updating the code. This has the same effect as calling &lt;a&gt;PublishVersion&lt;/a&gt; separately.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Publish")
    public Boolean publish;

    public UpdateFunctionCodeRequestBody withPublish(Boolean publish) {
        this.publish = publish;
        return this;
    }
    
    /**
     * Update the function only if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RevisionId")
    public String revisionId;

    public UpdateFunctionCodeRequestBody withRevisionId(String revisionId) {
        this.revisionId = revisionId;
        return this;
    }
    
    /**
     * An Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account. Use only with a function defined with a .zip file archive deployment package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3Bucket")
    public String s3Bucket;

    public UpdateFunctionCodeRequestBody withS3Bucket(String s3Bucket) {
        this.s3Bucket = s3Bucket;
        return this;
    }
    
    /**
     * The Amazon S3 key of the deployment package. Use only with a function defined with a .zip file archive deployment package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3Key")
    public String s3Key;

    public UpdateFunctionCodeRequestBody withS3Key(String s3Key) {
        this.s3Key = s3Key;
        return this;
    }
    
    /**
     * For versioned objects, the version of the deployment package object to use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3ObjectVersion")
    public String s3ObjectVersion;

    public UpdateFunctionCodeRequestBody withS3ObjectVersion(String s3ObjectVersion) {
        this.s3ObjectVersion = s3ObjectVersion;
        return this;
    }
    
    /**
     * The base64-encoded contents of the deployment package. Amazon Web Services SDK and CLI clients handle the encoding for you. Use only with a function defined with a .zip file archive deployment package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ZipFile")
    public String zipFile;

    public UpdateFunctionCodeRequestBody withZipFile(String zipFile) {
        this.zipFile = zipFile;
        return this;
    }
    
    public UpdateFunctionCodeRequestBody(){}
}
