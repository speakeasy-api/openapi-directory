/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostAssetsAnalysisAbsorptionRatioRequestBodyAssetsCovarianceMatrixEigenvectors extends SpeakeasyBase {
  /**
   * The number of eigenvectors to retain in the numerator of the absorption ratio, which must be lower than the number of assets; defaults to [1/5-th] the number of assets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eigenvectorsRetained" })
  eigenvectorsRetained?: number;
}

export class PostAssetsAnalysisAbsorptionRatioRequestBody extends SpeakeasyBase {
  /**
   * The number of assets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assets" })
  assets: number;

  /**
   * assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsCovarianceMatrix" })
  assetsCovarianceMatrix: number[][];

  @SpeakeasyMetadata()
  @Expose({ name: "assetsCovarianceMatrixEigenvectors" })
  @Type(
    () =>
      PostAssetsAnalysisAbsorptionRatioRequestBodyAssetsCovarianceMatrixEigenvectors
  )
  assetsCovarianceMatrixEigenvectors?: PostAssetsAnalysisAbsorptionRatioRequestBodyAssetsCovarianceMatrixEigenvectors;
}

/**
 * OK
 */
export class PostAssetsAnalysisAbsorptionRatio200ApplicationJSON extends SpeakeasyBase {
  /**
   * The absorption ratio of the universe of assets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsAbsorptionRatio" })
  assetsAbsorptionRatio: number;
}

export class PostAssetsAnalysisAbsorptionRatioResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postAssetsAnalysisAbsorptionRatio200ApplicationJSONObject?: PostAssetsAnalysisAbsorptionRatio200ApplicationJSON;
}
