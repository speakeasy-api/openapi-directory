"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Lookup:
    r"""https://sms77.io/en/docs/gateway/http-api - Get number format, CNAM,- HLR- or MNP information for given phone number"""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def lookup(self, request: operations.LookupRequest) -> operations.LookupResponse:
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/lookup'
        
        query_params = utils.get_query_params(operations.LookupRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.LookupResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def lookup_cnam(self, request: operations.LookupCnamRequest) -> operations.LookupCnamResponse:
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/lookup/cnam'
        
        query_params = utils.get_query_params(operations.LookupCnamRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.LookupCnamResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def lookup_format(self, request: operations.LookupFormatRequest) -> operations.LookupFormatResponse:
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/lookup/format'
        
        query_params = utils.get_query_params(operations.LookupFormatRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.LookupFormatResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def lookup_hlr(self, request: operations.LookupHlrRequest) -> operations.LookupHlrResponse:
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/lookup/hlr'
        
        query_params = utils.get_query_params(operations.LookupHlrRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.LookupHlrResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def lookup_mnp(self, request: operations.LookupMnpRequest) -> operations.LookupMnpResponse:
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/lookup/mnp'
        
        query_params = utils.get_query_params(operations.LookupMnpRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.LookupMnpResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    