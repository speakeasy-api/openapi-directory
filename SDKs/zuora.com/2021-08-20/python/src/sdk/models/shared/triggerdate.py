"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class TriggerDateNameEnum(str, Enum):
    r"""Name of the trigger date of the order action."""
    CONTRACT_EFFECTIVE = 'ContractEffective'
    SERVICE_ACTIVATION = 'ServiceActivation'
    CUSTOMER_ACCEPTANCE = 'CustomerAcceptance'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TriggerDate:
    
    name: Optional[TriggerDateNameEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the trigger date of the order action."""  
    trigger_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Trigger date in YYYY-MM-DD format."""  
    