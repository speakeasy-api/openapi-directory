// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeStackDriftDetectionStatusActionEnum
type GETDescribeStackDriftDetectionStatusActionEnum string

const (
	GETDescribeStackDriftDetectionStatusActionEnumDescribeStackDriftDetectionStatus GETDescribeStackDriftDetectionStatusActionEnum = "DescribeStackDriftDetectionStatus"
)

func (e *GETDescribeStackDriftDetectionStatusActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeStackDriftDetectionStatus":
		*e = GETDescribeStackDriftDetectionStatusActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeStackDriftDetectionStatusActionEnum: %s", s)
	}
}

// GETDescribeStackDriftDetectionStatusVersionEnum
type GETDescribeStackDriftDetectionStatusVersionEnum string

const (
	GETDescribeStackDriftDetectionStatusVersionEnumTwoThousandAndTen0515 GETDescribeStackDriftDetectionStatusVersionEnum = "2010-05-15"
)

func (e *GETDescribeStackDriftDetectionStatusVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = GETDescribeStackDriftDetectionStatusVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeStackDriftDetectionStatusVersionEnum: %s", s)
	}
}

type GETDescribeStackDriftDetectionStatusQueryParams struct {
	Action GETDescribeStackDriftDetectionStatusActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The ID of the drift detection results of this operation.</p> <p>CloudFormation generates new results, with a new drift detection ID, each time this operation is run. However, the number of drift results CloudFormation retains for any given stack, and for how long, may vary.</p>
	StackDriftDetectionID string                                          `queryParam:"style=form,explode=true,name=StackDriftDetectionId"`
	Version               GETDescribeStackDriftDetectionStatusVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeStackDriftDetectionStatusHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeStackDriftDetectionStatusRequest struct {
	QueryParams GETDescribeStackDriftDetectionStatusQueryParams
	Headers     GETDescribeStackDriftDetectionStatusHeaders
}

type GETDescribeStackDriftDetectionStatusResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
