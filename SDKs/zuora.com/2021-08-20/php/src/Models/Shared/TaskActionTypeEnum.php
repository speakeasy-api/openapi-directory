<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * The type of the task.
 * 
 * 
 */
enum TaskActionTypeEnum: string
{
    case APPROVAL = 'Approval';
    case ATTACHMENT = 'Attachment';
    case BILLING_BILL_RUN = 'Billing::BillRun';
    case BILLING_CURRENCY_CONVERSION = 'Billing::CurrencyConversion';
    case BILLING_CUSTOM_INVOICE = 'Billing::CustomInvoice';
    case CALLOUT = 'Callout';
    case CANCEL = 'Cancel';
    case CREATE = 'Create';
    case CUSTOM_OBJECT_CREATE = 'CustomObject::Create';
    case CUSTOM_OBJECT_DELETE = 'CustomObject::Delete';
    case CUSTOM_OBJECT_QUERY = 'CustomObject::Query';
    case CUSTOM_OBJECT_UPDATE = 'CustomObject::Update';
    case DATA_BILLING_PREVIEW_RUN = 'Data::BillingPreviewRun';
    case DATA_LINK = 'Data::Link';
    case DELAY = 'Delay';
    case DELETE = 'Delete';
    case DOWNLOAD_SFTP = 'Download::SFTP';
    case EMAIL = 'Email';
    case EXPORT = 'Export';
    case FILE_CUSTOM_PDF_CUSTOM_DOCUMENT = 'File::CustomPDF::CustomDocument';
    case IF = 'If';
    case INVOICE_GENERATE = 'InvoiceGenerate';
    case ITERATE = 'Iterate';
    case LOGIC_CSV_TRANSLATOR = 'Logic::CSVTranslator';
    case LOGIC_CASE = 'Logic::Case';
    case LOGIC_CUSTOM_CODE = 'Logic::CustomCode';
    case LOGIC_JSON_TRANSFORM = 'Logic::JSONTransform';
    case LOGIC_LAMBDA = 'Logic::Lambda';
    case LOGIC_RESPONSE_FORMATTER = 'Logic::ResponseFormatter';
    case LOGIC_XML_TRANSFORM = 'Logic::XMLTransform';
    case NEW_PRODUCT = 'NewProduct';
    case NOTIFICATIONS_GOOGLE_CLOUD_PRINT = 'Notifications::GoogleCloudPrint';
    case NOTIFICATIONS_PHONE_CALL = 'Notifications::PhoneCall';
    case NOTIFICATIONS_SMS = 'Notifications::SMS';
    case PAYMENT_GATEWAY_RECONCILIATION = 'Payment::GatewayReconciliation';
    case PAYMENT_PAYMENT_RUN = 'Payment::PaymentRun';
    case QUERY = 'Query';
    case REMOVE_PRODUCT = 'RemoveProduct';
    case REPORTING_REPORT_DATA = 'Reporting::ReportData';
    case REPORTING_RUN_REPORT = 'Reporting::RunReport';
    case RESUME = 'Resume';
    case SUSPEND = 'Suspend';
    case UI_PAGE = 'UI::Page';
    case UI_STOP = 'UI::Stop';
    case UPDATE = 'Update';
    case UPLOAD_FTP = 'Upload::FTP';
    case UPLOAD_SFTP = 'Upload::SFTP';
    case WRITE_OFF = 'WriteOff';
}
