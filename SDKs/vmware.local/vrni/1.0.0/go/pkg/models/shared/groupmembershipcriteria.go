// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GroupMembershipCriteriaMembershipTypeEnum string

const (
	GroupMembershipCriteriaMembershipTypeEnumSearchMembershipCriteria    GroupMembershipCriteriaMembershipTypeEnum = "SearchMembershipCriteria"
	GroupMembershipCriteriaMembershipTypeEnumIPAddressMembershipCriteria GroupMembershipCriteriaMembershipTypeEnum = "IPAddressMembershipCriteria"
)

func (e *GroupMembershipCriteriaMembershipTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SearchMembershipCriteria":
		fallthrough
	case "IPAddressMembershipCriteria":
		*e = GroupMembershipCriteriaMembershipTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupMembershipCriteriaMembershipTypeEnum: %s", s)
	}
}

// GroupMembershipCriteria - EntityType currently restricted to VirtualMachine
type GroupMembershipCriteria struct {
	// Ip Address membership definition
	IPAddressMembershipCriteria *IPAddressMembershipCriteria               `json:"ip_address_membership_criteria,omitempty"`
	MembershipType              *GroupMembershipCriteriaMembershipTypeEnum `json:"membership_type,omitempty"`
	SearchMembershipCriteria    *SearchMembershipCriteria                  `json:"search_membership_criteria,omitempty"`
}
