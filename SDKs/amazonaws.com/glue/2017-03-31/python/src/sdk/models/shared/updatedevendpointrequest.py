"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import devendpointcustomlibraries as shared_devendpointcustomlibraries
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDevEndpointRequest:
    
    endpoint_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointName') }})  
    add_arguments: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AddArguments'), 'exclude': lambda f: f is None }})  
    add_public_keys: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AddPublicKeys'), 'exclude': lambda f: f is None }})  
    custom_libraries: Optional[shared_devendpointcustomlibraries.DevEndpointCustomLibraries] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomLibraries'), 'exclude': lambda f: f is None }})  
    delete_arguments: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeleteArguments'), 'exclude': lambda f: f is None }})  
    delete_public_keys: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeletePublicKeys'), 'exclude': lambda f: f is None }})  
    public_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PublicKey'), 'exclude': lambda f: f is None }})  
    update_etl_libraries: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdateEtlLibraries'), 'exclude': lambda f: f is None }})  
    