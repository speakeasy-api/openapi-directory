"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import scim_enterprise_group_response as shared_scim_enterprise_group_response
from ..shared import scim_error as shared_scim_error
from typing import Optional


@dataclasses.dataclass
class EnterpriseAdminGetProvisioningInformationForEnterpriseGroupRequest:
    
    scim_group_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'scim_group_id', 'style': 'simple', 'explode': False }})
    r"""A unique identifier of the SCIM group."""  
    excluded_attributes: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'excludedAttributes', 'style': 'form', 'explode': True }})
    r"""Excludes the specified attribute from being returned in the results. Using this parameter can speed up response time."""  
    

@dataclasses.dataclass
class EnterpriseAdminGetProvisioningInformationForEnterpriseGroupResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Resource not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    scim_enterprise_group_response: Optional[shared_scim_enterprise_group_response.ScimEnterpriseGroupResponse] = dataclasses.field(default=None)
    r"""Success, a group was found"""  
    scim_error: Optional[shared_scim_error.ScimError] = dataclasses.field(default=None)
    r"""Bad request"""  
    