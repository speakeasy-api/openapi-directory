/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EventType - A representation of the event type resource.
 */
public class EventType {
    /**
     * Output only. Human friendly description of what the event type is about. For example "Bucket created in Cloud Storage".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public EventType withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. URI for the event schema. For example "https://github.com/googleapis/google-cloudevents/blob/master/proto/google/events/cloud/storage/v1/events.proto"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventSchemaUri")
    public String eventSchemaUri;

    public EventType withEventSchemaUri(String eventSchemaUri) {
        this.eventSchemaUri = eventSchemaUri;
        return this;
    }
    
    /**
     * Output only. Filtering attributes for the event type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filteringAttributes")
    public FilteringAttribute[] filteringAttributes;

    public EventType withFilteringAttributes(FilteringAttribute[] filteringAttributes) {
        this.filteringAttributes = filteringAttributes;
        return this;
    }
    
    /**
     * Output only. The full name of the event type (for example, "google.cloud.storage.object.v1.finalized"). In the form of {provider-specific-prefix}.{resource}.{version}.{verb}. Types MUST be versioned and event schemas are guaranteed to remain backward compatible within one version. Note that event type versions and API versions do not need to match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public EventType withType(String type) {
        this.type = type;
        return this;
    }
    
    public EventType(){}
}
