/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * We'll provide information about related companies and articles based on the text you provide.
 */
export class PostContentproSimilarTextRequestBody extends SpeakeasyBase {
  /**
   * Any piece of text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text: string;
}

export class PostContentproSimilarText200ApplicationJSONData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "article" })
  @Type(() => shared.Article)
  article?: shared.Article;

  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  @Type(() => shared.ContentProCompany)
  company?: shared.ContentProCompany;

  @SpeakeasyMetadata()
  @Expose({ name: "snippets" })
  @Type(() => shared.ContentProSnippets)
  snippets?: shared.ContentProSnippets;
}

/**
 * A successful operation
 */
export class PostContentproSimilarText200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "calls_per_month" })
  callsPerMonth?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "count_remaining" })
  countRemaining?: string;

  @SpeakeasyMetadata({
    elemType: PostContentproSimilarText200ApplicationJSONData,
  })
  @Expose({ name: "data" })
  @Type(() => PostContentproSimilarText200ApplicationJSONData)
  data?: PostContentproSimilarText200ApplicationJSONData[];

  @SpeakeasyMetadata()
  @Expose({ name: "renewal_date" })
  renewalDate?: string;
}

export class PostContentproSimilarTextResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A successful operation
   */
  @SpeakeasyMetadata()
  postContentproSimilarText200ApplicationJSONObject?: PostContentproSimilarText200ApplicationJSON;
}
