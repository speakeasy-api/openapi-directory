/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { V3StopTicket } from "./v3stopticket";
import { Expose, Type } from "class-transformer";

export class V3StoppingPatternStop extends SpeakeasyBase {
  /**
   * Transport mode identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "route_type" })
  routeType?: number;

  /**
   * Distance of stop from input location (in metres); returns 0 if no location is input
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_distance" })
  stopDistance?: number;

  /**
   * Stop identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_id" })
  stopId?: number;

  /**
   * Landmark in proximity of stop
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_landmark" })
  stopLandmark?: string;

  /**
   * Geographic coordinate of latitude at stop
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_latitude" })
  stopLatitude?: number;

  /**
   * Geographic coordinate of longitude at stop
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_longitude" })
  stopLongitude?: number;

  /**
   * Name of stop
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_name" })
  stopName?: string;

  /**
   * Sequence of the stop on the route/run; return 0 when route_id or run_id not specified. Order ascendingly by this field (when non zero) to get physical order (earliest first) of stops on the route_id/run_id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_sequence" })
  stopSequence?: number;

  /**
   * suburb of stop
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_suburb" })
  stopSuburb?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stop_ticket" })
  @Type(() => V3StopTicket)
  stopTicket?: V3StopTicket;
}
