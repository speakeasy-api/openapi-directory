/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class NodesViewOnlyLinksReadRequest extends SpeakeasyBase {
  /**
   * The unique identifier of the view only link.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=link_id",
  })
  linkId: string;

  /**
   * The unique identifier of the node.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=node_id",
  })
  nodeId: string;
}

/**
 * The properties of the view only link entity.
 */
export class NodesViewOnlyLinksReadViewOnlyLinksAttributes extends SpeakeasyBase {
  /**
   * Whether or not the view only link has anonymized contributors
   */
  @SpeakeasyMetadata()
  anonymous?: boolean;

  /**
   * The time at which the view only link was created, as an iso8601 formatted timestamp.
   */
  @SpeakeasyMetadata()
  dateCreated?: Date;

  /**
   * The view only key
   */
  @SpeakeasyMetadata()
  key?: string;

  /**
   * The name of the view only link
   */
  @SpeakeasyMetadata()
  name?: string;
}

/**
 * URLs to other entities or entity collections that have a relationship to the view only link entity.
 */
export class NodesViewOnlyLinksReadViewOnlyLinksRelationships extends SpeakeasyBase {
  /**
   * A relationship to the user who created this view only link.
   */
  @SpeakeasyMetadata()
  creator: string;

  /**
   * A relationship to the nodes which this view only link gives read-only access to.
   */
  @SpeakeasyMetadata()
  nodes: string;
}

/**
 * OK
 */
export class NodesViewOnlyLinksReadViewOnlyLinks extends SpeakeasyBase {
  /**
   * The properties of the view only link entity.
   */
  @SpeakeasyMetadata()
  attributes: NodesViewOnlyLinksReadViewOnlyLinksAttributes;

  /**
   * The unique identifier of the view only link.
   */
  @SpeakeasyMetadata()
  id: string;

  /**
   * URLs to other entities or entity collections that have a relationship to the view only link entity.
   */
  @SpeakeasyMetadata()
  relationships: NodesViewOnlyLinksReadViewOnlyLinksRelationships;

  /**
   * The type identifier of the view only link ('view-only-links').
   */
  @SpeakeasyMetadata()
  type: string;
}

export class NodesViewOnlyLinksReadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
