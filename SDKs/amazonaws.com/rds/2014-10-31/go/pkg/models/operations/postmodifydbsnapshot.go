// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTModifyDBSnapshotActionEnum
type POSTModifyDBSnapshotActionEnum string

const (
	POSTModifyDBSnapshotActionEnumModifyDbSnapshot POSTModifyDBSnapshotActionEnum = "ModifyDBSnapshot"
)

func (e *POSTModifyDBSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyDBSnapshot":
		*e = POSTModifyDBSnapshotActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTModifyDBSnapshotActionEnum: %s", s)
	}
}

// POSTModifyDBSnapshotVersionEnum
type POSTModifyDBSnapshotVersionEnum string

const (
	POSTModifyDBSnapshotVersionEnumTwoThousandAndFourteen1031 POSTModifyDBSnapshotVersionEnum = "2014-10-31"
)

func (e *POSTModifyDBSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = POSTModifyDBSnapshotVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTModifyDBSnapshotVersionEnum: %s", s)
	}
}

type POSTModifyDBSnapshotRequest struct {
	Action            POSTModifyDBSnapshotActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                          `request:"mediaType=text/xml"`
	Version           POSTModifyDBSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTModifyDBSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
