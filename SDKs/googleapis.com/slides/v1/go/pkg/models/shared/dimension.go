// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DimensionUnitEnum - The units for magnitude.
type DimensionUnitEnum string

const (
	DimensionUnitEnumUnitUnspecified DimensionUnitEnum = "UNIT_UNSPECIFIED"
	DimensionUnitEnumEmu             DimensionUnitEnum = "EMU"
	DimensionUnitEnumPt              DimensionUnitEnum = "PT"
)

func (e *DimensionUnitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNIT_UNSPECIFIED":
		fallthrough
	case "EMU":
		fallthrough
	case "PT":
		*e = DimensionUnitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DimensionUnitEnum: %s", s)
	}
}

// Dimension - A magnitude in a single direction in the specified units.
type Dimension struct {
	// The magnitude.
	Magnitude *float64 `json:"magnitude,omitempty"`
	// The units for magnitude.
	Unit *DimensionUnitEnum `json:"unit,omitempty"`
}
