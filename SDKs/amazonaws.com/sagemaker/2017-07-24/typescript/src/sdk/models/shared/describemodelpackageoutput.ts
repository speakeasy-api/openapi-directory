/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdditionalInferenceSpecificationDefinition } from "./additionalinferencespecificationdefinition";
import { DriftCheckBaselines } from "./driftcheckbaselines";
import { InferenceSpecification } from "./inferencespecification";
import { MetadataProperties } from "./metadataproperties";
import { ModelApprovalStatusEnum } from "./modelapprovalstatusenum";
import { ModelMetrics } from "./modelmetrics";
import { ModelPackageStatusDetails } from "./modelpackagestatusdetails";
import { ModelPackageStatusEnum } from "./modelpackagestatusenum";
import { ModelPackageValidationSpecification } from "./modelpackagevalidationspecification";
import { SourceAlgorithmSpecification } from "./sourcealgorithmspecification";
import { UserContext } from "./usercontext";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeModelPackageOutput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AdditionalInferenceSpecificationDefinition })
  @Expose({ name: "AdditionalInferenceSpecifications" })
  @Type(() => AdditionalInferenceSpecificationDefinition)
  additionalInferenceSpecifications?: AdditionalInferenceSpecificationDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "ApprovalDescription" })
  approvalDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertifyForMarketplace" })
  certifyForMarketplace?: boolean;

  /**
   * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  @Type(() => UserContext)
  createdBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomerMetadataProperties" })
  customerMetadataProperties?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Domain" })
  domain?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DriftCheckBaselines" })
  @Type(() => DriftCheckBaselines)
  driftCheckBaselines?: DriftCheckBaselines;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSpecification" })
  @Type(() => InferenceSpecification)
  inferenceSpecification?: InferenceSpecification;

  /**
   * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedBy" })
  @Type(() => UserContext)
  lastModifiedBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  /**
   * Metadata properties of the tracking entity, trial, or trial component.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MetadataProperties" })
  @Type(() => MetadataProperties)
  metadataProperties?: MetadataProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelApprovalStatus" })
  modelApprovalStatus?: ModelApprovalStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelMetrics" })
  @Type(() => ModelMetrics)
  modelMetrics?: ModelMetrics;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageArn" })
  modelPackageArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageDescription" })
  modelPackageDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageGroupName" })
  modelPackageGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageName" })
  modelPackageName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageStatus" })
  modelPackageStatus: ModelPackageStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageStatusDetails" })
  @Type(() => ModelPackageStatusDetails)
  modelPackageStatusDetails: ModelPackageStatusDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageVersion" })
  modelPackageVersion?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SamplePayloadUrl" })
  samplePayloadUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceAlgorithmSpecification" })
  @Type(() => SourceAlgorithmSpecification)
  sourceAlgorithmSpecification?: SourceAlgorithmSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "Task" })
  task?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidationSpecification" })
  @Type(() => ModelPackageValidationSpecification)
  validationSpecification?: ModelPackageValidationSpecification;
}
