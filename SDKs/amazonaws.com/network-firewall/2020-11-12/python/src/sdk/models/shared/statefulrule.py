"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import header as shared_header
from ..shared import ruleoption as shared_ruleoption
from ..shared import statefulaction_enum as shared_statefulaction_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StatefulRule:
    r"""A single Suricata rules specification, for use in a stateful rule group. Use this option to specify a simple Suricata rule with protocol, source and destination, ports, direction, and rule options. For information about the Suricata <code>Rules</code> format, see <a href=\\"https://suricata.readthedocs.io/rules/intro.html#\\">Rules Format</a>."""
    
    action: shared_statefulaction_enum.StatefulActionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Action') }})  
    header: shared_header.Header = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Header') }})  
    rule_options: list[shared_ruleoption.RuleOption] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RuleOptions') }})  
    