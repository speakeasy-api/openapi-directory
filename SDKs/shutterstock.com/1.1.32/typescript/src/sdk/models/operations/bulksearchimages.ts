/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class BulkSearchImagesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode?: string;
}

export enum BulkSearchImagesImageTypeEnum {
  Photo = "photo",
  Illustration = "illustration",
  Vector = "vector",
}

export enum BulkSearchImagesLicenseEnum {
  Commercial = "commercial",
  Editorial = "editorial",
  Enhanced = "enhanced",
}

/**
 * Show image results with horizontal or vertical orientation
 */
export enum BulkSearchImagesOrientationEnum {
  Horizontal = "horizontal",
  Vertical = "vertical",
}

/**
 * Show images that feature people of the specified age category
 */
export enum BulkSearchImagesPeopleAgeEnum {
  Infants = "infants",
  Children = "children",
  Teenagers = "teenagers",
  Twentys = "20s",
  Thirtys = "30s",
  Fortys = "40s",
  Fiftys = "50s",
  Sixtys = "60s",
  Older = "older",
}

export enum BulkSearchImagesPeopleEthnicityEnum {
  African = "african",
  AfricanAmerican = "african_american",
  Black = "black",
  Brazilian = "brazilian",
  Chinese = "chinese",
  Caucasian = "caucasian",
  EastAsian = "east_asian",
  Hispanic = "hispanic",
  Japanese = "japanese",
  MiddleEastern = "middle_eastern",
  NativeAmerican = "native_american",
  PacificIslander = "pacific_islander",
  SouthAsian = "south_asian",
  SoutheastAsian = "southeast_asian",
  Other = "other",
  NOTAfrican = "NOT african",
  NOTAfricanAmerican = "NOT african_american",
  NOTBlack = "NOT black",
  NOTBrazilian = "NOT brazilian",
  NOTChinese = "NOT chinese",
  NOTCaucasian = "NOT caucasian",
  NOTEastAsian = "NOT east_asian",
  NOTHispanic = "NOT hispanic",
  NOTJapanese = "NOT japanese",
  NOTMiddleEastern = "NOT middle_eastern",
  NOTNativeAmerican = "NOT native_american",
  NOTPacificIslander = "NOT pacific_islander",
  NOTSouthAsian = "NOT south_asian",
  NOTSoutheastAsian = "NOT southeast_asian",
  NOTOther = "NOT other",
}

/**
 * Show images with people of the specified gender
 */
export enum BulkSearchImagesPeopleGenderEnum {
  Male = "male",
  Female = "female",
  Both = "both",
}

/**
 * Sort by
 */
export enum BulkSearchImagesSortEnum {
  Newest = "newest",
  Popular = "popular",
  Relevance = "relevance",
  Random = "random",
}

/**
 * Amount of detail to render in the response
 */
export enum BulkSearchImagesViewEnum {
  Minimal = "minimal",
  Full = "full",
}

export class BulkSearchImagesRequest extends SpeakeasyBase {
  /**
   * List of queries to request results for and filters to apply per query; these values override the defaults in the query parameters
   */
  @SpeakeasyMetadata({
    data: "request, media_type=application/json",
    elemType: shared.SearchImage,
  })
  requestBody: shared.SearchImage[];

  /**
   * Show images added on the specified date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=added_date;dateTimeFormat=YYYY-MM-DD",
  })
  addedDate?: Date;

  /**
   * Show images added before the specified date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=added_date_end;dateTimeFormat=YYYY-MM-DD",
  })
  addedDateEnd?: Date;

  /**
   * Show images added on or after the specified date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=added_date_start;dateTimeFormat=YYYY-MM-DD",
  })
  addedDateStart?: Date;

  /**
   * Show images with the specified aspect ratio, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=aspect_ratio",
  })
  aspectRatio?: number;

  /**
   * Show images with the specified aspect ratio or lower, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=aspect_ratio_max",
  })
  aspectRatioMax?: number;

  /**
   * Show images with the specified aspect ratio or higher, using a positive decimal of the width divided by the height, such as 1.7778 for a 16:9 image
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=aspect_ratio_min",
  })
  aspectRatioMin?: number;

  /**
   * Show images with the specified Shutterstock-defined category; specify a category name or ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=category",
  })
  category?: string;

  /**
   * Specify either a hexadecimal color in the format '4F21EA' or 'grayscale'; the API returns images that use similar colors
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=color" })
  color?: string;

  /**
   * Show images with the specified contributor names or IDs, allows multiple
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=contributor",
  })
  contributor?: string[];

  /**
   * Show images from contributors in one or more specified countries, or start with NOT to exclude a country from the search
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=contributor_country",
  })
  contributorCountry?: any;

  /**
   * Fields to display in the response; see the documentation for the fields parameter in the overview section
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * (Deprecated; use height_from and height_to instead) Show images with the specified height
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=height",
  })
  height?: number;

  /**
   * Show images with the specified height or larger, in pixels
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=height_from",
  })
  heightFrom?: number;

  /**
   * Show images with the specified height or smaller, in pixels
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=height_to",
  })
  heightTo?: number;

  /**
   * Show images of the specified type
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=image_type",
  })
  imageType?: BulkSearchImagesImageTypeEnum[];

  /**
   * Hide results with potentially unsafe keywords
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=keyword_safe_search",
  })
  keywordSafeSearch?: boolean;

  /**
   * Set query and result language (uses Accept-Language header if not set)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language",
  })
  language?: shared.LanguageEnum;

  /**
   * Show only images with the specified license
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=license",
  })
  license?: BulkSearchImagesLicenseEnum[];

  /**
   * Show image results with the specified model IDs
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=model" })
  model?: string[];

  /**
   * Show image results with horizontal or vertical orientation
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orientation",
  })
  orientation?: BulkSearchImagesOrientationEnum;

  /**
   * Page number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Show images that feature people of the specified age category
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=people_age",
  })
  peopleAge?: BulkSearchImagesPeopleAgeEnum;

  /**
   * Show images with people of the specified ethnicities, or start with NOT to show images without those ethnicities
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=people_ethnicity",
  })
  peopleEthnicity?: BulkSearchImagesPeopleEthnicityEnum[];

  /**
   * Show images with people of the specified gender
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=people_gender",
  })
  peopleGender?: BulkSearchImagesPeopleGenderEnum;

  /**
   * Show images of people with a signed model release
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=people_model_released",
  })
  peopleModelReleased?: boolean;

  /**
   * Show images with the specified number of people
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=people_number",
  })
  peopleNumber?: number;

  /**
   * Number of results per page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Raise or lower search result rankings based on the result's relevance to a specified region; you can provide a country code or an IP address from which the API infers a country
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=region",
  })
  region?: any;

  /**
   * Enable or disable safe search
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=safe" })
  safe?: boolean;

  /**
   * Sort by
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: BulkSearchImagesSortEnum;

  /**
   * Spellcheck the search query and return results on suggested spellings
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=spellcheck_query",
  })
  spellcheckQuery?: boolean;

  /**
   * Amount of detail to render in the response
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=view" })
  view?: BulkSearchImagesViewEnum;

  /**
   * (Deprecated; use width_from and width_to instead) Show images with the specified width
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=width" })
  width?: number;

  /**
   * Show images with the specified width or larger, in pixels
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=width_from",
  })
  widthFrom?: number;

  /**
   * Show images with the specified width or smaller, in pixels
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=width_to",
  })
  widthTo?: number;
}

export class BulkSearchImagesResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  bulkImageSearchResults?: shared.BulkImageSearchResults;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
