/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateInsightsAssessmentsCommentServerList = [
  "https://flex-api.twilio.com",
] as const;

export class CreateInsightsAssessmentsCommentSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateInsightsAssessmentsCommentCreateInsightsAssessmentsCommentRequest extends SpeakeasyBase {
  /**
   * The id of the agent.
   */
  @SpeakeasyMetadata({ data: "form, name=AgentId" })
  agentId: string;

  /**
   * The ID of the category
   */
  @SpeakeasyMetadata({ data: "form, name=CategoryId" })
  categoryId: string;

  /**
   * The name of the category
   */
  @SpeakeasyMetadata({ data: "form, name=CategoryName" })
  categoryName: string;

  /**
   * The Assessment comment.
   */
  @SpeakeasyMetadata({ data: "form, name=Comment" })
  comment: string;

  /**
   * The offset
   */
  @SpeakeasyMetadata({ data: "form, name=Offset" })
  offset: number;

  /**
   * The id of the segment.
   */
  @SpeakeasyMetadata({ data: "form, name=SegmentId" })
  segmentId: string;

  /**
   * The email id of the user.
   */
  @SpeakeasyMetadata({ data: "form, name=UserEmail" })
  userEmail: string;

  /**
   * The name of the user.
   */
  @SpeakeasyMetadata({ data: "form, name=UserName" })
  userName: string;
}

export class CreateInsightsAssessmentsCommentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateInsightsAssessmentsCommentCreateInsightsAssessmentsCommentRequest;

  /**
   * The Token HTTP request header
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Token" })
  token?: string;
}

export class CreateInsightsAssessmentsCommentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  flexV1InsightsAssessmentsComment?: shared.FlexV1InsightsAssessmentsComment;
}
