/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListGroupUsersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * Filter the users by their source
 *
 * @remarks
 *
 */
export enum ListGroupUsersSourceEnum {
  GoogleClassroom = "googleClassroom",
  MicrosoftGraph = "microsoftGraph",
  Clever = "clever",
}

export class ListGroupUsersRequest extends SpeakeasyBase {
  /**
   * Unique identifier of a Flat group
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=group",
  })
  group: string;

  /**
   * Filter the users by their source
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=source",
  })
  source?: ListGroupUsersSourceEnum;
}

export class ListGroupUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  flatErrorResponse?: shared.FlatErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The list of users member of the group
   */
  @SpeakeasyMetadata({ elemType: shared.UserPublic })
  userPublics?: shared.UserPublic[];
}
