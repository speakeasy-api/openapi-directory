/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthenticationSummary } from "./authenticationsummary";
import { NotificationDestinationTypeEnum } from "./notificationdestinationtypeenum";
import { WorkspaceStatusEnum } from "./workspacestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A structure that contains some information about one workspace in the account.
 */
export class WorkspaceSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(() => AuthenticationSummary)
  authentication: AuthenticationSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endpoint" })
  endpoint: string;

  @SpeakeasyMetadata()
  @Expose({ name: "grafanaVersion" })
  grafanaVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "modified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modified: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notificationDestinations" })
  notificationDestinations?: NotificationDestinationTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: WorkspaceStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
