"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import analyticsdatacountswaggermodel as shared_analyticsdatacountswaggermodel
from ..shared import messagemodel as shared_messagemodel
from enum import Enum
from typing import Optional

class GETDataCountUsingGETQueryNameEnum(str, Enum):
    r"""queryName"""
    ACTIVE_USERS_NOW = 'activeUsersNow'
    DAILY_ACTIVE_USERS = 'dailyActiveUsers'
    AVERAGE_DAILY_ACTIVE_USERS = 'averageDailyActiveUsers'
    LAST_MONTHLY_ACTIVE_USERS = 'lastMonthlyActiveUsers'
    MONTHLY_ACTIVE_USERS = 'monthlyActiveUsers'
    AVERAGE_SESSION_DURATION = 'averageSessionDuration'

class GETDataCountUsingGETStageEnum(str, Enum):
    r"""stage"""
    LIVE = 'LIVE'
    PREVIEW = 'PREVIEW'


@dataclasses.dataclass
class GETDataCountUsingGETRequest:
    
    api_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'apiKey', 'style': 'simple', 'explode': False }})
    r"""apiKey"""  
    query_name: GETDataCountUsingGETQueryNameEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'queryName', 'style': 'form', 'explode': True }})
    r"""queryName"""  
    stage: GETDataCountUsingGETStageEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'stage', 'style': 'form', 'explode': True }})
    r"""stage"""  
    

@dataclasses.dataclass
class GETDataCountUsingGETResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    analytics_data_count_swagger_model: Optional[shared_analyticsdatacountswaggermodel.AnalyticsDataCountSwaggerModel] = dataclasses.field(default=None)
    r"""OK"""  
    message_model: Optional[shared_messagemodel.MessageModel] = dataclasses.field(default=None)
    r"""json error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    