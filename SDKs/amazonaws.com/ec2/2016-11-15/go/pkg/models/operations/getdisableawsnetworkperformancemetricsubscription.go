// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDisableAwsNetworkPerformanceMetricSubscriptionActionEnum
type GETDisableAwsNetworkPerformanceMetricSubscriptionActionEnum string

const (
	GETDisableAwsNetworkPerformanceMetricSubscriptionActionEnumDisableAwsNetworkPerformanceMetricSubscription GETDisableAwsNetworkPerformanceMetricSubscriptionActionEnum = "DisableAwsNetworkPerformanceMetricSubscription"
)

func (e *GETDisableAwsNetworkPerformanceMetricSubscriptionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DisableAwsNetworkPerformanceMetricSubscription":
		*e = GETDisableAwsNetworkPerformanceMetricSubscriptionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableAwsNetworkPerformanceMetricSubscriptionActionEnum: %s", s)
	}
}

// GETDisableAwsNetworkPerformanceMetricSubscriptionMetricEnum - The metric used for the disabled subscription.
type GETDisableAwsNetworkPerformanceMetricSubscriptionMetricEnum string

const (
	GETDisableAwsNetworkPerformanceMetricSubscriptionMetricEnumAggregateLatency GETDisableAwsNetworkPerformanceMetricSubscriptionMetricEnum = "aggregate-latency"
)

func (e *GETDisableAwsNetworkPerformanceMetricSubscriptionMetricEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "aggregate-latency":
		*e = GETDisableAwsNetworkPerformanceMetricSubscriptionMetricEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableAwsNetworkPerformanceMetricSubscriptionMetricEnum: %s", s)
	}
}

// GETDisableAwsNetworkPerformanceMetricSubscriptionStatisticEnum - The statistic used for the disabled subscription.
type GETDisableAwsNetworkPerformanceMetricSubscriptionStatisticEnum string

const (
	GETDisableAwsNetworkPerformanceMetricSubscriptionStatisticEnumP50 GETDisableAwsNetworkPerformanceMetricSubscriptionStatisticEnum = "p50"
)

func (e *GETDisableAwsNetworkPerformanceMetricSubscriptionStatisticEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "p50":
		*e = GETDisableAwsNetworkPerformanceMetricSubscriptionStatisticEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableAwsNetworkPerformanceMetricSubscriptionStatisticEnum: %s", s)
	}
}

// GETDisableAwsNetworkPerformanceMetricSubscriptionVersionEnum
type GETDisableAwsNetworkPerformanceMetricSubscriptionVersionEnum string

const (
	GETDisableAwsNetworkPerformanceMetricSubscriptionVersionEnumTwoThousandAndSixteen1115 GETDisableAwsNetworkPerformanceMetricSubscriptionVersionEnum = "2016-11-15"
)

func (e *GETDisableAwsNetworkPerformanceMetricSubscriptionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDisableAwsNetworkPerformanceMetricSubscriptionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableAwsNetworkPerformanceMetricSubscriptionVersionEnum: %s", s)
	}
}

type GETDisableAwsNetworkPerformanceMetricSubscriptionQueryParams struct {
	Action GETDisableAwsNetworkPerformanceMetricSubscriptionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The target Region or Availability Zone that the metric subscription is disabled for. For example, <code>eu-north-1</code>.
	Destination *string `queryParam:"style=form,explode=true,name=Destination"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The metric used for the disabled subscription.
	Metric *GETDisableAwsNetworkPerformanceMetricSubscriptionMetricEnum `queryParam:"style=form,explode=true,name=Metric"`
	// The source Region or Availability Zone that the metric subscription is disabled for. For example, <code>us-east-1</code>.
	Source *string `queryParam:"style=form,explode=true,name=Source"`
	// The statistic used for the disabled subscription.
	Statistic *GETDisableAwsNetworkPerformanceMetricSubscriptionStatisticEnum `queryParam:"style=form,explode=true,name=Statistic"`
	Version   GETDisableAwsNetworkPerformanceMetricSubscriptionVersionEnum    `queryParam:"style=form,explode=true,name=Version"`
}

type GETDisableAwsNetworkPerformanceMetricSubscriptionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDisableAwsNetworkPerformanceMetricSubscriptionRequest struct {
	QueryParams GETDisableAwsNetworkPerformanceMetricSubscriptionQueryParams
	Headers     GETDisableAwsNetworkPerformanceMetricSubscriptionHeaders
}

type GETDisableAwsNetworkPerformanceMetricSubscriptionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
