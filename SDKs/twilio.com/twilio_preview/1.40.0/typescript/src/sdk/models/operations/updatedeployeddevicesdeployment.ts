/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateDeployedDevicesDeploymentServerList = [
  "https://preview.twilio.com",
] as const;

export class UpdateDeployedDevicesDeploymentSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateDeployedDevicesDeploymentUpdateDeployedDevicesDeploymentRequest extends SpeakeasyBase {
  /**
   * Provides a human readable descriptive text for this Deployment, up to 64 characters long
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment.
   */
  @SpeakeasyMetadata({ data: "form, name=SyncServiceSid" })
  syncServiceSid?: string;
}

export class UpdateDeployedDevicesDeploymentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=FleetSid",
  })
  fleetSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateDeployedDevicesDeploymentUpdateDeployedDevicesDeploymentRequest;

  /**
   * Provides a 34 character string that uniquely identifies the requested Deployment resource.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateDeployedDevicesDeploymentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  previewDeployedDevicesFleetDeployment?: shared.PreviewDeployedDevicesFleetDeployment;
}
