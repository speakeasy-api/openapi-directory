// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LiveStreamStatusStreamStatusEnum string

const (
	LiveStreamStatusStreamStatusEnumCreated  LiveStreamStatusStreamStatusEnum = "created"
	LiveStreamStatusStreamStatusEnumReady    LiveStreamStatusStreamStatusEnum = "ready"
	LiveStreamStatusStreamStatusEnumActive   LiveStreamStatusStreamStatusEnum = "active"
	LiveStreamStatusStreamStatusEnumInactive LiveStreamStatusStreamStatusEnum = "inactive"
	LiveStreamStatusStreamStatusEnumError    LiveStreamStatusStreamStatusEnum = "error"
)

func (e *LiveStreamStatusStreamStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "created":
		fallthrough
	case "ready":
		fallthrough
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "error":
		*e = LiveStreamStatusStreamStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LiveStreamStatusStreamStatusEnum: %s", s)
	}
}

// LiveStreamStatus - Brief description of the live stream status.
type LiveStreamStatus struct {
	HealthStatus *LiveStreamHealthStatus           `json:"healthStatus,omitempty"`
	StreamStatus *LiveStreamStatusStreamStatusEnum `json:"streamStatus,omitempty"`
}
