"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LeadFormSettings:
    
    capture_form_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capture_form_enabled'), 'exclude': lambda f: f is None }})  
    first_name_field_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_name_field_enabled'), 'exclude': lambda f: f is None }})  
    first_name_field_required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_name_field_required'), 'exclude': lambda f: f is None }})  
    integration_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integration_enabled'), 'exclude': lambda f: f is None }})  
    last_name_field_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_name_field_enabled'), 'exclude': lambda f: f is None }})  
    last_name_field_required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_name_field_required'), 'exclude': lambda f: f is None }})  
    telephone_field_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('telephone_field_enabled'), 'exclude': lambda f: f is None }})  
    telephone_field_required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('telephone_field_required'), 'exclude': lambda f: f is None }})  
    work_email_validation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('work_email_validation'), 'exclude': lambda f: f is None }})  
    