/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo - Contains all the execution details for a workflow instance. Next available id: 24
 */
public class EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo {
    /**
     * The event data user sends as request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Auto-generated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Registered ids for errors, as "oneof" enums. Each task or logical grouping of tasks may share the same enum.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorCode")
    public CrmlogErrorCode errorCode;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withErrorCode(CrmlogErrorCode errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    /**
     * Errors, warnings, and informationals associated with the workflow/task. The order in which the errors were added by the workflow/task is maintained.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errors")
    public EnterpriseCrmEventbusProtoErrorDetail[] errors;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withErrors(EnterpriseCrmEventbusProtoErrorDetail[] errors) {
        this.errors = errors;
        return this;
    }
    
    /**
     * Contains the details of the execution info of this event: this includes the tasks execution details plus the event execution statistics. Next available id: 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventExecutionDetails")
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionDetails eventExecutionDetails;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withEventExecutionDetails(EnterpriseCrmFrontendsEventbusProtoEventExecutionDetails eventExecutionDetails) {
        this.eventExecutionDetails = eventExecutionDetails;
        return this;
    }
    
    /**
     * Auto-generated primary key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventExecutionInfoId")
    public String eventExecutionInfoId;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withEventExecutionInfoId(String eventExecutionInfoId) {
        this.eventExecutionInfoId = eventExecutionInfoId;
        return this;
    }
    
    /**
     * Message that helps aggregate all sub-executions triggered by one execution and keeps track of child-parent relationships.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionTraceInfo")
    public EnterpriseCrmEventbusProtoExecutionTraceInfo executionTraceInfo;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withExecutionTraceInfo(EnterpriseCrmEventbusProtoExecutionTraceInfo executionTraceInfo) {
        this.executionTraceInfo = executionTraceInfo;
        return this;
    }
    
    /**
     * Auto-generated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModifiedTime")
    public String lastModifiedTime;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withLastModifiedTime(String lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    /**
     * The ways user posts this event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postMethod")
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum postMethod;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withPostMethod(EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoPostMethodEnum postMethod) {
        this.postMethod = postMethod;
        return this;
    }
    
    /**
     * Which Google product the execution_info belongs to. If not set, the execution_info belongs to Integration Platform by default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("product")
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum product;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withProduct(EnterpriseCrmFrontendsEventbusProtoEventExecutionInfoProductEnum product) {
        this.product = product;
        return this;
    }
    
    /**
     * Optional. This is used to de-dup incoming request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestId")
    public String requestId;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    /**
     * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestParams")
    public EnterpriseCrmFrontendsEventbusProtoEventParameters requestParams;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withRequestParams(EnterpriseCrmFrontendsEventbusProtoEventParameters requestParams) {
        this.requestParams = requestParams;
        return this;
    }
    
    /**
     * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseParams")
    public EnterpriseCrmFrontendsEventbusProtoEventParameters responseParams;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withResponseParams(EnterpriseCrmFrontendsEventbusProtoEventParameters responseParams) {
        this.responseParams = responseParams;
        return this;
    }
    
    /**
     * Workflow snapshot number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshotNumber")
    public String snapshotNumber;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withSnapshotNumber(String snapshotNumber) {
        this.snapshotNumber = snapshotNumber;
        return this;
    }
    
    /**
     * Tenant this event is created. Used to reschedule the event to correct tenant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenant")
    public String tenant;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withTenant(String tenant) {
        this.tenant = tenant;
        return this;
    }
    
    /**
     * The trigger id of the workflow trigger config. If both trigger_id and client_id is present, the workflow is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerId")
    public String triggerId;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withTriggerId(String triggerId) {
        this.triggerId = triggerId;
        return this;
    }
    
    /**
     * Required. Pointer to the workflow it is executing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowId")
    public String workflowId;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withWorkflowId(String workflowId) {
        this.workflowId = workflowId;
        return this;
    }
    
    /**
     * Name of the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowName")
    public String workflowName;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withWorkflowName(String workflowName) {
        this.workflowName = workflowName;
        return this;
    }
    
    /**
     * Time interval in seconds to schedule retry of workflow in manifold when workflow is already running
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowRetryBackoffIntervalSeconds")
    public String workflowRetryBackoffIntervalSeconds;
    public EnterpriseCrmFrontendsEventbusProtoEventExecutionInfo withWorkflowRetryBackoffIntervalSeconds(String workflowRetryBackoffIntervalSeconds) {
        this.workflowRetryBackoffIntervalSeconds = workflowRetryBackoffIntervalSeconds;
        return this;
    }
    
}
