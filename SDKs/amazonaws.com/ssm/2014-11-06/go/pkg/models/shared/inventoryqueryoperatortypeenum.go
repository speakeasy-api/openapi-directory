// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InventoryQueryOperatorTypeEnum string

const (
	InventoryQueryOperatorTypeEnumEqual       InventoryQueryOperatorTypeEnum = "Equal"
	InventoryQueryOperatorTypeEnumNotEqual    InventoryQueryOperatorTypeEnum = "NotEqual"
	InventoryQueryOperatorTypeEnumBeginWith   InventoryQueryOperatorTypeEnum = "BeginWith"
	InventoryQueryOperatorTypeEnumLessThan    InventoryQueryOperatorTypeEnum = "LessThan"
	InventoryQueryOperatorTypeEnumGreaterThan InventoryQueryOperatorTypeEnum = "GreaterThan"
	InventoryQueryOperatorTypeEnumExists      InventoryQueryOperatorTypeEnum = "Exists"
)

func (e InventoryQueryOperatorTypeEnum) ToPointer() *InventoryQueryOperatorTypeEnum {
	return &e
}

func (e *InventoryQueryOperatorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Equal":
		fallthrough
	case "NotEqual":
		fallthrough
	case "BeginWith":
		fallthrough
	case "LessThan":
		fallthrough
	case "GreaterThan":
		fallthrough
	case "Exists":
		*e = InventoryQueryOperatorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InventoryQueryOperatorTypeEnum: %v", v)
	}
}
