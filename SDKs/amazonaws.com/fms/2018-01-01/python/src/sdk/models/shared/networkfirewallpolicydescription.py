"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import statefulengineoptions as shared_statefulengineoptions
from ..shared import statefulrulegroup as shared_statefulrulegroup
from ..shared import statelessrulegroup as shared_statelessrulegroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkFirewallPolicyDescription:
    r"""The definition of the Network Firewall firewall policy."""
    
    stateful_default_actions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatefulDefaultActions'), 'exclude': lambda f: f is None }})  
    stateful_engine_options: Optional[shared_statefulengineoptions.StatefulEngineOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatefulEngineOptions'), 'exclude': lambda f: f is None }})  
    stateful_rule_groups: Optional[list[shared_statefulrulegroup.StatefulRuleGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatefulRuleGroups'), 'exclude': lambda f: f is None }})  
    stateless_custom_actions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatelessCustomActions'), 'exclude': lambda f: f is None }})  
    stateless_default_actions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatelessDefaultActions'), 'exclude': lambda f: f is None }})  
    stateless_fragment_default_actions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatelessFragmentDefaultActions'), 'exclude': lambda f: f is None }})  
    stateless_rule_groups: Optional[list[shared_statelessrulegroup.StatelessRuleGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatelessRuleGroups'), 'exclude': lambda f: f is None }})  
    