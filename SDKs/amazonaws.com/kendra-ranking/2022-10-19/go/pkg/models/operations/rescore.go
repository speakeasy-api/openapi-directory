// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RescoreXAmzTargetEnum
type RescoreXAmzTargetEnum string

const (
	RescoreXAmzTargetEnumAwsKendraRerankingFrontendServiceRescore RescoreXAmzTargetEnum = "AWSKendraRerankingFrontendService.Rescore"
)

func (e RescoreXAmzTargetEnum) ToPointer() *RescoreXAmzTargetEnum {
	return &e
}

func (e *RescoreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSKendraRerankingFrontendService.Rescore":
		*e = RescoreXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RescoreXAmzTargetEnum: %v", v)
	}
}

type RescoreRequest struct {
	RescoreRequest    shared.RescoreRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        RescoreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RescoreResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// Success
	RescoreResult *shared.RescoreResult
	StatusCode    int
	RawResponse   *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
