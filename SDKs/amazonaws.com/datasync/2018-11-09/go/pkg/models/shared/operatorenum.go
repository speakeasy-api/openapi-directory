// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OperatorEnum string

const (
	OperatorEnumEquals             OperatorEnum = "Equals"
	OperatorEnumNotEquals          OperatorEnum = "NotEquals"
	OperatorEnumIn                 OperatorEnum = "In"
	OperatorEnumLessThanOrEqual    OperatorEnum = "LessThanOrEqual"
	OperatorEnumLessThan           OperatorEnum = "LessThan"
	OperatorEnumGreaterThanOrEqual OperatorEnum = "GreaterThanOrEqual"
	OperatorEnumGreaterThan        OperatorEnum = "GreaterThan"
	OperatorEnumContains           OperatorEnum = "Contains"
	OperatorEnumNotContains        OperatorEnum = "NotContains"
	OperatorEnumBeginsWith         OperatorEnum = "BeginsWith"
)

func (e *OperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Equals":
		fallthrough
	case "NotEquals":
		fallthrough
	case "In":
		fallthrough
	case "LessThanOrEqual":
		fallthrough
	case "LessThan":
		fallthrough
	case "GreaterThanOrEqual":
		fallthrough
	case "GreaterThan":
		fallthrough
	case "Contains":
		fallthrough
	case "NotContains":
		fallthrough
	case "BeginsWith":
		*e = OperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OperatorEnum: %s", s)
	}
}
