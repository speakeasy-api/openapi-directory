// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AnomalyDetectorTypeEnum string

const (
	AnomalyDetectorTypeEnumSingleMetric AnomalyDetectorTypeEnum = "SINGLE_METRIC"
	AnomalyDetectorTypeEnumMetricMath   AnomalyDetectorTypeEnum = "METRIC_MATH"
)

func (e AnomalyDetectorTypeEnum) ToPointer() *AnomalyDetectorTypeEnum {
	return &e
}

func (e *AnomalyDetectorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SINGLE_METRIC":
		fallthrough
	case "METRIC_MATH":
		*e = AnomalyDetectorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnomalyDetectorTypeEnum: %v", v)
	}
}
