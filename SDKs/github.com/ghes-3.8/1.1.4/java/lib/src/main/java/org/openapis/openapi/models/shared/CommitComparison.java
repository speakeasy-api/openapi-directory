/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CommitComparison - Commit Comparison
 */
public class CommitComparison {
    @JsonProperty("ahead_by")
    public Long aheadBy;
    public CommitComparison withAheadBy(Long aheadBy) {
        this.aheadBy = aheadBy;
        return this;
    }
    
    /**
     * Commit
     */
    @JsonProperty("base_commit")
    public Commit baseCommit;
    public CommitComparison withBaseCommit(Commit baseCommit) {
        this.baseCommit = baseCommit;
        return this;
    }
    
    @JsonProperty("behind_by")
    public Long behindBy;
    public CommitComparison withBehindBy(Long behindBy) {
        this.behindBy = behindBy;
        return this;
    }
    
    @JsonProperty("commits")
    public Commit[] commits;
    public CommitComparison withCommits(Commit[] commits) {
        this.commits = commits;
        return this;
    }
    
    @JsonProperty("diff_url")
    public String diffUrl;
    public CommitComparison withDiffUrl(String diffUrl) {
        this.diffUrl = diffUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("files")
    public DiffEntry[] files;
    public CommitComparison withFiles(DiffEntry[] files) {
        this.files = files;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;
    public CommitComparison withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    /**
     * Commit
     */
    @JsonProperty("merge_base_commit")
    public Commit mergeBaseCommit;
    public CommitComparison withMergeBaseCommit(Commit mergeBaseCommit) {
        this.mergeBaseCommit = mergeBaseCommit;
        return this;
    }
    
    @JsonProperty("patch_url")
    public String patchUrl;
    public CommitComparison withPatchUrl(String patchUrl) {
        this.patchUrl = patchUrl;
        return this;
    }
    
    @JsonProperty("permalink_url")
    public String permalinkUrl;
    public CommitComparison withPermalinkUrl(String permalinkUrl) {
        this.permalinkUrl = permalinkUrl;
        return this;
    }
    
    @JsonProperty("status")
    public CommitComparisonStatusEnum status;
    public CommitComparison withStatus(CommitComparisonStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("total_commits")
    public Long totalCommits;
    public CommitComparison withTotalCommits(Long totalCommits) {
        this.totalCommits = totalCommits;
        return this;
    }
    
    @JsonProperty("url")
    public String url;
    public CommitComparison withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
