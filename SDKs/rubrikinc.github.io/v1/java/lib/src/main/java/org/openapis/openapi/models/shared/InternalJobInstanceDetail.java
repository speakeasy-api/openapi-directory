/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InternalJobInstanceDetail - Returns the progress made in deleting the recoverable ranges.
 */
public class InternalJobInstanceDetail {
    /**
     * Whether this job instance has been archived.
     */
    @JsonProperty("archived")
    public Boolean archived;

    public InternalJobInstanceDetail withArchived(Boolean archived) {
        this.archived = archived;
        return this;
    }
    
    /**
     * Some job types create other 'child' jobs to perform their work. Here we show information on how this job is being affected by its child jobs (if any).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("childJobDebugInfo")
    public String childJobDebugInfo;

    public InternalJobInstanceDetail withChildJobDebugInfo(String childJobDebugInfo) {
        this.childJobDebugInfo = childJobDebugInfo;
        return this;
    }
    
    /**
     * End time of the job instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public InternalJobInstanceDetail withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Error information of the job instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorInfo")
    public String errorInfo;

    public InternalJobInstanceDetail withErrorInfo(String errorInfo) {
        this.errorInfo = errorInfo;
        return this;
    }
    
    /**
     * ID of the instance.
     */
    @JsonProperty("id")
    public String id;

    public InternalJobInstanceDetail withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether this job is disabled or not.
     */
    @JsonProperty("isDisabled")
    public Boolean isDisabled;

    public InternalJobInstanceDetail withIsDisabled(Boolean isDisabled) {
        this.isDisabled = isDisabled;
        return this;
    }
    
    /**
     * The current progress in terms of percentage of the async request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobProgress")
    public Double jobProgress;

    public InternalJobInstanceDetail withJobProgress(Double jobProgress) {
        this.jobProgress = jobProgress;
        return this;
    }
    
    /**
     * Type of the job.
     */
    @JsonProperty("jobType")
    public String jobType;

    public InternalJobInstanceDetail withJobType(String jobType) {
        this.jobType = jobType;
        return this;
    }
    
    /**
     * ID of the node where the job runs.
     */
    @JsonProperty("nodeId")
    public String nodeId;

    public InternalJobInstanceDetail withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * Result of the job instance. Its meaning depends on the job type but is usually an ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public String result;

    public InternalJobInstanceDetail withResult(String result) {
        this.result = result;
        return this;
    }
    
    /**
     * Start time of the job instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public InternalJobInstanceDetail withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Status of the job instance.
     */
    @JsonProperty("status")
    public String status;

    public InternalJobInstanceDetail withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public InternalJobInstanceDetail(@JsonProperty("archived") Boolean archived, @JsonProperty("id") String id, @JsonProperty("isDisabled") Boolean isDisabled, @JsonProperty("jobType") String jobType, @JsonProperty("nodeId") String nodeId, @JsonProperty("status") String status) {
        this.archived = archived;
        this.id = id;
        this.isDisabled = isDisabled;
        this.jobType = jobType;
        this.nodeId = nodeId;
        this.status = status;
  }
}
