// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type RegisterResourceHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type RegisterResourceRequestBody struct {
	// The Amazon Resource Name (ARN) of the resource that you want to register.
	ResourceArn string `json:"ResourceArn"`
	// The identifier for the role that registers the resource.
	RoleArn *string `json:"RoleArn,omitempty"`
	// <p>Designates an Identity and Access Management (IAM) service-linked role by registering this role with the Data Catalog. A service-linked role is a unique type of IAM role that is linked directly to Lake Formation.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/lake-formation/latest/dg/service-linked-roles.html">Using Service-Linked Roles for Lake Formation</a>.</p>
	UseServiceLinkedRole *bool `json:"UseServiceLinkedRole,omitempty"`
}

type RegisterResourceRequest struct {
	Headers RegisterResourceHeaders
	Request RegisterResourceRequestBody `request:"mediaType=application/json"`
}

type RegisterResourceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AlreadyExistsException
	AlreadyExistsException interface{}
	ContentType            string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// Success
	RegisterResourceResponse map[string]interface{}
	// ResourceNumberLimitExceededException
	ResourceNumberLimitExceededException interface{}
	StatusCode                           int
	RawResponse                          *http.Response
}
