<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LiveChatMessageSnippet - Next ID: 33
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LiveChatMessageSnippet
{
    /**
     * The ID of the user that authored this message, this field is not always filled. textMessageEvent - the user that wrote the message fanFundingEvent - the user that funded the broadcast newSponsorEvent - the user that just became a sponsor memberMilestoneChatEvent - the member that sent the message membershipGiftingEvent - the user that made the purchase giftMembershipReceivedEvent - the user that received the gift membership messageDeletedEvent - the moderator that took the action messageRetractedEvent - the author that retracted their message userBannedEvent - the moderator that took the action superChatEvent - the user that made the purchase superStickerEvent - the user that made the purchase
     * 
     * @var ?string $authorChannelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorChannelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authorChannelId = null;
    
    /**
     * Contains a string that can be displayed to the user. If this field is not present the message is silent, at the moment only messages of type TOMBSTONE and CHAT_ENDED_EVENT are silent.
     * 
     * @var ?string $displayMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayMessage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('fanFundingEventDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatFanFundingEventDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatFanFundingEventDetails $fanFundingEventDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('giftMembershipReceivedDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatGiftMembershipReceivedDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatGiftMembershipReceivedDetails $giftMembershipReceivedDetails = null;
    
    /**
     * Whether the message has display content that should be displayed to users.
     * 
     * @var ?bool $hasDisplayContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasDisplayContent')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasDisplayContent = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('liveChatId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $liveChatId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('memberMilestoneChatDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatMemberMilestoneChatDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatMemberMilestoneChatDetails $memberMilestoneChatDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('membershipGiftingDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatMembershipGiftingDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatMembershipGiftingDetails $membershipGiftingDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('messageDeletedDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatMessageDeletedDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatMessageDeletedDetails $messageDeletedDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('messageRetractedDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatMessageRetractedDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatMessageRetractedDetails $messageRetractedDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('newSponsorDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatNewSponsorDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatNewSponsorDetails $newSponsorDetails = null;
    
    /**
     * The date and time when the message was orignally published.
     * 
     * @var ?\DateTime $publishedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('publishedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $publishedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('superChatDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatSuperChatDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatSuperChatDetails $superChatDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('superStickerDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatSuperStickerDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatSuperStickerDetails $superStickerDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('textMessageDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatTextMessageDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatTextMessageDetails $textMessageDetails = null;
    
    /**
     * The type of message, this will always be present, it determines the contents of the message as well as which fields will be present.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LiveChatMessageSnippetTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LiveChatMessageSnippetTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatMessageSnippetTypeEnum $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('userBannedDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LiveChatUserBannedMessageDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LiveChatUserBannedMessageDetails $userBannedDetails = null;
    
	public function __construct()
	{
		$this->authorChannelId = null;
		$this->displayMessage = null;
		$this->fanFundingEventDetails = null;
		$this->giftMembershipReceivedDetails = null;
		$this->hasDisplayContent = null;
		$this->liveChatId = null;
		$this->memberMilestoneChatDetails = null;
		$this->membershipGiftingDetails = null;
		$this->messageDeletedDetails = null;
		$this->messageRetractedDetails = null;
		$this->newSponsorDetails = null;
		$this->publishedAt = null;
		$this->superChatDetails = null;
		$this->superStickerDetails = null;
		$this->textMessageDetails = null;
		$this->type = null;
		$this->userBannedDetails = null;
	}
}
