/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApplicationReadV1 - An application is a set of information submitted by a producer to institutions in order to get quotes.
 */
public class ApplicationReadV1 {
    /**
     * Array of coverage values
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coverage_values")
    public CoverageValueReadV1[] coverageValues;

    public ApplicationReadV1 withCoverageValues(CoverageValueReadV1[] coverageValues) {
        this.coverageValues = coverageValues;
        return this;
    }
    
    /**
     * `id` for a specific application
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public ApplicationReadV1 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Array of product IDs. You can find a list of supported [products](https://www.heraldapi.com/docs/products) via `GET /products`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("products")
    public String[] products;

    public ApplicationReadV1 withProducts(String[] products) {
        this.products = products;
        return this;
    }
    
    /**
     * Array of risk values
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("risk_values")
    public RiskValueReadV1[] riskValues;

    public ApplicationReadV1 withRiskValues(RiskValueReadV1[] riskValues) {
        this.riskValues = riskValues;
        return this;
    }
    
    /**
     * The status of the application.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ApplicationReadV1StatusEnum status;

    public ApplicationReadV1 withStatus(ApplicationReadV1StatusEnum status) {
        this.status = status;
        return this;
    }
    
    public ApplicationReadV1(){}
}
