"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instructedamountrequest as shared_instructedamountrequest
from ..shared import periodicpaymentrequest as shared_periodicpaymentrequest
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class PaymentWriteRequestDebtorAccountTypeEnum(str, Enum):
    r"""Debtor account type"""
    IBAN = 'IBAN'
    SCAN = 'SCAN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentWriteRequestDebtorAccount:
    r"""Debtor account write serializer."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Debtor account name"""  
    account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account'), 'exclude': lambda f: f is None }})
    r"""Debtor account type identifier"""  
    address_country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address_country'), 'exclude': lambda f: f is None }})
    r"""Debtor account address country"""  
    address_street: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address_street'), 'exclude': lambda f: f is None }})
    r"""Debtor account address street"""  
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""Debtor account currency"""  
    post_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('post_code'), 'exclude': lambda f: f is None }})
    r"""Debtor account post code"""  
    type: Optional[PaymentWriteRequestDebtorAccountTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Debtor account type"""  
    type_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type_number'), 'exclude': lambda f: f is None }})
    r"""Debtor account type identifier"""  
    
class PaymentWriteRequestPaymentProductEnum(str, Enum):
    r"""Payment product"""
    T2_P = 'T2P'
    SCT = 'SCT'
    ISCT = 'ISCT'
    CBCT = 'CBCT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentWriteRequest:
    r"""PaymentWriteSerializer."""
    
    creditor_account: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditor_account') }})
    r"""Registered creditor account"""  
    instructed_amount: shared_instructedamountrequest.InstructedAmountRequest = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instructed_amount') }})
    r"""Instructed amount"""  
    redirect: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redirect') }})
    r"""Redirect URL to your application after payment is done"""  
    custom_payment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_payment_id'), 'exclude': lambda f: f is None }})
    r"""Payment Custom Payment ID"""  
    debtor_account: Optional[PaymentWriteRequestDebtorAccount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debtor_account'), 'exclude': lambda f: f is None }})
    r"""Debtor account"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Payment description"""  
    institution_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('institution_id'), 'exclude': lambda f: f is None }})
    r"""Institution ID for Payment"""  
    payment_product: Optional[PaymentWriteRequestPaymentProductEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment_product'), 'exclude': lambda f: f is None }})
    r"""Payment product"""  
    periodic_payment: Optional[shared_periodicpaymentrequest.PeriodicPaymentRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('periodic_payment'), 'exclude': lambda f: f is None }})
    r"""Periodic Payment Serializer."""  
    requested_execution_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requested_execution_date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Payment Execution date (for periodic payments)"""  
    