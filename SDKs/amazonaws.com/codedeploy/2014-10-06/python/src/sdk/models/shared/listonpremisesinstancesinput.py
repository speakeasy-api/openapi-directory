"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import registrationstatus_enum as shared_registrationstatus_enum
from ..shared import tagfilter as shared_tagfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListOnPremisesInstancesInput:
    r"""Represents the input of a <code>ListOnPremisesInstances</code> operation."""
    
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextToken'), 'exclude': lambda f: f is None }})  
    registration_status: Optional[shared_registrationstatus_enum.RegistrationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrationStatus'), 'exclude': lambda f: f is None }})  
    tag_filters: Optional[list[shared_tagfilter.TagFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tagFilters'), 'exclude': lambda f: f is None }})  
    