/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParametersFilter } from "./parametersfilter";
import { ParameterStringFilter } from "./parameterstringfilter";
import { Expose, Type } from "class-transformer";

export class DescribeParametersRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ParametersFilter })
  @Expose({ name: "Filters" })
  @Type(() => ParametersFilter)
  filters?: ParametersFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: ParameterStringFilter })
  @Expose({ name: "ParameterFilters" })
  @Type(() => ParameterStringFilter)
  parameterFilters?: ParameterStringFilter[];
}
