"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import signeddata as shared_signeddata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Challenge:
    r"""Result message for VerifiedAccess.CreateChallenge."""
    
    alternative_challenge: Optional[shared_signeddata.SignedData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alternativeChallenge'), 'exclude': lambda f: f is None }})
    r"""The wrapper message of any data and its signature."""  
    challenge: Optional[shared_signeddata.SignedData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('challenge'), 'exclude': lambda f: f is None }})
    r"""The wrapper message of any data and its signature."""  
    