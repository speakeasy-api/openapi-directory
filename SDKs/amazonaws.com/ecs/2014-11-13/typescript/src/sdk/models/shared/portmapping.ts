/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApplicationProtocolEnum } from "./applicationprotocolenum";
import { TransportProtocolEnum } from "./transportprotocolenum";
import { Expose } from "class-transformer";

/**
 * <p>Port mappings allow containers to access ports on the host container instance to send or receive traffic. Port mappings are specified as part of the container definition.</p> <p>If you use containers in a task with the <code>awsvpc</code> or <code>host</code> network mode, specify the exposed ports using <code>containerPort</code>. The <code>hostPort</code> can be left blank or it must be the same value as the <code>containerPort</code>.</p> <note> <p>You can't expose the same container port for multiple protocols. If you attempt this, an error is returned.</p> </note> <p>After a task reaches the <code>RUNNING</code> status, manual and automatic host and container port assignments are visible in the <code>networkBindings</code> section of <a>DescribeTasks</a> API responses.</p>
 */
export class PortMapping extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "appProtocol" })
  appProtocol?: ApplicationProtocolEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "containerPort" })
  containerPort?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "containerPortRange" })
  containerPortRange?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hostPort" })
  hostPort?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: TransportProtocolEnum;
}
