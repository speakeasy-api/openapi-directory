// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type TrainSecurity struct {
	BearerToken string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

type TrainRequestBody struct {
	// Algorithm used for train
	Algorithm *string `multipartForm:"name=algorithm"`
	// ID of the dataset to train.
	DatasetID *int64 `multipartForm:"name=datasetId"`
	// Number of training iterations for the neural network. Optional.
	Epochs *int `multipartForm:"name=epochs"`
	// N/A for intent or sentiment models.
	LearningRate *float64 `multipartForm:"name=learningRate"`
	// Name of the model. Maximum length is 180 characters.
	Name *string `multipartForm:"name=name"`
	// JSON that contains parameters that specify how the model is created
	TrainParams *shared.V2LanguageTrainParams `multipartForm:"name=trainParams,json"`
}

type TrainResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Training Status
	TrainResponse *shared.TrainResponse
}
