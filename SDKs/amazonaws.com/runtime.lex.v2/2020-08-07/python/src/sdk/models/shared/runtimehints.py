"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import runtimehintdetails as shared_runtimehintdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RuntimeHints:
    r"""<p>You can provide Amazon Lex V2 with hints to the phrases that a customer is likely to use for a slot. When a slot with hints is resolved, the phrases in the runtime hints are preferred in the resolution. You can provide hints for a maximum of 100 intents. You can provide a maximum of 100 slots.</p> <p>Before you can use runtime hints with an existing bot, you must first rebuild the bot.</p> <p>For more information, see <a href=\\"https://docs.aws.amazon.com/lexv2/latest/dg/using-hints.html\\">Using runtime hints to improve recognition of slot values</a>.</p>"""
    
    slot_hints: Optional[dict[str, dict[str, shared_runtimehintdetails.RuntimeHintDetails]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slotHints'), 'exclude': lambda f: f is None }})  
    