<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ChannelConversionPing - Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ChannelConversionPing
{
    /**
     * Defines the context of the ping.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChannelConversionPingContextEnum $context
     */
	#[\JMS\Serializer\Annotation\SerializedName('context')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ChannelConversionPingContextEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChannelConversionPingContextEnum $context = null;
    
    /**
     * The url (without the schema) that the player shall send the ping to. It's at caller's descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping.
     * 
     * @var ?string $conversionUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('conversionUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conversionUrl = null;
    
	public function __construct()
	{
		$this->context = null;
		$this->conversionUrl = null;
	}
}
