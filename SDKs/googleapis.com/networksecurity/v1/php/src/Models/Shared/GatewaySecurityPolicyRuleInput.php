<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GatewaySecurityPolicyRuleInput - The GatewaySecurityPolicyRule resource is in a nested collection within a GatewaySecurityPolicy and represents a traffic matching condition and associated action to perform.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GatewaySecurityPolicyRuleInput
{
    /**
     * Optional. CEL expression for matching on L7/application level criteria.
     * 
     * @var ?string $applicationMatcher
     */
	#[\JMS\Serializer\Annotation\SerializedName('applicationMatcher')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $applicationMatcher = null;
    
    /**
     * Required. Profile which tells what the primitive action should be.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GatewaySecurityPolicyRuleBasicProfileEnum $basicProfile
     */
	#[\JMS\Serializer\Annotation\SerializedName('basicProfile')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GatewaySecurityPolicyRuleBasicProfileEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GatewaySecurityPolicyRuleBasicProfileEnum $basicProfile = null;
    
    /**
     * Optional. Free-text description of the resource.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Required. Whether the rule is enforced.
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * Required. Immutable. Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule} rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Required. Priority of the rule. Lower number corresponds to higher precedence.
     * 
     * @var ?int $priority
     */
	#[\JMS\Serializer\Annotation\SerializedName('priority')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $priority = null;
    
    /**
     * Required. CEL expression for matching on session criteria.
     * 
     * @var ?string $sessionMatcher
     */
	#[\JMS\Serializer\Annotation\SerializedName('sessionMatcher')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sessionMatcher = null;
    
    /**
     * Optional. Flag to enable TLS inspection of traffic matching on , can only be true if the parent GatewaySecurityPolicy references a TLSInspectionConfig.
     * 
     * @var ?bool $tlsInspectionEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('tlsInspectionEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $tlsInspectionEnabled = null;
    
	public function __construct()
	{
		$this->applicationMatcher = null;
		$this->basicProfile = null;
		$this->description = null;
		$this->enabled = null;
		$this->name = null;
		$this->priority = null;
		$this->sessionMatcher = null;
		$this->tlsInspectionEnabled = null;
	}
}
