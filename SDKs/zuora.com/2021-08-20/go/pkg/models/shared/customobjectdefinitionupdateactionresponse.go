// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum - The cardinality of the relationship from this object to another object.
//
// A `manyToOne` relationship means this object is the child object (the "many" side), and the referenced object (the "one" side) is the parent.
//
// A `oneToMany` relationship means this object is the parent object (the "one" side), and the referenced object (the "many" side) is the child.
type CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum string

const (
	CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnumManyToOne CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum = "manyToOne"
	CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnumOneToMany CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum = "oneToMany"
)

func (e *CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "manyToOne":
		fallthrough
	case "oneToMany":
		*e = CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum: %s", s)
	}
}

type CustomObjectDefinitionUpdateActionResponseRelationshipRecordConstraintsCreate struct {
	// Specifies whether Zuora validates the values of mapped fields
	// in custom object records.
	//
	EnforceValidMapping *bool `json:"enforceValidMapping,omitempty"`
}

// CustomObjectDefinitionUpdateActionResponseRelationshipRecordConstraints - Specifies contraints to apply to custom object records.
type CustomObjectDefinitionUpdateActionResponseRelationshipRecordConstraints struct {
	Create *CustomObjectDefinitionUpdateActionResponseRelationshipRecordConstraintsCreate `json:"create,omitempty"`
}

type CustomObjectDefinitionUpdateActionResponseRelationship struct {
	// The cardinality of the relationship from this object to another object.
	//
	// A `manyToOne` relationship means this object is the child object (the "many" side), and the referenced object (the "one" side) is the parent.
	//
	// A `oneToMany` relationship means this object is the parent object (the "one" side), and the referenced object (the "many" side) is the child.
	//
	Cardinality *CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum `json:"cardinality,omitempty"`
	// Field mappings in the form of `<this-object-field-name>`: `<other-object-field-name>`.
	//
	Fields map[string]string `json:"fields,omitempty"`
	// The namespace where the related object is located
	Namespace *string `json:"namespace,omitempty"`
	// The API name of the related object
	Object *string `json:"object,omitempty"`
	// Specifies contraints to apply to custom object records.
	//
	RecordConstraints *CustomObjectDefinitionUpdateActionResponseRelationshipRecordConstraints `json:"recordConstraints,omitempty"`
}

// CustomObjectDefinitionUpdateActionResponseTypeEnum - The type of the updating action on a custom object definition
type CustomObjectDefinitionUpdateActionResponseTypeEnum string

const (
	CustomObjectDefinitionUpdateActionResponseTypeEnumAddField           CustomObjectDefinitionUpdateActionResponseTypeEnum = "addField"
	CustomObjectDefinitionUpdateActionResponseTypeEnumDeleteField        CustomObjectDefinitionUpdateActionResponseTypeEnum = "deleteField"
	CustomObjectDefinitionUpdateActionResponseTypeEnumUpdateField        CustomObjectDefinitionUpdateActionResponseTypeEnum = "updateField"
	CustomObjectDefinitionUpdateActionResponseTypeEnumUpdateObject       CustomObjectDefinitionUpdateActionResponseTypeEnum = "updateObject"
	CustomObjectDefinitionUpdateActionResponseTypeEnumRenameField        CustomObjectDefinitionUpdateActionResponseTypeEnum = "renameField"
	CustomObjectDefinitionUpdateActionResponseTypeEnumAddRelationship    CustomObjectDefinitionUpdateActionResponseTypeEnum = "addRelationship"
	CustomObjectDefinitionUpdateActionResponseTypeEnumDeleteRelationship CustomObjectDefinitionUpdateActionResponseTypeEnum = "deleteRelationship"
)

func (e *CustomObjectDefinitionUpdateActionResponseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "addField":
		fallthrough
	case "deleteField":
		fallthrough
	case "updateField":
		fallthrough
	case "updateObject":
		fallthrough
	case "renameField":
		fallthrough
	case "addRelationship":
		fallthrough
	case "deleteRelationship":
		*e = CustomObjectDefinitionUpdateActionResponseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomObjectDefinitionUpdateActionResponseTypeEnum: %s", s)
	}
}

type CustomObjectDefinitionUpdateActionResponse struct {
	// Optional property for `updateObject` action
	Description *string `json:"description,omitempty"`
	// A reference to a field.
	Field *UpdateCustomObjectCusotmField `json:"field,omitempty"`
	// Optional property for `updateObject` action
	Label *string `json:"label,omitempty"`
	// The namespace of the custom object definition to be updated
	Namespace *string `json:"namespace,omitempty"`
	// The API name of the custom object definition to be updated
	Object       *string                                                 `json:"object,omitempty"`
	Relationship *CustomObjectDefinitionUpdateActionResponseRelationship `json:"relationship,omitempty"`
	// The type of the updating action on a custom object definition
	Type *CustomObjectDefinitionUpdateActionResponseTypeEnum `json:"type,omitempty"`
}
