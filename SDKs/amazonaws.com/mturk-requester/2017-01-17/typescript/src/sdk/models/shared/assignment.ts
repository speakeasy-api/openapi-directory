/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssignmentStatusEnum } from "./assignmentstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 *  The Assignment data structure represents a single assignment of a HIT to a Worker. The assignment tracks the Worker's efforts to complete the HIT, and contains the results for later retrieval.
 */
export class Assignment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AcceptTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  acceptTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Answer" })
  answer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ApprovalTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  approvalTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "AssignmentId" })
  assignmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssignmentStatus" })
  assignmentStatus?: AssignmentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoApprovalTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  autoApprovalTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Deadline" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deadline?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "HITId" })
  hitId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RejectionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  rejectionTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RequesterFeedback" })
  requesterFeedback?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubmitTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submitTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkerId" })
  workerId?: string;
}
