/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConcurrentAccessRestriction } from "./concurrentaccessrestriction";
import { DownloadAccessRestriction } from "./downloadaccessrestriction";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class RequestAccessData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "concurrentAccess" })
  @Type(() => ConcurrentAccessRestriction)
  concurrentAccess?: ConcurrentAccessRestriction;

  @SpeakeasyMetadata()
  @Expose({ name: "downloadAccess" })
  @Type(() => DownloadAccessRestriction)
  downloadAccess?: DownloadAccessRestriction;

  /**
   * Resource type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;
}
