/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ContinueAsNewWorkflowExecutionDecisionAttributes - &lt;p&gt;Provides the details of the &lt;code&gt;ContinueAsNewWorkflowExecution&lt;/code&gt; decision.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Access Control&lt;/b&gt; &lt;/p&gt; &lt;p&gt;You can use IAM policies to control this decision's access to Amazon SWF resources as follows:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use a &lt;code&gt;Resource&lt;/code&gt; element with the domain name to limit the action to only specified domains.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use an &lt;code&gt;Action&lt;/code&gt; element to allow or deny permission to call this action.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Constrain the following parameters by using a &lt;code&gt;Condition&lt;/code&gt; element with the appropriate keys.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;tag&lt;/code&gt; \u2013 A tag used to identify the workflow execution&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;taskList&lt;/code&gt; \u2013 String constraint. The key is &lt;code&gt;swf:taskList.name&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;workflowType.version&lt;/code&gt; \u2013 String constraint. The key is &lt;code&gt;swf:workflowType.version&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If the caller doesn't have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's &lt;code&gt;cause&lt;/code&gt; parameter is set to &lt;code&gt;OPERATION_NOT_PERMITTED&lt;/code&gt;. For details and example IAM policies, see &lt;a href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html"&gt;Using IAM to Manage Access to Amazon SWF Workflows&lt;/a&gt; in the &lt;i&gt;Amazon SWF Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */
public class ContinueAsNewWorkflowExecutionDecisionAttributes {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("childPolicy")
    public ChildPolicyEnum childPolicy;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withChildPolicy(ChildPolicyEnum childPolicy) {
        this.childPolicy = childPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionStartToCloseTimeout")
    public String executionStartToCloseTimeout;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withExecutionStartToCloseTimeout(String executionStartToCloseTimeout) {
        this.executionStartToCloseTimeout = executionStartToCloseTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("input")
    public String input;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withInput(String input) {
        this.input = input;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lambdaRole")
    public String lambdaRole;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withLambdaRole(String lambdaRole) {
        this.lambdaRole = lambdaRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagList")
    public String[] tagList;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withTagList(String[] tagList) {
        this.tagList = tagList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskList")
    public TaskList taskList;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withTaskList(TaskList taskList) {
        this.taskList = taskList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskPriority")
    public String taskPriority;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withTaskPriority(String taskPriority) {
        this.taskPriority = taskPriority;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskStartToCloseTimeout")
    public String taskStartToCloseTimeout;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withTaskStartToCloseTimeout(String taskStartToCloseTimeout) {
        this.taskStartToCloseTimeout = taskStartToCloseTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowTypeVersion")
    public String workflowTypeVersion;
    public ContinueAsNewWorkflowExecutionDecisionAttributes withWorkflowTypeVersion(String workflowTypeVersion) {
        this.workflowTypeVersion = workflowTypeVersion;
        return this;
    }
    
}
