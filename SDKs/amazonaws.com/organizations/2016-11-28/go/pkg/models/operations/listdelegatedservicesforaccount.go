// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListDelegatedServicesForAccountQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListDelegatedServicesForAccountXAmzTargetEnum
type ListDelegatedServicesForAccountXAmzTargetEnum string

const (
	ListDelegatedServicesForAccountXAmzTargetEnumAwsOrganizationsV20161128ListDelegatedServicesForAccount ListDelegatedServicesForAccountXAmzTargetEnum = "AWSOrganizationsV20161128.ListDelegatedServicesForAccount"
)

func (e *ListDelegatedServicesForAccountXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSOrganizationsV20161128.ListDelegatedServicesForAccount":
		*e = ListDelegatedServicesForAccountXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDelegatedServicesForAccountXAmzTargetEnum: %s", s)
	}
}

type ListDelegatedServicesForAccountHeaders struct {
	XAmzAlgorithm     *string                                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListDelegatedServicesForAccountXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListDelegatedServicesForAccountRequest struct {
	QueryParams ListDelegatedServicesForAccountQueryParams
	Headers     ListDelegatedServicesForAccountHeaders
	Request     shared.ListDelegatedServicesForAccountRequest `request:"mediaType=application/json"`
}

type ListDelegatedServicesForAccountResponse struct {
	// AWSOrganizationsNotInUseException
	AWSOrganizationsNotInUseException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountNotFoundException
	AccountNotFoundException interface{}
	// AccountNotRegisteredException
	AccountNotRegisteredException interface{}
	// ConstraintViolationException
	ConstraintViolationException interface{}
	ContentType                  string
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListDelegatedServicesForAccountResponse *shared.ListDelegatedServicesForAccountResponse
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnsupportedAPIEndpointException
	UnsupportedAPIEndpointException interface{}
}
