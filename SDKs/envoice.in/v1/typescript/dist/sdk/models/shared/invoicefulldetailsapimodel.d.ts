import { SpeakeasyBase } from "../../../internal/utils";
import { ClientDetailsApiModel } from "./clientdetailsapimodel";
import { CurrencyDetailsApiModel } from "./currencydetailsapimodel";
import { InvoiceActivityApiModel } from "./invoiceactivityapimodel";
import { InvoiceAttachmentApiModel } from "./invoiceattachmentapimodel";
import { InvoiceGatewayApiModel } from "./invoicegatewayapimodel";
import { InvoiceItemApiModel } from "./invoiceitemapimodel";
import { InvoicePaymentApiModel } from "./invoicepaymentapimodel";
import { InvoiceRecurringApiModel } from "./invoicerecurringapimodel";
/**
 * Indicate the status of the invoice (paid/unpaid/overdue)
 */
export declare enum InvoiceFullDetailsApiModelStatusEnum {
    Draft = "Draft",
    Paid = "Paid",
    Unpaid = "Unpaid",
    Overdue = "Overdue",
    Void = "Void"
}
/**
 * OK
 */
export declare class InvoiceFullDetailsApiModel extends SpeakeasyBase {
    /**
     * Security access token used for accessing the invoice anonymously
     */
    accessToken?: string;
    /**
     * List of invoice activities. Invoice audit log
     */
    activities?: InvoiceActivityApiModel[];
    /**
     * List of invoice attachments
     */
    attachments?: InvoiceAttachmentApiModel[];
    client?: ClientDetailsApiModel;
    /**
     * Indicate from which invoice this invoice has been cloned from
     */
    clonedFromId?: number;
    currency?: CurrencyDetailsApiModel;
    /**
     * Amount that goes as a discount
     */
    discountAmount?: number;
    /**
     * Indicates when the invoice will be proclamed as due
     */
    duedate?: Date;
    /**
     * Indicate that the invoice allows the user to pay the invoice partially
     */
    enablePartialPayments?: boolean;
    /**
     * Invoice id
     */
    id?: number;
    /**
     * Hold the id of the invoice category
     */
    invoiceCategoryId?: number;
    /**
     * Indicates when the invoice was issued
     */
    issuedOn?: Date;
    /**
     * List of invoice items
     */
    items?: InvoiceItemApiModel[];
    /**
     * Internal note regarding the invoice
     */
    notes?: string;
    /**
     * Unique invoice number
     */
    number?: string;
    /**
     * List of enabled payment gateways for this invoice
     */
    paymentGateways?: InvoiceGatewayApiModel[];
    /**
     * List of invoice payments
     */
    payments?: InvoicePaymentApiModel[];
    /**
     * Unique number generated by the buyer
     */
    poNumber?: string;
    /**
     * Definition of invoice recurring profile
     */
    recurringProfile?: InvoiceRecurringApiModel;
    /**
     * Hold the id of the recurring profile
     */
    recurringProfileId?: number;
    /**
     * Should send email reminders to client?
     */
    shouldSendReminders?: boolean;
    /**
     * Indicate the status of the invoice (paid/unpaid/overdue)
     */
    status?: InvoiceFullDetailsApiModelStatusEnum;
    /**
     * Total amount of the invoice without tax
     */
    subTotalAmount?: number;
    /**
     * Amount that goes to the tax
     */
    taxAmount?: number;
    /**
     * Terms of agreement
     */
    terms?: string;
    /**
     * Total amount of the invoice with tax
     */
    totalAmount?: number;
}
