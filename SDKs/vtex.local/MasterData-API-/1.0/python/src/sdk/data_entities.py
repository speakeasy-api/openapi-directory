"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class DataEntities:
    r"""Set of APIs that returns the structure of the data entities."""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def getdataentitystructure(self, request: operations.GetdataentitystructureRequest) -> operations.GetdataentitystructureResponse:
        r"""Get data entity structure
        Returns the data entity structure with its respective fields and data type.
        
        ### Response status code
        
        1. Status Code `403`: Access not allowed
        2. Status Code `200`: Retrieves data entity structure
        
        > All headers listed below are required.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetdataentitystructureRequest, base_url, '/api/dataentities/{acronym}', request)
        
        headers = utils.get_headers(request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetdataentitystructureResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Getdataentityfields])
                res.getdataentityfields = out

        return res

    def listdataentities(self, request: operations.ListdataentitiesRequest) -> operations.ListdataentitiesResponse:
        r"""List data entities
        Retrieves the list of existing data entities in the store.
        
        ### Response status code
        
        1. Status Code `403`: Access not allowed
        2. Status Code `200`: Retrieves data entity list
        
        > All headers listed below are required.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/api/dataentities'
        
        headers = utils.get_headers(request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.ListdataentitiesResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[list[shared.Listdataentity]])
                res.listdataentities = out

        return res

    