/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MatchItem } from "./matchitem";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetMatchesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MatchGenerationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  matchGenerationDate?: Date;

  @SpeakeasyMetadata({ elemType: MatchItem })
  @Expose({ name: "Matches" })
  @Type(() => MatchItem)
  matches?: MatchItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PotentialMatches" })
  potentialMatches?: number;
}
