/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttachmentStateChange } from "./attachmentstatechange";
import { ContainerStateChange } from "./containerstatechange";
import { ManagedAgentStateChange } from "./managedagentstatechange";
import { Expose, Transform, Type } from "class-transformer";

export class SubmitTaskStateChangeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AttachmentStateChange })
  @Expose({ name: "attachments" })
  @Type(() => AttachmentStateChange)
  attachments?: AttachmentStateChange[];

  @SpeakeasyMetadata()
  @Expose({ name: "cluster" })
  cluster?: string;

  @SpeakeasyMetadata({ elemType: ContainerStateChange })
  @Expose({ name: "containers" })
  @Type(() => ContainerStateChange)
  containers?: ContainerStateChange[];

  @SpeakeasyMetadata()
  @Expose({ name: "executionStoppedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executionStoppedAt?: Date;

  @SpeakeasyMetadata({ elemType: ManagedAgentStateChange })
  @Expose({ name: "managedAgents" })
  @Type(() => ManagedAgentStateChange)
  managedAgents?: ManagedAgentStateChange[];

  @SpeakeasyMetadata()
  @Expose({ name: "pullStartedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  pullStartedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "pullStoppedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  pullStoppedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "task" })
  task?: string;
}
