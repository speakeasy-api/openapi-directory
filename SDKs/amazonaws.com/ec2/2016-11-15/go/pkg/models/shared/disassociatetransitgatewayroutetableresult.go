// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum - The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
type DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum string

const (
	DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnumVpc                  DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum = "vpc"
	DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnumVpn                  DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum = "vpn"
	DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnumDirectConnectGateway DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum = "direct-connect-gateway"
	DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnumConnect              DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum = "connect"
	DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnumPeering              DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum = "peering"
	DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnumTgwPeering           DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum = "tgw-peering"
)

func (e *DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum: %s", s)
	}
}

// DisassociateTransitGatewayRouteTableResultAssociationStateEnum - The state of the association.
type DisassociateTransitGatewayRouteTableResultAssociationStateEnum string

const (
	DisassociateTransitGatewayRouteTableResultAssociationStateEnumAssociating    DisassociateTransitGatewayRouteTableResultAssociationStateEnum = "associating"
	DisassociateTransitGatewayRouteTableResultAssociationStateEnumAssociated     DisassociateTransitGatewayRouteTableResultAssociationStateEnum = "associated"
	DisassociateTransitGatewayRouteTableResultAssociationStateEnumDisassociating DisassociateTransitGatewayRouteTableResultAssociationStateEnum = "disassociating"
	DisassociateTransitGatewayRouteTableResultAssociationStateEnumDisassociated  DisassociateTransitGatewayRouteTableResultAssociationStateEnum = "disassociated"
)

func (e *DisassociateTransitGatewayRouteTableResultAssociationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		*e = DisassociateTransitGatewayRouteTableResultAssociationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateTransitGatewayRouteTableResultAssociationStateEnum: %s", s)
	}
}

// DisassociateTransitGatewayRouteTableResultAssociation - Information about the association.
type DisassociateTransitGatewayRouteTableResultAssociation struct {
	ResourceID                 *string
	ResourceType               *DisassociateTransitGatewayRouteTableResultAssociationResourceTypeEnum
	State                      *DisassociateTransitGatewayRouteTableResultAssociationStateEnum
	TransitGatewayAttachmentID *string
	TransitGatewayRouteTableID *string
}

// DisassociateTransitGatewayRouteTableResult - Success
type DisassociateTransitGatewayRouteTableResult struct {
	Association *DisassociateTransitGatewayRouteTableResultAssociation
}
