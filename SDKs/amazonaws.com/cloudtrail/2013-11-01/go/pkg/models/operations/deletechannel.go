// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteChannelXAmzTargetEnum
type DeleteChannelXAmzTargetEnum string

const (
	DeleteChannelXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101DeleteChannel DeleteChannelXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteChannel"
)

func (e DeleteChannelXAmzTargetEnum) ToPointer() *DeleteChannelXAmzTargetEnum {
	return &e
}

func (e *DeleteChannelXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DeleteChannel":
		*e = DeleteChannelXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteChannelXAmzTargetEnum: %v", v)
	}
}

type DeleteChannelRequest struct {
	DeleteChannelRequest shared.DeleteChannelRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           DeleteChannelXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteChannelResponse struct {
	// ChannelARNInvalidException
	ChannelARNInvalidException interface{}
	// ChannelNotFoundException
	ChannelNotFoundException interface{}
	ContentType              string
	// Success
	DeleteChannelResponse map[string]interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
