"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GetContentTypeEnum(str, Enum):
    r"""Content Type"""
    APPLICATION_JSON = 'application/json'
    TEXT_HTML = 'text/html'
    TEXT_XML = 'text/xml'
    APPLICATION_XML = 'application/xml'

class GetHypermediaEnum(str, Enum):
    r"""Disable Hypermedia"""
    YES = 'yes'
    NO = 'no'


@dataclasses.dataclass
class GetRequest:
    
    content_type: Optional[GetContentTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'content-type', 'style': 'form', 'explode': True }})
    r"""Content Type"""  
    hypermedia: Optional[GetHypermediaEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'hypermedia', 'style': 'form', 'explode': True }})
    r"""Disable Hypermedia"""  
    
class Get200ApplicationJSONStatusEnum(str, Enum):
    OK = 'OK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Get200ApplicationJSON:
    r"""Return Status OK and/or resource list"""
    
    status: Optional[Get200ApplicationJSONStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_200_application_json_object: Optional[Get200ApplicationJSON] = dataclasses.field(default=None)
    r"""Return Status OK and/or resource list"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    