"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StandardSchedulerSettings:
    r"""Scheduler settings for standard environment."""
    
    max_instances: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxInstances'), 'exclude': lambda f: f is None }})
    r"""Maximum number of instances to run for this version. Set to zero to disable max_instances configuration."""  
    min_instances: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minInstances'), 'exclude': lambda f: f is None }})
    r"""Minimum number of instances to run for this version. Set to zero to disable min_instances configuration."""  
    target_cpu_utilization: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetCpuUtilization'), 'exclude': lambda f: f is None }})
    r"""Target CPU utilization ratio to maintain when scaling."""  
    target_throughput_utilization: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetThroughputUtilization'), 'exclude': lambda f: f is None }})
    r"""Target throughput utilization ratio to maintain when scaling"""  
    