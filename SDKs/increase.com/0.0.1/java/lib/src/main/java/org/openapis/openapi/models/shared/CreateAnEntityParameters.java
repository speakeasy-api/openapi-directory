/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateAnEntityParameters {
    /**
     * Details of the corporation entity to create. Required if `structure` is equal to `corporation`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("corporation")
    public CreateAnEntityParametersCorporation corporation;
    public CreateAnEntityParameters withCorporation(CreateAnEntityParametersCorporation corporation) {
        this.corporation = corporation;
        return this;
    }
    
    /**
     * The description you choose to give the entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CreateAnEntityParameters withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Details of the joint entity to create. Required if `structure` is equal to `joint`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("joint")
    public CreateAnEntityParametersJoint joint;
    public CreateAnEntityParameters withJoint(CreateAnEntityParametersJoint joint) {
        this.joint = joint;
        return this;
    }
    
    /**
     * Details of the natural person entity to create. Required if `structure` is equal to `natural_person`. Natural people entities should be submitted with `social_security_number` or `individual_taxpayer_identification_number` identification methods.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("natural_person")
    public CreateAnEntityParametersNaturalPerson naturalPerson;
    public CreateAnEntityParameters withNaturalPerson(CreateAnEntityParametersNaturalPerson naturalPerson) {
        this.naturalPerson = naturalPerson;
        return this;
    }
    
    /**
     * The relationship between your group and the entity.
     */
    @JsonProperty("relationship")
    public CreateAnEntityParametersRelationshipEnum relationship;
    public CreateAnEntityParameters withRelationship(CreateAnEntityParametersRelationshipEnum relationship) {
        this.relationship = relationship;
        return this;
    }
    
    /**
     * The type of Entity to create.
     */
    @JsonProperty("structure")
    public CreateAnEntityParametersStructureEnum structure;
    public CreateAnEntityParameters withStructure(CreateAnEntityParametersStructureEnum structure) {
        this.structure = structure;
        return this;
    }
    
    /**
     * Additional documentation associated with the entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supplemental_documents")
    public CreateAnEntityParametersSupplementalDocuments[] supplementalDocuments;
    public CreateAnEntityParameters withSupplementalDocuments(CreateAnEntityParametersSupplementalDocuments[] supplementalDocuments) {
        this.supplementalDocuments = supplementalDocuments;
        return this;
    }
    
    /**
     * Details of the trust entity to create. Required if `structure` is equal to `trust`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trust")
    public CreateAnEntityParametersTrust trust;
    public CreateAnEntityParameters withTrust(CreateAnEntityParametersTrust trust) {
        this.trust = trust;
        return this;
    }
    
}
