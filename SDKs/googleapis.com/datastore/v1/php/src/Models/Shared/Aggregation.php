<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Aggregation - Defines an aggregation that produces a single result.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Aggregation
{
    /**
     * Optional. Optional name of the property to store the result of the aggregation. If not provided, Datastore will pick a default name following the format `property_`. For example: ``` AGGREGATE COUNT_UP_TO(1) AS count_up_to_1, COUNT_UP_TO(2), COUNT_UP_TO(3) AS count_up_to_3, COUNT(*) OVER ( ... ); ``` becomes: ``` AGGREGATE COUNT_UP_TO(1) AS count_up_to_1, COUNT_UP_TO(2) AS property_1, COUNT_UP_TO(3) AS count_up_to_3, COUNT(*) AS property_2 OVER ( ... ); ``` Requires: * Must be unique across all aggregation aliases. * Conform to entity property name limitations.
     * 
     * @var ?string $alias
     */
	#[\JMS\Serializer\Annotation\SerializedName('alias')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $alias = null;
    
    /**
     * Count of entities that match the query. The `COUNT(*)` aggregation function operates on the entire entity so it does not require a field reference.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Count $count
     */
	#[\JMS\Serializer\Annotation\SerializedName('count')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Count')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Count $count = null;
    
	public function __construct()
	{
		$this->alias = null;
		$this->count = null;
	}
}
