/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TagValue } from "./tagvalue";
import { Expose, Type } from "class-transformer";

/**
 * The ListTagValues response.
 */
export class ListTagValuesResponse extends SpeakeasyBase {
  /**
   * A pagination token returned from a previous call to `ListTagValues` that indicates from where listing should continue. This is currently not used, but the server may at any point start supplying a valid token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * A possibly paginated list of TagValues that are direct descendants of the specified parent TagKey.
   */
  @SpeakeasyMetadata({ elemType: TagValue })
  @Expose({ name: "tagValues" })
  @Type(() => TagValue)
  tagValues?: TagValue[];
}
