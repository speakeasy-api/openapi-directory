/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ActivitySetRepoSubscriptionRequestBody extends SpeakeasyBase {
  /**
   * Determines if all notifications should be blocked from this repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ignored" })
  ignored?: boolean;

  /**
   * Determines if notifications should be received from this repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscribed" })
  subscribed?: boolean;
}

export class ActivitySetRepoSubscriptionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: ActivitySetRepoSubscriptionRequestBody;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class ActivitySetRepoSubscriptionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  repositorySubscription?: shared.RepositorySubscription;
}
