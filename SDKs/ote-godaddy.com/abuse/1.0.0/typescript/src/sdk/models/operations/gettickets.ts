/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * The type of abuse.
 */
export enum GetTicketsTypeEnum {
  ARecord = "A_RECORD",
  ChildAbuse = "CHILD_ABUSE",
  Content = "CONTENT",
  FraudWire = "FRAUD_WIRE",
  IpBlock = "IP_BLOCK",
  Malware = "MALWARE",
  NetworkAbuse = "NETWORK_ABUSE",
  Phishing = "PHISHING",
  Spam = "SPAM",
}

export class GetTicketsRequest extends SpeakeasyBase {
  /**
   * Is this abuse ticket closed?
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=closed",
  })
  closed?: boolean;

  /**
   * The latest abuse ticket creation date to pull abuse tickets for
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdEnd",
  })
  createdEnd?: string;

  /**
   * The earliest abuse ticket creation date to pull abuse tickets for
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdStart",
  })
  createdStart?: string;

  /**
   * Number of abuse ticket numbers to return.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The earliest result set record number to pull abuse tickets for
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * The domain name or ip address the abuse originated from
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sourceDomainOrIp",
  })
  sourceDomainOrIp?: string;

  /**
   * The brand/company the abuse is targeting. ie: brand name/bank name
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=target",
  })
  target?: string;

  /**
   * The type of abuse.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: GetTicketsTypeEnum;
}

export class GetTicketsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
