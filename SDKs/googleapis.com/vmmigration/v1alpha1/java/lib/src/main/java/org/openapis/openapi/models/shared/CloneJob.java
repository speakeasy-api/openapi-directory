/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CloneJob - CloneJob describes the process of creating a clone of a MigratingVM to the requested target based on the latest successful uploaded snapshots. While the migration cycles of a MigratingVm take place, it is possible to verify the uploaded VM can be started in the cloud, by creating a clone. The clone can be created without any downtime, and it is created using the latest snapshots which are already in the cloud. The cloneJob is only responsible for its work, not its products, which means once it is finished, it will never touch the instance it created. It will only delete it in case of the CloneJob being cancelled or upon failure to clone.
 */
public class CloneJob {
    /**
     * ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeEngineTargetDetails")
    public ComputeEngineTargetDetails computeEngineTargetDetails;
    public CloneJob withComputeEngineTargetDetails(ComputeEngineTargetDetails computeEngineTargetDetails) {
        this.computeEngineTargetDetails = computeEngineTargetDetails;
        return this;
    }
    
    /**
     * TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeEngineVmDetails")
    public TargetVMDetails computeEngineVmDetails;
    public CloneJob withComputeEngineVmDetails(TargetVMDetails computeEngineVmDetails) {
        this.computeEngineVmDetails = computeEngineVmDetails;
        return this;
    }
    
    /**
     * Output only. The time the clone job was created (as an API call, not when it was actually created in the target).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public CloneJob withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. The time the clone job was ended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;
    public CloneJob withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;
    public CloneJob withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * Output only. The name of the clone.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CloneJob withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. State of the clone job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public CloneJobStateEnum state;
    public CloneJob withState(CloneJobStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. The time the state was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateTime")
    public String stateTime;
    public CloneJob withStateTime(String stateTime) {
        this.stateTime = stateTime;
        return this;
    }
    
    /**
     * Output only. The clone steps list representing its progress.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("steps")
    public CloneStep[] steps;
    public CloneJob withSteps(CloneStep[] steps) {
        this.steps = steps;
        return this;
    }
    
    /**
     * TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetDetails")
    public TargetVMDetails targetDetails;
    public CloneJob withTargetDetails(TargetVMDetails targetDetails) {
        this.targetDetails = targetDetails;
        return this;
    }
    
}
