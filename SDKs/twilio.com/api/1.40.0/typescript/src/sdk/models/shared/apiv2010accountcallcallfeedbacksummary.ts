/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CallFeedbackSummaryEnumStatusEnum } from "./callfeedbacksummaryenumstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class ApiV2010AccountCallCallFeedbackSummary extends SpeakeasyBase {
  /**
   * The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The total number of calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_count" })
  callCount?: number;

  /**
   * The total number of calls with a feedback entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_feedback_count" })
  callFeedbackCount?: number;

  /**
   * The date that this resource was created, given in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  dateCreated?: string;

  /**
   * The date that this resource was last updated, given in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  dateUpdated?: string;

  /**
   * The last date for which feedback entries are included in this Feedback Summary, formatted as `YYYY-MM-DD` and specified in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate?: Date;

  /**
   * Whether the feedback summary includes subaccounts; `true` if it does, otherwise `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "include_subaccounts" })
  includeSubaccounts?: boolean;

  /**
   * A list of issues experienced during the call. The issues can be: `imperfect-audio`, `dropped-call`, `incorrect-caller-id`, `post-dial-delay`, `digits-not-captured`, `audio-latency`, or `one-way-audio`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issues" })
  issues?: any[];

  /**
   * The average QualityScore of the feedback entries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quality_score_average" })
  qualityScoreAverage?: number;

  /**
   * The median QualityScore of the feedback entries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quality_score_median" })
  qualityScoreMedian?: number;

  /**
   * The standard deviation of the quality scores.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quality_score_standard_deviation" })
  qualityScoreStandardDeviation?: number;

  /**
   * A 34 character string that uniquely identifies this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The first date for which feedback entries are included in this feedback summary, formatted as `YYYY-MM-DD` and specified in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CallFeedbackSummaryEnumStatusEnum;
}
