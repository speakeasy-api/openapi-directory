// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LambdaFunctionSortByEnum string

const (
	LambdaFunctionSortByEnumCritical LambdaFunctionSortByEnum = "CRITICAL"
	LambdaFunctionSortByEnumHigh     LambdaFunctionSortByEnum = "HIGH"
	LambdaFunctionSortByEnumAll      LambdaFunctionSortByEnum = "ALL"
)

func (e LambdaFunctionSortByEnum) ToPointer() *LambdaFunctionSortByEnum {
	return &e
}

func (e *LambdaFunctionSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CRITICAL":
		fallthrough
	case "HIGH":
		fallthrough
	case "ALL":
		*e = LambdaFunctionSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LambdaFunctionSortByEnum: %v", v)
	}
}
