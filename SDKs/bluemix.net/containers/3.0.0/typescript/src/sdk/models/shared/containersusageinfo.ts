/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContainersUsageInfoAvailableSizes } from "./containersusageinfoavailablesizes";
import { Expose, Type } from "class-transformer";

export class ContainersUsageInfoLimits extends SpeakeasyBase {
  /**
   * The number of containers that can be created in the space. If -1 is returned, then an unlimited number of containers can be created. The number however is counted towards and limited by the container memory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containers" })
  containers?: number;

  /**
   * The number of public IP addresses that can be allocated to the space.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floating_ips" })
  floatingIps?: number;

  /**
   * The amount of container memory that can be used in the space in megabyte.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memory_MB" })
  memoryMB?: number;

  /**
   * The number of virtual CPUs that are assigned to the space.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcpu" })
  vcpu?: number;
}

export class ContainersUsageInfoUsage extends SpeakeasyBase {
  /**
   * The number of containers that were created in the space. All containers that count towards the quota limit are listed independent on their current state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containers" })
  containers?: number;

  /**
   * The number of public IP addresses that are allocated to the space.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floating_ips" })
  floatingIps?: number;

  /**
   * The number of public IP addresses that are bound to a container in the space.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floating_ips_bound" })
  floatingIpsBound?: number;

  /**
   * The number of private images that were added to the private Bluemix registry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "images" })
  images?: number;

  /**
   * The amount of container memory that is already used by the containers that were created in the space in megabyte.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memory_MB" })
  memoryMB?: number;

  /**
   * The number of containers that are currently in a running state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "running" })
  running?: number;

  /**
   * The number of virtual CPUs that are allocated to the space.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcpu" })
  vcpu?: number;
}

/**
 * OK. A list of available container sizes as well as the quota limit and usage for a space is returned.
 */
export class ContainersUsageInfo extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ContainersUsageInfoAvailableSizes })
  @Expose({ name: "AvailableSizes" })
  @Type(() => ContainersUsageInfoAvailableSizes)
  availableSizes?: ContainersUsageInfoAvailableSizes[];

  /**
   * The IBM Containers machine where the space is located
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Environment" })
  environment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Limits" })
  @Type(() => ContainersUsageInfoLimits)
  limits?: ContainersUsageInfoLimits;

  @SpeakeasyMetadata()
  @Expose({ name: "Usage" })
  @Type(() => ContainersUsageInfoUsage)
  usage?: ContainersUsageInfoUsage;
}
