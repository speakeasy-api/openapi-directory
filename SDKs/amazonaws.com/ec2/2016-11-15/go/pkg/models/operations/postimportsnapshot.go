// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTImportSnapshotActionEnum
type POSTImportSnapshotActionEnum string

const (
	POSTImportSnapshotActionEnumImportSnapshot POSTImportSnapshotActionEnum = "ImportSnapshot"
)

func (e POSTImportSnapshotActionEnum) ToPointer() *POSTImportSnapshotActionEnum {
	return &e
}

func (e *POSTImportSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ImportSnapshot":
		*e = POSTImportSnapshotActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTImportSnapshotActionEnum: %v", v)
	}
}

// POSTImportSnapshotVersionEnum
type POSTImportSnapshotVersionEnum string

const (
	POSTImportSnapshotVersionEnumTwoThousandAndSixteen1115 POSTImportSnapshotVersionEnum = "2016-11-15"
)

func (e POSTImportSnapshotVersionEnum) ToPointer() *POSTImportSnapshotVersionEnum {
	return &e
}

func (e *POSTImportSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTImportSnapshotVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTImportSnapshotVersionEnum: %v", v)
	}
}

type POSTImportSnapshotRequest struct {
	Action            POSTImportSnapshotActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTImportSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTImportSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
