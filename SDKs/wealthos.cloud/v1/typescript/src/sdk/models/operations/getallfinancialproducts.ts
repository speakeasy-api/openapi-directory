/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetAllFinancialProductsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

export class GetAllFinancialProductsRequest extends SpeakeasyBase {
  /**
   * multiple product types as a comma seperated string
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=product_types",
  })
  productTypes?: string;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class GetAllFinancialProducts500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class GetAllFinancialProducts429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The specified resource was not found
 */
export class GetAllFinancialProducts404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class GetAllFinancialProducts403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class GetAllFinancialProducts401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class GetAllFinancialProducts400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Whether the regulations allow a financial product to be flexible
 */
export enum GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsFlexibleEnum {
  Yes = "YES",
  No = "NO",
}

export class GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsInterestPreferences extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "interest_accrual_basis" })
  interestAccrualBasis?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "interest_payment_frequency" })
  interestPaymentFrequency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pay_interest" })
  payInterest?: string;
}

export class GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsInvestmentPreferences extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "minimum_one_off_investment" })
  minimumOneOffInvestment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "minimum_regular_monthly_investment" })
  minimumRegularMonthlyInvestment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "regular_investment_dates" })
  regularInvestmentDates?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "regular_investment_frequencies" })
  regularInvestmentFrequencies?: string[];
}

export class GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsWithdrawalPreferences extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "minimum_one_off_withdrawal" })
  minimumOneOffWithdrawal?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "minimum_regular_monthly_withdrawal" })
  minimumRegularMonthlyWithdrawal?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "regular_withdrawal_frequencies" })
  regularWithdrawalFrequencies?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "regular_withdrawal_payment_dates" })
  regularWithdrawalPaymentDates?: string[];
}

export class GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProducts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "additional_cash_currencies" })
  additionalCashCurrencies?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "availability" })
  availability?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dividend_options" })
  dividendOptions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "financial_product_id" })
  financialProductId: string;

  /**
   * Whether the regulations allow a financial product to be flexible
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flexible" })
  flexible?: GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsFlexibleEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "interest_preferences" })
  @Type(
    () =>
      GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsInterestPreferences
  )
  interestPreferences?: GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsInterestPreferences;

  @SpeakeasyMetadata()
  @Expose({ name: "investment_preferences" })
  @Type(
    () =>
      GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsInvestmentPreferences
  )
  investmentPreferences?: GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsInvestmentPreferences;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Financial product type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "product_type" })
  productType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "withdrawal_preferences" })
  @Type(
    () =>
      GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsWithdrawalPreferences
  )
  withdrawalPreferences?: GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProductsWithdrawalPreferences;
}

/**
 * A paged array of financial products
 */
export class GetAllFinancialProducts200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProducts,
  })
  @Expose({ name: "financial_products" })
  @Type(
    () => GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProducts
  )
  financialProducts: GetAllFinancialProducts200ApplicationJSONRootTypeForFinancialProducts[];
}

export class GetAllFinancialProductsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A paged array of financial products
   */
  @SpeakeasyMetadata()
  getAllFinancialProducts200ApplicationJSONObject?: GetAllFinancialProducts200ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  getAllFinancialProducts400ApplicationJSONObject?: GetAllFinancialProducts400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  getAllFinancialProducts401ApplicationJSONObject?: GetAllFinancialProducts401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  getAllFinancialProducts403ApplicationJSONObject?: GetAllFinancialProducts403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  getAllFinancialProducts404ApplicationJSONObject?: GetAllFinancialProducts404ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  getAllFinancialProducts429ApplicationJSONObject?: GetAllFinancialProducts429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  getAllFinancialProducts500ApplicationJSONObject?: GetAllFinancialProducts500ApplicationJSON;
}
