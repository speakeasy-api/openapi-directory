/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class InvalidPhoneNumber {
    /**
     * Full country name
     */
    @JsonProperty("country")
    public InvalidPhoneNumberCountryEnum country;
    public InvalidPhoneNumber withCountry(InvalidPhoneNumberCountryEnum country) {
        this.country = country;
        return this;
    }
    
    /**
     * Representation of current phone carrier information like network code, name, country, network type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_carrier")
    public InvalidPhoneNumberCurrentCarrierEnum currentCarrier;
    public InvalidPhoneNumber withCurrentCarrier(InvalidPhoneNumberCurrentCarrierEnum currentCarrier) {
        this.currentCarrier = currentCarrier;
        return this;
    }
    
    /**
     * Phone number formatted to international standard
     */
    @JsonProperty("international_format")
    public InvalidPhoneNumberInternationalFormatEnum internationalFormat;
    public InvalidPhoneNumber withInternationalFormat(InvalidPhoneNumberInternationalFormatEnum internationalFormat) {
        this.internationalFormat = internationalFormat;
        return this;
    }
    
    /**
     * Country code in 3 letter ISO format
     */
    @JsonProperty("iso_country")
    public InvalidPhoneNumberIsoCountryEnum isoCountry;
    public InvalidPhoneNumber withIsoCountry(InvalidPhoneNumberIsoCountryEnum isoCountry) {
        this.isoCountry = isoCountry;
        return this;
    }
    
    /**
     * Country code in 2 letter ISO format
     */
    @JsonProperty("iso_country_2")
    public InvalidPhoneNumberIsoCountry2Enum isoCountry2;
    public InvalidPhoneNumber withIsoCountry2(InvalidPhoneNumberIsoCountry2Enum isoCountry2) {
        this.isoCountry2 = isoCountry2;
        return this;
    }
    
    /**
     * Phone number formatted to local standard
     */
    @JsonProperty("national_format")
    public InvalidPhoneNumberNationalFormatEnum nationalFormat;
    public InvalidPhoneNumber withNationalFormat(InvalidPhoneNumberNationalFormatEnum nationalFormat) {
        this.nationalFormat = nationalFormat;
        return this;
    }
    
    /**
     * Representation of original phone carrier information like network code, name, country, network type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("original_carrier")
    public InvalidPhoneNumberOriginalCarrierEnum originalCarrier;
    public InvalidPhoneNumber withOriginalCarrier(InvalidPhoneNumberOriginalCarrierEnum originalCarrier) {
        this.originalCarrier = originalCarrier;
        return this;
    }
    
    @JsonProperty("valid")
    public InvalidPhoneNumberValidEnum valid;
    public InvalidPhoneNumber withValid(InvalidPhoneNumberValidEnum valid) {
        this.valid = valid;
        return this;
    }
    
}
