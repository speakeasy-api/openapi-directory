/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETUsageType - Container for custom fields of a Usage object.
 * 
 */
public class GETUsageType {
    /**
     * Customer account ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public GETUsageType withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Customer account name.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountName")
    public String accountName;
    public GETUsageType withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }
    
    /**
     * Customer account number.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public GETUsageType withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * Number of the rate-plan charge that pays for this usage.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeNumber")
    public String chargeNumber;
    public GETUsageType withChargeNumber(String chargeNumber) {
        this.chargeNumber = chargeNumber;
        return this;
    }
    
    /**
     * Unique ID for the usage item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETUsageType withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Number of units used.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public String quantity;
    public GETUsageType withQuantity(String quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Source of the usage data. Possible values are: `Import`, `API`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceName")
    public String sourceName;
    public GETUsageType withSourceName(String sourceName) {
        this.sourceName = sourceName;
        return this;
    }
    
    /**
     * Start date of the time period in which usage is tracked. Zuora uses this field value to determine the usage date.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startDateTime")
    public OffsetDateTime startDateTime;
    public GETUsageType withStartDateTime(OffsetDateTime startDateTime) {
        this.startDateTime = startDateTime;
        return this;
    }
    
    /**
     * Possible values are: `Importing`, `Pending`, `Processed`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public GETUsageType withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Date when usage was submitted.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("submissionDateTime")
    public OffsetDateTime submissionDateTime;
    public GETUsageType withSubmissionDateTime(OffsetDateTime submissionDateTime) {
        this.submissionDateTime = submissionDateTime;
        return this;
    }
    
    /**
     * Number of the subscription covering this usage.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionNumber")
    public String subscriptionNumber;
    public GETUsageType withSubscriptionNumber(String subscriptionNumber) {
        this.subscriptionNumber = subscriptionNumber;
        return this;
    }
    
    /**
     * Unit used to measure consumption.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOfMeasure")
    public String unitOfMeasure;
    public GETUsageType withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
}
