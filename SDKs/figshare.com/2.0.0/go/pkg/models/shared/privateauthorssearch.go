// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PrivateAuthorsSearchOrderEnum - The field by which to order. Default varies by endpoint/resource.
type PrivateAuthorsSearchOrderEnum string

const (
	PrivateAuthorsSearchOrderEnumPublishedDate PrivateAuthorsSearchOrderEnum = "published_date"
	PrivateAuthorsSearchOrderEnumModifiedDate  PrivateAuthorsSearchOrderEnum = "modified_date"
	PrivateAuthorsSearchOrderEnumViews         PrivateAuthorsSearchOrderEnum = "views"
	PrivateAuthorsSearchOrderEnumShares        PrivateAuthorsSearchOrderEnum = "shares"
	PrivateAuthorsSearchOrderEnumDownloads     PrivateAuthorsSearchOrderEnum = "downloads"
	PrivateAuthorsSearchOrderEnumCites         PrivateAuthorsSearchOrderEnum = "cites"
)

func (e *PrivateAuthorsSearchOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "published_date":
		fallthrough
	case "modified_date":
		fallthrough
	case "views":
		fallthrough
	case "shares":
		fallthrough
	case "downloads":
		fallthrough
	case "cites":
		*e = PrivateAuthorsSearchOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateAuthorsSearchOrderEnum: %s", s)
	}
}

// PrivateAuthorsSearchOrderDirectionEnum - Direction of ordering
type PrivateAuthorsSearchOrderDirectionEnum string

const (
	PrivateAuthorsSearchOrderDirectionEnumAsc  PrivateAuthorsSearchOrderDirectionEnum = "asc"
	PrivateAuthorsSearchOrderDirectionEnumDesc PrivateAuthorsSearchOrderDirectionEnum = "desc"
)

func (e *PrivateAuthorsSearchOrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = PrivateAuthorsSearchOrderDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateAuthorsSearchOrderDirectionEnum: %s", s)
	}
}

// PrivateAuthorsSearch - Search Parameters
type PrivateAuthorsSearch struct {
	// Return only authors in this group or subgroups of the group
	GroupID *int64 `json:"group_id,omitempty"`
	// Return only authors associated to this institution
	InstitutionID *int64 `json:"institution_id,omitempty"`
	// Return only active authors if True
	IsActive *bool `json:"is_active,omitempty"`
	// Return only authors that have published items if True
	IsPublic *bool `json:"is_public,omitempty"`
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `json:"limit,omitempty"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `json:"offset,omitempty"`
	// Orcid of author
	Orcid *string `json:"orcid,omitempty"`
	// The field by which to order. Default varies by endpoint/resource.
	Order *PrivateAuthorsSearchOrderEnum `json:"order,omitempty"`
	// Direction of ordering
	OrderDirection *PrivateAuthorsSearchOrderDirectionEnum `json:"order_direction,omitempty"`
	// Page number. Used for pagination with page_size
	Page *int64 `json:"page,omitempty"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `json:"page_size,omitempty"`
	// Search term
	SearchFor *string `json:"search_for,omitempty"`
}
