<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateWorkflowRequestBody
{
    /**
     * The URI of a definition for the workflow.
     * 
     * @var ?string $definitionUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('definitionUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $definitionUri = null;
    
    /**
     * A ZIP archive for the workflow.
     * 
     * @var ?string $definitionZip
     */
	#[\JMS\Serializer\Annotation\SerializedName('definitionZip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $definitionZip = null;
    
    /**
     * A description for the workflow.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * An engine for the workflow.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateWorkflowRequestBodyEngineEnum $engine
     */
	#[\JMS\Serializer\Annotation\SerializedName('engine')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateWorkflowRequestBodyEngineEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateWorkflowRequestBodyEngineEnum $engine = null;
    
    /**
     * The path of the main definition file for the workflow.
     * 
     * @var ?string $main
     */
	#[\JMS\Serializer\Annotation\SerializedName('main')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $main = null;
    
    /**
     * A name for the workflow.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * A parameter template for the workflow.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\WorkflowParameter> $parameterTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameterTemplate')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\WorkflowParameter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameterTemplate = null;
    
    /**
     * To ensure that requests don't run multiple times, specify a unique ID for each request.
     * 
     * @var string $requestId
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $requestId;
    
    /**
     * A storage capacity for the workflow in gigabytes.
     * 
     * @var ?int $storageCapacity
     */
	#[\JMS\Serializer\Annotation\SerializedName('storageCapacity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $storageCapacity = null;
    
    /**
     * Tags for the workflow.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->definitionUri = null;
		$this->definitionZip = null;
		$this->description = null;
		$this->engine = null;
		$this->main = null;
		$this->name = null;
		$this->parameterTemplate = null;
		$this->requestId = "";
		$this->storageCapacity = null;
		$this->tags = null;
	}
}
