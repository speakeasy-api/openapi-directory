// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TermsAndConditionsRenewalSettingEnum string

const (
	TermsAndConditionsRenewalSettingEnumRenewWithSpecificTerm TermsAndConditionsRenewalSettingEnum = "RENEW_WITH_SPECIFIC_TERM"
	TermsAndConditionsRenewalSettingEnumRenewToEvergreen      TermsAndConditionsRenewalSettingEnum = "RENEW_TO_EVERGREEN"
)

func (e *TermsAndConditionsRenewalSettingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RENEW_WITH_SPECIFIC_TERM":
		fallthrough
	case "RENEW_TO_EVERGREEN":
		*e = TermsAndConditionsRenewalSettingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TermsAndConditionsRenewalSettingEnum: %s", s)
	}
}

// TermsAndConditions - Information about an order action of type `TermsAndConditions`.
type TermsAndConditions struct {
	AutoRenew *bool `json:"autoRenew,omitempty"`
	// The length of the period for the current subscription term.
	InitialTerm    *InitialTerm                          `json:"initialTerm,omitempty"`
	RenewalSetting *TermsAndConditionsRenewalSettingEnum `json:"renewalSetting,omitempty"`
	RenewalTerms   []RenewalTerm                         `json:"renewalTerms,omitempty"`
}
