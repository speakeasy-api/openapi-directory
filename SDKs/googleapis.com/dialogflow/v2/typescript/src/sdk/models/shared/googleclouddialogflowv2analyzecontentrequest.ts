/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDialogflowV2AssistQueryParameters } from "./googleclouddialogflowv2assistqueryparameters";
import { GoogleCloudDialogflowV2EventInput } from "./googleclouddialogflowv2eventinput";
import { GoogleCloudDialogflowV2OutputAudioConfig } from "./googleclouddialogflowv2outputaudioconfig";
import { GoogleCloudDialogflowV2QueryParameters } from "./googleclouddialogflowv2queryparameters";
import { GoogleCloudDialogflowV2TextInput } from "./googleclouddialogflowv2textinput";
import { Expose, Type } from "class-transformer";

/**
 * The request message for Participants.AnalyzeContent.
 */
export class GoogleCloudDialogflowV2AnalyzeContentRequest extends SpeakeasyBase {
  /**
   * Represents the parameters of human assist query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assistQueryParams" })
  @Type(() => GoogleCloudDialogflowV2AssistQueryParameters)
  assistQueryParams?: GoogleCloudDialogflowV2AssistQueryParameters;

  /**
   * Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cxParameters" })
  cxParameters?: Record<string, any>;

  /**
   * Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `"Hello #welcome_event.name! What can I do for you today?"`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventInput" })
  @Type(() => GoogleCloudDialogflowV2EventInput)
  eventInput?: GoogleCloudDialogflowV2EventInput;

  /**
   * Represents the parameters of the conversational query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryParams" })
  @Type(() => GoogleCloudDialogflowV2QueryParameters)
  queryParams?: GoogleCloudDialogflowV2QueryParameters;

  /**
   * Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "replyAudioConfig" })
  @Type(() => GoogleCloudDialogflowV2OutputAudioConfig)
  replyAudioConfig?: GoogleCloudDialogflowV2OutputAudioConfig;

  /**
   * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;

  /**
   * ============================================================================ Auxiliary proto messages. Represents the natural language text to be processed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textInput" })
  @Type(() => GoogleCloudDialogflowV2TextInput)
  textInput?: GoogleCloudDialogflowV2TextInput;
}
