// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCancelConversionTaskActionEnum
type POSTCancelConversionTaskActionEnum string

const (
	POSTCancelConversionTaskActionEnumCancelConversionTask POSTCancelConversionTaskActionEnum = "CancelConversionTask"
)

func (e *POSTCancelConversionTaskActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CancelConversionTask":
		*e = POSTCancelConversionTaskActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCancelConversionTaskActionEnum: %s", s)
	}
}

// POSTCancelConversionTaskVersionEnum
type POSTCancelConversionTaskVersionEnum string

const (
	POSTCancelConversionTaskVersionEnumTwoThousandAndSixteen1115 POSTCancelConversionTaskVersionEnum = "2016-11-15"
)

func (e *POSTCancelConversionTaskVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTCancelConversionTaskVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCancelConversionTaskVersionEnum: %s", s)
	}
}

type POSTCancelConversionTaskQueryParams struct {
	Action  POSTCancelConversionTaskActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTCancelConversionTaskVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTCancelConversionTaskHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCancelConversionTaskRequest struct {
	QueryParams POSTCancelConversionTaskQueryParams
	Headers     POSTCancelConversionTaskHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTCancelConversionTaskResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
