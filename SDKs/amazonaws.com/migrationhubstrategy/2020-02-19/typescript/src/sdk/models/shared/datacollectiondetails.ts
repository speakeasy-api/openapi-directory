/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssessmentStatusEnum } from "./assessmentstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 *  Detailed information about an assessment.
 */
export class DataCollectionDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "completionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completionTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "failed" })
  failed?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "inProgress" })
  inProgress?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "servers" })
  servers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AssessmentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: number;
}
