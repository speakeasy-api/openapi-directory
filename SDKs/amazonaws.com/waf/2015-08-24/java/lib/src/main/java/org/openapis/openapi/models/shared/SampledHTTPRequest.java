/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SampledHTTPRequest - &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html"&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html"&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;The response from a &lt;a&gt;GetSampledRequests&lt;/a&gt; request includes a &lt;code&gt;SampledHTTPRequests&lt;/code&gt; complex type that appears as &lt;code&gt;SampledRequests&lt;/code&gt; in the response syntax. &lt;code&gt;SampledHTTPRequests&lt;/code&gt; contains one &lt;code&gt;SampledHTTPRequest&lt;/code&gt; object for each web request that is returned by &lt;code&gt;GetSampledRequests&lt;/code&gt;.&lt;/p&gt;
 */
public class SampledHTTPRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Action")
    public String action;
    public SampledHTTPRequest withAction(String action) {
        this.action = action;
        return this;
    }
    
    @JsonProperty("Request")
    public HTTPRequest request;
    public SampledHTTPRequest withRequest(HTTPRequest request) {
        this.request = request;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RuleWithinRuleGroup")
    public String ruleWithinRuleGroup;
    public SampledHTTPRequest withRuleWithinRuleGroup(String ruleWithinRuleGroup) {
        this.ruleWithinRuleGroup = ruleWithinRuleGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Timestamp")
    public OffsetDateTime timestamp;
    public SampledHTTPRequest withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonProperty("Weight")
    public Long weight;
    public SampledHTTPRequest withWeight(Long weight) {
        this.weight = weight;
        return this;
    }
    
}
