// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CasePriorityEnum - The priority of this case. If this is set, do not set severity.
type CasePriorityEnum string

const (
	CasePriorityEnumPriorityUnspecified CasePriorityEnum = "PRIORITY_UNSPECIFIED"
	CasePriorityEnumP0                  CasePriorityEnum = "P0"
	CasePriorityEnumP1                  CasePriorityEnum = "P1"
	CasePriorityEnumP2                  CasePriorityEnum = "P2"
	CasePriorityEnumP3                  CasePriorityEnum = "P3"
	CasePriorityEnumP4                  CasePriorityEnum = "P4"
)

func (e *CasePriorityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PRIORITY_UNSPECIFIED":
		fallthrough
	case "P0":
		fallthrough
	case "P1":
		fallthrough
	case "P2":
		fallthrough
	case "P3":
		fallthrough
	case "P4":
		*e = CasePriorityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CasePriorityEnum: %s", s)
	}
}

// CaseSeverityEnum - The severity of this case. Deprecated. Use priority instead.
type CaseSeverityEnum string

const (
	CaseSeverityEnumSeverityUnspecified CaseSeverityEnum = "SEVERITY_UNSPECIFIED"
	CaseSeverityEnumS0                  CaseSeverityEnum = "S0"
	CaseSeverityEnumS1                  CaseSeverityEnum = "S1"
	CaseSeverityEnumS2                  CaseSeverityEnum = "S2"
	CaseSeverityEnumS3                  CaseSeverityEnum = "S3"
	CaseSeverityEnumS4                  CaseSeverityEnum = "S4"
)

func (e *CaseSeverityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "S0":
		fallthrough
	case "S1":
		fallthrough
	case "S2":
		fallthrough
	case "S3":
		fallthrough
	case "S4":
		*e = CaseSeverityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CaseSeverityEnum: %s", s)
	}
}

// CaseStateEnum - Output only. The current status of the support case.
type CaseStateEnum string

const (
	CaseStateEnumStateUnspecified        CaseStateEnum = "STATE_UNSPECIFIED"
	CaseStateEnumNew                     CaseStateEnum = "NEW"
	CaseStateEnumInProgressGoogleSupport CaseStateEnum = "IN_PROGRESS_GOOGLE_SUPPORT"
	CaseStateEnumActionRequired          CaseStateEnum = "ACTION_REQUIRED"
	CaseStateEnumSolutionProvided        CaseStateEnum = "SOLUTION_PROVIDED"
	CaseStateEnumClosed                  CaseStateEnum = "CLOSED"
)

func (e *CaseStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "NEW":
		fallthrough
	case "IN_PROGRESS_GOOGLE_SUPPORT":
		fallthrough
	case "ACTION_REQUIRED":
		fallthrough
	case "SOLUTION_PROVIDED":
		fallthrough
	case "CLOSED":
		*e = CaseStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CaseStateEnum: %s", s)
	}
}

// Case - A support case.
type Case struct {
	// A classification object with a product type and value.
	Classification *CaseClassification `json:"classification,omitempty"`
	// Output only. The time this case was created.
	CreateTime *string `json:"createTime,omitempty"`
	// An object containing information about the effective user and authenticated principal responsible for an action.
	Creator *Actor `json:"creator,omitempty"`
	// A broad description of the issue.
	Description *string `json:"description,omitempty"`
	// The short summary of the issue reported in this case.
	DisplayName *string `json:"displayName,omitempty"`
	// Whether the case is currently escalated.
	Escalated *bool `json:"escalated,omitempty"`
	// The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
	LanguageCode *string `json:"languageCode,omitempty"`
	// The resource name for the case.
	Name *string `json:"name,omitempty"`
	// The priority of this case. If this is set, do not set severity.
	Priority *CasePriorityEnum `json:"priority,omitempty"`
	// The severity of this case. Deprecated. Use priority instead.
	Severity *CaseSeverityEnum `json:"severity,omitempty"`
	// Output only. The current status of the support case.
	State *CaseStateEnum `json:"state,omitempty"`
	// The email addresses to receive updates on this case.
	SubscriberEmailAddresses []string `json:"subscriberEmailAddresses,omitempty"`
	// Whether this case was created for internal API testing and should not be acted on by the support team.
	TestCase *bool `json:"testCase,omitempty"`
	// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
	TimeZone *string `json:"timeZone,omitempty"`
	// Output only. The time this case was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// CaseInput - A support case.
type CaseInput struct {
	// A classification object with a product type and value.
	Classification *CaseClassification `json:"classification,omitempty"`
	// An object containing information about the effective user and authenticated principal responsible for an action.
	Creator *ActorInput `json:"creator,omitempty"`
	// A broad description of the issue.
	Description *string `json:"description,omitempty"`
	// The short summary of the issue reported in this case.
	DisplayName *string `json:"displayName,omitempty"`
	// Whether the case is currently escalated.
	Escalated *bool `json:"escalated,omitempty"`
	// The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
	LanguageCode *string `json:"languageCode,omitempty"`
	// The resource name for the case.
	Name *string `json:"name,omitempty"`
	// The priority of this case. If this is set, do not set severity.
	Priority *CasePriorityEnum `json:"priority,omitempty"`
	// The severity of this case. Deprecated. Use priority instead.
	Severity *CaseSeverityEnum `json:"severity,omitempty"`
	// The email addresses to receive updates on this case.
	SubscriberEmailAddresses []string `json:"subscriberEmailAddresses,omitempty"`
	// Whether this case was created for internal API testing and should not be acted on by the support team.
	TestCase *bool `json:"testCase,omitempty"`
	// The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
	TimeZone *string `json:"timeZone,omitempty"`
}
