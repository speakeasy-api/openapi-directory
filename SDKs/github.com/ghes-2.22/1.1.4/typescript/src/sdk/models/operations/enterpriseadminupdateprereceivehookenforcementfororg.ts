/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequestBody extends SpeakeasyBase {
  /**
   * Whether repositories can override enforcement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_downstream_configuration" })
  allowDownstreamConfiguration?: boolean;

  /**
   * The state of enforcement for the hook on this repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enforcement" })
  enforcement?: string;
}

export class EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgRequestBody;

  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * pre_receive_hook_id parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pre_receive_hook_id",
  })
  preReceiveHookId: number;
}

export class EnterpriseAdminUpdatePreReceiveHookEnforcementForOrgResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  orgPreReceiveHook?: shared.OrgPreReceiveHook;
}
