/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ChannelCatalogProductInfoLinks } from "./channelcatalogproductinfolinks";
import { ProductOverrideWithCatalogValue } from "./productoverridewithcatalogvalue";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The channel catalog product information
 */
export class ChannelCatalogProductInfo extends SpeakeasyBase {
  /**
   * Indicates if the product has been disabled or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled: boolean;

  /**
   * Indicates if the product has been excluded by a exclusion filter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excluded" })
  excluded: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "excludedBy" })
  excludedBy?: string[];

  /**
   * Indicates the differents actions you can do on a channel product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => ChannelCatalogProductInfoLinks)
  links: ChannelCatalogProductInfoLinks;

  /**
   * The key is the channel column identifier
   */
  @SpeakeasyMetadata({ elemType: ProductOverrideWithCatalogValue })
  @Expose({ name: "overrides" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ProductOverrideWithCatalogValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ProductOverrideWithCatalogValue);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  overrides: Record<string, ProductOverrideWithCatalogValue>;

  /**
   * Indicates if the product still exists in your catalog
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productExists" })
  productExists: boolean;

  /**
   * The product identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId: string;

  /**
   * The product image Url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productImageUrl" })
  productImageUrl?: string;

  /**
   * The product SKU
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productSku" })
  productSku: string;

  /**
   * The product tile
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productTitle" })
  productTitle: string;

  /**
   * Indicates if the product's category has been NOT mapped to a channel category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uncategorized" })
  uncategorized: boolean;
}
