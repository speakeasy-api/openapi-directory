"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PostAdminSettingsRequestBodyUniformTypeEnum(str, Enum):
    UNIFORM = 'uniform'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAdminSettingsRequestBodyUniform:
    r"""Uniformly distributed random response delay."""
    
    fixed_delay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedDelay'), 'exclude': lambda f: f is None }})  
    lower: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lower'), 'exclude': lambda f: f is None }})  
    type: Optional[PostAdminSettingsRequestBodyUniformTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    upper: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upper'), 'exclude': lambda f: f is None }})  
    
class PostAdminSettingsRequestBodyLogNormalTypeEnum(str, Enum):
    LOGNORMAL = 'lognormal'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAdminSettingsRequestBodyLogNormal:
    r"""Log normal randomly distributed response delay."""
    
    fixed_delay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedDelay'), 'exclude': lambda f: f is None }})  
    median: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('median'), 'exclude': lambda f: f is None }})  
    sigma: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sigma'), 'exclude': lambda f: f is None }})  
    type: Optional[PostAdminSettingsRequestBodyLogNormalTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostAdminSettingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    