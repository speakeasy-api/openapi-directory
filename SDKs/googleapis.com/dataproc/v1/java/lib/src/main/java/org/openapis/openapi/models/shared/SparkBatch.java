/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SparkBatch - A configuration for running an Apache Spark (https://spark.apache.org/) batch workload.
 */
public class SparkBatch {
    /**
     * Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archiveUris")
    public String[] archiveUris;

    public SparkBatch withArchiveUris(String[] archiveUris) {
        this.archiveUris = archiveUris;
        return this;
    }
    
    /**
     * Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("args")
    public String[] args;

    public SparkBatch withArgs(String[] args) {
        this.args = args;
        return this;
    }
    
    /**
     * Optional. HCFS URIs of files to be placed in the working directory of each executor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileUris")
    public String[] fileUris;

    public SparkBatch withFileUris(String[] fileUris) {
        this.fileUris = fileUris;
        return this;
    }
    
    /**
     * Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jarFileUris")
    public String[] jarFileUris;

    public SparkBatch withJarFileUris(String[] jarFileUris) {
        this.jarFileUris = jarFileUris;
        return this;
    }
    
    /**
     * Optional. The name of the driver main class. The jar file that contains the class must be in the classpath or specified in jar_file_uris.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mainClass")
    public String mainClass;

    public SparkBatch withMainClass(String mainClass) {
        this.mainClass = mainClass;
        return this;
    }
    
    /**
     * Optional. The HCFS URI of the jar file that contains the main class.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mainJarFileUri")
    public String mainJarFileUri;

    public SparkBatch withMainJarFileUri(String mainJarFileUri) {
        this.mainJarFileUri = mainJarFileUri;
        return this;
    }
    
    public SparkBatch(){}
}
