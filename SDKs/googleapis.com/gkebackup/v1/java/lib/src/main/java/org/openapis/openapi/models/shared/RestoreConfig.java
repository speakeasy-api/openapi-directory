/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RestoreConfig - Configuration of a restore. Next id: 12
 */
public class RestoreConfig {
    /**
     * Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allNamespaces")
    public Boolean allNamespaces;

    public RestoreConfig withAllNamespaces(Boolean allNamespaces) {
        this.allNamespaces = allNamespaces;
        return this;
    }
    
    /**
     * Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterResourceConflictPolicy")
    public RestoreConfigClusterResourceConflictPolicyEnum clusterResourceConflictPolicy;

    public RestoreConfig withClusterResourceConflictPolicy(RestoreConfigClusterResourceConflictPolicyEnum clusterResourceConflictPolicy) {
        this.clusterResourceConflictPolicy = clusterResourceConflictPolicy;
        return this;
    }
    
    /**
     * Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterResourceRestoreScope")
    public ClusterResourceRestoreScope clusterResourceRestoreScope;

    public RestoreConfig withClusterResourceRestoreScope(ClusterResourceRestoreScope clusterResourceRestoreScope) {
        this.clusterResourceRestoreScope = clusterResourceRestoreScope;
        return this;
    }
    
    /**
     * Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespacedResourceRestoreMode")
    public RestoreConfigNamespacedResourceRestoreModeEnum namespacedResourceRestoreMode;

    public RestoreConfig withNamespacedResourceRestoreMode(RestoreConfigNamespacedResourceRestoreModeEnum namespacedResourceRestoreMode) {
        this.namespacedResourceRestoreMode = namespacedResourceRestoreMode;
        return this;
    }
    
    /**
     * A list of namespaced Kubernetes resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedApplications")
    public NamespacedNames selectedApplications;

    public RestoreConfig withSelectedApplications(NamespacedNames selectedApplications) {
        this.selectedApplications = selectedApplications;
        return this;
    }
    
    /**
     * A list of Kubernetes Namespaces
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedNamespaces")
    public Namespaces selectedNamespaces;

    public RestoreConfig withSelectedNamespaces(Namespaces selectedNamespaces) {
        this.selectedNamespaces = selectedNamespaces;
        return this;
    }
    
    /**
     * A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("substitutionRules")
    public SubstitutionRule[] substitutionRules;

    public RestoreConfig withSubstitutionRules(SubstitutionRule[] substitutionRules) {
        this.substitutionRules = substitutionRules;
        return this;
    }
    
    /**
     * Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumeDataRestorePolicy")
    public RestoreConfigVolumeDataRestorePolicyEnum volumeDataRestorePolicy;

    public RestoreConfig withVolumeDataRestorePolicy(RestoreConfigVolumeDataRestorePolicyEnum volumeDataRestorePolicy) {
        this.volumeDataRestorePolicy = volumeDataRestorePolicy;
        return this;
    }
    
    public RestoreConfig(){}
}
