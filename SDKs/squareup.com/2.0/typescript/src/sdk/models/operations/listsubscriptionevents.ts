/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListSubscriptionEventsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class ListSubscriptionEventsRequest extends SpeakeasyBase {
  /**
   * A pagination cursor returned by a previous call to this endpoint.
   *
   * @remarks
   * Provide this to retrieve the next set of results for the original query.
   *
   * For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * The upper limit on the number of subscription events to return
   *
   * @remarks
   * in the response.
   *
   * Default: `200`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The ID of the subscription to retrieve the events for.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=subscription_id",
  })
  subscriptionId: string;
}

export class ListSubscriptionEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listSubscriptionEventsResponse?: shared.ListSubscriptionEventsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
