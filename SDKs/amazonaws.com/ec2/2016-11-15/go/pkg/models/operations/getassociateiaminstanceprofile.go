// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAssociateIamInstanceProfileActionEnum
type GETAssociateIamInstanceProfileActionEnum string

const (
	GETAssociateIamInstanceProfileActionEnumAssociateIamInstanceProfile GETAssociateIamInstanceProfileActionEnum = "AssociateIamInstanceProfile"
)

func (e *GETAssociateIamInstanceProfileActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AssociateIamInstanceProfile":
		*e = GETAssociateIamInstanceProfileActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateIamInstanceProfileActionEnum: %s", s)
	}
}

// GETAssociateIamInstanceProfileIamInstanceProfile - Describes an IAM instance profile.
type GETAssociateIamInstanceProfileIamInstanceProfile struct {
	Arn  *string `queryParam:"name=Arn"`
	Name *string `queryParam:"name=Name"`
}

// GETAssociateIamInstanceProfileVersionEnum
type GETAssociateIamInstanceProfileVersionEnum string

const (
	GETAssociateIamInstanceProfileVersionEnumTwoThousandAndSixteen1115 GETAssociateIamInstanceProfileVersionEnum = "2016-11-15"
)

func (e *GETAssociateIamInstanceProfileVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETAssociateIamInstanceProfileVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateIamInstanceProfileVersionEnum: %s", s)
	}
}

type GETAssociateIamInstanceProfileQueryParams struct {
	Action GETAssociateIamInstanceProfileActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The IAM instance profile.
	IamInstanceProfile GETAssociateIamInstanceProfileIamInstanceProfile `queryParam:"style=form,explode=true,name=IamInstanceProfile"`
	// The ID of the instance.
	InstanceID string                                    `queryParam:"style=form,explode=true,name=InstanceId"`
	Version    GETAssociateIamInstanceProfileVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETAssociateIamInstanceProfileHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAssociateIamInstanceProfileRequest struct {
	QueryParams GETAssociateIamInstanceProfileQueryParams
	Headers     GETAssociateIamInstanceProfileHeaders
}

type GETAssociateIamInstanceProfileResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
