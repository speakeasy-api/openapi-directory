/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ControlDomainInsights - &lt;p&gt;A summary of the latest analytics data for a specific control domain.&lt;/p&gt; &lt;p&gt;Control domain insights are grouped by control domain, and ranked by the highest total count of non-compliant evidence.&lt;/p&gt;
 */
public class ControlDomainInsights {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("controlsCountByNoncompliantEvidence")
    public Long controlsCountByNoncompliantEvidence;
    public ControlDomainInsights withControlsCountByNoncompliantEvidence(Long controlsCountByNoncompliantEvidence) {
        this.controlsCountByNoncompliantEvidence = controlsCountByNoncompliantEvidence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evidenceInsights")
    public EvidenceInsights evidenceInsights;
    public ControlDomainInsights withEvidenceInsights(EvidenceInsights evidenceInsights) {
        this.evidenceInsights = evidenceInsights;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ControlDomainInsights withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdated")
    public OffsetDateTime lastUpdated;
    public ControlDomainInsights withLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ControlDomainInsights withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalControlsCount")
    public Long totalControlsCount;
    public ControlDomainInsights withTotalControlsCount(Long totalControlsCount) {
        this.totalControlsCount = totalControlsCount;
        return this;
    }
    
}
