/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The type of attachment used to provide connectivity between the Amazon Web Services Verified Access endpoint and the application.
 */
export enum DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum {
  Vpc = "vpc",
}

/**
 * The type of Amazon Web Services Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified.
 */
export enum DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum {
  LoadBalancer = "load-balancer",
  NetworkInterface = "network-interface",
}

/**
 * The IP protocol.
 */
export enum DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum {
  Http = "http",
  Https = "https",
}

/**
 * The load balancer details if creating the Amazon Web Services Verified Access endpoint as <code>load-balancer</code>type.
 */
export class DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  loadBalancerArn?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata()
  protocol?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum;

  @SpeakeasyMetadata()
  subnetIds?: string[];
}

/**
 * The IP protocol.
 */
export enum DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum {
  Http = "http",
  Https = "https",
}

/**
 * The options for network-interface type endpoint.
 */
export class DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata()
  protocol?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum;
}

/**
 * The status code of the Verified Access endpoint.
 */
export enum DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum {
  Pending = "pending",
  Active = "active",
  Updating = "updating",
  Deleting = "deleting",
  Deleted = "deleted",
}

/**
 * The endpoint status.
 */
export class DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * Describes a tag.
 */
export class DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The ID of the Amazon Web Services Verified Access endpoint.
 */
export class DeleteVerifiedAccessEndpointResultVerifiedAccessEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  applicationDomain?: string;

  @SpeakeasyMetadata()
  attachmentType?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum;

  @SpeakeasyMetadata()
  creationTime?: string;

  @SpeakeasyMetadata()
  deletionTime?: string;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  deviceValidationDomain?: string;

  @SpeakeasyMetadata()
  domainCertificateArn?: string;

  @SpeakeasyMetadata()
  endpointDomain?: string;

  @SpeakeasyMetadata()
  endpointType?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum;

  @SpeakeasyMetadata()
  lastUpdatedTime?: string;

  @SpeakeasyMetadata()
  loadBalancerOptions?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptions;

  @SpeakeasyMetadata()
  networkInterfaceOptions?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptions;

  @SpeakeasyMetadata()
  securityGroupIds?: string[];

  @SpeakeasyMetadata()
  status?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointStatus;

  @SpeakeasyMetadata({
    elemType: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointTags,
  })
  tags?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpointTags[];

  @SpeakeasyMetadata()
  verifiedAccessEndpointId?: string;

  @SpeakeasyMetadata()
  verifiedAccessGroupId?: string;

  @SpeakeasyMetadata()
  verifiedAccessInstanceId?: string;
}

/**
 * Success
 */
export class DeleteVerifiedAccessEndpointResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  verifiedAccessEndpoint?: DeleteVerifiedAccessEndpointResultVerifiedAccessEndpoint;
}
