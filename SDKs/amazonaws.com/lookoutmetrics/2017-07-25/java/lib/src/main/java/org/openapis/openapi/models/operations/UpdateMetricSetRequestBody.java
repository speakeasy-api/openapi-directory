/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateMetricSetRequestBody {
    /**
     * Describes a list of filters for choosing specific dimensions and specific values. Each filter consists of the dimension and one of its values that you want to include. When multiple dimensions or values are specified, the dimensions are joined with an AND operation and the values are joined with an OR operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DimensionFilterList")
    public org.openapis.openapi.models.shared.MetricSetDimensionFilter[] dimensionFilterList;

    public UpdateMetricSetRequestBody withDimensionFilterList(org.openapis.openapi.models.shared.MetricSetDimensionFilter[] dimensionFilterList) {
        this.dimensionFilterList = dimensionFilterList;
        return this;
    }
    
    /**
     * The dimension list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DimensionList")
    public String[] dimensionList;

    public UpdateMetricSetRequestBody withDimensionList(String[] dimensionList) {
        this.dimensionList = dimensionList;
        return this;
    }
    
    /**
     * The metric list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricList")
    public org.openapis.openapi.models.shared.Metric[] metricList;

    public UpdateMetricSetRequestBody withMetricList(org.openapis.openapi.models.shared.Metric[] metricList) {
        this.metricList = metricList;
        return this;
    }
    
    /**
     * The ARN of the dataset to update.
     */
    @JsonProperty("MetricSetArn")
    public String metricSetArn;

    public UpdateMetricSetRequestBody withMetricSetArn(String metricSetArn) {
        this.metricSetArn = metricSetArn;
        return this;
    }
    
    /**
     * The dataset's description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricSetDescription")
    public String metricSetDescription;

    public UpdateMetricSetRequestBody withMetricSetDescription(String metricSetDescription) {
        this.metricSetDescription = metricSetDescription;
        return this;
    }
    
    /**
     * The dataset's interval.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricSetFrequency")
    public UpdateMetricSetRequestBodyMetricSetFrequencyEnum metricSetFrequency;

    public UpdateMetricSetRequestBody withMetricSetFrequency(UpdateMetricSetRequestBodyMetricSetFrequencyEnum metricSetFrequency) {
        this.metricSetFrequency = metricSetFrequency;
        return this;
    }
    
    /**
     * Contains information about source data used to generate metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricSource")
    public UpdateMetricSetRequestBodyMetricSource metricSource;

    public UpdateMetricSetRequestBody withMetricSource(UpdateMetricSetRequestBodyMetricSource metricSource) {
        this.metricSource = metricSource;
        return this;
    }
    
    /**
     * After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Offset")
    public Long offset;

    public UpdateMetricSetRequestBody withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Contains information about the column used to track time in a source data file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimestampColumn")
    public UpdateMetricSetRequestBodyTimestampColumn timestampColumn;

    public UpdateMetricSetRequestBody withTimestampColumn(UpdateMetricSetRequestBodyTimestampColumn timestampColumn) {
        this.timestampColumn = timestampColumn;
        return this;
    }
    
    public UpdateMetricSetRequestBody(@JsonProperty("MetricSetArn") String metricSetArn) {
        this.metricSetArn = metricSetArn;
  }
}
