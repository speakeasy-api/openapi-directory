/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClientTlsPolicyInput - ClientTlsPolicy is a resource that specifies how a client should authenticate connections to backends of a service. This resource itself does not affect configuration unless it is attached to a backend service resource.
 */
public class ClientTlsPolicyInput {
    /**
     * Specification of certificate provider. Defines the mechanism to obtain the certificate and private key for peer to peer authentication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientCertificate")
    public GoogleCloudNetworksecurityV1CertificateProvider clientCertificate;

    public ClientTlsPolicyInput withClientCertificate(GoogleCloudNetworksecurityV1CertificateProvider clientCertificate) {
        this.clientCertificate = clientCertificate;
        return this;
    }
    
    /**
     * Optional. Free-text description of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ClientTlsPolicyInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Optional. Set of label tags associated with the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public ClientTlsPolicyInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Required. Name of the ClientTlsPolicy resource. It matches the pattern `projects/* /locations/{location}/clientTlsPolicies/{client_tls_policy}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ClientTlsPolicyInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional. Defines the mechanism to obtain the Certificate Authority certificate to validate the server certificate. If empty, client does not validate the server certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverValidationCa")
    public ValidationCA[] serverValidationCa;

    public ClientTlsPolicyInput withServerValidationCa(ValidationCA[] serverValidationCa) {
        this.serverValidationCa = serverValidationCa;
        return this;
    }
    
    /**
     * Optional. Server Name Indication string to present to the server during TLS handshake. E.g: "secure.example.com".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sni")
    public String sni;

    public ClientTlsPolicyInput withSni(String sni) {
        this.sni = sni;
        return this;
    }
    
    public ClientTlsPolicyInput(){}
}
