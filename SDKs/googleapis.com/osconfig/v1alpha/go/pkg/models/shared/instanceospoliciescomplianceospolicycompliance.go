// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum - Compliance state of the OS policy.
type InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum string

const (
	InstanceOSPoliciesComplianceOSPolicyComplianceStateEnumOsPolicyComplianceStateUnspecified InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum = "OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED"
	InstanceOSPoliciesComplianceOSPolicyComplianceStateEnumCompliant                          InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum = "COMPLIANT"
	InstanceOSPoliciesComplianceOSPolicyComplianceStateEnumNonCompliant                       InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum = "NON_COMPLIANT"
	InstanceOSPoliciesComplianceOSPolicyComplianceStateEnumUnknown                            InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum = "UNKNOWN"
	InstanceOSPoliciesComplianceOSPolicyComplianceStateEnumNoOsPoliciesApplicable             InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum = "NO_OS_POLICIES_APPLICABLE"
)

func (e InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum) ToPointer() *InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum {
	return &e
}

func (e *InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED":
		fallthrough
	case "COMPLIANT":
		fallthrough
	case "NON_COMPLIANT":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "NO_OS_POLICIES_APPLICABLE":
		*e = InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum: %v", v)
	}
}

// InstanceOSPoliciesComplianceOSPolicyCompliance - Compliance data for an OS policy
type InstanceOSPoliciesComplianceOSPolicyCompliance struct {
	// Reference to the `OSPolicyAssignment` API resource that the `OSPolicy` belongs to. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
	OsPolicyAssignment *string `json:"osPolicyAssignment,omitempty"`
	// The OS policy id
	OsPolicyID *string `json:"osPolicyId,omitempty"`
	// Compliance data for each `OSPolicyResource` that is applied to the VM.
	OsPolicyResourceCompliances []OSPolicyResourceCompliance `json:"osPolicyResourceCompliances,omitempty"`
	// Compliance state of the OS policy.
	State *InstanceOSPoliciesComplianceOSPolicyComplianceStateEnum `json:"state,omitempty"`
}
