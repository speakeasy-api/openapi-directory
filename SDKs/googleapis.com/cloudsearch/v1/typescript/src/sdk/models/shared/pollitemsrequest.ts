/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DebugOptions } from "./debugoptions";
import { Expose, Type } from "class-transformer";

export enum PollItemsRequestStatusCodesEnum {
  CodeUnspecified = "CODE_UNSPECIFIED",
  Error = "ERROR",
  Modified = "MODIFIED",
  NewItem = "NEW_ITEM",
  Accepted = "ACCEPTED",
}

export class PollItemsRequest extends SpeakeasyBase {
  /**
   * The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectorName" })
  connectorName?: string;

  /**
   * Shared request debug options for all cloudsearch RPC methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debugOptions" })
  @Type(() => DebugOptions)
  debugOptions?: DebugOptions;

  /**
   * Maximum number of items to return. The maximum value is 100 and the default value is 20.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * Queue name to fetch items from. If unspecified, PollItems will fetch from 'default' queue. The maximum length is 100 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queue" })
  queue?: string;

  /**
   * Limit the items polled to the ones with these statuses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusCodes" })
  statusCodes?: PollItemsRequestStatusCodesEnum[];
}
