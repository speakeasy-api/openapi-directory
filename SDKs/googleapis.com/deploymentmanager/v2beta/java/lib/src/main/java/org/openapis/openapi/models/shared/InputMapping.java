/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InputMapping - InputMapping creates a 'virtual' property that will be injected into the properties before sending the request to the underlying API.
 */
public class InputMapping {
    /**
     * The name of the field that is going to be injected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldName")
    public String fieldName;

    public InputMapping withFieldName(String fieldName) {
        this.fieldName = fieldName;
        return this;
    }
    
    /**
     * The location where this mapping applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public InputMappingLocationEnum location;

    public InputMapping withLocation(InputMappingLocationEnum location) {
        this.location = location;
        return this;
    }
    
    /**
     * Regex to evaluate on method to decide if input applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("methodMatch")
    public String methodMatch;

    public InputMapping withMethodMatch(String methodMatch) {
        this.methodMatch = methodMatch;
        return this;
    }
    
    /**
     * A jsonPath expression to select an element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;

    public InputMapping withValue(String value) {
        this.value = value;
        return this;
    }
    
    public InputMapping(){}
}
