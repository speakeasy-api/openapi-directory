/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LeaderboardConfigurationDetail } from "./leaderboardconfigurationdetail";
import { Expose, Type } from "class-transformer";

export enum LeaderboardConfigurationScoreOrderEnum {
  ScoreOrderUnspecified = "SCORE_ORDER_UNSPECIFIED",
  LargerIsBetter = "LARGER_IS_BETTER",
  SmallerIsBetter = "SMALLER_IS_BETTER",
}

/**
 * An leaderboard configuration resource.
 */
export class LeaderboardConfiguration extends SpeakeasyBase {
  /**
   * A leaderboard configuration detail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "draft" })
  @Type(() => LeaderboardConfigurationDetail)
  draft?: LeaderboardConfigurationDetail;

  /**
   * The ID of the leaderboard.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#leaderboardConfiguration`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * A leaderboard configuration detail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published" })
  @Type(() => LeaderboardConfigurationDetail)
  published?: LeaderboardConfigurationDetail;

  /**
   * Maximum score that can be posted to this leaderboard.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scoreMax" })
  scoreMax?: string;

  /**
   * Minimum score that can be posted to this leaderboard.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scoreMin" })
  scoreMin?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "scoreOrder" })
  scoreOrder?: LeaderboardConfigurationScoreOrderEnum;

  /**
   * The token for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;
}
