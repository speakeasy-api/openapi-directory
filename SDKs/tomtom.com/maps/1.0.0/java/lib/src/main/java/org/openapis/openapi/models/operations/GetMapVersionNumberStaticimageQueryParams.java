/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetMapVersionNumberStaticimageQueryParams {
    /**
     * Bounding box for the image, using EPSG:3857 projection (functionally equivalent to EPSG:900910).
     * Values &lt;strong&gt;must&lt;/strong&gt; be in the order of minLon, minLat, maxLon, maxLat.
     * MaxLat must be greater than minLat. Longitude values can be on both sides of the 180th meridian.
     * Cannot be used with &lt;strong&gt;center&lt;/strong&gt;, &lt;strong&gt;width&lt;/strong&gt;, or &lt;strong&gt;height&lt;/strong&gt; parameters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=bbox")
    public String bbox;
    public GetMapVersionNumberStaticimageQueryParams withBbox(String bbox) {
        this.bbox = bbox;
        return this;
    }
    
    /**
     * Coordinates for the center point of the image.
     * Must be used with the &lt;strong&gt;width&lt;/strong&gt; and
     * &lt;strong&gt;height&lt;/strong&gt; parameters; cannot be used with &lt;strong&gt;bbox&lt;/strong&gt;.
     * Uses EPSG:3857 projection (functionally equivalent to EPSG:900910).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=center")
    public String center;
    public GetMapVersionNumberStaticimageQueryParams withCenter(String center) {
        this.center = center;
        return this;
    }
    
    /**
     * Image format to be returned
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=format")
    public GetMapVersionNumberStaticimageFormatEnum format;
    public GetMapVersionNumberStaticimageQueryParams withFormat(GetMapVersionNumberStaticimageFormatEnum format) {
        this.format = format;
        return this;
    }
    
    /**
     * Height of the resulting image in pixels. Height must be a positive integer between 1 and 8192.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=height")
    public Long height;
    public GetMapVersionNumberStaticimageQueryParams withHeight(Long height) {
        this.height = height;
        return this;
    }
    
    /**
     * Layer of image to be rendered. &lt;em&gt;Hybrid&lt;/em&gt; and &lt;em&gt;labels&lt;/em&gt;
     * are intended for layering with other data and are only available in &lt;em&gt;png&lt;/em&gt; format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=layer")
    public GetMapVersionNumberStaticimageLayerEnum layer;
    public GetMapVersionNumberStaticimageQueryParams withLayer(GetMapVersionNumberStaticimageLayerEnum layer) {
        this.layer = layer;
        return this;
    }
    
    /**
     * Map style to be returned
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=style")
    public GetMapVersionNumberStaticimageStyleEnum style;
    public GetMapVersionNumberStaticimageQueryParams withStyle(GetMapVersionNumberStaticimageStyleEnum style) {
        this.style = style;
        return this;
    }
    
    /**
     * Geopolitical view. Determines rendering of disputed areas. See the &lt;a href="/maps-api/maps-api-documentation-raster/raster-tile"&gt;documentation&lt;/a&gt; for an explanation of how this works in live services.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=view")
    public GetMapVersionNumberStaticimageViewEnum view;
    public GetMapVersionNumberStaticimageQueryParams withView(GetMapVersionNumberStaticimageViewEnum view) {
        this.view = view;
        return this;
    }
    
    /**
     * Width of the resulting image in pixels. Width must be a positive integer between 1 and 8192.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=width")
    public Long width;
    public GetMapVersionNumberStaticimageQueryParams withWidth(Long width) {
        this.width = width;
        return this;
    }
    
    /**
     * Zoom level of map image to be returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=zoom")
    public GetMapVersionNumberStaticimageZoomEnum zoom;
    public GetMapVersionNumberStaticimageQueryParams withZoom(GetMapVersionNumberStaticimageZoomEnum zoom) {
        this.zoom = zoom;
        return this;
    }
    
}
