/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SpeechAdaptationInfo } from "./speechadaptationinfo";
import { SpeechRecognitionResult } from "./speechrecognitionresult";
import { Expose, Type } from "class-transformer";

/**
 * The only message returned to the client by the `Recognize` method. It contains the result as zero or more sequential `SpeechRecognitionResult` messages.
 */
export class RecognizeResponse extends SpeakeasyBase {
  /**
   * The ID associated with the request. This is a unique ID specific only to the given request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;

  /**
   * Sequential list of transcription results corresponding to sequential portions of audio.
   */
  @SpeakeasyMetadata({ elemType: SpeechRecognitionResult })
  @Expose({ name: "results" })
  @Type(() => SpeechRecognitionResult)
  results?: SpeechRecognitionResult[];

  /**
   * Information on speech adaptation use in results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "speechAdaptationInfo" })
  @Type(() => SpeechAdaptationInfo)
  speechAdaptationInfo?: SpeechAdaptationInfo;

  /**
   * When available, billed audio seconds for the corresponding request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalBilledTime" })
  totalBilledTime?: string;
}
