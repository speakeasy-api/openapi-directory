<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AssociationResults - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AssociationResults
{
    /**
     * Complete representation of full association object, plus evidence
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Association> $associations
     */
	#[\JMS\Serializer\Annotation\SerializedName('associations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Association>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $associations = null;
    
    /**
     * Compact representation in which objects (e.g. phenotypes) are collected for subject-predicate pairs
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CompactAssociationSet> $compactAssociations
     */
	#[\JMS\Serializer\Annotation\SerializedName('compact_associations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CompactAssociationSet>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $compactAssociations = null;
    
    /**
     * solr docs
     * 
     * @var ?array<array<string, mixed>> $docs
     */
	#[\JMS\Serializer\Annotation\SerializedName('docs')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $docs = null;
    
    /**
     * Mapping between field names and association counts
     * 
     * @var ?array<string, mixed> $facetCounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('facet_counts')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $facetCounts = null;
    
    /**
     * Mapping between id and solr highlight
     * 
     * @var ?array<string, mixed> $highlighting
     */
	#[\JMS\Serializer\Annotation\SerializedName('highlighting')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $highlighting = null;
    
    /**
     * total number of associations matching query
     * 
     * @var ?int $numFound
     */
	#[\JMS\Serializer\Annotation\SerializedName('numFound')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numFound = null;
    
    /**
     * List of distinct objects used
     * 
     * @var ?array<string> $objects
     */
	#[\JMS\Serializer\Annotation\SerializedName('objects')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $objects = null;
    
	public function __construct()
	{
		$this->associations = null;
		$this->compactAssociations = null;
		$this->docs = null;
		$this->facetCounts = null;
		$this->highlighting = null;
		$this->numFound = null;
		$this->objects = null;
	}
}
