"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GroupVersion:
    r"""Information about a group version."""
    
    connector_definition_version_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectorDefinitionVersionArn'), 'exclude': lambda f: f is None }})  
    core_definition_version_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CoreDefinitionVersionArn'), 'exclude': lambda f: f is None }})  
    device_definition_version_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeviceDefinitionVersionArn'), 'exclude': lambda f: f is None }})  
    function_definition_version_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FunctionDefinitionVersionArn'), 'exclude': lambda f: f is None }})  
    logger_definition_version_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LoggerDefinitionVersionArn'), 'exclude': lambda f: f is None }})  
    resource_definition_version_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceDefinitionVersionArn'), 'exclude': lambda f: f is None }})  
    subscription_definition_version_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubscriptionDefinitionVersionArn'), 'exclude': lambda f: f is None }})  
    