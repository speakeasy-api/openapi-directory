/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ShareholderContact {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public ViasAddress address;

    public ShareholderContact withAddress(ViasAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * The e-mail address of the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public ShareholderContact withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The phone number of the person provided as a single string.  It will be handled as a landline phone.
     * Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullPhoneNumber")
    public String fullPhoneNumber;

    public ShareholderContact withFullPhoneNumber(String fullPhoneNumber) {
        this.fullPhoneNumber = fullPhoneNumber;
        return this;
    }
    
    /**
     * Job title of the person. Required when the `shareholderType` is **Controller**.
     * 
     * Example values: **Chief Executive Officer**, **Chief Financial Officer**, **Chief Operating Officer**, **President**, **Vice President**, **Executive President**, **Managing Member**, **Partner**, **Treasurer**, **Director**, or **Other**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobTitle")
    public String jobTitle;

    public ShareholderContact withJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public ViasName name;

    public ShareholderContact withName(ViasName name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("personalData")
    public ViasPersonalData personalData;

    public ShareholderContact withPersonalData(ViasPersonalData personalData) {
        this.personalData = personalData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumber")
    public ViasPhoneNumber phoneNumber;

    public ShareholderContact withPhoneNumber(ViasPhoneNumber phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * The unique identifier (UUID) of the shareholder entry.
     * &gt;**If, during an Account Holder create or update request, this field is left blank (but other fields provided), a new Shareholder will be created with a procedurally-generated UUID.**
     * 
     * &gt;**If, during an Account Holder create request, a UUID is provided, the creation of Account Holder will fail with a validation Error..**
     * 
     * &gt;**If, during an Account Holder update request, a UUID that is not correlated with an existing Shareholder is provided, the update of the Shareholder will fail.**
     * 
     * &gt;**If, during an Account Holder update request, a UUID that is correlated with an existing Shareholder is provided, the existing Shareholder will be updated.**
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareholderCode")
    public String shareholderCode;

    public ShareholderContact withShareholderCode(String shareholderCode) {
        this.shareholderCode = shareholderCode;
        return this;
    }
    
    /**
     * Your reference for the shareholder entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareholderReference")
    public String shareholderReference;

    public ShareholderContact withShareholderReference(String shareholderReference) {
        this.shareholderReference = shareholderReference;
        return this;
    }
    
    /**
     * Specifies how the person is associated with the account holder. 
     * 
     * Possible values: 
     * 
     * * **Owner**: Individuals who directly or indirectly own 25% or more of a company.
     * 
     * * **Controller**: Individuals who are members of senior management staff responsible for managing a company or organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareholderType")
    public ShareholderContactShareholderTypeEnum shareholderType;

    public ShareholderContact withShareholderType(ShareholderContactShareholderTypeEnum shareholderType) {
        this.shareholderType = shareholderType;
        return this;
    }
    
    /**
     * The URL of the person's website.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAddress")
    public String webAddress;

    public ShareholderContact withWebAddress(String webAddress) {
        this.webAddress = webAddress;
        return this;
    }
    
    public ShareholderContact(){}
}
