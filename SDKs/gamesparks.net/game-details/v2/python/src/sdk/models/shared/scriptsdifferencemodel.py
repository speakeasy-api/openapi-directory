"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ScriptsDifferenceModelChangeTypeEnum(str, Enum):
    NOCHANGE = 'NOCHANGE'
    ADDED = 'ADDED'
    CHANGED = 'CHANGED'
    DELETED = 'DELETED'
    IGNORED = 'IGNORED'
    CHANGED_CODE_INVALID = 'CHANGED_CODE_INVALID'
    CHANGED_NAME_INVALID = 'CHANGED_NAME_INVALID'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScriptsDifferenceModel:
    
    bind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bind'), 'exclude': lambda f: f is None }})  
    change_type: Optional[ScriptsDifferenceModelChangeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('changeType'), 'exclude': lambda f: f is None }})  
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileName'), 'exclude': lambda f: f is None }})  
    script1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('script1'), 'exclude': lambda f: f is None }})  
    script2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('script2'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    