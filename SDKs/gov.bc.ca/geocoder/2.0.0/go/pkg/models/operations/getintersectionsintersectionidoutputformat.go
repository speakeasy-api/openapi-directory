// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum - Results format. See <a href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target="_blank">outputFormat</a>
type GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum string

const (
	GetIntersectionsIntersectionIDOutputFormatOutputFormatEnumJSON    GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum = "json"
	GetIntersectionsIntersectionIDOutputFormatOutputFormatEnumGeojson GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum = "geojson"
	GetIntersectionsIntersectionIDOutputFormatOutputFormatEnumXhtml   GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum = "xhtml"
	GetIntersectionsIntersectionIDOutputFormatOutputFormatEnumKml     GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum = "kml"
	GetIntersectionsIntersectionIDOutputFormatOutputFormatEnumGml     GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum = "gml"
	GetIntersectionsIntersectionIDOutputFormatOutputFormatEnumCsv     GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum = "csv"
	GetIntersectionsIntersectionIDOutputFormatOutputFormatEnumShpz    GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum = "shpz"
)

func (e *GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "geojson":
		fallthrough
	case "xhtml":
		fallthrough
	case "kml":
		fallthrough
	case "gml":
		fallthrough
	case "csv":
		fallthrough
	case "shpz":
		*e = GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum: %s", s)
	}
}

type GetIntersectionsIntersectionIDOutputFormatPathParams struct {
	// A unique intersection identifier
	IntersectionID string `pathParam:"style=simple,explode=false,name=intersectionID"`
	// Results format. See <a href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputFormat target="_blank">outputFormat</a>
	OutputFormat GetIntersectionsIntersectionIDOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
}

// GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target="_blank">outputSRS</a>
type GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum string

const (
	GetIntersectionsIntersectionIDOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum = "4326"
	GetIntersectionsIntersectionIDOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum = "4269"
	GetIntersectionsIntersectionIDOutputFormatOutputSrsEnumThreeThousandAndFive                  GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum = "3005"
	GetIntersectionsIntersectionIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum = "26907"
	GetIntersectionsIntersectionIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum = "26908"
	GetIntersectionsIntersectionIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum = "26909"
	GetIntersectionsIntersectionIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum = "26910"
	GetIntersectionsIntersectionIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum = "26911"
)

func (e *GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "4326":
		fallthrough
	case "4269":
		fallthrough
	case "3005":
		fallthrough
	case "26907":
		fallthrough
	case "26908":
		fallthrough
	case "26909":
		fallthrough
	case "26910":
		fallthrough
	case "26911":
		*e = GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum: %s", s)
	}
}

type GetIntersectionsIntersectionIDOutputFormatQueryParams struct {
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/api-specs/blob/master/geocoder/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *GetIntersectionsIntersectionIDOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
}

type GetIntersectionsIntersectionIDOutputFormatRequest struct {
	PathParams  GetIntersectionsIntersectionIDOutputFormatPathParams
	QueryParams GetIntersectionsIntersectionIDOutputFormatQueryParams
}

type GetIntersectionsIntersectionIDOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
