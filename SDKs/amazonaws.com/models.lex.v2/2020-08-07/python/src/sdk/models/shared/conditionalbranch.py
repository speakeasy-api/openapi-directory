"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import condition as shared_condition
from ..shared import dialogstate as shared_dialogstate
from ..shared import responsespecification as shared_responsespecification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConditionalBranch:
    r"""A set of actions that Amazon Lex should run if the condition is matched."""
    
    condition: shared_condition.Condition = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    next_step: shared_dialogstate.DialogState = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextStep') }})  
    response: Optional[shared_responsespecification.ResponseSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response'), 'exclude': lambda f: f is None }})
    r"""Specifies a list of message groups that Amazon Lex uses to respond the user input."""  
    