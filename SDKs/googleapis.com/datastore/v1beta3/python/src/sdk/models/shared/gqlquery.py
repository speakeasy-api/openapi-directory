"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gqlqueryparameter as shared_gqlqueryparameter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GqlQuery:
    r"""A [GQL query](https://cloud.google.com/datastore/docs/apis/gql/gql_reference)."""
    
    allow_literals: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowLiterals'), 'exclude': lambda f: f is None }})
    r"""When false, the query string must not contain any literals and instead must bind all values. For example, `SELECT * FROM Kind WHERE a = 'string literal'` is not allowed, while `SELECT * FROM Kind WHERE a = @value` is."""  
    named_bindings: Optional[dict[str, shared_gqlqueryparameter.GqlQueryParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namedBindings'), 'exclude': lambda f: f is None }})
    r"""For each non-reserved named binding site in the query string, there must be a named parameter with that name, but not necessarily the inverse. Key must match regex `A-Za-z_$*`, must not match regex `__.*__`, and must not be `\\"\\"`."""  
    positional_bindings: Optional[list[shared_gqlqueryparameter.GqlQueryParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('positionalBindings'), 'exclude': lambda f: f is None }})
    r"""Numbered binding site @1 references the first numbered parameter, effectively using 1-based indexing, rather than the usual 0. For each binding site numbered i in `query_string`, there must be an i-th numbered parameter. The inverse must also be true."""  
    query_string: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryString'), 'exclude': lambda f: f is None }})
    r"""A string of the format described [here](https://cloud.google.com/datastore/docs/apis/gql/gql_reference)."""  
    