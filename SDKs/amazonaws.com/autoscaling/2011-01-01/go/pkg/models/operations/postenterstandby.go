// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTEnterStandbyActionEnum
type POSTEnterStandbyActionEnum string

const (
	POSTEnterStandbyActionEnumEnterStandby POSTEnterStandbyActionEnum = "EnterStandby"
)

func (e POSTEnterStandbyActionEnum) ToPointer() *POSTEnterStandbyActionEnum {
	return &e
}

func (e *POSTEnterStandbyActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EnterStandby":
		*e = POSTEnterStandbyActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTEnterStandbyActionEnum: %v", v)
	}
}

// POSTEnterStandbyVersionEnum
type POSTEnterStandbyVersionEnum string

const (
	POSTEnterStandbyVersionEnumTwoThousandAndEleven0101 POSTEnterStandbyVersionEnum = "2011-01-01"
)

func (e POSTEnterStandbyVersionEnum) ToPointer() *POSTEnterStandbyVersionEnum {
	return &e
}

func (e *POSTEnterStandbyVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-01-01":
		*e = POSTEnterStandbyVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTEnterStandbyVersionEnum: %v", v)
	}
}

type POSTEnterStandbyRequest struct {
	Action            POSTEnterStandbyActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                      `request:"mediaType=text/xml"`
	Version           POSTEnterStandbyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTEnterStandbyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
