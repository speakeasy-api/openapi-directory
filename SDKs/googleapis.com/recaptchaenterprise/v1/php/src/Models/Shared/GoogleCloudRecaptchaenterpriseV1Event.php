<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudRecaptchaenterpriseV1Event - The event being assessed.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudRecaptchaenterpriseV1Event
{
    /**
     * Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.
     * 
     * @var ?string $expectedAction
     */
	#[\JMS\Serializer\Annotation\SerializedName('expectedAction')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expectedAction = null;
    
    /**
     * Optional. Flag for a reCAPTCHA express request for an assessment without a token. If enabled, `site_key` must reference a SCORE key with WAF feature set to EXPRESS.
     * 
     * @var ?bool $express
     */
	#[\JMS\Serializer\Annotation\SerializedName('express')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $express = null;
    
    /**
     * Optional. Flag for enabling firewall policy config assessment. If this flag is enabled, the firewall policy will be evaluated and a suggested firewall action will be returned in the response.
     * 
     * @var ?bool $firewallPolicyEvaluation
     */
	#[\JMS\Serializer\Annotation\SerializedName('firewallPolicyEvaluation')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $firewallPolicyEvaluation = null;
    
    /**
     * Optional. Unique stable hashed user identifier for the request. The identifier must be hashed using hmac-sha256 with stable secret.
     * 
     * @var ?string $hashedAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('hashedAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hashedAccountId = null;
    
    /**
     * Optional. HTTP header information about the request.
     * 
     * @var ?array<string> $headers
     */
	#[\JMS\Serializer\Annotation\SerializedName('headers')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $headers = null;
    
    /**
     * Optional. Optional JA3 fingerprint for SSL clients.
     * 
     * @var ?string $ja3
     */
	#[\JMS\Serializer\Annotation\SerializedName('ja3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ja3 = null;
    
    /**
     * Optional. The URI resource the user requested that triggered an assessment.
     * 
     * @var ?string $requestedUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestedUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestedUri = null;
    
    /**
     * Optional. The site key that was used to invoke reCAPTCHA Enterprise on your site and generate the token.
     * 
     * @var ?string $siteKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('siteKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $siteKey = null;
    
    /**
     * Optional. The user response token provided by the reCAPTCHA Enterprise client-side integration on your site.
     * 
     * @var ?string $token
     */
	#[\JMS\Serializer\Annotation\SerializedName('token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $token = null;
    
    /**
     * Transaction data associated with a payment protected by reCAPTCHA Enterprise. All fields are optional.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1TransactionData $transactionData
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionData')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecaptchaenterpriseV1TransactionData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRecaptchaenterpriseV1TransactionData $transactionData = null;
    
    /**
     * Optional. The user agent present in the request from the user's device related to this event.
     * 
     * @var ?string $userAgent
     */
	#[\JMS\Serializer\Annotation\SerializedName('userAgent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userAgent = null;
    
    /**
     * Optional. The IP address in the request from the user's device related to this event.
     * 
     * @var ?string $userIpAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('userIpAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userIpAddress = null;
    
    /**
     * Optional. Flag for running WAF token assessment. If enabled, the token must be specified, and have been created by a WAF-enabled key.
     * 
     * @var ?bool $wafTokenAssessment
     */
	#[\JMS\Serializer\Annotation\SerializedName('wafTokenAssessment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $wafTokenAssessment = null;
    
	public function __construct()
	{
		$this->expectedAction = null;
		$this->express = null;
		$this->firewallPolicyEvaluation = null;
		$this->hashedAccountId = null;
		$this->headers = null;
		$this->ja3 = null;
		$this->requestedUri = null;
		$this->siteKey = null;
		$this->token = null;
		$this->transactionData = null;
		$this->userAgent = null;
		$this->userIpAddress = null;
		$this->wafTokenAssessment = null;
	}
}
