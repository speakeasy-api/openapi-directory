<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateLaunchRequestBody
{
    /**
     * An optional description for the launch.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * An array of structures that contains the feature and variations that are to be used for the launch.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LaunchGroupConfig> $groups
     */
	#[\JMS\Serializer\Annotation\SerializedName('groups')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LaunchGroupConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $groups = null;
    
    /**
     * An array of structures that define the metrics that will be used to monitor the launch performance.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MetricMonitorConfig> $metricMonitors
     */
	#[\JMS\Serializer\Annotation\SerializedName('metricMonitors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MetricMonitorConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metricMonitors = null;
    
    /**
     * When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and <code>randomizationSalt</code>. If you omit <code>randomizationSalt</code>, Evidently uses the launch name as the <code>randomizationSalt</code>.
     * 
     * @var ?string $randomizationSalt
     */
	#[\JMS\Serializer\Annotation\SerializedName('randomizationSalt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $randomizationSalt = null;
    
    /**
     * An array of structures that define the traffic allocation percentages among the feature variations during each step of a launch. This also defines the start time of each step.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateLaunchRequestBodyScheduledSplitsConfig $scheduledSplitsConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduledSplitsConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateLaunchRequestBodyScheduledSplitsConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateLaunchRequestBodyScheduledSplitsConfig $scheduledSplitsConfig = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->groups = null;
		$this->metricMonitors = null;
		$this->randomizationSalt = null;
		$this->scheduledSplitsConfig = null;
	}
}
