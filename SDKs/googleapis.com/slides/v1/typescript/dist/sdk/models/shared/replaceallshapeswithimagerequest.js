"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplaceAllShapesWithImageRequest = exports.ReplaceAllShapesWithImageRequestReplaceMethodEnum = exports.ReplaceAllShapesWithImageRequestImageReplaceMethodEnum = void 0;
var utils_1 = require("../../../internal/utils");
var substringmatchcriteria_1 = require("./substringmatchcriteria");
var class_transformer_1 = require("class-transformer");
/**
 * The image replace method. If you specify both a `replace_method` and an `image_replace_method`, the `image_replace_method` takes precedence. If you do not specify a value for `image_replace_method`, but specify a value for `replace_method`, then the specified `replace_method` value is used. If you do not specify either, then CENTER_INSIDE is used.
 */
var ReplaceAllShapesWithImageRequestImageReplaceMethodEnum;
(function (ReplaceAllShapesWithImageRequestImageReplaceMethodEnum) {
    ReplaceAllShapesWithImageRequestImageReplaceMethodEnum["ImageReplaceMethodUnspecified"] = "IMAGE_REPLACE_METHOD_UNSPECIFIED";
    ReplaceAllShapesWithImageRequestImageReplaceMethodEnum["CenterInside"] = "CENTER_INSIDE";
    ReplaceAllShapesWithImageRequestImageReplaceMethodEnum["CenterCrop"] = "CENTER_CROP";
})(ReplaceAllShapesWithImageRequestImageReplaceMethodEnum = exports.ReplaceAllShapesWithImageRequestImageReplaceMethodEnum || (exports.ReplaceAllShapesWithImageRequestImageReplaceMethodEnum = {}));
/**
 * The replace method. *Deprecated*: use `image_replace_method` instead. If you specify both a `replace_method` and an `image_replace_method`, the `image_replace_method` takes precedence.
 */
var ReplaceAllShapesWithImageRequestReplaceMethodEnum;
(function (ReplaceAllShapesWithImageRequestReplaceMethodEnum) {
    ReplaceAllShapesWithImageRequestReplaceMethodEnum["CenterInside"] = "CENTER_INSIDE";
    ReplaceAllShapesWithImageRequestReplaceMethodEnum["CenterCrop"] = "CENTER_CROP";
})(ReplaceAllShapesWithImageRequestReplaceMethodEnum = exports.ReplaceAllShapesWithImageRequestReplaceMethodEnum || (exports.ReplaceAllShapesWithImageRequestReplaceMethodEnum = {}));
/**
 * Replaces all shapes that match the given criteria with the provided image. The images replacing the shapes are rectangular after being inserted into the presentation and do not take on the forms of the shapes.
 */
var ReplaceAllShapesWithImageRequest = /** @class */ (function (_super) {
    __extends(ReplaceAllShapesWithImageRequest, _super);
    function ReplaceAllShapesWithImageRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "containsText" }),
        (0, class_transformer_1.Type)(function () { return substringmatchcriteria_1.SubstringMatchCriteria; }),
        __metadata("design:type", substringmatchcriteria_1.SubstringMatchCriteria)
    ], ReplaceAllShapesWithImageRequest.prototype, "containsText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "imageReplaceMethod" }),
        __metadata("design:type", String)
    ], ReplaceAllShapesWithImageRequest.prototype, "imageReplaceMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "imageUrl" }),
        __metadata("design:type", String)
    ], ReplaceAllShapesWithImageRequest.prototype, "imageUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pageObjectIds" }),
        __metadata("design:type", Array)
    ], ReplaceAllShapesWithImageRequest.prototype, "pageObjectIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "replaceMethod" }),
        __metadata("design:type", String)
    ], ReplaceAllShapesWithImageRequest.prototype, "replaceMethod", void 0);
    return ReplaceAllShapesWithImageRequest;
}(utils_1.SpeakeasyBase));
exports.ReplaceAllShapesWithImageRequest = ReplaceAllShapesWithImageRequest;
