// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomEventErrorCodeEnum - The error code.
type CustomEventErrorCodeEnum string

const (
	CustomEventErrorCodeEnumUnknown          CustomEventErrorCodeEnum = "UNKNOWN"
	CustomEventErrorCodeEnumInvalidArgument  CustomEventErrorCodeEnum = "INVALID_ARGUMENT"
	CustomEventErrorCodeEnumInternal         CustomEventErrorCodeEnum = "INTERNAL"
	CustomEventErrorCodeEnumPermissionDenied CustomEventErrorCodeEnum = "PERMISSION_DENIED"
	CustomEventErrorCodeEnumNotFound         CustomEventErrorCodeEnum = "NOT_FOUND"
)

func (e *CustomEventErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "INVALID_ARGUMENT":
		fallthrough
	case "INTERNAL":
		fallthrough
	case "PERMISSION_DENIED":
		fallthrough
	case "NOT_FOUND":
		*e = CustomEventErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomEventErrorCodeEnum: %s", s)
	}
}

// CustomEventError - The error code and description for a custom event that failed to insert.
type CustomEventError struct {
	// The error code.
	Code *CustomEventErrorCodeEnum `json:"code,omitempty"`
	// Identifies what kind of resource this is. Value: the fixed string "dfareporting#customEventError".
	Kind *string `json:"kind,omitempty"`
	// A description of the error.
	Message *string `json:"message,omitempty"`
}
