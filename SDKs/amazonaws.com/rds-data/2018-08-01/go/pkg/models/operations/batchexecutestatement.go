// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type BatchExecuteStatementRequestBody struct {
	// The name of the database.
	Database *string `json:"database,omitempty"`
	// <p>The parameter set for the batch operation.</p> <p>The SQL statement is executed as many times as the number of parameter sets provided. To execute a SQL statement with no parameters, use one of the following options:</p> <ul> <li> <p>Specify one or more empty parameter sets.</p> </li> <li> <p>Use the <code>ExecuteStatement</code> operation instead of the <code>BatchExecuteStatement</code> operation.</p> </li> </ul> <note> <p>Array parameters are not supported.</p> </note>
	ParameterSets [][]shared.SQLParameter `json:"parameterSets,omitempty"`
	// The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.
	ResourceArn string `json:"resourceArn"`
	// <p>The name of the database schema.</p> <note> <p>Currently, the <code>schema</code> parameter isn't supported.</p> </note>
	Schema *string `json:"schema,omitempty"`
	// <p>The ARN of the secret that enables access to the DB cluster. Enter the database user name and password for the credentials in the secret.</p> <p>For information about creating the secret, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_database_secret.html">Create a database secret</a>.</p>
	SecretArn string `json:"secretArn"`
	// The SQL statement to run. Don't include a semicolon (;) at the end of the SQL statement.
	SQL string `json:"sql"`
	// <p>The identifier of a transaction that was started by using the <code>BeginTransaction</code> operation. Specify the transaction ID of the transaction that you want to include the SQL statement in.</p> <p>If the SQL statement is not part of a transaction, don't set this parameter.</p>
	TransactionID *string `json:"transactionId,omitempty"`
}

type BatchExecuteStatementRequest struct {
	RequestBody       BatchExecuteStatementRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type BatchExecuteStatementResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BadRequestException
	BadRequestException interface{}
	// Success
	BatchExecuteStatementResponse *shared.BatchExecuteStatementResponse
	ContentType                   string
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
	// ServiceUnavailableError
	ServiceUnavailableError interface{}
	// StatementTimeoutException
	StatementTimeoutException interface{}
}
