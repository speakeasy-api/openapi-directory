// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetPasswordDataActionEnum
type POSTGetPasswordDataActionEnum string

const (
	POSTGetPasswordDataActionEnumGetPasswordData POSTGetPasswordDataActionEnum = "GetPasswordData"
)

func (e POSTGetPasswordDataActionEnum) ToPointer() *POSTGetPasswordDataActionEnum {
	return &e
}

func (e *POSTGetPasswordDataActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetPasswordData":
		*e = POSTGetPasswordDataActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetPasswordDataActionEnum: %v", v)
	}
}

// POSTGetPasswordDataVersionEnum
type POSTGetPasswordDataVersionEnum string

const (
	POSTGetPasswordDataVersionEnumTwoThousandAndSixteen1115 POSTGetPasswordDataVersionEnum = "2016-11-15"
)

func (e POSTGetPasswordDataVersionEnum) ToPointer() *POSTGetPasswordDataVersionEnum {
	return &e
}

func (e *POSTGetPasswordDataVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTGetPasswordDataVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetPasswordDataVersionEnum: %v", v)
	}
}

type POSTGetPasswordDataRequest struct {
	Action            POSTGetPasswordDataActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                         `request:"mediaType=text/xml"`
	Version           POSTGetPasswordDataVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetPasswordDataResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
