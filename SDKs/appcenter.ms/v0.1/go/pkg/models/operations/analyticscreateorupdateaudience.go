// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type AnalyticsCreateOrUpdateAudienceSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum string

const (
	AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnumString   AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum = "string"
	AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnumNumber   AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum = "number"
	AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnumBoolean  AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum = "boolean"
	AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnumDateTime AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum = "date_time"
)

func (e *AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "string":
		fallthrough
	case "number":
		fallthrough
	case "boolean":
		fallthrough
	case "date_time":
		*e = AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum: %s", s)
	}
}

// AnalyticsCreateOrUpdateAudienceRequestBody - Audience definition.
type AnalyticsCreateOrUpdateAudienceRequestBody struct {
	// Custom properties used in the definition.
	CustomProperties map[string]AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum `json:"custom_properties,omitempty"`
	// Audience definition in OData format.
	Definition string `json:"definition"`
	// Audience description.
	Description *string `json:"description,omitempty"`
	Enabled     *bool   `json:"enabled,omitempty"`
}

type AnalyticsCreateOrUpdateAudienceRequest struct {
	// Audience definition
	RequestBody AnalyticsCreateOrUpdateAudienceRequestBody `request:"mediaType=application/json"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the audience
	AudienceName string `pathParam:"style=simple,explode=false,name=audience_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum string

const (
	AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnumBadRequest          AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnumConflict            AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnumNotAcceptable       AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnumNotFound            AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnumInternalServerError AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnumUnauthorized        AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnumTooManyRequests     AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONError struct {
	Code    AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                             `json:"message"`
}

// AnalyticsCreateOrUpdateAudienceDefaultApplicationJSON - Error code with reason
type AnalyticsCreateOrUpdateAudienceDefaultApplicationJSON struct {
	Error AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONError `json:"error"`
}

type AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum string

const (
	AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnumString   AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum = "string"
	AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnumNumber   AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum = "number"
	AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnumBoolean  AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum = "boolean"
	AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnumDateTime AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum = "date_time"
)

func (e *AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "string":
		fallthrough
	case "number":
		fallthrough
	case "boolean":
		fallthrough
	case "date_time":
		*e = AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum: %s", s)
	}
}

// AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum - Audience state.
type AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum string

const (
	AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnumCalculating AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum = "Calculating"
	AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnumReady       AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum = "Ready"
	AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnumDisabled    AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum = "Disabled"
)

func (e *AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Calculating":
		fallthrough
	case "Ready":
		fallthrough
	case "Disabled":
		*e = AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum: %s", s)
	}
}

// AnalyticsCreateOrUpdateAudience200ApplicationJSON - Audience definition.
type AnalyticsCreateOrUpdateAudience200ApplicationJSON struct {
	// Custom properties used in the definition.
	CustomProperties map[string]AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum `json:"custom_properties,omitempty"`
	// Audience definition in OData format.
	Definition *string `json:"definition,omitempty"`
	// Audience description.
	Description *string `json:"description,omitempty"`
	Enabled     *bool   `json:"enabled,omitempty"`
	// Estimated audience size.
	EstimatedCount *int64 `json:"estimated_count,omitempty"`
	// Estimated total audience size.
	EstimatedTotalCount *int64 `json:"estimated_total_count,omitempty"`
	// Audience name.
	Name *string `json:"name,omitempty"`
	// Audience state.
	State *AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum `json:"state,omitempty"`
	// Date the audience was last refreshed.
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

type AnalyticsCreateOrUpdateAudienceResponse struct {
	// Updated audiences definition.
	AnalyticsCreateOrUpdateAudience200ApplicationJSONObject *AnalyticsCreateOrUpdateAudience200ApplicationJSON
	// Error code with reason
	AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONObject *AnalyticsCreateOrUpdateAudienceDefaultApplicationJSON
	ContentType                                                 string
	StatusCode                                                  int
	RawResponse                                                 *http.Response
}
