/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETModifyVpcEndpointRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETModifyVpcEndpointActionEnum action;
    public GETModifyVpcEndpointRequest withAction(GETModifyVpcEndpointActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * (Gateway endpoint) The IDs of the route tables to associate with the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AddRouteTableId")
    public String[] addRouteTableId;
    public GETModifyVpcEndpointRequest withAddRouteTableId(String[] addRouteTableId) {
        this.addRouteTableId = addRouteTableId;
        return this;
    }
    
    /**
     * (Interface endpoint) The IDs of the security groups to associate with the network interface.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AddSecurityGroupId")
    public String[] addSecurityGroupId;
    public GETModifyVpcEndpointRequest withAddSecurityGroupId(String[] addSecurityGroupId) {
        this.addSecurityGroupId = addSecurityGroupId;
        return this;
    }
    
    /**
     * (Interface and Gateway Load Balancer endpoints) The IDs of the subnets in which to serve the endpoint. For a Gateway Load Balancer endpoint, you can specify only one subnet.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AddSubnetId")
    public String[] addSubnetId;
    public GETModifyVpcEndpointRequest withAddSubnetId(String[] addSubnetId) {
        this.addSubnetId = addSubnetId;
        return this;
    }
    
    /**
     * The DNS options for the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DnsOptions")
    public GETModifyVpcEndpointDNSOptions dnsOptions;
    public GETModifyVpcEndpointRequest withDnsOptions(GETModifyVpcEndpointDNSOptions dnsOptions) {
        this.dnsOptions = dnsOptions;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETModifyVpcEndpointRequest withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The IP address type for the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=IpAddressType")
    public GETModifyVpcEndpointIPAddressTypeEnum ipAddressType;
    public GETModifyVpcEndpointRequest withIpAddressType(GETModifyVpcEndpointIPAddressTypeEnum ipAddressType) {
        this.ipAddressType = ipAddressType;
        return this;
    }
    
    /**
     * (Interface and gateway endpoints) A policy to attach to the endpoint that controls access to the service. The policy must be in valid JSON format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PolicyDocument")
    public String policyDocument;
    public GETModifyVpcEndpointRequest withPolicyDocument(String policyDocument) {
        this.policyDocument = policyDocument;
        return this;
    }
    
    /**
     * (Interface endpoint) Indicates whether a private hosted zone is associated with the VPC.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PrivateDnsEnabled")
    public Boolean privateDnsEnabled;
    public GETModifyVpcEndpointRequest withPrivateDnsEnabled(Boolean privateDnsEnabled) {
        this.privateDnsEnabled = privateDnsEnabled;
        return this;
    }
    
    /**
     * (Gateway endpoint) The IDs of the route tables to disassociate from the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RemoveRouteTableId")
    public String[] removeRouteTableId;
    public GETModifyVpcEndpointRequest withRemoveRouteTableId(String[] removeRouteTableId) {
        this.removeRouteTableId = removeRouteTableId;
        return this;
    }
    
    /**
     * (Interface endpoint) The IDs of the security groups to disassociate from the network interface.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RemoveSecurityGroupId")
    public String[] removeSecurityGroupId;
    public GETModifyVpcEndpointRequest withRemoveSecurityGroupId(String[] removeSecurityGroupId) {
        this.removeSecurityGroupId = removeSecurityGroupId;
        return this;
    }
    
    /**
     * (Interface endpoint) The IDs of the subnets from which to remove the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RemoveSubnetId")
    public String[] removeSubnetId;
    public GETModifyVpcEndpointRequest withRemoveSubnetId(String[] removeSubnetId) {
        this.removeSubnetId = removeSubnetId;
        return this;
    }
    
    /**
     * (Gateway endpoint) Specify &lt;code&gt;true&lt;/code&gt; to reset the policy document to the default policy. The default policy allows full access to the service.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ResetPolicy")
    public Boolean resetPolicy;
    public GETModifyVpcEndpointRequest withResetPolicy(Boolean resetPolicy) {
        this.resetPolicy = resetPolicy;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETModifyVpcEndpointVersionEnum version;
    public GETModifyVpcEndpointRequest withVersion(GETModifyVpcEndpointVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * The ID of the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpcEndpointId")
    public String vpcEndpointId;
    public GETModifyVpcEndpointRequest withVpcEndpointId(String vpcEndpointId) {
        this.vpcEndpointId = vpcEndpointId;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public GETModifyVpcEndpointRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public GETModifyVpcEndpointRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public GETModifyVpcEndpointRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public GETModifyVpcEndpointRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public GETModifyVpcEndpointRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public GETModifyVpcEndpointRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public GETModifyVpcEndpointRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
}
