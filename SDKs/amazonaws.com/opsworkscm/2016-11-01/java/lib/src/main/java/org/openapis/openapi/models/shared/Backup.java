/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Backup - Describes a single backup. 
 */
public class Backup {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BackupArn")
    public String backupArn;
    public Backup withBackupArn(String backupArn) {
        this.backupArn = backupArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BackupId")
    public String backupId;
    public Backup withBackupId(String backupId) {
        this.backupId = backupId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BackupType")
    public BackupTypeEnum backupType;
    public Backup withBackupType(BackupTypeEnum backupType) {
        this.backupType = backupType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAt")
    public OffsetDateTime createdAt;
    public Backup withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public Backup withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Engine")
    public String engine;
    public Backup withEngine(String engine) {
        this.engine = engine;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EngineModel")
    public String engineModel;
    public Backup withEngineModel(String engineModel) {
        this.engineModel = engineModel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EngineVersion")
    public String engineVersion;
    public Backup withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceProfileArn")
    public String instanceProfileArn;
    public Backup withInstanceProfileArn(String instanceProfileArn) {
        this.instanceProfileArn = instanceProfileArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceType")
    public String instanceType;
    public Backup withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KeyPair")
    public String keyPair;
    public Backup withKeyPair(String keyPair) {
        this.keyPair = keyPair;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PreferredBackupWindow")
    public String preferredBackupWindow;
    public Backup withPreferredBackupWindow(String preferredBackupWindow) {
        this.preferredBackupWindow = preferredBackupWindow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PreferredMaintenanceWindow")
    public String preferredMaintenanceWindow;
    public Backup withPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3DataSize")
    public Long s3DataSize;
    public Backup withS3DataSize(Long s3DataSize) {
        this.s3DataSize = s3DataSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3DataUrl")
    public String s3DataUrl;
    public Backup withS3DataUrl(String s3DataUrl) {
        this.s3DataUrl = s3DataUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3LogUrl")
    public String s3LogUrl;
    public Backup withS3LogUrl(String s3LogUrl) {
        this.s3LogUrl = s3LogUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityGroupIds")
    public String[] securityGroupIds;
    public Backup withSecurityGroupIds(String[] securityGroupIds) {
        this.securityGroupIds = securityGroupIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServerName")
    public String serverName;
    public Backup withServerName(String serverName) {
        this.serverName = serverName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServiceRoleArn")
    public String serviceRoleArn;
    public Backup withServiceRoleArn(String serviceRoleArn) {
        this.serviceRoleArn = serviceRoleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public BackupStatusEnum status;
    public Backup withStatus(BackupStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatusDescription")
    public String statusDescription;
    public Backup withStatusDescription(String statusDescription) {
        this.statusDescription = statusDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubnetIds")
    public String[] subnetIds;
    public Backup withSubnetIds(String[] subnetIds) {
        this.subnetIds = subnetIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ToolsVersion")
    public String toolsVersion;
    public Backup withToolsVersion(String toolsVersion) {
        this.toolsVersion = toolsVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserArn")
    public String userArn;
    public Backup withUserArn(String userArn) {
        this.userArn = userArn;
        return this;
    }
    
}
