"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .account import Account
from .application import Application
from .facebook_messenger import FacebookMessenger
from .viber_service_message import ViberServiceMessage
from .whatsapp import WhatsApp

SERVERS = [
    "https://api.nexmo.com/beta/chatapp-accounts",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""The External Accounts API is used to manage accounts for Viber Business Messages, Facebook Messenger and Whatsapp for use in the [Messages](https://developer.nexmo.com/messages/overview) and [Dispatch](https://developer.nexmo.com/dispatch/overview) APIs."""
    account: Account
    r"""An external-account used as the `from` field in the Messages API and Dispatch API"""
    application: Application
    r"""Inbound messages to an external account which is linked to an application will be delivered to the application's inbound URL."""
    facebook_messenger: FacebookMessenger
    r"""Managing your [Facebook Messenger](https://developer.nexmo.com/messages/concepts/facebook) account"""
    viber_service_message: ViberServiceMessage
    r"""Managing your [Viber Service Message](https://developer.nexmo.com/messages/concepts/viber) account"""
    whats_app: WhatsApp

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.account = Account(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.application = Application(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.facebook_messenger = FacebookMessenger(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.viber_service_message = ViberServiceMessage(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.whats_app = WhatsApp(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    