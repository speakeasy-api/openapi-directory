/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListAllPickupPpointsRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;
}

export class ListAllPickupPpoints200ApplicationJSONAddressCountry extends SpeakeasyBase {
  /**
   * Three letter ISO code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acronym" })
  acronym?: string;

  /**
   * Country name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Geolocation properties.
 */
export class ListAllPickupPpoints200ApplicationJSONAddressLocation extends SpeakeasyBase {
  /**
   * Latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  /**
   * Longitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;
}

export class ListAllPickupPpoints200ApplicationJSONAddress extends SpeakeasyBase {
  /**
   * City.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Address complement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  @Type(() => ListAllPickupPpoints200ApplicationJSONAddressCountry)
  country?: ListAllPickupPpoints200ApplicationJSONAddressCountry;

  /**
   * Geolocation properties.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => ListAllPickupPpoints200ApplicationJSONAddressLocation)
  location?: ListAllPickupPpoints200ApplicationJSONAddressLocation;

  /**
   * Neighborhood.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood?: string;

  /**
   * Pickup point address number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Postal code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * State.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Street name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;
}

export class ListAllPickupPpoints200ApplicationJSONBusinessHours extends SpeakeasyBase {
  /**
   * Closing time in `hh:mm:ss`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "closingTime" })
  closingTime?: string;

  /**
   * Day of the week, from `0` (sunday) to `6` (saturday).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dayOfWeek" })
  dayOfWeek?: number;

  /**
   * Opening time in `hh:mm:ss`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "openingTime" })
  openingTime?: string;
}

export class ListAllPickupPpoints200ApplicationJSON extends SpeakeasyBase {
  /**
   * Account group ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountGroupId" })
  accountGroupId?: string;

  /**
   * Account owner ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountOwnerId" })
  accountOwnerId?: string;

  /**
   * Account owner name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountOwnerName" })
  accountOwnerName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => ListAllPickupPpoints200ApplicationJSONAddress)
  address?: ListAllPickupPpoints200ApplicationJSONAddress;

  /**
   * Business hours information for each day of the week.
   */
  @SpeakeasyMetadata({
    elemType: ListAllPickupPpoints200ApplicationJSONBusinessHours,
  })
  @Expose({ name: "businessHours" })
  @Type(() => ListAllPickupPpoints200ApplicationJSONBusinessHours)
  businessHours?: ListAllPickupPpoints200ApplicationJSONBusinessHours[];

  /**
   * Pickup point description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Distance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distance" })
  distance?: number;

  /**
   * Formated address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formatted_address" })
  formattedAddress?: string;

  /**
   * Pickup point ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Instructions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instructions" })
  instructions?: string;

  /**
   * Indicates whether pickup point is active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  /**
   * Indicates whether pickup point is third party.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isThirdPartyPickup" })
  isThirdPartyPickup?: boolean;

  /**
   * Pickup point name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Original ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originalId" })
  originalId?: string;

  /**
   * Parent account name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentAccountName" })
  parentAccountName?: string;

  /**
   * Holidays which apply for pickup point.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupHolidays" })
  pickupHolidays?: string[];

  /**
   * Seller corresponding to pickup point.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  seller?: string;

  /**
   * List of tags.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagsLabel" })
  tagsLabel?: string[];
}

export class ListAllPickupPpointsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: ListAllPickupPpoints200ApplicationJSON })
  listAllPickupPpoints200ApplicationJSONObjects?: ListAllPickupPpoints200ApplicationJSON[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
