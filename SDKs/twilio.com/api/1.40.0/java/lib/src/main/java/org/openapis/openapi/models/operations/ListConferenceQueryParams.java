/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListConferenceQueryParams {
    /**
     * The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. To read conferences that started on or before midnight on a date, use `&lt;=YYYY-MM-DD`, and to specify  conferences that started on or after midnight on a date, use `&gt;=YYYY-MM-DD`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateCreated")
    public LocalDate dateCreated;
    public ListConferenceQueryParams withDateCreated(LocalDate dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. To read conferences that started on or before midnight on a date, use `&lt;=YYYY-MM-DD`, and to specify  conferences that started on or after midnight on a date, use `&gt;=YYYY-MM-DD`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateCreated<")
    public LocalDate dateCreatedLessThan;
    public ListConferenceQueryParams withDateCreatedLessThan(LocalDate dateCreatedLessThan) {
        this.dateCreatedLessThan = dateCreatedLessThan;
        return this;
    }
    
    /**
     * The `date_created` value, specified as `YYYY-MM-DD`, of the resources to read. To read conferences that started on or before midnight on a date, use `&lt;=YYYY-MM-DD`, and to specify  conferences that started on or after midnight on a date, use `&gt;=YYYY-MM-DD`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateCreated>")
    public LocalDate dateCreatedGreaterThan;
    public ListConferenceQueryParams withDateCreatedGreaterThan(LocalDate dateCreatedGreaterThan) {
        this.dateCreatedGreaterThan = dateCreatedGreaterThan;
        return this;
    }
    
    /**
     * The `date_updated` value, specified as `YYYY-MM-DD`, of the resources to read. To read conferences that were last updated on or before midnight on a date, use `&lt;=YYYY-MM-DD`, and to specify conferences that were last updated on or after midnight on a given date, use  `&gt;=YYYY-MM-DD`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateUpdated")
    public LocalDate dateUpdated;
    public ListConferenceQueryParams withDateUpdated(LocalDate dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The `date_updated` value, specified as `YYYY-MM-DD`, of the resources to read. To read conferences that were last updated on or before midnight on a date, use `&lt;=YYYY-MM-DD`, and to specify conferences that were last updated on or after midnight on a given date, use  `&gt;=YYYY-MM-DD`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateUpdated<")
    public LocalDate dateUpdatedLessThan;
    public ListConferenceQueryParams withDateUpdatedLessThan(LocalDate dateUpdatedLessThan) {
        this.dateUpdatedLessThan = dateUpdatedLessThan;
        return this;
    }
    
    /**
     * The `date_updated` value, specified as `YYYY-MM-DD`, of the resources to read. To read conferences that were last updated on or before midnight on a date, use `&lt;=YYYY-MM-DD`, and to specify conferences that were last updated on or after midnight on a given date, use  `&gt;=YYYY-MM-DD`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateUpdated>")
    public LocalDate dateUpdatedGreaterThan;
    public ListConferenceQueryParams withDateUpdatedGreaterThan(LocalDate dateUpdatedGreaterThan) {
        this.dateUpdatedGreaterThan = dateUpdatedGreaterThan;
        return this;
    }
    
    /**
     * The string that identifies the Conference resources to read.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=FriendlyName")
    public String friendlyName;
    public ListConferenceQueryParams withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The page index. This value is simply for client state.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Page")
    public Long page;
    public ListConferenceQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PageSize")
    public Long pageSize;
    public ListConferenceQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The page token. This is provided by the API.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PageToken")
    public String pageToken;
    public ListConferenceQueryParams withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * The status of the resources to read. Can be: `init`, `in-progress`, or `completed`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Status")
    public org.openapis.openapi.models.shared.ConferenceEnumStatusEnum status;
    public ListConferenceQueryParams withStatus(org.openapis.openapi.models.shared.ConferenceEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
