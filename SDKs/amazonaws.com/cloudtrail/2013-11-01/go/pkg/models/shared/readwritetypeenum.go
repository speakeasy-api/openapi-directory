// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReadWriteTypeEnum string

const (
	ReadWriteTypeEnumReadOnly  ReadWriteTypeEnum = "ReadOnly"
	ReadWriteTypeEnumWriteOnly ReadWriteTypeEnum = "WriteOnly"
	ReadWriteTypeEnumAll       ReadWriteTypeEnum = "All"
)

func (e ReadWriteTypeEnum) ToPointer() *ReadWriteTypeEnum {
	return &e
}

func (e *ReadWriteTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ReadOnly":
		fallthrough
	case "WriteOnly":
		fallthrough
	case "All":
		*e = ReadWriteTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReadWriteTypeEnum: %v", v)
	}
}
