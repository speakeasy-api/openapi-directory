<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StackTrace - A call stack appearing in a trace.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StackTrace
{
    /**
     * A collection of stack frames, which can be truncated.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StackFrames $stackFrames
     */
	#[\JMS\Serializer\Annotation\SerializedName('stackFrames')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StackFrames')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StackFrames $stackFrames = null;
    
    /**
     * The hash ID is used to conserve network bandwidth for duplicate stack traces within a single trace. Often multiple spans will have identical stack traces. The first occurrence of a stack trace should contain both the `stackFrame` content and a value in `stackTraceHashId`. Subsequent spans within the same request can refer to that stack trace by only setting `stackTraceHashId`.
     * 
     * @var ?string $stackTraceHashId
     */
	#[\JMS\Serializer\Annotation\SerializedName('stackTraceHashId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stackTraceHashId = null;
    
	public function __construct()
	{
		$this->stackFrames = null;
		$this->stackTraceHashId = null;
	}
}
