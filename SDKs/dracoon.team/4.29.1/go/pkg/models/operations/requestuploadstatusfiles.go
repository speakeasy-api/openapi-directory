// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RequestUploadStatusFilesPathParams struct {
	// Upload channel ID
	UploadID string `pathParam:"style=simple,explode=false,name=upload_id"`
}

// RequestUploadStatusFilesXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type RequestUploadStatusFilesXSdsDateFormatEnum string

const (
	RequestUploadStatusFilesXSdsDateFormatEnumUtc    RequestUploadStatusFilesXSdsDateFormatEnum = "UTC"
	RequestUploadStatusFilesXSdsDateFormatEnumLocal  RequestUploadStatusFilesXSdsDateFormatEnum = "LOCAL"
	RequestUploadStatusFilesXSdsDateFormatEnumOffset RequestUploadStatusFilesXSdsDateFormatEnum = "OFFSET"
	RequestUploadStatusFilesXSdsDateFormatEnumEpoch  RequestUploadStatusFilesXSdsDateFormatEnum = "EPOCH"
	RequestUploadStatusFilesXSdsDateFormatEnumLeet   RequestUploadStatusFilesXSdsDateFormatEnum = "LEET"
)

func (e *RequestUploadStatusFilesXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = RequestUploadStatusFilesXSdsDateFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestUploadStatusFilesXSdsDateFormatEnum: %s", s)
	}
}

type RequestUploadStatusFilesHeaders struct {
	// Authentication token
	XSdsAuthToken *string `header:"style=simple,explode=false,name=X-Sds-Auth-Token"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *RequestUploadStatusFilesXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
}

type RequestUploadStatusFilesRequest struct {
	PathParams RequestUploadStatusFilesPathParams
	Headers    RequestUploadStatusFilesHeaders
}

type RequestUploadStatusFilesResponse struct {
	ContentType string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	// OK
	S3FileUploadStatus *shared.S3FileUploadStatus
	StatusCode         int
	RawResponse        *http.Response
}
