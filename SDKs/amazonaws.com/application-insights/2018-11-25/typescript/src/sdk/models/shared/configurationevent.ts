/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigurationEventResourceTypeEnum } from "./configurationeventresourcetypeenum";
import { ConfigurationEventStatusEnum } from "./configurationeventstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 *  The event information.
 */
export class ConfigurationEvent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EventDetail" })
  eventDetail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventResourceName" })
  eventResourceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventResourceType" })
  eventResourceType?: ConfigurationEventResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EventStatus" })
  eventStatus?: ConfigurationEventStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EventTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoredResourceARN" })
  monitoredResourceARN?: string;
}
