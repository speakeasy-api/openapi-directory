/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETModifySubnetAttributeActionEnum {
  ModifySubnetAttribute = "ModifySubnetAttribute",
}

/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
export class GETModifySubnetAttributeAssignIpv6AddressOnCreation extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Value" })
  value?: boolean;
}

/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
export class GETModifySubnetAttributeDisableLniAtDeviceIndex extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Value" })
  value?: boolean;
}

/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
export class GETModifySubnetAttributeEnableDns64 extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Value" })
  value?: boolean;
}

/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
export class GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Value" })
  value?: boolean;
}

/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
export class GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Value" })
  value?: boolean;
}

/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
export class GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Value" })
  value?: boolean;
}

/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
export class GETModifySubnetAttributeMapPublicIPOnLaunch extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Value" })
  value?: boolean;
}

/**
 * The type of hostname to assign to instances in the subnet at launch. For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name) or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).
 */
export enum GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum {
  IpName = "ip-name",
  ResourceName = "resource-name",
}

export enum GETModifySubnetAttributeVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETModifySubnetAttributeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifySubnetAttributeActionEnum;

  /**
   * <p>Specify <code>true</code> to indicate that network interfaces created in the specified subnet should be assigned an IPv6 address. This includes a network interface that's created when launching an instance into the subnet (the instance therefore receives an IPv6 address). </p> <p>If you enable the IPv6 addressing feature for your subnet, your network interface or instance only receives an IPv6 address if it's created using version <code>2016-11-15</code> or later of the Amazon EC2 API.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AssignIpv6AddressOnCreation",
  })
  assignIpv6AddressOnCreation?: GETModifySubnetAttributeAssignIpv6AddressOnCreation;

  /**
   * <p>The customer-owned IPv4 address pool associated with the subnet.</p> <p>You must set this value when you specify <code>true</code> for <code>MapCustomerOwnedIpOnLaunch</code>.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=CustomerOwnedIpv4Pool",
  })
  customerOwnedIpv4Pool?: string;

  /**
   *  Specify <code>true</code> to indicate that local network interfaces at the current position should be disabled.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DisableLniAtDeviceIndex",
  })
  disableLniAtDeviceIndex?: GETModifySubnetAttributeDisableLniAtDeviceIndex;

  /**
   * Indicates whether DNS queries made to the Amazon-provided DNS Resolver in this subnet should return synthetic IPv6 addresses for IPv4-only destinations.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EnableDns64",
  })
  enableDns64?: GETModifySubnetAttributeEnableDns64;

  /**
   *  Indicates the device position for local network interfaces in this subnet. For example, <code>1</code> indicates local network interfaces in this subnet are the secondary network interface (eth1). A local network interface cannot be the primary network interface (eth0).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EnableLniAtDeviceIndex",
  })
  enableLniAtDeviceIndex?: number;

  /**
   * Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EnableResourceNameDnsAAAARecordOnLaunch",
  })
  enableResourceNameDnsAAAARecordOnLaunch?: GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch;

  /**
   * Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EnableResourceNameDnsARecordOnLaunch",
  })
  enableResourceNameDnsARecordOnLaunch?: GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch;

  /**
   * <p>Specify <code>true</code> to indicate that network interfaces attached to instances created in the specified subnet should be assigned a customer-owned IPv4 address.</p> <p>When this value is <code>true</code>, you must specify the customer-owned IP pool using <code>CustomerOwnedIpv4Pool</code>.</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MapCustomerOwnedIpOnLaunch",
  })
  mapCustomerOwnedIpOnLaunch?: GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch;

  /**
   * Specify <code>true</code> to indicate that network interfaces attached to instances created in the specified subnet should be assigned a public IPv4 address.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MapPublicIpOnLaunch",
  })
  mapPublicIpOnLaunch?: GETModifySubnetAttributeMapPublicIPOnLaunch;

  /**
   * The type of hostname to assign to instances in the subnet at launch. For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name) or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PrivateDnsHostnameTypeOnLaunch",
  })
  privateDnsHostnameTypeOnLaunch?: GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum;

  /**
   * The ID of the subnet.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SubnetId",
  })
  subnetId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifySubnetAttributeVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifySubnetAttributeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
