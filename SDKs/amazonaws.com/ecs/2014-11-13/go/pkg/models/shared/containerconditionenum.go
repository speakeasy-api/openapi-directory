// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContainerConditionEnum string

const (
	ContainerConditionEnumStart    ContainerConditionEnum = "START"
	ContainerConditionEnumComplete ContainerConditionEnum = "COMPLETE"
	ContainerConditionEnumSuccess  ContainerConditionEnum = "SUCCESS"
	ContainerConditionEnumHealthy  ContainerConditionEnum = "HEALTHY"
)

func (e ContainerConditionEnum) ToPointer() *ContainerConditionEnum {
	return &e
}

func (e *ContainerConditionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "START":
		fallthrough
	case "COMPLETE":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "HEALTHY":
		*e = ContainerConditionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContainerConditionEnum: %v", v)
	}
}
