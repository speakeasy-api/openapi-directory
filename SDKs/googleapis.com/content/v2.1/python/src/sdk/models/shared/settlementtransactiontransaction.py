"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SettlementTransactionTransaction:
    
    post_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postDate'), 'exclude': lambda f: f is None }})
    r"""The time on which the event occurred in ISO 8601 format."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the transaction that occurred. Acceptable values are: - \\"`order`\\" - \\"`reversal`\\" - \\"`orderRefund`\\" - \\"`reversalRefund`\\" - \\"`issueRelatedRefundAndReplacement`\\" - \\"`returnLabelShippingFeeTransaction`\\" - \\"`reversalIssueRelatedRefundAndReplacement`\\" - \\"`reversalReturnLabelShippingFeeTransaction`\\" - \\"`lumpSumCorrectionTransaction`\\" """  
    