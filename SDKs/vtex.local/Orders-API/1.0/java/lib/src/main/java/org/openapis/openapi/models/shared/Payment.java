/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Payment - Payment details.
 */
public class Payment {
    /**
     * Payment's account ID.
     */
    @JsonProperty("accountId")
    public String accountId;

    public Payment withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Number of the bank issued invoice bar code.
     */
    @JsonProperty("bankIssuedInvoiceBarCodeNumber")
    public String bankIssuedInvoiceBarCodeNumber;

    public Payment withBankIssuedInvoiceBarCodeNumber(String bankIssuedInvoiceBarCodeNumber) {
        this.bankIssuedInvoiceBarCodeNumber = bankIssuedInvoiceBarCodeNumber;
        return this;
    }
    
    /**
     * Type of the bank issued invoice bar code.
     */
    @JsonProperty("bankIssuedInvoiceBarCodeType")
    public String bankIssuedInvoiceBarCodeType;

    public Payment withBankIssuedInvoiceBarCodeType(String bankIssuedInvoiceBarCodeType) {
        this.bankIssuedInvoiceBarCodeType = bankIssuedInvoiceBarCodeType;
        return this;
    }
    
    /**
     * Numeric sequence that identifies the bank issued invoice.
     */
    @JsonProperty("bankIssuedInvoiceIdentificationNumber")
    public String bankIssuedInvoiceIdentificationNumber;

    public Payment withBankIssuedInvoiceIdentificationNumber(String bankIssuedInvoiceIdentificationNumber) {
        this.bankIssuedInvoiceIdentificationNumber = bankIssuedInvoiceIdentificationNumber;
        return this;
    }
    
    /**
     * Bank issued invoice ID formatted.
     */
    @JsonProperty("bankIssuedInvoiceIdentificationNumberFormatted")
    public String bankIssuedInvoiceIdentificationNumberFormatted;

    public Payment withBankIssuedInvoiceIdentificationNumberFormatted(String bankIssuedInvoiceIdentificationNumberFormatted) {
        this.bankIssuedInvoiceIdentificationNumberFormatted = bankIssuedInvoiceIdentificationNumberFormatted;
        return this;
    }
    
    /**
     * Billing address information.
     */
    @JsonProperty("billingAddress")
    public java.util.Map<String, Object> billingAddress;

    public Payment withBillingAddress(java.util.Map<String, Object> billingAddress) {
        this.billingAddress = billingAddress;
        return this;
    }
    
    /**
     * Name of the person who owns the card.
     */
    @JsonProperty("cardHolder")
    public String cardHolder;

    public Payment withCardHolder(String cardHolder) {
        this.cardHolder = cardHolder;
        return this;
    }
    
    /**
     * Numeric sequence of the card used in the transaction.
     */
    @JsonProperty("cardNumber")
    public String cardNumber;

    public Payment withCardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
        return this;
    }
    
    /**
     * Information about the connector responses.
     */
    @JsonProperty("connectorResponses")
    public PaymentConnectorResponses connectorResponses;

    public Payment withConnectorResponses(PaymentConnectorResponses connectorResponses) {
        this.connectorResponses = connectorResponses;
        return this;
    }
    
    /**
     * Card Verification Value (CVV2) is a security code used by payment processors to reduce fraudulent credit and debit card transactions.
     */
    @JsonProperty("cvv2")
    public String cvv2;

    public Payment withCvv2(String cvv2) {
        this.cvv2 = cvv2;
        return this;
    }
    
    /**
     * Payment due date, with the format `yyyy-mm-dd`.
     */
    @JsonProperty("dueDate")
    public String dueDate;

    public Payment withDueDate(String dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * Expire month of the card used in the transaction (2-digits).
     */
    @JsonProperty("expireMonth")
    public String expireMonth;

    public Payment withExpireMonth(String expireMonth) {
        this.expireMonth = expireMonth;
        return this;
    }
    
    /**
     * Expire year of the card used in the transaction (4-digits).
     */
    @JsonProperty("expireYear")
    public String expireYear;

    public Payment withExpireYear(String expireYear) {
        this.expireYear = expireYear;
        return this;
    }
    
    /**
     * Fist digits of the card used in the transaction.
     */
    @JsonProperty("firstDigits")
    public String firstDigits;

    public Payment withFirstDigits(String firstDigits) {
        this.firstDigits = firstDigits;
        return this;
    }
    
    /**
     * When this field is set as `true`, the Gift Card is a discount over the price, and when set as `false`, it is not a discount.
     */
    @JsonProperty("giftCardAsDiscount")
    public Boolean giftCardAsDiscount;

    public Payment withGiftCardAsDiscount(Boolean giftCardAsDiscount) {
        this.giftCardAsDiscount = giftCardAsDiscount;
        return this;
    }
    
    /**
     * Gift Card's caption.
     */
    @JsonProperty("giftCardCaption")
    public String giftCardCaption;

    public Payment withGiftCardCaption(String giftCardCaption) {
        this.giftCardCaption = giftCardCaption;
        return this;
    }
    
    /**
     * Gift Card's ID.
     */
    @JsonProperty("giftCardId")
    public String giftCardId;

    public Payment withGiftCardId(String giftCardId) {
        this.giftCardId = giftCardId;
        return this;
    }
    
    /**
     * Gift Card's name.
     */
    @JsonProperty("giftCardName")
    public String giftCardName;

    public Payment withGiftCardName(String giftCardName) {
        this.giftCardName = giftCardName;
        return this;
    }
    
    /**
     * Gift Card provider's ID.
     */
    @JsonProperty("giftCardProvider")
    public String giftCardProvider;

    public Payment withGiftCardProvider(String giftCardProvider) {
        this.giftCardProvider = giftCardProvider;
        return this;
    }
    
    /**
     * Name of the collection the Gift Card belongs to.
     */
    @JsonProperty("group")
    public String group;

    public Payment withGroup(String group) {
        this.group = group;
        return this;
    }
    
    /**
     * VTEX payment ID that can be used as unique identifier.
     */
    @JsonProperty("id")
    public String id;

    public Payment withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Number of payment installments.
     */
    @JsonProperty("installments")
    public Integer installments;

    public Payment withInstallments(Integer installments) {
        this.installments = installments;
        return this;
    }
    
    /**
     * Payment's account ID.
     */
    @JsonProperty("koinUrl")
    public String koinUrl;

    public Payment withKoinUrl(String koinUrl) {
        this.koinUrl = koinUrl;
        return this;
    }
    
    /**
     * Last digits of the card used in the transaction.
     */
    @JsonProperty("lastDigits")
    public String lastDigits;

    public Payment withLastDigits(String lastDigits) {
        this.lastDigits = lastDigits;
        return this;
    }
    
    /**
     * This field retrieves the main account if the payment was made in a subaccount.
     */
    @JsonProperty("parentAccountId")
    public String parentAccountId;

    public Payment withParentAccountId(String parentAccountId) {
        this.parentAccountId = parentAccountId;
        return this;
    }
    
    /**
     * Payment system's ID.
     */
    @JsonProperty("paymentSystem")
    public String paymentSystem;

    public Payment withPaymentSystem(String paymentSystem) {
        this.paymentSystem = paymentSystem;
        return this;
    }
    
    /**
     * Payment system's name.
     */
    @JsonProperty("paymentSystemName")
    public String paymentSystemName;

    public Payment withPaymentSystemName(String paymentSystemName) {
        this.paymentSystemName = paymentSystemName;
        return this;
    }
    
    /**
     * Code for the customer to use the Gift Card.
     */
    @JsonProperty("redemptionCode")
    public String redemptionCode;

    public Payment withRedemptionCode(String redemptionCode) {
        this.redemptionCode = redemptionCode;
        return this;
    }
    
    /**
     * Payment's reference value in cents.
     */
    @JsonProperty("referenceValue")
    public Integer referenceValue;

    public Payment withReferenceValue(Integer referenceValue) {
        this.referenceValue = referenceValue;
        return this;
    }
    
    /**
     * Provider's unique identifier for the transaction.
     */
    @JsonProperty("tid")
    public String tid;

    public Payment withTid(String tid) {
        this.tid = tid;
        return this;
    }
    
    /**
     * Payment's URL.
     */
    @JsonProperty("url")
    public String url;

    public Payment withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Payment's final amount in cents.
     */
    @JsonProperty("value")
    public Integer value;

    public Payment withValue(Integer value) {
        this.value = value;
        return this;
    }
    
    public Payment(@JsonProperty("accountId") String accountId, @JsonProperty("bankIssuedInvoiceBarCodeNumber") String bankIssuedInvoiceBarCodeNumber, @JsonProperty("bankIssuedInvoiceBarCodeType") String bankIssuedInvoiceBarCodeType, @JsonProperty("bankIssuedInvoiceIdentificationNumber") String bankIssuedInvoiceIdentificationNumber, @JsonProperty("bankIssuedInvoiceIdentificationNumberFormatted") String bankIssuedInvoiceIdentificationNumberFormatted, @JsonProperty("billingAddress") java.util.Map<String, Object> billingAddress, @JsonProperty("cardHolder") String cardHolder, @JsonProperty("cardNumber") String cardNumber, @JsonProperty("connectorResponses") PaymentConnectorResponses connectorResponses, @JsonProperty("cvv2") String cvv2, @JsonProperty("dueDate") String dueDate, @JsonProperty("expireMonth") String expireMonth, @JsonProperty("expireYear") String expireYear, @JsonProperty("firstDigits") String firstDigits, @JsonProperty("giftCardAsDiscount") Boolean giftCardAsDiscount, @JsonProperty("giftCardCaption") String giftCardCaption, @JsonProperty("giftCardId") String giftCardId, @JsonProperty("giftCardName") String giftCardName, @JsonProperty("giftCardProvider") String giftCardProvider, @JsonProperty("group") String group, @JsonProperty("id") String id, @JsonProperty("installments") Integer installments, @JsonProperty("koinUrl") String koinUrl, @JsonProperty("lastDigits") String lastDigits, @JsonProperty("parentAccountId") String parentAccountId, @JsonProperty("paymentSystem") String paymentSystem, @JsonProperty("paymentSystemName") String paymentSystemName, @JsonProperty("redemptionCode") String redemptionCode, @JsonProperty("referenceValue") Integer referenceValue, @JsonProperty("tid") String tid, @JsonProperty("url") String url, @JsonProperty("value") Integer value) {
        this.accountId = accountId;
        this.bankIssuedInvoiceBarCodeNumber = bankIssuedInvoiceBarCodeNumber;
        this.bankIssuedInvoiceBarCodeType = bankIssuedInvoiceBarCodeType;
        this.bankIssuedInvoiceIdentificationNumber = bankIssuedInvoiceIdentificationNumber;
        this.bankIssuedInvoiceIdentificationNumberFormatted = bankIssuedInvoiceIdentificationNumberFormatted;
        this.billingAddress = billingAddress;
        this.cardHolder = cardHolder;
        this.cardNumber = cardNumber;
        this.connectorResponses = connectorResponses;
        this.cvv2 = cvv2;
        this.dueDate = dueDate;
        this.expireMonth = expireMonth;
        this.expireYear = expireYear;
        this.firstDigits = firstDigits;
        this.giftCardAsDiscount = giftCardAsDiscount;
        this.giftCardCaption = giftCardCaption;
        this.giftCardId = giftCardId;
        this.giftCardName = giftCardName;
        this.giftCardProvider = giftCardProvider;
        this.group = group;
        this.id = id;
        this.installments = installments;
        this.koinUrl = koinUrl;
        this.lastDigits = lastDigits;
        this.parentAccountId = parentAccountId;
        this.paymentSystem = paymentSystem;
        this.paymentSystemName = paymentSystemName;
        this.redemptionCode = redemptionCode;
        this.referenceValue = referenceValue;
        this.tid = tid;
        this.url = url;
        this.value = value;
  }
}
