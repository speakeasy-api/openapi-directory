/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SharedLinkTarget } from "./sharedlinktarget";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The scope of the shared link.
 */
export enum SharedLinkScopeEnum {
  Public = "public",
  Company = "company",
}

export class SharedLinkInput extends SpeakeasyBase {
  /**
   * The URL that can be used to download the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "download_url" })
  downloadUrl?: string;

  /**
   * Optional password for the shared link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * The scope of the shared link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: SharedLinkScopeEnum;

  /**
   * The ID of the file or folder to link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_id" })
  targetId: string;
}

export class SharedLinkOutput extends SpeakeasyBase {
  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The URL that can be used to download the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "download_url" })
  downloadUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresAt?: Date;

  /**
   * Indicated if the shared link is password protected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password_protected" })
  passwordProtected?: boolean;

  /**
   * The scope of the shared link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: SharedLinkScopeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "target" })
  @Type(() => SharedLinkTarget)
  target?: SharedLinkTarget;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The URL that can be used to view the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
