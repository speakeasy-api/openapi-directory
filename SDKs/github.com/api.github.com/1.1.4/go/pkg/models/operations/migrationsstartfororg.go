// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type MigrationsStartForOrgPathParams struct {
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
}

type MigrationsStartForOrgRequestBodyExcludeEnum string

const (
	MigrationsStartForOrgRequestBodyExcludeEnumRepositories MigrationsStartForOrgRequestBodyExcludeEnum = "repositories"
)

func (e *MigrationsStartForOrgRequestBodyExcludeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "repositories":
		*e = MigrationsStartForOrgRequestBodyExcludeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MigrationsStartForOrgRequestBodyExcludeEnum: %s", s)
	}
}

type MigrationsStartForOrgRequestBody struct {
	// Exclude related items from being returned in the response in order to improve performance of the request. The array can include any of: `"repositories"`.
	Exclude []MigrationsStartForOrgRequestBodyExcludeEnum `json:"exclude,omitempty"`
	// Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).
	ExcludeAttachments *bool `json:"exclude_attachments,omitempty"`
	// Indicates whether the repository git data should be excluded from the migration.
	ExcludeGitData *bool `json:"exclude_git_data,omitempty"`
	// Indicates whether metadata should be excluded and only git source should be included for the migration.
	ExcludeMetadata *bool `json:"exclude_metadata,omitempty"`
	// Indicates whether projects owned by the organization or users should be excluded. from the migration.
	ExcludeOwnerProjects *bool `json:"exclude_owner_projects,omitempty"`
	// Indicates whether releases should be excluded from the migration (to reduce migration archive file size).
	ExcludeReleases *bool `json:"exclude_releases,omitempty"`
	// Indicates whether repositories should be locked (to prevent manipulation) while migrating data.
	LockRepositories *bool `json:"lock_repositories,omitempty"`
	// Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
	OrgMetadataOnly *bool `json:"org_metadata_only,omitempty"`
	// A list of arrays indicating which repositories should be migrated.
	Repositories []string `json:"repositories"`
}

type MigrationsStartForOrgRequest struct {
	PathParams MigrationsStartForOrgPathParams
	Request    MigrationsStartForOrgRequestBody `request:"mediaType=application/json"`
}

type MigrationsStartForOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	Migration *shared.Migration
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
