// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ContentRatingAcbRatingEnum - The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming.
type ContentRatingAcbRatingEnum string

const (
	ContentRatingAcbRatingEnumAcbUnspecified ContentRatingAcbRatingEnum = "acbUnspecified"
	ContentRatingAcbRatingEnumAcbE           ContentRatingAcbRatingEnum = "acbE"
	ContentRatingAcbRatingEnumAcbP           ContentRatingAcbRatingEnum = "acbP"
	ContentRatingAcbRatingEnumAcbC           ContentRatingAcbRatingEnum = "acbC"
	ContentRatingAcbRatingEnumAcbG           ContentRatingAcbRatingEnum = "acbG"
	ContentRatingAcbRatingEnumAcbPg          ContentRatingAcbRatingEnum = "acbPg"
	ContentRatingAcbRatingEnumAcbM           ContentRatingAcbRatingEnum = "acbM"
	ContentRatingAcbRatingEnumAcbMa15plus    ContentRatingAcbRatingEnum = "acbMa15plus"
	ContentRatingAcbRatingEnumAcbR18plus     ContentRatingAcbRatingEnum = "acbR18plus"
	ContentRatingAcbRatingEnumAcbUnrated     ContentRatingAcbRatingEnum = "acbUnrated"
)

func (e ContentRatingAcbRatingEnum) ToPointer() *ContentRatingAcbRatingEnum {
	return &e
}

func (e *ContentRatingAcbRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "acbUnspecified":
		fallthrough
	case "acbE":
		fallthrough
	case "acbP":
		fallthrough
	case "acbC":
		fallthrough
	case "acbG":
		fallthrough
	case "acbPg":
		fallthrough
	case "acbM":
		fallthrough
	case "acbMa15plus":
		fallthrough
	case "acbR18plus":
		fallthrough
	case "acbUnrated":
		*e = ContentRatingAcbRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingAcbRatingEnum: %v", v)
	}
}

// ContentRatingAgcomRatingEnum - The video's rating from Italy's Autorità per le Garanzie nelle Comunicazioni (AGCOM).
type ContentRatingAgcomRatingEnum string

const (
	ContentRatingAgcomRatingEnumAgcomUnspecified ContentRatingAgcomRatingEnum = "agcomUnspecified"
	ContentRatingAgcomRatingEnumAgcomT           ContentRatingAgcomRatingEnum = "agcomT"
	ContentRatingAgcomRatingEnumAgcomVm14        ContentRatingAgcomRatingEnum = "agcomVm14"
	ContentRatingAgcomRatingEnumAgcomVm18        ContentRatingAgcomRatingEnum = "agcomVm18"
	ContentRatingAgcomRatingEnumAgcomUnrated     ContentRatingAgcomRatingEnum = "agcomUnrated"
)

func (e ContentRatingAgcomRatingEnum) ToPointer() *ContentRatingAgcomRatingEnum {
	return &e
}

func (e *ContentRatingAgcomRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "agcomUnspecified":
		fallthrough
	case "agcomT":
		fallthrough
	case "agcomVm14":
		fallthrough
	case "agcomVm18":
		fallthrough
	case "agcomUnrated":
		*e = ContentRatingAgcomRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingAgcomRatingEnum: %v", v)
	}
}

// ContentRatingAnatelRatingEnum - The video's Anatel (Asociación Nacional de Televisión) rating for Chilean television.
type ContentRatingAnatelRatingEnum string

const (
	ContentRatingAnatelRatingEnumAnatelUnspecified ContentRatingAnatelRatingEnum = "anatelUnspecified"
	ContentRatingAnatelRatingEnumAnatelF           ContentRatingAnatelRatingEnum = "anatelF"
	ContentRatingAnatelRatingEnumAnatelI           ContentRatingAnatelRatingEnum = "anatelI"
	ContentRatingAnatelRatingEnumAnatelI7          ContentRatingAnatelRatingEnum = "anatelI7"
	ContentRatingAnatelRatingEnumAnatelI10         ContentRatingAnatelRatingEnum = "anatelI10"
	ContentRatingAnatelRatingEnumAnatelI12         ContentRatingAnatelRatingEnum = "anatelI12"
	ContentRatingAnatelRatingEnumAnatelR           ContentRatingAnatelRatingEnum = "anatelR"
	ContentRatingAnatelRatingEnumAnatelA           ContentRatingAnatelRatingEnum = "anatelA"
	ContentRatingAnatelRatingEnumAnatelUnrated     ContentRatingAnatelRatingEnum = "anatelUnrated"
)

func (e ContentRatingAnatelRatingEnum) ToPointer() *ContentRatingAnatelRatingEnum {
	return &e
}

func (e *ContentRatingAnatelRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "anatelUnspecified":
		fallthrough
	case "anatelF":
		fallthrough
	case "anatelI":
		fallthrough
	case "anatelI7":
		fallthrough
	case "anatelI10":
		fallthrough
	case "anatelI12":
		fallthrough
	case "anatelR":
		fallthrough
	case "anatelA":
		fallthrough
	case "anatelUnrated":
		*e = ContentRatingAnatelRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingAnatelRatingEnum: %v", v)
	}
}

// ContentRatingBbfcRatingEnum - The video's British Board of Film Classification (BBFC) rating.
type ContentRatingBbfcRatingEnum string

const (
	ContentRatingBbfcRatingEnumBbfcUnspecified ContentRatingBbfcRatingEnum = "bbfcUnspecified"
	ContentRatingBbfcRatingEnumBbfcU           ContentRatingBbfcRatingEnum = "bbfcU"
	ContentRatingBbfcRatingEnumBbfcPg          ContentRatingBbfcRatingEnum = "bbfcPg"
	ContentRatingBbfcRatingEnumBbfc12a         ContentRatingBbfcRatingEnum = "bbfc12a"
	ContentRatingBbfcRatingEnumBbfc12          ContentRatingBbfcRatingEnum = "bbfc12"
	ContentRatingBbfcRatingEnumBbfc15          ContentRatingBbfcRatingEnum = "bbfc15"
	ContentRatingBbfcRatingEnumBbfc18          ContentRatingBbfcRatingEnum = "bbfc18"
	ContentRatingBbfcRatingEnumBbfcR18         ContentRatingBbfcRatingEnum = "bbfcR18"
	ContentRatingBbfcRatingEnumBbfcUnrated     ContentRatingBbfcRatingEnum = "bbfcUnrated"
)

func (e ContentRatingBbfcRatingEnum) ToPointer() *ContentRatingBbfcRatingEnum {
	return &e
}

func (e *ContentRatingBbfcRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bbfcUnspecified":
		fallthrough
	case "bbfcU":
		fallthrough
	case "bbfcPg":
		fallthrough
	case "bbfc12a":
		fallthrough
	case "bbfc12":
		fallthrough
	case "bbfc15":
		fallthrough
	case "bbfc18":
		fallthrough
	case "bbfcR18":
		fallthrough
	case "bbfcUnrated":
		*e = ContentRatingBbfcRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingBbfcRatingEnum: %v", v)
	}
}

// ContentRatingBfvcRatingEnum - The video's rating from Thailand's Board of Film and Video Censors.
type ContentRatingBfvcRatingEnum string

const (
	ContentRatingBfvcRatingEnumBfvcUnspecified ContentRatingBfvcRatingEnum = "bfvcUnspecified"
	ContentRatingBfvcRatingEnumBfvcG           ContentRatingBfvcRatingEnum = "bfvcG"
	ContentRatingBfvcRatingEnumBfvcE           ContentRatingBfvcRatingEnum = "bfvcE"
	ContentRatingBfvcRatingEnumBfvc13          ContentRatingBfvcRatingEnum = "bfvc13"
	ContentRatingBfvcRatingEnumBfvc15          ContentRatingBfvcRatingEnum = "bfvc15"
	ContentRatingBfvcRatingEnumBfvc18          ContentRatingBfvcRatingEnum = "bfvc18"
	ContentRatingBfvcRatingEnumBfvc20          ContentRatingBfvcRatingEnum = "bfvc20"
	ContentRatingBfvcRatingEnumBfvcB           ContentRatingBfvcRatingEnum = "bfvcB"
	ContentRatingBfvcRatingEnumBfvcUnrated     ContentRatingBfvcRatingEnum = "bfvcUnrated"
)

func (e ContentRatingBfvcRatingEnum) ToPointer() *ContentRatingBfvcRatingEnum {
	return &e
}

func (e *ContentRatingBfvcRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bfvcUnspecified":
		fallthrough
	case "bfvcG":
		fallthrough
	case "bfvcE":
		fallthrough
	case "bfvc13":
		fallthrough
	case "bfvc15":
		fallthrough
	case "bfvc18":
		fallthrough
	case "bfvc20":
		fallthrough
	case "bfvcB":
		fallthrough
	case "bfvcUnrated":
		*e = ContentRatingBfvcRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingBfvcRatingEnum: %v", v)
	}
}

// ContentRatingBmukkRatingEnum - The video's rating from the Austrian Board of Media Classification (Bundesministerium für Unterricht, Kunst und Kultur).
type ContentRatingBmukkRatingEnum string

const (
	ContentRatingBmukkRatingEnumBmukkUnspecified ContentRatingBmukkRatingEnum = "bmukkUnspecified"
	ContentRatingBmukkRatingEnumBmukkAa          ContentRatingBmukkRatingEnum = "bmukkAa"
	ContentRatingBmukkRatingEnumBmukk6           ContentRatingBmukkRatingEnum = "bmukk6"
	ContentRatingBmukkRatingEnumBmukk8           ContentRatingBmukkRatingEnum = "bmukk8"
	ContentRatingBmukkRatingEnumBmukk10          ContentRatingBmukkRatingEnum = "bmukk10"
	ContentRatingBmukkRatingEnumBmukk12          ContentRatingBmukkRatingEnum = "bmukk12"
	ContentRatingBmukkRatingEnumBmukk14          ContentRatingBmukkRatingEnum = "bmukk14"
	ContentRatingBmukkRatingEnumBmukk16          ContentRatingBmukkRatingEnum = "bmukk16"
	ContentRatingBmukkRatingEnumBmukkUnrated     ContentRatingBmukkRatingEnum = "bmukkUnrated"
)

func (e ContentRatingBmukkRatingEnum) ToPointer() *ContentRatingBmukkRatingEnum {
	return &e
}

func (e *ContentRatingBmukkRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bmukkUnspecified":
		fallthrough
	case "bmukkAa":
		fallthrough
	case "bmukk6":
		fallthrough
	case "bmukk8":
		fallthrough
	case "bmukk10":
		fallthrough
	case "bmukk12":
		fallthrough
	case "bmukk14":
		fallthrough
	case "bmukk16":
		fallthrough
	case "bmukkUnrated":
		*e = ContentRatingBmukkRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingBmukkRatingEnum: %v", v)
	}
}

// ContentRatingCatvRatingEnum - Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
type ContentRatingCatvRatingEnum string

const (
	ContentRatingCatvRatingEnumCatvUnspecified ContentRatingCatvRatingEnum = "catvUnspecified"
	ContentRatingCatvRatingEnumCatvC           ContentRatingCatvRatingEnum = "catvC"
	ContentRatingCatvRatingEnumCatvC8          ContentRatingCatvRatingEnum = "catvC8"
	ContentRatingCatvRatingEnumCatvG           ContentRatingCatvRatingEnum = "catvG"
	ContentRatingCatvRatingEnumCatvPg          ContentRatingCatvRatingEnum = "catvPg"
	ContentRatingCatvRatingEnumCatv14plus      ContentRatingCatvRatingEnum = "catv14plus"
	ContentRatingCatvRatingEnumCatv18plus      ContentRatingCatvRatingEnum = "catv18plus"
	ContentRatingCatvRatingEnumCatvUnrated     ContentRatingCatvRatingEnum = "catvUnrated"
	ContentRatingCatvRatingEnumCatvE           ContentRatingCatvRatingEnum = "catvE"
)

func (e ContentRatingCatvRatingEnum) ToPointer() *ContentRatingCatvRatingEnum {
	return &e
}

func (e *ContentRatingCatvRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "catvUnspecified":
		fallthrough
	case "catvC":
		fallthrough
	case "catvC8":
		fallthrough
	case "catvG":
		fallthrough
	case "catvPg":
		fallthrough
	case "catv14plus":
		fallthrough
	case "catv18plus":
		fallthrough
	case "catvUnrated":
		fallthrough
	case "catvE":
		*e = ContentRatingCatvRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCatvRatingEnum: %v", v)
	}
}

// ContentRatingCatvfrRatingEnum - The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
type ContentRatingCatvfrRatingEnum string

const (
	ContentRatingCatvfrRatingEnumCatvfrUnspecified ContentRatingCatvfrRatingEnum = "catvfrUnspecified"
	ContentRatingCatvfrRatingEnumCatvfrG           ContentRatingCatvfrRatingEnum = "catvfrG"
	ContentRatingCatvfrRatingEnumCatvfr8plus       ContentRatingCatvfrRatingEnum = "catvfr8plus"
	ContentRatingCatvfrRatingEnumCatvfr13plus      ContentRatingCatvfrRatingEnum = "catvfr13plus"
	ContentRatingCatvfrRatingEnumCatvfr16plus      ContentRatingCatvfrRatingEnum = "catvfr16plus"
	ContentRatingCatvfrRatingEnumCatvfr18plus      ContentRatingCatvfrRatingEnum = "catvfr18plus"
	ContentRatingCatvfrRatingEnumCatvfrUnrated     ContentRatingCatvfrRatingEnum = "catvfrUnrated"
	ContentRatingCatvfrRatingEnumCatvfrE           ContentRatingCatvfrRatingEnum = "catvfrE"
)

func (e ContentRatingCatvfrRatingEnum) ToPointer() *ContentRatingCatvfrRatingEnum {
	return &e
}

func (e *ContentRatingCatvfrRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "catvfrUnspecified":
		fallthrough
	case "catvfrG":
		fallthrough
	case "catvfr8plus":
		fallthrough
	case "catvfr13plus":
		fallthrough
	case "catvfr16plus":
		fallthrough
	case "catvfr18plus":
		fallthrough
	case "catvfrUnrated":
		fallthrough
	case "catvfrE":
		*e = ContentRatingCatvfrRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCatvfrRatingEnum: %v", v)
	}
}

// ContentRatingCbfcRatingEnum - The video's Central Board of Film Certification (CBFC - India) rating.
type ContentRatingCbfcRatingEnum string

const (
	ContentRatingCbfcRatingEnumCbfcUnspecified ContentRatingCbfcRatingEnum = "cbfcUnspecified"
	ContentRatingCbfcRatingEnumCbfcU           ContentRatingCbfcRatingEnum = "cbfcU"
	ContentRatingCbfcRatingEnumCbfcUa          ContentRatingCbfcRatingEnum = "cbfcUA"
	ContentRatingCbfcRatingEnumCbfcUa7plus     ContentRatingCbfcRatingEnum = "cbfcUA7plus"
	ContentRatingCbfcRatingEnumCbfcUa13plus    ContentRatingCbfcRatingEnum = "cbfcUA13plus"
	ContentRatingCbfcRatingEnumCbfcUa16plus    ContentRatingCbfcRatingEnum = "cbfcUA16plus"
	ContentRatingCbfcRatingEnumCbfcA           ContentRatingCbfcRatingEnum = "cbfcA"
	ContentRatingCbfcRatingEnumCbfcS           ContentRatingCbfcRatingEnum = "cbfcS"
	ContentRatingCbfcRatingEnumCbfcUnrated     ContentRatingCbfcRatingEnum = "cbfcUnrated"
)

func (e ContentRatingCbfcRatingEnum) ToPointer() *ContentRatingCbfcRatingEnum {
	return &e
}

func (e *ContentRatingCbfcRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cbfcUnspecified":
		fallthrough
	case "cbfcU":
		fallthrough
	case "cbfcUA":
		fallthrough
	case "cbfcUA7plus":
		fallthrough
	case "cbfcUA13plus":
		fallthrough
	case "cbfcUA16plus":
		fallthrough
	case "cbfcA":
		fallthrough
	case "cbfcS":
		fallthrough
	case "cbfcUnrated":
		*e = ContentRatingCbfcRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCbfcRatingEnum: %v", v)
	}
}

// ContentRatingCccRatingEnum - The video's Consejo de Calificación Cinematográfica (Chile) rating.
type ContentRatingCccRatingEnum string

const (
	ContentRatingCccRatingEnumCccUnspecified ContentRatingCccRatingEnum = "cccUnspecified"
	ContentRatingCccRatingEnumCccTe          ContentRatingCccRatingEnum = "cccTe"
	ContentRatingCccRatingEnumCcc6           ContentRatingCccRatingEnum = "ccc6"
	ContentRatingCccRatingEnumCcc14          ContentRatingCccRatingEnum = "ccc14"
	ContentRatingCccRatingEnumCcc18          ContentRatingCccRatingEnum = "ccc18"
	ContentRatingCccRatingEnumCcc18v         ContentRatingCccRatingEnum = "ccc18v"
	ContentRatingCccRatingEnumCcc18s         ContentRatingCccRatingEnum = "ccc18s"
	ContentRatingCccRatingEnumCccUnrated     ContentRatingCccRatingEnum = "cccUnrated"
)

func (e ContentRatingCccRatingEnum) ToPointer() *ContentRatingCccRatingEnum {
	return &e
}

func (e *ContentRatingCccRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cccUnspecified":
		fallthrough
	case "cccTe":
		fallthrough
	case "ccc6":
		fallthrough
	case "ccc14":
		fallthrough
	case "ccc18":
		fallthrough
	case "ccc18v":
		fallthrough
	case "ccc18s":
		fallthrough
	case "cccUnrated":
		*e = ContentRatingCccRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCccRatingEnum: %v", v)
	}
}

// ContentRatingCceRatingEnum - The video's rating from Portugal's Comissão de Classificação de Espect´culos.
type ContentRatingCceRatingEnum string

const (
	ContentRatingCceRatingEnumCceUnspecified ContentRatingCceRatingEnum = "cceUnspecified"
	ContentRatingCceRatingEnumCceM4          ContentRatingCceRatingEnum = "cceM4"
	ContentRatingCceRatingEnumCceM6          ContentRatingCceRatingEnum = "cceM6"
	ContentRatingCceRatingEnumCceM12         ContentRatingCceRatingEnum = "cceM12"
	ContentRatingCceRatingEnumCceM16         ContentRatingCceRatingEnum = "cceM16"
	ContentRatingCceRatingEnumCceM18         ContentRatingCceRatingEnum = "cceM18"
	ContentRatingCceRatingEnumCceUnrated     ContentRatingCceRatingEnum = "cceUnrated"
	ContentRatingCceRatingEnumCceM14         ContentRatingCceRatingEnum = "cceM14"
)

func (e ContentRatingCceRatingEnum) ToPointer() *ContentRatingCceRatingEnum {
	return &e
}

func (e *ContentRatingCceRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cceUnspecified":
		fallthrough
	case "cceM4":
		fallthrough
	case "cceM6":
		fallthrough
	case "cceM12":
		fallthrough
	case "cceM16":
		fallthrough
	case "cceM18":
		fallthrough
	case "cceUnrated":
		fallthrough
	case "cceM14":
		*e = ContentRatingCceRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCceRatingEnum: %v", v)
	}
}

// ContentRatingChfilmRatingEnum - The video's rating in Switzerland.
type ContentRatingChfilmRatingEnum string

const (
	ContentRatingChfilmRatingEnumChfilmUnspecified ContentRatingChfilmRatingEnum = "chfilmUnspecified"
	ContentRatingChfilmRatingEnumChfilm0           ContentRatingChfilmRatingEnum = "chfilm0"
	ContentRatingChfilmRatingEnumChfilm6           ContentRatingChfilmRatingEnum = "chfilm6"
	ContentRatingChfilmRatingEnumChfilm12          ContentRatingChfilmRatingEnum = "chfilm12"
	ContentRatingChfilmRatingEnumChfilm16          ContentRatingChfilmRatingEnum = "chfilm16"
	ContentRatingChfilmRatingEnumChfilm18          ContentRatingChfilmRatingEnum = "chfilm18"
	ContentRatingChfilmRatingEnumChfilmUnrated     ContentRatingChfilmRatingEnum = "chfilmUnrated"
)

func (e ContentRatingChfilmRatingEnum) ToPointer() *ContentRatingChfilmRatingEnum {
	return &e
}

func (e *ContentRatingChfilmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "chfilmUnspecified":
		fallthrough
	case "chfilm0":
		fallthrough
	case "chfilm6":
		fallthrough
	case "chfilm12":
		fallthrough
	case "chfilm16":
		fallthrough
	case "chfilm18":
		fallthrough
	case "chfilmUnrated":
		*e = ContentRatingChfilmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingChfilmRatingEnum: %v", v)
	}
}

// ContentRatingChvrsRatingEnum - The video's Canadian Home Video Rating System (CHVRS) rating.
type ContentRatingChvrsRatingEnum string

const (
	ContentRatingChvrsRatingEnumChvrsUnspecified ContentRatingChvrsRatingEnum = "chvrsUnspecified"
	ContentRatingChvrsRatingEnumChvrsG           ContentRatingChvrsRatingEnum = "chvrsG"
	ContentRatingChvrsRatingEnumChvrsPg          ContentRatingChvrsRatingEnum = "chvrsPg"
	ContentRatingChvrsRatingEnumChvrs14a         ContentRatingChvrsRatingEnum = "chvrs14a"
	ContentRatingChvrsRatingEnumChvrs18a         ContentRatingChvrsRatingEnum = "chvrs18a"
	ContentRatingChvrsRatingEnumChvrsR           ContentRatingChvrsRatingEnum = "chvrsR"
	ContentRatingChvrsRatingEnumChvrsE           ContentRatingChvrsRatingEnum = "chvrsE"
	ContentRatingChvrsRatingEnumChvrsUnrated     ContentRatingChvrsRatingEnum = "chvrsUnrated"
)

func (e ContentRatingChvrsRatingEnum) ToPointer() *ContentRatingChvrsRatingEnum {
	return &e
}

func (e *ContentRatingChvrsRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "chvrsUnspecified":
		fallthrough
	case "chvrsG":
		fallthrough
	case "chvrsPg":
		fallthrough
	case "chvrs14a":
		fallthrough
	case "chvrs18a":
		fallthrough
	case "chvrsR":
		fallthrough
	case "chvrsE":
		fallthrough
	case "chvrsUnrated":
		*e = ContentRatingChvrsRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingChvrsRatingEnum: %v", v)
	}
}

// ContentRatingCicfRatingEnum - The video's rating from the Commission de Contrôle des Films (Belgium).
type ContentRatingCicfRatingEnum string

const (
	ContentRatingCicfRatingEnumCicfUnspecified ContentRatingCicfRatingEnum = "cicfUnspecified"
	ContentRatingCicfRatingEnumCicfE           ContentRatingCicfRatingEnum = "cicfE"
	ContentRatingCicfRatingEnumCicfKtEa        ContentRatingCicfRatingEnum = "cicfKtEa"
	ContentRatingCicfRatingEnumCicfKntEna      ContentRatingCicfRatingEnum = "cicfKntEna"
	ContentRatingCicfRatingEnumCicfUnrated     ContentRatingCicfRatingEnum = "cicfUnrated"
)

func (e ContentRatingCicfRatingEnum) ToPointer() *ContentRatingCicfRatingEnum {
	return &e
}

func (e *ContentRatingCicfRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cicfUnspecified":
		fallthrough
	case "cicfE":
		fallthrough
	case "cicfKtEa":
		fallthrough
	case "cicfKntEna":
		fallthrough
	case "cicfUnrated":
		*e = ContentRatingCicfRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCicfRatingEnum: %v", v)
	}
}

// ContentRatingCnaRatingEnum - The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA).
type ContentRatingCnaRatingEnum string

const (
	ContentRatingCnaRatingEnumCnaUnspecified ContentRatingCnaRatingEnum = "cnaUnspecified"
	ContentRatingCnaRatingEnumCnaAp          ContentRatingCnaRatingEnum = "cnaAp"
	ContentRatingCnaRatingEnumCna12          ContentRatingCnaRatingEnum = "cna12"
	ContentRatingCnaRatingEnumCna15          ContentRatingCnaRatingEnum = "cna15"
	ContentRatingCnaRatingEnumCna18          ContentRatingCnaRatingEnum = "cna18"
	ContentRatingCnaRatingEnumCna18plus      ContentRatingCnaRatingEnum = "cna18plus"
	ContentRatingCnaRatingEnumCnaUnrated     ContentRatingCnaRatingEnum = "cnaUnrated"
)

func (e ContentRatingCnaRatingEnum) ToPointer() *ContentRatingCnaRatingEnum {
	return &e
}

func (e *ContentRatingCnaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cnaUnspecified":
		fallthrough
	case "cnaAp":
		fallthrough
	case "cna12":
		fallthrough
	case "cna15":
		fallthrough
	case "cna18":
		fallthrough
	case "cna18plus":
		fallthrough
	case "cnaUnrated":
		*e = ContentRatingCnaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCnaRatingEnum: %v", v)
	}
}

// ContentRatingCncRatingEnum - Rating system in France - Commission de classification cinematographique
type ContentRatingCncRatingEnum string

const (
	ContentRatingCncRatingEnumCncUnspecified  ContentRatingCncRatingEnum = "cncUnspecified"
	ContentRatingCncRatingEnumCncT            ContentRatingCncRatingEnum = "cncT"
	ContentRatingCncRatingEnumCnc10           ContentRatingCncRatingEnum = "cnc10"
	ContentRatingCncRatingEnumCnc12           ContentRatingCncRatingEnum = "cnc12"
	ContentRatingCncRatingEnumCnc16           ContentRatingCncRatingEnum = "cnc16"
	ContentRatingCncRatingEnumCnc18           ContentRatingCncRatingEnum = "cnc18"
	ContentRatingCncRatingEnumCncE            ContentRatingCncRatingEnum = "cncE"
	ContentRatingCncRatingEnumCncInterdiction ContentRatingCncRatingEnum = "cncInterdiction"
	ContentRatingCncRatingEnumCncUnrated      ContentRatingCncRatingEnum = "cncUnrated"
)

func (e ContentRatingCncRatingEnum) ToPointer() *ContentRatingCncRatingEnum {
	return &e
}

func (e *ContentRatingCncRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cncUnspecified":
		fallthrough
	case "cncT":
		fallthrough
	case "cnc10":
		fallthrough
	case "cnc12":
		fallthrough
	case "cnc16":
		fallthrough
	case "cnc18":
		fallthrough
	case "cncE":
		fallthrough
	case "cncInterdiction":
		fallthrough
	case "cncUnrated":
		*e = ContentRatingCncRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCncRatingEnum: %v", v)
	}
}

// ContentRatingCsaRatingEnum - The video's rating from France's Conseil supérieur de l’audiovisuel, which rates broadcast content.
type ContentRatingCsaRatingEnum string

const (
	ContentRatingCsaRatingEnumCsaUnspecified  ContentRatingCsaRatingEnum = "csaUnspecified"
	ContentRatingCsaRatingEnumCsaT            ContentRatingCsaRatingEnum = "csaT"
	ContentRatingCsaRatingEnumCsa10           ContentRatingCsaRatingEnum = "csa10"
	ContentRatingCsaRatingEnumCsa12           ContentRatingCsaRatingEnum = "csa12"
	ContentRatingCsaRatingEnumCsa16           ContentRatingCsaRatingEnum = "csa16"
	ContentRatingCsaRatingEnumCsa18           ContentRatingCsaRatingEnum = "csa18"
	ContentRatingCsaRatingEnumCsaInterdiction ContentRatingCsaRatingEnum = "csaInterdiction"
	ContentRatingCsaRatingEnumCsaUnrated      ContentRatingCsaRatingEnum = "csaUnrated"
)

func (e ContentRatingCsaRatingEnum) ToPointer() *ContentRatingCsaRatingEnum {
	return &e
}

func (e *ContentRatingCsaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "csaUnspecified":
		fallthrough
	case "csaT":
		fallthrough
	case "csa10":
		fallthrough
	case "csa12":
		fallthrough
	case "csa16":
		fallthrough
	case "csa18":
		fallthrough
	case "csaInterdiction":
		fallthrough
	case "csaUnrated":
		*e = ContentRatingCsaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCsaRatingEnum: %v", v)
	}
}

// ContentRatingCscfRatingEnum - The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF).
type ContentRatingCscfRatingEnum string

const (
	ContentRatingCscfRatingEnumCscfUnspecified ContentRatingCscfRatingEnum = "cscfUnspecified"
	ContentRatingCscfRatingEnumCscfAl          ContentRatingCscfRatingEnum = "cscfAl"
	ContentRatingCscfRatingEnumCscfA           ContentRatingCscfRatingEnum = "cscfA"
	ContentRatingCscfRatingEnumCscf6           ContentRatingCscfRatingEnum = "cscf6"
	ContentRatingCscfRatingEnumCscf9           ContentRatingCscfRatingEnum = "cscf9"
	ContentRatingCscfRatingEnumCscf12          ContentRatingCscfRatingEnum = "cscf12"
	ContentRatingCscfRatingEnumCscf16          ContentRatingCscfRatingEnum = "cscf16"
	ContentRatingCscfRatingEnumCscf18          ContentRatingCscfRatingEnum = "cscf18"
	ContentRatingCscfRatingEnumCscfUnrated     ContentRatingCscfRatingEnum = "cscfUnrated"
)

func (e ContentRatingCscfRatingEnum) ToPointer() *ContentRatingCscfRatingEnum {
	return &e
}

func (e *ContentRatingCscfRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cscfUnspecified":
		fallthrough
	case "cscfAl":
		fallthrough
	case "cscfA":
		fallthrough
	case "cscf6":
		fallthrough
	case "cscf9":
		fallthrough
	case "cscf12":
		fallthrough
	case "cscf16":
		fallthrough
	case "cscf18":
		fallthrough
	case "cscfUnrated":
		*e = ContentRatingCscfRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCscfRatingEnum: %v", v)
	}
}

// ContentRatingCzfilmRatingEnum - The video's rating in the Czech Republic.
type ContentRatingCzfilmRatingEnum string

const (
	ContentRatingCzfilmRatingEnumCzfilmUnspecified ContentRatingCzfilmRatingEnum = "czfilmUnspecified"
	ContentRatingCzfilmRatingEnumCzfilmU           ContentRatingCzfilmRatingEnum = "czfilmU"
	ContentRatingCzfilmRatingEnumCzfilm12          ContentRatingCzfilmRatingEnum = "czfilm12"
	ContentRatingCzfilmRatingEnumCzfilm14          ContentRatingCzfilmRatingEnum = "czfilm14"
	ContentRatingCzfilmRatingEnumCzfilm18          ContentRatingCzfilmRatingEnum = "czfilm18"
	ContentRatingCzfilmRatingEnumCzfilmUnrated     ContentRatingCzfilmRatingEnum = "czfilmUnrated"
)

func (e ContentRatingCzfilmRatingEnum) ToPointer() *ContentRatingCzfilmRatingEnum {
	return &e
}

func (e *ContentRatingCzfilmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "czfilmUnspecified":
		fallthrough
	case "czfilmU":
		fallthrough
	case "czfilm12":
		fallthrough
	case "czfilm14":
		fallthrough
	case "czfilm18":
		fallthrough
	case "czfilmUnrated":
		*e = ContentRatingCzfilmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingCzfilmRatingEnum: %v", v)
	}
}

// ContentRatingDjctqRatingEnum - The video's Departamento de Justiça, Classificação, Qualificação e Títulos (DJCQT - Brazil) rating.
type ContentRatingDjctqRatingEnum string

const (
	ContentRatingDjctqRatingEnumDjctqUnspecified ContentRatingDjctqRatingEnum = "djctqUnspecified"
	ContentRatingDjctqRatingEnumDjctqL           ContentRatingDjctqRatingEnum = "djctqL"
	ContentRatingDjctqRatingEnumDjctq10          ContentRatingDjctqRatingEnum = "djctq10"
	ContentRatingDjctqRatingEnumDjctq12          ContentRatingDjctqRatingEnum = "djctq12"
	ContentRatingDjctqRatingEnumDjctq14          ContentRatingDjctqRatingEnum = "djctq14"
	ContentRatingDjctqRatingEnumDjctq16          ContentRatingDjctqRatingEnum = "djctq16"
	ContentRatingDjctqRatingEnumDjctq18          ContentRatingDjctqRatingEnum = "djctq18"
	ContentRatingDjctqRatingEnumDjctqEr          ContentRatingDjctqRatingEnum = "djctqEr"
	ContentRatingDjctqRatingEnumDjctqL10         ContentRatingDjctqRatingEnum = "djctqL10"
	ContentRatingDjctqRatingEnumDjctqL12         ContentRatingDjctqRatingEnum = "djctqL12"
	ContentRatingDjctqRatingEnumDjctqL14         ContentRatingDjctqRatingEnum = "djctqL14"
	ContentRatingDjctqRatingEnumDjctqL16         ContentRatingDjctqRatingEnum = "djctqL16"
	ContentRatingDjctqRatingEnumDjctqL18         ContentRatingDjctqRatingEnum = "djctqL18"
	ContentRatingDjctqRatingEnumDjctq1012        ContentRatingDjctqRatingEnum = "djctq1012"
	ContentRatingDjctqRatingEnumDjctq1014        ContentRatingDjctqRatingEnum = "djctq1014"
	ContentRatingDjctqRatingEnumDjctq1016        ContentRatingDjctqRatingEnum = "djctq1016"
	ContentRatingDjctqRatingEnumDjctq1018        ContentRatingDjctqRatingEnum = "djctq1018"
	ContentRatingDjctqRatingEnumDjctq1214        ContentRatingDjctqRatingEnum = "djctq1214"
	ContentRatingDjctqRatingEnumDjctq1216        ContentRatingDjctqRatingEnum = "djctq1216"
	ContentRatingDjctqRatingEnumDjctq1218        ContentRatingDjctqRatingEnum = "djctq1218"
	ContentRatingDjctqRatingEnumDjctq1416        ContentRatingDjctqRatingEnum = "djctq1416"
	ContentRatingDjctqRatingEnumDjctq1418        ContentRatingDjctqRatingEnum = "djctq1418"
	ContentRatingDjctqRatingEnumDjctq1618        ContentRatingDjctqRatingEnum = "djctq1618"
	ContentRatingDjctqRatingEnumDjctqUnrated     ContentRatingDjctqRatingEnum = "djctqUnrated"
)

func (e ContentRatingDjctqRatingEnum) ToPointer() *ContentRatingDjctqRatingEnum {
	return &e
}

func (e *ContentRatingDjctqRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "djctqUnspecified":
		fallthrough
	case "djctqL":
		fallthrough
	case "djctq10":
		fallthrough
	case "djctq12":
		fallthrough
	case "djctq14":
		fallthrough
	case "djctq16":
		fallthrough
	case "djctq18":
		fallthrough
	case "djctqEr":
		fallthrough
	case "djctqL10":
		fallthrough
	case "djctqL12":
		fallthrough
	case "djctqL14":
		fallthrough
	case "djctqL16":
		fallthrough
	case "djctqL18":
		fallthrough
	case "djctq1012":
		fallthrough
	case "djctq1014":
		fallthrough
	case "djctq1016":
		fallthrough
	case "djctq1018":
		fallthrough
	case "djctq1214":
		fallthrough
	case "djctq1216":
		fallthrough
	case "djctq1218":
		fallthrough
	case "djctq1416":
		fallthrough
	case "djctq1418":
		fallthrough
	case "djctq1618":
		fallthrough
	case "djctqUnrated":
		*e = ContentRatingDjctqRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingDjctqRatingEnum: %v", v)
	}
}

type ContentRatingDjctqRatingReasonsEnum string

const (
	ContentRatingDjctqRatingReasonsEnumDjctqRatingReasonUnspecified ContentRatingDjctqRatingReasonsEnum = "djctqRatingReasonUnspecified"
	ContentRatingDjctqRatingReasonsEnumDjctqViolence                ContentRatingDjctqRatingReasonsEnum = "djctqViolence"
	ContentRatingDjctqRatingReasonsEnumDjctqExtremeViolence         ContentRatingDjctqRatingReasonsEnum = "djctqExtremeViolence"
	ContentRatingDjctqRatingReasonsEnumDjctqSexualContent           ContentRatingDjctqRatingReasonsEnum = "djctqSexualContent"
	ContentRatingDjctqRatingReasonsEnumDjctqNudity                  ContentRatingDjctqRatingReasonsEnum = "djctqNudity"
	ContentRatingDjctqRatingReasonsEnumDjctqSex                     ContentRatingDjctqRatingReasonsEnum = "djctqSex"
	ContentRatingDjctqRatingReasonsEnumDjctqExplicitSex             ContentRatingDjctqRatingReasonsEnum = "djctqExplicitSex"
	ContentRatingDjctqRatingReasonsEnumDjctqDrugs                   ContentRatingDjctqRatingReasonsEnum = "djctqDrugs"
	ContentRatingDjctqRatingReasonsEnumDjctqLegalDrugs              ContentRatingDjctqRatingReasonsEnum = "djctqLegalDrugs"
	ContentRatingDjctqRatingReasonsEnumDjctqIllegalDrugs            ContentRatingDjctqRatingReasonsEnum = "djctqIllegalDrugs"
	ContentRatingDjctqRatingReasonsEnumDjctqInappropriateLanguage   ContentRatingDjctqRatingReasonsEnum = "djctqInappropriateLanguage"
	ContentRatingDjctqRatingReasonsEnumDjctqCriminalActs            ContentRatingDjctqRatingReasonsEnum = "djctqCriminalActs"
	ContentRatingDjctqRatingReasonsEnumDjctqImpactingContent        ContentRatingDjctqRatingReasonsEnum = "djctqImpactingContent"
)

func (e ContentRatingDjctqRatingReasonsEnum) ToPointer() *ContentRatingDjctqRatingReasonsEnum {
	return &e
}

func (e *ContentRatingDjctqRatingReasonsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "djctqRatingReasonUnspecified":
		fallthrough
	case "djctqViolence":
		fallthrough
	case "djctqExtremeViolence":
		fallthrough
	case "djctqSexualContent":
		fallthrough
	case "djctqNudity":
		fallthrough
	case "djctqSex":
		fallthrough
	case "djctqExplicitSex":
		fallthrough
	case "djctqDrugs":
		fallthrough
	case "djctqLegalDrugs":
		fallthrough
	case "djctqIllegalDrugs":
		fallthrough
	case "djctqInappropriateLanguage":
		fallthrough
	case "djctqCriminalActs":
		fallthrough
	case "djctqImpactingContent":
		*e = ContentRatingDjctqRatingReasonsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingDjctqRatingReasonsEnum: %v", v)
	}
}

// ContentRatingEcbmctRatingEnum - Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism
type ContentRatingEcbmctRatingEnum string

const (
	ContentRatingEcbmctRatingEnumEcbmctUnspecified ContentRatingEcbmctRatingEnum = "ecbmctUnspecified"
	ContentRatingEcbmctRatingEnumEcbmctG           ContentRatingEcbmctRatingEnum = "ecbmctG"
	ContentRatingEcbmctRatingEnumEcbmct7a          ContentRatingEcbmctRatingEnum = "ecbmct7a"
	ContentRatingEcbmctRatingEnumEcbmct7plus       ContentRatingEcbmctRatingEnum = "ecbmct7plus"
	ContentRatingEcbmctRatingEnumEcbmct13a         ContentRatingEcbmctRatingEnum = "ecbmct13a"
	ContentRatingEcbmctRatingEnumEcbmct13plus      ContentRatingEcbmctRatingEnum = "ecbmct13plus"
	ContentRatingEcbmctRatingEnumEcbmct15a         ContentRatingEcbmctRatingEnum = "ecbmct15a"
	ContentRatingEcbmctRatingEnumEcbmct15plus      ContentRatingEcbmctRatingEnum = "ecbmct15plus"
	ContentRatingEcbmctRatingEnumEcbmct18plus      ContentRatingEcbmctRatingEnum = "ecbmct18plus"
	ContentRatingEcbmctRatingEnumEcbmctUnrated     ContentRatingEcbmctRatingEnum = "ecbmctUnrated"
)

func (e ContentRatingEcbmctRatingEnum) ToPointer() *ContentRatingEcbmctRatingEnum {
	return &e
}

func (e *ContentRatingEcbmctRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ecbmctUnspecified":
		fallthrough
	case "ecbmctG":
		fallthrough
	case "ecbmct7a":
		fallthrough
	case "ecbmct7plus":
		fallthrough
	case "ecbmct13a":
		fallthrough
	case "ecbmct13plus":
		fallthrough
	case "ecbmct15a":
		fallthrough
	case "ecbmct15plus":
		fallthrough
	case "ecbmct18plus":
		fallthrough
	case "ecbmctUnrated":
		*e = ContentRatingEcbmctRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingEcbmctRatingEnum: %v", v)
	}
}

// ContentRatingEefilmRatingEnum - The video's rating in Estonia.
type ContentRatingEefilmRatingEnum string

const (
	ContentRatingEefilmRatingEnumEefilmUnspecified ContentRatingEefilmRatingEnum = "eefilmUnspecified"
	ContentRatingEefilmRatingEnumEefilmPere        ContentRatingEefilmRatingEnum = "eefilmPere"
	ContentRatingEefilmRatingEnumEefilmL           ContentRatingEefilmRatingEnum = "eefilmL"
	ContentRatingEefilmRatingEnumEefilmMs6         ContentRatingEefilmRatingEnum = "eefilmMs6"
	ContentRatingEefilmRatingEnumEefilmK6          ContentRatingEefilmRatingEnum = "eefilmK6"
	ContentRatingEefilmRatingEnumEefilmMs12        ContentRatingEefilmRatingEnum = "eefilmMs12"
	ContentRatingEefilmRatingEnumEefilmK12         ContentRatingEefilmRatingEnum = "eefilmK12"
	ContentRatingEefilmRatingEnumEefilmK14         ContentRatingEefilmRatingEnum = "eefilmK14"
	ContentRatingEefilmRatingEnumEefilmK16         ContentRatingEefilmRatingEnum = "eefilmK16"
	ContentRatingEefilmRatingEnumEefilmUnrated     ContentRatingEefilmRatingEnum = "eefilmUnrated"
)

func (e ContentRatingEefilmRatingEnum) ToPointer() *ContentRatingEefilmRatingEnum {
	return &e
}

func (e *ContentRatingEefilmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "eefilmUnspecified":
		fallthrough
	case "eefilmPere":
		fallthrough
	case "eefilmL":
		fallthrough
	case "eefilmMs6":
		fallthrough
	case "eefilmK6":
		fallthrough
	case "eefilmMs12":
		fallthrough
	case "eefilmK12":
		fallthrough
	case "eefilmK14":
		fallthrough
	case "eefilmK16":
		fallthrough
	case "eefilmUnrated":
		*e = ContentRatingEefilmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingEefilmRatingEnum: %v", v)
	}
}

// ContentRatingEgfilmRatingEnum - The video's rating in Egypt.
type ContentRatingEgfilmRatingEnum string

const (
	ContentRatingEgfilmRatingEnumEgfilmUnspecified ContentRatingEgfilmRatingEnum = "egfilmUnspecified"
	ContentRatingEgfilmRatingEnumEgfilmGn          ContentRatingEgfilmRatingEnum = "egfilmGn"
	ContentRatingEgfilmRatingEnumEgfilm18          ContentRatingEgfilmRatingEnum = "egfilm18"
	ContentRatingEgfilmRatingEnumEgfilmBn          ContentRatingEgfilmRatingEnum = "egfilmBn"
	ContentRatingEgfilmRatingEnumEgfilmUnrated     ContentRatingEgfilmRatingEnum = "egfilmUnrated"
)

func (e ContentRatingEgfilmRatingEnum) ToPointer() *ContentRatingEgfilmRatingEnum {
	return &e
}

func (e *ContentRatingEgfilmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "egfilmUnspecified":
		fallthrough
	case "egfilmGn":
		fallthrough
	case "egfilm18":
		fallthrough
	case "egfilmBn":
		fallthrough
	case "egfilmUnrated":
		*e = ContentRatingEgfilmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingEgfilmRatingEnum: %v", v)
	}
}

// ContentRatingEirinRatingEnum - The video's Eirin (映倫) rating. Eirin is the Japanese rating system.
type ContentRatingEirinRatingEnum string

const (
	ContentRatingEirinRatingEnumEirinUnspecified ContentRatingEirinRatingEnum = "eirinUnspecified"
	ContentRatingEirinRatingEnumEirinG           ContentRatingEirinRatingEnum = "eirinG"
	ContentRatingEirinRatingEnumEirinPg12        ContentRatingEirinRatingEnum = "eirinPg12"
	ContentRatingEirinRatingEnumEirinR15plus     ContentRatingEirinRatingEnum = "eirinR15plus"
	ContentRatingEirinRatingEnumEirinR18plus     ContentRatingEirinRatingEnum = "eirinR18plus"
	ContentRatingEirinRatingEnumEirinUnrated     ContentRatingEirinRatingEnum = "eirinUnrated"
)

func (e ContentRatingEirinRatingEnum) ToPointer() *ContentRatingEirinRatingEnum {
	return &e
}

func (e *ContentRatingEirinRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "eirinUnspecified":
		fallthrough
	case "eirinG":
		fallthrough
	case "eirinPg12":
		fallthrough
	case "eirinR15plus":
		fallthrough
	case "eirinR18plus":
		fallthrough
	case "eirinUnrated":
		*e = ContentRatingEirinRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingEirinRatingEnum: %v", v)
	}
}

// ContentRatingFcbmRatingEnum - The video's rating from Malaysia's Film Censorship Board.
type ContentRatingFcbmRatingEnum string

const (
	ContentRatingFcbmRatingEnumFcbmUnspecified ContentRatingFcbmRatingEnum = "fcbmUnspecified"
	ContentRatingFcbmRatingEnumFcbmU           ContentRatingFcbmRatingEnum = "fcbmU"
	ContentRatingFcbmRatingEnumFcbmPg13        ContentRatingFcbmRatingEnum = "fcbmPg13"
	ContentRatingFcbmRatingEnumFcbmP13         ContentRatingFcbmRatingEnum = "fcbmP13"
	ContentRatingFcbmRatingEnumFcbm18          ContentRatingFcbmRatingEnum = "fcbm18"
	ContentRatingFcbmRatingEnumFcbm18sx        ContentRatingFcbmRatingEnum = "fcbm18sx"
	ContentRatingFcbmRatingEnumFcbm18pa        ContentRatingFcbmRatingEnum = "fcbm18pa"
	ContentRatingFcbmRatingEnumFcbm18sg        ContentRatingFcbmRatingEnum = "fcbm18sg"
	ContentRatingFcbmRatingEnumFcbm18pl        ContentRatingFcbmRatingEnum = "fcbm18pl"
	ContentRatingFcbmRatingEnumFcbmUnrated     ContentRatingFcbmRatingEnum = "fcbmUnrated"
)

func (e ContentRatingFcbmRatingEnum) ToPointer() *ContentRatingFcbmRatingEnum {
	return &e
}

func (e *ContentRatingFcbmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fcbmUnspecified":
		fallthrough
	case "fcbmU":
		fallthrough
	case "fcbmPg13":
		fallthrough
	case "fcbmP13":
		fallthrough
	case "fcbm18":
		fallthrough
	case "fcbm18sx":
		fallthrough
	case "fcbm18pa":
		fallthrough
	case "fcbm18sg":
		fallthrough
	case "fcbm18pl":
		fallthrough
	case "fcbmUnrated":
		*e = ContentRatingFcbmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingFcbmRatingEnum: %v", v)
	}
}

// ContentRatingFcoRatingEnum - The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration.
type ContentRatingFcoRatingEnum string

const (
	ContentRatingFcoRatingEnumFcoUnspecified ContentRatingFcoRatingEnum = "fcoUnspecified"
	ContentRatingFcoRatingEnumFcoI           ContentRatingFcoRatingEnum = "fcoI"
	ContentRatingFcoRatingEnumFcoIia         ContentRatingFcoRatingEnum = "fcoIia"
	ContentRatingFcoRatingEnumFcoIib         ContentRatingFcoRatingEnum = "fcoIib"
	ContentRatingFcoRatingEnumFcoIi          ContentRatingFcoRatingEnum = "fcoIi"
	ContentRatingFcoRatingEnumFcoIii         ContentRatingFcoRatingEnum = "fcoIii"
	ContentRatingFcoRatingEnumFcoUnrated     ContentRatingFcoRatingEnum = "fcoUnrated"
)

func (e ContentRatingFcoRatingEnum) ToPointer() *ContentRatingFcoRatingEnum {
	return &e
}

func (e *ContentRatingFcoRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fcoUnspecified":
		fallthrough
	case "fcoI":
		fallthrough
	case "fcoIia":
		fallthrough
	case "fcoIib":
		fallthrough
	case "fcoIi":
		fallthrough
	case "fcoIii":
		fallthrough
	case "fcoUnrated":
		*e = ContentRatingFcoRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingFcoRatingEnum: %v", v)
	}
}

// ContentRatingFmocRatingEnum - This property has been deprecated. Use the contentDetails.contentRating.cncRating instead.
type ContentRatingFmocRatingEnum string

const (
	ContentRatingFmocRatingEnumFmocUnspecified ContentRatingFmocRatingEnum = "fmocUnspecified"
	ContentRatingFmocRatingEnumFmocU           ContentRatingFmocRatingEnum = "fmocU"
	ContentRatingFmocRatingEnumFmoc10          ContentRatingFmocRatingEnum = "fmoc10"
	ContentRatingFmocRatingEnumFmoc12          ContentRatingFmocRatingEnum = "fmoc12"
	ContentRatingFmocRatingEnumFmoc16          ContentRatingFmocRatingEnum = "fmoc16"
	ContentRatingFmocRatingEnumFmoc18          ContentRatingFmocRatingEnum = "fmoc18"
	ContentRatingFmocRatingEnumFmocE           ContentRatingFmocRatingEnum = "fmocE"
	ContentRatingFmocRatingEnumFmocUnrated     ContentRatingFmocRatingEnum = "fmocUnrated"
)

func (e ContentRatingFmocRatingEnum) ToPointer() *ContentRatingFmocRatingEnum {
	return &e
}

func (e *ContentRatingFmocRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fmocUnspecified":
		fallthrough
	case "fmocU":
		fallthrough
	case "fmoc10":
		fallthrough
	case "fmoc12":
		fallthrough
	case "fmoc16":
		fallthrough
	case "fmoc18":
		fallthrough
	case "fmocE":
		fallthrough
	case "fmocUnrated":
		*e = ContentRatingFmocRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingFmocRatingEnum: %v", v)
	}
}

// ContentRatingFpbRatingEnum - The video's rating from South Africa's Film and Publication Board.
type ContentRatingFpbRatingEnum string

const (
	ContentRatingFpbRatingEnumFpbUnspecified ContentRatingFpbRatingEnum = "fpbUnspecified"
	ContentRatingFpbRatingEnumFpbA           ContentRatingFpbRatingEnum = "fpbA"
	ContentRatingFpbRatingEnumFpbPg          ContentRatingFpbRatingEnum = "fpbPg"
	ContentRatingFpbRatingEnumFpb79Pg        ContentRatingFpbRatingEnum = "fpb79Pg"
	ContentRatingFpbRatingEnumFpb1012Pg      ContentRatingFpbRatingEnum = "fpb1012Pg"
	ContentRatingFpbRatingEnumFpb13          ContentRatingFpbRatingEnum = "fpb13"
	ContentRatingFpbRatingEnumFpb16          ContentRatingFpbRatingEnum = "fpb16"
	ContentRatingFpbRatingEnumFpb18          ContentRatingFpbRatingEnum = "fpb18"
	ContentRatingFpbRatingEnumFpbX18         ContentRatingFpbRatingEnum = "fpbX18"
	ContentRatingFpbRatingEnumFpbXx          ContentRatingFpbRatingEnum = "fpbXx"
	ContentRatingFpbRatingEnumFpbUnrated     ContentRatingFpbRatingEnum = "fpbUnrated"
	ContentRatingFpbRatingEnumFpb10          ContentRatingFpbRatingEnum = "fpb10"
)

func (e ContentRatingFpbRatingEnum) ToPointer() *ContentRatingFpbRatingEnum {
	return &e
}

func (e *ContentRatingFpbRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fpbUnspecified":
		fallthrough
	case "fpbA":
		fallthrough
	case "fpbPg":
		fallthrough
	case "fpb79Pg":
		fallthrough
	case "fpb1012Pg":
		fallthrough
	case "fpb13":
		fallthrough
	case "fpb16":
		fallthrough
	case "fpb18":
		fallthrough
	case "fpbX18":
		fallthrough
	case "fpbXx":
		fallthrough
	case "fpbUnrated":
		fallthrough
	case "fpb10":
		*e = ContentRatingFpbRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingFpbRatingEnum: %v", v)
	}
}

type ContentRatingFpbRatingReasonsEnum string

const (
	ContentRatingFpbRatingReasonsEnumFpbRatingReasonUnspecified ContentRatingFpbRatingReasonsEnum = "fpbRatingReasonUnspecified"
	ContentRatingFpbRatingReasonsEnumFpbBlasphemy               ContentRatingFpbRatingReasonsEnum = "fpbBlasphemy"
	ContentRatingFpbRatingReasonsEnumFpbLanguage                ContentRatingFpbRatingReasonsEnum = "fpbLanguage"
	ContentRatingFpbRatingReasonsEnumFpbNudity                  ContentRatingFpbRatingReasonsEnum = "fpbNudity"
	ContentRatingFpbRatingReasonsEnumFpbPrejudice               ContentRatingFpbRatingReasonsEnum = "fpbPrejudice"
	ContentRatingFpbRatingReasonsEnumFpbSex                     ContentRatingFpbRatingReasonsEnum = "fpbSex"
	ContentRatingFpbRatingReasonsEnumFpbViolence                ContentRatingFpbRatingReasonsEnum = "fpbViolence"
	ContentRatingFpbRatingReasonsEnumFpbDrugs                   ContentRatingFpbRatingReasonsEnum = "fpbDrugs"
	ContentRatingFpbRatingReasonsEnumFpbSexualViolence          ContentRatingFpbRatingReasonsEnum = "fpbSexualViolence"
	ContentRatingFpbRatingReasonsEnumFpbHorror                  ContentRatingFpbRatingReasonsEnum = "fpbHorror"
	ContentRatingFpbRatingReasonsEnumFpbCriminalTechniques      ContentRatingFpbRatingReasonsEnum = "fpbCriminalTechniques"
	ContentRatingFpbRatingReasonsEnumFpbImitativeActsTechniques ContentRatingFpbRatingReasonsEnum = "fpbImitativeActsTechniques"
)

func (e ContentRatingFpbRatingReasonsEnum) ToPointer() *ContentRatingFpbRatingReasonsEnum {
	return &e
}

func (e *ContentRatingFpbRatingReasonsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fpbRatingReasonUnspecified":
		fallthrough
	case "fpbBlasphemy":
		fallthrough
	case "fpbLanguage":
		fallthrough
	case "fpbNudity":
		fallthrough
	case "fpbPrejudice":
		fallthrough
	case "fpbSex":
		fallthrough
	case "fpbViolence":
		fallthrough
	case "fpbDrugs":
		fallthrough
	case "fpbSexualViolence":
		fallthrough
	case "fpbHorror":
		fallthrough
	case "fpbCriminalTechniques":
		fallthrough
	case "fpbImitativeActsTechniques":
		*e = ContentRatingFpbRatingReasonsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingFpbRatingReasonsEnum: %v", v)
	}
}

// ContentRatingFskRatingEnum - The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating.
type ContentRatingFskRatingEnum string

const (
	ContentRatingFskRatingEnumFskUnspecified ContentRatingFskRatingEnum = "fskUnspecified"
	ContentRatingFskRatingEnumFsk0           ContentRatingFskRatingEnum = "fsk0"
	ContentRatingFskRatingEnumFsk6           ContentRatingFskRatingEnum = "fsk6"
	ContentRatingFskRatingEnumFsk12          ContentRatingFskRatingEnum = "fsk12"
	ContentRatingFskRatingEnumFsk16          ContentRatingFskRatingEnum = "fsk16"
	ContentRatingFskRatingEnumFsk18          ContentRatingFskRatingEnum = "fsk18"
	ContentRatingFskRatingEnumFskUnrated     ContentRatingFskRatingEnum = "fskUnrated"
)

func (e ContentRatingFskRatingEnum) ToPointer() *ContentRatingFskRatingEnum {
	return &e
}

func (e *ContentRatingFskRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fskUnspecified":
		fallthrough
	case "fsk0":
		fallthrough
	case "fsk6":
		fallthrough
	case "fsk12":
		fallthrough
	case "fsk16":
		fallthrough
	case "fsk18":
		fallthrough
	case "fskUnrated":
		*e = ContentRatingFskRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingFskRatingEnum: %v", v)
	}
}

// ContentRatingGrfilmRatingEnum - The video's rating in Greece.
type ContentRatingGrfilmRatingEnum string

const (
	ContentRatingGrfilmRatingEnumGrfilmUnspecified ContentRatingGrfilmRatingEnum = "grfilmUnspecified"
	ContentRatingGrfilmRatingEnumGrfilmK           ContentRatingGrfilmRatingEnum = "grfilmK"
	ContentRatingGrfilmRatingEnumGrfilmE           ContentRatingGrfilmRatingEnum = "grfilmE"
	ContentRatingGrfilmRatingEnumGrfilmK12         ContentRatingGrfilmRatingEnum = "grfilmK12"
	ContentRatingGrfilmRatingEnumGrfilmK13         ContentRatingGrfilmRatingEnum = "grfilmK13"
	ContentRatingGrfilmRatingEnumGrfilmK15         ContentRatingGrfilmRatingEnum = "grfilmK15"
	ContentRatingGrfilmRatingEnumGrfilmK17         ContentRatingGrfilmRatingEnum = "grfilmK17"
	ContentRatingGrfilmRatingEnumGrfilmK18         ContentRatingGrfilmRatingEnum = "grfilmK18"
	ContentRatingGrfilmRatingEnumGrfilmUnrated     ContentRatingGrfilmRatingEnum = "grfilmUnrated"
)

func (e ContentRatingGrfilmRatingEnum) ToPointer() *ContentRatingGrfilmRatingEnum {
	return &e
}

func (e *ContentRatingGrfilmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "grfilmUnspecified":
		fallthrough
	case "grfilmK":
		fallthrough
	case "grfilmE":
		fallthrough
	case "grfilmK12":
		fallthrough
	case "grfilmK13":
		fallthrough
	case "grfilmK15":
		fallthrough
	case "grfilmK17":
		fallthrough
	case "grfilmK18":
		fallthrough
	case "grfilmUnrated":
		*e = ContentRatingGrfilmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingGrfilmRatingEnum: %v", v)
	}
}

// ContentRatingIcaaRatingEnum - The video's Instituto de la Cinematografía y de las Artes Audiovisuales (ICAA - Spain) rating.
type ContentRatingIcaaRatingEnum string

const (
	ContentRatingIcaaRatingEnumIcaaUnspecified ContentRatingIcaaRatingEnum = "icaaUnspecified"
	ContentRatingIcaaRatingEnumIcaaApta        ContentRatingIcaaRatingEnum = "icaaApta"
	ContentRatingIcaaRatingEnumIcaa7           ContentRatingIcaaRatingEnum = "icaa7"
	ContentRatingIcaaRatingEnumIcaa12          ContentRatingIcaaRatingEnum = "icaa12"
	ContentRatingIcaaRatingEnumIcaa13          ContentRatingIcaaRatingEnum = "icaa13"
	ContentRatingIcaaRatingEnumIcaa16          ContentRatingIcaaRatingEnum = "icaa16"
	ContentRatingIcaaRatingEnumIcaa18          ContentRatingIcaaRatingEnum = "icaa18"
	ContentRatingIcaaRatingEnumIcaaX           ContentRatingIcaaRatingEnum = "icaaX"
	ContentRatingIcaaRatingEnumIcaaUnrated     ContentRatingIcaaRatingEnum = "icaaUnrated"
)

func (e ContentRatingIcaaRatingEnum) ToPointer() *ContentRatingIcaaRatingEnum {
	return &e
}

func (e *ContentRatingIcaaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "icaaUnspecified":
		fallthrough
	case "icaaApta":
		fallthrough
	case "icaa7":
		fallthrough
	case "icaa12":
		fallthrough
	case "icaa13":
		fallthrough
	case "icaa16":
		fallthrough
	case "icaa18":
		fallthrough
	case "icaaX":
		fallthrough
	case "icaaUnrated":
		*e = ContentRatingIcaaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingIcaaRatingEnum: %v", v)
	}
}

// ContentRatingIfcoRatingEnum - The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information.
type ContentRatingIfcoRatingEnum string

const (
	ContentRatingIfcoRatingEnumIfcoUnspecified ContentRatingIfcoRatingEnum = "ifcoUnspecified"
	ContentRatingIfcoRatingEnumIfcoG           ContentRatingIfcoRatingEnum = "ifcoG"
	ContentRatingIfcoRatingEnumIfcoPg          ContentRatingIfcoRatingEnum = "ifcoPg"
	ContentRatingIfcoRatingEnumIfco12          ContentRatingIfcoRatingEnum = "ifco12"
	ContentRatingIfcoRatingEnumIfco12a         ContentRatingIfcoRatingEnum = "ifco12a"
	ContentRatingIfcoRatingEnumIfco15          ContentRatingIfcoRatingEnum = "ifco15"
	ContentRatingIfcoRatingEnumIfco15a         ContentRatingIfcoRatingEnum = "ifco15a"
	ContentRatingIfcoRatingEnumIfco16          ContentRatingIfcoRatingEnum = "ifco16"
	ContentRatingIfcoRatingEnumIfco18          ContentRatingIfcoRatingEnum = "ifco18"
	ContentRatingIfcoRatingEnumIfcoUnrated     ContentRatingIfcoRatingEnum = "ifcoUnrated"
)

func (e ContentRatingIfcoRatingEnum) ToPointer() *ContentRatingIfcoRatingEnum {
	return &e
}

func (e *ContentRatingIfcoRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ifcoUnspecified":
		fallthrough
	case "ifcoG":
		fallthrough
	case "ifcoPg":
		fallthrough
	case "ifco12":
		fallthrough
	case "ifco12a":
		fallthrough
	case "ifco15":
		fallthrough
	case "ifco15a":
		fallthrough
	case "ifco16":
		fallthrough
	case "ifco18":
		fallthrough
	case "ifcoUnrated":
		*e = ContentRatingIfcoRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingIfcoRatingEnum: %v", v)
	}
}

// ContentRatingIlfilmRatingEnum - The video's rating in Israel.
type ContentRatingIlfilmRatingEnum string

const (
	ContentRatingIlfilmRatingEnumIlfilmUnspecified ContentRatingIlfilmRatingEnum = "ilfilmUnspecified"
	ContentRatingIlfilmRatingEnumIlfilmAa          ContentRatingIlfilmRatingEnum = "ilfilmAa"
	ContentRatingIlfilmRatingEnumIlfilm12          ContentRatingIlfilmRatingEnum = "ilfilm12"
	ContentRatingIlfilmRatingEnumIlfilm14          ContentRatingIlfilmRatingEnum = "ilfilm14"
	ContentRatingIlfilmRatingEnumIlfilm16          ContentRatingIlfilmRatingEnum = "ilfilm16"
	ContentRatingIlfilmRatingEnumIlfilm18          ContentRatingIlfilmRatingEnum = "ilfilm18"
	ContentRatingIlfilmRatingEnumIlfilmUnrated     ContentRatingIlfilmRatingEnum = "ilfilmUnrated"
)

func (e ContentRatingIlfilmRatingEnum) ToPointer() *ContentRatingIlfilmRatingEnum {
	return &e
}

func (e *ContentRatingIlfilmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ilfilmUnspecified":
		fallthrough
	case "ilfilmAa":
		fallthrough
	case "ilfilm12":
		fallthrough
	case "ilfilm14":
		fallthrough
	case "ilfilm16":
		fallthrough
	case "ilfilm18":
		fallthrough
	case "ilfilmUnrated":
		*e = ContentRatingIlfilmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingIlfilmRatingEnum: %v", v)
	}
}

// ContentRatingIncaaRatingEnum - The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating.
type ContentRatingIncaaRatingEnum string

const (
	ContentRatingIncaaRatingEnumIncaaUnspecified ContentRatingIncaaRatingEnum = "incaaUnspecified"
	ContentRatingIncaaRatingEnumIncaaAtp         ContentRatingIncaaRatingEnum = "incaaAtp"
	ContentRatingIncaaRatingEnumIncaaSam13       ContentRatingIncaaRatingEnum = "incaaSam13"
	ContentRatingIncaaRatingEnumIncaaSam16       ContentRatingIncaaRatingEnum = "incaaSam16"
	ContentRatingIncaaRatingEnumIncaaSam18       ContentRatingIncaaRatingEnum = "incaaSam18"
	ContentRatingIncaaRatingEnumIncaaC           ContentRatingIncaaRatingEnum = "incaaC"
	ContentRatingIncaaRatingEnumIncaaUnrated     ContentRatingIncaaRatingEnum = "incaaUnrated"
)

func (e ContentRatingIncaaRatingEnum) ToPointer() *ContentRatingIncaaRatingEnum {
	return &e
}

func (e *ContentRatingIncaaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "incaaUnspecified":
		fallthrough
	case "incaaAtp":
		fallthrough
	case "incaaSam13":
		fallthrough
	case "incaaSam16":
		fallthrough
	case "incaaSam18":
		fallthrough
	case "incaaC":
		fallthrough
	case "incaaUnrated":
		*e = ContentRatingIncaaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingIncaaRatingEnum: %v", v)
	}
}

// ContentRatingKfcbRatingEnum - The video's rating from the Kenya Film Classification Board.
type ContentRatingKfcbRatingEnum string

const (
	ContentRatingKfcbRatingEnumKfcbUnspecified ContentRatingKfcbRatingEnum = "kfcbUnspecified"
	ContentRatingKfcbRatingEnumKfcbG           ContentRatingKfcbRatingEnum = "kfcbG"
	ContentRatingKfcbRatingEnumKfcbPg          ContentRatingKfcbRatingEnum = "kfcbPg"
	ContentRatingKfcbRatingEnumKfcb16plus      ContentRatingKfcbRatingEnum = "kfcb16plus"
	ContentRatingKfcbRatingEnumKfcbR           ContentRatingKfcbRatingEnum = "kfcbR"
	ContentRatingKfcbRatingEnumKfcbUnrated     ContentRatingKfcbRatingEnum = "kfcbUnrated"
)

func (e ContentRatingKfcbRatingEnum) ToPointer() *ContentRatingKfcbRatingEnum {
	return &e
}

func (e *ContentRatingKfcbRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "kfcbUnspecified":
		fallthrough
	case "kfcbG":
		fallthrough
	case "kfcbPg":
		fallthrough
	case "kfcb16plus":
		fallthrough
	case "kfcbR":
		fallthrough
	case "kfcbUnrated":
		*e = ContentRatingKfcbRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingKfcbRatingEnum: %v", v)
	}
}

// ContentRatingKijkwijzerRatingEnum - The video's NICAM/Kijkwijzer rating from the Nederlands Instituut voor de Classificatie van Audiovisuele Media (Netherlands).
type ContentRatingKijkwijzerRatingEnum string

const (
	ContentRatingKijkwijzerRatingEnumKijkwijzerUnspecified ContentRatingKijkwijzerRatingEnum = "kijkwijzerUnspecified"
	ContentRatingKijkwijzerRatingEnumKijkwijzerAl          ContentRatingKijkwijzerRatingEnum = "kijkwijzerAl"
	ContentRatingKijkwijzerRatingEnumKijkwijzer6           ContentRatingKijkwijzerRatingEnum = "kijkwijzer6"
	ContentRatingKijkwijzerRatingEnumKijkwijzer9           ContentRatingKijkwijzerRatingEnum = "kijkwijzer9"
	ContentRatingKijkwijzerRatingEnumKijkwijzer12          ContentRatingKijkwijzerRatingEnum = "kijkwijzer12"
	ContentRatingKijkwijzerRatingEnumKijkwijzer16          ContentRatingKijkwijzerRatingEnum = "kijkwijzer16"
	ContentRatingKijkwijzerRatingEnumKijkwijzer18          ContentRatingKijkwijzerRatingEnum = "kijkwijzer18"
	ContentRatingKijkwijzerRatingEnumKijkwijzerUnrated     ContentRatingKijkwijzerRatingEnum = "kijkwijzerUnrated"
)

func (e ContentRatingKijkwijzerRatingEnum) ToPointer() *ContentRatingKijkwijzerRatingEnum {
	return &e
}

func (e *ContentRatingKijkwijzerRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "kijkwijzerUnspecified":
		fallthrough
	case "kijkwijzerAl":
		fallthrough
	case "kijkwijzer6":
		fallthrough
	case "kijkwijzer9":
		fallthrough
	case "kijkwijzer12":
		fallthrough
	case "kijkwijzer16":
		fallthrough
	case "kijkwijzer18":
		fallthrough
	case "kijkwijzerUnrated":
		*e = ContentRatingKijkwijzerRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingKijkwijzerRatingEnum: %v", v)
	}
}

// ContentRatingKmrbRatingEnum - The video's Korea Media Rating Board (영상물등급위원회) rating. The KMRB rates videos in South Korea.
type ContentRatingKmrbRatingEnum string

const (
	ContentRatingKmrbRatingEnumKmrbUnspecified ContentRatingKmrbRatingEnum = "kmrbUnspecified"
	ContentRatingKmrbRatingEnumKmrbAll         ContentRatingKmrbRatingEnum = "kmrbAll"
	ContentRatingKmrbRatingEnumKmrb12plus      ContentRatingKmrbRatingEnum = "kmrb12plus"
	ContentRatingKmrbRatingEnumKmrb15plus      ContentRatingKmrbRatingEnum = "kmrb15plus"
	ContentRatingKmrbRatingEnumKmrbTeenr       ContentRatingKmrbRatingEnum = "kmrbTeenr"
	ContentRatingKmrbRatingEnumKmrbR           ContentRatingKmrbRatingEnum = "kmrbR"
	ContentRatingKmrbRatingEnumKmrbUnrated     ContentRatingKmrbRatingEnum = "kmrbUnrated"
)

func (e ContentRatingKmrbRatingEnum) ToPointer() *ContentRatingKmrbRatingEnum {
	return &e
}

func (e *ContentRatingKmrbRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "kmrbUnspecified":
		fallthrough
	case "kmrbAll":
		fallthrough
	case "kmrb12plus":
		fallthrough
	case "kmrb15plus":
		fallthrough
	case "kmrbTeenr":
		fallthrough
	case "kmrbR":
		fallthrough
	case "kmrbUnrated":
		*e = ContentRatingKmrbRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingKmrbRatingEnum: %v", v)
	}
}

// ContentRatingLsfRatingEnum - The video's rating from Indonesia's Lembaga Sensor Film.
type ContentRatingLsfRatingEnum string

const (
	ContentRatingLsfRatingEnumLsfUnspecified ContentRatingLsfRatingEnum = "lsfUnspecified"
	ContentRatingLsfRatingEnumLsfSu          ContentRatingLsfRatingEnum = "lsfSu"
	ContentRatingLsfRatingEnumLsfA           ContentRatingLsfRatingEnum = "lsfA"
	ContentRatingLsfRatingEnumLsfBo          ContentRatingLsfRatingEnum = "lsfBo"
	ContentRatingLsfRatingEnumLsf13          ContentRatingLsfRatingEnum = "lsf13"
	ContentRatingLsfRatingEnumLsfR           ContentRatingLsfRatingEnum = "lsfR"
	ContentRatingLsfRatingEnumLsf17          ContentRatingLsfRatingEnum = "lsf17"
	ContentRatingLsfRatingEnumLsfD           ContentRatingLsfRatingEnum = "lsfD"
	ContentRatingLsfRatingEnumLsf21          ContentRatingLsfRatingEnum = "lsf21"
	ContentRatingLsfRatingEnumLsfUnrated     ContentRatingLsfRatingEnum = "lsfUnrated"
)

func (e ContentRatingLsfRatingEnum) ToPointer() *ContentRatingLsfRatingEnum {
	return &e
}

func (e *ContentRatingLsfRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "lsfUnspecified":
		fallthrough
	case "lsfSu":
		fallthrough
	case "lsfA":
		fallthrough
	case "lsfBo":
		fallthrough
	case "lsf13":
		fallthrough
	case "lsfR":
		fallthrough
	case "lsf17":
		fallthrough
	case "lsfD":
		fallthrough
	case "lsf21":
		fallthrough
	case "lsfUnrated":
		*e = ContentRatingLsfRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingLsfRatingEnum: %v", v)
	}
}

// ContentRatingMccaaRatingEnum - The video's rating from Malta's Film Age-Classification Board.
type ContentRatingMccaaRatingEnum string

const (
	ContentRatingMccaaRatingEnumMccaaUnspecified ContentRatingMccaaRatingEnum = "mccaaUnspecified"
	ContentRatingMccaaRatingEnumMccaaU           ContentRatingMccaaRatingEnum = "mccaaU"
	ContentRatingMccaaRatingEnumMccaaPg          ContentRatingMccaaRatingEnum = "mccaaPg"
	ContentRatingMccaaRatingEnumMccaa12a         ContentRatingMccaaRatingEnum = "mccaa12a"
	ContentRatingMccaaRatingEnumMccaa12          ContentRatingMccaaRatingEnum = "mccaa12"
	ContentRatingMccaaRatingEnumMccaa14          ContentRatingMccaaRatingEnum = "mccaa14"
	ContentRatingMccaaRatingEnumMccaa15          ContentRatingMccaaRatingEnum = "mccaa15"
	ContentRatingMccaaRatingEnumMccaa16          ContentRatingMccaaRatingEnum = "mccaa16"
	ContentRatingMccaaRatingEnumMccaa18          ContentRatingMccaaRatingEnum = "mccaa18"
	ContentRatingMccaaRatingEnumMccaaUnrated     ContentRatingMccaaRatingEnum = "mccaaUnrated"
)

func (e ContentRatingMccaaRatingEnum) ToPointer() *ContentRatingMccaaRatingEnum {
	return &e
}

func (e *ContentRatingMccaaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mccaaUnspecified":
		fallthrough
	case "mccaaU":
		fallthrough
	case "mccaaPg":
		fallthrough
	case "mccaa12a":
		fallthrough
	case "mccaa12":
		fallthrough
	case "mccaa14":
		fallthrough
	case "mccaa15":
		fallthrough
	case "mccaa16":
		fallthrough
	case "mccaa18":
		fallthrough
	case "mccaaUnrated":
		*e = ContentRatingMccaaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMccaaRatingEnum: %v", v)
	}
}

// ContentRatingMccypRatingEnum - The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People.
type ContentRatingMccypRatingEnum string

const (
	ContentRatingMccypRatingEnumMccypUnspecified ContentRatingMccypRatingEnum = "mccypUnspecified"
	ContentRatingMccypRatingEnumMccypA           ContentRatingMccypRatingEnum = "mccypA"
	ContentRatingMccypRatingEnumMccyp7           ContentRatingMccypRatingEnum = "mccyp7"
	ContentRatingMccypRatingEnumMccyp11          ContentRatingMccypRatingEnum = "mccyp11"
	ContentRatingMccypRatingEnumMccyp15          ContentRatingMccypRatingEnum = "mccyp15"
	ContentRatingMccypRatingEnumMccypUnrated     ContentRatingMccypRatingEnum = "mccypUnrated"
)

func (e ContentRatingMccypRatingEnum) ToPointer() *ContentRatingMccypRatingEnum {
	return &e
}

func (e *ContentRatingMccypRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mccypUnspecified":
		fallthrough
	case "mccypA":
		fallthrough
	case "mccyp7":
		fallthrough
	case "mccyp11":
		fallthrough
	case "mccyp15":
		fallthrough
	case "mccypUnrated":
		*e = ContentRatingMccypRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMccypRatingEnum: %v", v)
	}
}

// ContentRatingMcstRatingEnum - The video's rating system for Vietnam - MCST
type ContentRatingMcstRatingEnum string

const (
	ContentRatingMcstRatingEnumMcstUnspecified ContentRatingMcstRatingEnum = "mcstUnspecified"
	ContentRatingMcstRatingEnumMcstP           ContentRatingMcstRatingEnum = "mcstP"
	ContentRatingMcstRatingEnumMcst0           ContentRatingMcstRatingEnum = "mcst0"
	ContentRatingMcstRatingEnumMcstC13         ContentRatingMcstRatingEnum = "mcstC13"
	ContentRatingMcstRatingEnumMcstC16         ContentRatingMcstRatingEnum = "mcstC16"
	ContentRatingMcstRatingEnumMcst16plus      ContentRatingMcstRatingEnum = "mcst16plus"
	ContentRatingMcstRatingEnumMcstC18         ContentRatingMcstRatingEnum = "mcstC18"
	ContentRatingMcstRatingEnumMcstGPg         ContentRatingMcstRatingEnum = "mcstGPg"
	ContentRatingMcstRatingEnumMcstUnrated     ContentRatingMcstRatingEnum = "mcstUnrated"
)

func (e ContentRatingMcstRatingEnum) ToPointer() *ContentRatingMcstRatingEnum {
	return &e
}

func (e *ContentRatingMcstRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mcstUnspecified":
		fallthrough
	case "mcstP":
		fallthrough
	case "mcst0":
		fallthrough
	case "mcstC13":
		fallthrough
	case "mcstC16":
		fallthrough
	case "mcst16plus":
		fallthrough
	case "mcstC18":
		fallthrough
	case "mcstGPg":
		fallthrough
	case "mcstUnrated":
		*e = ContentRatingMcstRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMcstRatingEnum: %v", v)
	}
}

// ContentRatingMdaRatingEnum - The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC).
type ContentRatingMdaRatingEnum string

const (
	ContentRatingMdaRatingEnumMdaUnspecified ContentRatingMdaRatingEnum = "mdaUnspecified"
	ContentRatingMdaRatingEnumMdaG           ContentRatingMdaRatingEnum = "mdaG"
	ContentRatingMdaRatingEnumMdaPg          ContentRatingMdaRatingEnum = "mdaPg"
	ContentRatingMdaRatingEnumMdaPg13        ContentRatingMdaRatingEnum = "mdaPg13"
	ContentRatingMdaRatingEnumMdaNc16        ContentRatingMdaRatingEnum = "mdaNc16"
	ContentRatingMdaRatingEnumMdaM18         ContentRatingMdaRatingEnum = "mdaM18"
	ContentRatingMdaRatingEnumMdaR21         ContentRatingMdaRatingEnum = "mdaR21"
	ContentRatingMdaRatingEnumMdaUnrated     ContentRatingMdaRatingEnum = "mdaUnrated"
)

func (e ContentRatingMdaRatingEnum) ToPointer() *ContentRatingMdaRatingEnum {
	return &e
}

func (e *ContentRatingMdaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mdaUnspecified":
		fallthrough
	case "mdaG":
		fallthrough
	case "mdaPg":
		fallthrough
	case "mdaPg13":
		fallthrough
	case "mdaNc16":
		fallthrough
	case "mdaM18":
		fallthrough
	case "mdaR21":
		fallthrough
	case "mdaUnrated":
		*e = ContentRatingMdaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMdaRatingEnum: %v", v)
	}
}

// ContentRatingMedietilsynetRatingEnum - The video's rating from Medietilsynet, the Norwegian Media Authority.
type ContentRatingMedietilsynetRatingEnum string

const (
	ContentRatingMedietilsynetRatingEnumMedietilsynetUnspecified ContentRatingMedietilsynetRatingEnum = "medietilsynetUnspecified"
	ContentRatingMedietilsynetRatingEnumMedietilsynetA           ContentRatingMedietilsynetRatingEnum = "medietilsynetA"
	ContentRatingMedietilsynetRatingEnumMedietilsynet6           ContentRatingMedietilsynetRatingEnum = "medietilsynet6"
	ContentRatingMedietilsynetRatingEnumMedietilsynet7           ContentRatingMedietilsynetRatingEnum = "medietilsynet7"
	ContentRatingMedietilsynetRatingEnumMedietilsynet9           ContentRatingMedietilsynetRatingEnum = "medietilsynet9"
	ContentRatingMedietilsynetRatingEnumMedietilsynet11          ContentRatingMedietilsynetRatingEnum = "medietilsynet11"
	ContentRatingMedietilsynetRatingEnumMedietilsynet12          ContentRatingMedietilsynetRatingEnum = "medietilsynet12"
	ContentRatingMedietilsynetRatingEnumMedietilsynet15          ContentRatingMedietilsynetRatingEnum = "medietilsynet15"
	ContentRatingMedietilsynetRatingEnumMedietilsynet18          ContentRatingMedietilsynetRatingEnum = "medietilsynet18"
	ContentRatingMedietilsynetRatingEnumMedietilsynetUnrated     ContentRatingMedietilsynetRatingEnum = "medietilsynetUnrated"
)

func (e ContentRatingMedietilsynetRatingEnum) ToPointer() *ContentRatingMedietilsynetRatingEnum {
	return &e
}

func (e *ContentRatingMedietilsynetRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "medietilsynetUnspecified":
		fallthrough
	case "medietilsynetA":
		fallthrough
	case "medietilsynet6":
		fallthrough
	case "medietilsynet7":
		fallthrough
	case "medietilsynet9":
		fallthrough
	case "medietilsynet11":
		fallthrough
	case "medietilsynet12":
		fallthrough
	case "medietilsynet15":
		fallthrough
	case "medietilsynet18":
		fallthrough
	case "medietilsynetUnrated":
		*e = ContentRatingMedietilsynetRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMedietilsynetRatingEnum: %v", v)
	}
}

// ContentRatingMekuRatingEnum - The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute).
type ContentRatingMekuRatingEnum string

const (
	ContentRatingMekuRatingEnumMekuUnspecified ContentRatingMekuRatingEnum = "mekuUnspecified"
	ContentRatingMekuRatingEnumMekuS           ContentRatingMekuRatingEnum = "mekuS"
	ContentRatingMekuRatingEnumMeku7           ContentRatingMekuRatingEnum = "meku7"
	ContentRatingMekuRatingEnumMeku12          ContentRatingMekuRatingEnum = "meku12"
	ContentRatingMekuRatingEnumMeku16          ContentRatingMekuRatingEnum = "meku16"
	ContentRatingMekuRatingEnumMeku18          ContentRatingMekuRatingEnum = "meku18"
	ContentRatingMekuRatingEnumMekuUnrated     ContentRatingMekuRatingEnum = "mekuUnrated"
)

func (e ContentRatingMekuRatingEnum) ToPointer() *ContentRatingMekuRatingEnum {
	return &e
}

func (e *ContentRatingMekuRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mekuUnspecified":
		fallthrough
	case "mekuS":
		fallthrough
	case "meku7":
		fallthrough
	case "meku12":
		fallthrough
	case "meku16":
		fallthrough
	case "meku18":
		fallthrough
	case "mekuUnrated":
		*e = ContentRatingMekuRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMekuRatingEnum: %v", v)
	}
}

// ContentRatingMenaMpaaRatingEnum - The rating system for MENA countries, a clone of MPAA. It is needed to prevent titles go live w/o additional QC check, since some of them can be inappropriate for the countries at all. See b/33408548 for more details.
type ContentRatingMenaMpaaRatingEnum string

const (
	ContentRatingMenaMpaaRatingEnumMenaMpaaUnspecified ContentRatingMenaMpaaRatingEnum = "menaMpaaUnspecified"
	ContentRatingMenaMpaaRatingEnumMenaMpaaG           ContentRatingMenaMpaaRatingEnum = "menaMpaaG"
	ContentRatingMenaMpaaRatingEnumMenaMpaaPg          ContentRatingMenaMpaaRatingEnum = "menaMpaaPg"
	ContentRatingMenaMpaaRatingEnumMenaMpaaPg13        ContentRatingMenaMpaaRatingEnum = "menaMpaaPg13"
	ContentRatingMenaMpaaRatingEnumMenaMpaaR           ContentRatingMenaMpaaRatingEnum = "menaMpaaR"
	ContentRatingMenaMpaaRatingEnumMenaMpaaUnrated     ContentRatingMenaMpaaRatingEnum = "menaMpaaUnrated"
)

func (e ContentRatingMenaMpaaRatingEnum) ToPointer() *ContentRatingMenaMpaaRatingEnum {
	return &e
}

func (e *ContentRatingMenaMpaaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "menaMpaaUnspecified":
		fallthrough
	case "menaMpaaG":
		fallthrough
	case "menaMpaaPg":
		fallthrough
	case "menaMpaaPg13":
		fallthrough
	case "menaMpaaR":
		fallthrough
	case "menaMpaaUnrated":
		*e = ContentRatingMenaMpaaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMenaMpaaRatingEnum: %v", v)
	}
}

// ContentRatingMibacRatingEnum - The video's rating from the Ministero dei Beni e delle Attività Culturali e del Turismo (Italy).
type ContentRatingMibacRatingEnum string

const (
	ContentRatingMibacRatingEnumMibacUnspecified ContentRatingMibacRatingEnum = "mibacUnspecified"
	ContentRatingMibacRatingEnumMibacT           ContentRatingMibacRatingEnum = "mibacT"
	ContentRatingMibacRatingEnumMibacVap         ContentRatingMibacRatingEnum = "mibacVap"
	ContentRatingMibacRatingEnumMibacVm6         ContentRatingMibacRatingEnum = "mibacVm6"
	ContentRatingMibacRatingEnumMibacVm12        ContentRatingMibacRatingEnum = "mibacVm12"
	ContentRatingMibacRatingEnumMibacVm14        ContentRatingMibacRatingEnum = "mibacVm14"
	ContentRatingMibacRatingEnumMibacVm16        ContentRatingMibacRatingEnum = "mibacVm16"
	ContentRatingMibacRatingEnumMibacVm18        ContentRatingMibacRatingEnum = "mibacVm18"
	ContentRatingMibacRatingEnumMibacUnrated     ContentRatingMibacRatingEnum = "mibacUnrated"
)

func (e ContentRatingMibacRatingEnum) ToPointer() *ContentRatingMibacRatingEnum {
	return &e
}

func (e *ContentRatingMibacRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mibacUnspecified":
		fallthrough
	case "mibacT":
		fallthrough
	case "mibacVap":
		fallthrough
	case "mibacVm6":
		fallthrough
	case "mibacVm12":
		fallthrough
	case "mibacVm14":
		fallthrough
	case "mibacVm16":
		fallthrough
	case "mibacVm18":
		fallthrough
	case "mibacUnrated":
		*e = ContentRatingMibacRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMibacRatingEnum: %v", v)
	}
}

// ContentRatingMocRatingEnum - The video's Ministerio de Cultura (Colombia) rating.
type ContentRatingMocRatingEnum string

const (
	ContentRatingMocRatingEnumMocUnspecified ContentRatingMocRatingEnum = "mocUnspecified"
	ContentRatingMocRatingEnumMocE           ContentRatingMocRatingEnum = "mocE"
	ContentRatingMocRatingEnumMocT           ContentRatingMocRatingEnum = "mocT"
	ContentRatingMocRatingEnumMoc7           ContentRatingMocRatingEnum = "moc7"
	ContentRatingMocRatingEnumMoc12          ContentRatingMocRatingEnum = "moc12"
	ContentRatingMocRatingEnumMoc15          ContentRatingMocRatingEnum = "moc15"
	ContentRatingMocRatingEnumMoc18          ContentRatingMocRatingEnum = "moc18"
	ContentRatingMocRatingEnumMocX           ContentRatingMocRatingEnum = "mocX"
	ContentRatingMocRatingEnumMocBanned      ContentRatingMocRatingEnum = "mocBanned"
	ContentRatingMocRatingEnumMocUnrated     ContentRatingMocRatingEnum = "mocUnrated"
)

func (e ContentRatingMocRatingEnum) ToPointer() *ContentRatingMocRatingEnum {
	return &e
}

func (e *ContentRatingMocRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mocUnspecified":
		fallthrough
	case "mocE":
		fallthrough
	case "mocT":
		fallthrough
	case "moc7":
		fallthrough
	case "moc12":
		fallthrough
	case "moc15":
		fallthrough
	case "moc18":
		fallthrough
	case "mocX":
		fallthrough
	case "mocBanned":
		fallthrough
	case "mocUnrated":
		*e = ContentRatingMocRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMocRatingEnum: %v", v)
	}
}

// ContentRatingMoctwRatingEnum - The video's rating from Taiwan's Ministry of Culture (文化部).
type ContentRatingMoctwRatingEnum string

const (
	ContentRatingMoctwRatingEnumMoctwUnspecified ContentRatingMoctwRatingEnum = "moctwUnspecified"
	ContentRatingMoctwRatingEnumMoctwG           ContentRatingMoctwRatingEnum = "moctwG"
	ContentRatingMoctwRatingEnumMoctwP           ContentRatingMoctwRatingEnum = "moctwP"
	ContentRatingMoctwRatingEnumMoctwPg          ContentRatingMoctwRatingEnum = "moctwPg"
	ContentRatingMoctwRatingEnumMoctwR           ContentRatingMoctwRatingEnum = "moctwR"
	ContentRatingMoctwRatingEnumMoctwUnrated     ContentRatingMoctwRatingEnum = "moctwUnrated"
	ContentRatingMoctwRatingEnumMoctwR12         ContentRatingMoctwRatingEnum = "moctwR12"
	ContentRatingMoctwRatingEnumMoctwR15         ContentRatingMoctwRatingEnum = "moctwR15"
)

func (e ContentRatingMoctwRatingEnum) ToPointer() *ContentRatingMoctwRatingEnum {
	return &e
}

func (e *ContentRatingMoctwRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "moctwUnspecified":
		fallthrough
	case "moctwG":
		fallthrough
	case "moctwP":
		fallthrough
	case "moctwPg":
		fallthrough
	case "moctwR":
		fallthrough
	case "moctwUnrated":
		fallthrough
	case "moctwR12":
		fallthrough
	case "moctwR15":
		*e = ContentRatingMoctwRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMoctwRatingEnum: %v", v)
	}
}

// ContentRatingMpaaRatingEnum - The video's Motion Picture Association of America (MPAA) rating.
type ContentRatingMpaaRatingEnum string

const (
	ContentRatingMpaaRatingEnumMpaaUnspecified ContentRatingMpaaRatingEnum = "mpaaUnspecified"
	ContentRatingMpaaRatingEnumMpaaG           ContentRatingMpaaRatingEnum = "mpaaG"
	ContentRatingMpaaRatingEnumMpaaPg          ContentRatingMpaaRatingEnum = "mpaaPg"
	ContentRatingMpaaRatingEnumMpaaPg13        ContentRatingMpaaRatingEnum = "mpaaPg13"
	ContentRatingMpaaRatingEnumMpaaR           ContentRatingMpaaRatingEnum = "mpaaR"
	ContentRatingMpaaRatingEnumMpaaNc17        ContentRatingMpaaRatingEnum = "mpaaNc17"
	ContentRatingMpaaRatingEnumMpaaX           ContentRatingMpaaRatingEnum = "mpaaX"
	ContentRatingMpaaRatingEnumMpaaUnrated     ContentRatingMpaaRatingEnum = "mpaaUnrated"
)

func (e ContentRatingMpaaRatingEnum) ToPointer() *ContentRatingMpaaRatingEnum {
	return &e
}

func (e *ContentRatingMpaaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mpaaUnspecified":
		fallthrough
	case "mpaaG":
		fallthrough
	case "mpaaPg":
		fallthrough
	case "mpaaPg13":
		fallthrough
	case "mpaaR":
		fallthrough
	case "mpaaNc17":
		fallthrough
	case "mpaaX":
		fallthrough
	case "mpaaUnrated":
		*e = ContentRatingMpaaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMpaaRatingEnum: %v", v)
	}
}

// ContentRatingMpaatRatingEnum - The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.
type ContentRatingMpaatRatingEnum string

const (
	ContentRatingMpaatRatingEnumMpaatUnspecified ContentRatingMpaatRatingEnum = "mpaatUnspecified"
	ContentRatingMpaatRatingEnumMpaatGb          ContentRatingMpaatRatingEnum = "mpaatGb"
	ContentRatingMpaatRatingEnumMpaatRb          ContentRatingMpaatRatingEnum = "mpaatRb"
)

func (e ContentRatingMpaatRatingEnum) ToPointer() *ContentRatingMpaatRatingEnum {
	return &e
}

func (e *ContentRatingMpaatRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mpaatUnspecified":
		fallthrough
	case "mpaatGb":
		fallthrough
	case "mpaatRb":
		*e = ContentRatingMpaatRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMpaatRatingEnum: %v", v)
	}
}

// ContentRatingMtrcbRatingEnum - The video's rating from the Movie and Television Review and Classification Board (Philippines).
type ContentRatingMtrcbRatingEnum string

const (
	ContentRatingMtrcbRatingEnumMtrcbUnspecified ContentRatingMtrcbRatingEnum = "mtrcbUnspecified"
	ContentRatingMtrcbRatingEnumMtrcbG           ContentRatingMtrcbRatingEnum = "mtrcbG"
	ContentRatingMtrcbRatingEnumMtrcbPg          ContentRatingMtrcbRatingEnum = "mtrcbPg"
	ContentRatingMtrcbRatingEnumMtrcbR13         ContentRatingMtrcbRatingEnum = "mtrcbR13"
	ContentRatingMtrcbRatingEnumMtrcbR16         ContentRatingMtrcbRatingEnum = "mtrcbR16"
	ContentRatingMtrcbRatingEnumMtrcbR18         ContentRatingMtrcbRatingEnum = "mtrcbR18"
	ContentRatingMtrcbRatingEnumMtrcbX           ContentRatingMtrcbRatingEnum = "mtrcbX"
	ContentRatingMtrcbRatingEnumMtrcbUnrated     ContentRatingMtrcbRatingEnum = "mtrcbUnrated"
)

func (e ContentRatingMtrcbRatingEnum) ToPointer() *ContentRatingMtrcbRatingEnum {
	return &e
}

func (e *ContentRatingMtrcbRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mtrcbUnspecified":
		fallthrough
	case "mtrcbG":
		fallthrough
	case "mtrcbPg":
		fallthrough
	case "mtrcbR13":
		fallthrough
	case "mtrcbR16":
		fallthrough
	case "mtrcbR18":
		fallthrough
	case "mtrcbX":
		fallthrough
	case "mtrcbUnrated":
		*e = ContentRatingMtrcbRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingMtrcbRatingEnum: %v", v)
	}
}

// ContentRatingNbcRatingEnum - The video's rating from the Maldives National Bureau of Classification.
type ContentRatingNbcRatingEnum string

const (
	ContentRatingNbcRatingEnumNbcUnspecified ContentRatingNbcRatingEnum = "nbcUnspecified"
	ContentRatingNbcRatingEnumNbcG           ContentRatingNbcRatingEnum = "nbcG"
	ContentRatingNbcRatingEnumNbcPg          ContentRatingNbcRatingEnum = "nbcPg"
	ContentRatingNbcRatingEnumNbc12plus      ContentRatingNbcRatingEnum = "nbc12plus"
	ContentRatingNbcRatingEnumNbc15plus      ContentRatingNbcRatingEnum = "nbc15plus"
	ContentRatingNbcRatingEnumNbc18plus      ContentRatingNbcRatingEnum = "nbc18plus"
	ContentRatingNbcRatingEnumNbc18plusr     ContentRatingNbcRatingEnum = "nbc18plusr"
	ContentRatingNbcRatingEnumNbcPu          ContentRatingNbcRatingEnum = "nbcPu"
	ContentRatingNbcRatingEnumNbcUnrated     ContentRatingNbcRatingEnum = "nbcUnrated"
)

func (e ContentRatingNbcRatingEnum) ToPointer() *ContentRatingNbcRatingEnum {
	return &e
}

func (e *ContentRatingNbcRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nbcUnspecified":
		fallthrough
	case "nbcG":
		fallthrough
	case "nbcPg":
		fallthrough
	case "nbc12plus":
		fallthrough
	case "nbc15plus":
		fallthrough
	case "nbc18plus":
		fallthrough
	case "nbc18plusr":
		fallthrough
	case "nbcPu":
		fallthrough
	case "nbcUnrated":
		*e = ContentRatingNbcRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingNbcRatingEnum: %v", v)
	}
}

// ContentRatingNbcplRatingEnum - The video's rating in Poland.
type ContentRatingNbcplRatingEnum string

const (
	ContentRatingNbcplRatingEnumNbcplUnspecified ContentRatingNbcplRatingEnum = "nbcplUnspecified"
	ContentRatingNbcplRatingEnumNbcplI           ContentRatingNbcplRatingEnum = "nbcplI"
	ContentRatingNbcplRatingEnumNbcplIi          ContentRatingNbcplRatingEnum = "nbcplIi"
	ContentRatingNbcplRatingEnumNbcplIii         ContentRatingNbcplRatingEnum = "nbcplIii"
	ContentRatingNbcplRatingEnumNbcplIv          ContentRatingNbcplRatingEnum = "nbcplIv"
	ContentRatingNbcplRatingEnumNbcpl18plus      ContentRatingNbcplRatingEnum = "nbcpl18plus"
	ContentRatingNbcplRatingEnumNbcplUnrated     ContentRatingNbcplRatingEnum = "nbcplUnrated"
)

func (e ContentRatingNbcplRatingEnum) ToPointer() *ContentRatingNbcplRatingEnum {
	return &e
}

func (e *ContentRatingNbcplRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nbcplUnspecified":
		fallthrough
	case "nbcplI":
		fallthrough
	case "nbcplIi":
		fallthrough
	case "nbcplIii":
		fallthrough
	case "nbcplIv":
		fallthrough
	case "nbcpl18plus":
		fallthrough
	case "nbcplUnrated":
		*e = ContentRatingNbcplRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingNbcplRatingEnum: %v", v)
	}
}

// ContentRatingNfrcRatingEnum - The video's rating from the Bulgarian National Film Center.
type ContentRatingNfrcRatingEnum string

const (
	ContentRatingNfrcRatingEnumNfrcUnspecified ContentRatingNfrcRatingEnum = "nfrcUnspecified"
	ContentRatingNfrcRatingEnumNfrcA           ContentRatingNfrcRatingEnum = "nfrcA"
	ContentRatingNfrcRatingEnumNfrcB           ContentRatingNfrcRatingEnum = "nfrcB"
	ContentRatingNfrcRatingEnumNfrcC           ContentRatingNfrcRatingEnum = "nfrcC"
	ContentRatingNfrcRatingEnumNfrcD           ContentRatingNfrcRatingEnum = "nfrcD"
	ContentRatingNfrcRatingEnumNfrcX           ContentRatingNfrcRatingEnum = "nfrcX"
	ContentRatingNfrcRatingEnumNfrcUnrated     ContentRatingNfrcRatingEnum = "nfrcUnrated"
)

func (e ContentRatingNfrcRatingEnum) ToPointer() *ContentRatingNfrcRatingEnum {
	return &e
}

func (e *ContentRatingNfrcRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nfrcUnspecified":
		fallthrough
	case "nfrcA":
		fallthrough
	case "nfrcB":
		fallthrough
	case "nfrcC":
		fallthrough
	case "nfrcD":
		fallthrough
	case "nfrcX":
		fallthrough
	case "nfrcUnrated":
		*e = ContentRatingNfrcRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingNfrcRatingEnum: %v", v)
	}
}

// ContentRatingNfvcbRatingEnum - The video's rating from Nigeria's National Film and Video Censors Board.
type ContentRatingNfvcbRatingEnum string

const (
	ContentRatingNfvcbRatingEnumNfvcbUnspecified ContentRatingNfvcbRatingEnum = "nfvcbUnspecified"
	ContentRatingNfvcbRatingEnumNfvcbG           ContentRatingNfvcbRatingEnum = "nfvcbG"
	ContentRatingNfvcbRatingEnumNfvcbPg          ContentRatingNfvcbRatingEnum = "nfvcbPg"
	ContentRatingNfvcbRatingEnumNfvcb12          ContentRatingNfvcbRatingEnum = "nfvcb12"
	ContentRatingNfvcbRatingEnumNfvcb12a         ContentRatingNfvcbRatingEnum = "nfvcb12a"
	ContentRatingNfvcbRatingEnumNfvcb15          ContentRatingNfvcbRatingEnum = "nfvcb15"
	ContentRatingNfvcbRatingEnumNfvcb18          ContentRatingNfvcbRatingEnum = "nfvcb18"
	ContentRatingNfvcbRatingEnumNfvcbRe          ContentRatingNfvcbRatingEnum = "nfvcbRe"
	ContentRatingNfvcbRatingEnumNfvcbUnrated     ContentRatingNfvcbRatingEnum = "nfvcbUnrated"
)

func (e ContentRatingNfvcbRatingEnum) ToPointer() *ContentRatingNfvcbRatingEnum {
	return &e
}

func (e *ContentRatingNfvcbRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nfvcbUnspecified":
		fallthrough
	case "nfvcbG":
		fallthrough
	case "nfvcbPg":
		fallthrough
	case "nfvcb12":
		fallthrough
	case "nfvcb12a":
		fallthrough
	case "nfvcb15":
		fallthrough
	case "nfvcb18":
		fallthrough
	case "nfvcbRe":
		fallthrough
	case "nfvcbUnrated":
		*e = ContentRatingNfvcbRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingNfvcbRatingEnum: %v", v)
	}
}

// ContentRatingNkclvRatingEnum - The video's rating from the Nacionãlais Kino centrs (National Film Centre of Latvia).
type ContentRatingNkclvRatingEnum string

const (
	ContentRatingNkclvRatingEnumNkclvUnspecified ContentRatingNkclvRatingEnum = "nkclvUnspecified"
	ContentRatingNkclvRatingEnumNkclvU           ContentRatingNkclvRatingEnum = "nkclvU"
	ContentRatingNkclvRatingEnumNkclv7plus       ContentRatingNkclvRatingEnum = "nkclv7plus"
	ContentRatingNkclvRatingEnumNkclv12plus      ContentRatingNkclvRatingEnum = "nkclv12plus"
	ContentRatingNkclvRatingEnumNkclv16plus      ContentRatingNkclvRatingEnum = "nkclv16plus"
	ContentRatingNkclvRatingEnumNkclv18plus      ContentRatingNkclvRatingEnum = "nkclv18plus"
	ContentRatingNkclvRatingEnumNkclvUnrated     ContentRatingNkclvRatingEnum = "nkclvUnrated"
)

func (e ContentRatingNkclvRatingEnum) ToPointer() *ContentRatingNkclvRatingEnum {
	return &e
}

func (e *ContentRatingNkclvRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nkclvUnspecified":
		fallthrough
	case "nkclvU":
		fallthrough
	case "nkclv7plus":
		fallthrough
	case "nkclv12plus":
		fallthrough
	case "nkclv16plus":
		fallthrough
	case "nkclv18plus":
		fallthrough
	case "nkclvUnrated":
		*e = ContentRatingNkclvRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingNkclvRatingEnum: %v", v)
	}
}

// ContentRatingNmcRatingEnum - The National Media Council ratings system for United Arab Emirates.
type ContentRatingNmcRatingEnum string

const (
	ContentRatingNmcRatingEnumNmcUnspecified ContentRatingNmcRatingEnum = "nmcUnspecified"
	ContentRatingNmcRatingEnumNmcG           ContentRatingNmcRatingEnum = "nmcG"
	ContentRatingNmcRatingEnumNmcPg          ContentRatingNmcRatingEnum = "nmcPg"
	ContentRatingNmcRatingEnumNmcPg13        ContentRatingNmcRatingEnum = "nmcPg13"
	ContentRatingNmcRatingEnumNmcPg15        ContentRatingNmcRatingEnum = "nmcPg15"
	ContentRatingNmcRatingEnumNmc15plus      ContentRatingNmcRatingEnum = "nmc15plus"
	ContentRatingNmcRatingEnumNmc18plus      ContentRatingNmcRatingEnum = "nmc18plus"
	ContentRatingNmcRatingEnumNmc18tc        ContentRatingNmcRatingEnum = "nmc18tc"
	ContentRatingNmcRatingEnumNmcUnrated     ContentRatingNmcRatingEnum = "nmcUnrated"
)

func (e ContentRatingNmcRatingEnum) ToPointer() *ContentRatingNmcRatingEnum {
	return &e
}

func (e *ContentRatingNmcRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nmcUnspecified":
		fallthrough
	case "nmcG":
		fallthrough
	case "nmcPg":
		fallthrough
	case "nmcPg13":
		fallthrough
	case "nmcPg15":
		fallthrough
	case "nmc15plus":
		fallthrough
	case "nmc18plus":
		fallthrough
	case "nmc18tc":
		fallthrough
	case "nmcUnrated":
		*e = ContentRatingNmcRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingNmcRatingEnum: %v", v)
	}
}

// ContentRatingOflcRatingEnum - The video's Office of Film and Literature Classification (OFLC - New Zealand) rating.
type ContentRatingOflcRatingEnum string

const (
	ContentRatingOflcRatingEnumOflcUnspecified ContentRatingOflcRatingEnum = "oflcUnspecified"
	ContentRatingOflcRatingEnumOflcG           ContentRatingOflcRatingEnum = "oflcG"
	ContentRatingOflcRatingEnumOflcPg          ContentRatingOflcRatingEnum = "oflcPg"
	ContentRatingOflcRatingEnumOflcM           ContentRatingOflcRatingEnum = "oflcM"
	ContentRatingOflcRatingEnumOflcR13         ContentRatingOflcRatingEnum = "oflcR13"
	ContentRatingOflcRatingEnumOflcR15         ContentRatingOflcRatingEnum = "oflcR15"
	ContentRatingOflcRatingEnumOflcR16         ContentRatingOflcRatingEnum = "oflcR16"
	ContentRatingOflcRatingEnumOflcR18         ContentRatingOflcRatingEnum = "oflcR18"
	ContentRatingOflcRatingEnumOflcUnrated     ContentRatingOflcRatingEnum = "oflcUnrated"
	ContentRatingOflcRatingEnumOflcRp13        ContentRatingOflcRatingEnum = "oflcRp13"
	ContentRatingOflcRatingEnumOflcRp16        ContentRatingOflcRatingEnum = "oflcRp16"
	ContentRatingOflcRatingEnumOflcRp18        ContentRatingOflcRatingEnum = "oflcRp18"
)

func (e ContentRatingOflcRatingEnum) ToPointer() *ContentRatingOflcRatingEnum {
	return &e
}

func (e *ContentRatingOflcRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oflcUnspecified":
		fallthrough
	case "oflcG":
		fallthrough
	case "oflcPg":
		fallthrough
	case "oflcM":
		fallthrough
	case "oflcR13":
		fallthrough
	case "oflcR15":
		fallthrough
	case "oflcR16":
		fallthrough
	case "oflcR18":
		fallthrough
	case "oflcUnrated":
		fallthrough
	case "oflcRp13":
		fallthrough
	case "oflcRp16":
		fallthrough
	case "oflcRp18":
		*e = ContentRatingOflcRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingOflcRatingEnum: %v", v)
	}
}

// ContentRatingPefilmRatingEnum - The video's rating in Peru.
type ContentRatingPefilmRatingEnum string

const (
	ContentRatingPefilmRatingEnumPefilmUnspecified ContentRatingPefilmRatingEnum = "pefilmUnspecified"
	ContentRatingPefilmRatingEnumPefilmPt          ContentRatingPefilmRatingEnum = "pefilmPt"
	ContentRatingPefilmRatingEnumPefilmPg          ContentRatingPefilmRatingEnum = "pefilmPg"
	ContentRatingPefilmRatingEnumPefilm14          ContentRatingPefilmRatingEnum = "pefilm14"
	ContentRatingPefilmRatingEnumPefilm18          ContentRatingPefilmRatingEnum = "pefilm18"
	ContentRatingPefilmRatingEnumPefilmUnrated     ContentRatingPefilmRatingEnum = "pefilmUnrated"
)

func (e ContentRatingPefilmRatingEnum) ToPointer() *ContentRatingPefilmRatingEnum {
	return &e
}

func (e *ContentRatingPefilmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pefilmUnspecified":
		fallthrough
	case "pefilmPt":
		fallthrough
	case "pefilmPg":
		fallthrough
	case "pefilm14":
		fallthrough
	case "pefilm18":
		fallthrough
	case "pefilmUnrated":
		*e = ContentRatingPefilmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingPefilmRatingEnum: %v", v)
	}
}

// ContentRatingRcnofRatingEnum - The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film.
type ContentRatingRcnofRatingEnum string

const (
	ContentRatingRcnofRatingEnumRcnofUnspecified ContentRatingRcnofRatingEnum = "rcnofUnspecified"
	ContentRatingRcnofRatingEnumRcnofI           ContentRatingRcnofRatingEnum = "rcnofI"
	ContentRatingRcnofRatingEnumRcnofIi          ContentRatingRcnofRatingEnum = "rcnofIi"
	ContentRatingRcnofRatingEnumRcnofIii         ContentRatingRcnofRatingEnum = "rcnofIii"
	ContentRatingRcnofRatingEnumRcnofIv          ContentRatingRcnofRatingEnum = "rcnofIv"
	ContentRatingRcnofRatingEnumRcnofV           ContentRatingRcnofRatingEnum = "rcnofV"
	ContentRatingRcnofRatingEnumRcnofVi          ContentRatingRcnofRatingEnum = "rcnofVi"
	ContentRatingRcnofRatingEnumRcnofUnrated     ContentRatingRcnofRatingEnum = "rcnofUnrated"
)

func (e ContentRatingRcnofRatingEnum) ToPointer() *ContentRatingRcnofRatingEnum {
	return &e
}

func (e *ContentRatingRcnofRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rcnofUnspecified":
		fallthrough
	case "rcnofI":
		fallthrough
	case "rcnofIi":
		fallthrough
	case "rcnofIii":
		fallthrough
	case "rcnofIv":
		fallthrough
	case "rcnofV":
		fallthrough
	case "rcnofVi":
		fallthrough
	case "rcnofUnrated":
		*e = ContentRatingRcnofRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingRcnofRatingEnum: %v", v)
	}
}

// ContentRatingResorteviolenciaRatingEnum - The video's rating in Venezuela.
type ContentRatingResorteviolenciaRatingEnum string

const (
	ContentRatingResorteviolenciaRatingEnumResorteviolenciaUnspecified ContentRatingResorteviolenciaRatingEnum = "resorteviolenciaUnspecified"
	ContentRatingResorteviolenciaRatingEnumResorteviolenciaA           ContentRatingResorteviolenciaRatingEnum = "resorteviolenciaA"
	ContentRatingResorteviolenciaRatingEnumResorteviolenciaB           ContentRatingResorteviolenciaRatingEnum = "resorteviolenciaB"
	ContentRatingResorteviolenciaRatingEnumResorteviolenciaC           ContentRatingResorteviolenciaRatingEnum = "resorteviolenciaC"
	ContentRatingResorteviolenciaRatingEnumResorteviolenciaD           ContentRatingResorteviolenciaRatingEnum = "resorteviolenciaD"
	ContentRatingResorteviolenciaRatingEnumResorteviolenciaE           ContentRatingResorteviolenciaRatingEnum = "resorteviolenciaE"
	ContentRatingResorteviolenciaRatingEnumResorteviolenciaUnrated     ContentRatingResorteviolenciaRatingEnum = "resorteviolenciaUnrated"
)

func (e ContentRatingResorteviolenciaRatingEnum) ToPointer() *ContentRatingResorteviolenciaRatingEnum {
	return &e
}

func (e *ContentRatingResorteviolenciaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "resorteviolenciaUnspecified":
		fallthrough
	case "resorteviolenciaA":
		fallthrough
	case "resorteviolenciaB":
		fallthrough
	case "resorteviolenciaC":
		fallthrough
	case "resorteviolenciaD":
		fallthrough
	case "resorteviolenciaE":
		fallthrough
	case "resorteviolenciaUnrated":
		*e = ContentRatingResorteviolenciaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingResorteviolenciaRatingEnum: %v", v)
	}
}

// ContentRatingRtcRatingEnum - The video's General Directorate of Radio, Television and Cinematography (Mexico) rating.
type ContentRatingRtcRatingEnum string

const (
	ContentRatingRtcRatingEnumRtcUnspecified ContentRatingRtcRatingEnum = "rtcUnspecified"
	ContentRatingRtcRatingEnumRtcAa          ContentRatingRtcRatingEnum = "rtcAa"
	ContentRatingRtcRatingEnumRtcA           ContentRatingRtcRatingEnum = "rtcA"
	ContentRatingRtcRatingEnumRtcB           ContentRatingRtcRatingEnum = "rtcB"
	ContentRatingRtcRatingEnumRtcB15         ContentRatingRtcRatingEnum = "rtcB15"
	ContentRatingRtcRatingEnumRtcC           ContentRatingRtcRatingEnum = "rtcC"
	ContentRatingRtcRatingEnumRtcD           ContentRatingRtcRatingEnum = "rtcD"
	ContentRatingRtcRatingEnumRtcUnrated     ContentRatingRtcRatingEnum = "rtcUnrated"
)

func (e ContentRatingRtcRatingEnum) ToPointer() *ContentRatingRtcRatingEnum {
	return &e
}

func (e *ContentRatingRtcRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rtcUnspecified":
		fallthrough
	case "rtcAa":
		fallthrough
	case "rtcA":
		fallthrough
	case "rtcB":
		fallthrough
	case "rtcB15":
		fallthrough
	case "rtcC":
		fallthrough
	case "rtcD":
		fallthrough
	case "rtcUnrated":
		*e = ContentRatingRtcRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingRtcRatingEnum: %v", v)
	}
}

// ContentRatingRteRatingEnum - The video's rating from Ireland's Raidió Teilifís Éireann.
type ContentRatingRteRatingEnum string

const (
	ContentRatingRteRatingEnumRteUnspecified ContentRatingRteRatingEnum = "rteUnspecified"
	ContentRatingRteRatingEnumRteGa          ContentRatingRteRatingEnum = "rteGa"
	ContentRatingRteRatingEnumRteCh          ContentRatingRteRatingEnum = "rteCh"
	ContentRatingRteRatingEnumRtePs          ContentRatingRteRatingEnum = "rtePs"
	ContentRatingRteRatingEnumRteMa          ContentRatingRteRatingEnum = "rteMa"
	ContentRatingRteRatingEnumRteUnrated     ContentRatingRteRatingEnum = "rteUnrated"
)

func (e ContentRatingRteRatingEnum) ToPointer() *ContentRatingRteRatingEnum {
	return &e
}

func (e *ContentRatingRteRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rteUnspecified":
		fallthrough
	case "rteGa":
		fallthrough
	case "rteCh":
		fallthrough
	case "rtePs":
		fallthrough
	case "rteMa":
		fallthrough
	case "rteUnrated":
		*e = ContentRatingRteRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingRteRatingEnum: %v", v)
	}
}

// ContentRatingRussiaRatingEnum - The video's National Film Registry of the Russian Federation (MKRF - Russia) rating.
type ContentRatingRussiaRatingEnum string

const (
	ContentRatingRussiaRatingEnumRussiaUnspecified ContentRatingRussiaRatingEnum = "russiaUnspecified"
	ContentRatingRussiaRatingEnumRussia0           ContentRatingRussiaRatingEnum = "russia0"
	ContentRatingRussiaRatingEnumRussia6           ContentRatingRussiaRatingEnum = "russia6"
	ContentRatingRussiaRatingEnumRussia12          ContentRatingRussiaRatingEnum = "russia12"
	ContentRatingRussiaRatingEnumRussia16          ContentRatingRussiaRatingEnum = "russia16"
	ContentRatingRussiaRatingEnumRussia18          ContentRatingRussiaRatingEnum = "russia18"
	ContentRatingRussiaRatingEnumRussiaUnrated     ContentRatingRussiaRatingEnum = "russiaUnrated"
)

func (e ContentRatingRussiaRatingEnum) ToPointer() *ContentRatingRussiaRatingEnum {
	return &e
}

func (e *ContentRatingRussiaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "russiaUnspecified":
		fallthrough
	case "russia0":
		fallthrough
	case "russia6":
		fallthrough
	case "russia12":
		fallthrough
	case "russia16":
		fallthrough
	case "russia18":
		fallthrough
	case "russiaUnrated":
		*e = ContentRatingRussiaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingRussiaRatingEnum: %v", v)
	}
}

// ContentRatingSkfilmRatingEnum - The video's rating in Slovakia.
type ContentRatingSkfilmRatingEnum string

const (
	ContentRatingSkfilmRatingEnumSkfilmUnspecified ContentRatingSkfilmRatingEnum = "skfilmUnspecified"
	ContentRatingSkfilmRatingEnumSkfilmG           ContentRatingSkfilmRatingEnum = "skfilmG"
	ContentRatingSkfilmRatingEnumSkfilmP2          ContentRatingSkfilmRatingEnum = "skfilmP2"
	ContentRatingSkfilmRatingEnumSkfilmP5          ContentRatingSkfilmRatingEnum = "skfilmP5"
	ContentRatingSkfilmRatingEnumSkfilmP8          ContentRatingSkfilmRatingEnum = "skfilmP8"
	ContentRatingSkfilmRatingEnumSkfilmUnrated     ContentRatingSkfilmRatingEnum = "skfilmUnrated"
)

func (e ContentRatingSkfilmRatingEnum) ToPointer() *ContentRatingSkfilmRatingEnum {
	return &e
}

func (e *ContentRatingSkfilmRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "skfilmUnspecified":
		fallthrough
	case "skfilmG":
		fallthrough
	case "skfilmP2":
		fallthrough
	case "skfilmP5":
		fallthrough
	case "skfilmP8":
		fallthrough
	case "skfilmUnrated":
		*e = ContentRatingSkfilmRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingSkfilmRatingEnum: %v", v)
	}
}

// ContentRatingSmaisRatingEnum - The video's rating in Iceland.
type ContentRatingSmaisRatingEnum string

const (
	ContentRatingSmaisRatingEnumSmaisUnspecified ContentRatingSmaisRatingEnum = "smaisUnspecified"
	ContentRatingSmaisRatingEnumSmaisL           ContentRatingSmaisRatingEnum = "smaisL"
	ContentRatingSmaisRatingEnumSmais7           ContentRatingSmaisRatingEnum = "smais7"
	ContentRatingSmaisRatingEnumSmais12          ContentRatingSmaisRatingEnum = "smais12"
	ContentRatingSmaisRatingEnumSmais14          ContentRatingSmaisRatingEnum = "smais14"
	ContentRatingSmaisRatingEnumSmais16          ContentRatingSmaisRatingEnum = "smais16"
	ContentRatingSmaisRatingEnumSmais18          ContentRatingSmaisRatingEnum = "smais18"
	ContentRatingSmaisRatingEnumSmaisUnrated     ContentRatingSmaisRatingEnum = "smaisUnrated"
)

func (e ContentRatingSmaisRatingEnum) ToPointer() *ContentRatingSmaisRatingEnum {
	return &e
}

func (e *ContentRatingSmaisRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "smaisUnspecified":
		fallthrough
	case "smaisL":
		fallthrough
	case "smais7":
		fallthrough
	case "smais12":
		fallthrough
	case "smais14":
		fallthrough
	case "smais16":
		fallthrough
	case "smais18":
		fallthrough
	case "smaisUnrated":
		*e = ContentRatingSmaisRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingSmaisRatingEnum: %v", v)
	}
}

// ContentRatingSmsaRatingEnum - The video's rating from Statens medieråd (Sweden's National Media Council).
type ContentRatingSmsaRatingEnum string

const (
	ContentRatingSmsaRatingEnumSmsaUnspecified ContentRatingSmsaRatingEnum = "smsaUnspecified"
	ContentRatingSmsaRatingEnumSmsaA           ContentRatingSmsaRatingEnum = "smsaA"
	ContentRatingSmsaRatingEnumSmsa7           ContentRatingSmsaRatingEnum = "smsa7"
	ContentRatingSmsaRatingEnumSmsa11          ContentRatingSmsaRatingEnum = "smsa11"
	ContentRatingSmsaRatingEnumSmsa15          ContentRatingSmsaRatingEnum = "smsa15"
	ContentRatingSmsaRatingEnumSmsaUnrated     ContentRatingSmsaRatingEnum = "smsaUnrated"
)

func (e ContentRatingSmsaRatingEnum) ToPointer() *ContentRatingSmsaRatingEnum {
	return &e
}

func (e *ContentRatingSmsaRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "smsaUnspecified":
		fallthrough
	case "smsaA":
		fallthrough
	case "smsa7":
		fallthrough
	case "smsa11":
		fallthrough
	case "smsa15":
		fallthrough
	case "smsaUnrated":
		*e = ContentRatingSmsaRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingSmsaRatingEnum: %v", v)
	}
}

// ContentRatingTvpgRatingEnum - The video's TV Parental Guidelines (TVPG) rating.
type ContentRatingTvpgRatingEnum string

const (
	ContentRatingTvpgRatingEnumTvpgUnspecified ContentRatingTvpgRatingEnum = "tvpgUnspecified"
	ContentRatingTvpgRatingEnumTvpgY           ContentRatingTvpgRatingEnum = "tvpgY"
	ContentRatingTvpgRatingEnumTvpgY7          ContentRatingTvpgRatingEnum = "tvpgY7"
	ContentRatingTvpgRatingEnumTvpgY7Fv        ContentRatingTvpgRatingEnum = "tvpgY7Fv"
	ContentRatingTvpgRatingEnumTvpgG           ContentRatingTvpgRatingEnum = "tvpgG"
	ContentRatingTvpgRatingEnumTvpgPg          ContentRatingTvpgRatingEnum = "tvpgPg"
	ContentRatingTvpgRatingEnumPg14            ContentRatingTvpgRatingEnum = "pg14"
	ContentRatingTvpgRatingEnumTvpgMa          ContentRatingTvpgRatingEnum = "tvpgMa"
	ContentRatingTvpgRatingEnumTvpgUnrated     ContentRatingTvpgRatingEnum = "tvpgUnrated"
)

func (e ContentRatingTvpgRatingEnum) ToPointer() *ContentRatingTvpgRatingEnum {
	return &e
}

func (e *ContentRatingTvpgRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tvpgUnspecified":
		fallthrough
	case "tvpgY":
		fallthrough
	case "tvpgY7":
		fallthrough
	case "tvpgY7Fv":
		fallthrough
	case "tvpgG":
		fallthrough
	case "tvpgPg":
		fallthrough
	case "pg14":
		fallthrough
	case "tvpgMa":
		fallthrough
	case "tvpgUnrated":
		*e = ContentRatingTvpgRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingTvpgRatingEnum: %v", v)
	}
}

// ContentRatingYtRatingEnum - A rating that YouTube uses to identify age-restricted content.
type ContentRatingYtRatingEnum string

const (
	ContentRatingYtRatingEnumYtUnspecified   ContentRatingYtRatingEnum = "ytUnspecified"
	ContentRatingYtRatingEnumYtAgeRestricted ContentRatingYtRatingEnum = "ytAgeRestricted"
)

func (e ContentRatingYtRatingEnum) ToPointer() *ContentRatingYtRatingEnum {
	return &e
}

func (e *ContentRatingYtRatingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ytUnspecified":
		fallthrough
	case "ytAgeRestricted":
		*e = ContentRatingYtRatingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentRatingYtRatingEnum: %v", v)
	}
}

// ContentRating - Ratings schemes. The country-specific ratings are mostly for movies and shows. LINT.IfChange
type ContentRating struct {
	// The video's Australian Classification Board (ACB) or Australian Communications and Media Authority (ACMA) rating. ACMA ratings are used to classify children's television programming.
	AcbRating *ContentRatingAcbRatingEnum `json:"acbRating,omitempty"`
	// The video's rating from Italy's Autorità per le Garanzie nelle Comunicazioni (AGCOM).
	AgcomRating *ContentRatingAgcomRatingEnum `json:"agcomRating,omitempty"`
	// The video's Anatel (Asociación Nacional de Televisión) rating for Chilean television.
	AnatelRating *ContentRatingAnatelRatingEnum `json:"anatelRating,omitempty"`
	// The video's British Board of Film Classification (BBFC) rating.
	BbfcRating *ContentRatingBbfcRatingEnum `json:"bbfcRating,omitempty"`
	// The video's rating from Thailand's Board of Film and Video Censors.
	BfvcRating *ContentRatingBfvcRatingEnum `json:"bfvcRating,omitempty"`
	// The video's rating from the Austrian Board of Media Classification (Bundesministerium für Unterricht, Kunst und Kultur).
	BmukkRating *ContentRatingBmukkRatingEnum `json:"bmukkRating,omitempty"`
	// Rating system for Canadian TV - Canadian TV Classification System The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian English-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
	CatvRating *ContentRatingCatvRatingEnum `json:"catvRating,omitempty"`
	// The video's rating from the Canadian Radio-Television and Telecommunications Commission (CRTC) for Canadian French-language broadcasts. For more information, see the Canadian Broadcast Standards Council website.
	CatvfrRating *ContentRatingCatvfrRatingEnum `json:"catvfrRating,omitempty"`
	// The video's Central Board of Film Certification (CBFC - India) rating.
	CbfcRating *ContentRatingCbfcRatingEnum `json:"cbfcRating,omitempty"`
	// The video's Consejo de Calificación Cinematográfica (Chile) rating.
	CccRating *ContentRatingCccRatingEnum `json:"cccRating,omitempty"`
	// The video's rating from Portugal's Comissão de Classificação de Espect´culos.
	CceRating *ContentRatingCceRatingEnum `json:"cceRating,omitempty"`
	// The video's rating in Switzerland.
	ChfilmRating *ContentRatingChfilmRatingEnum `json:"chfilmRating,omitempty"`
	// The video's Canadian Home Video Rating System (CHVRS) rating.
	ChvrsRating *ContentRatingChvrsRatingEnum `json:"chvrsRating,omitempty"`
	// The video's rating from the Commission de Contrôle des Films (Belgium).
	CicfRating *ContentRatingCicfRatingEnum `json:"cicfRating,omitempty"`
	// The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI (CNA).
	CnaRating *ContentRatingCnaRatingEnum `json:"cnaRating,omitempty"`
	// Rating system in France - Commission de classification cinematographique
	CncRating *ContentRatingCncRatingEnum `json:"cncRating,omitempty"`
	// The video's rating from France's Conseil supérieur de l’audiovisuel, which rates broadcast content.
	CsaRating *ContentRatingCsaRatingEnum `json:"csaRating,omitempty"`
	// The video's rating from Luxembourg's Commission de surveillance de la classification des films (CSCF).
	CscfRating *ContentRatingCscfRatingEnum `json:"cscfRating,omitempty"`
	// The video's rating in the Czech Republic.
	CzfilmRating *ContentRatingCzfilmRatingEnum `json:"czfilmRating,omitempty"`
	// The video's Departamento de Justiça, Classificação, Qualificação e Títulos (DJCQT - Brazil) rating.
	DjctqRating *ContentRatingDjctqRatingEnum `json:"djctqRating,omitempty"`
	// Reasons that explain why the video received its DJCQT (Brazil) rating.
	DjctqRatingReasons []ContentRatingDjctqRatingReasonsEnum `json:"djctqRatingReasons,omitempty"`
	// Rating system in Turkey - Evaluation and Classification Board of the Ministry of Culture and Tourism
	EcbmctRating *ContentRatingEcbmctRatingEnum `json:"ecbmctRating,omitempty"`
	// The video's rating in Estonia.
	EefilmRating *ContentRatingEefilmRatingEnum `json:"eefilmRating,omitempty"`
	// The video's rating in Egypt.
	EgfilmRating *ContentRatingEgfilmRatingEnum `json:"egfilmRating,omitempty"`
	// The video's Eirin (映倫) rating. Eirin is the Japanese rating system.
	EirinRating *ContentRatingEirinRatingEnum `json:"eirinRating,omitempty"`
	// The video's rating from Malaysia's Film Censorship Board.
	FcbmRating *ContentRatingFcbmRatingEnum `json:"fcbmRating,omitempty"`
	// The video's rating from Hong Kong's Office for Film, Newspaper and Article Administration.
	FcoRating *ContentRatingFcoRatingEnum `json:"fcoRating,omitempty"`
	// This property has been deprecated. Use the contentDetails.contentRating.cncRating instead.
	FmocRating *ContentRatingFmocRatingEnum `json:"fmocRating,omitempty"`
	// The video's rating from South Africa's Film and Publication Board.
	FpbRating *ContentRatingFpbRatingEnum `json:"fpbRating,omitempty"`
	// Reasons that explain why the video received its FPB (South Africa) rating.
	FpbRatingReasons []ContentRatingFpbRatingReasonsEnum `json:"fpbRatingReasons,omitempty"`
	// The video's Freiwillige Selbstkontrolle der Filmwirtschaft (FSK - Germany) rating.
	FskRating *ContentRatingFskRatingEnum `json:"fskRating,omitempty"`
	// The video's rating in Greece.
	GrfilmRating *ContentRatingGrfilmRatingEnum `json:"grfilmRating,omitempty"`
	// The video's Instituto de la Cinematografía y de las Artes Audiovisuales (ICAA - Spain) rating.
	IcaaRating *ContentRatingIcaaRatingEnum `json:"icaaRating,omitempty"`
	// The video's Irish Film Classification Office (IFCO - Ireland) rating. See the IFCO website for more information.
	IfcoRating *ContentRatingIfcoRatingEnum `json:"ifcoRating,omitempty"`
	// The video's rating in Israel.
	IlfilmRating *ContentRatingIlfilmRatingEnum `json:"ilfilmRating,omitempty"`
	// The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales - Argentina) rating.
	IncaaRating *ContentRatingIncaaRatingEnum `json:"incaaRating,omitempty"`
	// The video's rating from the Kenya Film Classification Board.
	KfcbRating *ContentRatingKfcbRatingEnum `json:"kfcbRating,omitempty"`
	// The video's NICAM/Kijkwijzer rating from the Nederlands Instituut voor de Classificatie van Audiovisuele Media (Netherlands).
	KijkwijzerRating *ContentRatingKijkwijzerRatingEnum `json:"kijkwijzerRating,omitempty"`
	// The video's Korea Media Rating Board (영상물등급위원회) rating. The KMRB rates videos in South Korea.
	KmrbRating *ContentRatingKmrbRatingEnum `json:"kmrbRating,omitempty"`
	// The video's rating from Indonesia's Lembaga Sensor Film.
	LsfRating *ContentRatingLsfRatingEnum `json:"lsfRating,omitempty"`
	// The video's rating from Malta's Film Age-Classification Board.
	MccaaRating *ContentRatingMccaaRatingEnum `json:"mccaaRating,omitempty"`
	// The video's rating from the Danish Film Institute's (Det Danske Filminstitut) Media Council for Children and Young People.
	MccypRating *ContentRatingMccypRatingEnum `json:"mccypRating,omitempty"`
	// The video's rating system for Vietnam - MCST
	McstRating *ContentRatingMcstRatingEnum `json:"mcstRating,omitempty"`
	// The video's rating from Singapore's Media Development Authority (MDA) and, specifically, it's Board of Film Censors (BFC).
	MdaRating *ContentRatingMdaRatingEnum `json:"mdaRating,omitempty"`
	// The video's rating from Medietilsynet, the Norwegian Media Authority.
	MedietilsynetRating *ContentRatingMedietilsynetRatingEnum `json:"medietilsynetRating,omitempty"`
	// The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti (National Audiovisual Institute).
	MekuRating *ContentRatingMekuRatingEnum `json:"mekuRating,omitempty"`
	// The rating system for MENA countries, a clone of MPAA. It is needed to prevent titles go live w/o additional QC check, since some of them can be inappropriate for the countries at all. See b/33408548 for more details.
	MenaMpaaRating *ContentRatingMenaMpaaRatingEnum `json:"menaMpaaRating,omitempty"`
	// The video's rating from the Ministero dei Beni e delle Attività Culturali e del Turismo (Italy).
	MibacRating *ContentRatingMibacRatingEnum `json:"mibacRating,omitempty"`
	// The video's Ministerio de Cultura (Colombia) rating.
	MocRating *ContentRatingMocRatingEnum `json:"mocRating,omitempty"`
	// The video's rating from Taiwan's Ministry of Culture (文化部).
	MoctwRating *ContentRatingMoctwRatingEnum `json:"moctwRating,omitempty"`
	// The video's Motion Picture Association of America (MPAA) rating.
	MpaaRating *ContentRatingMpaaRatingEnum `json:"mpaaRating,omitempty"`
	// The rating system for trailer, DVD, and Ad in the US. See http://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.
	MpaatRating *ContentRatingMpaatRatingEnum `json:"mpaatRating,omitempty"`
	// The video's rating from the Movie and Television Review and Classification Board (Philippines).
	MtrcbRating *ContentRatingMtrcbRatingEnum `json:"mtrcbRating,omitempty"`
	// The video's rating from the Maldives National Bureau of Classification.
	NbcRating *ContentRatingNbcRatingEnum `json:"nbcRating,omitempty"`
	// The video's rating in Poland.
	NbcplRating *ContentRatingNbcplRatingEnum `json:"nbcplRating,omitempty"`
	// The video's rating from the Bulgarian National Film Center.
	NfrcRating *ContentRatingNfrcRatingEnum `json:"nfrcRating,omitempty"`
	// The video's rating from Nigeria's National Film and Video Censors Board.
	NfvcbRating *ContentRatingNfvcbRatingEnum `json:"nfvcbRating,omitempty"`
	// The video's rating from the Nacionãlais Kino centrs (National Film Centre of Latvia).
	NkclvRating *ContentRatingNkclvRatingEnum `json:"nkclvRating,omitempty"`
	// The National Media Council ratings system for United Arab Emirates.
	NmcRating *ContentRatingNmcRatingEnum `json:"nmcRating,omitempty"`
	// The video's Office of Film and Literature Classification (OFLC - New Zealand) rating.
	OflcRating *ContentRatingOflcRatingEnum `json:"oflcRating,omitempty"`
	// The video's rating in Peru.
	PefilmRating *ContentRatingPefilmRatingEnum `json:"pefilmRating,omitempty"`
	// The video's rating from the Hungarian Nemzeti Filmiroda, the Rating Committee of the National Office of Film.
	RcnofRating *ContentRatingRcnofRatingEnum `json:"rcnofRating,omitempty"`
	// The video's rating in Venezuela.
	ResorteviolenciaRating *ContentRatingResorteviolenciaRatingEnum `json:"resorteviolenciaRating,omitempty"`
	// The video's General Directorate of Radio, Television and Cinematography (Mexico) rating.
	RtcRating *ContentRatingRtcRatingEnum `json:"rtcRating,omitempty"`
	// The video's rating from Ireland's Raidió Teilifís Éireann.
	RteRating *ContentRatingRteRatingEnum `json:"rteRating,omitempty"`
	// The video's National Film Registry of the Russian Federation (MKRF - Russia) rating.
	RussiaRating *ContentRatingRussiaRatingEnum `json:"russiaRating,omitempty"`
	// The video's rating in Slovakia.
	SkfilmRating *ContentRatingSkfilmRatingEnum `json:"skfilmRating,omitempty"`
	// The video's rating in Iceland.
	SmaisRating *ContentRatingSmaisRatingEnum `json:"smaisRating,omitempty"`
	// The video's rating from Statens medieråd (Sweden's National Media Council).
	SmsaRating *ContentRatingSmsaRatingEnum `json:"smsaRating,omitempty"`
	// The video's TV Parental Guidelines (TVPG) rating.
	TvpgRating *ContentRatingTvpgRatingEnum `json:"tvpgRating,omitempty"`
	// A rating that YouTube uses to identify age-restricted content.
	YtRating *ContentRatingYtRatingEnum `json:"ytRating,omitempty"`
}
