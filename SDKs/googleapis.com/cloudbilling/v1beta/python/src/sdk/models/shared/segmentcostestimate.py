"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import commitmentcostestimate as shared_commitmentcostestimate
from ..shared import costestimate as shared_costestimate
from ..shared import estimationtimepoint as shared_estimationtimepoint
from ..shared import workloadcostestimate as shared_workloadcostestimate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SegmentCostEstimate:
    r"""Workload cost estimates for a single time segment."""
    
    commitment_cost_estimates: Optional[list[shared_commitmentcostestimate.CommitmentCostEstimate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitmentCostEstimates'), 'exclude': lambda f: f is None }})
    r"""Estimated costs for each commitment."""  
    segment_start_time: Optional[shared_estimationtimepoint.EstimationTimePoint] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segmentStartTime'), 'exclude': lambda f: f is None }})
    r"""Represents a point in time."""  
    segment_total_cost_estimate: Optional[shared_costestimate.CostEstimate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segmentTotalCostEstimate'), 'exclude': lambda f: f is None }})
    r"""An estimated cost."""  
    workload_cost_estimates: Optional[list[shared_workloadcostestimate.WorkloadCostEstimate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workloadCostEstimates'), 'exclude': lambda f: f is None }})
    r"""Estimated costs for each workload."""  
    