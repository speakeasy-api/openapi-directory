// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MonitoringQueryLanguageConditionEvaluationMissingDataEnum - A condition control that determines how metric-threshold conditions are evaluated when data stops arriving.
type MonitoringQueryLanguageConditionEvaluationMissingDataEnum string

const (
	MonitoringQueryLanguageConditionEvaluationMissingDataEnumEvaluationMissingDataUnspecified MonitoringQueryLanguageConditionEvaluationMissingDataEnum = "EVALUATION_MISSING_DATA_UNSPECIFIED"
	MonitoringQueryLanguageConditionEvaluationMissingDataEnumEvaluationMissingDataInactive    MonitoringQueryLanguageConditionEvaluationMissingDataEnum = "EVALUATION_MISSING_DATA_INACTIVE"
	MonitoringQueryLanguageConditionEvaluationMissingDataEnumEvaluationMissingDataActive      MonitoringQueryLanguageConditionEvaluationMissingDataEnum = "EVALUATION_MISSING_DATA_ACTIVE"
	MonitoringQueryLanguageConditionEvaluationMissingDataEnumEvaluationMissingDataNoOp        MonitoringQueryLanguageConditionEvaluationMissingDataEnum = "EVALUATION_MISSING_DATA_NO_OP"
)

func (e MonitoringQueryLanguageConditionEvaluationMissingDataEnum) ToPointer() *MonitoringQueryLanguageConditionEvaluationMissingDataEnum {
	return &e
}

func (e *MonitoringQueryLanguageConditionEvaluationMissingDataEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EVALUATION_MISSING_DATA_UNSPECIFIED":
		fallthrough
	case "EVALUATION_MISSING_DATA_INACTIVE":
		fallthrough
	case "EVALUATION_MISSING_DATA_ACTIVE":
		fallthrough
	case "EVALUATION_MISSING_DATA_NO_OP":
		*e = MonitoringQueryLanguageConditionEvaluationMissingDataEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MonitoringQueryLanguageConditionEvaluationMissingDataEnum: %v", v)
	}
}

// MonitoringQueryLanguageCondition - A condition type that allows alert policies to be defined using Monitoring Query Language (https://cloud.google.com/monitoring/mql).
type MonitoringQueryLanguageCondition struct {
	// The amount of time that a time series must violate the threshold to be considered failing. Currently, only values that are a multiple of a minute--e.g., 0, 60, 120, or 300 seconds--are supported. If an invalid value is given, an error will be returned. When choosing a duration, it is useful to keep in mind the frequency of the underlying time series data (which may also be affected by any alignments specified in the aggregations field); a good duration is long enough so that a single outlier does not generate spurious alerts, but short enough that unhealthy states are detected and alerted on quickly.
	Duration *string `json:"duration,omitempty"`
	// A condition control that determines how metric-threshold conditions are evaluated when data stops arriving.
	EvaluationMissingData *MonitoringQueryLanguageConditionEvaluationMissingDataEnum `json:"evaluationMissingData,omitempty"`
	// Monitoring Query Language (https://cloud.google.com/monitoring/mql) query that outputs a boolean stream.
	Query *string `json:"query,omitempty"`
	// Specifies how many time series must fail a predicate to trigger a condition. If not specified, then a {count: 1} trigger is used.
	Trigger *Trigger `json:"trigger,omitempty"`
}
