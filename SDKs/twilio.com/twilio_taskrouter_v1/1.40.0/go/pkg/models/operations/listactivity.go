// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListActivityServerList = []string{
	"https://taskrouter.twilio.com",
}

type ListActivitySecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListActivityRequest struct {
	// Whether return only Activity resources that are available or unavailable. A value of `true` returns only available activities. Values of '1' or `yes` also indicate `true`. All other values represent `false` and return activities that are unavailable.
	Available *string `queryParam:"style=form,explode=true,name=Available"`
	// The `friendly_name` of the Activity resources to read.
	FriendlyName *string `queryParam:"style=form,explode=true,name=FriendlyName"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The SID of the Workspace with the Activity resources to read.
	WorkspaceSid string `pathParam:"style=simple,explode=false,name=WorkspaceSid"`
}

type ListActivityListActivityResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListActivityListActivityResponse - OK
type ListActivityListActivityResponse struct {
	Activities []shared.TaskrouterV1WorkspaceActivity `json:"activities,omitempty"`
	Meta       *ListActivityListActivityResponseMeta  `json:"meta,omitempty"`
}

type ListActivityResponse struct {
	ContentType string
	// OK
	ListActivityResponse *ListActivityListActivityResponse
	StatusCode           int
	RawResponse          *http.Response
}
