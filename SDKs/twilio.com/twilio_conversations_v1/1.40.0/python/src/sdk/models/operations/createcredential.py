"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import conversations_v1_credential as shared_conversations_v1_credential
from ..shared import credential_enum_push_type_enum as shared_credential_enum_push_type_enum
from typing import Optional

CREATE_CREDENTIAL_SERVERS = [
	"https://conversations.twilio.com",
]


@dataclasses.dataclass
class CreateCredentialSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateCredentialCreateCredentialRequest:
    
    type: shared_credential_enum_push_type_enum.CredentialEnumPushTypeEnum = dataclasses.field(metadata={'form': { 'field_name': 'Type' }})  
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'ApiKey' }})
    r"""[GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential."""  
    certificate: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Certificate' }})
    r"""[APN only] The URL encoded representation of the certificate. For example,
    `-----BEGIN CERTIFICATE-----
    MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEF.....A==
    -----END CERTIFICATE-----`.
    """  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you create to describe the new resource. It can be up to 64 characters long."""  
    private_key: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'PrivateKey' }})
    r"""[APN only] The URL encoded representation of the private key. For example,
    `-----BEGIN RSA PRIVATE KEY-----
    MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fG...
    -----END RSA PRIVATE KEY-----`.
    """  
    sandbox: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Sandbox' }})
    r"""[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production."""  
    secret: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Secret' }})
    r"""[FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging."""  
    

@dataclasses.dataclass
class CreateCredentialResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    conversations_v1_credential: Optional[shared_conversations_v1_credential.ConversationsV1Credential] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    