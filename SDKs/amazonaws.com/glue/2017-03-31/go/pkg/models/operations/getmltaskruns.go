// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetMLTaskRunsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// GetMLTaskRunsXAmzTargetEnum
type GetMLTaskRunsXAmzTargetEnum string

const (
	GetMLTaskRunsXAmzTargetEnumAwsGlueGetMlTaskRuns GetMLTaskRunsXAmzTargetEnum = "AWSGlue.GetMLTaskRuns"
)

func (e *GetMLTaskRunsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.GetMLTaskRuns":
		*e = GetMLTaskRunsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMLTaskRunsXAmzTargetEnum: %s", s)
	}
}

type GetMLTaskRunsHeaders struct {
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetMLTaskRunsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetMLTaskRunsRequest struct {
	QueryParams GetMLTaskRunsQueryParams
	Headers     GetMLTaskRunsHeaders
	Request     shared.GetMLTaskRunsRequest `request:"mediaType=application/json"`
}

type GetMLTaskRunsResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// Success
	GetMLTaskRunsResponse *shared.GetMLTaskRunsResponse
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
