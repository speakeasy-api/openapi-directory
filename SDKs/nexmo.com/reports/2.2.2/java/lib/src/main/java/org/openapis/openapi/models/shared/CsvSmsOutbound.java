/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.LocalDate;

/**
 * CsvSmsOutbound - Outbound SMS
 */
public class CsvSmsOutbound {
    /**
     * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
     */
    
    public String accountId;
    public CsvSmsOutbound withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Search for messages with this `client_ref`.
     */
    
    public String clientRef;
    public CsvSmsOutbound withClientRef(String clientRef) {
        this.clientRef = clientRef;
        return this;
    }
    
    /**
     * Country where the request was sent.
     */
    
    public String country;
    public CsvSmsOutbound withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Country name where the request was sent.
     */
    
    public String countryName;
    public CsvSmsOutbound withCountryName(String countryName) {
        this.countryName = countryName;
        return this;
    }
    
    /**
     * Currency of the price of the request.
     */
    
    public String currency;
    public CsvSmsOutbound withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Date when the request was finalized.
     */
    
    public LocalDate dateFinalized;
    public CsvSmsOutbound withDateFinalized(LocalDate dateFinalized) {
        this.dateFinalized = dateFinalized;
        return this;
    }
    
    /**
     * Date of the request.
     */
    
    public LocalDate dateReceived;
    public CsvSmsOutbound withDateReceived(LocalDate dateReceived) {
        this.dateReceived = dateReceived;
        return this;
    }
    
    /**
     * Direction of the communication, either `inbound` (received by our services), or `outbound` (originated from our services). Required for products `SMS` and `MESSAGES`. Optional for `VOICE-CALL`. Invalid for `IN-APP-VOICE`, `CONVERSATIONS`, `NUMBER-INSIGHT`, `VERIFY-API`.
     */
    
    public DirectionEnum direction;
    public CsvSmsOutbound withDirection(DirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Error code of the request.
     */
    
    public String errorCode;
    public CsvSmsOutbound withErrorCode(String errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    /**
     * Description of the error code of the request.
     */
    
    public String errorCodeDescription;
    public CsvSmsOutbound withErrorCodeDescription(String errorCodeDescription) {
        this.errorCodeDescription = errorCodeDescription;
        return this;
    }
    
    /**
     * Request from this number.
     */
    
    public String from;
    public CsvSmsOutbound withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Latency of the request in ms.
     */
    
    public Long latency;
    public CsvSmsOutbound withLatency(Long latency) {
        this.latency = latency;
        return this;
    }
    
    /**
     * Body of the message sent. Only present if include_message parameter is set to true.
     */
    
    public String messageBody;
    public CsvSmsOutbound withMessageBody(String messageBody) {
        this.messageBody = messageBody;
        return this;
    }
    
    /**
     * Id of the request.
     */
    
    public String messageId;
    public CsvSmsOutbound withMessageId(String messageId) {
        this.messageId = messageId;
        return this;
    }
    
    /**
     * Network used to send the request.
     */
    
    public String network;
    public CsvSmsOutbound withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Name of the network used to send the request.
     */
    
    public String networkName;
    public CsvSmsOutbound withNetworkName(String networkName) {
        this.networkName = networkName;
        return this;
    }
    
    /**
     * Search only for sms with the corresponding status.
     */
    
    public SmsStatusEnum status;
    public CsvSmsOutbound withStatus(SmsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Request to this number.
     */
    
    public String to;
    public CsvSmsOutbound withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * Price of the request.
     */
    
    public Double totalPrice;
    public CsvSmsOutbound withTotalPrice(Double totalPrice) {
        this.totalPrice = totalPrice;
        return this;
    }
    
}
