/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateTopicPostPMRequestBody {
    /**
     * Required for new private message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archetype")
    public String archetype;
    public CreateTopicPostPMRequestBody withArchetype(String archetype) {
        this.archetype = archetype;
        return this;
    }
    
    /**
     * Optional if creating a new topic, and ignored if creating
     * a new post.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public Long category;
    public CreateTopicPostPMRequestBody withCategory(Long category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;
    public CreateTopicPostPMRequestBody withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Provide a URL from a remote system to associate a forum
     * topic with that URL, typically for using Discourse as a comments
     * system for an external blog.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("embed_url")
    public String embedUrl;
    public CreateTopicPostPMRequestBody withEmbedUrl(String embedUrl) {
        this.embedUrl = embedUrl;
        return this;
    }
    
    /**
     * Provide an external_id from a remote system to associate
     * a forum topic with that id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_id")
    public String externalId;
    public CreateTopicPostPMRequestBody withExternalId(String externalId) {
        this.externalId = externalId;
        return this;
    }
    
    @JsonProperty("raw")
    public String raw;
    public CreateTopicPostPMRequestBody withRaw(String raw) {
        this.raw = raw;
        return this;
    }
    
    /**
     * Required for private message, comma separated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_recipients")
    public String targetRecipients;
    public CreateTopicPostPMRequestBody withTargetRecipients(String targetRecipients) {
        this.targetRecipients = targetRecipients;
        return this;
    }
    
    /**
     * Deprecated. Use target_recipients instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_usernames")
    public String targetUsernames;
    public CreateTopicPostPMRequestBody withTargetUsernames(String targetUsernames) {
        this.targetUsernames = targetUsernames;
        return this;
    }
    
    /**
     * Required if creating a new topic or new private message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public CreateTopicPostPMRequestBody withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Required if creating a new post.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topic_id")
    public Long topicId;
    public CreateTopicPostPMRequestBody withTopicId(Long topicId) {
        this.topicId = topicId;
        return this;
    }
    
}
