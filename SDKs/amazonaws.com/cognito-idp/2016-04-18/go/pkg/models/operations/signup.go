// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SignUpXAmzTargetEnum
type SignUpXAmzTargetEnum string

const (
	SignUpXAmzTargetEnumAwsCognitoIdentityProviderServiceSignUp SignUpXAmzTargetEnum = "AWSCognitoIdentityProviderService.SignUp"
)

func (e *SignUpXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSCognitoIdentityProviderService.SignUp":
		*e = SignUpXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SignUpXAmzTargetEnum: %s", s)
	}
}

type SignUpHeaders struct {
	XAmzAlgorithm     *string              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        SignUpXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SignUpRequest struct {
	Headers SignUpHeaders
	Request shared.SignUpRequest `request:"mediaType=application/json"`
}

type SignUpResponse struct {
	// CodeDeliveryFailureException
	CodeDeliveryFailureException interface{}
	ContentType                  string
	// ForbiddenException
	ForbiddenException interface{}
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidEmailRoleAccessPolicyException
	InvalidEmailRoleAccessPolicyException interface{}
	// InvalidLambdaResponseException
	InvalidLambdaResponseException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidPasswordException
	InvalidPasswordException interface{}
	// InvalidSmsRoleAccessPolicyException
	InvalidSmsRoleAccessPolicyException interface{}
	// InvalidSmsRoleTrustRelationshipException
	InvalidSmsRoleTrustRelationshipException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	SignUpResponse *shared.SignUpResponse
	StatusCode     int
	RawResponse    *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnexpectedLambdaException
	UnexpectedLambdaException interface{}
	// UserLambdaValidationException
	UserLambdaValidationException interface{}
	// UsernameExistsException
	UsernameExistsException interface{}
}
