// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AssignSIPConfigSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum - If the value of this option is set to `0`, the numbers provided by Zoom will be displayed in the account's list of available call-out and call-in numbers in the Zoom Web Portal and Zoom Client.
//
// If the value of this option is set to `1`, the Zoom provided numbers will be shown in the Zoom Web Portal but will not be used unless specified by the user.<br>
//
// If the value of this option is set to `2`, all Zoom provided numbers will be deleted and only internal numbers (provided by carrier partners) will be used.
type AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum string

const (
	AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnumZero AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum = "0"
	AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnumOne  AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum = "1"
	AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnumTwo  AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum = "2"
)

func (e *AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "2":
		*e = AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum: %s", s)
	}
}

type AssignSIPConfigApplicationJSON struct {
	// Enable or delete the configuration.<br> The values can be one of the following:<br> `true`: Enable configuration.<br> `false`: Delete configuration
	Enable *bool `json:"enable,omitempty"`
	// If the value of this option is set to `true`, the call-out numbers provided by the Zoom carrier partners will be displayed in the account's list of available call-out numbers in the Zoom Web Portal and Zoom Client.
	ShowCalloutInternalNumber *bool `json:"show_callout_internal_number,omitempty"`
	// If the value of this option is set to `0`, the call-out countries list provided by Zoom will be [displayed](https://support.zoom.us/hc/en-us/articles/200942859-Using-telephone-call-out) in the account's list of available call-out countries.
	//
	// If the value of this option is set to `1`, the Zoom provided call-out countries will be hidden from the user's account.<br>
	//
	// If the value of this option is set to `2`, all Zoom provided countries will be deleted and only internal countries (provided by carrier partners) will be used.
	ShowZoomProvidedCalloutCountries *int64 `json:"show_zoom_provided_callout_countries,omitempty"`
	// If the value of this option is set to `0`, the numbers provided by Zoom will be displayed in the account's list of available call-out and call-in numbers in the Zoom Web Portal and Zoom Client.
	//
	// If the value of this option is set to `1`, the Zoom provided numbers will be shown in the Zoom Web Portal but will not be used unless specified by the user.<br>
	//
	// If the value of this option is set to `2`, all Zoom provided numbers will be deleted and only internal numbers (provided by carrier partners) will be used.
	ShowZoomProvidedNumbers *AssignSIPConfigApplicationJSONShowZoomProvidedNumbersEnum `json:"show_zoom_provided_numbers,omitempty"`
}

type AssignSIPConfigRequest struct {
	RequestBody *AssignSIPConfigApplicationJSON `request:"mediaType=application/json"`
	AccountID   string                          `pathParam:"style=simple,explode=false,name=accountId"`
}

type AssignSIPConfigResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `204` **No Content**<br>
	// Configuration assigned successfully.
	//
	AssignSIPConfig204ApplicationJSONAny interface{}
}
