"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetIsosIDRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""ID of the ISO"""  
    
class GetIsosID200ApplicationJSONIsoTypeEnum(str, Enum):
    r"""Type of the ISO"""
    PUBLIC = 'public'
    PRIVATE = 'private'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetIsosID200ApplicationJSONIso:
    
    deprecated: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deprecated') }})
    r"""ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""Description of the ISO"""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""ID of the Resource"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Unique identifier of the ISO. Only set for public ISOs"""  
    type: GetIsosID200ApplicationJSONIsoTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of the ISO"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetIsosID200ApplicationJSON:
    r"""The `iso` key in the reply contains an array of ISO objects with this structure"""
    
    iso: GetIsosID200ApplicationJSONIso = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iso') }})  
    

@dataclasses.dataclass
class GetIsosIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_isos_id_200_application_json_object: Optional[GetIsosID200ApplicationJSON] = dataclasses.field(default=None)
    r"""The `iso` key in the reply contains an array of ISO objects with this structure"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    