"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class CrashesDeleteSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class CrashesDeleteRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    crash_group_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'crash_group_id', 'style': 'simple', 'explode': False }})
    r"""id of a specific group"""  
    crash_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'crash_id', 'style': 'simple', 'explode': False }})
    r"""id of a specific crash"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    retention_delete: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'retention_delete', 'style': 'form', 'explode': True }})
    r"""true in that case if the method should skip update counts"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CrashesDeleteDefaultApplicationJSON:
    r"""Error"""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CrashesDelete200ApplicationJSON:
    r"""Success"""
    
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('app_id'), 'exclude': lambda f: f is None }})  
    attachments_deleted: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachments_deleted'), 'exclude': lambda f: f is None }})  
    blobs_failed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blobs_failed'), 'exclude': lambda f: f is None }})  
    blobs_succeeded: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blobs_succeeded'), 'exclude': lambda f: f is None }})  
    crash_group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crash_group_id'), 'exclude': lambda f: f is None }})  
    crash_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crash_id'), 'exclude': lambda f: f is None }})  
    crashes_deleted: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crashes_deleted'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class CrashesDeleteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    crashes_delete_200_application_json_object: Optional[CrashesDelete200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    crashes_delete_default_application_json_object: Optional[CrashesDeleteDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    