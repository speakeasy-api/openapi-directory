<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FileUploadPartEntity - Begin file upload
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FileUploadPartEntity
{
    /**
     * Type of upload
     * 
     * @var ?string $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $action = null;
    
    /**
     * If `true`, this file exists and you may wish to ask the user for overwrite confirmation
     * 
     * @var ?bool $askAboutOverwrites
     */
	#[\JMS\Serializer\Annotation\SerializedName('ask_about_overwrites')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $askAboutOverwrites = null;
    
    /**
     * Number of parts in the upload
     * 
     * @var ?int $availableParts
     */
	#[\JMS\Serializer\Annotation\SerializedName('available_parts')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $availableParts = null;
    
    /**
     * Date/time of when this Upload part expires and the URL cannot be used any more
     * 
     * @var ?string $expires
     */
	#[\JMS\Serializer\Annotation\SerializedName('expires')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expires = null;
    
    /**
     * Additional upload headers to provide as part of the upload
     * 
     * @var ?array<string, mixed> $headers
     */
	#[\JMS\Serializer\Annotation\SerializedName('headers')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $headers = null;
    
    /**
     * HTTP Method to use for uploading the part, usually `PUT`
     * 
     * @var ?string $httpMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('http_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $httpMethod = null;
    
    /**
     * Size in bytes for this part
     * 
     * @var ?int $nextPartsize
     */
	#[\JMS\Serializer\Annotation\SerializedName('next_partsize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $nextPartsize = null;
    
    /**
     * If `true`, multiple parts may be uploaded in parallel.  If `false`, be sure to only upload one part at a time, in order.
     * 
     * @var ?bool $parallelParts
     */
	#[\JMS\Serializer\Annotation\SerializedName('parallel_parts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $parallelParts = null;
    
    /**
     * Additional HTTP parameters to send with the upload
     * 
     * @var ?array<string, mixed> $parameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameters')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameters = null;
    
    /**
     * Number of this upload part
     * 
     * @var ?int $partNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('part_number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $partNumber = null;
    
    /**
     * Size in bytes for the next upload part
     * 
     * @var ?int $partsize
     */
	#[\JMS\Serializer\Annotation\SerializedName('partsize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $partsize = null;
    
    /**
     * New file path
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * Reference name for this upload part
     * 
     * @var ?string $ref
     */
	#[\JMS\Serializer\Annotation\SerializedName('ref')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ref = null;
    
    /**
     * Content-Type and File to send
     * 
     * @var ?array<string, mixed> $send
     */
	#[\JMS\Serializer\Annotation\SerializedName('send')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $send = null;
    
    /**
     * URI to upload this part to
     * 
     * @var ?string $uploadUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('upload_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uploadUri = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->askAboutOverwrites = null;
		$this->availableParts = null;
		$this->expires = null;
		$this->headers = null;
		$this->httpMethod = null;
		$this->nextPartsize = null;
		$this->parallelParts = null;
		$this->parameters = null;
		$this->partNumber = null;
		$this->partsize = null;
		$this->path = null;
		$this->ref = null;
		$this->send = null;
		$this->uploadUri = null;
	}
}
