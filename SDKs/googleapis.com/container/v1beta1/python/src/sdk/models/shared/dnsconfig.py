"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DNSConfigClusterDNSEnum(str, Enum):
    r"""cluster_dns indicates which in-cluster DNS provider should be used."""
    PROVIDER_UNSPECIFIED = 'PROVIDER_UNSPECIFIED'
    PLATFORM_DEFAULT = 'PLATFORM_DEFAULT'
    CLOUD_DNS = 'CLOUD_DNS'

class DNSConfigClusterDNSScopeEnum(str, Enum):
    r"""cluster_dns_scope indicates the scope of access to cluster DNS records."""
    DNS_SCOPE_UNSPECIFIED = 'DNS_SCOPE_UNSPECIFIED'
    CLUSTER_SCOPE = 'CLUSTER_SCOPE'
    VPC_SCOPE = 'VPC_SCOPE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DNSConfig:
    r"""DNSConfig contains the desired set of options for configuring clusterDNS."""
    
    cluster_dns: Optional[DNSConfigClusterDNSEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterDns'), 'exclude': lambda f: f is None }})
    r"""cluster_dns indicates which in-cluster DNS provider should be used."""  
    cluster_dns_domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterDnsDomain'), 'exclude': lambda f: f is None }})
    r"""cluster_dns_domain is the suffix used for all cluster service records."""  
    cluster_dns_scope: Optional[DNSConfigClusterDNSScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterDnsScope'), 'exclude': lambda f: f is None }})
    r"""cluster_dns_scope indicates the scope of access to cluster DNS records."""  
    