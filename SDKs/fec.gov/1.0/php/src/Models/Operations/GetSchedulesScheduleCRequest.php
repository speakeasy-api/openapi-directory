<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSchedulesScheduleCRequest
{
    /**
     * 
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public string $apiKey;
    
    /**
     * Name of candidate running for office
     * 
     * @var ?array<string> $candidateName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=candidate_name')]
    public ?array $candidateName = null;
    
    /**
     * 
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     * 
     * @var ?array<string> $committeeId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_id')]
    public ?array $committeeId = null;
    
    /**
     * 
     * An unique identifier for each page where the electronic or paper filing is reported.
     * 
     * 
     * @var ?array<string> $imageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=image_number')]
    public ?array $imageNumber = null;
    
    /**
     * Index of last result from previous page
     * 
     * @var ?int $lastIndex
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=last_index')]
    public ?int $lastIndex = null;
    
    /**
     * 
     * Filter for form and line number using the following format:
     * `FORM-LINENUMBER`.  For example an argument such as `F3X-16` would filter
     * down to all entries from form `F3X` line number `16`.
     * 
     * 
     * @var ?string $lineNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=line_number')]
    public ?string $lineNumber = null;
    
    /**
     * Source of the loan (i.e., bank loan, brokerage account, credit card, home equity line of credit,               other line of credit, or personal funds of the candidate
     * 
     * @var ?array<string> $loanSourceName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=loan_source_name')]
    public ?array $loanSourceName = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_amount')]
    public ?string $maxAmount = null;
    
    /**
     * Maxium image number of the page where the schedule item is reported
     * 
     * @var ?string $maxImageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_image_number')]
    public ?string $maxImageNumber = null;
    
    /**
     * 
     * Maximum incurred date
     * 
     * 
     * @var ?\DateTime $maxIncurredDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_incurred_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxIncurredDate = null;
    
    /**
     * 
     * Maximum payment to date
     * 
     * 
     * @var ?int $maxPaymentToDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_payment_to_date')]
    public ?int $maxPaymentToDate = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_amount')]
    public ?string $minAmount = null;
    
    /**
     * Minium image number of the page where the schedule item is reported
     * 
     * @var ?string $minImageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_image_number')]
    public ?string $minImageNumber = null;
    
    /**
     * 
     * Minimum incurred date
     * 
     * 
     * @var ?\DateTime $minIncurredDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_incurred_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minIncurredDate = null;
    
    /**
     * 
     * Minimum payment to date
     * 
     * 
     * @var ?int $minPaymentToDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_payment_to_date')]
    public ?int $minPaymentToDate = null;
    
    /**
     * For paginating through results, starting at page 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results returned per page. Defaults to 20.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * Provide a field to sort by. Use `-` for descending order.
     * 
     * 
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Hide null values on sorted column(s).
     * 
     * @var ?bool $sortHideNull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_hide_null')]
    public ?bool $sortHideNull = null;
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     * 
     * @var ?bool $sortNullOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_null_only')]
    public ?bool $sortNullOnly = null;
    
    /**
     * Toggle that sorts null values last
     * 
     * @var ?bool $sortNullsLast
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_nulls_last')]
    public ?bool $sortNullsLast = null;
    
	public function __construct()
	{
		$this->apiKey = "";
		$this->candidateName = null;
		$this->committeeId = null;
		$this->imageNumber = null;
		$this->lastIndex = null;
		$this->lineNumber = null;
		$this->loanSourceName = null;
		$this->maxAmount = null;
		$this->maxImageNumber = null;
		$this->maxIncurredDate = null;
		$this->maxPaymentToDate = null;
		$this->minAmount = null;
		$this->minImageNumber = null;
		$this->minIncurredDate = null;
		$this->minPaymentToDate = null;
		$this->page = null;
		$this->perPage = null;
		$this->sort = null;
		$this->sortHideNull = null;
		$this->sortNullOnly = null;
		$this->sortNullsLast = null;
	}
}
