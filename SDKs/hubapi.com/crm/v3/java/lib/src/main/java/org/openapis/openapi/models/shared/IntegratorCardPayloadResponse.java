/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IntegratorCardPayloadResponse - The card details payload, sent to HubSpot by an app in response to a data fetch request when a user visits a CRM record page.
 */
public class IntegratorCardPayloadResponse {
    /**
     * URL to a page the integrator has built that displays all details for this card. This URL will be displayed to users under a `See more [x]` link if there are more than five items in your response, where `[x]` is the value of `itemLabel`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allItemsLinkUrl")
    public String allItemsLinkUrl;
    public IntegratorCardPayloadResponse withAllItemsLinkUrl(String allItemsLinkUrl) {
        this.allItemsLinkUrl = allItemsLinkUrl;
        return this;
    }
    
    /**
     * The label to be used for the `allItemsLinkUrl` link (e.g. 'See more tickets'). If not provided, this falls back to the card's title.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardLabel")
    public String cardLabel;
    public IntegratorCardPayloadResponse withCardLabel(String cardLabel) {
        this.cardLabel = cardLabel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseVersion")
    public IntegratorCardPayloadResponseResponseVersionEnum responseVersion;
    public IntegratorCardPayloadResponse withResponseVersion(IntegratorCardPayloadResponseResponseVersionEnum responseVersion) {
        this.responseVersion = responseVersion;
        return this;
    }
    
    /**
     * A list of up to five valid card sub categories.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sections")
    public IntegratorObjectResult[] sections;
    public IntegratorCardPayloadResponse withSections(IntegratorObjectResult[] sections) {
        this.sections = sections;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topLevelActions")
    public TopLevelActions topLevelActions;
    public IntegratorCardPayloadResponse withTopLevelActions(TopLevelActions topLevelActions) {
        this.topLevelActions = topLevelActions;
        return this;
    }
    
    /**
     * The total number of card properties that will be sent in this response.
     */
    @JsonProperty("totalCount")
    public Integer totalCount;
    public IntegratorCardPayloadResponse withTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    
}
