// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateAlarmModelHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateAlarmModelRequestBodyAlarmCapabilities - Contains the configuration information of alarm state changes.
type CreateAlarmModelRequestBodyAlarmCapabilities struct {
	AcknowledgeFlow             *shared.AcknowledgeFlow             `json:"acknowledgeFlow,omitempty"`
	InitializationConfiguration *shared.InitializationConfiguration `json:"initializationConfiguration,omitempty"`
}

// CreateAlarmModelRequestBodyAlarmEventActions - Contains information about one or more alarm actions.
type CreateAlarmModelRequestBodyAlarmEventActions struct {
	AlarmActions []shared.AlarmAction `json:"alarmActions,omitempty"`
}

// CreateAlarmModelRequestBodyAlarmNotification - Contains information about one or more notification actions.
type CreateAlarmModelRequestBodyAlarmNotification struct {
	NotificationActions []shared.NotificationAction `json:"notificationActions,omitempty"`
}

// CreateAlarmModelRequestBodyAlarmRule - Defines when your alarm is invoked.
type CreateAlarmModelRequestBodyAlarmRule struct {
	SimpleRule *shared.SimpleRule `json:"simpleRule,omitempty"`
}

type CreateAlarmModelRequestBody struct {
	// Contains the configuration information of alarm state changes.
	AlarmCapabilities *CreateAlarmModelRequestBodyAlarmCapabilities `json:"alarmCapabilities,omitempty"`
	// Contains information about one or more alarm actions.
	AlarmEventActions *CreateAlarmModelRequestBodyAlarmEventActions `json:"alarmEventActions,omitempty"`
	// A description that tells you what the alarm model detects.
	AlarmModelDescription *string `json:"alarmModelDescription,omitempty"`
	// A unique name that helps you identify the alarm model. You can't change this name after you create the alarm model.
	AlarmModelName string `json:"alarmModelName"`
	// Contains information about one or more notification actions.
	AlarmNotification *CreateAlarmModelRequestBodyAlarmNotification `json:"alarmNotification,omitempty"`
	// Defines when your alarm is invoked.
	AlarmRule CreateAlarmModelRequestBodyAlarmRule `json:"alarmRule"`
	// An input attribute used as a key to create an alarm. AWS IoT Events routes <a href="https://docs.aws.amazon.com/iotevents/latest/apireference/API_Input.html">inputs</a> associated with this key to the alarm.
	Key *string `json:"key,omitempty"`
	// The ARN of the IAM role that allows the alarm to perform actions and access AWS resources. For more information, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i>.
	RoleArn string `json:"roleArn"`
	// A non-negative integer that reflects the severity level of the alarm.
	Severity *int64 `json:"severity,omitempty"`
	// <p>A list of key-value pairs that contain metadata for the alarm model. The tags help you manage the alarm model. For more information, see <a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/tagging-iotevents.html">Tagging your AWS IoT Events resources</a> in the <i>AWS IoT Events Developer Guide</i>.</p> <p>You can create up to 50 tags for one alarm model.</p>
	Tags []shared.Tag `json:"tags,omitempty"`
}

type CreateAlarmModelRequest struct {
	Headers CreateAlarmModelHeaders
	Request CreateAlarmModelRequestBody `request:"mediaType=application/json"`
}

type CreateAlarmModelResponse struct {
	ContentType string
	// Success
	CreateAlarmModelResponse *shared.CreateAlarmModelResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceInUseException
	ResourceInUseException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
