/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderPricing {
    /**
     * Discount from promotional pricing
     */
    @JsonProperty("discount")
    public Long discount;

    public OrderPricing withDiscount(Long discount) {
        this.discount = discount;
        return this;
    }
    
    @JsonProperty("fees")
    public OrderFee fees;

    public OrderPricing withFees(OrderFee fees) {
        this.fees = fees;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Double id;

    public OrderPricing withId(Double id) {
        this.id = id;
        return this;
    }
    
    /**
     * Sum of list prices for the entire cart
     */
    @JsonProperty("list")
    public Long list;

    public OrderPricing withList(Long list) {
        this.list = list;
        return this;
    }
    
    /**
     * Savings off of list price &lt;pre&gt;`savings` = `list` - `subtotal`&lt;/pre&gt;
     */
    @JsonProperty("savings")
    public Long savings;

    public OrderPricing withSavings(Long savings) {
        this.savings = savings;
        return this;
    }
    
    /**
     * Price with `discount` and without taxes or fees
     */
    @JsonProperty("subtotal")
    public Long subtotal;

    public OrderPricing withSubtotal(Long subtotal) {
        this.subtotal = subtotal;
        return this;
    }
    
    /**
     * A collection of line item tax details
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxDetails")
    public LineItemPricingTaxDetail[] taxDetails;

    public OrderPricing withTaxDetails(LineItemPricingTaxDetail[] taxDetails) {
        this.taxDetails = taxDetails;
        return this;
    }
    
    /**
     * Taxes for the entire cart
     */
    @JsonProperty("taxes")
    public Long taxes;

    public OrderPricing withTaxes(Long taxes) {
        this.taxes = taxes;
        return this;
    }
    
    /**
     * Price the customer pays &lt;pre&gt;`total` = `subtotal` + `taxes` + `fees.total`&lt;/pre&gt;
     */
    @JsonProperty("total")
    public Long total;

    public OrderPricing withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    public OrderPricing(@JsonProperty("discount") Long discount, @JsonProperty("fees") OrderFee fees, @JsonProperty("list") Long list, @JsonProperty("savings") Long savings, @JsonProperty("subtotal") Long subtotal, @JsonProperty("taxes") Long taxes, @JsonProperty("total") Long total) {
        this.discount = discount;
        this.fees = fees;
        this.list = list;
        this.savings = savings;
        this.subtotal = subtotal;
        this.taxes = taxes;
        this.total = total;
  }
}
