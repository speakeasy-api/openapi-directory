// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetNetworkClientsApplicationUsageSsidNumberEnum - An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned.
type GetNetworkClientsApplicationUsageSsidNumberEnum int64

const (
	GetNetworkClientsApplicationUsageSsidNumberEnumZero     GetNetworkClientsApplicationUsageSsidNumberEnum = 0
	GetNetworkClientsApplicationUsageSsidNumberEnumOne      GetNetworkClientsApplicationUsageSsidNumberEnum = 1
	GetNetworkClientsApplicationUsageSsidNumberEnumTwo      GetNetworkClientsApplicationUsageSsidNumberEnum = 2
	GetNetworkClientsApplicationUsageSsidNumberEnumThree    GetNetworkClientsApplicationUsageSsidNumberEnum = 3
	GetNetworkClientsApplicationUsageSsidNumberEnumFour     GetNetworkClientsApplicationUsageSsidNumberEnum = 4
	GetNetworkClientsApplicationUsageSsidNumberEnumFive     GetNetworkClientsApplicationUsageSsidNumberEnum = 5
	GetNetworkClientsApplicationUsageSsidNumberEnumSix      GetNetworkClientsApplicationUsageSsidNumberEnum = 6
	GetNetworkClientsApplicationUsageSsidNumberEnumSeven    GetNetworkClientsApplicationUsageSsidNumberEnum = 7
	GetNetworkClientsApplicationUsageSsidNumberEnumEight    GetNetworkClientsApplicationUsageSsidNumberEnum = 8
	GetNetworkClientsApplicationUsageSsidNumberEnumNine     GetNetworkClientsApplicationUsageSsidNumberEnum = 9
	GetNetworkClientsApplicationUsageSsidNumberEnumTen      GetNetworkClientsApplicationUsageSsidNumberEnum = 10
	GetNetworkClientsApplicationUsageSsidNumberEnumEleven   GetNetworkClientsApplicationUsageSsidNumberEnum = 11
	GetNetworkClientsApplicationUsageSsidNumberEnumTwelve   GetNetworkClientsApplicationUsageSsidNumberEnum = 12
	GetNetworkClientsApplicationUsageSsidNumberEnumThirteen GetNetworkClientsApplicationUsageSsidNumberEnum = 13
	GetNetworkClientsApplicationUsageSsidNumberEnumFourteen GetNetworkClientsApplicationUsageSsidNumberEnum = 14
)

func (e GetNetworkClientsApplicationUsageSsidNumberEnum) ToPointer() *GetNetworkClientsApplicationUsageSsidNumberEnum {
	return &e
}

func (e *GetNetworkClientsApplicationUsageSsidNumberEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		fallthrough
	case 7:
		fallthrough
	case 8:
		fallthrough
	case 9:
		fallthrough
	case 10:
		fallthrough
	case 11:
		fallthrough
	case 12:
		fallthrough
	case 13:
		fallthrough
	case 14:
		*e = GetNetworkClientsApplicationUsageSsidNumberEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNetworkClientsApplicationUsageSsidNumberEnum: %v", v)
	}
}

type GetNetworkClientsApplicationUsageRequest struct {
	// A list of client keys, MACs or IPs separated by comma.
	Clients string `queryParam:"style=form,explode=true,name=clients"`
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	NetworkID    string  `pathParam:"style=simple,explode=false,name=networkId"`
	// The number of entries per page returned. Acceptable range is 3 - 1000.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// An SSID number to include. If not specified, eveusage histories application usagents for all SSIDs will be returned.
	SsidNumber *GetNetworkClientsApplicationUsageSsidNumberEnum `queryParam:"style=form,explode=true,name=ssidNumber"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
	// The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
	T0 *string `queryParam:"style=form,explode=true,name=t0"`
	// The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
	T1 *string `queryParam:"style=form,explode=true,name=t1"`
	// The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
	Timespan *float32 `queryParam:"style=form,explode=true,name=timespan"`
}

type GetNetworkClientsApplicationUsageResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkClientsApplicationUsage200ApplicationJSONObjects []map[string]interface{}
}
