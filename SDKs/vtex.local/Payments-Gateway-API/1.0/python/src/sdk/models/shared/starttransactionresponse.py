"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cancellations as shared_cancellations
from ..shared import field as shared_field
from ..shared import interactions as shared_interactions
from ..shared import payments as shared_payments
from ..shared import refunds as shared_refunds
from ..shared import settlements as shared_settlements
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartTransactionResponse:
    
    accept_header: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptHeader') }})  
    antifraud_affiliation_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('antifraudAffiliationId') }})  
    antifraud_tid: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('antifraudTid') }})  
    authorization_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizationDate') }})  
    authorization_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizationToken') }})  
    buyer: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buyer') }})  
    cancelation_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelationDate') }})  
    cancelation_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelationToken') }})  
    cancellations: shared_cancellations.Cancellations = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancellations') }})  
    channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel') }})  
    commitment_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitmentDate') }})  
    commitment_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitmentToken') }})  
    fields_: list[shared_field.Field] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    interactions: shared_interactions.Interactions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interactions') }})  
    ip_address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipAddress') }})  
    marked_for_recurrence: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('markedForRecurrence') }})  
    owner: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owner') }})  
    payments: shared_payments.Payments = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payments') }})  
    receiver_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverUri') }})  
    reference_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceKey') }})  
    refunding_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refundingDate') }})  
    refunding_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refundingToken') }})  
    refunds: shared_refunds.Refunds = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refunds') }})  
    sales_channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesChannel') }})  
    settlements: shared_settlements.Settlements = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settlements') }})  
    soft_descriptor: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('softDescriptor') }})  
    start_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startDate') }})  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    timeout_status: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeoutStatus') }})  
    total_refunds: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalRefunds') }})  
    transaction_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionId') }})  
    urn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('urn') }})  
    user_agent: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userAgent') }})  
    value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})  
    