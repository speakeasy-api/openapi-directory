<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConnectorEvent - Unify event that is supported on the connector. Events are delivered via Webhooks.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConnectorEvent
{
    /**
     * Downstream event type
     * 
     * @var ?string $downstreamEventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('downstream_event_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $downstreamEventType = null;
    
    /**
     * Unify entity type
     * 
     * @var ?string $entityType
     */
	#[\JMS\Serializer\Annotation\SerializedName('entity_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $entityType = null;
    
    /**
     * Unify event source
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConnectorEventEventSourceEnum $eventSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_source')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConnectorEventEventSourceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConnectorEventEventSourceEnum $eventSource = null;
    
    /**
     * Unify event type
     * 
     * @var ?string $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventType = null;
    
    /**
     * $resources
     * 
     * @var ?array<string> $resources
     */
	#[\JMS\Serializer\Annotation\SerializedName('resources')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resources = null;
    
	public function __construct()
	{
		$this->downstreamEventType = null;
		$this->entityType = null;
		$this->eventSource = null;
		$this->eventType = null;
		$this->resources = null;
	}
}
