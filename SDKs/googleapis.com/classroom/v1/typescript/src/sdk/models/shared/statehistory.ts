/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The workflow pipeline stage.
 */
export enum StateHistoryStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Created = "CREATED",
  TurnedIn = "TURNED_IN",
  Returned = "RETURNED",
  ReclaimedByStudent = "RECLAIMED_BY_STUDENT",
  StudentEditedAfterTurnIn = "STUDENT_EDITED_AFTER_TURN_IN",
}

/**
 * The history of each state this submission has been in.
 */
export class StateHistory extends SpeakeasyBase {
  /**
   * The teacher or student who made the change.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actorUserId" })
  actorUserId?: string;

  /**
   * The workflow pipeline stage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: StateHistoryStateEnum;

  /**
   * When the submission entered this state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateTimestamp" })
  stateTimestamp?: string;
}
