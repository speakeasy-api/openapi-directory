/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Template } from "./template";
import { Expose, Type } from "class-transformer";

export class TemplatesResponseError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class TemplatesResponsePagination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;
}

/**
 * successful operation
 */
export class TemplatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Template })
  @Expose({ name: "data" })
  @Type(() => Template)
  data?: Template[];

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => TemplatesResponseError)
  error?: TemplatesResponseError;

  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => TemplatesResponsePagination)
  pagination?: TemplatesResponsePagination;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;
}
