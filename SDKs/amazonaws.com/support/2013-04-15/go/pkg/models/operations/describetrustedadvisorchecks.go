// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeTrustedAdvisorChecksXAmzTargetEnum
type DescribeTrustedAdvisorChecksXAmzTargetEnum string

const (
	DescribeTrustedAdvisorChecksXAmzTargetEnumAwsSupport20130415DescribeTrustedAdvisorChecks DescribeTrustedAdvisorChecksXAmzTargetEnum = "AWSSupport_20130415.DescribeTrustedAdvisorChecks"
)

func (e DescribeTrustedAdvisorChecksXAmzTargetEnum) ToPointer() *DescribeTrustedAdvisorChecksXAmzTargetEnum {
	return &e
}

func (e *DescribeTrustedAdvisorChecksXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSSupport_20130415.DescribeTrustedAdvisorChecks":
		*e = DescribeTrustedAdvisorChecksXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTrustedAdvisorChecksXAmzTargetEnum: %v", v)
	}
}

type DescribeTrustedAdvisorChecksRequest struct {
	DescribeTrustedAdvisorChecksRequest shared.DescribeTrustedAdvisorChecksRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          DescribeTrustedAdvisorChecksXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeTrustedAdvisorChecksResponse struct {
	ContentType string
	// Success
	DescribeTrustedAdvisorChecksResponse *shared.DescribeTrustedAdvisorChecksResponse
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
