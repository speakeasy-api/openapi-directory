"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VerifyV2VerificationAttemptsSummary:
    r"""OK"""
    
    conversion_rate_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversion_rate_percentage'), 'exclude': lambda f: f is None }})
    r"""Percentage of the confirmed messages over the total, defined by (total_converted/total_attempts)*100."""  
    total_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_attempts'), 'exclude': lambda f: f is None }})
    r"""Total of attempts made according to the provided filters"""  
    total_converted: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_converted'), 'exclude': lambda f: f is None }})
    r"""Total of  attempts made that were confirmed by the end user, according to the provided filters."""  
    total_unconverted: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_unconverted'), 'exclude': lambda f: f is None }})
    r"""Total of attempts made that were not confirmed by the end user, according to the provided filters."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})  
    