// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SoftwareAvailabilityEnum - Specifies the source from which the CDM software is available.
type SoftwareAvailabilityEnum string

const (
	SoftwareAvailabilityEnumLocalCluster SoftwareAvailabilityEnum = "LocalCluster"
	SoftwareAvailabilityEnumLocalNode    SoftwareAvailabilityEnum = "LocalNode"
	SoftwareAvailabilityEnumRemote       SoftwareAvailabilityEnum = "Remote"
	SoftwareAvailabilityEnumDownloading  SoftwareAvailabilityEnum = "Downloading"
)

func (e SoftwareAvailabilityEnum) ToPointer() *SoftwareAvailabilityEnum {
	return &e
}

func (e *SoftwareAvailabilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LocalCluster":
		fallthrough
	case "LocalNode":
		fallthrough
	case "Remote":
		fallthrough
	case "Downloading":
		*e = SoftwareAvailabilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SoftwareAvailabilityEnum: %v", v)
	}
}
