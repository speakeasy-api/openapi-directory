/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DocumentBlock } from "./documentblock";
import { Expose, Type } from "class-transformer";

/**
 * A object with a data property that contains an array of up to limit document blocks. Each entry in the array is a separate document block object. If no more document block are available, the resulting array will be empty.
 */
export class DocumentBlockList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "current_page" })
  currentPage?: number;

  @SpeakeasyMetadata({ elemType: DocumentBlock })
  @Expose({ name: "data" })
  @Type(() => DocumentBlock)
  data?: DocumentBlock[];

  @SpeakeasyMetadata()
  @Expose({ name: "last_page" })
  lastPage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "prev_page_url" })
  prevPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}
