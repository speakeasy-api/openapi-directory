/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ReleasesUpdateReleaseUploadStatusSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * The new status of the release upload
 */
export enum ReleasesUpdateReleaseUploadStatusRequestBodyUploadStatusEnum {
  UploadFinished = "uploadFinished",
  UploadCanceled = "uploadCanceled",
}

/**
 * The release upload status information.
 */
export class ReleasesUpdateReleaseUploadStatusRequestBody extends SpeakeasyBase {
  /**
   * The new status of the release upload
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upload_status" })
  uploadStatus: ReleasesUpdateReleaseUploadStatusRequestBodyUploadStatusEnum;
}

export class ReleasesUpdateReleaseUploadStatusRequest extends SpeakeasyBase {
  /**
   * The release upload status information.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ReleasesUpdateReleaseUploadStatusRequestBody;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * A flag that indicates to extract release or not, true by default
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=extract",
  })
  extract?: boolean;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * The ID of the release upload
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=upload_id",
  })
  uploadId: string;
}

export enum ReleasesUpdateReleaseUploadStatus404ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * Error codes:
 *
 * @remarks
 * - `not_found` - The app or upload doesn't exist.
 *
 */
export class ReleasesUpdateReleaseUploadStatus404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ReleasesUpdateReleaseUploadStatus404ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export enum ReleasesUpdateReleaseUploadStatus400ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * The request contained invalid properties.
 */
export class ReleasesUpdateReleaseUploadStatus400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ReleasesUpdateReleaseUploadStatus400ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The current upload status.
 */
export enum ReleasesUpdateReleaseUploadStatus200ApplicationJSONUploadStatusEnum {
  UploadStarted = "uploadStarted",
  UploadFinished = "uploadFinished",
  UploadCanceled = "uploadCanceled",
  ReadyToBePublished = "readyToBePublished",
  MalwareDetected = "malwareDetected",
  Error = "error",
}

/**
 * Success
 */
export class ReleasesUpdateReleaseUploadStatus200ApplicationJSON extends SpeakeasyBase {
  /**
   * The ID for the upload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The current upload status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upload_status" })
  uploadStatus: ReleasesUpdateReleaseUploadStatus200ApplicationJSONUploadStatusEnum;
}

export class ReleasesUpdateReleaseUploadStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  releasesUpdateReleaseUploadStatus200ApplicationJSONObject?: ReleasesUpdateReleaseUploadStatus200ApplicationJSON;

  /**
   * The request contained invalid properties.
   */
  @SpeakeasyMetadata()
  releasesUpdateReleaseUploadStatus400ApplicationJSONObject?: ReleasesUpdateReleaseUploadStatus400ApplicationJSON;

  /**
   * Error codes:
   *
   * @remarks
   * - `not_found` - The app or upload doesn't exist.
   *
   */
  @SpeakeasyMetadata()
  releasesUpdateReleaseUploadStatus404ApplicationJSONObject?: ReleasesUpdateReleaseUploadStatus404ApplicationJSON;
}
