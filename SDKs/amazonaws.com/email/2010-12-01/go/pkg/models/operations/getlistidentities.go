// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListIdentitiesActionEnum
type GETListIdentitiesActionEnum string

const (
	GETListIdentitiesActionEnumListIdentities GETListIdentitiesActionEnum = "ListIdentities"
)

func (e *GETListIdentitiesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListIdentities":
		*e = GETListIdentitiesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListIdentitiesActionEnum: %s", s)
	}
}

// GETListIdentitiesIdentityTypeEnum - The type of the identities to list. Possible values are "EmailAddress" and "Domain". If this parameter is omitted, then all identities will be listed.
type GETListIdentitiesIdentityTypeEnum string

const (
	GETListIdentitiesIdentityTypeEnumEmailAddress GETListIdentitiesIdentityTypeEnum = "EmailAddress"
	GETListIdentitiesIdentityTypeEnumDomain       GETListIdentitiesIdentityTypeEnum = "Domain"
)

func (e *GETListIdentitiesIdentityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EmailAddress":
		fallthrough
	case "Domain":
		*e = GETListIdentitiesIdentityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListIdentitiesIdentityTypeEnum: %s", s)
	}
}

// GETListIdentitiesVersionEnum
type GETListIdentitiesVersionEnum string

const (
	GETListIdentitiesVersionEnumTwoThousandAndTen1201 GETListIdentitiesVersionEnum = "2010-12-01"
)

func (e *GETListIdentitiesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETListIdentitiesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListIdentitiesVersionEnum: %s", s)
	}
}

type GETListIdentitiesQueryParams struct {
	Action GETListIdentitiesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The type of the identities to list. Possible values are "EmailAddress" and "Domain". If this parameter is omitted, then all identities will be listed.
	IdentityType *GETListIdentitiesIdentityTypeEnum `queryParam:"style=form,explode=true,name=IdentityType"`
	// The maximum number of identities per page. Possible values are 1-1000 inclusive.
	MaxItems *int64 `queryParam:"style=form,explode=true,name=MaxItems"`
	// The token to use for pagination.
	NextToken *string                      `queryParam:"style=form,explode=true,name=NextToken"`
	Version   GETListIdentitiesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETListIdentitiesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListIdentitiesRequest struct {
	QueryParams GETListIdentitiesQueryParams
	Headers     GETListIdentitiesHeaders
}

type GETListIdentitiesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
