// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum - Specifies whether to credit the customer for unused units.
//
// If the value of this field is `CreditBySpecificRate`, use the `unusedUnitsCreditRates` field to specify the rate at which to credit the customer for unused units.
type UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum string

const (
	UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnumNoCredit             UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum = "NoCredit"
	UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnumCreditBySpecificRate UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum = "CreditBySpecificRate"
)

func (e *UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NoCredit":
		fallthrough
	case "CreditBySpecificRate":
		*e = UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum: %s", s)
	}
}

// UsageOveragePricingOverridePriceChangeOptionEnum - Specifies how Zuora changes the price of the charge each time the subscription renews.
//
// If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
type UsageOveragePricingOverridePriceChangeOptionEnum string

const (
	UsageOveragePricingOverridePriceChangeOptionEnumNoChange                       UsageOveragePricingOverridePriceChangeOptionEnum = "NoChange"
	UsageOveragePricingOverridePriceChangeOptionEnumSpecificPercentageValue        UsageOveragePricingOverridePriceChangeOptionEnum = "SpecificPercentageValue"
	UsageOveragePricingOverridePriceChangeOptionEnumUseLatestProductCatalogPricing UsageOveragePricingOverridePriceChangeOptionEnum = "UseLatestProductCatalogPricing"
)

func (e *UsageOveragePricingOverridePriceChangeOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NoChange":
		fallthrough
	case "SpecificPercentageValue":
		fallthrough
	case "UseLatestProductCatalogPricing":
		*e = UsageOveragePricingOverridePriceChangeOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UsageOveragePricingOverridePriceChangeOptionEnum: %s", s)
	}
}

// UsageOveragePricingOverride - Pricing information about a usage charge that uses the "overage" charge model. In this charge model, the charge has an allowance of free units and a fixed price per additional unit consumed.
type UsageOveragePricingOverride struct {
	// Number of free units that may be consumed.
	//
	IncludedUnits *float64 `json:"includedUnits,omitempty"`
	// Number of periods that Zuora considers when calculating overage charges with overage smoothing.
	//
	NumberOfPeriods *int64 `json:"numberOfPeriods,omitempty"`
	// Price per overage unit consumed.
	//
	OveragePrice *float64 `json:"overagePrice,omitempty"`
	// Specifies whether to credit the customer for unused units.
	//
	// If the value of this field is `CreditBySpecificRate`, use the `unusedUnitsCreditRates` field to specify the rate at which to credit the customer for unused units.
	//
	OverageUnusedUnitsCreditOption *UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum `json:"overageUnusedUnitsCreditOption,omitempty"`
	// Specifies how Zuora changes the price of the charge each time the subscription renews.
	//
	// If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
	//
	PriceChangeOption *UsageOveragePricingOverridePriceChangeOptionEnum `json:"priceChangeOption,omitempty"`
	// Specifies the percentage by which the price of the charge should change each time the subscription renews. Only applicable if the value of the `priceChangeOption` field is `SpecificPercentageValue`.
	//
	PriceIncreasePercentage *float64 `json:"priceIncreasePercentage,omitempty"`
	// Per-unit rate at which to credit the customer for unused units. Only applicable if the value of the `overageUnusedUnitsCreditOption` field is `CreditBySpecificRate`.
	//
	UnusedUnitsCreditRates *float64 `json:"unusedUnitsCreditRates,omitempty"`
}
