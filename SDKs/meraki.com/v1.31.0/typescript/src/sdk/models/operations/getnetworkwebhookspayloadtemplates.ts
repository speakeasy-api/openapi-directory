/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetNetworkWebhooksPayloadTemplatesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class GetNetworkWebhooksPayloadTemplates200ApplicationJSONHeaders extends SpeakeasyBase {
  /**
   * The name of the header attribute
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The value returned in the header attribute, in liquid template
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  template?: string;
}

export class GetNetworkWebhooksPayloadTemplates200ApplicationJSON extends SpeakeasyBase {
  /**
   * The body of the payload template, in liquid template
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  /**
   * The payload template headers, will be rendered as a key-value pair in the webhook.
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkWebhooksPayloadTemplates200ApplicationJSONHeaders,
  })
  @Expose({ name: "headers" })
  @Type(() => GetNetworkWebhooksPayloadTemplates200ApplicationJSONHeaders)
  headers?: GetNetworkWebhooksPayloadTemplates200ApplicationJSONHeaders[];

  /**
   * The name of the payload template
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Webhook payload template Id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payloadTemplateId" })
  payloadTemplateId?: string;

  /**
   * The type of the payload template
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class GetNetworkWebhooksPayloadTemplatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkWebhooksPayloadTemplates200ApplicationJSON,
  })
  getNetworkWebhooksPayloadTemplates200ApplicationJSONObjects?: GetNetworkWebhooksPayloadTemplates200ApplicationJSON[];
}
