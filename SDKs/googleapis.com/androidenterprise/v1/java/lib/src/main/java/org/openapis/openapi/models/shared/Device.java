/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Device - A Devices resource represents a mobile device managed by the EMM and belonging to a specific enterprise user.
 */
public class Device {
    /**
     * The Google Play Services Android ID for the device encoded as a lowercase hex string. For example, "123456789abcdef0".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("androidId")
    public String androidId;

    public Device withAndroidId(String androidId) {
        this.androidId = androidId;
        return this;
    }
    
    /**
     * The internal hardware codename of the device. This comes from android.os.Build.DEVICE. (field named "device" per logs/wireless/android/android_checkin.proto)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("device")
    public String device;

    public Device withDevice(String device) {
        this.device = device;
        return this;
    }
    
    /**
     * The build fingerprint of the device if known.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latestBuildFingerprint")
    public String latestBuildFingerprint;

    public Device withLatestBuildFingerprint(String latestBuildFingerprint) {
        this.latestBuildFingerprint = latestBuildFingerprint;
        return this;
    }
    
    /**
     * The manufacturer of the device. This comes from android.os.Build.MANUFACTURER.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maker")
    public String maker;

    public Device withMaker(String maker) {
        this.maker = maker;
        return this;
    }
    
    /**
     * Identifies the extent to which the device is controlled by a managed Google Play EMM in various deployment configurations. Possible values include: - "managedDevice", a device that has the EMM's device policy controller (DPC) as the device owner. - "managedProfile", a device that has a profile managed by the DPC (DPC is profile owner) in addition to a separate, personal profile that is unavailable to the DPC. - "containerApp", no longer used (deprecated). - "unmanagedProfile", a device that has been allowed (by the domain's admin, using the Admin Console to enable the privilege) to use managed Google Play, but the profile is itself not owned by a DPC. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("managementType")
    public DeviceManagementTypeEnum managementType;

    public Device withManagementType(DeviceManagementTypeEnum managementType) {
        this.managementType = managementType;
        return this;
    }
    
    /**
     * The model name of the device. This comes from android.os.Build.MODEL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public String model;

    public Device withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * The device policy for a given managed device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policy")
    public Policy policy;

    public Device withPolicy(Policy policy) {
        this.policy = policy;
        return this;
    }
    
    /**
     * The product name of the device. This comes from android.os.Build.PRODUCT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("product")
    public String product;

    public Device withProduct(String product) {
        this.product = product;
        return this;
    }
    
    /**
     * Device report updated with the latest app states for managed apps on the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("report")
    public DeviceReport report;

    public Device withReport(DeviceReport report) {
        this.report = report;
        return this;
    }
    
    /**
     * Retail brand for the device, if set. See https://developer.android.com/reference/android/os/Build.html#BRAND
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retailBrand")
    public String retailBrand;

    public Device withRetailBrand(String retailBrand) {
        this.retailBrand = retailBrand;
        return this;
    }
    
    /**
     * API compatibility version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sdkVersion")
    public Integer sdkVersion;

    public Device withSDKVersion(Integer sdkVersion) {
        this.sdkVersion = sdkVersion;
        return this;
    }
    
    public Device(){}
}
