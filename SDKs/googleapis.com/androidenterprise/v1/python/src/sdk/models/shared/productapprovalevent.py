"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProductApprovalEventApprovedEnum(str, Enum):
    r"""Whether the product was approved or unapproved. This field will always be present."""
    UNKNOWN = 'unknown'
    APPROVED = 'approved'
    UNAPPROVED = 'unapproved'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductApprovalEvent:
    r"""An event generated when a product's approval status is changed."""
    
    approved: Optional[ProductApprovalEventApprovedEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approved'), 'exclude': lambda f: f is None }})
    r"""Whether the product was approved or unapproved. This field will always be present."""  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productId'), 'exclude': lambda f: f is None }})
    r"""The id of the product (e.g. \\"app:com.google.android.gm\\") for which the approval status has changed. This field will always be present."""  
    