// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetNhInteriorItemColorEnum string

const (
	GetNhInteriorItemColorEnumAqua     GetNhInteriorItemColorEnum = "Aqua"
	GetNhInteriorItemColorEnumBeige    GetNhInteriorItemColorEnum = "Beige"
	GetNhInteriorItemColorEnumBlack    GetNhInteriorItemColorEnum = "Black"
	GetNhInteriorItemColorEnumBlue     GetNhInteriorItemColorEnum = "Blue"
	GetNhInteriorItemColorEnumBrown    GetNhInteriorItemColorEnum = "Brown"
	GetNhInteriorItemColorEnumColorful GetNhInteriorItemColorEnum = "Colorful"
	GetNhInteriorItemColorEnumGray     GetNhInteriorItemColorEnum = "Gray"
	GetNhInteriorItemColorEnumGreen    GetNhInteriorItemColorEnum = "Green"
	GetNhInteriorItemColorEnumOrange   GetNhInteriorItemColorEnum = "Orange"
	GetNhInteriorItemColorEnumPink     GetNhInteriorItemColorEnum = "Pink"
	GetNhInteriorItemColorEnumPurple   GetNhInteriorItemColorEnum = "Purple"
	GetNhInteriorItemColorEnumRed      GetNhInteriorItemColorEnum = "Red"
	GetNhInteriorItemColorEnumWhite    GetNhInteriorItemColorEnum = "White"
	GetNhInteriorItemColorEnumYellow   GetNhInteriorItemColorEnum = "Yellow"
)

func (e GetNhInteriorItemColorEnum) ToPointer() *GetNhInteriorItemColorEnum {
	return &e
}

func (e *GetNhInteriorItemColorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Aqua":
		fallthrough
	case "Beige":
		fallthrough
	case "Black":
		fallthrough
	case "Blue":
		fallthrough
	case "Brown":
		fallthrough
	case "Colorful":
		fallthrough
	case "Gray":
		fallthrough
	case "Green":
		fallthrough
	case "Orange":
		fallthrough
	case "Pink":
		fallthrough
	case "Purple":
		fallthrough
	case "Red":
		fallthrough
	case "White":
		fallthrough
	case "Yellow":
		*e = GetNhInteriorItemColorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNhInteriorItemColorEnum: %v", v)
	}
}

type GetNhInteriorItemRequest struct {
	// The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
	AcceptVersion string `header:"style=simple,explode=false,name=Accept-Version"`
	// Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
	XAPIKey string `header:"style=simple,explode=false,name=X-API-KEY"`
	// Return furniture that matches the provided colors (may specify one or two colors).
	Color []GetNhInteriorItemColorEnum `queryParam:"style=form,explode=true,name=color"`
	// The name of the interior item you wish to retrieve information about.
	Item string `pathParam:"style=simple,explode=false,name=item"`
	// Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
	Thumbsize *int64 `queryParam:"style=form,explode=true,name=thumbsize"`
}

type GetNhInteriorItemResponse struct {
	ContentType string
	// Failed to authenticate user from `X-API-KEY`.
	Error401 *shared.Error401
	// There was an error fetching the requested data.
	Error500 *shared.Error500
	// A JSON object describing the interior item.
	NHInterior  *shared.NHInterior
	StatusCode  int
	RawResponse *http.Response
}
