"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import page_of_variant_sets as shared_page_of_variant_sets
from enum import Enum
from typing import Optional

class GetVariantSetsArchiveCollectionPerPageEnum(str, Enum):
    r"""Results per page {error_msg}"""
    TWO = '2'
    TEN = '10'
    TWENTY = '20'
    THIRTY = '30'
    FORTY = '40'
    FIFTY = '50'


@dataclasses.dataclass
class GetVariantSetsArchiveCollectionRequest:
    
    day: int = dataclasses.field(metadata={'path_param': { 'field_name': 'day', 'style': 'simple', 'explode': False }})  
    month: int = dataclasses.field(metadata={'path_param': { 'field_name': 'month', 'style': 'simple', 'explode': False }})  
    year: int = dataclasses.field(metadata={'path_param': { 'field_name': 'year', 'style': 'simple', 'explode': False }})  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    per_page: Optional[GetVariantSetsArchiveCollectionPerPageEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Results per page {error_msg}"""  
    

@dataclasses.dataclass
class GetVariantSetsArchiveCollectionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    page_of_variant_sets: Optional[shared_page_of_variant_sets.PageOfVariantSets] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    