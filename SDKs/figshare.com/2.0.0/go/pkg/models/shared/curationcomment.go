// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CurationCommentTypeEnum - The ID of the account which generated this comment.
type CurationCommentTypeEnum string

const (
	CurationCommentTypeEnumComment  CurationCommentTypeEnum = "comment"
	CurationCommentTypeEnumApproved CurationCommentTypeEnum = "approved"
	CurationCommentTypeEnumRejected CurationCommentTypeEnum = "rejected"
	CurationCommentTypeEnumClosed   CurationCommentTypeEnum = "closed"
)

func (e *CurationCommentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "comment":
		fallthrough
	case "approved":
		fallthrough
	case "rejected":
		fallthrough
	case "closed":
		*e = CurationCommentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CurationCommentTypeEnum: %s", s)
	}
}

// CurationComment - OK. A curation review's comments.
type CurationComment struct {
	// The ID of the account which generated this comment.
	AccountID *int64 `json:"account_id,omitempty"`
	// The ID of the comment.
	ID *int64 `json:"id,omitempty"`
	// The value/content of the comment.
	Text *string `json:"text,omitempty"`
	// The ID of the account which generated this comment.
	Type *CurationCommentTypeEnum `json:"type,omitempty"`
}
