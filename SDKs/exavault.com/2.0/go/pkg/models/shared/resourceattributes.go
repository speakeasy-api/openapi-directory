// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ResourceAttributesPreviewableEnum - Can resource be previewed. Property equals `null` if resource `type` is dir.
type ResourceAttributesPreviewableEnum string

const (
	ResourceAttributesPreviewableEnumTrue  ResourceAttributesPreviewableEnum = "true"
	ResourceAttributesPreviewableEnumFalse ResourceAttributesPreviewableEnum = "false"
)

func (e *ResourceAttributesPreviewableEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "true":
		fallthrough
	case "false":
		*e = ResourceAttributesPreviewableEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceAttributesPreviewableEnum: %s", s)
	}
}

// ResourceAttributesTypeEnum - Type of the resource.
type ResourceAttributesTypeEnum string

const (
	ResourceAttributesTypeEnumFile ResourceAttributesTypeEnum = "file"
	ResourceAttributesTypeEnumDir  ResourceAttributesTypeEnum = "dir"
)

func (e *ResourceAttributesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "file":
		fallthrough
	case "dir":
		*e = ResourceAttributesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceAttributesTypeEnum: %s", s)
	}
}

// ResourceAttributes - Attributes of resource
type ResourceAttributes struct {
	// Date-time of the time when resource was accessed.
	AccessedAt *time.Time `json:"accessedAt,omitempty"`
	// UNIX timestamp of last access
	AccessedTime *int `json:"accessedTime,omitempty"`
	// Date-time of resource creation.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Username of the creator.
	CreatedBy *string `json:"createdBy,omitempty"`
	// UNIX timestamp of resource creation
	CreatedTime *int `json:"createdTime,omitempty"`
	// Resource extension. Property exists only if resource `type` is file.
	Extension *string `json:"extension,omitempty"`
	// Number of files within folder. null if resource type is a file.
	FileCount *int64 `json:"fileCount,omitempty"`
	// Unique hash of the resource.
	Hash *string `json:"hash,omitempty"`
	// Resource name, e.g. the name of the file or folder.
	Name *string `json:"name,omitempty"`
	// Full path to the resource.
	Path *string `json:"path,omitempty"`
	// Can resource be previewed. Property equals `null` if resource `type` is dir.
	Previewable *ResourceAttributesPreviewableEnum `json:"previewable,omitempty"`
	// Resource size in bytes
	Size *int64 `json:"size,omitempty"`
	// Type of the resource.
	Type *ResourceAttributesTypeEnum `json:"type,omitempty"`
	// Date-time of resource modification.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// UNIX timestamp of resource modification
	UpdatedTime *int `json:"updatedTime,omitempty"`
	// Timestamp of resource upload.
	UploadDate *time.Time `json:"uploadDate,omitempty"`
}
