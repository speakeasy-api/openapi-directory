/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TokenRequest {
    /**
     * The [capabilities](https://www.ably.io/documentation/core-features/authentication#capabilities-explained) (i.e. a set of channel names/namespaces and, for each, a set of operations) which should be a subset of the set of capabilities associated with the key specified in keyName.
     */
    @JsonProperty("capability")
    public java.util.Map<String, Object> capability;

    public TokenRequest withCapability(java.util.Map<String, Object> capability) {
        this.capability = capability;
        return this;
    }
    
    /**
     * The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients) to be assosciated with the token. Can be set to * to allow for any client ID to be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;

    public TokenRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Name of the key used for the TokenRequest. The keyName comprises of the app ID and key ID on an API Key.
     */
    @JsonProperty("keyName")
    public String keyName;

    public TokenRequest withKeyName(String keyName) {
        this.keyName = keyName;
        return this;
    }
    
    /**
     * An unquoted, un-escaped random string of at least 16 characters. Used to ensure the Ably TokenRequest cannot be reused.
     */
    @JsonProperty("nonce")
    public String nonce;

    public TokenRequest withNonce(String nonce) {
        this.nonce = nonce;
        return this;
    }
    
    /**
     * Time of creation of the Ably TokenRequest.
     */
    @JsonProperty("timestamp")
    public Long timestamp;

    public TokenRequest withTimestamp(Long timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    public TokenRequest(@JsonProperty("capability") java.util.Map<String, Object> capability, @JsonProperty("keyName") String keyName, @JsonProperty("nonce") String nonce, @JsonProperty("timestamp") Long timestamp) {
        this.capability = capability;
        this.keyName = keyName;
        this.nonce = nonce;
        this.timestamp = timestamp;
  }
}
