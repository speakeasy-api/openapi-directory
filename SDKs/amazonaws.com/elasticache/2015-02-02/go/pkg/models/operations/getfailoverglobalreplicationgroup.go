// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETFailoverGlobalReplicationGroupActionEnum
type GETFailoverGlobalReplicationGroupActionEnum string

const (
	GETFailoverGlobalReplicationGroupActionEnumFailoverGlobalReplicationGroup GETFailoverGlobalReplicationGroupActionEnum = "FailoverGlobalReplicationGroup"
)

func (e GETFailoverGlobalReplicationGroupActionEnum) ToPointer() *GETFailoverGlobalReplicationGroupActionEnum {
	return &e
}

func (e *GETFailoverGlobalReplicationGroupActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FailoverGlobalReplicationGroup":
		*e = GETFailoverGlobalReplicationGroupActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETFailoverGlobalReplicationGroupActionEnum: %v", v)
	}
}

// GETFailoverGlobalReplicationGroupVersionEnum
type GETFailoverGlobalReplicationGroupVersionEnum string

const (
	GETFailoverGlobalReplicationGroupVersionEnumTwoThousandAndFifteen0202 GETFailoverGlobalReplicationGroupVersionEnum = "2015-02-02"
)

func (e GETFailoverGlobalReplicationGroupVersionEnum) ToPointer() *GETFailoverGlobalReplicationGroupVersionEnum {
	return &e
}

func (e *GETFailoverGlobalReplicationGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETFailoverGlobalReplicationGroupVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETFailoverGlobalReplicationGroupVersionEnum: %v", v)
	}
}

type GETFailoverGlobalReplicationGroupRequest struct {
	Action GETFailoverGlobalReplicationGroupActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Global datastore
	GlobalReplicationGroupID string `queryParam:"style=form,explode=true,name=GlobalReplicationGroupId"`
	// The Amazon region of the primary cluster of the Global datastore
	PrimaryRegion string `queryParam:"style=form,explode=true,name=PrimaryRegion"`
	// The name of the primary replication group
	PrimaryReplicationGroupID string                                       `queryParam:"style=form,explode=true,name=PrimaryReplicationGroupId"`
	Version                   GETFailoverGlobalReplicationGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm             *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETFailoverGlobalReplicationGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
