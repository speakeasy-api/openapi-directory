// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateConfigurationSetActionEnum
type GETCreateConfigurationSetActionEnum string

const (
	GETCreateConfigurationSetActionEnumCreateConfigurationSet GETCreateConfigurationSetActionEnum = "CreateConfigurationSet"
)

func (e *GETCreateConfigurationSetActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateConfigurationSet":
		*e = GETCreateConfigurationSetActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateConfigurationSetActionEnum: %s", s)
	}
}

// GETCreateConfigurationSetConfigurationSet - <p>The name of the configuration set.</p> <p>Configuration sets let you create groups of rules that you can apply to the emails you send using Amazon SES. For more information about using configuration sets, see <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/using-configuration-sets.html">Using Amazon SES Configuration Sets</a> in the <a href="https://docs.aws.amazon.com/ses/latest/DeveloperGuide/">Amazon SES Developer Guide</a>.</p>
type GETCreateConfigurationSetConfigurationSet struct {
	Name string `queryParam:"name=Name"`
}

// GETCreateConfigurationSetVersionEnum
type GETCreateConfigurationSetVersionEnum string

const (
	GETCreateConfigurationSetVersionEnumTwoThousandAndTen1201 GETCreateConfigurationSetVersionEnum = "2010-12-01"
)

func (e *GETCreateConfigurationSetVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETCreateConfigurationSetVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateConfigurationSetVersionEnum: %s", s)
	}
}

type GETCreateConfigurationSetQueryParams struct {
	Action GETCreateConfigurationSetActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A data structure that contains the name of the configuration set.
	ConfigurationSet GETCreateConfigurationSetConfigurationSet `queryParam:"style=form,explode=true,name=ConfigurationSet"`
	Version          GETCreateConfigurationSetVersionEnum      `queryParam:"style=form,explode=true,name=Version"`
}

type GETCreateConfigurationSetHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateConfigurationSetRequest struct {
	QueryParams GETCreateConfigurationSetQueryParams
	Headers     GETCreateConfigurationSetHeaders
}

type GETCreateConfigurationSetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
