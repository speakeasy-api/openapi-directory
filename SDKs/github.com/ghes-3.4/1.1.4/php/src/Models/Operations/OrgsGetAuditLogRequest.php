<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class OrgsGetAuditLogRequest
{
    /**
     * A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events after this cursor.
     * 
     * @var ?string $after
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=after')]
    public ?string $after = null;
    
    /**
     * A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.4/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for events before this cursor.
     * 
     * @var ?string $before
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=before')]
    public ?string $before = null;
    
    /**
     * The event types to include:
     * 
     * 
     * - `web` - returns web (non-Git) events.
     * - `git` - returns Git events.
     * - `all` - returns both web and Git events.
     * 
     * The default is `web`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuditLogIncludeEnum $include
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AuditLogIncludeEnum $include = null;
    
    /**
     * The order of audit log events. To list newest events first, specify `desc`. To list oldest events first, specify `asc`.
     * 
     * 
     * The default is `desc`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuditLogOrderEnum $order
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AuditLogOrderEnum $order = null;
    
    /**
     * The organization name. The name is not case sensitive.
     * 
     * @var string $org
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=org')]
    public string $org;
    
    /**
     * Page number of the results to fetch.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results per page (max 100).
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * A search phrase. For more information, see [Searching the audit log](https://docs.github.com/enterprise-server@3.4/github/setting-up-and-managing-organizations-and-teams/reviewing-the-audit-log-for-your-organization#searching-the-audit-log).
     * 
     * @var ?string $phrase
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=phrase')]
    public ?string $phrase = null;
    
	public function __construct()
	{
		$this->after = null;
		$this->before = null;
		$this->include = null;
		$this->order = null;
		$this->org = "";
		$this->page = null;
		$this->perPage = null;
		$this->phrase = null;
	}
}
