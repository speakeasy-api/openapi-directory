// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PerformanceIndicatorTypeEnum - Indicate on which indicator or value you want to make your formula
type PerformanceIndicatorTypeEnum string

const (
	PerformanceIndicatorTypeEnumClickCount           PerformanceIndicatorTypeEnum = "ClickCount"
	PerformanceIndicatorTypeEnumCost                 PerformanceIndicatorTypeEnum = "Cost"
	PerformanceIndicatorTypeEnumOrderCount           PerformanceIndicatorTypeEnum = "OrderCount"
	PerformanceIndicatorTypeEnumProductCount         PerformanceIndicatorTypeEnum = "ProductCount"
	PerformanceIndicatorTypeEnumSoldProductCount     PerformanceIndicatorTypeEnum = "SoldProductCount"
	PerformanceIndicatorTypeEnumDisabledProductCount PerformanceIndicatorTypeEnum = "DisabledProductCount"
	PerformanceIndicatorTypeEnumEnabledProductCount  PerformanceIndicatorTypeEnum = "EnabledProductCount"
	PerformanceIndicatorTypeEnumTotalSales           PerformanceIndicatorTypeEnum = "TotalSales"
	PerformanceIndicatorTypeEnumMargin               PerformanceIndicatorTypeEnum = "Margin"
	PerformanceIndicatorTypeEnumRoi                  PerformanceIndicatorTypeEnum = "ROI"
	PerformanceIndicatorTypeEnumPerformanceIndicator PerformanceIndicatorTypeEnum = "PerformanceIndicator"
)

func (e *PerformanceIndicatorTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ClickCount":
		fallthrough
	case "Cost":
		fallthrough
	case "OrderCount":
		fallthrough
	case "ProductCount":
		fallthrough
	case "SoldProductCount":
		fallthrough
	case "DisabledProductCount":
		fallthrough
	case "EnabledProductCount":
		fallthrough
	case "TotalSales":
		fallthrough
	case "Margin":
		fallthrough
	case "ROI":
		fallthrough
	case "PerformanceIndicator":
		*e = PerformanceIndicatorTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PerformanceIndicatorTypeEnum: %s", s)
	}
}
