// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteReportXAmzTargetEnum
type DeleteReportXAmzTargetEnum string

const (
	DeleteReportXAmzTargetEnumCodeBuild20161006DeleteReport DeleteReportXAmzTargetEnum = "CodeBuild_20161006.DeleteReport"
)

func (e *DeleteReportXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeBuild_20161006.DeleteReport":
		*e = DeleteReportXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteReportXAmzTargetEnum: %s", s)
	}
}

type DeleteReportHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteReportXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteReportRequest struct {
	Headers DeleteReportHeaders
	Request shared.DeleteReportInput `request:"mediaType=application/json"`
}

type DeleteReportResponse struct {
	ContentType string
	// Success
	DeleteReportOutput map[string]interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
