// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetLicenseConfigurationXAmzTargetEnum
type GetLicenseConfigurationXAmzTargetEnum string

const (
	GetLicenseConfigurationXAmzTargetEnumAwsLicenseManagerGetLicenseConfiguration GetLicenseConfigurationXAmzTargetEnum = "AWSLicenseManager.GetLicenseConfiguration"
)

func (e *GetLicenseConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSLicenseManager.GetLicenseConfiguration":
		*e = GetLicenseConfigurationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLicenseConfigurationXAmzTargetEnum: %s", s)
	}
}

type GetLicenseConfigurationHeaders struct {
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetLicenseConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetLicenseConfigurationRequest struct {
	Headers GetLicenseConfigurationHeaders
	Request shared.GetLicenseConfigurationRequest `request:"mediaType=application/json"`
}

type GetLicenseConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	ContentType            string
	// Success
	GetLicenseConfigurationResponse *shared.GetLicenseConfigurationResponse
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// RateLimitExceededException
	RateLimitExceededException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ServerInternalException
	ServerInternalException interface{}
}
