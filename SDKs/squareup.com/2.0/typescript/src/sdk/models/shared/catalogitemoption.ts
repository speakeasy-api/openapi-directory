/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CatalogObject } from "./catalogobject";
import { Expose, Type } from "class-transformer";

/**
 * A group of variations for a `CatalogItem`.
 */
export class CatalogItemOption extends SpeakeasyBase {
  /**
   * The item option's human-readable description. Displayed in the Square
   *
   * @remarks
   * Point of Sale app for the seller and in the Online Store or on receipts for
   * the buyer. This is a searchable attribute for use in applicable query filters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The item option's display name for the customer. This is a searchable attribute for use in applicable query filters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * The item option's display name for the seller. Must be unique across
   *
   * @remarks
   * all item options. This is a searchable attribute for use in applicable query filters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * If true, display colors for entries in `values` when present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "show_colors" })
  showColors?: boolean;

  /**
   * A list of CatalogObjects containing the
   *
   * @remarks
   * `CatalogItemOptionValue`s for this item.
   */
  @SpeakeasyMetadata({ elemType: CatalogObject })
  @Expose({ name: "values" })
  @Type(() => CatalogObject)
  values?: CatalogObject[];
}
