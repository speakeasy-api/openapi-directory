"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inputparallelismupdate as shared_inputparallelismupdate
from ..shared import inputprocessingconfigurationupdate as shared_inputprocessingconfigurationupdate
from ..shared import inputschemaupdate as shared_inputschemaupdate
from ..shared import kinesisfirehoseinputupdate as shared_kinesisfirehoseinputupdate
from ..shared import kinesisstreamsinputupdate as shared_kinesisstreamsinputupdate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InputUpdate:
    r"""Describes updates to a specific input configuration (identified by the <code>InputId</code> of an application)."""
    
    input_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputId') }})  
    input_parallelism_update: Optional[shared_inputparallelismupdate.InputParallelismUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputParallelismUpdate'), 'exclude': lambda f: f is None }})  
    input_processing_configuration_update: Optional[shared_inputprocessingconfigurationupdate.InputProcessingConfigurationUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputProcessingConfigurationUpdate'), 'exclude': lambda f: f is None }})  
    input_schema_update: Optional[shared_inputschemaupdate.InputSchemaUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputSchemaUpdate'), 'exclude': lambda f: f is None }})  
    kinesis_firehose_input_update: Optional[shared_kinesisfirehoseinputupdate.KinesisFirehoseInputUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisFirehoseInputUpdate'), 'exclude': lambda f: f is None }})  
    kinesis_streams_input_update: Optional[shared_kinesisstreamsinputupdate.KinesisStreamsInputUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisStreamsInputUpdate'), 'exclude': lambda f: f is None }})  
    name_prefix_update: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NamePrefixUpdate'), 'exclude': lambda f: f is None }})  
    