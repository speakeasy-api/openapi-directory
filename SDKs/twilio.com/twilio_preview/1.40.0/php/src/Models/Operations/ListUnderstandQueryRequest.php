<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListUnderstandQueryRequest
{
    /**
     * The unique ID of the parent Assistant.
     * 
     * @var string $assistantSid
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=AssistantSid')]
    public string $assistantSid;
    
    /**
     * An ISO language-country string of the sample.
     * 
     * @var ?string $language
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Language')]
    public ?string $language = null;
    
    /**
     * The Model Build Sid or unique name of the Model Build to be queried.
     * 
     * @var ?string $modelBuild
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ModelBuild')]
    public ?string $modelBuild = null;
    
    /**
     * The page index. This value is simply for client state.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Page')]
    public ?int $page = null;
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageSize')]
    public ?int $pageSize = null;
    
    /**
     * The page token. This is provided by the API.
     * 
     * @var ?string $pageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageToken')]
    public ?string $pageToken = null;
    
    /**
     * A string that described the query status. The values can be: pending_review, reviewed, discarded
     * 
     * @var ?string $status
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Status')]
    public ?string $status = null;
    
	public function __construct()
	{
		$this->assistantSid = "";
		$this->language = null;
		$this->modelBuild = null;
		$this->page = null;
		$this->pageSize = null;
		$this->pageToken = null;
		$this->status = null;
	}
}
