// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GETDescribeEventsActionEnum
type GETDescribeEventsActionEnum string

const (
	GETDescribeEventsActionEnumDescribeEvents GETDescribeEventsActionEnum = "DescribeEvents"
)

func (e GETDescribeEventsActionEnum) ToPointer() *GETDescribeEventsActionEnum {
	return &e
}

func (e *GETDescribeEventsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeEvents":
		*e = GETDescribeEventsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventsActionEnum: %v", v)
	}
}

// GETDescribeEventsSeverityEnum - If specified, limits the events returned from this call to include only those with the specified severity or higher.
type GETDescribeEventsSeverityEnum string

const (
	GETDescribeEventsSeverityEnumTrace GETDescribeEventsSeverityEnum = "TRACE"
	GETDescribeEventsSeverityEnumDebug GETDescribeEventsSeverityEnum = "DEBUG"
	GETDescribeEventsSeverityEnumInfo  GETDescribeEventsSeverityEnum = "INFO"
	GETDescribeEventsSeverityEnumWarn  GETDescribeEventsSeverityEnum = "WARN"
	GETDescribeEventsSeverityEnumError GETDescribeEventsSeverityEnum = "ERROR"
	GETDescribeEventsSeverityEnumFatal GETDescribeEventsSeverityEnum = "FATAL"
)

func (e GETDescribeEventsSeverityEnum) ToPointer() *GETDescribeEventsSeverityEnum {
	return &e
}

func (e *GETDescribeEventsSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TRACE":
		fallthrough
	case "DEBUG":
		fallthrough
	case "INFO":
		fallthrough
	case "WARN":
		fallthrough
	case "ERROR":
		fallthrough
	case "FATAL":
		*e = GETDescribeEventsSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventsSeverityEnum: %v", v)
	}
}

// GETDescribeEventsVersionEnum
type GETDescribeEventsVersionEnum string

const (
	GETDescribeEventsVersionEnumTwoThousandAndTen1201 GETDescribeEventsVersionEnum = "2010-12-01"
)

func (e GETDescribeEventsVersionEnum) ToPointer() *GETDescribeEventsVersionEnum {
	return &e
}

func (e *GETDescribeEventsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETDescribeEventsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEventsVersionEnum: %v", v)
	}
}

type GETDescribeEventsRequest struct {
	Action GETDescribeEventsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to include only those associated with this application.
	ApplicationName *string `queryParam:"style=form,explode=true,name=ApplicationName"`
	//  If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur up to, but not including, the <code>EndTime</code>.
	EndTime *time.Time `queryParam:"style=form,explode=true,name=EndTime"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.
	EnvironmentID *string `queryParam:"style=form,explode=true,name=EnvironmentId"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this environment.
	EnvironmentName *string `queryParam:"style=form,explode=true,name=EnvironmentName"`
	// Specifies the maximum number of events that can be returned, beginning with the most recent event.
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// Pagination token. If specified, the events return the next batch of results.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// The ARN of a custom platform version. If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this custom platform version.
	PlatformArn *string `queryParam:"style=form,explode=true,name=PlatformArn"`
	// If specified, AWS Elastic Beanstalk restricts the described events to include only those associated with this request ID.
	RequestID *string `queryParam:"style=form,explode=true,name=RequestId"`
	// If specified, limits the events returned from this call to include only those with the specified severity or higher.
	Severity *GETDescribeEventsSeverityEnum `queryParam:"style=form,explode=true,name=Severity"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that occur on or after this time.
	StartTime *time.Time `queryParam:"style=form,explode=true,name=StartTime"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to those that are associated with this environment configuration.
	TemplateName *string                      `queryParam:"style=form,explode=true,name=TemplateName"`
	Version      GETDescribeEventsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// If specified, AWS Elastic Beanstalk restricts the returned descriptions to those associated with this application version.
	VersionLabel      *string `queryParam:"style=form,explode=true,name=VersionLabel"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeEventsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
