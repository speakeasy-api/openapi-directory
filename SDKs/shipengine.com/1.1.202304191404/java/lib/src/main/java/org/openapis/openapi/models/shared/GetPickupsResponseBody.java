/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetPickupsResponseBody - An error response body
 */
public class GetPickupsResponseBody {
    /**
     * The errors associated with the failed API call
     */
    @JsonProperty("errors")
    public Error[] errors;

    public GetPickupsResponseBody withErrors(Error[] errors) {
        this.errors = errors;
        return this;
    }
    
    /**
     * Helpful links to other pages of results
     */
    @JsonProperty("links")
    public GetPickupsResponseBodyPaginationLink links;

    public GetPickupsResponseBody withLinks(GetPickupsResponseBodyPaginationLink links) {
        this.links = links;
        return this;
    }
    
    /**
     * Current page of the list pickups results
     */
    @JsonProperty("page")
    public Integer page;

    public GetPickupsResponseBody withPage(Integer page) {
        this.page = page;
        return this;
    }
    
    /**
     * Total number of pages for list pickups results
     */
    @JsonProperty("pages")
    public Integer pages;

    public GetPickupsResponseBody withPages(Integer pages) {
        this.pages = pages;
        return this;
    }
    
    /**
     * An array of pickups associated with the user's account.
     */
    @JsonProperty("pickups")
    public PickupOutput[] pickups;

    public GetPickupsResponseBody withPickups(PickupOutput[] pickups) {
        this.pickups = pickups;
        return this;
    }
    
    /**
     * A UUID that uniquely identifies the request id.
     * This can be given to the support team to help debug non-trivial issues that may occur
     * 
     */
    @JsonProperty("request_id")
    public String requestId;

    public GetPickupsResponseBody withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    /**
     * The total number of pickups returned
     */
    @JsonProperty("total")
    public Long total;

    public GetPickupsResponseBody withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    public GetPickupsResponseBody(@JsonProperty("errors") Error[] errors, @JsonProperty("links") GetPickupsResponseBodyPaginationLink links, @JsonProperty("page") Integer page, @JsonProperty("pages") Integer pages, @JsonProperty("pickups") PickupOutput[] pickups, @JsonProperty("request_id") String requestId, @JsonProperty("total") Long total) {
        this.errors = errors;
        this.links = links;
        this.page = page;
        this.pages = pages;
        this.pickups = pickups;
        this.requestId = requestId;
        this.total = total;
  }
}
