// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetEventsV3EventsGetPageSecurity struct {
	Hapikey           *shared.SchemeHapikey           `security:"scheme,type=apiKey,subtype=query"`
	Oauth2Legacy      *shared.SchemeOauth2Legacy      `security:"scheme,type=oauth2"`
	PrivateAppsLegacy *shared.SchemePrivateAppsLegacy `security:"scheme,type=apiKey,subtype=header"`
}

type GetEventsV3EventsGetPageQueryParams struct {
	// An additional parameter that may be used to get the next `limit` set of results.
	After  *string `queryParam:"style=form,explode=true,name=after"`
	Before *string `queryParam:"style=form,explode=true,name=before"`
	// Limits the response to the specified event type.  For example `&eventType=e_visited_page` returns only `e_visited_page` events.  If not present all event types are returned.
	EventType *string `queryParam:"style=form,explode=true,name=eventType"`
	// The maximum number of events to return, defaults to 20.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// The id of the selected object. If not present, then the `objectProperty` parameter is required.
	ObjectID *int64 `queryParam:"style=form,explode=true,name=objectId"`
	// The type of object being selected. Valid values are hubspot named object types (e.g. `contact`).
	ObjectType *string `queryParam:"style=form,explode=true,name=objectType"`
	// The starting time as an ISO 8601 timestamp.
	OccurredAfter *time.Time `queryParam:"style=form,explode=true,name=occurredAfter"`
	// The ending time as an ISO 8601 timestamp.
	OccurredBefore *time.Time `queryParam:"style=form,explode=true,name=occurredBefore"`
	// Selects the sort field and order. Defaults to ascending, prefix with `-` for descending order. `occurredAt` is the only field supported for sorting.
	Sort []string `queryParam:"style=form,explode=true,name=sort"`
}

type GetEventsV3EventsGetPageRequest struct {
	QueryParams GetEventsV3EventsGetPageQueryParams
	Security    GetEventsV3EventsGetPageSecurity
}

type GetEventsV3EventsGetPageResponse struct {
	Body []byte
	// successful operation
	CollectionResponseExternalUnifiedEvent *shared.CollectionResponseExternalUnifiedEvent
	ContentType                            string
	StatusCode                             int
	RawResponse                            *http.Response
}
