"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import taskschedulingerror as shared_taskschedulingerror
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class StartTaskInformationStateEnum(str, Enum):
    r"""Gets or sets the state of the start task on the compute node."""
    RUNNING = 'running'
    COMPLETED = 'completed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartTaskInformation:
    r"""Information about a start task running on a compute node."""
    
    retry_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retryCount') }})
    r"""Gets or sets the number of times the task has been retried by the Batch service."""  
    start_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Gets or sets the time at which the start task started running."""  
    state: StartTaskInformationStateEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})
    r"""Gets or sets the state of the start task on the compute node."""  
    end_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the time at which the start task stopped running."""  
    exit_code: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exitCode'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the exit code of the start task."""  
    last_retry_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastRetryTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the most recent time at which a retry of the task started running."""  
    scheduling_error: Optional[shared_taskschedulingerror.TaskSchedulingError] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schedulingError'), 'exclude': lambda f: f is None }})
    r"""Information about an error when scheduling a task."""  
    