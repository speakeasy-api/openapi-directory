// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LagStateEnum string

const (
	LagStateEnumRequested LagStateEnum = "requested"
	LagStateEnumPending   LagStateEnum = "pending"
	LagStateEnumAvailable LagStateEnum = "available"
	LagStateEnumDown      LagStateEnum = "down"
	LagStateEnumDeleting  LagStateEnum = "deleting"
	LagStateEnumDeleted   LagStateEnum = "deleted"
	LagStateEnumUnknown   LagStateEnum = "unknown"
)

func (e LagStateEnum) ToPointer() *LagStateEnum {
	return &e
}

func (e *LagStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "requested":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "down":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "unknown":
		*e = LagStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LagStateEnum: %v", v)
	}
}
