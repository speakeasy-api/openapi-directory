/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionEngineConfig } from "./executionengineconfig";
import { NotebookExecutionStatusEnum } from "./notebookexecutionstatusenum";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A notebook execution. An execution is a specific instance that an EMR Notebook is run using the <code>StartNotebookExecution</code> action.
 */
export class NotebookExecution extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EditorId" })
  editorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionEngine" })
  @Type(() => ExecutionEngineConfig)
  executionEngine?: ExecutionEngineConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "LastStateChangeReason" })
  lastStateChangeReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotebookExecutionId" })
  notebookExecutionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotebookExecutionName" })
  notebookExecutionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotebookInstanceSecurityGroupId" })
  notebookInstanceSecurityGroupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotebookParams" })
  notebookParams?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputNotebookURI" })
  outputNotebookURI?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: NotebookExecutionStatusEnum;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
