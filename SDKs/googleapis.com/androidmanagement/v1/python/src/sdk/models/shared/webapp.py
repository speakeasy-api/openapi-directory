"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import webappicon as shared_webappicon
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class WebAppDisplayModeEnum(str, Enum):
    r"""The display mode of the web app."""
    DISPLAY_MODE_UNSPECIFIED = 'DISPLAY_MODE_UNSPECIFIED'
    MINIMAL_UI = 'MINIMAL_UI'
    STANDALONE = 'STANDALONE'
    FULL_SCREEN = 'FULL_SCREEN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebApp:
    r"""A web app."""
    
    display_mode: Optional[WebAppDisplayModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayMode'), 'exclude': lambda f: f is None }})
    r"""The display mode of the web app."""  
    icons: Optional[list[shared_webappicon.WebAppIcon]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icons'), 'exclude': lambda f: f is None }})
    r"""A list of icons for the web app. Must have at least one element."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the web app, which is generated by the server during creation in the form enterprises/{enterpriseId}/webApps/{packageName}."""  
    start_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startUrl'), 'exclude': lambda f: f is None }})
    r"""The start URL, i.e. the URL that should load when the user opens the application."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The title of the web app as displayed to the user (e.g., amongst a list of other applications, or as a label for an icon)."""  
    version_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionCode'), 'exclude': lambda f: f is None }})
    r"""The current version of the app.Note that the version can automatically increase during the lifetime of the web app, while Google does internal housekeeping to keep the web app up-to-date."""  
    