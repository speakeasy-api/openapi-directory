/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class KYCVerificationResult {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountHolder")
    public KYCCheckResult accountHolder;

    public KYCVerificationResult withAccountHolder(KYCCheckResult accountHolder) {
        this.accountHolder = accountHolder;
        return this;
    }
    
    /**
     * The results of the checks on the legal arrangements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legalArrangements")
    public KYCLegalArrangementCheckResult[] legalArrangements;

    public KYCVerificationResult withLegalArrangements(KYCLegalArrangementCheckResult[] legalArrangements) {
        this.legalArrangements = legalArrangements;
        return this;
    }
    
    /**
     * The results of the checks on the legal arrangement entities.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legalArrangementsEntities")
    public KYCLegalArrangementEntityCheckResult[] legalArrangementsEntities;

    public KYCVerificationResult withLegalArrangementsEntities(KYCLegalArrangementEntityCheckResult[] legalArrangementsEntities) {
        this.legalArrangementsEntities = legalArrangementsEntities;
        return this;
    }
    
    /**
     * The results of the checks on the payout methods.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutMethods")
    public KYCPayoutMethodCheckResult[] payoutMethods;

    public KYCVerificationResult withPayoutMethods(KYCPayoutMethodCheckResult[] payoutMethods) {
        this.payoutMethods = payoutMethods;
        return this;
    }
    
    /**
     * The results of the checks on the shareholders.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareholders")
    public KYCShareholderCheckResult[] shareholders;

    public KYCVerificationResult withShareholders(KYCShareholderCheckResult[] shareholders) {
        this.shareholders = shareholders;
        return this;
    }
    
    /**
     * The results of the checks on the signatories.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signatories")
    public KYCSignatoryCheckResult[] signatories;

    public KYCVerificationResult withSignatories(KYCSignatoryCheckResult[] signatories) {
        this.signatories = signatories;
        return this;
    }
    
    /**
     * The result of the check on the Ultimate Parent Company.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ultimateParentCompany")
    public KYCUltimateParentCompanyCheckResult[] ultimateParentCompany;

    public KYCVerificationResult withUltimateParentCompany(KYCUltimateParentCompanyCheckResult[] ultimateParentCompany) {
        this.ultimateParentCompany = ultimateParentCompany;
        return this;
    }
    
    public KYCVerificationResult(){}
}
