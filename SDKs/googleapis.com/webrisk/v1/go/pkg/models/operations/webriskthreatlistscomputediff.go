// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type WebriskThreatListsComputeDiffSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum string

const (
	WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnumCompressionTypeUnspecified WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum = "COMPRESSION_TYPE_UNSPECIFIED"
	WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnumRaw                        WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum = "RAW"
	WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnumRice                       WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum = "RICE"
)

func (e *WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPRESSION_TYPE_UNSPECIFIED":
		fallthrough
	case "RAW":
		fallthrough
	case "RICE":
		*e = WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum: %s", s)
	}
}

// WebriskThreatListsComputeDiffThreatTypeEnum - Required. The threat list to update. Only a single ThreatType should be specified per request. If you want to handle multiple ThreatTypes, you must make one request per ThreatType.
type WebriskThreatListsComputeDiffThreatTypeEnum string

const (
	WebriskThreatListsComputeDiffThreatTypeEnumThreatTypeUnspecified             WebriskThreatListsComputeDiffThreatTypeEnum = "THREAT_TYPE_UNSPECIFIED"
	WebriskThreatListsComputeDiffThreatTypeEnumMalware                           WebriskThreatListsComputeDiffThreatTypeEnum = "MALWARE"
	WebriskThreatListsComputeDiffThreatTypeEnumSocialEngineering                 WebriskThreatListsComputeDiffThreatTypeEnum = "SOCIAL_ENGINEERING"
	WebriskThreatListsComputeDiffThreatTypeEnumUnwantedSoftware                  WebriskThreatListsComputeDiffThreatTypeEnum = "UNWANTED_SOFTWARE"
	WebriskThreatListsComputeDiffThreatTypeEnumSocialEngineeringExtendedCoverage WebriskThreatListsComputeDiffThreatTypeEnum = "SOCIAL_ENGINEERING_EXTENDED_COVERAGE"
)

func (e *WebriskThreatListsComputeDiffThreatTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "THREAT_TYPE_UNSPECIFIED":
		fallthrough
	case "MALWARE":
		fallthrough
	case "SOCIAL_ENGINEERING":
		fallthrough
	case "UNWANTED_SOFTWARE":
		fallthrough
	case "SOCIAL_ENGINEERING_EXTENDED_COVERAGE":
		*e = WebriskThreatListsComputeDiffThreatTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WebriskThreatListsComputeDiffThreatTypeEnum: %s", s)
	}
}

type WebriskThreatListsComputeDiffRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Sets the maximum number of entries that the client is willing to have in the local database. This should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.
	ConstraintsMaxDatabaseEntries *int64 `queryParam:"style=form,explode=true,name=constraints.maxDatabaseEntries"`
	// The maximum size in number of entries. The diff will not contain more entries than this value. This should be a power of 2 between 2**10 and 2**20. If zero, no diff size limit is set.
	ConstraintsMaxDiffEntries *int64 `queryParam:"style=form,explode=true,name=constraints.maxDiffEntries"`
	// The compression types supported by the client.
	ConstraintsSupportedCompressions []WebriskThreatListsComputeDiffConstraintsSupportedCompressionsEnum `queryParam:"style=form,explode=true,name=constraints.supportedCompressions"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Required. The threat list to update. Only a single ThreatType should be specified per request. If you want to handle multiple ThreatTypes, you must make one request per ThreatType.
	ThreatType *WebriskThreatListsComputeDiffThreatTypeEnum `queryParam:"style=form,explode=true,name=threatType"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// The current version token of the client for the requested list (the client version that was received from the last successful diff). If the client does not have a version token (this is the first time calling ComputeThreatListDiff), this may be left empty and a full database snapshot will be returned.
	VersionToken *string `queryParam:"style=form,explode=true,name=versionToken"`
}

type WebriskThreatListsComputeDiffResponse struct {
	ContentType string
	// Successful response
	GoogleCloudWebriskV1ComputeThreatListDiffResponse *shared.GoogleCloudWebriskV1ComputeThreatListDiffResponse
	StatusCode                                        int
	RawResponse                                       *http.Response
}
