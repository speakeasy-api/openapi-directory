/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostExportRequest extends SpeakeasyBase {
  /**
   * Restrict results to contributions submitted to this assignment.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=assignment",
  })
  assignment?: string;

  /**
   * Included a combined file with all contribution text.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=combined",
  })
  combined?: boolean;

  /**
   * Limit results to contributions which have a publicly visible location within the given country (specified by two letter country code).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country",
  })
  country?: string;

  /**
   * Limit results to contributions created after this date time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  createdAfter?: Date;

  /**
   * Limit results to contributions created before this date time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  createdBefore?: Date;

  /**
   * Media format to export; none, fullsize, tagged or original.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=format",
  })
  format?: string;

  /**
   * Restrict results to contributions which have specified a location which falls within this geohash (or comma seperated list of multiple geohashes)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=geohash",
  })
  geohash?: string;

  /**
   * Restrict results to contributions which have a publicly visible location.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=hasLocation",
  })
  hasLocation?: boolean;

  /**
   * Include individual text files for each contribution.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=individual",
  })
  individual?: boolean;

  /**
   * Include raw JSON for each contribution.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=json" })
  json?: boolean;

  /**
   * Limit results to contributions with location near this latitude and longitude (comma seperated lat/long pair). Also see radius
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=latLong",
  })
  latLong?: string;

  /**
   * Restrict results to contributions which include a media file of the given type (ie. image / video)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=mediaType",
  })
  mediaType?: string;

  /**
   * Restrict results to contributions which are fall under the jurisdiction by this user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ownedBy",
  })
  ownedBy?: string;

  /**
   * Restrict results to contributions whose headline text matches this keyword.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  /**
   * When limiting result by location with the latLong parameter, specify the radius in kilometers.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=radius",
  })
  radius?: number;

  /**
   * Should exported media files be tagged with metadata. Deprecated; use format instead.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=tagged",
  })
  tagged?: boolean;

  /**
   * Locate a specific contribution by URL words
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=urlWords",
  })
  urlWords?: string;

  /**
   * Restrict results to contributions by this user identified by id.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=user" })
  user?: string;
}

export class PostExportResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * An export job describing the state of an export job.
   */
  @SpeakeasyMetadata()
  export?: shared.Export;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
