// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListFilesPurposeInEnum string

const (
	ListFilesPurposeInEnumCheckImageFront            ListFilesPurposeInEnum = "check_image_front"
	ListFilesPurposeInEnumCheckImageBack             ListFilesPurposeInEnum = "check_image_back"
	ListFilesPurposeInEnumForm1099Int                ListFilesPurposeInEnum = "form_1099_int"
	ListFilesPurposeInEnumFormSs4                    ListFilesPurposeInEnum = "form_ss_4"
	ListFilesPurposeInEnumIdentityDocument           ListFilesPurposeInEnum = "identity_document"
	ListFilesPurposeInEnumIncreaseStatement          ListFilesPurposeInEnum = "increase_statement"
	ListFilesPurposeInEnumOther                      ListFilesPurposeInEnum = "other"
	ListFilesPurposeInEnumTrustFormationDocument     ListFilesPurposeInEnum = "trust_formation_document"
	ListFilesPurposeInEnumDigitalWalletArtwork       ListFilesPurposeInEnum = "digital_wallet_artwork"
	ListFilesPurposeInEnumDigitalWalletAppIcon       ListFilesPurposeInEnum = "digital_wallet_app_icon"
	ListFilesPurposeInEnumEntitySupplementalDocument ListFilesPurposeInEnum = "entity_supplemental_document"
)

func (e *ListFilesPurposeInEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "check_image_front":
		fallthrough
	case "check_image_back":
		fallthrough
	case "form_1099_int":
		fallthrough
	case "form_ss_4":
		fallthrough
	case "identity_document":
		fallthrough
	case "increase_statement":
		fallthrough
	case "other":
		fallthrough
	case "trust_formation_document":
		fallthrough
	case "digital_wallet_artwork":
		fallthrough
	case "digital_wallet_app_icon":
		fallthrough
	case "entity_supplemental_document":
		*e = ListFilesPurposeInEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesPurposeInEnum: %s", s)
	}
}

type ListFilesRequest struct {
	CreatedAtAfter      *time.Time               `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time               `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time               `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time               `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string                  `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64                   `queryParam:"style=form,explode=true,name=limit"`
	PurposeIn           []ListFilesPurposeInEnum `queryParam:"style=form,explode=true,name=purpose.in"`
}

type ListFilesDefaultApplicationJSON13StatusEnum string

const (
	ListFilesDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListFilesDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ListFilesDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ListFilesDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON13TypeEnum string

const (
	ListFilesDefaultApplicationJSON13TypeEnumRateLimitedError ListFilesDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ListFilesDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ListFilesDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON13 struct {
	Detail     string                                      `json:"detail"`
	RetryAfter *int64                                      `json:"retry_after,omitempty"`
	Status     ListFilesDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                      `json:"title"`
	Type       ListFilesDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON12StatusEnum string

const (
	ListFilesDefaultApplicationJSON12StatusEnumFourHundredAndThree ListFilesDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ListFilesDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListFilesDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON12TypeEnum string

const (
	ListFilesDefaultApplicationJSON12TypeEnumPrivateFeatureError ListFilesDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ListFilesDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ListFilesDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON12 struct {
	Detail string                                      `json:"detail"`
	Status ListFilesDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListFilesDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON11StatusEnum string

const (
	ListFilesDefaultApplicationJSON11StatusEnumFourHundredAndFour ListFilesDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ListFilesDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListFilesDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON11TypeEnum string

const (
	ListFilesDefaultApplicationJSON11TypeEnumObjectNotFoundError ListFilesDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ListFilesDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ListFilesDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON11 struct {
	Detail string                                      `json:"detail"`
	Status ListFilesDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListFilesDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON10StatusEnum string

const (
	ListFilesDefaultApplicationJSON10StatusEnumFourHundred ListFilesDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ListFilesDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListFilesDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON10TypeEnum string

const (
	ListFilesDefaultApplicationJSON10TypeEnumMalformedRequestError ListFilesDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ListFilesDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ListFilesDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON10 struct {
	Detail string                                      `json:"detail"`
	Status ListFilesDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListFilesDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON9StatusEnum string

const (
	ListFilesDefaultApplicationJSON9StatusEnumFourHundred ListFilesDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ListFilesDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListFilesDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON9TypeEnum string

const (
	ListFilesDefaultApplicationJSON9TypeEnumInvalidParametersError ListFilesDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ListFilesDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ListFilesDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                   `json:"errors,omitempty"`
	Status ListFilesDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON8StatusEnum string

const (
	ListFilesDefaultApplicationJSON8StatusEnumFourHundredAndNine ListFilesDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ListFilesDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListFilesDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON8TypeEnum string

const (
	ListFilesDefaultApplicationJSON8TypeEnumInvalidOperationError ListFilesDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ListFilesDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ListFilesDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON8 struct {
	Detail string                                     `json:"detail"`
	Status ListFilesDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON7StatusEnum string

const (
	ListFilesDefaultApplicationJSON7StatusEnumFourHundredAndOne ListFilesDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ListFilesDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ListFilesDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON7TypeEnum string

const (
	ListFilesDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListFilesDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ListFilesDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ListFilesDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON7 struct {
	Detail string                                     `json:"detail"`
	Status ListFilesDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON6StatusEnum string

const (
	ListFilesDefaultApplicationJSON6StatusEnumFiveHundred ListFilesDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ListFilesDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ListFilesDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON6TypeEnum string

const (
	ListFilesDefaultApplicationJSON6TypeEnumInternalServerError ListFilesDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ListFilesDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ListFilesDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON6 struct {
	Detail string                                     `json:"detail"`
	Status ListFilesDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON5StatusEnum string

const (
	ListFilesDefaultApplicationJSON5StatusEnumFourHundredAndThree ListFilesDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ListFilesDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListFilesDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON5TypeEnum string

const (
	ListFilesDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListFilesDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ListFilesDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ListFilesDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON5 struct {
	Detail string                                     `json:"detail"`
	Status ListFilesDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON4StatusEnum string

const (
	ListFilesDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListFilesDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ListFilesDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ListFilesDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON4TypeEnum string

const (
	ListFilesDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListFilesDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ListFilesDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ListFilesDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON4 struct {
	Detail string                                     `json:"detail"`
	Status ListFilesDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON3StatusEnum string

const (
	ListFilesDefaultApplicationJSON3StatusEnumFourHundredAndNine ListFilesDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ListFilesDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListFilesDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON3TypeEnum string

const (
	ListFilesDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListFilesDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ListFilesDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ListFilesDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON3 struct {
	Detail string                                     `json:"detail"`
	Status ListFilesDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON2StatusEnum string

const (
	ListFilesDefaultApplicationJSON2StatusEnumFourHundredAndThree ListFilesDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ListFilesDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListFilesDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON2TypeEnum string

const (
	ListFilesDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListFilesDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ListFilesDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ListFilesDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON2 struct {
	Detail string                                     `json:"detail"`
	Status ListFilesDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListFilesDefaultApplicationJSON1StatusEnum string

const (
	ListFilesDefaultApplicationJSON1StatusEnumFourHundredAndFour ListFilesDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ListFilesDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListFilesDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON1TypeEnum string

const (
	ListFilesDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListFilesDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ListFilesDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ListFilesDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFilesDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ListFilesDefaultApplicationJSON1 struct {
	Detail string                                     `json:"detail"`
	Status ListFilesDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                     `json:"title"`
	Type   ListFilesDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListFilesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// File List
	FileList *shared.FileList
}
