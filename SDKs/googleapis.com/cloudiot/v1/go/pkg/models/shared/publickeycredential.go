// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublicKeyCredentialFormatEnum - The format of the key.
type PublicKeyCredentialFormatEnum string

const (
	PublicKeyCredentialFormatEnumUnspecifiedPublicKeyFormat PublicKeyCredentialFormatEnum = "UNSPECIFIED_PUBLIC_KEY_FORMAT"
	PublicKeyCredentialFormatEnumRsaPem                     PublicKeyCredentialFormatEnum = "RSA_PEM"
	PublicKeyCredentialFormatEnumRsaX509Pem                 PublicKeyCredentialFormatEnum = "RSA_X509_PEM"
	PublicKeyCredentialFormatEnumEs256Pem                   PublicKeyCredentialFormatEnum = "ES256_PEM"
	PublicKeyCredentialFormatEnumEs256X509Pem               PublicKeyCredentialFormatEnum = "ES256_X509_PEM"
)

func (e PublicKeyCredentialFormatEnum) ToPointer() *PublicKeyCredentialFormatEnum {
	return &e
}

func (e *PublicKeyCredentialFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED_PUBLIC_KEY_FORMAT":
		fallthrough
	case "RSA_PEM":
		fallthrough
	case "RSA_X509_PEM":
		fallthrough
	case "ES256_PEM":
		fallthrough
	case "ES256_X509_PEM":
		*e = PublicKeyCredentialFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PublicKeyCredentialFormatEnum: %v", v)
	}
}

// PublicKeyCredential - A public key format and data.
type PublicKeyCredential struct {
	// The format of the key.
	Format *PublicKeyCredentialFormatEnum `json:"format,omitempty"`
	// The key data.
	Key *string `json:"key,omitempty"`
}
