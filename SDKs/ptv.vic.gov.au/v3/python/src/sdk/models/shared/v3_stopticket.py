"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V3StopTicket:
    
    is_free_fare_zone: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_free_fare_zone'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the stop is inside the free fare zone"""  
    ticket_checks: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ticket_checks'), 'exclude': lambda f: f is None }})  
    ticket_machine: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ticket_machine'), 'exclude': lambda f: f is None }})  
    ticket_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ticket_type'), 'exclude': lambda f: f is None }})
    r"""Indicates the ticket type for the stop (myki, paper or both)"""  
    ticket_zones: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ticket_zones'), 'exclude': lambda f: f is None }})  
    vline_reservation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vline_reservation'), 'exclude': lambda f: f is None }})  
    zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zone'), 'exclude': lambda f: f is None }})
    r"""Description of the zone"""  
    