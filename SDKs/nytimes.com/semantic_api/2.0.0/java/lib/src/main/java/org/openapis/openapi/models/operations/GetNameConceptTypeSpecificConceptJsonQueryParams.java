/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetNameConceptTypeSpecificConceptJsonQueryParams {
    /**
     * "all" or comma-separated list of specific optional fields: pages, ticker_symbol, links, taxonomy, combinations, geocodes, article_list, scope_notes, search_api_query
     * 
     * Optional fields are returned in result_set. They are briefly explained here:
     * 
     * pages: A list of topic pages associated with a specific concept.
     * ticker_symbol: If this concept is a publicly traded company, this field contains the ticker symbol.
     * links: A list of links from this concept to external data resources.
     * taxonomy: For descriptor concepts, this field returns a list of taxonomic relations to other concepts.
     * combinations: For descriptor concepts, this field returns a list of the specific meanings tis concept takes on when combined with other concepts.
     * geocodes: For geographic concepts, the full GIS record from geonames.
     * article_list: A list of up to 10 articles associated with this concept.
     * scope_notes: Scope notes contains clarifications and meaning definitions that explicate the relationship between the concept and an article.
     * search_api_query: Returns the request one would need to submit to the Article Search API to obtain a list of articles annotated with this concept.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public GetNameConceptTypeSpecificConceptJsonFieldsEnum fields;
    public GetNameConceptTypeSpecificConceptJsonQueryParams withFields(GetNameConceptTypeSpecificConceptJsonFieldsEnum fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Precedes the search term string. Used in a Search Query. Except for &amp;lt;specific_concept_name&amp;gt;, Search Query will take the required parameters listed above (&amp;lt;concept_type&amp;gt;, &amp;lt;concept_uri&amp;gt;, &amp;lt;article_uri&amp;gt;) as an optional_parameter in addition to the query=&amp;lt;query_term&amp;gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query")
    public String query;
    public GetNameConceptTypeSpecificConceptJsonQueryParams withQuery(String query) {
        this.query = query;
        return this;
    }
    
}
