"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2schedule as shared_googleprivacydlpv2schedule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2Trigger:
    r"""What event needs to occur for a new job to be started."""
    
    manual: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manual'), 'exclude': lambda f: f is None }})
    r"""Job trigger option for hybrid jobs. Jobs must be manually created and finished."""  
    schedule: Optional[shared_googleprivacydlpv2schedule.GooglePrivacyDlpV2Schedule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schedule'), 'exclude': lambda f: f is None }})
    r"""Schedule for inspect job triggers."""  
    