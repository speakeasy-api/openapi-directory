// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateFundingAccountRequestV2TypeEnum string

const (
	CreateFundingAccountRequestV2TypeEnumFbo           CreateFundingAccountRequestV2TypeEnum = "FBO"
	CreateFundingAccountRequestV2TypeEnumWubsDecoupled CreateFundingAccountRequestV2TypeEnum = "WUBS_DECOUPLED"
	CreateFundingAccountRequestV2TypeEnumPrivate       CreateFundingAccountRequestV2TypeEnum = "PRIVATE"
)

func (e *CreateFundingAccountRequestV2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FBO":
		fallthrough
	case "WUBS_DECOUPLED":
		fallthrough
	case "PRIVATE":
		*e = CreateFundingAccountRequestV2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFundingAccountRequestV2TypeEnum: %s", s)
	}
}

type CreateFundingAccountRequestV2 struct {
	// Required if type is either FBO or PRIVATE
	AccountName *string `json:"accountName,omitempty"`
	// Required if type is either FBO or PRIVATE
	AccountNumber *string `json:"accountNumber,omitempty"`
	// ISO 4217 currency code, Required if type is either WUBS_DECOUPLED or PRIVATE
	Currency *string `json:"currency,omitempty"`
	Name     string  `json:"name"`
	PayorID  string  `json:"payorId"`
	// Required if type is either FBO or PRIVATE
	RoutingNumber *string                               `json:"routingNumber,omitempty"`
	Type          CreateFundingAccountRequestV2TypeEnum `json:"type"`
}
