// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudMlV1JobStateEnum - Output only. The detailed state of a job.
type GoogleCloudMlV1JobStateEnum string

const (
	GoogleCloudMlV1JobStateEnumStateUnspecified GoogleCloudMlV1JobStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudMlV1JobStateEnumQueued           GoogleCloudMlV1JobStateEnum = "QUEUED"
	GoogleCloudMlV1JobStateEnumPreparing        GoogleCloudMlV1JobStateEnum = "PREPARING"
	GoogleCloudMlV1JobStateEnumRunning          GoogleCloudMlV1JobStateEnum = "RUNNING"
	GoogleCloudMlV1JobStateEnumSucceeded        GoogleCloudMlV1JobStateEnum = "SUCCEEDED"
	GoogleCloudMlV1JobStateEnumFailed           GoogleCloudMlV1JobStateEnum = "FAILED"
	GoogleCloudMlV1JobStateEnumCancelling       GoogleCloudMlV1JobStateEnum = "CANCELLING"
	GoogleCloudMlV1JobStateEnumCancelled        GoogleCloudMlV1JobStateEnum = "CANCELLED"
)

func (e *GoogleCloudMlV1JobStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "QUEUED":
		fallthrough
	case "PREPARING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		*e = GoogleCloudMlV1JobStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1JobStateEnum: %s", s)
	}
}

// GoogleCloudMlV1Job - Represents a training or prediction job.
type GoogleCloudMlV1Job struct {
	// Output only. When the job was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. When the job processing was completed.
	EndTime *string `json:"endTime,omitempty"`
	// Output only. The details of a failure or a cancellation.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a job from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform job updates in order to avoid race conditions: An `etag` is returned in the response to `GetJob`, and systems are expected to put that etag in the request to `UpdateJob` to ensure that their change will be applied to the same version of the job.
	Etag *string `json:"etag,omitempty"`
	// Required. The user-specified id of the job.
	JobID *string `json:"jobId,omitempty"`
	// Output only. It's only effect when the job is in QUEUED state. If it's positive, it indicates the job's position in the job scheduler. It's 0 when the job is already scheduled.
	JobPosition *string `json:"jobPosition,omitempty"`
	// Optional. One or more labels that you can add, to organize your jobs. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.
	Labels map[string]string `json:"labels,omitempty"`
	// Represents input parameters for a prediction job.
	PredictionInput *GoogleCloudMlV1PredictionInput `json:"predictionInput,omitempty"`
	// Represents results of a prediction job.
	PredictionOutput *GoogleCloudMlV1PredictionOutput `json:"predictionOutput,omitempty"`
	// Output only. When the job processing was started.
	StartTime *string `json:"startTime,omitempty"`
	// Output only. The detailed state of a job.
	State *GoogleCloudMlV1JobStateEnum `json:"state,omitempty"`
	// Represents input parameters for a training job. When using the gcloud command to submit your training job, you can specify the input parameters as command-line arguments and/or in a YAML configuration file referenced from the --config command-line argument. For details, see the guide to [submitting a training job](/ai-platform/training/docs/training-jobs).
	TrainingInput *GoogleCloudMlV1TrainingInput `json:"trainingInput,omitempty"`
	// Represents results of a training job. Output only.
	TrainingOutput *GoogleCloudMlV1TrainingOutput `json:"trainingOutput,omitempty"`
}

// GoogleCloudMlV1JobInput - Represents a training or prediction job.
type GoogleCloudMlV1JobInput struct {
	// Output only. When the job was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. When the job processing was completed.
	EndTime *string `json:"endTime,omitempty"`
	// Output only. The details of a failure or a cancellation.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a job from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform job updates in order to avoid race conditions: An `etag` is returned in the response to `GetJob`, and systems are expected to put that etag in the request to `UpdateJob` to ensure that their change will be applied to the same version of the job.
	Etag *string `json:"etag,omitempty"`
	// Required. The user-specified id of the job.
	JobID *string `json:"jobId,omitempty"`
	// Optional. One or more labels that you can add, to organize your jobs. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.
	Labels map[string]string `json:"labels,omitempty"`
	// Represents input parameters for a prediction job.
	PredictionInput *GoogleCloudMlV1PredictionInput `json:"predictionInput,omitempty"`
	// Represents results of a prediction job.
	PredictionOutput *GoogleCloudMlV1PredictionOutput `json:"predictionOutput,omitempty"`
	// Output only. When the job processing was started.
	StartTime *string `json:"startTime,omitempty"`
	// Output only. The detailed state of a job.
	State *GoogleCloudMlV1JobStateEnum `json:"state,omitempty"`
	// Represents input parameters for a training job. When using the gcloud command to submit your training job, you can specify the input parameters as command-line arguments and/or in a YAML configuration file referenced from the --config command-line argument. For details, see the guide to [submitting a training job](/ai-platform/training/docs/training-jobs).
	TrainingInput *GoogleCloudMlV1TrainingInput `json:"trainingInput,omitempty"`
	// Represents results of a training job. Output only.
	TrainingOutput *GoogleCloudMlV1TrainingOutputInput `json:"trainingOutput,omitempty"`
}
