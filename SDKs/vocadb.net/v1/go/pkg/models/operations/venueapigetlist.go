// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// VenueAPIGetListDistanceUnitEnum - Unit of length (optional). Possible values are Kilometers, Miles.
type VenueAPIGetListDistanceUnitEnum string

const (
	VenueAPIGetListDistanceUnitEnumKilometers VenueAPIGetListDistanceUnitEnum = "Kilometers"
	VenueAPIGetListDistanceUnitEnumMiles      VenueAPIGetListDistanceUnitEnum = "Miles"
)

func (e *VenueAPIGetListDistanceUnitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Kilometers":
		fallthrough
	case "Miles":
		*e = VenueAPIGetListDistanceUnitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VenueAPIGetListDistanceUnitEnum: %s", s)
	}
}

// VenueAPIGetListFieldsEnum - Optional fields to include.
type VenueAPIGetListFieldsEnum string

const (
	VenueAPIGetListFieldsEnumNone            VenueAPIGetListFieldsEnum = "None"
	VenueAPIGetListFieldsEnumAdditionalNames VenueAPIGetListFieldsEnum = "AdditionalNames"
	VenueAPIGetListFieldsEnumDescription     VenueAPIGetListFieldsEnum = "Description"
	VenueAPIGetListFieldsEnumEvents          VenueAPIGetListFieldsEnum = "Events"
	VenueAPIGetListFieldsEnumNames           VenueAPIGetListFieldsEnum = "Names"
	VenueAPIGetListFieldsEnumWebLinks        VenueAPIGetListFieldsEnum = "WebLinks"
)

func (e *VenueAPIGetListFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Description":
		fallthrough
	case "Events":
		fallthrough
	case "Names":
		fallthrough
	case "WebLinks":
		*e = VenueAPIGetListFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VenueAPIGetListFieldsEnum: %s", s)
	}
}

// VenueAPIGetListLangEnum - Content language preference (optional).
type VenueAPIGetListLangEnum string

const (
	VenueAPIGetListLangEnumDefault  VenueAPIGetListLangEnum = "Default"
	VenueAPIGetListLangEnumJapanese VenueAPIGetListLangEnum = "Japanese"
	VenueAPIGetListLangEnumRomaji   VenueAPIGetListLangEnum = "Romaji"
	VenueAPIGetListLangEnumEnglish  VenueAPIGetListLangEnum = "English"
)

func (e *VenueAPIGetListLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = VenueAPIGetListLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VenueAPIGetListLangEnum: %s", s)
	}
}

// VenueAPIGetListNameMatchModeEnum - Match mode for event name (optional).
type VenueAPIGetListNameMatchModeEnum string

const (
	VenueAPIGetListNameMatchModeEnumAuto       VenueAPIGetListNameMatchModeEnum = "Auto"
	VenueAPIGetListNameMatchModeEnumPartial    VenueAPIGetListNameMatchModeEnum = "Partial"
	VenueAPIGetListNameMatchModeEnumStartsWith VenueAPIGetListNameMatchModeEnum = "StartsWith"
	VenueAPIGetListNameMatchModeEnumExact      VenueAPIGetListNameMatchModeEnum = "Exact"
	VenueAPIGetListNameMatchModeEnumWords      VenueAPIGetListNameMatchModeEnum = "Words"
)

func (e *VenueAPIGetListNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = VenueAPIGetListNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VenueAPIGetListNameMatchModeEnum: %s", s)
	}
}

// VenueAPIGetListSortRuleEnum - Sort rule (optional, defaults to Name). Possible values are None, Name, Distance.
type VenueAPIGetListSortRuleEnum string

const (
	VenueAPIGetListSortRuleEnumNone     VenueAPIGetListSortRuleEnum = "None"
	VenueAPIGetListSortRuleEnumName     VenueAPIGetListSortRuleEnum = "Name"
	VenueAPIGetListSortRuleEnumDistance VenueAPIGetListSortRuleEnum = "Distance"
)

func (e *VenueAPIGetListSortRuleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Name":
		fallthrough
	case "Distance":
		*e = VenueAPIGetListSortRuleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VenueAPIGetListSortRuleEnum: %s", s)
	}
}

type VenueAPIGetListQueryParams struct {
	// Unit of length (optional). Possible values are Kilometers, Miles.
	DistanceUnit *VenueAPIGetListDistanceUnitEnum `queryParam:"style=form,explode=true,name=distanceUnit"`
	// Optional fields to include.
	Fields *VenueAPIGetListFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Whether to load total number of items (optional).
	GetTotalCount *bool `queryParam:"style=form,explode=true,name=getTotalCount"`
	// Content language preference (optional).
	Lang *VenueAPIGetListLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// Latitude (optional).
	Latitude *float64 `queryParam:"style=form,explode=true,name=latitude"`
	// Longitude (optional).
	Longitude *float64 `queryParam:"style=form,explode=true,name=longitude"`
	// Maximum number of results to be loaded (optional).
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Match mode for event name (optional).
	NameMatchMode *VenueAPIGetListNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Text query.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Radius (optional).
	Radius *float64 `queryParam:"style=form,explode=true,name=radius"`
	// Sort rule (optional, defaults to Name). Possible values are None, Name, Distance.
	SortRule *VenueAPIGetListSortRuleEnum `queryParam:"style=form,explode=true,name=sortRule"`
	// First item to be retrieved (optional).
	Start *int `queryParam:"style=form,explode=true,name=start"`
}

type VenueAPIGetListRequest struct {
	QueryParams VenueAPIGetListQueryParams
}

type VenueAPIGetListResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultVenueForAPIContract *shared.PartialFindResultVenueForAPIContract
	StatusCode                           int
	RawResponse                          *http.Response
}
