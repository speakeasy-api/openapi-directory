/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateSmsCommandServerList = [
  "https://supersim.twilio.com",
] as const;

export class CreateSmsCommandSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
 */
export enum CreateSmsCommandCreateSmsCommandRequestCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class CreateSmsCommandCreateSmsCommandRequest extends SpeakeasyBase {
  /**
   * The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackMethod" })
  callbackMethod?: CreateSmsCommandCreateSmsCommandRequestCallbackMethodEnum;

  /**
   * The URL we should call using the `callback_method` after we have sent the command.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackUrl" })
  callbackUrl?: string;

  /**
   * The message body of the SMS Command.
   */
  @SpeakeasyMetadata({ data: "form, name=Payload" })
  payload: string;

  /**
   * The `sid` or `unique_name` of the [SIM](https://www.twilio.com/docs/iot/supersim/api/sim-resource) to send the SMS Command to.
   */
  @SpeakeasyMetadata({ data: "form, name=Sim" })
  sim: string;
}

export class CreateSmsCommandResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  supersimV1SmsCommand?: shared.SupersimV1SmsCommand;
}
