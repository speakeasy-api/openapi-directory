"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import connectionbodyparameter as shared_connectionbodyparameter
from ..shared import connectionheaderparameter as shared_connectionheaderparameter
from ..shared import connectionquerystringparameter as shared_connectionquerystringparameter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectionHTTPParameters:
    r"""Contains additional parameters for the connection."""
    
    body_parameters: Optional[list[shared_connectionbodyparameter.ConnectionBodyParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BodyParameters'), 'exclude': lambda f: f is None }})  
    header_parameters: Optional[list[shared_connectionheaderparameter.ConnectionHeaderParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HeaderParameters'), 'exclude': lambda f: f is None }})  
    query_string_parameters: Optional[list[shared_connectionquerystringparameter.ConnectionQueryStringParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryStringParameters'), 'exclude': lambda f: f is None }})  
    