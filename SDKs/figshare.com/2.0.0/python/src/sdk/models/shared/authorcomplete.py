"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuthorComplete:
    r"""OK. Article representation"""
    
    first_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_name') }})
    r"""First Name"""  
    full_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('full_name') }})
    r"""Author full name"""  
    group_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_id') }})
    r"""Group id"""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Author id"""  
    institution_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('institution_id') }})
    r"""Institution id"""  
    is_active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_active') }})
    r"""True if author has published items"""  
    is_public: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_public') }})
    r"""if 1 then the author has published items"""  
    job_title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('job_title') }})
    r"""Job title"""  
    last_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_name') }})
    r"""Last Name"""  
    orcid_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orcid_id') }})
    r"""Author Orcid"""  
    url_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url_name') }})
    r"""Author url name"""  
    