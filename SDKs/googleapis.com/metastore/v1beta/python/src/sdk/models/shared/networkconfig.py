"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import consumer as shared_consumer
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkConfig:
    r"""Network configuration for the Dataproc Metastore service."""
    
    consumers: Optional[list[shared_consumer.Consumer]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consumers'), 'exclude': lambda f: f is None }})
    r"""Immutable. The consumer-side network configuration for the Dataproc Metastore instance."""  
    custom_routes_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customRoutesEnabled'), 'exclude': lambda f: f is None }})
    r"""Enables custom routes to be imported and exported for the Dataproc Metastore service's peered VPC network."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkConfigInput:
    r"""Network configuration for the Dataproc Metastore service."""
    
    consumers: Optional[list[shared_consumer.ConsumerInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consumers'), 'exclude': lambda f: f is None }})
    r"""Immutable. The consumer-side network configuration for the Dataproc Metastore instance."""  
    custom_routes_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customRoutesEnabled'), 'exclude': lambda f: f is None }})
    r"""Enables custom routes to be imported and exported for the Dataproc Metastore service's peered VPC network."""  
    