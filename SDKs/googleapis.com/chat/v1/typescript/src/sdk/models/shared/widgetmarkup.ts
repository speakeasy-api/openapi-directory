/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Button } from "./button";
import { Image } from "./image";
import { KeyValue } from "./keyvalue";
import { TextParagraph } from "./textparagraph";
import { Expose, Type } from "class-transformer";

/**
 * A widget is a UI element that presents texts, images, etc.
 */
export class WidgetMarkup extends SpeakeasyBase {
  /**
   * A list of buttons. Buttons is also oneof data and only one of these fields should be set.
   */
  @SpeakeasyMetadata({ elemType: Button })
  @Expose({ name: "buttons" })
  @Type(() => Button)
  buttons?: Button[];

  /**
   * An image that is specified by a URL and can have an onclick action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => Image)
  image?: Image;

  /**
   * A UI element contains a key (label) and a value (content). And this element may also contain some actions such as onclick button.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keyValue" })
  @Type(() => KeyValue)
  keyValue?: KeyValue;

  /**
   * A paragraph of text. Formatted text supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textParagraph" })
  @Type(() => TextParagraph)
  textParagraph?: TextParagraph;
}
