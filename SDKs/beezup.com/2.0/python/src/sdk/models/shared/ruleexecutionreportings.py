"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import beezup_common_paginationresult as shared_beezup_common_paginationresult
from ..shared import ruleexecutionreporting as shared_ruleexecutionreporting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RuleExecutionReportings:
    r"""Rules executions list"""
    
    executions: Optional[list[shared_ruleexecutionreporting.RuleExecutionReporting]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executions'), 'exclude': lambda f: f is None }})
    r"""The rules executions history"""  
    pagination_result: Optional[shared_beezup_common_paginationresult.BeezUPCommonPaginationResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paginationResult'), 'exclude': lambda f: f is None }})  
    