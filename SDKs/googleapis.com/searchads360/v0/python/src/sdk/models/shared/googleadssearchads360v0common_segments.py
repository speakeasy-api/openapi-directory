"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAdsSearchads360V0CommonSegmentsConversionActionCategoryEnum(str, Enum):
    r"""Conversion action category."""
    UNSPECIFIED = 'UNSPECIFIED'
    UNKNOWN = 'UNKNOWN'
    DEFAULT = 'DEFAULT'
    PAGE_VIEW = 'PAGE_VIEW'
    PURCHASE = 'PURCHASE'
    SIGNUP = 'SIGNUP'
    LEAD = 'LEAD'
    DOWNLOAD = 'DOWNLOAD'
    ADD_TO_CART = 'ADD_TO_CART'
    BEGIN_CHECKOUT = 'BEGIN_CHECKOUT'
    SUBSCRIBE_PAID = 'SUBSCRIBE_PAID'
    PHONE_CALL_LEAD = 'PHONE_CALL_LEAD'
    IMPORTED_LEAD = 'IMPORTED_LEAD'
    SUBMIT_LEAD_FORM = 'SUBMIT_LEAD_FORM'
    BOOK_APPOINTMENT = 'BOOK_APPOINTMENT'
    REQUEST_QUOTE = 'REQUEST_QUOTE'
    GET_DIRECTIONS = 'GET_DIRECTIONS'
    OUTBOUND_CLICK = 'OUTBOUND_CLICK'
    CONTACT = 'CONTACT'
    ENGAGEMENT = 'ENGAGEMENT'
    STORE_VISIT = 'STORE_VISIT'
    STORE_SALE = 'STORE_SALE'
    QUALIFIED_LEAD = 'QUALIFIED_LEAD'
    CONVERTED_LEAD = 'CONVERTED_LEAD'

class GoogleAdsSearchads360V0CommonSegmentsDayOfWeekEnum(str, Enum):
    r"""Day of the week, for example, MONDAY."""
    UNSPECIFIED = 'UNSPECIFIED'
    UNKNOWN = 'UNKNOWN'
    MONDAY = 'MONDAY'
    TUESDAY = 'TUESDAY'
    WEDNESDAY = 'WEDNESDAY'
    THURSDAY = 'THURSDAY'
    FRIDAY = 'FRIDAY'
    SATURDAY = 'SATURDAY'
    SUNDAY = 'SUNDAY'

class GoogleAdsSearchads360V0CommonSegmentsDeviceEnum(str, Enum):
    r"""Device to which metrics apply."""
    UNSPECIFIED = 'UNSPECIFIED'
    UNKNOWN = 'UNKNOWN'
    MOBILE = 'MOBILE'
    TABLET = 'TABLET'
    DESKTOP = 'DESKTOP'
    CONNECTED_TV = 'CONNECTED_TV'
    OTHER = 'OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAdsSearchads360V0CommonSegments:
    r"""Segment only fields."""
    
    conversion_action: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversionAction'), 'exclude': lambda f: f is None }})
    r"""Resource name of the conversion action."""  
    conversion_action_category: Optional[GoogleAdsSearchads360V0CommonSegmentsConversionActionCategoryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversionActionCategory'), 'exclude': lambda f: f is None }})
    r"""Conversion action category."""  
    conversion_action_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversionActionName'), 'exclude': lambda f: f is None }})
    r"""Conversion action name."""  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'exclude': lambda f: f is None }})
    r"""Date to which metrics apply. yyyy-MM-dd format, for example, 2018-04-17."""  
    day_of_week: Optional[GoogleAdsSearchads360V0CommonSegmentsDayOfWeekEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeek'), 'exclude': lambda f: f is None }})
    r"""Day of the week, for example, MONDAY."""  
    device: Optional[GoogleAdsSearchads360V0CommonSegmentsDeviceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device'), 'exclude': lambda f: f is None }})
    r"""Device to which metrics apply."""  
    month: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('month'), 'exclude': lambda f: f is None }})
    r"""Month as represented by the date of the first day of a month. Formatted as yyyy-MM-dd."""  
    quarter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quarter'), 'exclude': lambda f: f is None }})
    r"""Quarter as represented by the date of the first day of a quarter. Uses the calendar year for quarters, for example, the second quarter of 2018 starts on 2018-04-01. Formatted as yyyy-MM-dd."""  
    week: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('week'), 'exclude': lambda f: f is None }})
    r"""Week as defined as Monday through Sunday, and represented by the date of Monday. Formatted as yyyy-MM-dd."""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year'), 'exclude': lambda f: f is None }})
    r"""Year, formatted as yyyy."""  
    