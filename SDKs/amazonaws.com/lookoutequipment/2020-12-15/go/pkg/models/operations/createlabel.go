// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateLabelXAmzTargetEnum
type CreateLabelXAmzTargetEnum string

const (
	CreateLabelXAmzTargetEnumAwsLookoutEquipmentFrontendServiceCreateLabel CreateLabelXAmzTargetEnum = "AWSLookoutEquipmentFrontendService.CreateLabel"
)

func (e *CreateLabelXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSLookoutEquipmentFrontendService.CreateLabel":
		*e = CreateLabelXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateLabelXAmzTargetEnum: %s", s)
	}
}

type CreateLabelRequest struct {
	CreateLabelRequest shared.CreateLabelRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         CreateLabelXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateLabelResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateLabelResponse *shared.CreateLabelResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
