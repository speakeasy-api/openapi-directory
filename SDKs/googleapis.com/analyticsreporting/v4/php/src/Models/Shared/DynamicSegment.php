<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DynamicSegment - Dynamic segment definition for defining the segment within the request. A segment can select users, sessions or both.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DynamicSegment
{
    /**
     * The name of the dynamic segment.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * SegmentDefinition defines the segment to be a set of SegmentFilters which are combined together with a logical `AND` operation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SegmentDefinition $sessionSegment
     */
	#[\JMS\Serializer\Annotation\SerializedName('sessionSegment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SegmentDefinition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SegmentDefinition $sessionSegment = null;
    
    /**
     * SegmentDefinition defines the segment to be a set of SegmentFilters which are combined together with a logical `AND` operation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SegmentDefinition $userSegment
     */
	#[\JMS\Serializer\Annotation\SerializedName('userSegment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SegmentDefinition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SegmentDefinition $userSegment = null;
    
	public function __construct()
	{
		$this->name = null;
		$this->sessionSegment = null;
		$this->userSegment = null;
	}
}
