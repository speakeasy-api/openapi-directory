/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DistributionGroupsListUsersForOrg200ApplicationJSON {
    /**
     * The avatar URL of the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("avatar_url")
    public String avatarUrl;

    public DistributionGroupsListUsersForOrg200ApplicationJSON withAvatarUrl(String avatarUrl) {
        this.avatarUrl = avatarUrl;
        return this;
    }
    
    /**
     * User is required to send an old password in order to change the password.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("can_change_password")
    public Boolean canChangePassword;

    public DistributionGroupsListUsersForOrg200ApplicationJSON withCanChangePassword(Boolean canChangePassword) {
        this.canChangePassword = canChangePassword;
        return this;
    }
    
    /**
     * The full name of the user. Might for example be first and last name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    public String displayName;

    public DistributionGroupsListUsersForOrg200ApplicationJSON withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The email address of the user
     */
    @JsonProperty("email")
    public String email;

    public DistributionGroupsListUsersForOrg200ApplicationJSON withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The unique id (UUID) of the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public DistributionGroupsListUsersForOrg200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether the has accepted the invite. Available when an invite is pending, and the value will be "true".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invite_pending")
    public Boolean invitePending;

    public DistributionGroupsListUsersForOrg200ApplicationJSON withInvitePending(Boolean invitePending) {
        this.invitePending = invitePending;
        return this;
    }
    
    /**
     * The unique name that is used to identify the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public DistributionGroupsListUsersForOrg200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    public DistributionGroupsListUsersForOrg200ApplicationJSON(@JsonProperty("email") String email) {
        this.email = email;
  }
}
