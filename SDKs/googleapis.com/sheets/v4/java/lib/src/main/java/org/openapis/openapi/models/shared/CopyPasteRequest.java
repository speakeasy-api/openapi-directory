/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CopyPasteRequest - Copies data from the source to the destination.
 */
public class CopyPasteRequest {
    /**
     * A range on a sheet. All indexes are zero-based. Indexes are half open, i.e. the start index is inclusive and the end index is exclusive -- [start_index, end_index). Missing indexes indicate the range is unbounded on that side. For example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id: 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0, end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2, end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B == sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B == sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or equal to the end index. If the start index equals the end index, then the range is empty. Empty ranges are typically not meaningful and are usually rendered in the UI as `#REF!`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destination")
    public GridRange destination;

    public CopyPasteRequest withDestination(GridRange destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * How that data should be oriented when pasting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pasteOrientation")
    public CopyPasteRequestPasteOrientationEnum pasteOrientation;

    public CopyPasteRequest withPasteOrientation(CopyPasteRequestPasteOrientationEnum pasteOrientation) {
        this.pasteOrientation = pasteOrientation;
        return this;
    }
    
    /**
     * What kind of data to paste.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pasteType")
    public CopyPasteRequestPasteTypeEnum pasteType;

    public CopyPasteRequest withPasteType(CopyPasteRequestPasteTypeEnum pasteType) {
        this.pasteType = pasteType;
        return this;
    }
    
    /**
     * A range on a sheet. All indexes are zero-based. Indexes are half open, i.e. the start index is inclusive and the end index is exclusive -- [start_index, end_index). Missing indexes indicate the range is unbounded on that side. For example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id: 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0, end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2, end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B == sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B == sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or equal to the end index. If the start index equals the end index, then the range is empty. Empty ranges are typically not meaningful and are usually rendered in the UI as `#REF!`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public GridRange source;

    public CopyPasteRequest withSource(GridRange source) {
        this.source = source;
        return this;
    }
    
    public CopyPasteRequest(){}
}
