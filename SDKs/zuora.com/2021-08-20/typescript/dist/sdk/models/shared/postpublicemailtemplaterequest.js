"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.POSTPublicEmailTemplateRequest = exports.POSTPublicEmailTemplateRequestToEmailTypeEnum = exports.POSTPublicEmailTemplateRequestReplyToEmailTypeEnum = exports.POSTPublicEmailTemplateRequestFromEmailTypeEnum = exports.POSTPublicEmailTemplateRequestEncodingTypeEnum = exports.POSTPublicEmailTemplateRequestCcEmailTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Email CC type:
 *
 * @remarks
 * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is associated to Account, ccEmailType can be ALL values in enum.
 * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is not associated to Account, ccEmailType MUST be TenantAdmin, RunOwner or SpecificEmail.
 * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is EMPTY, ccEmailType MUST be TenantAdmin, RunOwner or SpecificEmail.
 */
var POSTPublicEmailTemplateRequestCcEmailTypeEnum;
(function (POSTPublicEmailTemplateRequestCcEmailTypeEnum) {
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["BillToContact"] = "BillToContact";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["SoldToContact"] = "SoldToContact";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["SpecificEmails"] = "SpecificEmails";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["TenantAdmin"] = "TenantAdmin";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["BillToAndSoldToContacts"] = "BillToAndSoldToContacts";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["RunOwner"] = "RunOwner";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["AllContacts"] = "AllContacts";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["InvoiceOwnerBillToContact"] = "InvoiceOwnerBillToContact";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["InvoiceOwnerSoldToContact"] = "InvoiceOwnerSoldToContact";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["InvoiceOwnerBillToAndSoldToContacts"] = "InvoiceOwnerBillToAndSoldToContacts";
    POSTPublicEmailTemplateRequestCcEmailTypeEnum["InvoiceOwnerAllContacts"] = "InvoiceOwnerAllContacts";
})(POSTPublicEmailTemplateRequestCcEmailTypeEnum = exports.POSTPublicEmailTemplateRequestCcEmailTypeEnum || (exports.POSTPublicEmailTemplateRequestCcEmailTypeEnum = {}));
/**
 * The endcode type of the email body.
 */
var POSTPublicEmailTemplateRequestEncodingTypeEnum;
(function (POSTPublicEmailTemplateRequestEncodingTypeEnum) {
    POSTPublicEmailTemplateRequestEncodingTypeEnum["Utf8"] = "UTF8";
    POSTPublicEmailTemplateRequestEncodingTypeEnum["ShiftJIS"] = "Shift_JIS";
    POSTPublicEmailTemplateRequestEncodingTypeEnum["Iso2022Jp"] = "ISO_2022_JP";
    POSTPublicEmailTemplateRequestEncodingTypeEnum["EucJp"] = "EUC_JP";
    POSTPublicEmailTemplateRequestEncodingTypeEnum["XSjis0213"] = "X_SJIS_0213";
})(POSTPublicEmailTemplateRequestEncodingTypeEnum = exports.POSTPublicEmailTemplateRequestEncodingTypeEnum || (exports.POSTPublicEmailTemplateRequestEncodingTypeEnum = {}));
/**
 * The type of the email.
 */
var POSTPublicEmailTemplateRequestFromEmailTypeEnum;
(function (POSTPublicEmailTemplateRequestFromEmailTypeEnum) {
    POSTPublicEmailTemplateRequestFromEmailTypeEnum["TenantEmail"] = "TenantEmail";
    POSTPublicEmailTemplateRequestFromEmailTypeEnum["SpecificEmail"] = "SpecificEmail";
})(POSTPublicEmailTemplateRequestFromEmailTypeEnum = exports.POSTPublicEmailTemplateRequestFromEmailTypeEnum || (exports.POSTPublicEmailTemplateRequestFromEmailTypeEnum = {}));
/**
 * Type of the replyTo email.
 */
var POSTPublicEmailTemplateRequestReplyToEmailTypeEnum;
(function (POSTPublicEmailTemplateRequestReplyToEmailTypeEnum) {
    POSTPublicEmailTemplateRequestReplyToEmailTypeEnum["TenantEmail"] = "TenantEmail";
    POSTPublicEmailTemplateRequestReplyToEmailTypeEnum["SpecificEmail"] = "SpecificEmail";
})(POSTPublicEmailTemplateRequestReplyToEmailTypeEnum = exports.POSTPublicEmailTemplateRequestReplyToEmailTypeEnum || (exports.POSTPublicEmailTemplateRequestReplyToEmailTypeEnum = {}));
/**
 * Email receive type.
 *
 * @remarks
 * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is associated to Account, toEmailType can be ALL values in enum.
 * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is not associated to Account, toEmailType MUST be TenantAdmin, RunOwner or SpecificEmail.
 * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is EMPTY, toEmailType MUST be TenantAdmin, RunOwner or SpecificEmail.
 */
var POSTPublicEmailTemplateRequestToEmailTypeEnum;
(function (POSTPublicEmailTemplateRequestToEmailTypeEnum) {
    POSTPublicEmailTemplateRequestToEmailTypeEnum["BillToContact"] = "BillToContact";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["SoldToContact"] = "SoldToContact";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["SpecificEmails"] = "SpecificEmails";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["TenantAdmin"] = "TenantAdmin";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["BillToAndSoldToContacts"] = "BillToAndSoldToContacts";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["RunOwner"] = "RunOwner";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["AllContacts"] = "AllContacts";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["InvoiceOwnerBillToContact"] = "InvoiceOwnerBillToContact";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["InvoiceOwnerSoldToContact"] = "InvoiceOwnerSoldToContact";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["InvoiceOwnerBillToAndSoldToContacts"] = "InvoiceOwnerBillToAndSoldToContacts";
    POSTPublicEmailTemplateRequestToEmailTypeEnum["InvoiceOwnerAllContacts"] = "InvoiceOwnerAllContacts";
})(POSTPublicEmailTemplateRequestToEmailTypeEnum = exports.POSTPublicEmailTemplateRequestToEmailTypeEnum || (exports.POSTPublicEmailTemplateRequestToEmailTypeEnum = {}));
/**
 * The request body to create an email template.
 */
var POSTPublicEmailTemplateRequest = /** @class */ (function (_super) {
    __extends(POSTPublicEmailTemplateRequest, _super);
    function POSTPublicEmailTemplateRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "active" }),
        __metadata("design:type", Boolean)
    ], POSTPublicEmailTemplateRequest.prototype, "active", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bccEmailAddress" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "bccEmailAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ccEmailAddress" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "ccEmailAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ccEmailType" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "ccEmailType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emailBody" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "emailBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "emailSubject" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "emailSubject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encodingType" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "encodingType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "eventTypeName" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "eventTypeName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "eventTypeNamespace" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "eventTypeNamespace", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fromEmailAddress" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "fromEmailAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fromEmailType" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "fromEmailType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fromName" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "fromName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isHtml" }),
        __metadata("design:type", Boolean)
    ], POSTPublicEmailTemplateRequest.prototype, "isHtml", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "replyToEmailAddress" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "replyToEmailAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "replyToEmailType" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "replyToEmailType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toEmailAddress" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "toEmailAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toEmailType" }),
        __metadata("design:type", String)
    ], POSTPublicEmailTemplateRequest.prototype, "toEmailType", void 0);
    return POSTPublicEmailTemplateRequest;
}(utils_1.SpeakeasyBase));
exports.POSTPublicEmailTemplateRequest = POSTPublicEmailTemplateRequest;
