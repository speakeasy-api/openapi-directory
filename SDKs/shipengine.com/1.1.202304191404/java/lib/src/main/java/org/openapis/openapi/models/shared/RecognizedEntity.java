/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RecognizedEntity - An entity is a single piece of data that was recognized in unstructured text.  For example, a city, a postal code, package dimensions, insured value, etc.  Each entity includes the original text and the parsed value.
 * 
 */
public class RecognizedEntity {
    /**
     * The index of the last character of this entity within the original text
     */
    @JsonProperty("end_index")
    public Long endIndex;

    public RecognizedEntity withEndIndex(Long endIndex) {
        this.endIndex = endIndex;
        return this;
    }
    
    /**
     * The normalized value of the entity.
     * 
     * Most entity results have a `value` field, which is the normalized value of the entity.  For example, if the substring "john doe" was recognized as a "person" entity, then the value might be normalized to have proper capitalization (e.g. "John Doe").  Or if the substring "ft worth" was recognized as a "city" entity, then the value might be normalized to "Fort Worth".
     * 
     * Some entities have other information in addition to, or instead of a `value`.  For example, a "dimensions" entity will have separate fields for `length`, `width`, `height`, and `unit`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public java.util.Map<String, Object> result;

    public RecognizedEntity withResult(java.util.Map<String, Object> result) {
        this.result = result;
        return this;
    }
    
    /**
     * A confidence score between zero and one that indicates how certain the API is that it correctly recognized this entity
     * 
     */
    @JsonProperty("score")
    public Double score;

    public RecognizedEntity withScore(Double score) {
        this.score = score;
        return this;
    }
    
    /**
     * The index of the first character of this entity within the original text
     */
    @JsonProperty("start_index")
    public Long startIndex;

    public RecognizedEntity withStartIndex(Long startIndex) {
        this.startIndex = startIndex;
        return this;
    }
    
    /**
     * The substring from the original text that was recognized as this entity
     */
    @JsonProperty("text")
    public String text;

    public RecognizedEntity withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The Entity type (e.g. "weight", "person", "address_line1", etc.)
     */
    @JsonProperty("type")
    public String type;

    public RecognizedEntity withType(String type) {
        this.type = type;
        return this;
    }
    
    public RecognizedEntity(@JsonProperty("end_index") Long endIndex, @JsonProperty("score") Double score, @JsonProperty("start_index") Long startIndex, @JsonProperty("text") String text, @JsonProperty("type") String type) {
        this.endIndex = endIndex;
        this.score = score;
        this.startIndex = startIndex;
        this.text = text;
        this.type = type;
  }
}
