/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Contains the metadata for a column.
 */
export class ColumnMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arrayBaseColumnType" })
  arrayBaseColumnType?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "isAutoIncrement" })
  isAutoIncrement?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isCaseSensitive" })
  isCaseSensitive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isCurrency" })
  isCurrency?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isSigned" })
  isSigned?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "nullable" })
  nullable?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "precision" })
  precision?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "scale" })
  scale?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "schemaName" })
  schemaName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tableName" })
  tableName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "typeName" })
  typeName?: string;
}
