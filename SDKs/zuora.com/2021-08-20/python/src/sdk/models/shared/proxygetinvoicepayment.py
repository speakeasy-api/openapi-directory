"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProxyGetInvoicePayment:
    
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Amount'), 'exclude': lambda f: f is None }})
    r"""The amount of the payment.
    **Character limit**: 16 **Values**: a valid currency amount
    """  
    created_by_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedById'), 'exclude': lambda f: f is None }})
    r"""The user ID of the person who created the invoice payment.
    **Character limit**: 32 **V****alues**: automatically generated
    """  
    created_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when the invoice payment was generated.
    **Character limit**: 29 **V****alues**: automatically generated
    """  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""Object identifier."""  
    invoice_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceId'), 'exclude': lambda f: f is None }})
    r"""The unique ID of the invoice associated with this invoice payment.
    **Character limit**: 32 **Values**: a valid invoice ID
    """  
    payment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaymentId'), 'exclude': lambda f: f is None }})
    r"""The unique ID of the payment associated with this invoice payment.
    **Character limit**: 32 **V****alues**: a valid payment ID
    """  
    refund_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RefundAmount'), 'exclude': lambda f: f is None }})
    r"""Specifies the amount of a refund applied against this InvoicePayment. **Character limit**: 16 **Values**: automatically generated"""  
    updated_by_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedById'), 'exclude': lambda f: f is None }})
    r"""The ID of the user who last updated the invoice payment.
    **Character limit**: 32 **V****alues**: automatically generated
    """  
    updated_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when the invoice payment was last updated.
    **Character limit**: 29 **V****alues**: automatically generated
    """  
    