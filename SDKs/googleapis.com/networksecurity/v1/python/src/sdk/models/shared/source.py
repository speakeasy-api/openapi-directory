"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Source:
    r"""Specification of traffic source attributes."""
    
    ip_blocks: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipBlocks'), 'exclude': lambda f: f is None }})
    r"""Optional. List of CIDR ranges to match based on source IP address. At least one IP block should match. Single IP (e.g., \\"1.2.3.4\\") and CIDR (e.g., \\"1.2.3.0/24\\") are supported. Authorization based on source IP alone should be avoided. The IP addresses of any load balancers or proxies should be considered untrusted."""  
    principals: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('principals'), 'exclude': lambda f: f is None }})
    r"""Optional. List of peer identities to match for authorization. At least one principal should match. Each peer can be an exact match, or a prefix match (example, \\"namespace/*\\") or a suffix match (example, \\"*/service-account\\") or a presence match \\"*\\". Authorization based on the principal name without certificate validation (configured by ServerTlsPolicy resource) is considered insecure."""  
    