"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmEventbusProtoSuspensionExpiration:
    
    expire_after_ms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireAfterMs'), 'exclude': lambda f: f is None }})
    r"""Milliseconds after which the suspension expires, if no action taken."""  
    lift_when_expired: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('liftWhenExpired'), 'exclude': lambda f: f is None }})
    r"""Whether the suspension will be REJECTED or LIFTED upon expiration. REJECTED is the default behavior."""  
    remind_after_ms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remindAfterMs'), 'exclude': lambda f: f is None }})
    r"""Milliseconds after which the previous suspension action reminder, if any, is sent using the selected notification option, for a suspension which is still PENDING_UNSPECIFIED."""  
    