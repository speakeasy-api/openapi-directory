// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateDRTRoleXAmzTargetEnum
type AssociateDRTRoleXAmzTargetEnum string

const (
	AssociateDRTRoleXAmzTargetEnumAwsShield20160616AssociateDrtRole AssociateDRTRoleXAmzTargetEnum = "AWSShield_20160616.AssociateDRTRole"
)

func (e *AssociateDRTRoleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSShield_20160616.AssociateDRTRole":
		*e = AssociateDRTRoleXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateDRTRoleXAmzTargetEnum: %s", s)
	}
}

type AssociateDRTRoleHeaders struct {
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        AssociateDRTRoleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateDRTRoleRequest struct {
	Headers AssociateDRTRoleHeaders
	Request shared.AssociateDRTRoleRequest `request:"mediaType=application/json"`
}

type AssociateDRTRoleResponse struct {
	// AccessDeniedForDependencyException
	AccessDeniedForDependencyException interface{}
	// Success
	AssociateDRTRoleResponse map[string]interface{}
	ContentType              string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// OptimisticLockException
	OptimisticLockException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
