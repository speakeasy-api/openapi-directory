/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * EffectivePolicy - Contains rules to be applied to the affected accounts. The effective policy is the aggregation of any policies the account inherits, plus any policy directly attached to the account.
 */
public class EffectivePolicy {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedTimestamp")
    public OffsetDateTime lastUpdatedTimestamp;

    public EffectivePolicy withLastUpdatedTimestamp(OffsetDateTime lastUpdatedTimestamp) {
        this.lastUpdatedTimestamp = lastUpdatedTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PolicyContent")
    public String policyContent;

    public EffectivePolicy withPolicyContent(String policyContent) {
        this.policyContent = policyContent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PolicyType")
    public EffectivePolicyTypeEnum policyType;

    public EffectivePolicy withPolicyType(EffectivePolicyTypeEnum policyType) {
        this.policyType = policyType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetId")
    public String targetId;

    public EffectivePolicy withTargetId(String targetId) {
        this.targetId = targetId;
        return this;
    }
    
    public EffectivePolicy(){}
}
