/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2ContentLocation - Precise location of the finding within a document, record, image, or metadata container.
 */
public class GooglePrivacyDlpV2ContentLocation {
    /**
     * Name of the container where the finding is located. The top level name is the source file name or table name. Names of some common storage containers are formatted as follows: * BigQuery tables: `{project_id}:{dataset_id}.{table_id}` * Cloud Storage files: `gs://{bucket}/{path}` * Datastore namespace: {namespace} Nested names could be absent if the embedded object has no string identifier (for example, an image contained within a document).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerName")
    public String containerName;

    public GooglePrivacyDlpV2ContentLocation withContainerName(String containerName) {
        this.containerName = containerName;
        return this;
    }
    
    /**
     * Finding container modification timestamp, if applicable. For Cloud Storage, this field contains the last file modification timestamp. For a BigQuery table, this field contains the last_modified_time property. For Datastore, this field isn't populated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerTimestamp")
    public String containerTimestamp;

    public GooglePrivacyDlpV2ContentLocation withContainerTimestamp(String containerTimestamp) {
        this.containerTimestamp = containerTimestamp;
        return this;
    }
    
    /**
     * Finding container version, if available ("generation" for Cloud Storage).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerVersion")
    public String containerVersion;

    public GooglePrivacyDlpV2ContentLocation withContainerVersion(String containerVersion) {
        this.containerVersion = containerVersion;
        return this;
    }
    
    /**
     * Location of a finding within a document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentLocation")
    public GooglePrivacyDlpV2DocumentLocation documentLocation;

    public GooglePrivacyDlpV2ContentLocation withDocumentLocation(GooglePrivacyDlpV2DocumentLocation documentLocation) {
        this.documentLocation = documentLocation;
        return this;
    }
    
    /**
     * Location of the finding within an image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageLocation")
    public GooglePrivacyDlpV2ImageLocation imageLocation;

    public GooglePrivacyDlpV2ContentLocation withImageLocation(GooglePrivacyDlpV2ImageLocation imageLocation) {
        this.imageLocation = imageLocation;
        return this;
    }
    
    /**
     * Metadata Location
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadataLocation")
    public GooglePrivacyDlpV2MetadataLocation metadataLocation;

    public GooglePrivacyDlpV2ContentLocation withMetadataLocation(GooglePrivacyDlpV2MetadataLocation metadataLocation) {
        this.metadataLocation = metadataLocation;
        return this;
    }
    
    /**
     * Location of a finding within a row or record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordLocation")
    public GooglePrivacyDlpV2RecordLocation recordLocation;

    public GooglePrivacyDlpV2ContentLocation withRecordLocation(GooglePrivacyDlpV2RecordLocation recordLocation) {
        this.recordLocation = recordLocation;
        return this;
    }
    
    public GooglePrivacyDlpV2ContentLocation(){}
}
