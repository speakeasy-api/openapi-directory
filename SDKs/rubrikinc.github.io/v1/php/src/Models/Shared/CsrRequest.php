<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CsrRequest
{
    /**
     * The city where the provided organization is located, for example, New York or London.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * The two-letter ISO code for the country where the provided organization is located, for example US, GB, or FR.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * An email address associated with the organization, if applicable.
     * 
     * @var ?string $emailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emailAddress = null;
    
    /**
     * A comma-separated list of host names that are associated with the certificate. This list accepts wildcard hostnames, such as '*.rubrik.example.com', in addition to fully-qualified domain names.
     * 
     * @var array<string> $hostnames
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostnames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $hostnames;
    
    /**
     * The name of the organization associated with the certificate, for example 'Rubrik, Inc.'.
     * 
     * @var ?string $organization
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $organization = null;
    
    /**
     * The name of the organizational unit associated with the certificate, for example, Engineering.
     * 
     * @var ?string $organizationUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('organizationUnit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $organizationUnit = null;
    
    /**
     * If applicable, the name of the state where the provided organization is located, for example, California.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * The surname associated with the certificate, if applicable.
     * 
     * @var ?string $surname
     */
	#[\JMS\Serializer\Annotation\SerializedName('surname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $surname = null;
    
    /**
     * The user ID associated with the certificate, if applicable.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
	public function __construct()
	{
		$this->city = null;
		$this->country = null;
		$this->emailAddress = null;
		$this->hostnames = [];
		$this->organization = null;
		$this->organizationUnit = null;
		$this->state = null;
		$this->surname = null;
		$this->uid = null;
	}
}
