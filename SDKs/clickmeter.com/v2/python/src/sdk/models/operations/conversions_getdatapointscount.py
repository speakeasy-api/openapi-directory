"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_core_responses_countresponce as shared_api_core_responses_countresponce
from typing import Optional


@dataclasses.dataclass
class ConversionsGetDatapointsCountRequest:
    
    conversion_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'conversionId', 'style': 'simple', 'explode': False }})
    r"""Id of the conversion"""  
    created_after: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdAfter', 'style': 'form', 'explode': True }})
    r"""Exclude datapoints created before this date (YYYYMMDD)"""  
    created_before: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdBefore', 'style': 'form', 'explode': True }})
    r"""Exclude datapoints created after this date (YYYYMMDD)"""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Status of datapoint (\\"deleted\\"/\\"active\\"/\\"paused\\"/\\"spam\\")"""  
    tags: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tags', 'style': 'form', 'explode': True }})
    r"""Filter by this tag name"""  
    text_search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'textSearch', 'style': 'form', 'explode': True }})
    r"""Filter fields by this pattern"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Type of datapoint (\\"tl\\"/\\"tp\\")"""  
    

@dataclasses.dataclass
class ConversionsGetDatapointsCountResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_core_responses_count_responce: Optional[shared_api_core_responses_countresponce.APICoreResponsesCountResponce] = dataclasses.field(default=None)  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    