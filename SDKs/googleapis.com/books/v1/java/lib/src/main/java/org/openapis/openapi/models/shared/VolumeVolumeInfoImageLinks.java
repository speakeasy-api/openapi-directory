/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VolumeVolumeInfoImageLinks - A list of image links for all the sizes that are available. (In LITE projection.)
 */
public class VolumeVolumeInfoImageLinks {
    /**
     * Image link for extra large size (width of ~1280 pixels). (In LITE projection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extraLarge")
    public String extraLarge;
    public VolumeVolumeInfoImageLinks withExtraLarge(String extraLarge) {
        this.extraLarge = extraLarge;
        return this;
    }
    
    /**
     * Image link for large size (width of ~800 pixels). (In LITE projection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("large")
    public String large;
    public VolumeVolumeInfoImageLinks withLarge(String large) {
        this.large = large;
        return this;
    }
    
    /**
     * Image link for medium size (width of ~575 pixels). (In LITE projection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("medium")
    public String medium;
    public VolumeVolumeInfoImageLinks withMedium(String medium) {
        this.medium = medium;
        return this;
    }
    
    /**
     * Image link for small size (width of ~300 pixels). (In LITE projection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("small")
    public String small;
    public VolumeVolumeInfoImageLinks withSmall(String small) {
        this.small = small;
        return this;
    }
    
    /**
     * Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smallThumbnail")
    public String smallThumbnail;
    public VolumeVolumeInfoImageLinks withSmallThumbnail(String smallThumbnail) {
        this.smallThumbnail = smallThumbnail;
        return this;
    }
    
    /**
     * Image link for thumbnail size (width of ~128 pixels). (In LITE projection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnail")
    public String thumbnail;
    public VolumeVolumeInfoImageLinks withThumbnail(String thumbnail) {
        this.thumbnail = thumbnail;
        return this;
    }
    
}
