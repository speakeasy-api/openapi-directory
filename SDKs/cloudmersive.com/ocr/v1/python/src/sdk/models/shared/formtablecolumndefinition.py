"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FormTableColumnDefinition:
    r"""Definition of a column within a table for OCR data extraction from images"""
    
    allow_numeric_digits: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowNumericDigits'), 'exclude': lambda f: f is None }})
    r"""Optional - set to false to block values that contain numeric digits, set to true to allow numeric digits"""  
    anchor_mode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AnchorMode'), 'exclude': lambda f: f is None }})
    r"""Optional - the matching mode for the anchor.  Possible values are Complete (requires the entire anchor to match) and Partial (allows only part of the anchor to match).  Default is Partial."""  
    column_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ColumnID'), 'exclude': lambda f: f is None }})
    r"""The identifier of the field; use this to identify which field is being referenced"""  
    data_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataType'), 'exclude': lambda f: f is None }})
    r"""The data type of the field; possible values are INTEGER (Integer value), STRING (Arbitrary string value, spaces are permitted), DATE (Date in a structured format), DECIMAL (Decimal number), ALPHANUMERIC (Continuous alphanumeric string with no spaces), STRINGNOWHITESPACE (A string that contains no whitespace characters), SERIALNUMBER (A serial-number style string that contains letters and numbers, and certain symbols; must contain at least one number), ALPHAONLY (Alphabet characters only, no numbers or symbols or whitespace)"""  
    minimum_character_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinimumCharacterCount'), 'exclude': lambda f: f is None }})
    r"""Optional - the target number of digits in the field; useful for fixed-length fields"""  
    top_anchor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TopAnchor'), 'exclude': lambda f: f is None }})
    r"""Optional - the top anchor of the column heading"""  
    