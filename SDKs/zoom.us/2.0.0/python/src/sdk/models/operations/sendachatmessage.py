"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class SendaChatMessageSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class SendaChatMessageApplicationJSONAtItemsAtTypeEnum(str, Enum):
    r"""Type of mention. You can use one of the following values:<br>
    * `1`: Mention a contact. 
    
    * `2`: Mention \"all\" to notify everyone in the channel.
    """
    ONE = '1'
    TWO = '2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SendaChatMessageApplicationJSONAtItems:
    
    at_contact: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('at_contact'), 'exclude': lambda f: f is None }})
    r"""This field is required if the value of `at_type` field is set to 1.
    
    Email address of the contact.
    """  
    at_type: Optional[SendaChatMessageApplicationJSONAtItemsAtTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('at_type'), 'exclude': lambda f: f is None }})
    r"""Type of mention. You can use one of the following values:<br>
    * `1`: Mention a contact. 
    
    * `2`: Mention \"all\" to notify everyone in the channel.
    """  
    end_position: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_position'), 'exclude': lambda f: f is None }})
    r"""End position of the mention.
    
    Example message: \"@Shrijana How are you?\"
    In this case, the end position of the mention \"@Shrijana\" is 8. Hence, the value of this field will be 8.
    """  
    start_position: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_position'), 'exclude': lambda f: f is None }})
    r"""Start position of the mention(\\"@\\") in the message string.
    
    For example if you want to include the mention at the beginning of the message, the value for this field will be 0. 
    
    Example message: \"@Shrijana How are you?\" 
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SendaChatMessageApplicationJSON:
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""The message to be sent."""  
    at_items: Optional[list[SendaChatMessageApplicationJSONAtItems]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('at_items'), 'exclude': lambda f: f is None }})
    r"""[Chat mentions](https://support.zoom.us/hc/en-us/articles/360037567431-Using-chat-mentions-and-slash-commands) object. Use this object to include mentions in the message that will be sent to  a channel."""  
    to_channel: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to_channel'), 'exclude': lambda f: f is None }})
    r"""The Channel Id of the channel where you would like to send a message."""  
    to_contact: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to_contact'), 'exclude': lambda f: f is None }})
    r"""The email address of the contact to whom you would like to send the message."""  
    

@dataclasses.dataclass
class SendaChatMessageRequest:
    
    user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[SendaChatMessageApplicationJSON] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class SendaChatMessage201ApplicationXML:
    r"""**Status Code:** `201`<br>
    Message sent.
    """
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Message ID: Unique Identifier of the message."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SendaChatMessage201ApplicationJSON:
    r"""**Status Code:** `201`<br>
    Message sent.
    """
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Message ID: Unique Identifier of the message."""  
    

@dataclasses.dataclass
class SendaChatMessageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    senda_chat_message_201_application_json_object: Optional[SendaChatMessage201ApplicationJSON] = dataclasses.field(default=None)
    r"""**Status Code:** `201`<br>
    Message sent.
    """  
    