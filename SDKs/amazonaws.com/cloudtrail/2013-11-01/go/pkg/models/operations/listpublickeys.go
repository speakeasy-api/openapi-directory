// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListPublicKeysQueryParams struct {
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListPublicKeysXAmzTargetEnum
type ListPublicKeysXAmzTargetEnum string

const (
	ListPublicKeysXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101ListPublicKeys ListPublicKeysXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListPublicKeys"
)

func (e *ListPublicKeysXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.ListPublicKeys":
		*e = ListPublicKeysXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPublicKeysXAmzTargetEnum: %s", s)
	}
}

type ListPublicKeysHeaders struct {
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListPublicKeysXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListPublicKeysRequest struct {
	QueryParams ListPublicKeysQueryParams
	Headers     ListPublicKeysHeaders
	Request     shared.ListPublicKeysRequest `request:"mediaType=application/json"`
}

type ListPublicKeysResponse struct {
	ContentType string
	// InvalidTimeRangeException
	InvalidTimeRangeException interface{}
	// InvalidTokenException
	InvalidTokenException interface{}
	// Success
	ListPublicKeysResponse *shared.ListPublicKeysResponse
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
