/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Assignment } from "./assignment";
import { MediaUsage } from "./mediausage";
import { ModerationHistoryItem } from "./moderationhistoryitem";
import { Place } from "./place";
import { Via } from "./via";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contribution object to be created
 */
export class Contribution extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assignment" })
  @Type(() => Assignment)
  assignment?: Assignment;

  /**
   * The public attribution for this contribution. This will be the display name of the registered user or the contributor's first and last name if they provided them while making a non authenticated contribution. A blank attribution field indicates and anonymous contribution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attribution" })
  attribution?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "headline" })
  headline?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata({ elemType: MediaUsage })
  @Expose({ name: "mediaUsages" })
  @Type(() => MediaUsage)
  mediaUsages?: MediaUsage[];

  @SpeakeasyMetadata({ elemType: ModerationHistoryItem })
  @Expose({ name: "moderationHistory" })
  @Type(() => ModerationHistoryItem)
  moderationHistory?: ModerationHistoryItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "place" })
  @Type(() => Place)
  place?: Place;

  @SpeakeasyMetadata()
  @Expose({ name: "urlWords" })
  urlWords?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "via" })
  @Type(() => Via)
  via?: Via;
}
