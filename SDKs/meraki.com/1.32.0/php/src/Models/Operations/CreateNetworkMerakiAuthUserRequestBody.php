<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateNetworkMerakiAuthUserRequestBody
{
    /**
     * Authorization type for user. Can be 'Guest' or '802.1X' for wireless networks, or 'Client VPN' for wired networks. Defaults to '802.1X'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkMerakiAuthUserRequestBodyAccountTypeEnum $accountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\CreateNetworkMerakiAuthUserRequestBodyAccountTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkMerakiAuthUserRequestBodyAccountTypeEnum $accountType = null;
    
    /**
     * Authorization zones and expiration dates for the user.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\CreateNetworkMerakiAuthUserRequestBodyAuthorizations> $authorizations
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorizations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\CreateNetworkMerakiAuthUserRequestBodyAuthorizations>')]
    public array $authorizations;
    
    /**
     * Email address of the user
     * 
     * @var string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $email;
    
    /**
     * Whether or not Meraki should email the password to user. Default is false.
     * 
     * @var ?bool $emailPasswordToUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailPasswordToUser')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $emailPasswordToUser = null;
    
    /**
     * Whether or not the user is a Dashboard administrator.
     * 
     * @var ?bool $isAdmin
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAdmin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAdmin = null;
    
    /**
     * Name of the user. Only required If the user is not a Dashboard administrator.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The password for this user account. Only required If the user is not a Dashboard administrator.
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
	public function __construct()
	{
		$this->accountType = null;
		$this->authorizations = [];
		$this->email = "";
		$this->emailPasswordToUser = null;
		$this->isAdmin = null;
		$this->name = null;
		$this->password = null;
	}
}
