"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class History:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_get_curation_tag_history(self, request: operations.GetGetCurationTagHistoryRequest) -> operations.GetGetCurationTagHistoryResponse:
        r"""getCurationTagHistory"""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/getCurationTagHistory'
        
        query_params = utils.get_query_params(operations.GetGetCurationTagHistoryRequest, request)
        
        client = self._client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetGetCurationTagHistoryResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_get_pathway_history(self, request: operations.GetGetPathwayHistoryRequest) -> operations.GetGetPathwayHistoryResponse:
        r"""getPathwayHistoryGet the revision history of a pathway."""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/getPathwayHistory'
        
        query_params = utils.get_query_params(operations.GetGetPathwayHistoryRequest, request)
        
        client = self._client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetGetPathwayHistoryResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_get_recent_changes(self, request: operations.GetGetRecentChangesRequest) -> operations.GetGetRecentChangesResponse:
        r"""getRecentChangesGet the recently changed pathways.<br>Note: the recent changes table only retains items for a limited time (2 months), so there is no guarantee that you will get all changes when the timestamp points to a date that is more than 2 months in the past."""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/getRecentChanges'
        
        query_params = utils.get_query_params(operations.GetGetRecentChangesRequest, request)
        
        client = self._client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetGetRecentChangesResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    