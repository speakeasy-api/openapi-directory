// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateAddonRequestBodyResolveConflictsEnum - <p>How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:</p> <ul> <li> <p> <b>None</b> – Amazon EKS doesn't change the value. The update might fail.</p> </li> <li> <p> <b>Overwrite</b> – Amazon EKS overwrites the changed value back to the Amazon EKS default value.</p> </li> <li> <p> <b>Preserve</b> – Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.</p> </li> </ul>
type UpdateAddonRequestBodyResolveConflictsEnum string

const (
	UpdateAddonRequestBodyResolveConflictsEnumOverwrite UpdateAddonRequestBodyResolveConflictsEnum = "OVERWRITE"
	UpdateAddonRequestBodyResolveConflictsEnumNone      UpdateAddonRequestBodyResolveConflictsEnum = "NONE"
	UpdateAddonRequestBodyResolveConflictsEnumPreserve  UpdateAddonRequestBodyResolveConflictsEnum = "PRESERVE"
)

func (e *UpdateAddonRequestBodyResolveConflictsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OVERWRITE":
		fallthrough
	case "NONE":
		fallthrough
	case "PRESERVE":
		*e = UpdateAddonRequestBodyResolveConflictsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAddonRequestBodyResolveConflictsEnum: %s", s)
	}
}

type UpdateAddonRequestBody struct {
	// The version of the add-on. The version must match one of the versions returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html"> <code>DescribeAddonVersions</code> </a>.
	AddonVersion *string `json:"addonVersion,omitempty"`
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
	ClientRequestToken *string `json:"clientRequestToken,omitempty"`
	// The set of configuration values for the add-on that's created. The values that you provide are validated against the schema in <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonConfiguration.html">DescribeAddonConfiguration</a>.
	ConfigurationValues *string `json:"configurationValues,omitempty"`
	// <p>How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:</p> <ul> <li> <p> <b>None</b> – Amazon EKS doesn't change the value. The update might fail.</p> </li> <li> <p> <b>Overwrite</b> – Amazon EKS overwrites the changed value back to the Amazon EKS default value.</p> </li> <li> <p> <b>Preserve</b> – Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.</p> </li> </ul>
	ResolveConflicts *UpdateAddonRequestBodyResolveConflictsEnum `json:"resolveConflicts,omitempty"`
	// <p>The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html">Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.</p> <note> <p>To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see <a href="https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html">Enabling IAM roles for service accounts on your cluster</a> in the <i>Amazon EKS User Guide</i>.</p> </note>
	ServiceAccountRoleArn *string `json:"serviceAccountRoleArn,omitempty"`
}

type UpdateAddonRequest struct {
	RequestBody       UpdateAddonRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The name of the add-on. The name must match one of the names returned by <a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_ListAddons.html"> <code>ListAddons</code> </a>.
	AddonName string `pathParam:"style=simple,explode=false,name=addonName"`
	// The name of the cluster.
	Name string `pathParam:"style=simple,explode=false,name=name"`
}

type UpdateAddonResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServerException
	ServerException interface{}
	// Success
	UpdateAddonResponse *shared.UpdateAddonResponse
}
