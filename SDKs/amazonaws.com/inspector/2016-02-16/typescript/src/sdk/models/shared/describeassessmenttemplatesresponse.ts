/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AssessmentTemplate } from "./assessmenttemplate";
import { FailedItemDetails } from "./faileditemdetails";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeAssessmentTemplatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AssessmentTemplate })
  @Expose({ name: "assessmentTemplates" })
  @Type(() => AssessmentTemplate)
  assessmentTemplates: AssessmentTemplate[];

  @SpeakeasyMetadata({ elemType: FailedItemDetails })
  @Expose({ name: "failedItems" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, FailedItemDetails> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], FailedItemDetails);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  failedItems: Record<string, FailedItemDetails>;
}
