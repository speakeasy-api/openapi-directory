// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateNetworkInsightsAccessScopeActionEnum
type POSTCreateNetworkInsightsAccessScopeActionEnum string

const (
	POSTCreateNetworkInsightsAccessScopeActionEnumCreateNetworkInsightsAccessScope POSTCreateNetworkInsightsAccessScopeActionEnum = "CreateNetworkInsightsAccessScope"
)

func (e *POSTCreateNetworkInsightsAccessScopeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateNetworkInsightsAccessScope":
		*e = POSTCreateNetworkInsightsAccessScopeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateNetworkInsightsAccessScopeActionEnum: %s", s)
	}
}

// POSTCreateNetworkInsightsAccessScopeVersionEnum
type POSTCreateNetworkInsightsAccessScopeVersionEnum string

const (
	POSTCreateNetworkInsightsAccessScopeVersionEnumTwoThousandAndSixteen1115 POSTCreateNetworkInsightsAccessScopeVersionEnum = "2016-11-15"
)

func (e *POSTCreateNetworkInsightsAccessScopeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTCreateNetworkInsightsAccessScopeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateNetworkInsightsAccessScopeVersionEnum: %s", s)
	}
}

type POSTCreateNetworkInsightsAccessScopeQueryParams struct {
	Action  POSTCreateNetworkInsightsAccessScopeActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTCreateNetworkInsightsAccessScopeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTCreateNetworkInsightsAccessScopeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateNetworkInsightsAccessScopeRequest struct {
	QueryParams POSTCreateNetworkInsightsAccessScopeQueryParams
	Headers     POSTCreateNetworkInsightsAccessScopeHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTCreateNetworkInsightsAccessScopeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
