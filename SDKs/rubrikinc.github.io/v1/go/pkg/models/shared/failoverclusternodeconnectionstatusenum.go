// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FailoverClusterNodeConnectionStatusEnum - Connection type options for the failover cluster node.
type FailoverClusterNodeConnectionStatusEnum string

const (
	FailoverClusterNodeConnectionStatusEnumConnecting           FailoverClusterNodeConnectionStatusEnum = "Connecting"
	FailoverClusterNodeConnectionStatusEnumConnected            FailoverClusterNodeConnectionStatusEnum = "Connected"
	FailoverClusterNodeConnectionStatusEnumDisconnected         FailoverClusterNodeConnectionStatusEnum = "Disconnected"
	FailoverClusterNodeConnectionStatusEnumDeleting             FailoverClusterNodeConnectionStatusEnum = "Deleting"
	FailoverClusterNodeConnectionStatusEnumDeleted              FailoverClusterNodeConnectionStatusEnum = "Deleted"
	FailoverClusterNodeConnectionStatusEnumConnectorNotDeployed FailoverClusterNodeConnectionStatusEnum = "ConnectorNotDeployed"
	FailoverClusterNodeConnectionStatusEnumPartiallyConnected   FailoverClusterNodeConnectionStatusEnum = "PartiallyConnected"
	FailoverClusterNodeConnectionStatusEnumReplicationTarget    FailoverClusterNodeConnectionStatusEnum = "ReplicationTarget"
)

func (e FailoverClusterNodeConnectionStatusEnum) ToPointer() *FailoverClusterNodeConnectionStatusEnum {
	return &e
}

func (e *FailoverClusterNodeConnectionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Connecting":
		fallthrough
	case "Connected":
		fallthrough
	case "Disconnected":
		fallthrough
	case "Deleting":
		fallthrough
	case "Deleted":
		fallthrough
	case "ConnectorNotDeployed":
		fallthrough
	case "PartiallyConnected":
		fallthrough
	case "ReplicationTarget":
		*e = FailoverClusterNodeConnectionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailoverClusterNodeConnectionStatusEnum: %v", v)
	}
}
