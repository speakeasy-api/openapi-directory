// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EntityTypeEnum string

const (
	EntityTypeEnumMedication                    EntityTypeEnum = "MEDICATION"
	EntityTypeEnumMedicalCondition              EntityTypeEnum = "MEDICAL_CONDITION"
	EntityTypeEnumProtectedHealthInformation    EntityTypeEnum = "PROTECTED_HEALTH_INFORMATION"
	EntityTypeEnumTestTreatmentProcedure        EntityTypeEnum = "TEST_TREATMENT_PROCEDURE"
	EntityTypeEnumAnatomy                       EntityTypeEnum = "ANATOMY"
	EntityTypeEnumTimeExpression                EntityTypeEnum = "TIME_EXPRESSION"
	EntityTypeEnumBehavioralEnvironmentalSocial EntityTypeEnum = "BEHAVIORAL_ENVIRONMENTAL_SOCIAL"
)

func (e EntityTypeEnum) ToPointer() *EntityTypeEnum {
	return &e
}

func (e *EntityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MEDICATION":
		fallthrough
	case "MEDICAL_CONDITION":
		fallthrough
	case "PROTECTED_HEALTH_INFORMATION":
		fallthrough
	case "TEST_TREATMENT_PROCEDURE":
		fallthrough
	case "ANATOMY":
		fallthrough
	case "TIME_EXPRESSION":
		fallthrough
	case "BEHAVIORAL_ENVIRONMENTAL_SOCIAL":
		*e = EntityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityTypeEnum: %v", v)
	}
}
