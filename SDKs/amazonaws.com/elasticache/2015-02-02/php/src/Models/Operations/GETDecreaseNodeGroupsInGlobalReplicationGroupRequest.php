<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETDecreaseNodeGroupsInGlobalReplicationGroupRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum $action;
    
    /**
     * Indicates that the shard reconfiguration process begins immediately. At present, the only permitted value for this parameter is true. 
     * 
     * @var bool $applyImmediately
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ApplyImmediately')]
    public bool $applyImmediately;
    
    /**
     * If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRemove is a list of NodeGroupIds to remove from the cluster. ElastiCache for Redis will attempt to remove all node groups listed by GlobalNodeGroupsToRemove from the cluster. 
     * 
     * @var ?array<string> $globalNodeGroupsToRemove
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=GlobalNodeGroupsToRemove')]
    public ?array $globalNodeGroupsToRemove = null;
    
    /**
     * If the value of NodeGroupCount is less than the current number of node groups (shards), then either NodeGroupsToRemove or NodeGroupsToRetain is required. GlobalNodeGroupsToRetain is a list of NodeGroupIds to retain from the cluster. ElastiCache for Redis will attempt to retain all node groups listed by GlobalNodeGroupsToRetain from the cluster. 
     * 
     * @var ?array<string> $globalNodeGroupsToRetain
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=GlobalNodeGroupsToRetain')]
    public ?array $globalNodeGroupsToRetain = null;
    
    /**
     * The name of the Global datastore
     * 
     * @var string $globalReplicationGroupId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=GlobalReplicationGroupId')]
    public string $globalReplicationGroupId;
    
    /**
     * The number of node groups (shards) that results from the modification of the shard configuration
     * 
     * @var int $nodeGroupCount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NodeGroupCount')]
    public int $nodeGroupCount;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETDecreaseNodeGroupsInGlobalReplicationGroupActionEnum::DECREASE_NODE_GROUPS_IN_GLOBAL_REPLICATION_GROUP;
		$this->applyImmediately = false;
		$this->globalNodeGroupsToRemove = null;
		$this->globalNodeGroupsToRetain = null;
		$this->globalReplicationGroupId = "";
		$this->nodeGroupCount = 0;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETDecreaseNodeGroupsInGlobalReplicationGroupVersionEnum::TWO_THOUSAND_AND_FIFTEEN0202;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
