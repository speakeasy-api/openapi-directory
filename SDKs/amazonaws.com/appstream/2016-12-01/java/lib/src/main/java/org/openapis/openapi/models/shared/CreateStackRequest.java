/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateStackRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessEndpoints")
    public AccessEndpoint[] accessEndpoints;
    public CreateStackRequest withAccessEndpoints(AccessEndpoint[] accessEndpoints) {
        this.accessEndpoints = accessEndpoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApplicationSettings")
    public ApplicationSettings applicationSettings;
    public CreateStackRequest withApplicationSettings(ApplicationSettings applicationSettings) {
        this.applicationSettings = applicationSettings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public CreateStackRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisplayName")
    public String displayName;
    public CreateStackRequest withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EmbedHostDomains")
    public String[] embedHostDomains;
    public CreateStackRequest withEmbedHostDomains(String[] embedHostDomains) {
        this.embedHostDomains = embedHostDomains;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeedbackURL")
    public String feedbackURL;
    public CreateStackRequest withFeedbackURL(String feedbackURL) {
        this.feedbackURL = feedbackURL;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;
    public CreateStackRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RedirectURL")
    public String redirectURL;
    public CreateStackRequest withRedirectURL(String redirectURL) {
        this.redirectURL = redirectURL;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StorageConnectors")
    public StorageConnector[] storageConnectors;
    public CreateStackRequest withStorageConnectors(StorageConnector[] storageConnectors) {
        this.storageConnectors = storageConnectors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreamingExperienceSettings")
    public StreamingExperienceSettings streamingExperienceSettings;
    public CreateStackRequest withStreamingExperienceSettings(StreamingExperienceSettings streamingExperienceSettings) {
        this.streamingExperienceSettings = streamingExperienceSettings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;
    public CreateStackRequest withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserSettings")
    public UserSetting[] userSettings;
    public CreateStackRequest withUserSettings(UserSetting[] userSettings) {
        this.userSettings = userSettings;
        return this;
    }
    
}
