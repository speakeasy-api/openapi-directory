// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRunV2VpcAccessEgressEnum - Traffic VPC egress settings.
type GoogleCloudRunV2VpcAccessEgressEnum string

const (
	GoogleCloudRunV2VpcAccessEgressEnumVpcEgressUnspecified GoogleCloudRunV2VpcAccessEgressEnum = "VPC_EGRESS_UNSPECIFIED"
	GoogleCloudRunV2VpcAccessEgressEnumAllTraffic           GoogleCloudRunV2VpcAccessEgressEnum = "ALL_TRAFFIC"
	GoogleCloudRunV2VpcAccessEgressEnumPrivateRangesOnly    GoogleCloudRunV2VpcAccessEgressEnum = "PRIVATE_RANGES_ONLY"
)

func (e *GoogleCloudRunV2VpcAccessEgressEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VPC_EGRESS_UNSPECIFIED":
		fallthrough
	case "ALL_TRAFFIC":
		fallthrough
	case "PRIVATE_RANGES_ONLY":
		*e = GoogleCloudRunV2VpcAccessEgressEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRunV2VpcAccessEgressEnum: %s", s)
	}
}

// GoogleCloudRunV2VpcAccess - VPC Access settings. For more information on creating a VPC Connector, visit https://cloud.google.com/vpc/docs/configure-serverless-vpc-access For information on how to configure Cloud Run with an existing VPC Connector, visit https://cloud.google.com/run/docs/configuring/connecting-vpc
type GoogleCloudRunV2VpcAccess struct {
	// VPC Access connector name. Format: projects/{project}/locations/{location}/connectors/{connector}, where {project} can be project id or number.
	Connector *string `json:"connector,omitempty"`
	// Traffic VPC egress settings.
	Egress *GoogleCloudRunV2VpcAccessEgressEnum `json:"egress,omitempty"`
}
