/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Activation - An activation registers one or more on-premises servers or virtual machines (VMs) with Amazon Web Services so that you can configure those servers or VMs using Run Command. A server or VM that has been registered with Amazon Web Services Systems Manager is called a managed node.
 */
public class Activation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ActivationId")
    public String activationId;

    public Activation withActivationId(String activationId) {
        this.activationId = activationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;

    public Activation withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultInstanceName")
    public String defaultInstanceName;

    public Activation withDefaultInstanceName(String defaultInstanceName) {
        this.defaultInstanceName = defaultInstanceName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public Activation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExpirationDate")
    public OffsetDateTime expirationDate;

    public Activation withExpirationDate(OffsetDateTime expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Expired")
    public Boolean expired;

    public Activation withExpired(Boolean expired) {
        this.expired = expired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IamRole")
    public String iamRole;

    public Activation withIamRole(String iamRole) {
        this.iamRole = iamRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RegistrationLimit")
    public Long registrationLimit;

    public Activation withRegistrationLimit(Long registrationLimit) {
        this.registrationLimit = registrationLimit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RegistrationsCount")
    public Long registrationsCount;

    public Activation withRegistrationsCount(Long registrationsCount) {
        this.registrationsCount = registrationsCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;

    public Activation withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    public Activation(){}
}
