<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Consents - Content of the body of a consent request.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Consents
{
    /**
     * Requested access services for a consent.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AccountAccess $access
     */
	#[\JMS\Serializer\Annotation\SerializedName('access')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AccountAccess')]
    public AccountAccess $access;
    
    /**
     * If "true" indicates that a payment initiation service will be addressed in the same "session".
     * 
     * 
     * 
     * @var bool $combinedServiceIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('combinedServiceIndicator')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $combinedServiceIndicator;
    
    /**
     * This field indicates the requested maximum frequency for an access without PSU involvement per day.
     * 
     * For a one-off access, this attribute is set to "1".
     * 
     * The frequency needs to be greater equal to one.
     * 
     * If not otherwise agreed bilaterally between TPP and ASPSP, the frequency is less equal to 4.
     * 
     * 
     * @var int $frequencyPerDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('frequencyPerDay')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $frequencyPerDay;
    
    /**
     * "true", if the consent is for recurring access to the account data.
     * 
     * 
     * "false", if the consent is for one access to the account data.
     * 
     * 
     * @var bool $recurringIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('recurringIndicator')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $recurringIndicator;
    
    /**
     * This parameter is defining a valid until date (including the mentioned date) for the requested consent. 
     * 
     * The content is the local ASPSP date in ISO-Date format, e.g. 2017-10-30.
     * 
     * Future dates might get adjusted by ASPSP. 
     * 
     * If a maximal available date is requested, a date in far future is to be used: "9999-12-31". 
     * 
     * In both cases the consent object to be retrieved by the get consent request will contain the adjusted date.
     * 
     * 
     * @var \DateTime $validUntil
     */
	#[\JMS\Serializer\Annotation\SerializedName('validUntil')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $validUntil;
    
	public function __construct()
	{
		$this->access = new \OpenAPI\OpenAPI\Models\Shared\AccountAccess();
		$this->combinedServiceIndicator = false;
		$this->frequencyPerDay = 0;
		$this->recurringIndicator = false;
		$this->validUntil = new \DateTime();
	}
}
