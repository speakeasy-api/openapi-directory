"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import updatestackrequest as shared_updatestackrequest
from ..shared import updatestackresult as shared_updatestackresult
from enum import Enum
from typing import Any, Optional

class UpdateStackXAmzTargetEnum(str, Enum):
    PHOTON_ADMIN_PROXY_SERVICE_UPDATE_STACK = 'PhotonAdminProxyService.UpdateStack'


@dataclasses.dataclass
class UpdateStackRequest:
    
    update_stack_request: shared_updatestackrequest.UpdateStackRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: UpdateStackXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class UpdateStackResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    concurrent_modification_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ConcurrentModificationException"""  
    incompatible_image_exception: Optional[Any] = dataclasses.field(default=None)
    r"""IncompatibleImageException"""  
    invalid_account_status_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidAccountStatusException"""  
    invalid_parameter_combination_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidParameterCombinationException"""  
    invalid_role_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidRoleException"""  
    limit_exceeded_exception: Optional[Any] = dataclasses.field(default=None)
    r"""LimitExceededException"""  
    operation_not_permitted_exception: Optional[Any] = dataclasses.field(default=None)
    r"""OperationNotPermittedException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_in_use_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceInUseException"""  
    resource_not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceNotFoundException"""  
    update_stack_result: Optional[shared_updatestackresult.UpdateStackResult] = dataclasses.field(default=None)
    r"""Success"""  
    