/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETGETVpnConnectionDeviceSampleConfigurationRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETGETVpnConnectionDeviceSampleConfigurationActionEnum action;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withAction(GETGETVpnConnectionDeviceSampleConfigurationActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The IKE version to be used in the sample configuration file for your customer gateway device. You can specify one of the following versions: &lt;code&gt;ikev1&lt;/code&gt; or &lt;code&gt;ikev2&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=InternetKeyExchangeVersion")
    public String internetKeyExchangeVersion;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withInternetKeyExchangeVersion(String internetKeyExchangeVersion) {
        this.internetKeyExchangeVersion = internetKeyExchangeVersion;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETGETVpnConnectionDeviceSampleConfigurationVersionEnum version;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withVersion(GETGETVpnConnectionDeviceSampleConfigurationVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * Device identifier provided by the &lt;code&gt;GetVpnConnectionDeviceTypes&lt;/code&gt; API.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpnConnectionDeviceTypeId")
    public String vpnConnectionDeviceTypeId;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withVpnConnectionDeviceTypeId(String vpnConnectionDeviceTypeId) {
        this.vpnConnectionDeviceTypeId = vpnConnectionDeviceTypeId;
        return this;
    }
    
    /**
     * The &lt;code&gt;VpnConnectionId&lt;/code&gt; specifies the Site-to-Site VPN connection used for the sample configuration.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpnConnectionId")
    public String vpnConnectionId;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withVpnConnectionId(String vpnConnectionId) {
        this.vpnConnectionId = vpnConnectionId;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;

    public GETGETVpnConnectionDeviceSampleConfigurationRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    public GETGETVpnConnectionDeviceSampleConfigurationRequest(@JsonProperty("Action") GETGETVpnConnectionDeviceSampleConfigurationActionEnum action, @JsonProperty("Version") GETGETVpnConnectionDeviceSampleConfigurationVersionEnum version, @JsonProperty("VpnConnectionDeviceTypeId") String vpnConnectionDeviceTypeId, @JsonProperty("VpnConnectionId") String vpnConnectionId) {
        this.action = action;
        this.version = version;
        this.vpnConnectionDeviceTypeId = vpnConnectionDeviceTypeId;
        this.vpnConnectionId = vpnConnectionId;
  }
}
