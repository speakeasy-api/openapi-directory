/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HttpHeaderAction - The request and response header transformations that take effect before the request is passed along to the selected backendService.
 */
public class HttpHeaderAction {
    /**
     * Headers to add to a matching request before forwarding the request to the backendService.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestHeadersToAdd")
    public HttpHeaderOption[] requestHeadersToAdd;

    public HttpHeaderAction withRequestHeadersToAdd(HttpHeaderOption[] requestHeadersToAdd) {
        this.requestHeadersToAdd = requestHeadersToAdd;
        return this;
    }
    
    /**
     * A list of header names for headers that need to be removed from the request before forwarding the request to the backendService.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestHeadersToRemove")
    public String[] requestHeadersToRemove;

    public HttpHeaderAction withRequestHeadersToRemove(String[] requestHeadersToRemove) {
        this.requestHeadersToRemove = requestHeadersToRemove;
        return this;
    }
    
    /**
     * Headers to add the response before sending the response back to the client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseHeadersToAdd")
    public HttpHeaderOption[] responseHeadersToAdd;

    public HttpHeaderAction withResponseHeadersToAdd(HttpHeaderOption[] responseHeadersToAdd) {
        this.responseHeadersToAdd = responseHeadersToAdd;
        return this;
    }
    
    /**
     * A list of header names for headers that need to be removed from the response before sending the response back to the client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseHeadersToRemove")
    public String[] responseHeadersToRemove;

    public HttpHeaderAction withResponseHeadersToRemove(String[] responseHeadersToRemove) {
        this.responseHeadersToRemove = responseHeadersToRemove;
        return this;
    }
    
    public HttpHeaderAction(){}
}
