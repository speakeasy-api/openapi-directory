"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cardactions as shared_cardactions
from ..shared import carddisplaybody as shared_carddisplaybody
from ..shared import cardfetchbodypatch as shared_cardfetchbodypatch
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardPatchRequest:
    r"""Body for a patch with optional fields"""
    
    actions: Optional[shared_cardactions.CardActions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actions'), 'exclude': lambda f: f is None }})
    r"""Configuration for custom user actions on cards."""  
    display: Optional[shared_carddisplaybody.CardDisplayBody] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display'), 'exclude': lambda f: f is None }})
    r"""Configuration for displayed info on a card"""  
    fetch: Optional[shared_cardfetchbodypatch.CardFetchBodyPatch] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fetch'), 'exclude': lambda f: f is None }})
    r"""Variant of CardFetchBody with fields as optional for patches"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The top-level title for this card. Displayed to users in the CRM UI."""  
    