/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class ReleasesGetIosManifestResponse {
    
    public String contentType;

    public ReleasesGetIosManifestResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    
    public Integer statusCode;

    public ReleasesGetIosManifestResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public ReleasesGetIosManifestResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * The app's OS is not iOS.
     */
    
    public ReleasesGetIosManifest400ApplicationJSON releasesGetIosManifest400ApplicationJSONObject;

    public ReleasesGetIosManifestResponse withReleasesGetIosManifest400ApplicationJSONObject(ReleasesGetIosManifest400ApplicationJSON releasesGetIosManifest400ApplicationJSONObject) {
        this.releasesGetIosManifest400ApplicationJSONObject = releasesGetIosManifest400ApplicationJSONObject;
        return this;
    }
    
    /**
     * Forbidden - The token provided doesn't match the release's token.
     */
    
    public ReleasesGetIosManifest403ApplicationJSON releasesGetIosManifest403ApplicationJSONObject;

    public ReleasesGetIosManifestResponse withReleasesGetIosManifest403ApplicationJSONObject(ReleasesGetIosManifest403ApplicationJSON releasesGetIosManifest403ApplicationJSONObject) {
        this.releasesGetIosManifest403ApplicationJSONObject = releasesGetIosManifest403ApplicationJSONObject;
        return this;
    }
    
    /**
     * The app or release can't be found.
     */
    
    public ReleasesGetIosManifest404ApplicationJSON releasesGetIosManifest404ApplicationJSONObject;

    public ReleasesGetIosManifestResponse withReleasesGetIosManifest404ApplicationJSONObject(ReleasesGetIosManifest404ApplicationJSON releasesGetIosManifest404ApplicationJSONObject) {
        this.releasesGetIosManifest404ApplicationJSONObject = releasesGetIosManifest404ApplicationJSONObject;
        return this;
    }
    
    public ReleasesGetIosManifestResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
