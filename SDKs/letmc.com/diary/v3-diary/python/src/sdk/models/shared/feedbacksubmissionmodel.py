"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FeedbackSubmissionModel:
    r"""Feedback Submission Model:-"""
    
    appointment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AppointmentID'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'AppointmentID' }})
    r"""Appointment to submit feedback to:-"""  
    feedback: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Feedback'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Feedback' }})
    r"""Feedback to submit:-"""  
    property_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PropertyID'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'PropertyID' }})
    r"""Property to submit feedback to:-"""  
    