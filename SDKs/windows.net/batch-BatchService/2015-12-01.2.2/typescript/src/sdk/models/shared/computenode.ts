/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateReference } from "./certificatereference";
import { ComputeNodeError } from "./computenodeerror";
import { StartTask } from "./starttask";
import { StartTaskInformation } from "./starttaskinformation";
import { TaskInformation } from "./taskinformation";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Gets or sets whether the compute node should be available for task scheduling.
 */
export enum ComputeNodeSchedulingStateEnum {
  Enabled = "enabled",
  Disabled = "disabled",
}

/**
 * Gets or sets the current state of the compute node.
 */
export enum ComputeNodeStateEnum {
  Idle = "idle",
  Rebooting = "rebooting",
  Reimaging = "reimaging",
  Running = "running",
  Unusable = "unusable",
  Creating = "creating",
  Starting = "starting",
  Waitingforstarttask = "waitingforstarttask",
  Starttaskfailed = "starttaskfailed",
  Unknown = "unknown",
  Leavingpool = "leavingpool",
  Offline = "offline",
}

/**
 * A compute node in the Batch service.
 */
export class ComputeNode extends SpeakeasyBase {
  /**
   * Gets or sets an identifier which can be passed in the Add Task API to request that the task be scheduled close to this compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "affinityId" })
  affinityId?: string;

  /**
   * Gets or sets the time at which this compute node was allocated to the pool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allocationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  allocationTime?: Date;

  /**
   * Gets or sets the list of certificates installed on the compute node.
   */
  @SpeakeasyMetadata({ elemType: CertificateReference })
  @Expose({ name: "certificateReferences" })
  @Type(() => CertificateReference)
  certificateReferences?: CertificateReference[];

  /**
   * Gets or sets the list of errors that are currently being encountered by the compute node.
   */
  @SpeakeasyMetadata({ elemType: ComputeNodeError })
  @Expose({ name: "errors" })
  @Type(() => ComputeNodeError)
  errors?: ComputeNodeError[];

  /**
   * Gets or sets the id of the compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Gets or sets the IP address that other compute nodes can use to communicate with this compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  /**
   * Gets or sets the time at which the compute node was started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastBootTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastBootTime?: Date;

  /**
   * Gets or sets the list of tasks that are currently running on the compute node.
   */
  @SpeakeasyMetadata({ elemType: TaskInformation })
  @Expose({ name: "recentTasks" })
  @Type(() => TaskInformation)
  recentTasks?: TaskInformation[];

  /**
   * Gets or sets whether the compute node should be available for task scheduling.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedulingState" })
  schedulingState?: ComputeNodeSchedulingStateEnum;

  /**
   * A task defined on a pool and run by compute nodes when they join the pool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTask" })
  @Type(() => StartTask)
  startTask?: StartTask;

  /**
   * Information about a start task running on a compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTaskInfo" })
  @Type(() => StartTaskInformation)
  startTaskInfo?: StartTaskInformation;

  /**
   * Gets or sets the current state of the compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ComputeNodeStateEnum;

  /**
   * Gets or sets the time at which the compute node entered its current state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateTransitionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stateTransitionTime?: Date;

  /**
   * Gets or sets the total number of job tasks completed on the compute node. This includes Job Preparation, Job Release and Job Manager tasks, but not the pool start task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalTasksRun" })
  totalTasksRun?: number;

  /**
   * Gets or sets the URL of the compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * Gets or sets the size of the virtual machine hosting the compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmSize" })
  vmSize?: string;
}
