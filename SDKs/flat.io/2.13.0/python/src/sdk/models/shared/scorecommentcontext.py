"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScoreCommentContext:
    r"""The context of the comment (for inline/contextualized comments). A context will include all the information related to the location of the comment (i.e. score parts, range of measure, time position)."""
    
    measure_uuids: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measureUuids') }})
    r"""The list of measure UUIds"""  
    part_uuid: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partUuid') }})
    r"""The unique identifier (UUID) of the score part"""  
    start_dpq: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startDpq') }})  
    start_time_pos: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTimePos') }})  
    stop_dpq: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stopDpq') }})  
    stop_time_pos: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stopTimePos') }})  
    staff_idx: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('staffIdx'), 'exclude': lambda f: f is None }})
    r"""(Deprecated, use `staffUuid`) The identififer of the staff"""  
    staff_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('staffUuid'), 'exclude': lambda f: f is None }})
    r"""The unique identififer (UUID) of the staff"""  
    