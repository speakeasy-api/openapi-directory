/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RemoveDraftAppVersionResourceMappingsRequestBody extends SpeakeasyBase {
  /**
   * The Amazon Resource Name (ARN) of the AWS Resilience Hub application. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:app/<code>app-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appArn" })
  appArn: string;

  /**
   * The names of the registered applications you want to remove from the resource mappings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appRegistryAppNames" })
  appRegistryAppNames?: string[];

  /**
   * <p>The names of the Amazon Elastic Kubernetes Service clusters and namespaces you want to remove from the resource mappings.</p> <note> <p>This parameter accepts values in "eks-cluster/namespace" format.</p> </note>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eksSourceNames" })
  eksSourceNames?: string[];

  /**
   * The names of the CloudFormation stacks you want to remove from the resource mappings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logicalStackNames" })
  logicalStackNames?: string[];

  /**
   * The names of the resource groups you want to remove from the resource mappings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceGroupNames" })
  resourceGroupNames?: string[];

  /**
   * The names of the resources you want to remove from the resource mappings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceNames" })
  resourceNames?: string[];

  /**
   * The names of the Terraform sources you want to remove from the resource mappings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "terraformSourceNames" })
  terraformSourceNames?: string[];
}

export class RemoveDraftAppVersionResourceMappingsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: RemoveDraftAppVersionResourceMappingsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class RemoveDraftAppVersionResourceMappingsResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  removeDraftAppVersionResourceMappingsResponse?: shared.RemoveDraftAppVersionResourceMappingsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
