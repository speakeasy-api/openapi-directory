// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CloudtasksProjectsLocationsQueuesTasksGetSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type CloudtasksProjectsLocationsQueuesTasksGetPathParams struct {
	// Required. The task name. For example: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID`
	Name string `pathParam:"style=simple,explode=false,name=name"`
}

// CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum - The response_view specifies which subset of the Task will be returned. By default response_view is BASIC; not all information is retrieved by default because some data, such as payloads, might be desirable to return only when needed because of its large size or because of the sensitivity of data that it contains. Authorization for FULL requires `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/) permission on the Task resource.
type CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum string

const (
	CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnumViewUnspecified CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum = "VIEW_UNSPECIFIED"
	CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnumBasic           CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum = "BASIC"
	CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnumFull            CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum = "FULL"
)

func (e *CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VIEW_UNSPECIFIED":
		fallthrough
	case "BASIC":
		fallthrough
	case "FULL":
		*e = CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum: %s", s)
	}
}

type CloudtasksProjectsLocationsQueuesTasksGetQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The response_view specifies which subset of the Task will be returned. By default response_view is BASIC; not all information is retrieved by default because some data, such as payloads, might be desirable to return only when needed because of its large size or because of the sensitivity of data that it contains. Authorization for FULL requires `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/) permission on the Task resource.
	ResponseView *CloudtasksProjectsLocationsQueuesTasksGetResponseViewEnum `queryParam:"style=form,explode=true,name=responseView"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type CloudtasksProjectsLocationsQueuesTasksGetRequest struct {
	PathParams  CloudtasksProjectsLocationsQueuesTasksGetPathParams
	QueryParams CloudtasksProjectsLocationsQueuesTasksGetQueryParams
	Security    CloudtasksProjectsLocationsQueuesTasksGetSecurity
}

type CloudtasksProjectsLocationsQueuesTasksGetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	Task *shared.Task
}
