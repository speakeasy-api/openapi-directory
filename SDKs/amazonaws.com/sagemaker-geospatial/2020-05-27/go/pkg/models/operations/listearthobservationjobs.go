// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListEarthObservationJobsRequestBodySortOrderEnum - An optional value that specifies whether you want the results sorted in <code>Ascending</code> or <code>Descending</code> order.
type ListEarthObservationJobsRequestBodySortOrderEnum string

const (
	ListEarthObservationJobsRequestBodySortOrderEnumAscending  ListEarthObservationJobsRequestBodySortOrderEnum = "ASCENDING"
	ListEarthObservationJobsRequestBodySortOrderEnumDescending ListEarthObservationJobsRequestBodySortOrderEnum = "DESCENDING"
)

func (e ListEarthObservationJobsRequestBodySortOrderEnum) ToPointer() *ListEarthObservationJobsRequestBodySortOrderEnum {
	return &e
}

func (e *ListEarthObservationJobsRequestBodySortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = ListEarthObservationJobsRequestBodySortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEarthObservationJobsRequestBodySortOrderEnum: %v", v)
	}
}

// ListEarthObservationJobsRequestBodyStatusEqualsEnum - A filter that retrieves only jobs with a specific status.
type ListEarthObservationJobsRequestBodyStatusEqualsEnum string

const (
	ListEarthObservationJobsRequestBodyStatusEqualsEnumInitializing ListEarthObservationJobsRequestBodyStatusEqualsEnum = "INITIALIZING"
	ListEarthObservationJobsRequestBodyStatusEqualsEnumInProgress   ListEarthObservationJobsRequestBodyStatusEqualsEnum = "IN_PROGRESS"
	ListEarthObservationJobsRequestBodyStatusEqualsEnumStopping     ListEarthObservationJobsRequestBodyStatusEqualsEnum = "STOPPING"
	ListEarthObservationJobsRequestBodyStatusEqualsEnumCompleted    ListEarthObservationJobsRequestBodyStatusEqualsEnum = "COMPLETED"
	ListEarthObservationJobsRequestBodyStatusEqualsEnumStopped      ListEarthObservationJobsRequestBodyStatusEqualsEnum = "STOPPED"
	ListEarthObservationJobsRequestBodyStatusEqualsEnumFailed       ListEarthObservationJobsRequestBodyStatusEqualsEnum = "FAILED"
	ListEarthObservationJobsRequestBodyStatusEqualsEnumDeleting     ListEarthObservationJobsRequestBodyStatusEqualsEnum = "DELETING"
	ListEarthObservationJobsRequestBodyStatusEqualsEnumDeleted      ListEarthObservationJobsRequestBodyStatusEqualsEnum = "DELETED"
)

func (e ListEarthObservationJobsRequestBodyStatusEqualsEnum) ToPointer() *ListEarthObservationJobsRequestBodyStatusEqualsEnum {
	return &e
}

func (e *ListEarthObservationJobsRequestBodyStatusEqualsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INITIALIZING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "STOPPING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "STOPPED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = ListEarthObservationJobsRequestBodyStatusEqualsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEarthObservationJobsRequestBodyStatusEqualsEnum: %v", v)
	}
}

type ListEarthObservationJobsRequestBody struct {
	// The total number of items to return.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// If the previous response was truncated, you receive this token. Use it in your next request to receive the next set of results.
	NextToken *string `json:"NextToken,omitempty"`
	// The parameter by which to sort the results.
	SortBy *string `json:"SortBy,omitempty"`
	// An optional value that specifies whether you want the results sorted in <code>Ascending</code> or <code>Descending</code> order.
	SortOrder *ListEarthObservationJobsRequestBodySortOrderEnum `json:"SortOrder,omitempty"`
	// A filter that retrieves only jobs with a specific status.
	StatusEquals *ListEarthObservationJobsRequestBodyStatusEqualsEnum `json:"StatusEquals,omitempty"`
}

type ListEarthObservationJobsRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                             `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       ListEarthObservationJobsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListEarthObservationJobsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListEarthObservationJobOutput *shared.ListEarthObservationJobOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
