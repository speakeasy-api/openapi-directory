// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type NifComprehensiveSecurity struct {
	UserKey shared.SchemeUserKey `security:"scheme,type=apiKey,subtype=header"`
}

type NifComprehensivePathParams struct {
	// ISO_3166-1_alpha-2 representation of a country name - 2 chars
	Country string `pathParam:"style=simple,explode=false,name=country"`
}

// NifComprehensiveRequestBody - Company details
type NifComprehensiveRequestBody struct {
	// company address lines
	CompanyAddress *string `form:"name=companyAddress"`
	// Company name
	CompanyName *string `form:"name=companyName"`
	// NIF number to validate
	NifNumber string `form:"name=nifNumber"`
}

type NifComprehensiveRequest struct {
	PathParams NifComprehensivePathParams
	// Company details
	Request  NifComprehensiveRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
	Security NifComprehensiveSecurity
}

// NifComprehensiveDefaultApplicationJSON - Detailed information about the error
type NifComprehensiveDefaultApplicationJSON struct {
	Code    int     `json:"code"`
	Fault   *string `json:"fault,omitempty"`
	Message string  `json:"message"`
	Tag     string  `json:"tag"`
}

// NifComprehensive200ApplicationJSON - Result of a comprehensive NIF verification
type NifComprehensive200ApplicationJSON struct {
	Activity         map[string]interface{} `json:"activity,omitempty"`
	Address          *string                `json:"address,omitempty"`
	Capital          *float64               `json:"capital,omitempty"`
	CompanyName      *string                `json:"companyName,omitempty"`
	ConfidenceScore  float64                `json:"confidenceScore"`
	Currency         *string                `json:"currency,omitempty"`
	Email            *string                `json:"email,omitempty"`
	Fax              *string                `json:"fax,omitempty"`
	Geo              *string                `json:"geo,omitempty"`
	LegalType        *string                `json:"legalType,omitempty"`
	NifNumber        float64                `json:"nifNumber"`
	Phone            *string                `json:"phone,omitempty"`
	Status           map[string]interface{} `json:"status,omitempty"`
	ValidationStatus bool                   `json:"validationStatus"`
	Website          *string                `json:"website,omitempty"`
}

type NifComprehensiveResponse struct {
	ContentType string
	// Result of a comprehensive NIF verification
	NifComprehensive200ApplicationJSONObject *NifComprehensive200ApplicationJSON
	// Detailed information about the error
	NifComprehensiveDefaultApplicationJSONObject *NifComprehensiveDefaultApplicationJSON
	StatusCode                                   int
	RawResponse                                  *http.Response
}
