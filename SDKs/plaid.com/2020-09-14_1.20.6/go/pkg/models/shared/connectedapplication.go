// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectedApplicationProductDataTypesEnum string

const (
	ConnectedApplicationProductDataTypesEnumAccountBalance      ConnectedApplicationProductDataTypesEnum = "ACCOUNT_BALANCE"
	ConnectedApplicationProductDataTypesEnumAccountUserInfo     ConnectedApplicationProductDataTypesEnum = "ACCOUNT_USER_INFO"
	ConnectedApplicationProductDataTypesEnumAccountTransactions ConnectedApplicationProductDataTypesEnum = "ACCOUNT_TRANSACTIONS"
)

func (e *ConnectedApplicationProductDataTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCOUNT_BALANCE":
		fallthrough
	case "ACCOUNT_USER_INFO":
		fallthrough
	case "ACCOUNT_TRANSACTIONS":
		*e = ConnectedApplicationProductDataTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectedApplicationProductDataTypesEnum: %s", s)
	}
}

// ConnectedApplication - Describes the connected application for a particular end user.
type ConnectedApplication struct {
	// This field will map to the application ID that is returned from /item/applications/list, or provided to the institution in an oauth redirect.
	ApplicationID string `json:"application_id"`
	// The URL for the application's website
	ApplicationURL string `json:"application_url"`
	// The date this application was linked in ISO8601 (YYYY-MM-DD) format in UTC.
	CreatedAt string `json:"created_at"`
	// A URL that links to the application logo image (will be deprecated in the future, please use logo_url).
	Logo string `json:"logo"`
	// A URL that links to the application logo image.
	LogoURL string `json:"logo_url"`
	// The name of the application
	Name string `json:"name"`
	// (Deprecated) A list of enums representing the data collected and products enabled for this connected application.
	ProductDataTypes []ConnectedApplicationProductDataTypesEnum `json:"product_data_types"`
	// A string provided by the connected app stating why they use their respective enabled products.
	ReasonForAccess string `json:"reason_for_access"`
	// Scope of required and optional account features or content from a ConnectedApplication.
	RequestedScopes *RequestedScopes       `json:"requested_scopes,omitempty"`
	Scopes          map[string]interface{} `json:"scopes,omitempty"`
}
