// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReadSetStatusEnum string

const (
	ReadSetStatusEnumArchived   ReadSetStatusEnum = "ARCHIVED"
	ReadSetStatusEnumActivating ReadSetStatusEnum = "ACTIVATING"
	ReadSetStatusEnumActive     ReadSetStatusEnum = "ACTIVE"
	ReadSetStatusEnumDeleting   ReadSetStatusEnum = "DELETING"
	ReadSetStatusEnumDeleted    ReadSetStatusEnum = "DELETED"
)

func (e ReadSetStatusEnum) ToPointer() *ReadSetStatusEnum {
	return &e
}

func (e *ReadSetStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARCHIVED":
		fallthrough
	case "ACTIVATING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = ReadSetStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReadSetStatusEnum: %v", v)
	}
}
