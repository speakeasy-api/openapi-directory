"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import anywhereconfiguration as shared_anywhereconfiguration
from ..shared import protectionpolicy_enum as shared_protectionpolicy_enum
from ..shared import resourcecreationlimitpolicy as shared_resourcecreationlimitpolicy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateFleetAttributesInput:
    
    fleet_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FleetId') }})  
    anywhere_configuration: Optional[shared_anywhereconfiguration.AnywhereConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AnywhereConfiguration'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    metric_groups: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetricGroups'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    new_game_session_protection_policy: Optional[shared_protectionpolicy_enum.ProtectionPolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NewGameSessionProtectionPolicy'), 'exclude': lambda f: f is None }})  
    resource_creation_limit_policy: Optional[shared_resourcecreationlimitpolicy.ResourceCreationLimitPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceCreationLimitPolicy'), 'exclude': lambda f: f is None }})  
    