/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnvironmentFile } from "./environmentfile";
import { KeyValuePair } from "./keyvaluepair";
import { ResourceRequirement } from "./resourcerequirement";
import { Expose, Type } from "class-transformer";

/**
 * The overrides that are sent to a container. An empty container override can be passed in. An example of an empty container override is <code>{"containerOverrides": [ ] }</code>. If a non-empty container override is specified, the <code>name</code> parameter must be included.
 */
export class ContainerOverride extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "command" })
  command?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "cpu" })
  cpu?: number;

  @SpeakeasyMetadata({ elemType: KeyValuePair })
  @Expose({ name: "environment" })
  @Type(() => KeyValuePair)
  environment?: KeyValuePair[];

  @SpeakeasyMetadata({ elemType: EnvironmentFile })
  @Expose({ name: "environmentFiles" })
  @Type(() => EnvironmentFile)
  environmentFiles?: EnvironmentFile[];

  @SpeakeasyMetadata()
  @Expose({ name: "memory" })
  memory?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "memoryReservation" })
  memoryReservation?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: ResourceRequirement })
  @Expose({ name: "resourceRequirements" })
  @Type(() => ResourceRequirement)
  resourceRequirements?: ResourceRequirement[];
}
