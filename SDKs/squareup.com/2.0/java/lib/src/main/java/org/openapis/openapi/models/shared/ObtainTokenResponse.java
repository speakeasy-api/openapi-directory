/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ObtainTokenResponse - Success
 */
public class ObtainTokenResponse {
    /**
     * A valid OAuth access token. OAuth access tokens are 64 bytes long.
     * Provide the access token in a header with every request to Connect API
     * endpoints. See [OAuth API: Walkthrough](https://developer.squareup.com/docs/oauth-api/walkthrough)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access_token")
    public String accessToken;
    public ObtainTokenResponse withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * The date when access_token expires, in [ISO 8601](http://www.iso.org/iso/home/standards/iso8601.htm) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expires_at")
    public String expiresAt;
    public ObtainTokenResponse withExpiresAt(String expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }
    
    /**
     * Then OpenID token belonging to this this person. Only present if the
     * OPENID scope is included in the authorize request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_token")
    public String idToken;
    public ObtainTokenResponse withIdToken(String idToken) {
        this.idToken = idToken;
        return this;
    }
    
    /**
     * The ID of the authorizing merchant's business.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchant_id")
    public String merchantId;
    public ObtainTokenResponse withMerchantId(String merchantId) {
        this.merchantId = merchantId;
        return this;
    }
    
    /**
     * __LEGACY FIELD__. The ID of the subscription plan the merchant signed
     * up for. Only present if the merchant signed up for a subscription during
     * authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_id")
    public String planId;
    public ObtainTokenResponse withPlanId(String planId) {
        this.planId = planId;
        return this;
    }
    
    /**
     * A refresh token. OAuth refresh tokens are 64 bytes long.
     * For more information, see [OAuth access token management](https://developer.squareup.com/docs/oauth-api/how-it-works#oauth-access-token-management).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refresh_token")
    public String refreshToken;
    public ObtainTokenResponse withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
    /**
     * A boolean indicating the access token is a short-lived access token.
     * The short-lived access token returned in the response will expire in 24 hours.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("short_lived")
    public Boolean shortLived;
    public ObtainTokenResponse withShortLived(Boolean shortLived) {
        this.shortLived = shortLived;
        return this;
    }
    
    /**
     * __LEGACY FIELD__. The ID of a subscription plan the merchant signed up
     * for. Only present if the merchant signed up for a subscription during authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription_id")
    public String subscriptionId;
    public ObtainTokenResponse withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * This value is always _bearer_.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token_type")
    public String tokenType;
    public ObtainTokenResponse withTokenType(String tokenType) {
        this.tokenType = tokenType;
        return this;
    }
    
}
