<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EmailValidateResponse
{
    /**
     * The email domain
     * 
     * @var string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $domain;
    
    /**
     * True if this address has a domain error (e.g. no valid mail server records)
     * 
     * @var bool $domainError
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain-error')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $domainError;
    
    /**
     * The email address. If you have used the fix-typos option then this will be the fixed address
     * 
     * @var string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $email;
    
    /**
     * True if this address is a disposable, temporary or darknet related email address
     * 
     * @var bool $isDisposable
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-disposable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isDisposable;
    
    /**
     * True if this address is a free-mail address
     * 
     * @var bool $isFreemail
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-freemail')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isFreemail;
    
    /**
     * True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.
     * 
     * @var bool $isPersonal
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-personal')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isPersonal;
    
    /**
     * The email service provider domain
     * 
     * @var string $provider
     */
	#[\JMS\Serializer\Annotation\SerializedName('provider')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $provider;
    
    /**
     * True if this address has a syntax error
     * 
     * @var bool $syntaxError
     */
	#[\JMS\Serializer\Annotation\SerializedName('syntax-error')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $syntaxError;
    
    /**
     * True if typos have been fixed
     * 
     * @var bool $typosFixed
     */
	#[\JMS\Serializer\Annotation\SerializedName('typos-fixed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $typosFixed;
    
    /**
     * Is this a valid email
     * 
     * @var bool $valid
     */
	#[\JMS\Serializer\Annotation\SerializedName('valid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $valid;
    
	public function __construct()
	{
		$this->domain = "";
		$this->domainError = false;
		$this->email = "";
		$this->isDisposable = false;
		$this->isFreemail = false;
		$this->isPersonal = false;
		$this->provider = "";
		$this->syntaxError = false;
		$this->typosFixed = false;
		$this->valid = false;
	}
}
