"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsec2launchtemplatedatainstancerequirementsacceleratorcountdetails as shared_awsec2launchtemplatedatainstancerequirementsacceleratorcountdetails
from ..shared import awsec2launchtemplatedatainstancerequirementsacceleratortotalmemorymibdetails as shared_awsec2launchtemplatedatainstancerequirementsacceleratortotalmemorymibdetails
from ..shared import awsec2launchtemplatedatainstancerequirementsbaselineebsbandwidthmbpsdetails as shared_awsec2launchtemplatedatainstancerequirementsbaselineebsbandwidthmbpsdetails
from ..shared import awsec2launchtemplatedatainstancerequirementsmemorygibpervcpudetails as shared_awsec2launchtemplatedatainstancerequirementsmemorygibpervcpudetails
from ..shared import awsec2launchtemplatedatainstancerequirementsmemorymibdetails as shared_awsec2launchtemplatedatainstancerequirementsmemorymibdetails
from ..shared import awsec2launchtemplatedatainstancerequirementsnetworkinterfacecountdetails as shared_awsec2launchtemplatedatainstancerequirementsnetworkinterfacecountdetails
from ..shared import awsec2launchtemplatedatainstancerequirementstotallocalstoragegbdetails as shared_awsec2launchtemplatedatainstancerequirementstotallocalstoragegbdetails
from ..shared import awsec2launchtemplatedatainstancerequirementsvcpucountdetails as shared_awsec2launchtemplatedatainstancerequirementsvcpucountdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsEc2LaunchTemplateDataInstanceRequirementsDetails:
    r"""The attributes for the Amazon EC2 instance types."""
    
    accelerator_count: Optional[shared_awsec2launchtemplatedatainstancerequirementsacceleratorcountdetails.AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceleratorCount'), 'exclude': lambda f: f is None }})  
    accelerator_manufacturers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceleratorManufacturers'), 'exclude': lambda f: f is None }})  
    accelerator_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceleratorNames'), 'exclude': lambda f: f is None }})  
    accelerator_total_memory_mi_b: Optional[shared_awsec2launchtemplatedatainstancerequirementsacceleratortotalmemorymibdetails.AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceleratorTotalMemoryMiB'), 'exclude': lambda f: f is None }})  
    accelerator_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceleratorTypes'), 'exclude': lambda f: f is None }})  
    bare_metal: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BareMetal'), 'exclude': lambda f: f is None }})  
    baseline_ebs_bandwidth_mbps: Optional[shared_awsec2launchtemplatedatainstancerequirementsbaselineebsbandwidthmbpsdetails.AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BaselineEbsBandwidthMbps'), 'exclude': lambda f: f is None }})  
    burstable_performance: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BurstablePerformance'), 'exclude': lambda f: f is None }})  
    cpu_manufacturers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CpuManufacturers'), 'exclude': lambda f: f is None }})  
    excluded_instance_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExcludedInstanceTypes'), 'exclude': lambda f: f is None }})  
    instance_generations: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceGenerations'), 'exclude': lambda f: f is None }})  
    local_storage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalStorage'), 'exclude': lambda f: f is None }})  
    local_storage_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalStorageTypes'), 'exclude': lambda f: f is None }})  
    memory_gi_b_per_v_cpu: Optional[shared_awsec2launchtemplatedatainstancerequirementsmemorygibpervcpudetails.AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCPUDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MemoryGiBPerVCpu'), 'exclude': lambda f: f is None }})  
    memory_mi_b: Optional[shared_awsec2launchtemplatedatainstancerequirementsmemorymibdetails.AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MemoryMiB'), 'exclude': lambda f: f is None }})  
    network_interface_count: Optional[shared_awsec2launchtemplatedatainstancerequirementsnetworkinterfacecountdetails.AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetworkInterfaceCount'), 'exclude': lambda f: f is None }})  
    on_demand_max_price_percentage_over_lowest_price: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OnDemandMaxPricePercentageOverLowestPrice'), 'exclude': lambda f: f is None }})  
    require_hibernate_support: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequireHibernateSupport'), 'exclude': lambda f: f is None }})  
    spot_max_price_percentage_over_lowest_price: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpotMaxPricePercentageOverLowestPrice'), 'exclude': lambda f: f is None }})  
    total_local_storage_gb: Optional[shared_awsec2launchtemplatedatainstancerequirementstotallocalstoragegbdetails.AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalLocalStorageGB'), 'exclude': lambda f: f is None }})  
    v_cpu_count: Optional[shared_awsec2launchtemplatedatainstancerequirementsvcpucountdetails.AwsEc2LaunchTemplateDataInstanceRequirementsVCPUCountDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VCpuCount'), 'exclude': lambda f: f is None }})  
    