/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PutInvoiceResponseType - Container for custom fields of an Invoice object.
 * 
 */
public class PutInvoiceResponseType {
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public PutInvoiceResponseType withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public PutInvoiceResponseType withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public PutInvoiceResponseType withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * The ID of the customer account associated with the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public PutInvoiceResponseType withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The total amount of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public PutInvoiceResponseType withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Whether invoices are automatically picked up for processing in the corresponding payment run. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPay")
    public Boolean autoPay;
    public PutInvoiceResponseType withAutoPay(Boolean autoPay) {
        this.autoPay = autoPay;
        return this;
    }
    
    /**
     * The balance of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balance")
    public Double balance;
    public PutInvoiceResponseType withBalance(Double balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * The ID of the Zuora user who cancelled the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancelledById")
    public String cancelledById;
    public PutInvoiceResponseType withCancelledById(String cancelledById) {
        this.cancelledById = cancelledById;
        return this;
    }
    
    /**
     * The date and time when the invoice was cancelled, in `yyyy-mm-dd hh:mm:ss` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("cancelledOn")
    public OffsetDateTime cancelledOn;
    public PutInvoiceResponseType withCancelledOn(OffsetDateTime cancelledOn) {
        this.cancelledOn = cancelledOn;
        return this;
    }
    
    /**
     * Comments about the invoice. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public PutInvoiceResponseType withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The ID of the Zuora user who created the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdById")
    public String createdById;
    public PutInvoiceResponseType withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * The date and time when the invoice was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;
    public PutInvoiceResponseType withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * **Note:** This filed is only available if you have the Credit Balance feature enabled and the Invoice Settlement feature disabled.
     * 
     * The currency amount of the adjustment applied to the customer's credit balance.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditBalanceAdjustmentAmount")
    public Double creditBalanceAdjustmentAmount;
    public PutInvoiceResponseType withCreditBalanceAdjustmentAmount(Double creditBalanceAdjustmentAmount) {
        this.creditBalanceAdjustmentAmount = creditBalanceAdjustmentAmount;
        return this;
    }
    
    /**
     * A currency defined in the web-based UI administrative settings.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public PutInvoiceResponseType withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The date by which the payment for this invoice is due. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("dueDate")
    public LocalDate dueDate;
    public PutInvoiceResponseType withDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * The unique ID of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public PutInvoiceResponseType withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The date on which to generate the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("invoiceDate")
    public LocalDate invoiceDate;
    public PutInvoiceResponseType withInvoiceDate(LocalDate invoiceDate) {
        this.invoiceDate = invoiceDate;
        return this;
    }
    
    /**
     * The unique identification number of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;
    public PutInvoiceResponseType withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * The ID of the Zuora user who posted the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postedById")
    public String postedById;
    public PutInvoiceResponseType withPostedById(String postedById) {
        this.postedById = postedById;
        return this;
    }
    
    /**
     * The date and time when the invoice was posted, in `yyyy-mm-dd hh:mm:ss` format. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("postedOn")
    public OffsetDateTime postedOn;
    public PutInvoiceResponseType withPostedOn(OffsetDateTime postedOn) {
        this.postedOn = postedOn;
        return this;
    }
    
    /**
     * The status of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PutInvoiceResponseTypeStatusEnum status;
    public PutInvoiceResponseType withStatus(PutInvoiceResponseTypeStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public PutInvoiceResponseType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * The target date for the invoice, in `yyyy-mm-dd` format. For example, 2017-07-20. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("targetDate")
    public LocalDate targetDate;
    public PutInvoiceResponseType withTargetDate(LocalDate targetDate) {
        this.targetDate = targetDate;
        return this;
    }
    
    /**
     * The amount of taxation.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxAmount")
    public Double taxAmount;
    public PutInvoiceResponseType withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * The total amount of taxes or VAT, for which the customer has an exemption.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalTaxExemptAmount")
    public Double totalTaxExemptAmount;
    public PutInvoiceResponseType withTotalTaxExemptAmount(Double totalTaxExemptAmount) {
        this.totalTaxExemptAmount = totalTaxExemptAmount;
        return this;
    }
    
    /**
     * Whether the invoice was transferred to an external accounting system.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferredToAccounting")
    public PutInvoiceResponseTypeTransferredToAccountingEnum transferredToAccounting;
    public PutInvoiceResponseType withTransferredToAccounting(PutInvoiceResponseTypeTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
    /**
     * The ID of the Zuora user who last updated the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedById")
    public String updatedById;
    public PutInvoiceResponseType withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * The date and time when the invoice was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedDate")
    public OffsetDateTime updatedDate;
    public PutInvoiceResponseType withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
