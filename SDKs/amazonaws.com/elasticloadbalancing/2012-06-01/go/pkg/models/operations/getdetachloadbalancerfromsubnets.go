// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDetachLoadBalancerFromSubnetsActionEnum
type GETDetachLoadBalancerFromSubnetsActionEnum string

const (
	GETDetachLoadBalancerFromSubnetsActionEnumDetachLoadBalancerFromSubnets GETDetachLoadBalancerFromSubnetsActionEnum = "DetachLoadBalancerFromSubnets"
)

func (e *GETDetachLoadBalancerFromSubnetsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DetachLoadBalancerFromSubnets":
		*e = GETDetachLoadBalancerFromSubnetsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDetachLoadBalancerFromSubnetsActionEnum: %s", s)
	}
}

// GETDetachLoadBalancerFromSubnetsVersionEnum
type GETDetachLoadBalancerFromSubnetsVersionEnum string

const (
	GETDetachLoadBalancerFromSubnetsVersionEnumTwoThousandAndTwelve0601 GETDetachLoadBalancerFromSubnetsVersionEnum = "2012-06-01"
)

func (e *GETDetachLoadBalancerFromSubnetsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-06-01":
		*e = GETDetachLoadBalancerFromSubnetsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDetachLoadBalancerFromSubnetsVersionEnum: %s", s)
	}
}

type GETDetachLoadBalancerFromSubnetsRequest struct {
	Action GETDetachLoadBalancerFromSubnetsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the load balancer.
	LoadBalancerName string `queryParam:"style=form,explode=true,name=LoadBalancerName"`
	// The IDs of the subnets.
	Subnets           []string                                    `queryParam:"style=form,explode=true,name=Subnets"`
	Version           GETDetachLoadBalancerFromSubnetsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDetachLoadBalancerFromSubnetsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
