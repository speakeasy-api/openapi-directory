"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import currentcontractinfolinks as shared_currentcontractinfolinks
from ..shared import fixedandvariableclickmodelinfo as shared_fixedandvariableclickmodelinfo
from ..shared import variablemodelinfo as shared_variablemodelinfo
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CurrentContractInfo:
    r"""Get the conditions of your current contract"""
    
    links: shared_currentcontractinfolinks.CurrentContractInfoLinks = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links') }})  
    additional_click_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalClickPrice'), 'exclude': lambda f: f is None }})
    r"""Additional click price"""  
    billing_period_in_month: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingPeriodInMonth'), 'exclude': lambda f: f is None }})
    r"""The billing period in month"""  
    billing_period_percent_discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingPeriodPercentDiscount'), 'exclude': lambda f: f is None }})
    r"""The percent discount related to the billing period"""  
    click_included: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clickIncluded'), 'exclude': lambda f: f is None }})
    r"""The click included"""  
    commitment_calculated_finish_utc_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitmentCalculatedFinishUtcDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The calculated end date of commitment"""  
    commitment_period_in_month: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitmentPeriodInMonth'), 'exclude': lambda f: f is None }})
    r"""The commitment period in month"""  
    contract_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contractId'), 'exclude': lambda f: f is None }})
    r"""Your contract identifier"""  
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode'), 'exclude': lambda f: f is None }})
    r"""The currency code <a href=\\"https://en.wikipedia.org/wiki/ISO_4217\\">(ISO 4217)</a>"""  
    discount_duration_in_month: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discountDurationInMonth'), 'exclude': lambda f: f is None }})
    r"""The discount duration in month"""  
    discount_end_utc_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discountEndUtcDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The end of your discount"""  
    fixed_and_variable_click_info: Optional[shared_fixedandvariableclickmodelinfo.FixedAndVariableClickModelInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedAndVariableClickInfo'), 'exclude': lambda f: f is None }})
    r"""Internal usage: Old offer type. Describe the fix and variable model information"""  
    fixed_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedPrice'), 'exclude': lambda f: f is None }})
    r"""The fixed price of your contract"""  
    ip_user_creation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipUserCreation'), 'exclude': lambda f: f is None }})
    r"""The IP of the user who creates the contract"""  
    ip_user_modification: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipUserModification'), 'exclude': lambda f: f is None }})
    r"""The IP of the user who modified the contract"""  
    is_commitment_renewal_automatically: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCommitmentRenewalAutomatically'), 'exclude': lambda f: f is None }})
    r"""Is commitment is automatically renewed"""  
    is_modifiable_contract: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isModifiableContract'), 'exclude': lambda f: f is None }})
    r"""Is the contract is modifiable ?"""  
    offer_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerId'), 'exclude': lambda f: f is None }})
    r"""The offer id based on /offers. Not a free offer of course."""  
    offer_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerName'), 'exclude': lambda f: f is None }})
    r"""The offer name based on /offers"""  
    percent_discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentDiscount'), 'exclude': lambda f: f is None }})
    r"""The percent of the discount"""  
    start_utc_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startUtcDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The start date of your contract"""  
    store_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storeCount'), 'exclude': lambda f: f is None }})
    r"""The store count you want to have in your contract."""  
    trial_period_in_month: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trialPeriodInMonth'), 'exclude': lambda f: f is None }})
    r"""The trial period in month"""  
    variable_model_info: Optional[shared_variablemodelinfo.VariableModelInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variableModelInfo'), 'exclude': lambda f: f is None }})
    r"""Internal usage: Old offer type. Describe the fix and variable model information"""  
    