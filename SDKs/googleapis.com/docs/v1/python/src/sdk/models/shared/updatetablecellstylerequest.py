"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import location as shared_location
from ..shared import tablecellstyle as shared_tablecellstyle
from ..shared import tablerange as shared_tablerange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateTableCellStyleRequest:
    r"""Updates the style of a range of table cells."""
    
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields that should be updated. At least one field must be specified. The root `tableCellStyle` is implied and should not be specified. A single `\\"*\\"` can be used as short-hand for listing every field. For example to update the table cell background color, set `fields` to `\\"backgroundColor\\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset."""  
    table_cell_style: Optional[shared_tablecellstyle.TableCellStyle] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableCellStyle'), 'exclude': lambda f: f is None }})
    r"""The style of a TableCell. Inherited table cell styles are represented as unset fields in this message. A table cell style can inherit from the table's style."""  
    table_range: Optional[shared_tablerange.TableRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableRange'), 'exclude': lambda f: f is None }})
    r"""A table range represents a reference to a subset of a table. It's important to note that the cells specified by a table range do not necessarily form a rectangle. For example, let's say we have a 3 x 3 table where all the cells of the last row are merged together. The table looks like this: [ ] A table range with table cell location = (table_start_location, row = 0, column = 0), row span = 3 and column span = 2 specifies the following cells: x x [ x x x ]"""  
    table_start_location: Optional[shared_location.Location] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableStartLocation'), 'exclude': lambda f: f is None }})
    r"""A particular location in the document."""  
    