// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateResourceDataSyncXAmzTargetEnum
type CreateResourceDataSyncXAmzTargetEnum string

const (
	CreateResourceDataSyncXAmzTargetEnumAmazonSsmCreateResourceDataSync CreateResourceDataSyncXAmzTargetEnum = "AmazonSSM.CreateResourceDataSync"
)

func (e *CreateResourceDataSyncXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.CreateResourceDataSync":
		*e = CreateResourceDataSyncXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateResourceDataSyncXAmzTargetEnum: %s", s)
	}
}

type CreateResourceDataSyncHeaders struct {
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateResourceDataSyncXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateResourceDataSyncRequest struct {
	Headers CreateResourceDataSyncHeaders
	Request shared.CreateResourceDataSyncRequest `request:"mediaType=application/json"`
}

type CreateResourceDataSyncResponse struct {
	ContentType string
	// Success
	CreateResourceDataSyncResult map[string]interface{}
	// InternalServerError
	InternalServerError interface{}
	// ResourceDataSyncAlreadyExistsException
	ResourceDataSyncAlreadyExistsException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
	// ResourceDataSyncCountExceededException
	ResourceDataSyncCountExceededException interface{}
	// ResourceDataSyncInvalidConfigurationException
	ResourceDataSyncInvalidConfigurationException interface{}
}
