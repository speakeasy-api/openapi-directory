// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DfareportingFloodlightActivityGroupsListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DfareportingFloodlightActivityGroupsListPathParams struct {
	// User profile ID associated with this request.
	ProfileID string `pathParam:"style=simple,explode=false,name=profileId"`
}

// DfareportingFloodlightActivityGroupsListSortFieldEnum - Field by which to sort the list.
type DfareportingFloodlightActivityGroupsListSortFieldEnum string

const (
	DfareportingFloodlightActivityGroupsListSortFieldEnumID   DfareportingFloodlightActivityGroupsListSortFieldEnum = "ID"
	DfareportingFloodlightActivityGroupsListSortFieldEnumName DfareportingFloodlightActivityGroupsListSortFieldEnum = "NAME"
)

func (e *DfareportingFloodlightActivityGroupsListSortFieldEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ID":
		fallthrough
	case "NAME":
		*e = DfareportingFloodlightActivityGroupsListSortFieldEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingFloodlightActivityGroupsListSortFieldEnum: %s", s)
	}
}

// DfareportingFloodlightActivityGroupsListSortOrderEnum - Order of sorted results.
type DfareportingFloodlightActivityGroupsListSortOrderEnum string

const (
	DfareportingFloodlightActivityGroupsListSortOrderEnumAscending  DfareportingFloodlightActivityGroupsListSortOrderEnum = "ASCENDING"
	DfareportingFloodlightActivityGroupsListSortOrderEnumDescending DfareportingFloodlightActivityGroupsListSortOrderEnum = "DESCENDING"
)

func (e *DfareportingFloodlightActivityGroupsListSortOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = DfareportingFloodlightActivityGroupsListSortOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingFloodlightActivityGroupsListSortOrderEnum: %s", s)
	}
}

// DfareportingFloodlightActivityGroupsListTypeEnum - Select only floodlight activity groups with the specified floodlight activity group type.
type DfareportingFloodlightActivityGroupsListTypeEnum string

const (
	DfareportingFloodlightActivityGroupsListTypeEnumCounter DfareportingFloodlightActivityGroupsListTypeEnum = "COUNTER"
	DfareportingFloodlightActivityGroupsListTypeEnumSale    DfareportingFloodlightActivityGroupsListTypeEnum = "SALE"
)

func (e *DfareportingFloodlightActivityGroupsListTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COUNTER":
		fallthrough
	case "SALE":
		*e = DfareportingFloodlightActivityGroupsListTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingFloodlightActivityGroupsListTypeEnum: %s", s)
	}
}

type DfareportingFloodlightActivityGroupsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Select only floodlight activity groups with the specified advertiser ID. Must specify either advertiserId or floodlightConfigurationId for a non-empty result.
	AdvertiserID *string `queryParam:"style=form,explode=true,name=advertiserId"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Select only floodlight activity groups with the specified floodlight configuration ID. Must specify either advertiserId, or floodlightConfigurationId for a non-empty result.
	FloodlightConfigurationID *string `queryParam:"style=form,explode=true,name=floodlightConfigurationId"`
	// Select only floodlight activity groups with the specified IDs. Must specify either advertiserId or floodlightConfigurationId for a non-empty result.
	Ids []string `queryParam:"style=form,explode=true,name=ids"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Maximum number of results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Value of the nextPageToken from the previous result page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "floodlightactivitygroup*2015" will return objects with names like "floodlightactivitygroup June 2015", "floodlightactivitygroup April 2015", or simply "floodlightactivitygroup 2015". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of "floodlightactivitygroup" will match objects with name "my floodlightactivitygroup activity", "floodlightactivitygroup 2015", or simply "floodlightactivitygroup".
	SearchString *string `queryParam:"style=form,explode=true,name=searchString"`
	// Field by which to sort the list.
	SortField *DfareportingFloodlightActivityGroupsListSortFieldEnum `queryParam:"style=form,explode=true,name=sortField"`
	// Order of sorted results.
	SortOrder *DfareportingFloodlightActivityGroupsListSortOrderEnum `queryParam:"style=form,explode=true,name=sortOrder"`
	// Select only floodlight activity groups with the specified floodlight activity group type.
	Type *DfareportingFloodlightActivityGroupsListTypeEnum `queryParam:"style=form,explode=true,name=type"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DfareportingFloodlightActivityGroupsListRequest struct {
	PathParams  DfareportingFloodlightActivityGroupsListPathParams
	QueryParams DfareportingFloodlightActivityGroupsListQueryParams
	Security    DfareportingFloodlightActivityGroupsListSecurity
}

type DfareportingFloodlightActivityGroupsListResponse struct {
	ContentType string
	// Successful response
	FloodlightActivityGroupsListResponse *shared.FloodlightActivityGroupsListResponse
	StatusCode                           int
	RawResponse                          *http.Response
}
