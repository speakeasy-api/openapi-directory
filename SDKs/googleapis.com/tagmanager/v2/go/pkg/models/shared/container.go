// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContainerUsageContextEnum string

const (
	ContainerUsageContextEnumUsageContextUnspecified ContainerUsageContextEnum = "usageContextUnspecified"
	ContainerUsageContextEnumWeb                     ContainerUsageContextEnum = "web"
	ContainerUsageContextEnumAndroid                 ContainerUsageContextEnum = "android"
	ContainerUsageContextEnumIos                     ContainerUsageContextEnum = "ios"
	ContainerUsageContextEnumAndroidSdk5             ContainerUsageContextEnum = "androidSdk5"
	ContainerUsageContextEnumIosSdk5                 ContainerUsageContextEnum = "iosSdk5"
	ContainerUsageContextEnumAmp                     ContainerUsageContextEnum = "amp"
	ContainerUsageContextEnumServer                  ContainerUsageContextEnum = "server"
)

func (e ContainerUsageContextEnum) ToPointer() *ContainerUsageContextEnum {
	return &e
}

func (e *ContainerUsageContextEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "usageContextUnspecified":
		fallthrough
	case "web":
		fallthrough
	case "android":
		fallthrough
	case "ios":
		fallthrough
	case "androidSdk5":
		fallthrough
	case "iosSdk5":
		fallthrough
	case "amp":
		fallthrough
	case "server":
		*e = ContainerUsageContextEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContainerUsageContextEnum: %v", v)
	}
}

// Container - Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.
type Container struct {
	// GTM Account ID.
	AccountID *string `json:"accountId,omitempty"`
	// The Container ID uniquely identifies the GTM Container.
	ContainerID *string `json:"containerId,omitempty"`
	// List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
	DomainName []string           `json:"domainName,omitempty"`
	Features   *ContainerFeatures `json:"features,omitempty"`
	// The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.
	Fingerprint *string `json:"fingerprint,omitempty"`
	// Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
	Name *string `json:"name,omitempty"`
	// Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
	Notes *string `json:"notes,omitempty"`
	// GTM Container's API relative path.
	Path *string `json:"path,omitempty"`
	// Container Public ID.
	PublicID *string `json:"publicId,omitempty"`
	// All Tag IDs that refer to this Container.
	TagIds []string `json:"tagIds,omitempty"`
	// Auto generated link to the tag manager UI
	TagManagerURL *string `json:"tagManagerUrl,omitempty"`
	// List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
	TaggingServerUrls []string `json:"taggingServerUrls,omitempty"`
	// List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
	UsageContext []ContainerUsageContextEnum `json:"usageContext,omitempty"`
}
