// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TemplateContentsInterpreterEnum - Which interpreter (python or jinja) should be used during expansion.
type TemplateContentsInterpreterEnum string

const (
	TemplateContentsInterpreterEnumUnknownInterpreter TemplateContentsInterpreterEnum = "UNKNOWN_INTERPRETER"
	TemplateContentsInterpreterEnumPython             TemplateContentsInterpreterEnum = "PYTHON"
	TemplateContentsInterpreterEnumJinja              TemplateContentsInterpreterEnum = "JINJA"
)

func (e TemplateContentsInterpreterEnum) ToPointer() *TemplateContentsInterpreterEnum {
	return &e
}

func (e *TemplateContentsInterpreterEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN_INTERPRETER":
		fallthrough
	case "PYTHON":
		fallthrough
	case "JINJA":
		*e = TemplateContentsInterpreterEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TemplateContentsInterpreterEnum: %v", v)
	}
}

// TemplateContents - Files that make up the template contents of a template type.
type TemplateContents struct {
	// Import files referenced by the main template.
	Imports []ImportFile `json:"imports,omitempty"`
	// Which interpreter (python or jinja) should be used during expansion.
	Interpreter *TemplateContentsInterpreterEnum `json:"interpreter,omitempty"`
	// The filename of the mainTemplate
	MainTemplate *string `json:"mainTemplate,omitempty"`
	// The contents of the template schema.
	Schema *string `json:"schema,omitempty"`
	// The contents of the main template file.
	Template *string `json:"template,omitempty"`
}
