"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class POSTAccountingCodeTypeTypeEnum(str, Enum):
    r"""Accounting code type. You cannot create new accounting codes of type `AccountsReceivable`.
    
    Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature.
    """
    ACCOUNTS_RECEIVABLE = 'AccountsReceivable'
    ON_ACCOUNT_RECEIVABLE = 'On-Account Receivable'
    CASH = 'Cash'
    OTHER_ASSETS = 'OtherAssets'
    CUSTOMER_CASH_ON_ACCOUNT = 'CustomerCashOnAccount'
    DEFERRED_REVENUE = 'DeferredRevenue'
    SALES_TAX_PAYABLE = 'SalesTaxPayable'
    OTHER_LIABILITIES = 'OtherLiabilities'
    SALES_REVENUE = 'SalesRevenue'
    SALES_DISCOUNTS = 'SalesDiscounts'
    OTHER_REVENUE = 'OtherRevenue'
    OTHER_EQUITY = 'OtherEquity'
    BAD_DEBT = 'BadDebt'
    OTHER_EXPENSES = 'OtherExpenses'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class POSTAccountingCodeType:
    r"""Container for custom fields of an Accounting Code object."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the accounting code.
    
    Accounting code name must be unique. Maximum of 100 characters.
    """  
    type: POSTAccountingCodeTypeTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Accounting code type. You cannot create new accounting codes of type `AccountsReceivable`.
    
    Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature.
    """  
    gl_account_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('glAccountName'), 'exclude': lambda f: f is None }})
    r"""Name of the account in your general ledger.
    
    Field only available if you have Zuora Finance enabled. Maximum of 255 characters.
    """  
    gl_account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('glAccountNumber'), 'exclude': lambda f: f is None }})
    r"""Account number in your general ledger.
    
    Field only available if you have Zuora Finance enabled. Maximum of 255 characters.
    """  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Maximum of 2,000 characters."""  
    