// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// Segment - An audio segment in an episode.
type Segment struct {
	// The number of audio channels in the segment. Generated at creation.
	Channels *int `json:"channels,omitempty"`
	// The date the segment was created. Generated at creation.
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The ID of the episode that owns the segment.
	EpisodeID int64 `json:"episodeId"`
	// The name of the audio content file. Generated at creation.
	FileName *string `json:"fileName,omitempty"`
	// The size of the audio content file in bytes. Generated at creation.
	FileSize *int64 `json:"fileSize,omitempty"`
	// The unique ID of the segment. Generated at creation.
	ID *int64 `json:"id,omitempty"`
	// The in-cue copy that signals the start of the segment to a board operator.
	InCue *string `json:"inCue,omitempty"`
	// The date the segment was last modified/updated. Automatically updated on any write operation.
	LastModifiedDate *time.Time `json:"lastModifiedDate,omitempty"`
	// The length (duration) of the segment in seconds.
	Length *int `json:"length,omitempty"`
	// The original name of the audio content file.
	OriginalFileName *string `json:"originalFileName,omitempty"`
	// The out-cue copy that signals the end of the segment to a board operator.
	OutCue *string `json:"outCue,omitempty"`
	// The number of the segment in the episode, starting with 1.
	SegmentNumber int `json:"segmentNumber"`
}
