"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExclusionFilter:
    r"""The exclusion filter"""
    
    channel_column_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelColumnId') }})
    r"""The channel column identifier"""  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""indicates if the filter is currently enable."""  
    group_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupId') }})
    r"""Indicate the filter's group. All filters in the same group means an \\"AND\\" operation in the filter group"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The exclusion filter name"""  
    operator_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operatorName') }})
    r"""The exclusion filter operator name"""  
    position: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position') }})
    r"""The position of the exclusion filter"""  
    position_in_group: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('positionInGroup') }})
    r"""Indicate the filter group position. This information is used for the UI purpose and must be unique in the filter group."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value indicate by the user when the filter operation requires it."""  
    