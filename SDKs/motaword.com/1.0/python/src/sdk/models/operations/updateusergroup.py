"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import activewidget as shared_activewidget
from ..shared import error as shared_error
from ..shared import usergrouplist as shared_usergrouplist
from typing import Optional


@dataclasses.dataclass
class UpdateUserGroupSecurity:
    
    mwo_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class UpdateUserGroupRequest:
    
    user_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""User ID"""  
    active_widget: Optional[shared_activewidget.ActiveWidget] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateUserGroupResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""InvalidParameter"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    user_group_list: Optional[shared_usergrouplist.UserGroupList] = dataclasses.field(default=None)
    r"""List of user groups"""  
    