"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import teamgame as shared_teamgame
from enum import Enum
from typing import Optional

class TeamGameLogsBySeasonFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>xml</code> or <code>json</code>."""
    XML = 'XML'
    JSON = 'JSON'


@dataclasses.dataclass
class TeamGameLogsBySeasonRequest:
    
    format: TeamGameLogsBySeasonFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>xml</code> or <code>json</code>."""  
    numberofgames: str = dataclasses.field(metadata={'path_param': { 'field_name': 'numberofgames', 'style': 'simple', 'explode': False }})
    r"""How many games to return. Example <code>all</code>, <code>10</code>, <code>25</code>"""  
    season: str = dataclasses.field(metadata={'path_param': { 'field_name': 'season', 'style': 'simple', 'explode': False }})
    r"""Season to get games from. Example <code>2019POST</code>, <code>2020</code>"""  
    teamid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'teamid', 'style': 'simple', 'explode': False }})
    r"""Unique ID of team.  Example <code> 1 </code>"""  
    

@dataclasses.dataclass
class TeamGameLogsBySeasonResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    team_games: Optional[list[shared_teamgame.TeamGame]] = dataclasses.field(default=None)  
    