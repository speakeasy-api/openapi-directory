/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;

public class TokenPrices {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public TokenPrices(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Lists price and available volume for a certain token
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetTokenPriceResponse getTokenPrice(org.openapis.openapi.models.operations.GetTokenPriceRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetTokenPriceRequest.class, baseUrl, "/tokens/prices/{tokenId}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetTokenPriceResponse res = new org.openapis.openapi.models.operations.GetTokenPriceResponse(contentType, httpRes.statusCode()) {{
            body = null;
            getTokenPrice400WildcardString = null;
            getTokenPrice401WildcardString = null;
            getTokenPrice404WildcardString = null;
            getTokenPrice409WildcardString = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                byte[] out = httpRes.body();
                res.body = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getTokenPrice400WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getTokenPrice401WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getTokenPrice404WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 409) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getTokenPrice409WildcardString = out;
            }
        }

        return res;
    }

    /**
     * Lists all token prices and available volume
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetTokenPricesResponse getTokenPrices() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/tokens/prices/all");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetTokenPricesResponse res = new org.openapis.openapi.models.operations.GetTokenPricesResponse(contentType, httpRes.statusCode()) {{
            body = null;
            getTokenPrices400WildcardString = null;
            getTokenPrices401WildcardString = null;
            getTokenPrices404WildcardString = null;
            getTokenPrices409WildcardString = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                byte[] out = httpRes.body();
                res.body = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getTokenPrices400WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getTokenPrices401WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getTokenPrices404WildcardString = out;
            }
        }
        else if (httpRes.statusCode() == 409) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "*/*")) {
                String out = new String(httpRes.body(), StandardCharsets.UTF_8);
                res.getTokenPrices409WildcardString = out;
            }
        }

        return res;
    }
}