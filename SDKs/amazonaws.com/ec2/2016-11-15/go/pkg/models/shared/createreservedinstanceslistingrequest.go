// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateReservedInstancesListingRequestPriceSchedulesCurrencyCodeEnum - The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.
type CreateReservedInstancesListingRequestPriceSchedulesCurrencyCodeEnum string

const (
	CreateReservedInstancesListingRequestPriceSchedulesCurrencyCodeEnumUsd CreateReservedInstancesListingRequestPriceSchedulesCurrencyCodeEnum = "USD"
)

func (e *CreateReservedInstancesListingRequestPriceSchedulesCurrencyCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USD":
		*e = CreateReservedInstancesListingRequestPriceSchedulesCurrencyCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReservedInstancesListingRequestPriceSchedulesCurrencyCodeEnum: %s", s)
	}
}

// CreateReservedInstancesListingRequestPriceSchedules - Describes the price for a Reserved Instance.
type CreateReservedInstancesListingRequestPriceSchedules struct {
	CurrencyCode *CreateReservedInstancesListingRequestPriceSchedulesCurrencyCodeEnum
	Price        *float64
	Term         *int64
}

// CreateReservedInstancesListingRequest - Contains the parameters for CreateReservedInstancesListing.
type CreateReservedInstancesListingRequest struct {
	ClientToken         string
	InstanceCount       int64
	PriceSchedules      []CreateReservedInstancesListingRequestPriceSchedules
	ReservedInstancesID string
}
