"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareRequestBodyAllowedFiles:
    
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment') }})
    r"""Comment about the allowed entity"""  
    sha256: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sha256') }})
    r"""The file sha256 hash to allow"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareRequestBodyAllowedUrls:
    
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment') }})
    r"""Comment about the allowed entity"""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""The url to allow"""  
    
class UpdateNetworkApplianceSecurityMalwareRequestBodyModeEnum(str, Enum):
    r"""Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'"""
    DISABLED = 'disabled'
    ENABLED = 'enabled'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareRequestBody:
    
    mode: UpdateNetworkApplianceSecurityMalwareRequestBodyModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mode') }})
    r"""Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'"""  
    allowed_files: Optional[list[UpdateNetworkApplianceSecurityMalwareRequestBodyAllowedFiles]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowedFiles'), 'exclude': lambda f: f is None }})
    r"""The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP allow listing"""  
    allowed_urls: Optional[list[UpdateNetworkApplianceSecurityMalwareRequestBodyAllowedUrls]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowedUrls'), 'exclude': lambda f: f is None }})
    r"""The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP allow listing"""  
    

@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: UpdateNetworkApplianceSecurityMalwareRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_appliance_security_malware_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    