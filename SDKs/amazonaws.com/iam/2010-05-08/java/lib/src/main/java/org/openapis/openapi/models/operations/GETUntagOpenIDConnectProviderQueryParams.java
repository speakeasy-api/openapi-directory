/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETUntagOpenIDConnectProviderQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETUntagOpenIDConnectProviderActionEnum action;
    public GETUntagOpenIDConnectProviderQueryParams withAction(GETUntagOpenIDConnectProviderActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;The ARN of the OIDC provider in IAM from which you want to remove tags.&lt;/p&gt; &lt;p&gt;This parameter allows (through its &lt;a href="http://wikipedia.org/wiki/regex"&gt;regex pattern&lt;/a&gt;) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=OpenIDConnectProviderArn")
    public String openIDConnectProviderArn;
    public GETUntagOpenIDConnectProviderQueryParams withOpenIDConnectProviderArn(String openIDConnectProviderArn) {
        this.openIDConnectProviderArn = openIDConnectProviderArn;
        return this;
    }
    
    /**
     * A list of key names as a simple array of strings. The tags with matching keys are removed from the specified OIDC provider.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TagKeys")
    public String[] tagKeys;
    public GETUntagOpenIDConnectProviderQueryParams withTagKeys(String[] tagKeys) {
        this.tagKeys = tagKeys;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETUntagOpenIDConnectProviderVersionEnum version;
    public GETUntagOpenIDConnectProviderQueryParams withVersion(GETUntagOpenIDConnectProviderVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
