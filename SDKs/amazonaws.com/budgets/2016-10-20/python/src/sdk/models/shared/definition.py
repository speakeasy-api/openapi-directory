"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import iamactiondefinition as shared_iamactiondefinition
from ..shared import scpactiondefinition as shared_scpactiondefinition
from ..shared import ssmactiondefinition as shared_ssmactiondefinition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Definition:
    r"""Specifies all of the type-specific parameters."""
    
    iam_action_definition: Optional[shared_iamactiondefinition.IamActionDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IamActionDefinition'), 'exclude': lambda f: f is None }})  
    scp_action_definition: Optional[shared_scpactiondefinition.ScpActionDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ScpActionDefinition'), 'exclude': lambda f: f is None }})  
    ssm_action_definition: Optional[shared_ssmactiondefinition.SsmActionDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SsmActionDefinition'), 'exclude': lambda f: f is None }})  
    