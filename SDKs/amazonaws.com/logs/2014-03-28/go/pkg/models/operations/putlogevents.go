// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutLogEventsXAmzTargetEnum
type PutLogEventsXAmzTargetEnum string

const (
	PutLogEventsXAmzTargetEnumLogs20140328PutLogEvents PutLogEventsXAmzTargetEnum = "Logs_20140328.PutLogEvents"
)

func (e *PutLogEventsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Logs_20140328.PutLogEvents":
		*e = PutLogEventsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutLogEventsXAmzTargetEnum: %s", s)
	}
}

type PutLogEventsHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        PutLogEventsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutLogEventsRequest struct {
	Headers PutLogEventsHeaders
	Request shared.PutLogEventsRequest `request:"mediaType=application/json"`
}

type PutLogEventsResponse struct {
	ContentType string
	// DataAlreadyAcceptedException
	DataAlreadyAcceptedException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidSequenceTokenException
	InvalidSequenceTokenException interface{}
	// Success
	PutLogEventsResponse *shared.PutLogEventsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// UnrecognizedClientException
	UnrecognizedClientException interface{}
}
