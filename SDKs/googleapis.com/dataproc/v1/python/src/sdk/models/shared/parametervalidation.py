"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import regexvalidation as shared_regexvalidation
from ..shared import valuevalidation as shared_valuevalidation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ParameterValidation:
    r"""Configuration for parameter validation."""
    
    regex: Optional[shared_regexvalidation.RegexValidation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regex'), 'exclude': lambda f: f is None }})
    r"""Validation based on regular expressions."""  
    values: Optional[shared_valuevalidation.ValueValidation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values'), 'exclude': lambda f: f is None }})
    r"""Validation based on a list of allowed values."""  
    