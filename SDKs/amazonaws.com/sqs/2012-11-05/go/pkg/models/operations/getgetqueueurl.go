// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETQueueURLActionEnum
type GETGETQueueURLActionEnum string

const (
	GETGETQueueURLActionEnumGetQueueURL GETGETQueueURLActionEnum = "GetQueueUrl"
)

func (e GETGETQueueURLActionEnum) ToPointer() *GETGETQueueURLActionEnum {
	return &e
}

func (e *GETGETQueueURLActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetQueueUrl":
		*e = GETGETQueueURLActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETQueueURLActionEnum: %v", v)
	}
}

// GETGETQueueURLVersionEnum
type GETGETQueueURLVersionEnum string

const (
	GETGETQueueURLVersionEnumTwoThousandAndTwelve1105 GETGETQueueURLVersionEnum = "2012-11-05"
)

func (e GETGETQueueURLVersionEnum) ToPointer() *GETGETQueueURLVersionEnum {
	return &e
}

func (e *GETGETQueueURLVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-11-05":
		*e = GETGETQueueURLVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETQueueURLVersionEnum: %v", v)
	}
}

type GETGETQueueURLRequest struct {
	Action GETGETQueueURLActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the queue whose URL must be fetched. Maximum 80 characters. Valid values: alphanumeric characters, hyphens (<code>-</code>), and underscores (<code>_</code>).</p> <p>Queue URLs and names are case-sensitive.</p>
	QueueName string `queryParam:"style=form,explode=true,name=QueueName"`
	// The Amazon Web Services account ID of the account that created the queue.
	QueueOwnerAWSAccountID *string                   `queryParam:"style=form,explode=true,name=QueueOwnerAWSAccountId"`
	Version                GETGETQueueURLVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm          *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETQueueURLResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
