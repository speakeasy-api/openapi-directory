// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConferenceEnumConferenceEndReasonEnum string

const (
	ConferenceEnumConferenceEndReasonEnumLastParticipantLeft                      ConferenceEnumConferenceEndReasonEnum = "last_participant_left"
	ConferenceEnumConferenceEndReasonEnumConferenceEndedViaAPI                    ConferenceEnumConferenceEndReasonEnum = "conference_ended_via_api"
	ConferenceEnumConferenceEndReasonEnumParticipantWithEndConferenceOnExitLeft   ConferenceEnumConferenceEndReasonEnum = "participant_with_end_conference_on_exit_left"
	ConferenceEnumConferenceEndReasonEnumLastParticipantKicked                    ConferenceEnumConferenceEndReasonEnum = "last_participant_kicked"
	ConferenceEnumConferenceEndReasonEnumParticipantWithEndConferenceOnExitKicked ConferenceEnumConferenceEndReasonEnum = "participant_with_end_conference_on_exit_kicked"
)

func (e *ConferenceEnumConferenceEndReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "last_participant_left":
		fallthrough
	case "conference_ended_via_api":
		fallthrough
	case "participant_with_end_conference_on_exit_left":
		fallthrough
	case "last_participant_kicked":
		fallthrough
	case "participant_with_end_conference_on_exit_kicked":
		*e = ConferenceEnumConferenceEndReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConferenceEnumConferenceEndReasonEnum: %s", s)
	}
}
