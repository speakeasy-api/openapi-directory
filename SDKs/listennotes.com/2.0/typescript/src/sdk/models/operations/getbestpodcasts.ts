/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * How do you want to sort these podcasts?
 *
 * @remarks
 * If you'd like to sort by popularity, please use **listen_score**.
 *
 */
export enum GetBestPodcastsSortEnum {
  RecentAddedFirst = "recent_added_first",
  OldestAddedFirst = "oldest_added_first",
  RecentPublishedFirst = "recent_published_first",
  OldestPublishedFirst = "oldest_published_first",
  ListenScore = "listen_score",
}

export class GetBestPodcastsRequest extends SpeakeasyBase {
  /**
   * Get API Key on listennotes.com/api
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-ListenAPI-Key",
  })
  xListenAPIKey: string;

  /**
   * You can get the id from `GET /genres`. If not specified, it'll be the overall best podcasts, which can be considered as a special genre.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=genre_id",
  })
  genreId?: string;

  /**
   * Filter best podcasts by language.
   *
   * @remarks
   * You can get a list of supported languages (e.g., English, Chinese, Japanese...) from `GET /languages`.
   * If not specified, you'll get "best podcasts" in any language.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language",
  })
  language?: string;

  /**
   * Page number of those podcasts in this genre.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Filter best podcasts by the publisher's country/region.
   *
   * @remarks
   * This is to narrow down the results to include "best podcasts" produced in a specific country/region.
   * You can get the supported country codes (e.g., us, jp, gb...) from `GET /regions`.
   * If not specified, you'll get "best podcasts" produced in any country/region.
   * If you want to get a country/region's "best podcasts" that are also produced in that country/region,
   * then you need to specify both **region** and **publisher_region**,
   * e.g., `region=jp` and `publisher_region=jp`.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=publisher_region",
  })
  publisherRegion?: string;

  /**
   * Filter best podcasts by country/region.
   *
   * @remarks
   * Please note that podcasts that are "best" in a country/region may not be produced in that country/region.
   * For example, a podcast from the US may be very popular in Canada.
   * You can get the supported country codes (e.g., us, jp, gb...) from `GET /regions`.
   * If not specified, you'll get "best podcasts" in United States.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=region",
  })
  region?: string;

  /**
   * Whether or not to exclude podcasts with explicit language. 1 is yes, and 0 is no.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=safe_mode",
  })
  safeMode?: shared.SafeModeParamEnum;

  /**
   * How do you want to sort these podcasts?
   *
   * @remarks
   * If you'd like to sort by popularity, please use **listen_score**.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetBestPodcastsSortEnum;
}

export class GetBestPodcastsResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  bestPodcastsResponse?: shared.BestPodcastsResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
