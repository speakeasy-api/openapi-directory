/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateUpdateWarehouseCreateUpdateWarehouseRequestWarehouseDock extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  cost: string;

  @SpeakeasyMetadata()
  @Expose({ name: "costToDisplay" })
  costToDisplay: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time: string;

  @SpeakeasyMetadata()
  @Expose({ name: "translateDays" })
  translateDays: string;
}

export class CreateUpdateWarehouseCreateUpdateWarehouseRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({
    elemType: CreateUpdateWarehouseCreateUpdateWarehouseRequestWarehouseDock,
  })
  @Expose({ name: "warehouseDocks" })
  @Type(() => CreateUpdateWarehouseCreateUpdateWarehouseRequestWarehouseDock)
  warehouseDocks: CreateUpdateWarehouseCreateUpdateWarehouseRequestWarehouseDock[];
}

export class CreateUpdateWarehouseRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateUpdateWarehouseCreateUpdateWarehouseRequest;
}

export class CreateUpdateWarehouseResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
