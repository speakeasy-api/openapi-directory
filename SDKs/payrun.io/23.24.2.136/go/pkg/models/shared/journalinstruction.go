// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// JournalInstructionJournalInstructionAccountingTypeEnum - The journal instructions' accounting type
type JournalInstructionJournalInstructionAccountingTypeEnum string

const (
	JournalInstructionJournalInstructionAccountingTypeEnumCredit JournalInstructionJournalInstructionAccountingTypeEnum = "Credit"
	JournalInstructionJournalInstructionAccountingTypeEnumDebit  JournalInstructionJournalInstructionAccountingTypeEnum = "Debit"
)

func (e JournalInstructionJournalInstructionAccountingTypeEnum) ToPointer() *JournalInstructionJournalInstructionAccountingTypeEnum {
	return &e
}

func (e *JournalInstructionJournalInstructionAccountingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Credit":
		fallthrough
	case "Debit":
		*e = JournalInstructionJournalInstructionAccountingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JournalInstructionJournalInstructionAccountingTypeEnum: %v", v)
	}
}

type JournalInstructionJournalInstruction struct {
	// The journal instructions' accounting type
	AccountingType *JournalInstructionJournalInstructionAccountingTypeEnum `json:"AccountingType,omitempty"`
	// The journal instructions' description
	Description *string `json:"Description,omitempty"`
	// The journal instructions' end date
	EndDate *types.Date `json:"EndDate,omitempty"`
	// The journal instructions' expression
	Expression *string `json:"Expression,omitempty"`
	// The journal instructions' journal line tag
	JournalLineTag *string `json:"JournalLineTag,omitempty"`
	// The journal instructions' ledger target
	LedgerTarget *string `json:"LedgerTarget,omitempty"`
	// The journal instructions' nom code
	NomCode *string `json:"NomCode,omitempty"`
	// The journal instructions' start date
	StartDate *types.Date `json:"StartDate,omitempty"`
	// The journal instructions' sub nom code
	SubNomCode *string `json:"SubNomCode,omitempty"`
}

// JournalInstruction - The journal instruction object.
type JournalInstruction struct {
	JournalInstruction *JournalInstructionJournalInstruction `json:"JournalInstruction,omitempty"`
}
