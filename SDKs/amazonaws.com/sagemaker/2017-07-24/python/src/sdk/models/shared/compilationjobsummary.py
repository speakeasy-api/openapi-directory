"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import compilationjobstatus_enum as shared_compilationjobstatus_enum
from ..shared import targetdevice_enum as shared_targetdevice_enum
from ..shared import targetplatformaccelerator_enum as shared_targetplatformaccelerator_enum
from ..shared import targetplatformarch_enum as shared_targetplatformarch_enum
from ..shared import targetplatformos_enum as shared_targetplatformos_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompilationJobSummary:
    r"""A summary of a model compilation job."""
    
    compilation_job_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationJobArn') }})  
    compilation_job_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationJobName') }})  
    compilation_job_status: shared_compilationjobstatus_enum.CompilationJobStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationJobStatus') }})  
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    compilation_end_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationEndTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    compilation_start_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationStartTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    compilation_target_device: Optional[shared_targetdevice_enum.TargetDeviceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationTargetDevice'), 'exclude': lambda f: f is None }})  
    compilation_target_platform_accelerator: Optional[shared_targetplatformaccelerator_enum.TargetPlatformAcceleratorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationTargetPlatformAccelerator'), 'exclude': lambda f: f is None }})  
    compilation_target_platform_arch: Optional[shared_targetplatformarch_enum.TargetPlatformArchEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationTargetPlatformArch'), 'exclude': lambda f: f is None }})  
    compilation_target_platform_os: Optional[shared_targetplatformos_enum.TargetPlatformOsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationTargetPlatformOs'), 'exclude': lambda f: f is None }})  
    last_modified_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastModifiedTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    