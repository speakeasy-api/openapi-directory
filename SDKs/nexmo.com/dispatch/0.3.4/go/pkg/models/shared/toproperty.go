// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ToPropertyTypeEnum - The type of message that you want to send.
type ToPropertyTypeEnum string

const (
	ToPropertyTypeEnumSms             ToPropertyTypeEnum = "sms"
	ToPropertyTypeEnumViberServiceMsg ToPropertyTypeEnum = "viber_service_msg"
	ToPropertyTypeEnumMessenger       ToPropertyTypeEnum = "messenger"
	ToPropertyTypeEnumWhatsapp        ToPropertyTypeEnum = "whatsapp"
)

func (e ToPropertyTypeEnum) ToPointer() *ToPropertyTypeEnum {
	return &e
}

func (e *ToPropertyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sms":
		fallthrough
	case "viber_service_msg":
		fallthrough
	case "messenger":
		fallthrough
	case "whatsapp":
		*e = ToPropertyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ToPropertyTypeEnum: %v", v)
	}
}

type ToProperty struct {
	// The ID of the message recipient.
	//
	// **Messenger**: This value should be the `from.id` value you received in the inbound messenger event.
	//
	// **SMS**: or **Viber**: or **WhatsApp** This value is not required.
	//
	ID *string `json:"id,omitempty"`
	// **SMS**: or **MMS**: or **Viber**: or **WhatsApp** The phone number of the message recipient in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000.
	//
	// **Messenger**: This value is not required.
	//
	Number *string `json:"number,omitempty"`
	// The type of message that you want to send.
	Type ToPropertyTypeEnum `json:"type"`
}
