"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import domainispplacement as shared_domainispplacement
from ..shared import volumestatistics as shared_volumestatistics
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DailyVolume:
    r"""An object that contains information about the volume of email sent on each day of the analysis period."""
    
    domain_isp_placements: Optional[list[shared_domainispplacement.DomainIspPlacement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainIspPlacements'), 'exclude': lambda f: f is None }})  
    start_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    volume_statistics: Optional[shared_volumestatistics.VolumeStatistics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VolumeStatistics'), 'exclude': lambda f: f is None }})  
    