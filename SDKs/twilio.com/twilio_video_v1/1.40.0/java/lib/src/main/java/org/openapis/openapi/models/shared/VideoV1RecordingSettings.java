/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VideoV1RecordingSettings - OK
 */
public class VideoV1RecordingSettings {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the RecordingSettings resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public VideoV1RecordingSettings withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The SID of the stored Credential resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aws_credentials_sid")
    public String awsCredentialsSid;
    public VideoV1RecordingSettings withAwsCredentialsSid(String awsCredentialsSid) {
        this.awsCredentialsSid = awsCredentialsSid;
        return this;
    }
    
    /**
     * The URL of the AWS S3 bucket where the recordings are stored. We only support DNS-compliant URLs like `https://documentation-example-twilio-bucket/recordings`, where `recordings` is the path in which you want the recordings to be stored. This URL accepts only URI-valid characters, as described in the &lt;a href='https://tools.ietf.org/html/rfc3986#section-2'&gt;RFC 3986&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aws_s3_url")
    public String awsS3Url;
    public VideoV1RecordingSettings withAwsS3Url(String awsS3Url) {
        this.awsS3Url = awsS3Url;
        return this;
    }
    
    /**
     * Whether all recordings are written to the `aws_s3_url`. When `false`, all recordings are stored in our cloud.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aws_storage_enabled")
    public Boolean awsStorageEnabled;
    public VideoV1RecordingSettings withAwsStorageEnabled(Boolean awsStorageEnabled) {
        this.awsStorageEnabled = awsStorageEnabled;
        return this;
    }
    
    /**
     * Whether all recordings are stored in an encrypted form. The default is `false`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryption_enabled")
    public Boolean encryptionEnabled;
    public VideoV1RecordingSettings withEncryptionEnabled(Boolean encryptionEnabled) {
        this.encryptionEnabled = encryptionEnabled;
        return this;
    }
    
    /**
     * The SID of the Public Key resource used for encryption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryption_key_sid")
    public String encryptionKeySid;
    public VideoV1RecordingSettings withEncryptionKeySid(String encryptionKeySid) {
        this.encryptionKeySid = encryptionKeySid;
        return this;
    }
    
    /**
     * The string that you assigned to describe the resource and show the user in the console
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;
    public VideoV1RecordingSettings withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The absolute URL of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public VideoV1RecordingSettings withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
