/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetVaultItemsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  connectToken: string;
}

export class GetVaultItemsRequest extends SpeakeasyBase {
  /**
   * Filter the Item collection based on Item name using SCIM eq filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: string;

  /**
   * The UUID of the Vault to fetch Items from
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=vaultUuid",
  })
  vaultUuid: string;
}

export class GetVaultItemsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid or missing token
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.Item })
  items?: shared.Item[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
