// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SourceSourceTypeEnum - Type of the source.
type SourceSourceTypeEnum string

const (
	SourceSourceTypeEnumSourceTypeUnspecified SourceSourceTypeEnum = "SOURCE_TYPE_UNSPECIFIED"
	SourceSourceTypeEnumConfigVariable        SourceSourceTypeEnum = "CONFIG_VARIABLE"
)

func (e SourceSourceTypeEnum) ToPointer() *SourceSourceTypeEnum {
	return &e
}

func (e *SourceSourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SOURCE_TYPE_UNSPECIFIED":
		fallthrough
	case "CONFIG_VARIABLE":
		*e = SourceSourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSourceTypeEnum: %v", v)
	}
}

// Source - Source to extract the backend from.
type Source struct {
	// Field identifier. For example config vaiable name.
	FieldID *string `json:"fieldId,omitempty"`
	// Type of the source.
	SourceType *SourceSourceTypeEnum `json:"sourceType,omitempty"`
}
