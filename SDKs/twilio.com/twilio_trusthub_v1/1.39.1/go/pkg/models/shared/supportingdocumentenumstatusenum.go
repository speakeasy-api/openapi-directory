// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SupportingDocumentEnumStatusEnum string

const (
	SupportingDocumentEnumStatusEnumDraft                 SupportingDocumentEnumStatusEnum = "draft"
	SupportingDocumentEnumStatusEnumPendingReview         SupportingDocumentEnumStatusEnum = "pending-review"
	SupportingDocumentEnumStatusEnumRejected              SupportingDocumentEnumStatusEnum = "rejected"
	SupportingDocumentEnumStatusEnumApproved              SupportingDocumentEnumStatusEnum = "approved"
	SupportingDocumentEnumStatusEnumExpired               SupportingDocumentEnumStatusEnum = "expired"
	SupportingDocumentEnumStatusEnumProvisionallyApproved SupportingDocumentEnumStatusEnum = "provisionally-approved"
)

func (e *SupportingDocumentEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "draft":
		fallthrough
	case "pending-review":
		fallthrough
	case "rejected":
		fallthrough
	case "approved":
		fallthrough
	case "expired":
		fallthrough
	case "provisionally-approved":
		*e = SupportingDocumentEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SupportingDocumentEnumStatusEnum: %s", s)
	}
}
