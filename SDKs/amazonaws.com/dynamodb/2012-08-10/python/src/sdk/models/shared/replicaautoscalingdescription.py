"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autoscalingsettingsdescription as shared_autoscalingsettingsdescription
from ..shared import replicaglobalsecondaryindexautoscalingdescription as shared_replicaglobalsecondaryindexautoscalingdescription
from ..shared import replicastatus_enum as shared_replicastatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReplicaAutoScalingDescription:
    r"""Represents the auto scaling settings of the replica."""
    
    global_secondary_indexes: Optional[list[shared_replicaglobalsecondaryindexautoscalingdescription.ReplicaGlobalSecondaryIndexAutoScalingDescription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalSecondaryIndexes'), 'exclude': lambda f: f is None }})  
    region_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RegionName'), 'exclude': lambda f: f is None }})  
    replica_provisioned_read_capacity_auto_scaling_settings: Optional[shared_autoscalingsettingsdescription.AutoScalingSettingsDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaProvisionedReadCapacityAutoScalingSettings'), 'exclude': lambda f: f is None }})
    r"""Represents the auto scaling settings for a global table or global secondary index."""  
    replica_provisioned_write_capacity_auto_scaling_settings: Optional[shared_autoscalingsettingsdescription.AutoScalingSettingsDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaProvisionedWriteCapacityAutoScalingSettings'), 'exclude': lambda f: f is None }})
    r"""Represents the auto scaling settings for a global table or global secondary index."""  
    replica_status: Optional[shared_replicastatus_enum.ReplicaStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaStatus'), 'exclude': lambda f: f is None }})  
    