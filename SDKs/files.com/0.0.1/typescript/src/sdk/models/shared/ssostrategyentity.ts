/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Method used for deprovisioning users.
 */
export enum SsoStrategyEntityDeprovisionBehaviorEnum {
  Disable = "disable",
  Delete = "delete",
}

/**
 * LDAP username field
 */
export enum SsoStrategyEntityLdapUsernameFieldEnum {
  SAMAccountName = "sAMAccountName",
  UserPrincipalName = "userPrincipalName",
}

/**
 * SSO Protocol
 */
export enum SsoStrategyEntityProtocolEnum {
  Oauth2 = "oauth2",
  UnusedOpenid2 = "_unused_openid2",
  Saml = "saml",
  ActiveDirectory = "active_directory",
  OpenLdap = "open_ldap",
  Scim = "scim",
}

/**
 * Provider name
 */
export enum SsoStrategyEntityProviderEnum {
  Google = "google",
  Auth0 = "auth0",
  Okta = "okta",
  Atlassian = "atlassian",
  Azure = "azure",
  Box = "box",
  Dropbox = "dropbox",
  Slack = "slack",
  UnusedUbuntu = "_unused_ubuntu",
  Onelogin = "onelogin",
  Saml = "saml",
  Idaptive = "idaptive",
  Ldap = "ldap",
  Scim = "scim",
}

/**
 * SCIM authentication type.
 */
export enum SsoStrategyEntityScimAuthenticationMethodEnum {
  None = "none",
  Basic = "basic",
  Token = "token",
}

/**
 * List Sso Strategies
 */
export class SsoStrategyEntity extends SpeakeasyBase {
  /**
   * Method used for deprovisioning users.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprovision_behavior" })
  deprovisionBehavior?: SsoStrategyEntityDeprovisionBehaviorEnum;

  /**
   * Auto-deprovision group membership based on group memberships on the SSO side?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprovision_groups" })
  deprovisionGroups?: boolean;

  /**
   * Auto-deprovision users?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprovision_users" })
  deprovisionUsers?: boolean;

  /**
   * Is strategy enabled?  This may become automatically set to `false` after a high number and duration of failures.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Custom label for the SSO provider on the login page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * Base DN for looking up users in LDAP server
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_base_dn" })
  ldapBaseDn?: string;

  /**
   * Domain name that will be appended to LDAP usernames
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_domain" })
  ldapDomain?: string;

  /**
   * LDAP host
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_host" })
  ldapHost?: string;

  /**
   * LDAP backup host
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_host_2" })
  ldapHost2?: string;

  /**
   * LDAP backup host
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_host_3" })
  ldapHost3?: string;

  /**
   * LDAP port
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_port" })
  ldapPort?: number;

  /**
   * Use secure LDAP?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_secure" })
  ldapSecure?: boolean;

  /**
   * Username for signing in to LDAP server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_username" })
  ldapUsername?: string;

  /**
   * LDAP username field
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_username_field" })
  ldapUsernameField?: SsoStrategyEntityLdapUsernameFieldEnum;

  /**
   * URL holding a custom logo for the SSO provider on the login page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logo_url" })
  logoUrl?: string;

  /**
   * SSO Protocol
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: SsoStrategyEntityProtocolEnum;

  /**
   * Provider name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provider" })
  provider?: SsoStrategyEntityProviderEnum;

  /**
   * DEPRECATED: Auto-provisioned users get Sharing permission. Use a Group with the Bundle permission instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_attachments_permission" })
  provisionAttachmentsPermission?: boolean;

  /**
   * Default company for auto provisioned users.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_company" })
  provisionCompany?: string;

  /**
   * Auto-provisioned users get WebDAV permission?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_dav_permission" })
  provisionDavPermission?: boolean;

  /**
   * Comma-separated list of group names whose members will be created with email_signup authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_email_signup_groups" })
  provisionEmailSignupGroups?: string;

  /**
   * Auto-provisioned users get FTP permission?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_ftp_permission" })
  provisionFtpPermission?: boolean;

  /**
   * Comma-separated list of group names for groups to automatically add all auto-provisioned users to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_group_default" })
  provisionGroupDefault?: string;

  /**
   * Comma-separated list of group names for groups (with optional wildcards) that will be excluded from auto-provisioning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_group_exclusion" })
  provisionGroupExclusion?: string;

  /**
   * Comma-separated list of group names for groups (with optional wildcards) that will be auto-provisioned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_group_inclusion" })
  provisionGroupInclusion?: string;

  /**
   * Comma or newline separated list of group names (with optional wildcards) to require membership for user provisioning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_group_required" })
  provisionGroupRequired?: string;

  /**
   * Auto-provision group membership based on group memberships on the SSO side?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_groups" })
  provisionGroups?: boolean;

  /**
   * Auto-provisioned users get SFTP permission?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_sftp_permission" })
  provisionSftpPermission?: boolean;

  /**
   * Comma-separated list of group names whose members will be created as Site Admins.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_site_admin_groups" })
  provisionSiteAdminGroups?: string;

  /**
   * Default time zone for auto provisioned users.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_time_zone" })
  provisionTimeZone?: string;

  /**
   * Auto-provision users?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provision_users" })
  provisionUsers?: boolean;

  /**
   * Identity provider sha256 cert fingerprint if saml_provider_metadata_url is not available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "saml_provider_cert_fingerprint" })
  samlProviderCertFingerprint?: string;

  /**
   * Identity provider issuer url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "saml_provider_issuer_url" })
  samlProviderIssuerUrl?: string;

  /**
   * Custom identity provider metadata
   */
  @SpeakeasyMetadata()
  @Expose({ name: "saml_provider_metadata_content" })
  samlProviderMetadataContent?: string;

  /**
   * Metadata URL for the SAML identity provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "saml_provider_metadata_url" })
  samlProviderMetadataUrl?: string;

  /**
   * Identity provider SLO endpoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "saml_provider_slo_target_url" })
  samlProviderSloTargetUrl?: string;

  /**
   * Identity provider SSO endpoint if saml_provider_metadata_url is not available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "saml_provider_sso_target_url" })
  samlProviderSsoTargetUrl?: string;

  /**
   * SCIM authentication type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scim_authentication_method" })
  scimAuthenticationMethod?: SsoStrategyEntityScimAuthenticationMethodEnum;

  /**
   * SCIM OAuth Access Token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scim_oauth_access_token" })
  scimOauthAccessToken?: string;

  /**
   * SCIM OAuth Access Token Expiration Time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scim_oauth_access_token_expires_at" })
  scimOauthAccessTokenExpiresAt?: string;

  /**
   * SCIM username.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scim_username" })
  scimUsername?: string;

  /**
   * Subdomain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subdomain" })
  subdomain?: string;
}
