/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ActionMetricValidationsMaximum extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

export class ActionMetricValidationsMinimum extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

export class ActionMetricValidations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "maximum" })
  @Type(() => ActionMetricValidationsMaximum)
  maximum?: ActionMetricValidationsMaximum;

  @SpeakeasyMetadata()
  @Expose({ name: "minimum" })
  @Type(() => ActionMetricValidationsMinimum)
  minimum?: ActionMetricValidationsMinimum;
}

export class ActionMetric extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "goal" })
  goal?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "metric_type" })
  metricType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "validations" })
  @Type(() => ActionMetricValidations)
  validations?: ActionMetricValidations;
}
