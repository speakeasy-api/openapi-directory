"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import agentlocationresult as shared_agentlocationresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaginatedAgentLocationResultMeta:
    r"""Metadata associated with the response data"""
    
    offset: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offset') }})
    r"""The offset of the first response record within the matching data set"""  
    page_num: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_num') }})
    r"""The page number of the response records within the overall data set (1-based integer)"""  
    page_size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size') }})
    r"""The maximum number of response records on each page of results"""  
    total_records: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records') }})
    r"""The total number of records in the entire matching data set"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaginatedAgentLocationResult:
    r"""Successful Response - Returns all matching Agents"""
    
    meta: PaginatedAgentLocationResultMeta = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta') }})
    r"""Metadata associated with the response data"""  
    response: list[shared_agentlocationresult.AgentLocationResult] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response') }})
    r"""List of location results"""  
    