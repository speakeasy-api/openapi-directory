<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequestInput - The request used for `CreateInstance`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleDevtoolsRemotebuildexecutionAdminV1alphaCreateInstanceRequestInput
{
    /**
     * Instance conceptually encapsulates all Remote Build Execution resources for remote builds. An instance consists of storage and compute resources (for example, `ContentAddressableStorage`, `ActionCache`, `WorkerPools`) used for running remote builds. All Remote Build Execution API calls are scoped to an instance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstanceInput $instance
     */
	#[\JMS\Serializer\Annotation\SerializedName('instance')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstanceInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstanceInput $instance = null;
    
    /**
     * Required. ID of the created instance. A valid `instance_id` must: be 6-50 characters long, contain only lowercase letters, digits, hyphens and underscores, start with a lowercase letter, and end with a lowercase letter or a digit.
     * 
     * @var ?string $instanceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceId = null;
    
    /**
     * Required. Resource name of the project containing the instance. Format: `projects/[PROJECT_ID]`.
     * 
     * @var ?string $parent
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parent = null;
    
	public function __construct()
	{
		$this->instance = null;
		$this->instanceId = null;
		$this->parent = null;
	}
}
