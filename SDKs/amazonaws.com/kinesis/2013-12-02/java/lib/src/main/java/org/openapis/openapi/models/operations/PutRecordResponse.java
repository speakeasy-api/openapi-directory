/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class PutRecordResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;

    public PutRecordResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    
    public String contentType;

    public PutRecordResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InvalidArgumentException
     */
    
    public Object invalidArgumentException;

    public PutRecordResponse withInvalidArgumentException(Object invalidArgumentException) {
        this.invalidArgumentException = invalidArgumentException;
        return this;
    }
    
    /**
     * KMSAccessDeniedException
     */
    
    public Object kmsAccessDeniedException;

    public PutRecordResponse withKMSAccessDeniedException(Object kmsAccessDeniedException) {
        this.kmsAccessDeniedException = kmsAccessDeniedException;
        return this;
    }
    
    /**
     * KMSDisabledException
     */
    
    public Object kmsDisabledException;

    public PutRecordResponse withKMSDisabledException(Object kmsDisabledException) {
        this.kmsDisabledException = kmsDisabledException;
        return this;
    }
    
    /**
     * KMSInvalidStateException
     */
    
    public Object kmsInvalidStateException;

    public PutRecordResponse withKMSInvalidStateException(Object kmsInvalidStateException) {
        this.kmsInvalidStateException = kmsInvalidStateException;
        return this;
    }
    
    /**
     * KMSNotFoundException
     */
    
    public Object kmsNotFoundException;

    public PutRecordResponse withKMSNotFoundException(Object kmsNotFoundException) {
        this.kmsNotFoundException = kmsNotFoundException;
        return this;
    }
    
    /**
     * KMSOptInRequired
     */
    
    public Object kmsOptInRequired;

    public PutRecordResponse withKMSOptInRequired(Object kmsOptInRequired) {
        this.kmsOptInRequired = kmsOptInRequired;
        return this;
    }
    
    /**
     * KMSThrottlingException
     */
    
    public Object kmsThrottlingException;

    public PutRecordResponse withKMSThrottlingException(Object kmsThrottlingException) {
        this.kmsThrottlingException = kmsThrottlingException;
        return this;
    }
    
    /**
     * ProvisionedThroughputExceededException
     */
    
    public Object provisionedThroughputExceededException;

    public PutRecordResponse withProvisionedThroughputExceededException(Object provisionedThroughputExceededException) {
        this.provisionedThroughputExceededException = provisionedThroughputExceededException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.PutRecordOutput putRecordOutput;

    public PutRecordResponse withPutRecordOutput(org.openapis.openapi.models.shared.PutRecordOutput putRecordOutput) {
        this.putRecordOutput = putRecordOutput;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public PutRecordResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    
    public Integer statusCode;

    public PutRecordResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public PutRecordResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public PutRecordResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
