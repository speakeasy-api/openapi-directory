"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import anomaly as shared_anomaly
from ..shared import recommendation as shared_recommendation
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetRecommendationsResponse:
    r"""The structure representing the GetRecommendationsResponse."""
    
    anomalies: list[shared_anomaly.Anomaly] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('anomalies') }})  
    profile_end_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profileEndTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    profile_start_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profileStartTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    profiling_group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profilingGroupName') }})  
    recommendations: list[shared_recommendation.Recommendation] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recommendations') }})  
    