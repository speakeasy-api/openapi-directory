"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldselector as shared_fieldselector
from ..shared import firstrowoption as shared_firstrowoption
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListTemplateOverride:
    
    first_row_option: Optional[shared_firstrowoption.FirstRowOption] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstRowOption'), 'exclude': lambda f: f is None }})  
    second_row_option: Optional[shared_fieldselector.FieldSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secondRowOption'), 'exclude': lambda f: f is None }})
    r"""Custom field selector to use with field overrides."""  
    third_row_option: Optional[shared_fieldselector.FieldSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thirdRowOption'), 'exclude': lambda f: f is None }})
    r"""Custom field selector to use with field overrides."""  
    