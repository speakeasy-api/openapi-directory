/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip {
    /**
     * The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address_requirements")
    public String addressRequirements;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withAddressRequirements(String addressRequirements) {
        this.addressRequirements = addressRequirements;
        return this;
    }
    
    /**
     * Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beta")
    public Boolean beta;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withBeta(Boolean beta) {
        this.beta = beta;
        return this;
    }
    
    /**
     * The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capabilities")
    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoipCapabilities capabilities;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withCapabilities(ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoipCapabilities capabilities) {
        this.capabilities = capabilities;
        return this;
    }
    
    /**
     * A formatted version of the phone number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iso_country")
    public String isoCountry;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withIsoCountry(String isoCountry) {
        this.isoCountry = isoCountry;
        return this;
    }
    
    /**
     * The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lata")
    public String lata;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withLata(String lata) {
        this.lata = lata;
        return this;
    }
    
    /**
     * The latitude of this phone number's location. Available for only phone numbers from the US and Canada.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latitude")
    public Double latitude;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withLatitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * The locality or city of this phone number's location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locality")
    public String locality;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withLocality(String locality) {
        this.locality = locality;
        return this;
    }
    
    /**
     * The longitude of this phone number's location. Available for only phone numbers from the US and Canada.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longitude")
    public Double longitude;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withLongitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone_number")
    public String phoneNumber;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postal_code")
    public String postalCode;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rate_center")
    public String rateCenter;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withRateCenter(String rateCenter) {
        this.rateCenter = rateCenter;
        return this;
    }
    
    /**
     * The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;

    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip withRegion(String region) {
        this.region = region;
        return this;
    }
    
    public ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberVoip(){}
}
