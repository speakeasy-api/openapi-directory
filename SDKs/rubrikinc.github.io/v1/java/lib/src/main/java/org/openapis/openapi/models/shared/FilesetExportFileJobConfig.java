/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FilesetExportFileJobConfig - Configuration for job to export a file or folder from a fileset backup.
 */
public class FilesetExportFileJobConfig {
    /**
     * Destination directory.
     */
    @JsonProperty("destinationDir")
    public String destinationDir;

    public FilesetExportFileJobConfig withDestinationDir(String destinationDir) {
        this.destinationDir = destinationDir;
        return this;
    }
    
    /**
     * Host ID.
     */
    @JsonProperty("hostId")
    public String hostId;

    public FilesetExportFileJobConfig withHostId(String hostId) {
        this.hostId = hostId;
        return this;
    }
    
    /**
     * Optional field to determine if we should ignore single error during restore. Default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ignoreErrors")
    public Boolean ignoreErrors;

    public FilesetExportFileJobConfig withIgnoreErrors(Boolean ignoreErrors) {
        this.ignoreErrors = ignoreErrors;
        return this;
    }
    
    /**
     * Network share ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareId")
    public String shareId;

    public FilesetExportFileJobConfig withShareId(String shareId) {
        this.shareId = shareId;
        return this;
    }
    
    /**
     * Source directory to restore from.
     */
    @JsonProperty("sourceDir")
    public String sourceDir;

    public FilesetExportFileJobConfig withSourceDir(String sourceDir) {
        this.sourceDir = sourceDir;
        return this;
    }
    
    public FilesetExportFileJobConfig(@JsonProperty("destinationDir") String destinationDir, @JsonProperty("hostId") String hostId, @JsonProperty("sourceDir") String sourceDir) {
        this.destinationDir = destinationDir;
        this.hostId = hostId;
        this.sourceDir = sourceDir;
  }
}
