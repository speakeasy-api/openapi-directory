/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class SetChannelPrivacyUsersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class SetChannelPrivacyUsersRequestBody extends SpeakeasyBase {
  /**
   * The array of either the user URIs or the user IDs to permit to view the private channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "users" })
  users: string[];
}

export class SetChannelPrivacyUsersRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/vnd.vimeo.user+json",
  })
  requestBody: SetChannelPrivacyUsersRequestBody;

  /**
   * The ID of the channel.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=channel_id",
  })
  channelId: number;
}

export class SetChannelPrivacyUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * * Error code 2205: There was no request body, or the request body is malformed.
   *
   * @remarks
   * * Error code 2900: At least one of the specified user accounts doesn't exist.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * The users can now view the private channel.
   */
  @SpeakeasyMetadata({ elemType: shared.User })
  users?: shared.User[];
}
