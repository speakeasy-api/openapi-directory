/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Topic } from "./topic";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetContactListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ContactListName" })
  contactListName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTimestamp?: Date;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata({ elemType: Topic })
  @Expose({ name: "Topics" })
  @Type(() => Topic)
  topics?: Topic[];
}
