// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CommentAPIPostNewCommentJSONEntryTypeEnum - Entry type.
type CommentAPIPostNewCommentJSONEntryTypeEnum string

const (
	CommentAPIPostNewCommentJSONEntryTypeEnumUndefined          CommentAPIPostNewCommentJSONEntryTypeEnum = "Undefined"
	CommentAPIPostNewCommentJSONEntryTypeEnumAlbum              CommentAPIPostNewCommentJSONEntryTypeEnum = "Album"
	CommentAPIPostNewCommentJSONEntryTypeEnumArtist             CommentAPIPostNewCommentJSONEntryTypeEnum = "Artist"
	CommentAPIPostNewCommentJSONEntryTypeEnumDiscussionTopic    CommentAPIPostNewCommentJSONEntryTypeEnum = "DiscussionTopic"
	CommentAPIPostNewCommentJSONEntryTypeEnumPv                 CommentAPIPostNewCommentJSONEntryTypeEnum = "PV"
	CommentAPIPostNewCommentJSONEntryTypeEnumReleaseEvent       CommentAPIPostNewCommentJSONEntryTypeEnum = "ReleaseEvent"
	CommentAPIPostNewCommentJSONEntryTypeEnumReleaseEventSeries CommentAPIPostNewCommentJSONEntryTypeEnum = "ReleaseEventSeries"
	CommentAPIPostNewCommentJSONEntryTypeEnumSong               CommentAPIPostNewCommentJSONEntryTypeEnum = "Song"
	CommentAPIPostNewCommentJSONEntryTypeEnumSongList           CommentAPIPostNewCommentJSONEntryTypeEnum = "SongList"
	CommentAPIPostNewCommentJSONEntryTypeEnumTag                CommentAPIPostNewCommentJSONEntryTypeEnum = "Tag"
	CommentAPIPostNewCommentJSONEntryTypeEnumUser               CommentAPIPostNewCommentJSONEntryTypeEnum = "User"
	CommentAPIPostNewCommentJSONEntryTypeEnumVenue              CommentAPIPostNewCommentJSONEntryTypeEnum = "Venue"
)

func (e *CommentAPIPostNewCommentJSONEntryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Undefined":
		fallthrough
	case "Album":
		fallthrough
	case "Artist":
		fallthrough
	case "DiscussionTopic":
		fallthrough
	case "PV":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "ReleaseEventSeries":
		fallthrough
	case "Song":
		fallthrough
	case "SongList":
		fallthrough
	case "Tag":
		fallthrough
	case "User":
		fallthrough
	case "Venue":
		*e = CommentAPIPostNewCommentJSONEntryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CommentAPIPostNewCommentJSONEntryTypeEnum: %s", s)
	}
}

type CommentAPIPostNewCommentJSONPathParams struct {
	// Entry type.
	EntryType CommentAPIPostNewCommentJSONEntryTypeEnum `pathParam:"style=simple,explode=false,name=entryType"`
}

type CommentAPIPostNewCommentJSONRequest struct {
	PathParams CommentAPIPostNewCommentJSONPathParams
	// Comment data. Message, entry and author must be specified. Author must match the logged in user.
	Request shared.CommentForAPIContract `request:"mediaType=application/json"`
}

type CommentAPIPostNewCommentJSONResponse struct {
	Body []byte
	// OK
	CommentForAPIContract *shared.CommentForAPIContract
	ContentType           string
	StatusCode            int
	RawResponse           *http.Response
}
