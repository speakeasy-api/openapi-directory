// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StateHistoryStateEnum - The workflow pipeline stage.
type StateHistoryStateEnum string

const (
	StateHistoryStateEnumStateUnspecified         StateHistoryStateEnum = "STATE_UNSPECIFIED"
	StateHistoryStateEnumCreated                  StateHistoryStateEnum = "CREATED"
	StateHistoryStateEnumTurnedIn                 StateHistoryStateEnum = "TURNED_IN"
	StateHistoryStateEnumReturned                 StateHistoryStateEnum = "RETURNED"
	StateHistoryStateEnumReclaimedByStudent       StateHistoryStateEnum = "RECLAIMED_BY_STUDENT"
	StateHistoryStateEnumStudentEditedAfterTurnIn StateHistoryStateEnum = "STUDENT_EDITED_AFTER_TURN_IN"
)

func (e StateHistoryStateEnum) ToPointer() *StateHistoryStateEnum {
	return &e
}

func (e *StateHistoryStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATED":
		fallthrough
	case "TURNED_IN":
		fallthrough
	case "RETURNED":
		fallthrough
	case "RECLAIMED_BY_STUDENT":
		fallthrough
	case "STUDENT_EDITED_AFTER_TURN_IN":
		*e = StateHistoryStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StateHistoryStateEnum: %v", v)
	}
}

// StateHistory - The history of each state this submission has been in.
type StateHistory struct {
	// The teacher or student who made the change.
	ActorUserID *string `json:"actorUserId,omitempty"`
	// The workflow pipeline stage.
	State *StateHistoryStateEnum `json:"state,omitempty"`
	// When the submission entered this state.
	StateTimestamp *string `json:"stateTimestamp,omitempty"`
}
