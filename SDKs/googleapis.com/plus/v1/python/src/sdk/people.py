"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class People:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def plus_people_get(self, request: operations.PlusPeopleGetRequest, security: operations.PlusPeopleGetSecurity) -> operations.PlusPeopleGetResponse:
        r"""Get a person's profile. If your app uses scope https://www.googleapis.com/auth/plus.login, this method is guaranteed to return ageRange and language."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.PlusPeopleGetRequest, base_url, '/people/{userId}', request)
        
        query_params = utils.get_query_params(operations.PlusPeopleGetRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.PlusPeopleGetResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Person])
                res.person = out

        return res

    def plus_people_list(self, request: operations.PlusPeopleListRequest, security: operations.PlusPeopleListSecurity) -> operations.PlusPeopleListResponse:
        r"""List all of the people in the specified collection."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.PlusPeopleListRequest, base_url, '/people/{userId}/people/{collection}', request)
        
        query_params = utils.get_query_params(operations.PlusPeopleListRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.PlusPeopleListResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.PeopleFeed])
                res.people_feed = out

        return res

    def plus_people_list_by_activity(self, request: operations.PlusPeopleListByActivityRequest, security: operations.PlusPeopleListByActivitySecurity) -> operations.PlusPeopleListByActivityResponse:
        r"""Shut down. See https://developers.google.com/+/api-shutdown for more details."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.PlusPeopleListByActivityRequest, base_url, '/activities/{activityId}/people/{collection}', request)
        
        query_params = utils.get_query_params(operations.PlusPeopleListByActivityRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.PlusPeopleListByActivityResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.PeopleFeed])
                res.people_feed = out

        return res

    def plus_people_search(self, request: operations.PlusPeopleSearchRequest, security: operations.PlusPeopleSearchSecurity) -> operations.PlusPeopleSearchResponse:
        r"""Shut down. See https://developers.google.com/+/api-shutdown for more details."""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/people'
        
        query_params = utils.get_query_params(operations.PlusPeopleSearchRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.PlusPeopleSearchResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.PeopleFeed])
                res.people_feed = out

        return res

    