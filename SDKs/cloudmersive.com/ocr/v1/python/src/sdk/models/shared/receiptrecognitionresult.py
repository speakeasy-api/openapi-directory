"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import receiptlineitem as shared_receiptlineitem
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReceiptRecognitionResult:
    r"""Result of recognizing a receipt, to extract the key information from the receipt"""
    
    address_string: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AddressString'), 'exclude': lambda f: f is None }})
    r"""The address of the business printed on the receipt (if included on the receipt)"""  
    business_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BusinessName'), 'exclude': lambda f: f is None }})
    r"""The name of the business printed on the receipt (if included on the receipt)"""  
    business_website: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BusinessWebsite'), 'exclude': lambda f: f is None }})
    r"""The website URL of the business printed on the receipt (if included on the receipt)"""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PhoneNumber'), 'exclude': lambda f: f is None }})
    r"""The phone number printed on the receipt (if included on the receipt)"""  
    receipt_items: Optional[list[shared_receiptlineitem.ReceiptLineItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReceiptItems'), 'exclude': lambda f: f is None }})
    r"""The individual line items comprising the order; does not include total (see ReceiptTotal)"""  
    receipt_sub_total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReceiptSubTotal'), 'exclude': lambda f: f is None }})
    r"""Optional; if available, the monetary value of the receipt subtotal - typically not including specialized line items such as Tax. If this value is not available, it will be 0."""  
    receipt_total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReceiptTotal'), 'exclude': lambda f: f is None }})
    r"""The total monetary value of the receipt (if included on the receipt)"""  
    successful: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Successful'), 'exclude': lambda f: f is None }})
    r"""True if the operation was successful, false otherwise"""  
    timestamp: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Timestamp'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time printed on the receipt (if included on the receipt)"""  
    