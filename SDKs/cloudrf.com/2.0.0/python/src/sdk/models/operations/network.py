"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class NetworkSecurity:
    
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'key' }})  
    

@dataclasses.dataclass
class NetworkRequest:
    
    alt: int = dataclasses.field(metadata={'query_param': { 'field_name': 'alt', 'style': 'form', 'explode': True }})
    r"""Height above ground level in metres"""  
    lat: float = dataclasses.field(metadata={'query_param': { 'field_name': 'lat', 'style': 'form', 'explode': True }})
    r"""Latitude in decimal degrees"""  
    lon: float = dataclasses.field(metadata={'query_param': { 'field_name': 'lon', 'style': 'form', 'explode': True }})
    r"""Longitude in decimal degrees"""  
    nam: str = dataclasses.field(metadata={'query_param': { 'field_name': 'nam', 'style': 'form', 'explode': True }})
    r"""Super layer name"""  
    net: str = dataclasses.field(metadata={'query_param': { 'field_name': 'net', 'style': 'form', 'explode': True }})
    r"""Network name"""  
    rxg: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'rxg', 'style': 'form', 'explode': True }})
    r"""Receiver gain in dBi"""  
    

@dataclasses.dataclass
class NetworkResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    