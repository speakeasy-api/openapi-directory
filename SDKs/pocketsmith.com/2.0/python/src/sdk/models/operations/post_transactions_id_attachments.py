"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import attachment as shared_attachment
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostTransactionsIDAttachmentsRequestBody:
    
    attachment_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachment_id'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the attachment."""  
    

@dataclasses.dataclass
class PostTransactionsIDAttachmentsRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the transaction."""  
    request_body: Optional[PostTransactionsIDAttachmentsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PostTransactionsIDAttachmentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    attachment: Optional[shared_attachment.Attachment] = dataclasses.field(default=None)
    r"""Success"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Not Allowed"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    