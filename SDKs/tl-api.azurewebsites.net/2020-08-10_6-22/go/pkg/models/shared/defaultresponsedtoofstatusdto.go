// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type DefaultResponseDTOOfStatusDTOResultType string

const (
	DefaultResponseDTOOfStatusDTOResultTypeStatusDTO DefaultResponseDTOOfStatusDTOResultType = "StatusDTO"
)

type DefaultResponseDTOOfStatusDTOResult struct {
	StatusDTO *StatusDTO

	Type DefaultResponseDTOOfStatusDTOResultType
}

func CreateDefaultResponseDTOOfStatusDTOResultStatusDTO(statusDTO StatusDTO) DefaultResponseDTOOfStatusDTOResult {
	typ := DefaultResponseDTOOfStatusDTOResultTypeStatusDTO

	return DefaultResponseDTOOfStatusDTOResult{
		StatusDTO: &statusDTO,
		Type:      typ,
	}
}

func (u *DefaultResponseDTOOfStatusDTOResult) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	statusDTO := new(StatusDTO)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&statusDTO); err == nil {
		u.StatusDTO = statusDTO
		u.Type = DefaultResponseDTOOfStatusDTOResultTypeStatusDTO
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u DefaultResponseDTOOfStatusDTOResult) MarshalJSON() ([]byte, error) {
	if u.StatusDTO != nil {
		return json.Marshal(u.StatusDTO)
	}

	return nil, nil
}

// DefaultResponseDTOOfStatusDTO - The DefaultResponseDTO Class.
// Contains fields of DefaultResponse DTO in application.
type DefaultResponseDTOOfStatusDTO struct {
	IsError           *bool                                `json:"isError,omitempty"`
	Message           *string                              `json:"message,omitempty"`
	ResponseException interface{}                          `json:"responseException,omitempty"`
	Result            *DefaultResponseDTOOfStatusDTOResult `json:"result,omitempty"`
}
