"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateLaunchConfigurationTemplateResponse = exports.UpdateLaunchConfigurationTemplateRequest = exports.UpdateLaunchConfigurationTemplateRequestBody = exports.UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum = exports.UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf = exports.UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions = exports.UpdateLaunchConfigurationTemplateRequestBodyLicensing = exports.UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum = exports.UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf = exports.UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * Launch configuration template boot mode.
 */
var UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum;
(function (UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum) {
    UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum["LegacyBios"] = "LEGACY_BIOS";
    UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum["Uefi"] = "UEFI";
})(UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum = exports.UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum || (exports.UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum = {}));
/**
 * Launch template disk configuration.
 */
var UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf = /** @class */ (function (_super) {
    __extends(UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf, _super);
    function UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iops" }),
        __metadata("design:type", Number)
    ], UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf.prototype, "iops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "throughput" }),
        __metadata("design:type", Number)
    ], UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf.prototype, "throughput", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "volumeType" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf.prototype, "volumeType", void 0);
    return UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf;
}(utils_1.SpeakeasyBase));
exports.UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf = UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf;
/**
 * Launch disposition.
 */
var UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum;
(function (UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum) {
    UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum["Stopped"] = "STOPPED";
    UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum["Started"] = "STARTED";
})(UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum = exports.UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum || (exports.UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum = {}));
/**
 * Configure Licensing.
 */
var UpdateLaunchConfigurationTemplateRequestBodyLicensing = /** @class */ (function (_super) {
    __extends(UpdateLaunchConfigurationTemplateRequestBodyLicensing, _super);
    function UpdateLaunchConfigurationTemplateRequestBodyLicensing() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "osByol" }),
        __metadata("design:type", Boolean)
    ], UpdateLaunchConfigurationTemplateRequestBodyLicensing.prototype, "osByol", void 0);
    return UpdateLaunchConfigurationTemplateRequestBodyLicensing;
}(utils_1.SpeakeasyBase));
exports.UpdateLaunchConfigurationTemplateRequestBodyLicensing = UpdateLaunchConfigurationTemplateRequestBodyLicensing;
/**
 * Post Launch Actions to executed on the Test or Cutover instance.
 */
var UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions = /** @class */ (function (_super) {
    __extends(UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions, _super);
    function UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloudWatchLogGroupName" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions.prototype, "cloudWatchLogGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deployment" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions.prototype, "deployment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "s3LogBucket" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions.prototype, "s3LogBucket", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "s3OutputKeyPrefix" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions.prototype, "s3OutputKeyPrefix", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.SsmDocument }),
        (0, class_transformer_1.Expose)({ name: "ssmDocuments" }),
        (0, class_transformer_1.Type)(function () { return shared.SsmDocument; }),
        __metadata("design:type", Array)
    ], UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions.prototype, "ssmDocuments", void 0);
    return UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions;
}(utils_1.SpeakeasyBase));
exports.UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions = UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions;
/**
 * Launch template disk configuration.
 */
var UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf = /** @class */ (function (_super) {
    __extends(UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf, _super);
    function UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iops" }),
        __metadata("design:type", Number)
    ], UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf.prototype, "iops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "throughput" }),
        __metadata("design:type", Number)
    ], UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf.prototype, "throughput", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "volumeType" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf.prototype, "volumeType", void 0);
    return UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf;
}(utils_1.SpeakeasyBase));
exports.UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf = UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf;
/**
 * Target instance type right-sizing method.
 */
var UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum;
(function (UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum) {
    UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum["None"] = "NONE";
    UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum["Basic"] = "BASIC";
})(UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum = exports.UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum || (exports.UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum = {}));
var UpdateLaunchConfigurationTemplateRequestBody = /** @class */ (function (_super) {
    __extends(UpdateLaunchConfigurationTemplateRequestBody, _super);
    function UpdateLaunchConfigurationTemplateRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "associatePublicIpAddress" }),
        __metadata("design:type", Boolean)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "associatePublicIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bootMode" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "bootMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "copyPrivateIp" }),
        __metadata("design:type", Boolean)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "copyPrivateIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "copyTags" }),
        __metadata("design:type", Boolean)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "copyTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enableMapAutoTagging" }),
        __metadata("design:type", Boolean)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "enableMapAutoTagging", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "largeVolumeConf" }),
        (0, class_transformer_1.Type)(function () { return UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf; }),
        __metadata("design:type", UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "largeVolumeConf", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "launchConfigurationTemplateID" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "launchConfigurationTemplateID", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "launchDisposition" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "launchDisposition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "licensing" }),
        (0, class_transformer_1.Type)(function () { return UpdateLaunchConfigurationTemplateRequestBodyLicensing; }),
        __metadata("design:type", UpdateLaunchConfigurationTemplateRequestBodyLicensing)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "licensing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mapAutoTaggingMpeID" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "mapAutoTaggingMpeID", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postLaunchActions" }),
        (0, class_transformer_1.Type)(function () { return UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions; }),
        __metadata("design:type", UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "postLaunchActions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "smallVolumeConf" }),
        (0, class_transformer_1.Type)(function () { return UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf; }),
        __metadata("design:type", UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "smallVolumeConf", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "smallVolumeMaxSize" }),
        __metadata("design:type", Number)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "smallVolumeMaxSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetInstanceTypeRightSizingMethod" }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequestBody.prototype, "targetInstanceTypeRightSizingMethod", void 0);
    return UpdateLaunchConfigurationTemplateRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateLaunchConfigurationTemplateRequestBody = UpdateLaunchConfigurationTemplateRequestBody;
var UpdateLaunchConfigurationTemplateRequest = /** @class */ (function (_super) {
    __extends(UpdateLaunchConfigurationTemplateRequest, _super);
    function UpdateLaunchConfigurationTemplateRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateLaunchConfigurationTemplateRequestBody)
    ], UpdateLaunchConfigurationTemplateRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateRequest.prototype, "xAmzSignedHeaders", void 0);
    return UpdateLaunchConfigurationTemplateRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateLaunchConfigurationTemplateRequest = UpdateLaunchConfigurationTemplateRequest;
var UpdateLaunchConfigurationTemplateResponse = /** @class */ (function (_super) {
    __extends(UpdateLaunchConfigurationTemplateResponse, _super);
    function UpdateLaunchConfigurationTemplateResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateLaunchConfigurationTemplateResponse.prototype, "accessDeniedException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateLaunchConfigurationTemplateResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.LaunchConfigurationTemplate)
    ], UpdateLaunchConfigurationTemplateResponse.prototype, "launchConfigurationTemplate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateLaunchConfigurationTemplateResponse.prototype, "resourceNotFoundException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateLaunchConfigurationTemplateResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateLaunchConfigurationTemplateResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateLaunchConfigurationTemplateResponse.prototype, "uninitializedAccountException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateLaunchConfigurationTemplateResponse.prototype, "validationException", void 0);
    return UpdateLaunchConfigurationTemplateResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateLaunchConfigurationTemplateResponse = UpdateLaunchConfigurationTemplateResponse;
