/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdatePipelineRequestBody {
    /**
     * &lt;p&gt;The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.&lt;/p&gt; &lt;p&gt;If you use either &lt;code&gt;s3&lt;/code&gt; or &lt;code&gt;s3-aws-kms&lt;/code&gt; as your &lt;code&gt;Encryption:Mode&lt;/code&gt;, you don't need to provide a key with your job because a default key, known as an AWS-KMS key, is created for you automatically. You need to provide an AWS-KMS key only if you want to use a non-default AWS-KMS key, or if you are using an &lt;code&gt;Encryption:Mode&lt;/code&gt; of &lt;code&gt;aes-cbc-pkcs7&lt;/code&gt;, &lt;code&gt;aes-ctr&lt;/code&gt;, or &lt;code&gt;aes-gcm&lt;/code&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwsKmsKeyArn")
    public String awsKmsKeyArn;
    public UpdatePipelineRequestBody withAwsKmsKeyArn(String awsKmsKeyArn) {
        this.awsKmsKeyArn = awsKmsKeyArn;
        return this;
    }
    
    /**
     * The &lt;code&gt;PipelineOutputConfig&lt;/code&gt; structure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ContentConfig")
    public UpdatePipelineRequestBodyContentConfig contentConfig;
    public UpdatePipelineRequestBody withContentConfig(UpdatePipelineRequestBodyContentConfig contentConfig) {
        this.contentConfig = contentConfig;
        return this;
    }
    
    /**
     * The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputBucket")
    public String inputBucket;
    public UpdatePipelineRequestBody withInputBucket(String inputBucket) {
        this.inputBucket = inputBucket;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.&lt;/p&gt; &lt;p&gt;Constraints: Maximum 40 characters&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public UpdatePipelineRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * &lt;p&gt;The Amazon Simple Notification Service (Amazon SNS) topic or topics to notify in order to report job status.&lt;/p&gt; &lt;important&gt; &lt;p&gt;To receive notifications, you must also subscribe to the new topic in the Amazon SNS console.&lt;/p&gt; &lt;/important&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Notifications")
    public UpdatePipelineRequestBodyNotifications notifications;
    public UpdatePipelineRequestBody withNotifications(UpdatePipelineRequestBodyNotifications notifications) {
        this.notifications = notifications;
        return this;
    }
    
    /**
     * The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Role")
    public String role;
    public UpdatePipelineRequestBody withRole(String role) {
        this.role = role;
        return this;
    }
    
    /**
     * The &lt;code&gt;PipelineOutputConfig&lt;/code&gt; structure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThumbnailConfig")
    public UpdatePipelineRequestBodyThumbnailConfig thumbnailConfig;
    public UpdatePipelineRequestBody withThumbnailConfig(UpdatePipelineRequestBodyThumbnailConfig thumbnailConfig) {
        this.thumbnailConfig = thumbnailConfig;
        return this;
    }
    
}
