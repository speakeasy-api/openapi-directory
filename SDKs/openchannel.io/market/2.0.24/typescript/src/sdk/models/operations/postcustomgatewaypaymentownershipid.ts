/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class PostCustomGatewayPaymentOwnershipIdRequest extends SpeakeasyBase {
  /**
   * The total amount paid in cents
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=amount",
  })
  amount: number;

  /**
   * A custom JSON object to attach to this transaction
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=customData",
  })
  customData?: string;

  /**
   * The date (in milliseconds) of when this payment was made
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=date" })
  date?: number;

  /**
   * The amount (in cents) paid to the owner of the app. Defaults based on the commission amount configured for this marketplace.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=developerAmount",
  })
  developerAmount?: number;

  /**
   * The fee (in cents) paid to a payment processors or third parties to process this payment. Default is 0.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=feeAmount",
  })
  feeAmount?: number;

  /**
   * The amount (in cents) paid to the marketplace owner as a commission for the purchase of this app. Defaults based on the commission amount configured for this marketplace.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=marketplaceAmount",
  })
  marketplaceAmount?: number;

  /**
   * The id of the ownership record involved in this transaction
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ownershipId",
  })
  ownershipId: string;
}

export class PostCustomGatewayPaymentOwnershipIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
