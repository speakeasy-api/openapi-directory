// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum - The type of resource, for example a VPC attachment.
type AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum string

const (
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnumVpc                  AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum = "vpc"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnumVpn                  AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum = "vpn"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnumDirectConnectGateway AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum = "direct-connect-gateway"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnumConnect              AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum = "connect"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnumPeering              AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum = "peering"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnumTgwPeering           AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum = "tgw-peering"
)

func (e AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum) ToPointer() *AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum {
	return &e
}

func (e *AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum: %v", v)
	}
}

// AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum - The state of the subnet association.
type AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum string

const (
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnumPendingAcceptance AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum = "pendingAcceptance"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnumAssociating       AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum = "associating"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnumAssociated        AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum = "associated"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnumDisassociating    AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum = "disassociating"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnumDisassociated     AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum = "disassociated"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnumRejected          AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum = "rejected"
	AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnumFailed            AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum = "failed"
)

func (e AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum) ToPointer() *AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum {
	return &e
}

func (e *AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pendingAcceptance":
		fallthrough
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		fallthrough
	case "rejected":
		fallthrough
	case "failed":
		*e = AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum: %v", v)
	}
}

// AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnets - Describes the subnet association with the transit gateway multicast domain.
type AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnets struct {
	State    *AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum
	SubnetID *string
}

// AcceptTransitGatewayMulticastDomainAssociationsResultAssociations - Information about the multicast domain associations.
type AcceptTransitGatewayMulticastDomainAssociationsResultAssociations struct {
	ResourceID                      *string
	ResourceOwnerID                 *string
	ResourceType                    *AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum
	Subnets                         []AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnets
	TransitGatewayAttachmentID      *string
	TransitGatewayMulticastDomainID *string
}

// AcceptTransitGatewayMulticastDomainAssociationsResult - Success
type AcceptTransitGatewayMulticastDomainAssociationsResult struct {
	Associations *AcceptTransitGatewayMulticastDomainAssociationsResultAssociations
}
