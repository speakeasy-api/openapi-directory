// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteFleetsActionEnum
type GETDeleteFleetsActionEnum string

const (
	GETDeleteFleetsActionEnumDeleteFleets GETDeleteFleetsActionEnum = "DeleteFleets"
)

func (e *GETDeleteFleetsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteFleets":
		*e = GETDeleteFleetsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteFleetsActionEnum: %s", s)
	}
}

// GETDeleteFleetsVersionEnum
type GETDeleteFleetsVersionEnum string

const (
	GETDeleteFleetsVersionEnumTwoThousandAndSixteen1115 GETDeleteFleetsVersionEnum = "2016-11-15"
)

func (e *GETDeleteFleetsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteFleetsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteFleetsVersionEnum: %s", s)
	}
}

type GETDeleteFleetsQueryParams struct {
	Action GETDeleteFleetsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The IDs of the EC2 Fleets.
	FleetID []string `queryParam:"style=form,explode=true,name=FleetId"`
	// <p>Indicates whether to terminate the associated instances when the EC2 Fleet is deleted. The default is to terminate the instances.</p> <p>To let the instances continue to run after the EC2 Fleet is deleted, specify <code>no-terminate-instances</code>. Supported only for fleets of type <code>maintain</code> and <code>request</code>.</p> <p>For <code>instant</code> fleets, you cannot specify <code>NoTerminateInstances</code>. A deleted <code>instant</code> fleet with running instances is not supported.</p>
	TerminateInstances bool                       `queryParam:"style=form,explode=true,name=TerminateInstances"`
	Version            GETDeleteFleetsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteFleetsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteFleetsRequest struct {
	QueryParams GETDeleteFleetsQueryParams
	Headers     GETDeleteFleetsHeaders
}

type GETDeleteFleetsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
