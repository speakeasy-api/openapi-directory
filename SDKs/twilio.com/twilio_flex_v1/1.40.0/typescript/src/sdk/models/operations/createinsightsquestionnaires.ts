/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateInsightsQuestionnairesServerList = [
  "https://flex-api.twilio.com",
] as const;

export class CreateInsightsQuestionnairesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateInsightsQuestionnairesCreateInsightsQuestionnairesRequest extends SpeakeasyBase {
  /**
   * The flag to enable or disable questionnaire
   */
  @SpeakeasyMetadata({ data: "form, name=Active" })
  active?: boolean;

  /**
   * The description of this questionnaire
   */
  @SpeakeasyMetadata({ data: "form, name=Description" })
  description?: string;

  /**
   * The name of this questionnaire
   */
  @SpeakeasyMetadata({ data: "form, name=Name" })
  name: string;

  /**
   * The list of questions ids under a questionnaire
   */
  @SpeakeasyMetadata({ data: "form, name=QuestionIds" })
  questionIds?: string[];
}

export class CreateInsightsQuestionnairesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateInsightsQuestionnairesCreateInsightsQuestionnairesRequest;

  /**
   * The Token HTTP request header
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Token" })
  token?: string;
}

export class CreateInsightsQuestionnairesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  flexV1InsightsQuestionnaires?: shared.FlexV1InsightsQuestionnaires;
}
