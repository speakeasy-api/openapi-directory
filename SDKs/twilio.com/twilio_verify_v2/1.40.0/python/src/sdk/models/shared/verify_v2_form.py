"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import form_enum_form_types_enum as shared_form_enum_form_types_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VerifyV2Form:
    r"""OK"""
    
    form_meta: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('form_meta'), 'exclude': lambda f: f is None }})
    r"""Additional information for the available forms for this type. E.g. The separator string used for `binding` in a Factor push."""  
    form_type: Optional[shared_form_enum_form_types_enum.FormEnumFormTypesEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('form_type'), 'exclude': lambda f: f is None }})  
    forms: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('forms'), 'exclude': lambda f: f is None }})
    r"""Object that contains the available forms for this type. This available forms are given in the standard [JSON Schema](https://json-schema.org/) format"""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The URL to access the forms for this type."""  
    