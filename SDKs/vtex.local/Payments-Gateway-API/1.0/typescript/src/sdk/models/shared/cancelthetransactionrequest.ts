/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * This field is filled with the content of the cart of the transaction, which can be obtained using [Get Orders](https://developers.vtex.com/vtex-rest-api/reference/orders#getorder) or [Transaction Details](https://developers.vtex.com/vtex-rest-api/reference/transaction-process#transactiondetails) endpoints. It should only be included for transactions with split payment.
 */
export class CancelthetransactionRequestMinicart extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "freight" })
  freight?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "items" })
  items?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;
}

export class CancelthetransactionRequest extends SpeakeasyBase {
  /**
   * This field is filled with the content of the cart of the transaction, which can be obtained using [Get Orders](https://developers.vtex.com/vtex-rest-api/reference/orders#getorder) or [Transaction Details](https://developers.vtex.com/vtex-rest-api/reference/transaction-process#transactiondetails) endpoints. It should only be included for transactions with split payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minicart" })
  @Type(() => CancelthetransactionRequestMinicart)
  minicart?: CancelthetransactionRequestMinicart;

  /**
   * Value of the purchase.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}
