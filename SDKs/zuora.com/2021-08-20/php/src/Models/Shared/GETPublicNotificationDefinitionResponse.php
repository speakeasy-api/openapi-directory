<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GETPublicNotificationDefinitionResponse - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GETPublicNotificationDefinitionResponse
{
    /**
     * The status of the notification definition. The default value is true.
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('callout')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GETPublicNotificationDefinitionResponseCallout')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPublicNotificationDefinitionResponseCallout $callout = null;
    
    /**
     * The status of the callout action. The default value is false.
     * 
     * @var ?bool $calloutActive
     */
	#[\JMS\Serializer\Annotation\SerializedName('calloutActive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $calloutActive = null;
    
    /**
     * The profile that the notification definition belongs to.
     * 
     * @var ?string $communicationProfileId
     */
	#[\JMS\Serializer\Annotation\SerializedName('communicationProfileId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $communicationProfileId = null;
    
    /**
     * The ID of the user who created the notification definition.
     * 
     * @var ?string $createdBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdBy = null;
    
    /**
     * The time when the notification definition was created. Specified in the UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g. 1997-07-16T19:20:30.45+00:00
     * 
     * @var ?\DateTime $createdOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdOn = null;
    
    /**
     * Description of the notification definition
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The status of the email action. The default value is false.
     * 
     * @var ?bool $emailActive
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailActive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $emailActive = null;
    
    /**
     * The ID of the email template. In the request, there should be at least one email template or callout.
     * 
     * @var ?string $emailTemplateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailTemplateId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emailTemplateId = null;
    
    /**
     * The name of the event type.
     * 
     * @var ?string $eventTypeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTypeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventTypeName = null;
    
    /**
     * The namespace of the `eventTypeName` field. 
     * 
     * 
     * 
     * @var ?string $eventTypeNamespace
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTypeNamespace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventTypeNamespace = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('filterRule')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GETPublicNotificationDefinitionResponseFilterRule')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPublicNotificationDefinitionResponseFilterRule $filterRule = null;
    
    /**
     * The parameter values used to configure the filter rule.
     * 
     * 
     * 
     * @var ?array<string, string> $filterRuleParams
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterRuleParams')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filterRuleParams = null;
    
    /**
     * The filter rule associated with this notification definition.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The name of the notification definition.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The ID of the user who updated the notification definition.
     * 
     * @var ?string $updatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedBy = null;
    
    /**
     * The time when the notification was updated. Specified in the UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g. 1997-07-16T19:20:30.45+00:00
     * 
     * @var ?\DateTime $updatedOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedOn = null;
    
	public function __construct()
	{
		$this->active = null;
		$this->callout = null;
		$this->calloutActive = null;
		$this->communicationProfileId = null;
		$this->createdBy = null;
		$this->createdOn = null;
		$this->description = null;
		$this->emailActive = null;
		$this->emailTemplateId = null;
		$this->eventTypeName = null;
		$this->eventTypeNamespace = null;
		$this->filterRule = null;
		$this->filterRuleParams = null;
		$this->id = null;
		$this->name = null;
		$this->updatedBy = null;
		$this->updatedOn = null;
	}
}
