<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * CodePushDeploymentReleasesCreateRequestBody - The necessary information required to download the bundle and being the release process.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class CodePushDeploymentReleasesCreateRequestBody
{
    /**
     * This specifies which deployment you want to release the update to. Default is Staging.
     * 
     * @var ?string $deploymentName
     */
	#[\JMS\Serializer\Annotation\SerializedName('deployment_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deploymentName = null;
    
    /**
     * This provides an optional "change log" for the deployment.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * This specifies whether an update should be downloadable by end users or not.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * This specifies whether the update should be considered mandatory or not (e.g. it includes a critical security fix).
     * 
     * @var ?bool $mandatory
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandatory')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $mandatory = null;
    
    /**
     * This specifies that if the update is identical to the latest release on the deployment, the CLI should generate a warning instead of an error.
     * 
     * @var ?bool $noDuplicateReleaseError
     */
	#[\JMS\Serializer\Annotation\SerializedName('no_duplicate_release_error')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $noDuplicateReleaseError = null;
    
    /**
     * The upload metadata from the release initialization step.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CodePushDeploymentReleasesCreateRequestBodyReleaseUpload $releaseUpload
     */
	#[\JMS\Serializer\Annotation\SerializedName('release_upload')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CodePushDeploymentReleasesCreateRequestBodyReleaseUpload')]
    public CodePushDeploymentReleasesCreateRequestBodyReleaseUpload $releaseUpload;
    
    /**
     * This specifies the percentage of users (as an integer between 1 and 100) that should be eligible to receive this update.
     * 
     * @var ?int $rollout
     */
	#[\JMS\Serializer\Annotation\SerializedName('rollout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $rollout = null;
    
    /**
     * the binary version of the application
     * 
     * @var string $targetBinaryVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_binary_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $targetBinaryVersion;
    
	public function __construct()
	{
		$this->deploymentName = null;
		$this->description = null;
		$this->disabled = null;
		$this->mandatory = null;
		$this->noDuplicateReleaseError = null;
		$this->releaseUpload = new \OpenAPI\OpenAPI\Models\Operations\CodePushDeploymentReleasesCreateRequestBodyReleaseUpload();
		$this->rollout = null;
		$this->targetBinaryVersion = "";
	}
}
