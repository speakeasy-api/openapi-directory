// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetProductsStatusStatusJSONStatusEnum - Status of the Product used as filter
type GetProductsStatusStatusJSONStatusEnum string

const (
	GetProductsStatusStatusJSONStatusEnumAvailable    GetProductsStatusStatusJSONStatusEnum = "available"
	GetProductsStatusStatusJSONStatusEnumNotAvailable GetProductsStatusStatusJSONStatusEnum = "not-available"
	GetProductsStatusStatusJSONStatusEnumDisabled     GetProductsStatusStatusJSONStatusEnum = "disabled"
)

func (e *GetProductsStatusStatusJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "available":
		fallthrough
	case "not-available":
		fallthrough
	case "disabled":
		*e = GetProductsStatusStatusJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProductsStatusStatusJSONStatusEnum: %s", s)
	}
}

type GetProductsStatusStatusJSONPathParams struct {
	// Status of the Product used as filter
	Status GetProductsStatusStatusJSONStatusEnum `pathParam:"style=simple,explode=false,name=status"`
}

type GetProductsStatusStatusJSONQueryParams struct {
	// API OAuth token.
	Authtoken string `queryParam:"style=form,explode=true,name=authtoken"`
	// Locale code of the translation
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
	// API OAuth login.
	Login string `queryParam:"style=form,explode=true,name=login"`
}

type GetProductsStatusStatusJSONRequest struct {
	PathParams  GetProductsStatusStatusJSONPathParams
	QueryParams GetProductsStatusStatusJSONQueryParams
}

type GetProductsStatusStatusJSONResponse struct {
	ContentType string
	// OK
	Products    []shared.Product
	StatusCode  int
	RawResponse *http.Response
	// Status Invalid.
	StatusInvalid *shared.StatusInvalid
}
