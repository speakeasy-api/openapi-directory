/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class KgsearchEntitiesSearchQueryParams {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;
    public KgsearchEntitiesSearchQueryParams withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;
    public KgsearchEntitiesSearchQueryParams withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;
    public KgsearchEntitiesSearchQueryParams withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;
    public KgsearchEntitiesSearchQueryParams withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public KgsearchEntitiesSearchQueryParams withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The list of entity id to be used for search instead of query string. To specify multiple ids in the HTTP request, repeat the parameter in the URL as in ...?ids=A&amp;ids=B
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ids")
    public String[] ids;
    public KgsearchEntitiesSearchQueryParams withIds(String[] ids) {
        this.ids = ids;
        return this;
    }
    
    /**
     * Enables indenting of json results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=indent")
    public Boolean indent;
    public KgsearchEntitiesSearchQueryParams withIndent(Boolean indent) {
        this.indent = indent;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public KgsearchEntitiesSearchQueryParams withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The list of language codes (defined in ISO 693) to run the query with, e.g. 'en'.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=languages")
    public String[] languages;
    public KgsearchEntitiesSearchQueryParams withLanguages(String[] languages) {
        this.languages = languages;
        return this;
    }
    
    /**
     * Limits the number of entities to be returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public KgsearchEntitiesSearchQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;
    public KgsearchEntitiesSearchQueryParams withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Enables prefix match against names and aliases of entities
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prefix")
    public Boolean prefix;
    public KgsearchEntitiesSearchQueryParams withPrefix(Boolean prefix) {
        this.prefix = prefix;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;
    public KgsearchEntitiesSearchQueryParams withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * The literal query string for search.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query")
    public String query;
    public KgsearchEntitiesSearchQueryParams withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;
    public KgsearchEntitiesSearchQueryParams withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Restricts returned entities with these types, e.g. Person (as defined in http://schema.org/Person). If multiple types are specified, returned entities will contain one or more of these types.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=types")
    public String[] types;
    public KgsearchEntitiesSearchQueryParams withTypes(String[] types) {
        this.types = types;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;
    public KgsearchEntitiesSearchQueryParams withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;
    public KgsearchEntitiesSearchQueryParams withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
}
