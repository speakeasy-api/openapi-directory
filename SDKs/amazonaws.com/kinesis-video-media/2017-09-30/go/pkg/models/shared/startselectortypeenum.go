// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StartSelectorTypeEnum string

const (
	StartSelectorTypeEnumFragmentNumber    StartSelectorTypeEnum = "FRAGMENT_NUMBER"
	StartSelectorTypeEnumServerTimestamp   StartSelectorTypeEnum = "SERVER_TIMESTAMP"
	StartSelectorTypeEnumProducerTimestamp StartSelectorTypeEnum = "PRODUCER_TIMESTAMP"
	StartSelectorTypeEnumNow               StartSelectorTypeEnum = "NOW"
	StartSelectorTypeEnumEarliest          StartSelectorTypeEnum = "EARLIEST"
	StartSelectorTypeEnumContinuationToken StartSelectorTypeEnum = "CONTINUATION_TOKEN"
)

func (e *StartSelectorTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FRAGMENT_NUMBER":
		fallthrough
	case "SERVER_TIMESTAMP":
		fallthrough
	case "PRODUCER_TIMESTAMP":
		fallthrough
	case "NOW":
		fallthrough
	case "EARLIEST":
		fallthrough
	case "CONTINUATION_TOKEN":
		*e = StartSelectorTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSelectorTypeEnum: %s", s)
	}
}
