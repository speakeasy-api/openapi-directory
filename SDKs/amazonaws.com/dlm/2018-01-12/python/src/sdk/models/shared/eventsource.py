"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventparameters as shared_eventparameters
from ..shared import eventsourcevalues_enum as shared_eventsourcevalues_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventSource:
    r"""<b>[Event-based policies only]</b> Specifies an event that activates an event-based policy."""
    
    type: shared_eventsourcevalues_enum.EventSourceValuesEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    parameters: Optional[shared_eventparameters.EventParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Parameters'), 'exclude': lambda f: f is None }})  
    