"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tournament as shared_tournament
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DfsSlateTournament:
    
    operator_tournament_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OperatorTournamentID'), 'exclude': lambda f: f is None }})  
    removed_by_operator: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RemovedByOperator'), 'exclude': lambda f: f is None }})  
    slate_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SlateID'), 'exclude': lambda f: f is None }})  
    slate_tournament_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SlateTournamentID'), 'exclude': lambda f: f is None }})  
    tournament: Optional[shared_tournament.Tournament] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tournament'), 'exclude': lambda f: f is None }})  
    tournament_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TournamentID'), 'exclude': lambda f: f is None }})  
    