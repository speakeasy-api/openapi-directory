// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateContainerServiceXAmzTargetEnum
type UpdateContainerServiceXAmzTargetEnum string

const (
	UpdateContainerServiceXAmzTargetEnumLightsail20161128UpdateContainerService UpdateContainerServiceXAmzTargetEnum = "Lightsail_20161128.UpdateContainerService"
)

func (e *UpdateContainerServiceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Lightsail_20161128.UpdateContainerService":
		*e = UpdateContainerServiceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateContainerServiceXAmzTargetEnum: %s", s)
	}
}

type UpdateContainerServiceHeaders struct {
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateContainerServiceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateContainerServiceRequest struct {
	Headers UpdateContainerServiceHeaders
	Request shared.UpdateContainerServiceRequest `request:"mediaType=application/json"`
}

type UpdateContainerServiceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InvalidInputException
	InvalidInputException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceException
	ServiceException interface{}
	// UnauthenticatedException
	UnauthenticatedException interface{}
	// Success
	UpdateContainerServiceResult *shared.UpdateContainerServiceResult
}
