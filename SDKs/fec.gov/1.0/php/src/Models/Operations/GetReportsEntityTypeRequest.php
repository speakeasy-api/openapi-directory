<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetReportsEntityTypeRequest
{
    /**
     * Amendent types:
     * 
     *     -N   new
     *     -A   amendment
     *     -T   terminated
     *     -C   consolidated
     *     -M   multi-candidate
     *     -S   secondary
     * 
     * NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetReportsEntityTypeAmendmentIndicatorEnum> $amendmentIndicator
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=amendment_indicator')]
    public ?array $amendmentIndicator = null;
    
    /**
     * 
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public string $apiKey;
    
    /**
     * 
     * Unique identifier for the electronic or paper report. This number is used to construct
     * PDF URLs to the original document.
     * 
     * 
     * @var ?array<string> $beginningImageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=beginning_image_number')]
    public ?array $beginningImageNumber = null;
    
    /**
     * 
     * A unique identifier assigned to each candidate registered with the FEC.
     * If a person runs for several offices, that person will have separate candidate IDs for each office.
     * 
     * 
     * @var ?string $candidateId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=candidate_id')]
    public ?string $candidateId = null;
    
    /**
     * 
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     * 
     * @var ?array<string> $committeeId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_id')]
    public ?array $committeeId = null;
    
    /**
     * The one-letter type code of the organization:
     * 
     *         - C communication cost
     *         - D delegate
     *         - E electioneering communication
     *         - H House
     *         - I independent expenditure filer (not a committee)
     *         - N PAC - nonqualified
     *         - O independent expenditure-only (super PACs)
     *         - P presidential
     *         - Q PAC - qualified
     *         - S Senate
     *         - U single candidate independent expenditure
     *         - V PAC with non-contribution account, nonqualified
     *         - W PAC with non-contribution account, qualified
     *         - X party, nonqualified
     *         - Y party, qualified
     *         - Z national party non-federal account
     * 
     * 
     * @var ?array<string> $committeeType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=committee_type')]
    public ?array $committeeType = null;
    
    /**
     * 
     * Filter records to only those that were applicable to a given
     * two-year period.The cycle begins with an odd year and is named
     * for its ending, even year.
     * 
     * 
     * @var ?array<int> $cycle
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cycle')]
    public ?array $cycle = null;
    
    /**
     * Committee groupings based on FEC filing form.                 Choose one of: `presidential`, `pac-party`, `house-senate`, or `ie-only`
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetReportsEntityTypeEntityTypeEnum $entityType
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=entity_type')]
    public GetReportsEntityTypeEntityTypeEnum $entityType;
    
    /**
     * The method used to file with the FEC, either electronic or on paper.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetReportsEntityTypeFilerTypeEnum $filerType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filer_type')]
    public ?GetReportsEntityTypeFilerTypeEnum $filerType = null;
    
    /**
     * 
     * False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.
     * 
     * 
     * @var ?bool $isAmended
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_amended')]
    public ?bool $isAmended = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxCashOnHandEndPeriodAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_cash_on_hand_end_period_amount')]
    public ?string $maxCashOnHandEndPeriodAmount = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxDebtsOwedExpenditures
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_debts_owed_expenditures')]
    public ?string $maxDebtsOwedExpenditures = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxDisbursementsAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_disbursements_amount')]
    public ?string $maxDisbursementsAmount = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxIndependentExpenditures
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_independent_expenditures')]
    public ?string $maxIndependentExpenditures = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxPartyCoordinatedExpenditures
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_party_coordinated_expenditures')]
    public ?string $maxPartyCoordinatedExpenditures = null;
    
    /**
     * 
     * Selects all items received by FEC before this date(MM/DD/YYYY or YYYY-MM-DD)
     * 
     * 
     * @var ?\DateTime $maxReceiptDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_receipt_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxReceiptDate = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxReceiptsAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_receipts_amount')]
    public ?string $maxReceiptsAmount = null;
    
    /**
     * 
     * Filter for all amounts less than a value.
     * 
     * 
     * @var ?string $maxTotalContributions
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_total_contributions')]
    public ?string $maxTotalContributions = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minCashOnHandEndPeriodAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_cash_on_hand_end_period_amount')]
    public ?string $minCashOnHandEndPeriodAmount = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minDebtsOwedAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_debts_owed_amount')]
    public ?string $minDebtsOwedAmount = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minDisbursementsAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_disbursements_amount')]
    public ?string $minDisbursementsAmount = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minIndependentExpenditures
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_independent_expenditures')]
    public ?string $minIndependentExpenditures = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minPartyCoordinatedExpenditures
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_party_coordinated_expenditures')]
    public ?string $minPartyCoordinatedExpenditures = null;
    
    /**
     * 
     * Selects all items received by FEC after this date(MM/DD/YYYY or YYYY-MM-DD)
     * 
     * 
     * @var ?\DateTime $minReceiptDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_receipt_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minReceiptDate = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minReceiptsAmount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_receipts_amount')]
    public ?string $minReceiptsAmount = null;
    
    /**
     * 
     * Filter for all amounts greater than a value.
     * 
     * 
     * @var ?string $minTotalContributions
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_total_contributions')]
    public ?string $minTotalContributions = null;
    
    /**
     * 
     * Report is either new or is the most-recently filed amendment
     * 
     * 
     * @var ?bool $mostRecent
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=most_recent')]
    public ?bool $mostRecent = null;
    
    /**
     * For paginating through results, starting at page 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results returned per page. Defaults to 20.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * 
     * Keyword search for filer name or ID
     * 
     * 
     * @var ?array<string> $qFiler
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q_filer')]
    public ?array $qFiler = null;
    
    /**
     * 
     * Keyword search for spender name or ID
     * 
     * 
     * @var ?array<string> $qSpender
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q_spender')]
    public ?array $qSpender = null;
    
    /**
     * Report type; prefix with "-" to exclude. Name of report where the underlying data comes from:
     * 
     *     - 10D Pre-Election
     *     - 10G Pre-General
     *     - 10P Pre-Primary
     *     - 10R Pre-Run-Off
     *     - 10S Pre-Special
     *     - 12C Pre-Convention
     *     - 12G Pre-General
     *     - 12P Pre-Primary
     *     - 12R Pre-Run-Off
     *     - 12S Pre-Special
     *     - 30D Post-Election
     *     - 30G Post-General
     *     - 30P Post-Primary
     *     - 30R Post-Run-Off
     *     - 30S Post-Special
     *     - 60D Post-Convention
     *     - M1  January Monthly
     *     - M10 October Monthly
     *     - M11 November Monthly
     *     - M12 December Monthly
     *     - M2  February Monthly
     *     - M3  March Monthly
     *     - M4  April Monthly
     *     - M5  May Monthly
     *     - M6  June Monthly
     *     - M7  July Monthly
     *     - M8  August Monthly
     *     - M9  September Monthly
     *     - MY  Mid-Year Report
     *     - Q1  April Quarterly
     *     - Q2  July Quarterly
     *     - Q3  October Quarterly
     *     - TER Termination Report
     *     - YE  Year-End
     *     - ADJ COMP ADJUST AMEND
     *     - CA  COMPREHENSIVE AMEND
     * 
     * 
     * @var ?array<string> $reportType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=report_type')]
    public ?array $reportType = null;
    
    /**
     * 
     * Provide a field to sort by. Use `-` for descending order. ex: `-case_no`
     * 
     * 
     * @var ?array<string> $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?array $sort = null;
    
    /**
     * Hide null values on sorted column(s).
     * 
     * @var ?bool $sortHideNull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_hide_null')]
    public ?bool $sortHideNull = null;
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     * 
     * @var ?bool $sortNullOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_null_only')]
    public ?bool $sortNullOnly = null;
    
    /**
     * Toggle that sorts null values last
     * 
     * @var ?bool $sortNullsLast
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_nulls_last')]
    public ?bool $sortNullsLast = null;
    
    /**
     * 
     * Forms with coverage date - 
     *     year from the coverage ending date.
     * Forms without coverage date - 
     *     year from the receipt date.
     * 
     * 
     * @var ?array<int> $year
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=year')]
    public ?array $year = null;
    
	public function __construct()
	{
		$this->amendmentIndicator = null;
		$this->apiKey = "";
		$this->beginningImageNumber = null;
		$this->candidateId = null;
		$this->committeeId = null;
		$this->committeeType = null;
		$this->cycle = null;
		$this->entityType = \OpenAPI\OpenAPI\Models\Operations\GetReportsEntityTypeEntityTypeEnum::PRESIDENTIAL;
		$this->filerType = null;
		$this->isAmended = null;
		$this->maxCashOnHandEndPeriodAmount = null;
		$this->maxDebtsOwedExpenditures = null;
		$this->maxDisbursementsAmount = null;
		$this->maxIndependentExpenditures = null;
		$this->maxPartyCoordinatedExpenditures = null;
		$this->maxReceiptDate = null;
		$this->maxReceiptsAmount = null;
		$this->maxTotalContributions = null;
		$this->minCashOnHandEndPeriodAmount = null;
		$this->minDebtsOwedAmount = null;
		$this->minDisbursementsAmount = null;
		$this->minIndependentExpenditures = null;
		$this->minPartyCoordinatedExpenditures = null;
		$this->minReceiptDate = null;
		$this->minReceiptsAmount = null;
		$this->minTotalContributions = null;
		$this->mostRecent = null;
		$this->page = null;
		$this->perPage = null;
		$this->qFiler = null;
		$this->qSpender = null;
		$this->reportType = null;
		$this->sort = null;
		$this->sortHideNull = null;
		$this->sortNullOnly = null;
		$this->sortNullsLast = null;
		$this->year = null;
	}
}
