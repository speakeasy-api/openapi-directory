/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LeaderboardEntry - The Leaderboard Entry resource.
 */
public class LeaderboardEntry {
    /**
     * The localized string for the numerical value of this score.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formattedScore")
    public String formattedScore;
    public LeaderboardEntry withFormattedScore(String formattedScore) {
        this.formattedScore = formattedScore;
        return this;
    }
    
    /**
     * The localized string for the rank of this score for this leaderboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formattedScoreRank")
    public String formattedScoreRank;
    public LeaderboardEntry withFormattedScoreRank(String formattedScoreRank) {
        this.formattedScoreRank = formattedScoreRank;
        return this;
    }
    
    /**
     * Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardEntry`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public LeaderboardEntry withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * A Player resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("player")
    public Player player;
    public LeaderboardEntry withPlayer(Player player) {
        this.player = player;
        return this;
    }
    
    /**
     * The rank of this score for this leaderboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scoreRank")
    public String scoreRank;
    public LeaderboardEntry withScoreRank(String scoreRank) {
        this.scoreRank = scoreRank;
        return this;
    }
    
    /**
     * Additional information about the score. Values must contain no more than 64 URI-safe characters as defined by section 2.3 of RFC 3986.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scoreTag")
    public String scoreTag;
    public LeaderboardEntry withScoreTag(String scoreTag) {
        this.scoreTag = scoreTag;
        return this;
    }
    
    /**
     * The numerical value of this score.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scoreValue")
    public String scoreValue;
    public LeaderboardEntry withScoreValue(String scoreValue) {
        this.scoreValue = scoreValue;
        return this;
    }
    
    /**
     * The time span of this high score.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeSpan")
    public LeaderboardEntryTimeSpanEnum timeSpan;
    public LeaderboardEntry withTimeSpan(LeaderboardEntryTimeSpanEnum timeSpan) {
        this.timeSpan = timeSpan;
        return this;
    }
    
    /**
     * The timestamp at which this score was recorded, in milliseconds since the epoch in UTC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("writeTimestampMillis")
    public String writeTimestampMillis;
    public LeaderboardEntry withWriteTimestampMillis(String writeTimestampMillis) {
        this.writeTimestampMillis = writeTimestampMillis;
        return this;
    }
    
}
