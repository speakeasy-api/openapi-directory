"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchWarning:
    
    warning_code: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warning_code') }})
    r"""Code corresponding to the warning"""  
    warning_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warning_description') }})
    r"""Description of the warning"""  
    channel_search_cids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel_search_cids'), 'exclude': lambda f: f is None }})
    r"""Channel CIDs for the searched channels"""  
    channel_search_count: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel_search_count'), 'exclude': lambda f: f is None }})
    r"""Number of channels searched"""  
    