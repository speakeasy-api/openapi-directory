/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateImagePipelineRequestBody {
    /**
     * The idempotency token used to make this request idempotent.
     */
    @JsonProperty("clientToken")
    public String clientToken;
    public UpdateImagePipelineRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the container pipeline to update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerRecipeArn")
    public String containerRecipeArn;
    public UpdateImagePipelineRequestBody withContainerRecipeArn(String containerRecipeArn) {
        this.containerRecipeArn = containerRecipeArn;
        return this;
    }
    
    /**
     * The description of the image pipeline.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public UpdateImagePipelineRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images updated by this image pipeline.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distributionConfigurationArn")
    public String distributionConfigurationArn;
    public UpdateImagePipelineRequestBody withDistributionConfigurationArn(String distributionConfigurationArn) {
        this.distributionConfigurationArn = distributionConfigurationArn;
        return this;
    }
    
    /**
     *  Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enhancedImageMetadataEnabled")
    public Boolean enhancedImageMetadataEnabled;
    public UpdateImagePipelineRequestBody withEnhancedImageMetadataEnabled(Boolean enhancedImageMetadataEnabled) {
        this.enhancedImageMetadataEnabled = enhancedImageMetadataEnabled;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the image pipeline that you want to update.
     */
    @JsonProperty("imagePipelineArn")
    public String imagePipelineArn;
    public UpdateImagePipelineRequestBody withImagePipelineArn(String imagePipelineArn) {
        this.imagePipelineArn = imagePipelineArn;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the image recipe that will be used to configure images updated by this image pipeline.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageRecipeArn")
    public String imageRecipeArn;
    public UpdateImagePipelineRequestBody withImageRecipeArn(String imageRecipeArn) {
        this.imageRecipeArn = imageRecipeArn;
        return this;
    }
    
    /**
     * Configure image tests for your pipeline build. Tests run after building the image, to verify that the AMI or container image is valid before distributing it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageTestsConfiguration")
    public UpdateImagePipelineRequestBodyImageTestsConfiguration imageTestsConfiguration;
    public UpdateImagePipelineRequestBody withImageTestsConfiguration(UpdateImagePipelineRequestBodyImageTestsConfiguration imageTestsConfiguration) {
        this.imageTestsConfiguration = imageTestsConfiguration;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images updated by this image pipeline.
     */
    @JsonProperty("infrastructureConfigurationArn")
    public String infrastructureConfigurationArn;
    public UpdateImagePipelineRequestBody withInfrastructureConfigurationArn(String infrastructureConfigurationArn) {
        this.infrastructureConfigurationArn = infrastructureConfigurationArn;
        return this;
    }
    
    /**
     * A schedule configures how often and when a pipeline will automatically create a new image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public UpdateImagePipelineRequestBodySchedule schedule;
    public UpdateImagePipelineRequestBody withSchedule(UpdateImagePipelineRequestBodySchedule schedule) {
        this.schedule = schedule;
        return this;
    }
    
    /**
     * The status of the image pipeline.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public UpdateImagePipelineRequestBodyStatusEnum status;
    public UpdateImagePipelineRequestBody withStatus(UpdateImagePipelineRequestBodyStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
