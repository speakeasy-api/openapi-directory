"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amplitudeconnectorprofilecredentials as shared_amplitudeconnectorprofilecredentials
from ..shared import customconnectorprofilecredentials as shared_customconnectorprofilecredentials
from ..shared import datadogconnectorprofilecredentials as shared_datadogconnectorprofilecredentials
from ..shared import dynatraceconnectorprofilecredentials as shared_dynatraceconnectorprofilecredentials
from ..shared import googleanalyticsconnectorprofilecredentials as shared_googleanalyticsconnectorprofilecredentials
from ..shared import honeycodeconnectorprofilecredentials as shared_honeycodeconnectorprofilecredentials
from ..shared import infornexusconnectorprofilecredentials as shared_infornexusconnectorprofilecredentials
from ..shared import marketoconnectorprofilecredentials as shared_marketoconnectorprofilecredentials
from ..shared import pardotconnectorprofilecredentials as shared_pardotconnectorprofilecredentials
from ..shared import redshiftconnectorprofilecredentials as shared_redshiftconnectorprofilecredentials
from ..shared import salesforceconnectorprofilecredentials as shared_salesforceconnectorprofilecredentials
from ..shared import sapodataconnectorprofilecredentials as shared_sapodataconnectorprofilecredentials
from ..shared import servicenowconnectorprofilecredentials as shared_servicenowconnectorprofilecredentials
from ..shared import singularconnectorprofilecredentials as shared_singularconnectorprofilecredentials
from ..shared import slackconnectorprofilecredentials as shared_slackconnectorprofilecredentials
from ..shared import snowflakeconnectorprofilecredentials as shared_snowflakeconnectorprofilecredentials
from ..shared import trendmicroconnectorprofilecredentials as shared_trendmicroconnectorprofilecredentials
from ..shared import veevaconnectorprofilecredentials as shared_veevaconnectorprofilecredentials
from ..shared import zendeskconnectorprofilecredentials as shared_zendeskconnectorprofilecredentials
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectorProfileCredentials:
    r"""The connector-specific credentials required by a connector."""
    
    amplitude: Optional[shared_amplitudeconnectorprofilecredentials.AmplitudeConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Amplitude'), 'exclude': lambda f: f is None }})  
    custom_connector: Optional[shared_customconnectorprofilecredentials.CustomConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomConnector'), 'exclude': lambda f: f is None }})
    r"""The connector-specific profile credentials that are required when using the custom connector."""  
    datadog: Optional[shared_datadogconnectorprofilecredentials.DatadogConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Datadog'), 'exclude': lambda f: f is None }})  
    dynatrace: Optional[shared_dynatraceconnectorprofilecredentials.DynatraceConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Dynatrace'), 'exclude': lambda f: f is None }})  
    google_analytics: Optional[shared_googleanalyticsconnectorprofilecredentials.GoogleAnalyticsConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GoogleAnalytics'), 'exclude': lambda f: f is None }})  
    honeycode: Optional[shared_honeycodeconnectorprofilecredentials.HoneycodeConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Honeycode'), 'exclude': lambda f: f is None }})  
    infor_nexus: Optional[shared_infornexusconnectorprofilecredentials.InforNexusConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InforNexus'), 'exclude': lambda f: f is None }})  
    marketo: Optional[shared_marketoconnectorprofilecredentials.MarketoConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Marketo'), 'exclude': lambda f: f is None }})  
    pardot: Optional[shared_pardotconnectorprofilecredentials.PardotConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Pardot'), 'exclude': lambda f: f is None }})  
    redshift: Optional[shared_redshiftconnectorprofilecredentials.RedshiftConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Redshift'), 'exclude': lambda f: f is None }})  
    salesforce: Optional[shared_salesforceconnectorprofilecredentials.SalesforceConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Salesforce'), 'exclude': lambda f: f is None }})  
    sapo_data: Optional[shared_sapodataconnectorprofilecredentials.SAPODataConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SAPOData'), 'exclude': lambda f: f is None }})
    r"""The connector-specific profile credentials required when using SAPOData."""  
    service_now: Optional[shared_servicenowconnectorprofilecredentials.ServiceNowConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceNow'), 'exclude': lambda f: f is None }})  
    singular: Optional[shared_singularconnectorprofilecredentials.SingularConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Singular'), 'exclude': lambda f: f is None }})  
    slack: Optional[shared_slackconnectorprofilecredentials.SlackConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Slack'), 'exclude': lambda f: f is None }})  
    snowflake: Optional[shared_snowflakeconnectorprofilecredentials.SnowflakeConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Snowflake'), 'exclude': lambda f: f is None }})  
    trendmicro: Optional[shared_trendmicroconnectorprofilecredentials.TrendmicroConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Trendmicro'), 'exclude': lambda f: f is None }})  
    veeva: Optional[shared_veevaconnectorprofilecredentials.VeevaConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Veeva'), 'exclude': lambda f: f is None }})  
    zendesk: Optional[shared_zendeskconnectorprofilecredentials.ZendeskConnectorProfileCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Zendesk'), 'exclude': lambda f: f is None }})  
    