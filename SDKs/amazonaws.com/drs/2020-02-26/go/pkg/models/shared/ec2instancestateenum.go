// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Ec2InstanceStateEnum string

const (
	Ec2InstanceStateEnumPending      Ec2InstanceStateEnum = "PENDING"
	Ec2InstanceStateEnumRunning      Ec2InstanceStateEnum = "RUNNING"
	Ec2InstanceStateEnumStopping     Ec2InstanceStateEnum = "STOPPING"
	Ec2InstanceStateEnumStopped      Ec2InstanceStateEnum = "STOPPED"
	Ec2InstanceStateEnumShuttingDown Ec2InstanceStateEnum = "SHUTTING-DOWN"
	Ec2InstanceStateEnumTerminated   Ec2InstanceStateEnum = "TERMINATED"
	Ec2InstanceStateEnumNotFound     Ec2InstanceStateEnum = "NOT_FOUND"
)

func (e *Ec2InstanceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "SHUTTING-DOWN":
		fallthrough
	case "TERMINATED":
		fallthrough
	case "NOT_FOUND":
		*e = Ec2InstanceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for Ec2InstanceStateEnum: %s", s)
	}
}
