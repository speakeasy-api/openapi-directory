/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class AssumeDecoratedRoleWithSAMLRequestBody extends SpeakeasyBase {
  /**
   * The time period, between 900 and 43,200 seconds, for the timeout of the temporary credentials.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DurationSeconds" })
  durationSeconds?: number;

  /**
   * The Amazon Resource Name (ARN) of the SAML provider in IAM that describes the IdP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PrincipalArn" })
  principalArn: string;

  /**
   * The role that represents an IAM principal whose scope down policy allows it to call credential vending APIs such as <code>GetTemporaryTableCredentials</code>. The caller must also have iam:PassRole permission on this role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  /**
   * A SAML assertion consisting of an assertion statement for the user who needs temporary credentials. This must match the SAML assertion that was issued to IAM. This must be Base64 encoded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SAMLAssertion" })
  samlAssertion: string;
}

export class AssumeDecoratedRoleWithSAMLRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: AssumeDecoratedRoleWithSAMLRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class AssumeDecoratedRoleWithSAMLResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  assumeDecoratedRoleWithSAMLResponse?: shared.AssumeDecoratedRoleWithSAMLResponse;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * EntityNotFoundException
   */
  @SpeakeasyMetadata()
  entityNotFoundException?: any;

  /**
   * InternalServiceException
   */
  @SpeakeasyMetadata()
  internalServiceException?: any;

  /**
   * InvalidInputException
   */
  @SpeakeasyMetadata()
  invalidInputException?: any;

  /**
   * OperationTimeoutException
   */
  @SpeakeasyMetadata()
  operationTimeoutException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
