// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type CatalogCollectionVisibilityEnum string

const (
	CatalogCollectionVisibilityEnumPrivate CatalogCollectionVisibilityEnum = "private"
	CatalogCollectionVisibilityEnumPublic  CatalogCollectionVisibilityEnum = "public"
)

func (e *CatalogCollectionVisibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private":
		fallthrough
	case "public":
		*e = CatalogCollectionVisibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CatalogCollectionVisibilityEnum: %s", s)
	}
}

// CatalogCollection - Catalog collection
type CatalogCollection struct {
	// Metadata about an item that is part of a collection
	CoverAsset  *CatalogCollectionItem `json:"cover_asset,omitempty"`
	CreatedTime time.Time              `json:"created_time"`
	ID          string                 `json:"id"`
	Name        string                 `json:"name"`
	// List of role assignments for a catalog collection
	RoleAssignments CatalogCollectionRoleAssignments `json:"role_assignments"`
	TotalItemCount  float64                          `json:"total_item_count"`
	UpdatedTime     time.Time                        `json:"updated_time"`
	Visibility      CatalogCollectionVisibilityEnum  `json:"visibility"`
}
