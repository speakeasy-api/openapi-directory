"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import callanalyticsjobsettings as shared_callanalyticsjobsettings
from ..shared import channeldefinition as shared_channeldefinition
from ..shared import media as shared_media
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartCallAnalyticsJobRequest:
    
    call_analytics_job_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CallAnalyticsJobName') }})  
    media: shared_media.Media = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Media') }})  
    channel_definitions: Optional[list[shared_channeldefinition.ChannelDefinition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChannelDefinitions'), 'exclude': lambda f: f is None }})  
    data_access_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataAccessRoleArn'), 'exclude': lambda f: f is None }})  
    output_encryption_kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputEncryptionKMSKeyId'), 'exclude': lambda f: f is None }})  
    output_location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputLocation'), 'exclude': lambda f: f is None }})  
    settings: Optional[shared_callanalyticsjobsettings.CallAnalyticsJobSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Settings'), 'exclude': lambda f: f is None }})  
    