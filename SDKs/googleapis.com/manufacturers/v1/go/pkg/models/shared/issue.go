// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// IssueResolutionEnum - What needs to happen to resolve the issue.
type IssueResolutionEnum string

const (
	IssueResolutionEnumResolutionUnspecified IssueResolutionEnum = "RESOLUTION_UNSPECIFIED"
	IssueResolutionEnumUserAction            IssueResolutionEnum = "USER_ACTION"
	IssueResolutionEnumPendingProcessing     IssueResolutionEnum = "PENDING_PROCESSING"
)

func (e IssueResolutionEnum) ToPointer() *IssueResolutionEnum {
	return &e
}

func (e *IssueResolutionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RESOLUTION_UNSPECIFIED":
		fallthrough
	case "USER_ACTION":
		fallthrough
	case "PENDING_PROCESSING":
		*e = IssueResolutionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IssueResolutionEnum: %v", v)
	}
}

// IssueSeverityEnum - The severity of the issue.
type IssueSeverityEnum string

const (
	IssueSeverityEnumSeverityUnspecified IssueSeverityEnum = "SEVERITY_UNSPECIFIED"
	IssueSeverityEnumError               IssueSeverityEnum = "ERROR"
	IssueSeverityEnumWarning             IssueSeverityEnum = "WARNING"
	IssueSeverityEnumInfo                IssueSeverityEnum = "INFO"
)

func (e IssueSeverityEnum) ToPointer() *IssueSeverityEnum {
	return &e
}

func (e *IssueSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "ERROR":
		fallthrough
	case "WARNING":
		fallthrough
	case "INFO":
		*e = IssueSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IssueSeverityEnum: %v", v)
	}
}

// Issue - Product issue.
type Issue struct {
	// If present, the attribute that triggered the issue. For more information about attributes, see https://support.google.com/manufacturers/answer/6124116.
	Attribute *string `json:"attribute,omitempty"`
	// Longer description of the issue focused on how to resolve it.
	Description *string `json:"description,omitempty"`
	// The destination this issue applies to.
	Destination *string `json:"destination,omitempty"`
	// What needs to happen to resolve the issue.
	Resolution *IssueResolutionEnum `json:"resolution,omitempty"`
	// The severity of the issue.
	Severity *IssueSeverityEnum `json:"severity,omitempty"`
	// The timestamp when this issue appeared.
	Timestamp *string `json:"timestamp,omitempty"`
	// Short title describing the nature of the issue.
	Title *string `json:"title,omitempty"`
	// The server-generated type of the issue, for example, “INCORRECT_TEXT_FORMATTING”, “IMAGE_NOT_SERVEABLE”, etc.
	Type *string `json:"type,omitempty"`
}
