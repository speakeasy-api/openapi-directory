"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import netlicensing as shared_netlicensing
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateProductSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class CreateProductRequestBodyVatModeEnum(str, Enum):
    r"""Vat mode for Product. Supported types: GROSS, NET"""
    GROSS = 'GROSS'
    NET = 'NET'


@dataclasses.dataclass
class CreateProductRequestBody:
    
    active: bool = dataclasses.field(metadata={'form': { 'field_name': 'active' }})
    r"""If set to 'false', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses."""  
    name: str = dataclasses.field(metadata={'form': { 'field_name': 'name' }})
    r"""Product name. Together with the version identifies the Product for the end customer."""  
    version: str = dataclasses.field(metadata={'form': { 'field_name': 'version' }})
    r"""Product version. Convenience parameter, additional to the Product name."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'description' }})
    r"""Product description."""  
    licensee_auto_create: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'licenseeAutoCreate' }})
    r"""If set to 'true', non-existing Licensees will be created at first validation attempt."""  
    licensing_info: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'licensingInfo' }})
    r"""Licensing information."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'number' }})
    r"""Unique number that identifies the Product. Vendor can assign this number when creating a Product or let NetLicensing generate one."""  
    vat_mode: Optional[CreateProductRequestBodyVatModeEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'vatMode' }})
    r"""Vat mode for Product. Supported types: GROSS, NET"""  
    

@dataclasses.dataclass
class CreateProductResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    netlicensing: Optional[shared_netlicensing.Netlicensing] = dataclasses.field(default=None)
    r"""Successful request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    