// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TextTrackTypeEnum - The type of the text track:
//
// Option descriptions:
//   - `captions` - The text track is for captions.
//   - `subtitles` - The text track is for subtitles.
type TextTrackTypeEnum string

const (
	TextTrackTypeEnumCaptions  TextTrackTypeEnum = "captions"
	TextTrackTypeEnumSubtitles TextTrackTypeEnum = "subtitles"
)

func (e *TextTrackTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "captions":
		fallthrough
	case "subtitles":
		*e = TextTrackTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TextTrackTypeEnum: %s", s)
	}
}

// TextTrack - The text track was added.
type TextTrack struct {
	// Whether this text track is active.
	Active bool `json:"active"`
	// The read-only URL of the text track file, intended for use with HLS playback.
	HlsLink string `json:"hls_link"`
	// The time in ISO 8601 format when the read-only HLS playback text track file expires.
	HlsLinkExpiresTime string `json:"hls_link_expires_time"`
	// The language code for this text track. To see a full list, request
	// `/languages?filter=texttrack`.
	Language string `json:"language"`
	// The read-only URL of the text track file. You can upload to this link when you create it for the first time.
	Link string `json:"link"`
	// The time in ISO 8601 format when the text track link expires.
	LinkExpiresTime string `json:"link_expires_time"`
	// The descriptive name of this text track.
	Name string `json:"name"`
	// The type of the text track:
	//
	// Option descriptions:
	//  * `captions` - The text track is for captions.
	//  * `subtitles` - The text track is for subtitles.
	//
	Type TextTrackTypeEnum `json:"type"`
	// The relative URI of the text track.
	URI string `json:"uri"`
}
