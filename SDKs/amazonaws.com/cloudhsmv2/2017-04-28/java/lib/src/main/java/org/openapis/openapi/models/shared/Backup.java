/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Backup - Contains information about a backup of an AWS CloudHSM cluster. All backup objects contain the &lt;code&gt;BackupId&lt;/code&gt;, &lt;code&gt;BackupState&lt;/code&gt;, &lt;code&gt;ClusterId&lt;/code&gt;, and &lt;code&gt;CreateTimestamp&lt;/code&gt; parameters. Backups that were copied into a destination region additionally contain the &lt;code&gt;CopyTimestamp&lt;/code&gt;, &lt;code&gt;SourceBackup&lt;/code&gt;, &lt;code&gt;SourceCluster&lt;/code&gt;, and &lt;code&gt;SourceRegion&lt;/code&gt; parameters. A backup that is pending deletion will include the &lt;code&gt;DeleteTimestamp&lt;/code&gt; parameter.
 */
public class Backup {
    @JsonProperty("BackupId")
    public String backupId;
    public Backup withBackupId(String backupId) {
        this.backupId = backupId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BackupState")
    public BackupStateEnum backupState;
    public Backup withBackupState(BackupStateEnum backupState) {
        this.backupState = backupState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClusterId")
    public String clusterId;
    public Backup withClusterId(String clusterId) {
        this.clusterId = clusterId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CopyTimestamp")
    public OffsetDateTime copyTimestamp;
    public Backup withCopyTimestamp(OffsetDateTime copyTimestamp) {
        this.copyTimestamp = copyTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreateTimestamp")
    public OffsetDateTime createTimestamp;
    public Backup withCreateTimestamp(OffsetDateTime createTimestamp) {
        this.createTimestamp = createTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("DeleteTimestamp")
    public OffsetDateTime deleteTimestamp;
    public Backup withDeleteTimestamp(OffsetDateTime deleteTimestamp) {
        this.deleteTimestamp = deleteTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NeverExpires")
    public Boolean neverExpires;
    public Backup withNeverExpires(Boolean neverExpires) {
        this.neverExpires = neverExpires;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceBackup")
    public String sourceBackup;
    public Backup withSourceBackup(String sourceBackup) {
        this.sourceBackup = sourceBackup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceCluster")
    public String sourceCluster;
    public Backup withSourceCluster(String sourceCluster) {
        this.sourceCluster = sourceCluster;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceRegion")
    public String sourceRegion;
    public Backup withSourceRegion(String sourceRegion) {
        this.sourceRegion = sourceRegion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TagList")
    public Tag[] tagList;
    public Backup withTagList(Tag[] tagList) {
        this.tagList = tagList;
        return this;
    }
    
}
