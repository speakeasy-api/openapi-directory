"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import model as shared_model
from ..shared import modeldashboardendpoint as shared_modeldashboardendpoint
from ..shared import modeldashboardmodelcard as shared_modeldashboardmodelcard
from ..shared import modeldashboardmonitoringschedule as shared_modeldashboardmonitoringschedule
from ..shared import transformjob as shared_transformjob
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ModelDashboardModel:
    r"""A model displayed in the Amazon SageMaker Model Dashboard."""
    
    endpoints: Optional[list[shared_modeldashboardendpoint.ModelDashboardEndpoint]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Endpoints'), 'exclude': lambda f: f is None }})  
    last_batch_transform_job: Optional[shared_transformjob.TransformJob] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastBatchTransformJob'), 'exclude': lambda f: f is None }})
    r"""A batch transform job. For information about SageMaker batch transform, see <a href=\\"https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform.html\\">Use Batch Transform</a>."""  
    model: Optional[shared_model.Model] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Model'), 'exclude': lambda f: f is None }})  
    model_card: Optional[shared_modeldashboardmodelcard.ModelDashboardModelCard] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelCard'), 'exclude': lambda f: f is None }})  
    monitoring_schedules: Optional[list[shared_modeldashboardmonitoringschedule.ModelDashboardMonitoringSchedule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringSchedules'), 'exclude': lambda f: f is None }})  
    