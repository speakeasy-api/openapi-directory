// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ActivityTypeEnum - Currently there are two available activity types; 'translated', 'proofread'.
type ActivityTypeEnum string

const (
	ActivityTypeEnumTranslated ActivityTypeEnum = "translated"
	ActivityTypeEnumProofread  ActivityTypeEnum = "proofread"
)

func (e *ActivityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "translated":
		fallthrough
	case "proofread":
		*e = ActivityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivityTypeEnum: %s", s)
	}
}

// Activity - Activity model
type Activity struct {
	// Unix epoch time
	ActivityAt *int64         `json:"activity_at,omitempty"`
	ID         *int64         `json:"id,omitempty"`
	Links      *ActivityLinks `json:"links,omitempty"`
	// Source text
	SourceText *string `json:"source_text,omitempty"`
	// Target text of the activity, which is actually the translation of the source text.
	TargetText *string `json:"target_text,omitempty"`
	// Unique identifier of the translator/proofreader of this activity.
	Translator *int64 `json:"translator,omitempty"`
	// Currently there are two available activity types; 'translated', 'proofread'.
	Type *ActivityTypeEnum `json:"type,omitempty"`
}
