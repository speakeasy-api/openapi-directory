// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUserTagsTagIDShowsEmbedEnum - Embed full show info
type GetUserTagsTagIDShowsEmbedEnum string

const (
	GetUserTagsTagIDShowsEmbedEnumShow GetUserTagsTagIDShowsEmbedEnum = "show"
)

func (e *GetUserTagsTagIDShowsEmbedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "show":
		*e = GetUserTagsTagIDShowsEmbedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserTagsTagIDShowsEmbedEnum: %s", s)
	}
}

type GetUserTagsTagIDShowsRequest struct {
	// Embed full show info
	Embed *GetUserTagsTagIDShowsEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
	TagID int64                           `pathParam:"style=simple,explode=false,name=tag_id"`
}

type GetUserTagsTagIDShowsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of tagged shows
	TagInstances []shared.TagInstance
}
