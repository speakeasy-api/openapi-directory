"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InvoiceItemAPIModel:
    
    cost: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Cost'), 'exclude': lambda f: f is None }})
    r"""Amount per unit"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""Additional description attached to the invoice item"""  
    discount_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DiscountAmount'), 'exclude': lambda f: f is None }})
    r"""Amount that goes as a discount"""  
    discount_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DiscountPercentage'), 'exclude': lambda f: f is None }})
    r"""Discount percentage for the overall amount"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""Id of invoice item"""  
    quantity: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Quantity'), 'exclude': lambda f: f is None }})
    r"""Quantity in total used for the work type"""  
    sub_total_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubTotalAmount'), 'exclude': lambda f: f is None }})
    r"""Sub-Total amount of the invoice item (Amount without tax)"""  
    tax_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxAmount'), 'exclude': lambda f: f is None }})
    r"""Amount that goes to the tax"""  
    tax_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxId'), 'exclude': lambda f: f is None }})
    r"""Tax applied on the item"""  
    tax_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxPercentage'), 'exclude': lambda f: f is None }})
    r"""Task percentage. Ex: 18%"""  
    total_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalAmount'), 'exclude': lambda f: f is None }})
    r"""Total amount of the invoice item"""  
    work_type_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkTypeId'), 'exclude': lambda f: f is None }})
    r"""Work type (Name of the service)"""  
    