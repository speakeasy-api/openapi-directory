/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETModifyVpcPeeringConnectionOptionsQueryParams {
    /**
     * The VPC peering connection options for the accepter VPC.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AccepterPeeringConnectionOptions")
    public GETModifyVpcPeeringConnectionOptionsAccepterPeeringConnectionOptions accepterPeeringConnectionOptions;
    public GETModifyVpcPeeringConnectionOptionsQueryParams withAccepterPeeringConnectionOptions(GETModifyVpcPeeringConnectionOptionsAccepterPeeringConnectionOptions accepterPeeringConnectionOptions) {
        this.accepterPeeringConnectionOptions = accepterPeeringConnectionOptions;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETModifyVpcPeeringConnectionOptionsActionEnum action;
    public GETModifyVpcPeeringConnectionOptionsQueryParams withAction(GETModifyVpcPeeringConnectionOptionsActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETModifyVpcPeeringConnectionOptionsQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The VPC peering connection options for the requester VPC.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RequesterPeeringConnectionOptions")
    public GETModifyVpcPeeringConnectionOptionsRequesterPeeringConnectionOptions requesterPeeringConnectionOptions;
    public GETModifyVpcPeeringConnectionOptionsQueryParams withRequesterPeeringConnectionOptions(GETModifyVpcPeeringConnectionOptionsRequesterPeeringConnectionOptions requesterPeeringConnectionOptions) {
        this.requesterPeeringConnectionOptions = requesterPeeringConnectionOptions;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETModifyVpcPeeringConnectionOptionsVersionEnum version;
    public GETModifyVpcPeeringConnectionOptionsQueryParams withVersion(GETModifyVpcPeeringConnectionOptionsVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * The ID of the VPC peering connection.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpcPeeringConnectionId")
    public String vpcPeeringConnectionId;
    public GETModifyVpcPeeringConnectionOptionsQueryParams withVpcPeeringConnectionId(String vpcPeeringConnectionId) {
        this.vpcPeeringConnectionId = vpcPeeringConnectionId;
        return this;
    }
    
}
