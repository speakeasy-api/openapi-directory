/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attribute } from "./attribute";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about an Amazon Inspector assessment template. This data type is used as the response element in the <a>DescribeAssessmentTemplates</a> action.
 */
export class AssessmentTemplate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentRunCount" })
  assessmentRunCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentTargetArn" })
  assessmentTargetArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "durationInSeconds" })
  durationInSeconds: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lastAssessmentRunArn" })
  lastAssessmentRunArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rulesPackageArns" })
  rulesPackageArns: string[];

  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "userAttributesForFindings" })
  @Type(() => Attribute)
  userAttributesForFindings: Attribute[];
}
