"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import capturecontenttypeheader as shared_capturecontenttypeheader
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InferenceExperimentDataStorageConfig:
    r"""The Amazon S3 location and configuration for storing inference request and response data."""
    
    destination: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Destination') }})  
    content_type: Optional[shared_capturecontenttypeheader.CaptureContentTypeHeader] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContentType'), 'exclude': lambda f: f is None }})
    r"""Configuration specifying how to treat different headers. If no headers are specified SageMaker will by default base64 encode when capturing the data."""  
    kms_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KmsKey'), 'exclude': lambda f: f is None }})  
    