/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Container for the finance information related to the taxation item.
 *
 * @remarks
 *
 */
export class POSTTaxationItemForDMTypeFinanceInformation extends SpeakeasyBase {
  /**
   * The accounting code for the sales taxes payable.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "salesTaxPayableAccountingCode" })
  salesTaxPayableAccountingCode?: string;
}

/**
 * The type of the tax rate applied to the debit memo.
 *
 * @remarks
 *
 */
export enum POSTTaxationItemForDMTypeTaxRateTypeEnum {
  Percentage = "Percentage",
  FlatFee = "FlatFee",
}

/**
 * Container for custom fields of a Taxation Item object.
 *
 * @remarks
 *
 */
export class POSTTaxationItemForDMType extends SpeakeasyBase {
  /**
   * The amount of taxes or VAT for which the customer has an exemption.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptAmount" })
  exemptAmount?: number;

  /**
   * Container for the finance information related to the taxation item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "financeInformation" })
  @Type(() => POSTTaxationItemForDMTypeFinanceInformation)
  financeInformation?: POSTTaxationItemForDMTypeFinanceInformation;

  /**
   * The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jurisdiction" })
  jurisdiction: string;

  /**
   * The identifier for the location based on the value of the `taxCode` field.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationCode" })
  locationCode?: string;

  /**
   * The ID of the debit memo that the taxation item is created for.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memoItemId" })
  memoItemId?: string;

  /**
   * The name of the taxation item.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The ID of the taxation item of the invoice, which the debit memo is created from.
   *
   * @remarks
   *
   * If you want to use this REST API to create taxation items for a debit memo created from an invoice, the taxation items of the invoice must be created or imported through the SOAP API call.
   *
   * **Note:**
   *   - This field is only used if the debit memo is created from an invoice.
   *   - If you do not contain this field in the request body, Zuora will automatically set a value for the `sourceTaxItemId` field based on the tax location code, tax jurisdiction, and tax rate.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceTaxItemId" })
  sourceTaxItemId?: string;

  /**
   * The amount of the tax applied to the debit memo.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxAmount" })
  taxAmount: number;

  /**
   * The tax code identifies which tax rules and tax rates to apply to a specific debit memo.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxCode" })
  taxCode?: string;

  /**
   * The description of the tax code.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxCodeDescription" })
  taxCodeDescription?: string;

  /**
   * The date when the tax is applied to the debit memo.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  taxDate?: Date;

  /**
   * The tax rate applied to the debit memo.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxRate" })
  taxRate: number;

  /**
   * The description of the tax rate.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxRateDescription" })
  taxRateDescription?: string;

  /**
   * The type of the tax rate applied to the debit memo.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxRateType" })
  taxRateType: POSTTaxationItemForDMTypeTaxRateTypeEnum;
}
