// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PrivateInstitutionAccountsListSecurity struct {
	OAuth2 shared.SchemeOAuth2 `security:"scheme,type=oauth2"`
}

type PrivateInstitutionAccountsListQueryParams struct {
	// Filter by email
	Email *string `queryParam:"style=form,explode=true,name=email"`
	// Retrieve accounts with an ID greater or equal to the specified value
	IDGte *int64 `queryParam:"style=form,explode=true,name=id_gte"`
	// Retrieve accounts with an ID lower or equal to the specified value
	IDLte *int64 `queryParam:"style=form,explode=true,name=id_lte"`
	// Filter by institution_user_id
	InstitutionUserID *string `queryParam:"style=form,explode=true,name=institution_user_id"`
	// Filter by active status
	IsActive *int64 `queryParam:"style=form,explode=true,name=is_active"`
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Page number. Used for pagination with page_size
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

type PrivateInstitutionAccountsListRequest struct {
	QueryParams PrivateInstitutionAccountsListQueryParams
	Security    PrivateInstitutionAccountsListSecurity
}

type PrivateInstitutionAccountsListResponse struct {
	ContentType string
	// Forbidden
	ErrorMessage *shared.ErrorMessage
	// OK. An array of Accounts
	ShortAccounts []shared.ShortAccount
	StatusCode    int
	RawResponse   *http.Response
}
