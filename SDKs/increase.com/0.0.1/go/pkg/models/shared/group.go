// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// GroupAchDebitStatusEnum - If the Group is allowed to create ACH debits.
type GroupAchDebitStatusEnum string

const (
	GroupAchDebitStatusEnumDisabled GroupAchDebitStatusEnum = "disabled"
	GroupAchDebitStatusEnumEnabled  GroupAchDebitStatusEnum = "enabled"
)

func (e *GroupAchDebitStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "disabled":
		fallthrough
	case "enabled":
		*e = GroupAchDebitStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupAchDebitStatusEnum: %s", s)
	}
}

// GroupActivationStatusEnum - If the Group is activated or not.
type GroupActivationStatusEnum string

const (
	GroupActivationStatusEnumUnactivated GroupActivationStatusEnum = "unactivated"
	GroupActivationStatusEnumActivated   GroupActivationStatusEnum = "activated"
)

func (e *GroupActivationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "unactivated":
		fallthrough
	case "activated":
		*e = GroupActivationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupActivationStatusEnum: %s", s)
	}
}

// GroupTypeEnum - A constant representing the object's type. For this resource it will always be `group`.
type GroupTypeEnum string

const (
	GroupTypeEnumGroup GroupTypeEnum = "group"
)

func (e *GroupTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "group":
		*e = GroupTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupTypeEnum: %s", s)
	}
}

// Group - Groups represent organizations using Increase. You can retrieve information about your own organization via the API, or (more commonly) OAuth platforms can retrieve information about the organizations that have granted them access.
type Group struct {
	// If the Group is allowed to create ACH debits.
	AchDebitStatus GroupAchDebitStatusEnum `json:"ach_debit_status"`
	// If the Group is activated or not.
	ActivationStatus GroupActivationStatusEnum `json:"activation_status"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Group was created.
	CreatedAt time.Time `json:"created_at"`
	// The Group identifier.
	ID string `json:"id"`
	// A constant representing the object's type. For this resource it will always be `group`.
	Type GroupTypeEnum `json:"type"`
}
