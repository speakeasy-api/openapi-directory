// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TrustStateEnum string

const (
	TrustStateEnumCreating     TrustStateEnum = "Creating"
	TrustStateEnumCreated      TrustStateEnum = "Created"
	TrustStateEnumVerifying    TrustStateEnum = "Verifying"
	TrustStateEnumVerifyFailed TrustStateEnum = "VerifyFailed"
	TrustStateEnumVerified     TrustStateEnum = "Verified"
	TrustStateEnumUpdating     TrustStateEnum = "Updating"
	TrustStateEnumUpdateFailed TrustStateEnum = "UpdateFailed"
	TrustStateEnumUpdated      TrustStateEnum = "Updated"
	TrustStateEnumDeleting     TrustStateEnum = "Deleting"
	TrustStateEnumDeleted      TrustStateEnum = "Deleted"
	TrustStateEnumFailed       TrustStateEnum = "Failed"
)

func (e *TrustStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Creating":
		fallthrough
	case "Created":
		fallthrough
	case "Verifying":
		fallthrough
	case "VerifyFailed":
		fallthrough
	case "Verified":
		fallthrough
	case "Updating":
		fallthrough
	case "UpdateFailed":
		fallthrough
	case "Updated":
		fallthrough
	case "Deleting":
		fallthrough
	case "Deleted":
		fallthrough
	case "Failed":
		*e = TrustStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TrustStateEnum: %s", s)
	}
}
