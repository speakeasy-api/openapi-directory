<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TimelineCommentEvent - Timeline Comment Event
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TimelineCommentEvent
{
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleUser $actor
     */
	#[\JMS\Serializer\Annotation\SerializedName('actor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleUser')]
    public SimpleUser $actor;
    
    /**
     * How the author is associated with the repository.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AuthorAssociationEnum $authorAssociation
     */
	#[\JMS\Serializer\Annotation\SerializedName('author_association')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuthorAssociationEnum>')]
    public AuthorAssociationEnum $authorAssociation;
    
    /**
     * Contents of the issue comment
     * 
     * @var ?string $body
     */
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $body = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('body_html')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bodyHtml = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('body_text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bodyText = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('event')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $event;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $htmlUrl;
    
    /**
     * Unique identifier of the issue comment
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('issue_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issueUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
    /**
     * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NullableIntegration $performedViaGithubApp
     */
	#[\JMS\Serializer\Annotation\SerializedName('performed_via_github_app')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableIntegration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NullableIntegration $performedViaGithubApp = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('reactions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReactionRollup')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReactionRollup $reactions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
    /**
     * URL for the issue comment
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleUser $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleUser')]
    public SimpleUser $user;
    
	public function __construct()
	{
		$this->actor = new \OpenAPI\OpenAPI\Models\Shared\SimpleUser();
		$this->authorAssociation = \OpenAPI\OpenAPI\Models\Shared\AuthorAssociationEnum::COLLABORATOR;
		$this->body = null;
		$this->bodyHtml = null;
		$this->bodyText = null;
		$this->createdAt = new \DateTime();
		$this->event = "";
		$this->htmlUrl = "";
		$this->id = 0;
		$this->issueUrl = "";
		$this->nodeId = "";
		$this->performedViaGithubApp = null;
		$this->reactions = null;
		$this->updatedAt = new \DateTime();
		$this->url = "";
		$this->user = new \OpenAPI\OpenAPI\Models\Shared\SimpleUser();
	}
}
