/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillingAddress } from "./billingaddress";
import { CreditCard } from "./creditcard";
import { Expose, Type } from "class-transformer";

export class PaymentInfoCorporate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allow_api_invoicing" })
  allowApiInvoicing?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "allow_payment_code" })
  allowPaymentCode?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "auto_charge" })
  autoCharge?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "billing" })
  @Type(() => BillingAddress)
  billing?: BillingAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "card" })
  @Type(() => CreditCard)
  card?: CreditCard;

  @SpeakeasyMetadata()
  @Expose({ name: "contact_email_address" })
  contactEmailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payment_code" })
  paymentCode?: string;
}

/**
 * Returns billing and saved card information for user, and their corporate if present.
 */
export class PaymentInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "billing" })
  @Type(() => BillingAddress)
  billing?: BillingAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "card" })
  @Type(() => CreditCard)
  card?: CreditCard;

  @SpeakeasyMetadata({ elemType: CreditCard })
  @Expose({ name: "cards" })
  @Type(() => CreditCard)
  cards?: CreditCard[];

  @SpeakeasyMetadata()
  @Expose({ name: "corporate" })
  @Type(() => PaymentInfoCorporate)
  corporate?: PaymentInfoCorporate;

  @SpeakeasyMetadata()
  @Expose({ name: "shared_card" })
  @Type(() => CreditCard)
  sharedCard?: CreditCard;
}
