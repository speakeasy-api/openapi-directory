"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class KioskCustomizationDeviceSettingsEnum(str, Enum):
    r"""Specifies whether the Settings app is allowed in kiosk mode."""
    DEVICE_SETTINGS_UNSPECIFIED = 'DEVICE_SETTINGS_UNSPECIFIED'
    SETTINGS_ACCESS_ALLOWED = 'SETTINGS_ACCESS_ALLOWED'
    SETTINGS_ACCESS_BLOCKED = 'SETTINGS_ACCESS_BLOCKED'

class KioskCustomizationPowerButtonActionsEnum(str, Enum):
    r"""Sets the behavior of a device in kiosk mode when a user presses and holds (long-presses) the Power button."""
    POWER_BUTTON_ACTIONS_UNSPECIFIED = 'POWER_BUTTON_ACTIONS_UNSPECIFIED'
    POWER_BUTTON_AVAILABLE = 'POWER_BUTTON_AVAILABLE'
    POWER_BUTTON_BLOCKED = 'POWER_BUTTON_BLOCKED'

class KioskCustomizationStatusBarEnum(str, Enum):
    r"""Specifies whether system info and notifications are disabled in kiosk mode."""
    STATUS_BAR_UNSPECIFIED = 'STATUS_BAR_UNSPECIFIED'
    NOTIFICATIONS_AND_SYSTEM_INFO_ENABLED = 'NOTIFICATIONS_AND_SYSTEM_INFO_ENABLED'
    NOTIFICATIONS_AND_SYSTEM_INFO_DISABLED = 'NOTIFICATIONS_AND_SYSTEM_INFO_DISABLED'
    SYSTEM_INFO_ONLY = 'SYSTEM_INFO_ONLY'

class KioskCustomizationSystemErrorWarningsEnum(str, Enum):
    r"""Specifies whether system error dialogs for crashed or unresponsive apps are blocked in kiosk mode. When blocked, the system will force-stop the app as if the user chooses the \\"close app\\" option on the UI."""
    SYSTEM_ERROR_WARNINGS_UNSPECIFIED = 'SYSTEM_ERROR_WARNINGS_UNSPECIFIED'
    ERROR_AND_WARNINGS_ENABLED = 'ERROR_AND_WARNINGS_ENABLED'
    ERROR_AND_WARNINGS_MUTED = 'ERROR_AND_WARNINGS_MUTED'

class KioskCustomizationSystemNavigationEnum(str, Enum):
    r"""Specifies which navigation features are enabled (e.g. Home, Overview buttons) in kiosk mode."""
    SYSTEM_NAVIGATION_UNSPECIFIED = 'SYSTEM_NAVIGATION_UNSPECIFIED'
    NAVIGATION_ENABLED = 'NAVIGATION_ENABLED'
    NAVIGATION_DISABLED = 'NAVIGATION_DISABLED'
    HOME_BUTTON_ONLY = 'HOME_BUTTON_ONLY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class KioskCustomization:
    r"""Settings controlling the behavior of a device in kiosk mode. To enable kiosk mode, set kioskCustomLauncherEnabled to true or specify an app in the policy with installType KIOSK."""
    
    device_settings: Optional[KioskCustomizationDeviceSettingsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceSettings'), 'exclude': lambda f: f is None }})
    r"""Specifies whether the Settings app is allowed in kiosk mode."""  
    power_button_actions: Optional[KioskCustomizationPowerButtonActionsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('powerButtonActions'), 'exclude': lambda f: f is None }})
    r"""Sets the behavior of a device in kiosk mode when a user presses and holds (long-presses) the Power button."""  
    status_bar: Optional[KioskCustomizationStatusBarEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusBar'), 'exclude': lambda f: f is None }})
    r"""Specifies whether system info and notifications are disabled in kiosk mode."""  
    system_error_warnings: Optional[KioskCustomizationSystemErrorWarningsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('systemErrorWarnings'), 'exclude': lambda f: f is None }})
    r"""Specifies whether system error dialogs for crashed or unresponsive apps are blocked in kiosk mode. When blocked, the system will force-stop the app as if the user chooses the \\"close app\\" option on the UI."""  
    system_navigation: Optional[KioskCustomizationSystemNavigationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('systemNavigation'), 'exclude': lambda f: f is None }})
    r"""Specifies which navigation features are enabled (e.g. Home, Overview buttons) in kiosk mode."""  
    