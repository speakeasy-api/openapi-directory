// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DatabaseEngineInfoEngineEnum - Required. Engine type.
type DatabaseEngineInfoEngineEnum string

const (
	DatabaseEngineInfoEngineEnumDatabaseEngineUnspecified DatabaseEngineInfoEngineEnum = "DATABASE_ENGINE_UNSPECIFIED"
	DatabaseEngineInfoEngineEnumMysql                     DatabaseEngineInfoEngineEnum = "MYSQL"
	DatabaseEngineInfoEngineEnumPostgresql                DatabaseEngineInfoEngineEnum = "POSTGRESQL"
	DatabaseEngineInfoEngineEnumOracle                    DatabaseEngineInfoEngineEnum = "ORACLE"
)

func (e *DatabaseEngineInfoEngineEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DATABASE_ENGINE_UNSPECIFIED":
		fallthrough
	case "MYSQL":
		fallthrough
	case "POSTGRESQL":
		fallthrough
	case "ORACLE":
		*e = DatabaseEngineInfoEngineEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DatabaseEngineInfoEngineEnum: %s", s)
	}
}

// DatabaseEngineInfo - The type and version of a source or destination database.
type DatabaseEngineInfo struct {
	// Required. Engine type.
	Engine *DatabaseEngineInfoEngineEnum `json:"engine,omitempty"`
	// Required. Engine named version, for example 12.c.1.
	Version *string `json:"version,omitempty"`
}
