<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPolicies - Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPolicies
{
    /**
     * This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesChildAuthAlgoEnum> $childAuthAlgo
     */
	#[\JMS\Serializer\Annotation\SerializedName('childAuthAlgo')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesChildAuthAlgoEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $childAuthAlgo = null;
    
    /**
     * This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesChildCipherAlgoEnum> $childCipherAlgo
     */
	#[\JMS\Serializer\Annotation\SerializedName('childCipherAlgo')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesChildCipherAlgoEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $childCipherAlgo = null;
    
    /**
     * The lifetime of the Phase 2 SA in seconds.
     * 
     * @var ?int $childLifetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('childLifetime')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $childLifetime = null;
    
    /**
     * This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled','group14', 'group5', 'group2', 'group1'
     * 
     * @var ?array<string> $childPfsGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('childPfsGroup')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $childPfsGroup = null;
    
    /**
     * This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha256', 'sha1', 'md5'
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesIkeAuthAlgoEnum> $ikeAuthAlgo
     */
	#[\JMS\Serializer\Annotation\SerializedName('ikeAuthAlgo')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesIkeAuthAlgoEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ikeAuthAlgo = null;
    
    /**
     * This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesIkeCipherAlgoEnum> $ikeCipherAlgo
     */
	#[\JMS\Serializer\Annotation\SerializedName('ikeCipherAlgo')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesIkeCipherAlgoEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ikeCipherAlgo = null;
    
    /**
     * This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group14', 'group5', 'group2', 'group1'
     * 
     * @var ?array<string> $ikeDiffieHellmanGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('ikeDiffieHellmanGroup')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ikeDiffieHellmanGroup = null;
    
    /**
     * The lifetime of the Phase 1 SA in seconds.
     * 
     * @var ?int $ikeLifetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('ikeLifetime')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ikeLifetime = null;
    
    /**
     * [optional] This is the pseudo-random function to be used in IKE_SA. The value should be an array with one of the following algorithms: 'prfsha256', 'prfsha1', 'prfmd5', 'default'. The 'default' option can be used to default to the Authentication algorithm.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesIkePrfAlgoEnum> $ikePrfAlgo
     */
	#[\JMS\Serializer\Annotation\SerializedName('ikePrfAlgo')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPoliciesIkePrfAlgoEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ikePrfAlgo = null;
    
	public function __construct()
	{
		$this->childAuthAlgo = null;
		$this->childCipherAlgo = null;
		$this->childLifetime = null;
		$this->childPfsGroup = null;
		$this->ikeAuthAlgo = null;
		$this->ikeCipherAlgo = null;
		$this->ikeDiffieHellmanGroup = null;
		$this->ikeLifetime = null;
		$this->ikePrfAlgo = null;
	}
}
