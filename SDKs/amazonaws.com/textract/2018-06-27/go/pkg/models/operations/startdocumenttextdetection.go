// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartDocumentTextDetectionXAmzTargetEnum
type StartDocumentTextDetectionXAmzTargetEnum string

const (
	StartDocumentTextDetectionXAmzTargetEnumTextractStartDocumentTextDetection StartDocumentTextDetectionXAmzTargetEnum = "Textract.StartDocumentTextDetection"
)

func (e StartDocumentTextDetectionXAmzTargetEnum) ToPointer() *StartDocumentTextDetectionXAmzTargetEnum {
	return &e
}

func (e *StartDocumentTextDetectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Textract.StartDocumentTextDetection":
		*e = StartDocumentTextDetectionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartDocumentTextDetectionXAmzTargetEnum: %v", v)
	}
}

type StartDocumentTextDetectionRequest struct {
	StartDocumentTextDetectionRequest shared.StartDocumentTextDetectionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        StartDocumentTextDetectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartDocumentTextDetectionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BadDocumentException
	BadDocumentException interface{}
	ContentType          string
	// DocumentTooLargeException
	DocumentTooLargeException interface{}
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidKMSKeyException
	InvalidKMSKeyException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidS3ObjectException
	InvalidS3ObjectException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// Success
	StartDocumentTextDetectionResponse *shared.StartDocumentTextDetectionResponse
	StatusCode                         int
	RawResponse                        *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnsupportedDocumentException
	UnsupportedDocumentException interface{}
}
