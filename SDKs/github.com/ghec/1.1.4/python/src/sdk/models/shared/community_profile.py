"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import nullable_code_of_conduct_simple as shared_nullable_code_of_conduct_simple
from ..shared import nullable_community_health_file as shared_nullable_community_health_file
from ..shared import nullable_license_simple as shared_nullable_license_simple
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CommunityProfileFiles:
    
    code_of_conduct: shared_nullable_code_of_conduct_simple.NullableCodeOfConductSimple = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code_of_conduct') }})
    r"""Code of Conduct Simple"""  
    code_of_conduct_file: shared_nullable_community_health_file.NullableCommunityHealthFile = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code_of_conduct_file') }})  
    contributing: shared_nullable_community_health_file.NullableCommunityHealthFile = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contributing') }})  
    issue_template: shared_nullable_community_health_file.NullableCommunityHealthFile = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issue_template') }})  
    license: shared_nullable_license_simple.NullableLicenseSimple = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('license') }})
    r"""License Simple"""  
    pull_request_template: shared_nullable_community_health_file.NullableCommunityHealthFile = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pull_request_template') }})  
    readme: shared_nullable_community_health_file.NullableCommunityHealthFile = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readme') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CommunityProfile:
    r"""Community Profile"""
    
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    documentation: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentation') }})  
    files: CommunityProfileFiles = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('files') }})  
    health_percentage: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('health_percentage') }})  
    updated_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    content_reports_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content_reports_enabled'), 'exclude': lambda f: f is None }})  
    