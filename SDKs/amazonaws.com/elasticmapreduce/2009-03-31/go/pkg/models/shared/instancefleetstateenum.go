// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceFleetStateEnum string

const (
	InstanceFleetStateEnumProvisioning  InstanceFleetStateEnum = "PROVISIONING"
	InstanceFleetStateEnumBootstrapping InstanceFleetStateEnum = "BOOTSTRAPPING"
	InstanceFleetStateEnumRunning       InstanceFleetStateEnum = "RUNNING"
	InstanceFleetStateEnumResizing      InstanceFleetStateEnum = "RESIZING"
	InstanceFleetStateEnumSuspended     InstanceFleetStateEnum = "SUSPENDED"
	InstanceFleetStateEnumTerminating   InstanceFleetStateEnum = "TERMINATING"
	InstanceFleetStateEnumTerminated    InstanceFleetStateEnum = "TERMINATED"
)

func (e *InstanceFleetStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROVISIONING":
		fallthrough
	case "BOOTSTRAPPING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "RESIZING":
		fallthrough
	case "SUSPENDED":
		fallthrough
	case "TERMINATING":
		fallthrough
	case "TERMINATED":
		*e = InstanceFleetStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceFleetStateEnum: %s", s)
	}
}
