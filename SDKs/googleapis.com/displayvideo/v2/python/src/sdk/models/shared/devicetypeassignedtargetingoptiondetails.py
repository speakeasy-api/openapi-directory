"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeviceTypeAssignedTargetingOptionDetailsDeviceTypeEnum(str, Enum):
    r"""The display name of the device type. Output only in v1. Required in v2."""
    DEVICE_TYPE_UNSPECIFIED = 'DEVICE_TYPE_UNSPECIFIED'
    DEVICE_TYPE_COMPUTER = 'DEVICE_TYPE_COMPUTER'
    DEVICE_TYPE_CONNECTED_TV = 'DEVICE_TYPE_CONNECTED_TV'
    DEVICE_TYPE_SMART_PHONE = 'DEVICE_TYPE_SMART_PHONE'
    DEVICE_TYPE_TABLET = 'DEVICE_TYPE_TABLET'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceTypeAssignedTargetingOptionDetails:
    r"""Targeting details for device type. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_TYPE`."""
    
    device_type: Optional[DeviceTypeAssignedTargetingOptionDetailsDeviceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceType'), 'exclude': lambda f: f is None }})
    r"""The display name of the device type. Output only in v1. Required in v2."""  
    youtube_and_partners_bid_multiplier: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('youtubeAndPartnersBidMultiplier'), 'exclude': lambda f: f is None }})
    r"""Output only. Bid multiplier allows you to show your ads more or less frequently based on the device type. It will apply a multiplier on the original bid price. When this field is 0, it indicates this field is not applicable instead of multiplying 0 on the original bid price. For example, if the bid price without multiplier is $10.0 and the multiplier is 1.5 for Tablet, the resulting bid price for Tablet will be $15.0. Only applicable to YouTube and Partners line items."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceTypeAssignedTargetingOptionDetailsInput:
    r"""Targeting details for device type. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_TYPE`."""
    
    device_type: Optional[DeviceTypeAssignedTargetingOptionDetailsDeviceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceType'), 'exclude': lambda f: f is None }})
    r"""The display name of the device type. Output only in v1. Required in v2."""  
    