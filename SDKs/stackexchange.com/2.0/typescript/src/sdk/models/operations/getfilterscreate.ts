/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetFiltersCreateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=base" })
  base?: string;

  /**
   * String list (semicolon delimited).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=exclude",
  })
  exclude?: string;

  /**
   * String list (semicolon delimited).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include",
  })
  include?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=unsafe",
  })
  unsafe?: boolean;
}

export class GetFiltersCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
