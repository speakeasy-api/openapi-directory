/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VmwareAdminCluster - Resource that represents a VMware admin cluster.
 */
public class VmwareAdminCluster {
    /**
     * VmwareAdminAddonNodeConfig contains add-on node configurations for VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addonNode")
    public VmwareAdminAddonNodeConfig addonNode;

    public VmwareAdminCluster withAddonNode(VmwareAdminAddonNodeConfig addonNode) {
        this.addonNode = addonNode;
        return this;
    }
    
    /**
     * Annotations on the VMware admin cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public VmwareAdminCluster withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Specifies anti affinity group config for the VMware user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("antiAffinityGroups")
    public VmwareAAGConfig antiAffinityGroups;

    public VmwareAdminCluster withAntiAffinityGroups(VmwareAAGConfig antiAffinityGroups) {
        this.antiAffinityGroups = antiAffinityGroups;
        return this;
    }
    
    /**
     * Specifies config to enable/disable auto repair. The cluster-health-controller is deployed only if Enabled is true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRepairConfig")
    public VmwareAutoRepairConfig autoRepairConfig;

    public VmwareAdminCluster withAutoRepairConfig(VmwareAutoRepairConfig autoRepairConfig) {
        this.autoRepairConfig = autoRepairConfig;
        return this;
    }
    
    /**
     * The bootstrap cluster this VMware admin cluster belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bootstrapClusterMembership")
    public String bootstrapClusterMembership;

    public VmwareAdminCluster withBootstrapClusterMembership(String bootstrapClusterMembership) {
        this.bootstrapClusterMembership = bootstrapClusterMembership;
        return this;
    }
    
    /**
     * VmwareAdminControlPlaneNodeConfig contains control plane node configuration for VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("controlPlaneNode")
    public VmwareAdminControlPlaneNodeConfig controlPlaneNode;

    public VmwareAdminCluster withControlPlaneNode(VmwareAdminControlPlaneNodeConfig controlPlaneNode) {
        this.controlPlaneNode = controlPlaneNode;
        return this;
    }
    
    /**
     * Output only. The time at which VMware admin cluster was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public VmwareAdminCluster withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * A human readable description of this VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public VmwareAdminCluster withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. The DNS name of VMware admin cluster's API server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpoint")
    public String endpoint;

    public VmwareAdminCluster withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public VmwareAdminCluster withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and manage multi-cluster capabilities and apply consistent policies across your systems. See [Anthos Fleets](`https://cloud.google.com/anthos/multicluster-management/fleets`) for more details on Anthos multi-cluster capabilities using Fleets. ##
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fleet")
    public Fleet fleet;

    public VmwareAdminCluster withFleet(Fleet fleet) {
        this.fleet = fleet;
        return this;
    }
    
    /**
     * The OS image type for the VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageType")
    public String imageType;

    public VmwareAdminCluster withImageType(String imageType) {
        this.imageType = imageType;
        return this;
    }
    
    /**
     * VmwareAdminLoadBalancerConfig contains load balancer configuration for VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loadBalancer")
    public VmwareAdminLoadBalancerConfig loadBalancer;

    public VmwareAdminCluster withLoadBalancer(VmwareAdminLoadBalancerConfig loadBalancer) {
        this.loadBalancer = loadBalancer;
        return this;
    }
    
    /**
     * Output only. The object name of the VMware OnPremAdminCluster custom resource. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the ID in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. All users should use this name to access their cluster using gkectl or kubectl and should expect to see the local name when viewing admin cluster controller logs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localName")
    public String localName;

    public VmwareAdminCluster withLocalName(String localName) {
        this.localName = localName;
        return this;
    }
    
    /**
     * Immutable. The VMware admin cluster resource name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public VmwareAdminCluster withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * VmwareAdminNetworkConfig contains network configuration for VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfig")
    public VmwareAdminNetworkConfig networkConfig;

    public VmwareAdminCluster withNetworkConfig(VmwareAdminNetworkConfig networkConfig) {
        this.networkConfig = networkConfig;
        return this;
    }
    
    /**
     * The Anthos clusters on the VMware version for the admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onPremVersion")
    public String onPremVersion;

    public VmwareAdminCluster withOnPremVersion(String onPremVersion) {
        this.onPremVersion = onPremVersion;
        return this;
    }
    
    /**
     * VmwarePlatformConfig represents configuration for the VMware platform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformConfig")
    public VmwarePlatformConfig platformConfig;

    public VmwareAdminCluster withPlatformConfig(VmwarePlatformConfig platformConfig) {
        this.platformConfig = platformConfig;
        return this;
    }
    
    /**
     * Output only. If set, there are currently changes in flight to the VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reconciling")
    public Boolean reconciling;

    public VmwareAdminCluster withReconciling(Boolean reconciling) {
        this.reconciling = reconciling;
        return this;
    }
    
    /**
     * Output only. The current state of VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public VmwareAdminClusterStateEnum state;

    public VmwareAdminCluster withState(VmwareAdminClusterStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ResourceStatus status;

    public VmwareAdminCluster withStatus(ResourceStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * Output only. The unique identifier of the VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public VmwareAdminCluster withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The time at which VMware admin cluster was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public VmwareAdminCluster withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * VmwareAdminVCenterConfig contains VCenter configuration for VMware admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcenter")
    public VmwareAdminVCenterConfig vcenter;

    public VmwareAdminCluster withVcenter(VmwareAdminVCenterConfig vcenter) {
        this.vcenter = vcenter;
        return this;
    }
    
    public VmwareAdminCluster(){}
}
