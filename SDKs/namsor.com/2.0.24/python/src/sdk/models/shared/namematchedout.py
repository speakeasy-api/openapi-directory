"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NameMatchedOutMatchStatusEnum(str, Enum):
    r"""The name matching status."""
    MATCH = 'Match'
    MISMATCH = 'Mismatch'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NameMatchedOut:
    r"""Classified matched names"""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    match_status: Optional[NameMatchedOutMatchStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matchStatus'), 'exclude': lambda f: f is None }})
    r"""The name matching status."""  
    score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score'), 'exclude': lambda f: f is None }})  
    script: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('script'), 'exclude': lambda f: f is None }})  
    