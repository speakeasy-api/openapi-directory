<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Treatment - A structure that defines one treatment in an experiment. A treatment is a variation of the feature that you are including in the experiment.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Treatment
{
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * $featureVariations
     * 
     * @var ?array<string, string> $featureVariations
     */
	#[\JMS\Serializer\Annotation\SerializedName('featureVariations')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $featureVariations = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	public function __construct()
	{
		$this->description = null;
		$this->featureVariations = null;
		$this->name = "";
	}
}
