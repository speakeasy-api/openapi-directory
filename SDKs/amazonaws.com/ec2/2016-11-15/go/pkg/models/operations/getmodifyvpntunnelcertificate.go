// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyVpnTunnelCertificateActionEnum
type GETModifyVpnTunnelCertificateActionEnum string

const (
	GETModifyVpnTunnelCertificateActionEnumModifyVpnTunnelCertificate GETModifyVpnTunnelCertificateActionEnum = "ModifyVpnTunnelCertificate"
)

func (e GETModifyVpnTunnelCertificateActionEnum) ToPointer() *GETModifyVpnTunnelCertificateActionEnum {
	return &e
}

func (e *GETModifyVpnTunnelCertificateActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyVpnTunnelCertificate":
		*e = GETModifyVpnTunnelCertificateActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpnTunnelCertificateActionEnum: %v", v)
	}
}

// GETModifyVpnTunnelCertificateVersionEnum
type GETModifyVpnTunnelCertificateVersionEnum string

const (
	GETModifyVpnTunnelCertificateVersionEnumTwoThousandAndSixteen1115 GETModifyVpnTunnelCertificateVersionEnum = "2016-11-15"
)

func (e GETModifyVpnTunnelCertificateVersionEnum) ToPointer() *GETModifyVpnTunnelCertificateVersionEnum {
	return &e
}

func (e *GETModifyVpnTunnelCertificateVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETModifyVpnTunnelCertificateVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyVpnTunnelCertificateVersionEnum: %v", v)
	}
}

type GETModifyVpnTunnelCertificateRequest struct {
	Action GETModifyVpnTunnelCertificateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun  *bool                                    `queryParam:"style=form,explode=true,name=DryRun"`
	Version GETModifyVpnTunnelCertificateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the Amazon Web Services Site-to-Site VPN connection.
	VpnConnectionID string `queryParam:"style=form,explode=true,name=VpnConnectionId"`
	// The external IP address of the VPN tunnel.
	VpnTunnelOutsideIPAddress string  `queryParam:"style=form,explode=true,name=VpnTunnelOutsideIpAddress"`
	XAmzAlgorithm             *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyVpnTunnelCertificateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
