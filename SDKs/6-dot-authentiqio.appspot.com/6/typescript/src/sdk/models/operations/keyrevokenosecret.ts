/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class KeyRevokeNosecretRequest extends SpeakeasyBase {
  /**
   * verification code sent by email
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=code" })
  code?: string;

  /**
   * primary email associated to Key (ID)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email: string;

  /**
   * primary phone number, international representation
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=phone" })
  phone: string;
}

/**
 * Successfully deleted
 */
export class KeyRevokeNosecret200ApplicationJSON extends SpeakeasyBase {
  /**
   * pending or done
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class KeyRevokeNosecretResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Authentication error `auth-error`
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successfully deleted
   */
  @SpeakeasyMetadata()
  keyRevokeNosecret200ApplicationJSONObject?: KeyRevokeNosecret200ApplicationJSON;
}
