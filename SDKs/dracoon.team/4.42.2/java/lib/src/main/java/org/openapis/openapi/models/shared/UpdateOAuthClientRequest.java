/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateOAuthClientRequest - Request model for updating an OAuth client
 */
public class UpdateOAuthClientRequest {
    /**
     * Validity of the access token in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessTokenValidity")
    public Integer accessTokenValidity;
    public UpdateOAuthClientRequest withAccessTokenValidity(Integer accessTokenValidity) {
        this.accessTokenValidity = accessTokenValidity;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.22.0
     * 
     * Validity of the approval interval in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approvalValidity")
    public Integer approvalValidity;
    public UpdateOAuthClientRequest withApprovalValidity(Integer approvalValidity) {
        this.approvalValidity = approvalValidity;
        return this;
    }
    
    /**
     * Name, which is shown at the client configuration and authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientName")
    public String clientName;
    public UpdateOAuthClientRequest withClientName(String clientName) {
        this.clientName = clientName;
        return this;
    }
    
    /**
     * Secret, which client uses at authentication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientSecret")
    public String clientSecret;
    public UpdateOAuthClientRequest withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    /**
     * Determines whether client is a confidential or public client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientType")
    public UpdateOAuthClientRequestClientTypeEnum clientType;
    public UpdateOAuthClientRequest withClientType(UpdateOAuthClientRequestClientTypeEnum clientType) {
        this.clientType = clientType;
        return this;
    }
    
    /**
     * Authorized grant types
     * 
     * * `authorization_code`
     * 
     * * `implicit`
     * 
     * * `password`
     * 
     * * `client_credentials`
     * 
     * * `refresh_token`
     * 
     * 
     * 
     * cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
     */
    @JsonProperty("grantTypes")
    public UpdateOAuthClientRequestGrantTypesEnum grantTypes;
    public UpdateOAuthClientRequest withGrantTypes(UpdateOAuthClientRequestGrantTypesEnum grantTypes) {
        this.grantTypes = grantTypes;
        return this;
    }
    
    /**
     * Determines whether client is enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEnabled")
    public Boolean isEnabled;
    public UpdateOAuthClientRequest withIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }
    
    /**
     * URIs, to which a user is redirected after authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirectUris")
    public String[] redirectUris;
    public UpdateOAuthClientRequest withRedirectUris(String[] redirectUris) {
        this.redirectUris = redirectUris;
        return this;
    }
    
    /**
     * Validity of the refresh token in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refreshTokenValidity")
    public Integer refreshTokenValidity;
    public UpdateOAuthClientRequest withRefreshTokenValidity(Integer refreshTokenValidity) {
        this.refreshTokenValidity = refreshTokenValidity;
        return this;
    }
    
}
