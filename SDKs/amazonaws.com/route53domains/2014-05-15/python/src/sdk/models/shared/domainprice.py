"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import pricewithcurrency as shared_pricewithcurrency
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DomainPrice:
    r"""Information about the domain price associated with a TLD."""
    
    change_ownership_price: Optional[shared_pricewithcurrency.PriceWithCurrency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChangeOwnershipPrice'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    registration_price: Optional[shared_pricewithcurrency.PriceWithCurrency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RegistrationPrice'), 'exclude': lambda f: f is None }})  
    renewal_price: Optional[shared_pricewithcurrency.PriceWithCurrency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RenewalPrice'), 'exclude': lambda f: f is None }})  
    restoration_price: Optional[shared_pricewithcurrency.PriceWithCurrency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RestorationPrice'), 'exclude': lambda f: f is None }})  
    transfer_price: Optional[shared_pricewithcurrency.PriceWithCurrency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransferPrice'), 'exclude': lambda f: f is None }})  
    