/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoAddress } from "./enterprisecrmeventbusprotoaddress";
import { EnterpriseCrmEventbusProtoBuganizerNotification } from "./enterprisecrmeventbusprotobuganizernotification";
import { EnterpriseCrmEventbusProtoCustomSuspensionRequest } from "./enterprisecrmeventbusprotocustomsuspensionrequest";
import { Expose, Type } from "class-transformer";

export class EnterpriseCrmEventbusProtoNotification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "buganizerNotification" })
  @Type(() => EnterpriseCrmEventbusProtoBuganizerNotification)
  buganizerNotification?: EnterpriseCrmEventbusProtoBuganizerNotification;

  /**
   * Email address along with optional name and tokens. These tokens will be substituted for the variables in the form of [{var_name}], where var_name could be any string of no more than 32 bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailAddress" })
  @Type(() => EnterpriseCrmEventbusProtoAddress)
  emailAddress?: EnterpriseCrmEventbusProtoAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "escalatorQueue" })
  escalatorQueue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pubsubTopic" })
  pubsubTopic?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "request" })
  @Type(() => EnterpriseCrmEventbusProtoCustomSuspensionRequest)
  request?: EnterpriseCrmEventbusProtoCustomSuspensionRequest;
}
