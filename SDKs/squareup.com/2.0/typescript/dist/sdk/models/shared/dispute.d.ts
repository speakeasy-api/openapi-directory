import { SpeakeasyBase } from "../../../internal/utils";
import { DisputedPayment } from "./disputedpayment";
import { Money } from "./money";
/**
 * Represents a dispute a cardholder initiated with their bank.
 */
export declare class Dispute extends SpeakeasyBase {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     *
     * @remarks
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    amountMoney?: Money;
    /**
     * The ID of the dispute in the card brand system, generated by the card brand.
     */
    brandDisputeId?: string;
    /**
     * The card brand used in the disputed payment.
     */
    cardBrand?: string;
    /**
     * The timestamp when the dispute was created, in RFC 3339 format.
     */
    createdAt?: string;
    /**
     * The unique ID for this `Dispute`, generated by Square.
     */
    disputeId?: string;
    /**
     * The payment the cardholder disputed.
     */
    disputedPayment?: DisputedPayment;
    /**
     * The time when the next action is due, in RFC 3339 format.
     */
    dueAt?: string;
    /**
     * The IDs of the evidence associated with the dispute.
     */
    evidenceIds?: string[];
    /**
     * The unique ID for this `Dispute`, generated by Square.
     */
    id?: string;
    /**
     * The ID of the location where the dispute originated.
     */
    locationId?: string;
    /**
     * The dispute reason why the cardholder initiated the dispute with their bank.
     */
    reason?: string;
    /**
     * The timestamp when the dispute was reported, in RFC 3339 format.
     */
    reportedAt?: string;
    /**
     * The timestamp when the dispute was reported, in RFC 3339 format.
     */
    reportedDate?: string;
    /**
     * The current state of this dispute.
     */
    state?: string;
    /**
     * The timestamp when the dispute was last updated, in RFC 3339 format.
     */
    updatedAt?: string;
    /**
     * The current version of the `Dispute`.
     */
    version?: number;
}
