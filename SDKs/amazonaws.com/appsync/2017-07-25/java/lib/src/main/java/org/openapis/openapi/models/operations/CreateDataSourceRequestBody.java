/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateDataSourceRequestBody {
    /**
     * A description of the &lt;code&gt;DataSource&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CreateDataSourceRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Describes an Amazon DynamoDB data source configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamodbConfig")
    public CreateDataSourceRequestBodyDynamodbConfig dynamodbConfig;
    public CreateDataSourceRequestBody withDynamodbConfig(CreateDataSourceRequestBodyDynamodbConfig dynamodbConfig) {
        this.dynamodbConfig = dynamodbConfig;
        return this;
    }
    
    /**
     * &lt;p&gt;Describes an OpenSearch data source configuration.&lt;/p&gt; &lt;p&gt;As of September 2021, Amazon Elasticsearch service is Amazon OpenSearch Service. This configuration is deprecated. For new data sources, use &lt;a&gt;OpenSearchServiceDataSourceConfig&lt;/a&gt; to specify an OpenSearch data source.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("elasticsearchConfig")
    public CreateDataSourceRequestBodyElasticsearchConfig elasticsearchConfig;
    public CreateDataSourceRequestBody withElasticsearchConfig(CreateDataSourceRequestBodyElasticsearchConfig elasticsearchConfig) {
        this.elasticsearchConfig = elasticsearchConfig;
        return this;
    }
    
    /**
     * Describes an Amazon EventBridge bus data source configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventBridgeConfig")
    public CreateDataSourceRequestBodyEventBridgeConfig eventBridgeConfig;
    public CreateDataSourceRequestBody withEventBridgeConfig(CreateDataSourceRequestBodyEventBridgeConfig eventBridgeConfig) {
        this.eventBridgeConfig = eventBridgeConfig;
        return this;
    }
    
    /**
     * Describes an HTTP data source configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpConfig")
    public CreateDataSourceRequestBodyHttpConfig httpConfig;
    public CreateDataSourceRequestBody withHttpConfig(CreateDataSourceRequestBodyHttpConfig httpConfig) {
        this.httpConfig = httpConfig;
        return this;
    }
    
    /**
     * Describes an Lambda data source configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lambdaConfig")
    public CreateDataSourceRequestBodyLambdaConfig lambdaConfig;
    public CreateDataSourceRequestBody withLambdaConfig(CreateDataSourceRequestBodyLambdaConfig lambdaConfig) {
        this.lambdaConfig = lambdaConfig;
        return this;
    }
    
    /**
     * A user-supplied name for the &lt;code&gt;DataSource&lt;/code&gt;.
     */
    @JsonProperty("name")
    public String name;
    public CreateDataSourceRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Describes an OpenSearch data source configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openSearchServiceConfig")
    public CreateDataSourceRequestBodyOpenSearchServiceConfig openSearchServiceConfig;
    public CreateDataSourceRequestBody withOpenSearchServiceConfig(CreateDataSourceRequestBodyOpenSearchServiceConfig openSearchServiceConfig) {
        this.openSearchServiceConfig = openSearchServiceConfig;
        return this;
    }
    
    /**
     * Describes a relational database data source configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relationalDatabaseConfig")
    public CreateDataSourceRequestBodyRelationalDatabaseConfig relationalDatabaseConfig;
    public CreateDataSourceRequestBody withRelationalDatabaseConfig(CreateDataSourceRequestBodyRelationalDatabaseConfig relationalDatabaseConfig) {
        this.relationalDatabaseConfig = relationalDatabaseConfig;
        return this;
    }
    
    /**
     * The Identity and Access Management (IAM) service role Amazon Resource Name (ARN) for the data source. The system assumes this role when accessing the data source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceRoleArn")
    public String serviceRoleArn;
    public CreateDataSourceRequestBody withServiceRoleArn(String serviceRoleArn) {
        this.serviceRoleArn = serviceRoleArn;
        return this;
    }
    
    /**
     * The type of the &lt;code&gt;DataSource&lt;/code&gt;.
     */
    @JsonProperty("type")
    public CreateDataSourceRequestBodyTypeEnum type;
    public CreateDataSourceRequestBody withType(CreateDataSourceRequestBodyTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
