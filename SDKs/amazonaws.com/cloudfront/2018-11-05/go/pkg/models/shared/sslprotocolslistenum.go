// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SslProtocolsListEnum string

const (
	SslProtocolsListEnumSsLv3  SslProtocolsListEnum = "SSLv3"
	SslProtocolsListEnumTlSv1  SslProtocolsListEnum = "TLSv1"
	SslProtocolsListEnumTlSv11 SslProtocolsListEnum = "TLSv1.1"
	SslProtocolsListEnumTlSv12 SslProtocolsListEnum = "TLSv1.2"
)

func (e SslProtocolsListEnum) ToPointer() *SslProtocolsListEnum {
	return &e
}

func (e *SslProtocolsListEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SSLv3":
		fallthrough
	case "TLSv1":
		fallthrough
	case "TLSv1.1":
		fallthrough
	case "TLSv1.2":
		*e = SslProtocolsListEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SslProtocolsListEnum: %v", v)
	}
}
