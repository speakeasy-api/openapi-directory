/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class TflApiPresentationEntitiesPredictionTiming extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "countdownServerAdjustment" })
  countdownServerAdjustment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "insert" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  insert?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "read" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  read?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "received" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  received?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "sent" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  sent?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  source?: Date;
}
