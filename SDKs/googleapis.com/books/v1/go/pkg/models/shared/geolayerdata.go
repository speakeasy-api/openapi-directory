// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type GeolayerdataCommon struct {
	// The language of the information url and description.
	Lang *string `json:"lang,omitempty"`
	// The URL for the preview image information.
	PreviewImageURL *string `json:"previewImageUrl,omitempty"`
	// The description for this location.
	Snippet *string `json:"snippet,omitempty"`
	// The URL for information for this location. Ex: wikipedia link.
	SnippetURL *string `json:"snippetUrl,omitempty"`
	// The display title and localized canonical name to use when searching for this entity on Google search.
	Title *string `json:"title,omitempty"`
}

type GeolayerdataGeoViewportHi struct {
	Latitude  *float64 `json:"latitude,omitempty"`
	Longitude *float64 `json:"longitude,omitempty"`
}

type GeolayerdataGeoViewportLo struct {
	Latitude  *float64 `json:"latitude,omitempty"`
	Longitude *float64 `json:"longitude,omitempty"`
}

// GeolayerdataGeoViewport - The viewport for showing this location. This is a latitude, longitude rectangle.
type GeolayerdataGeoViewport struct {
	Hi *GeolayerdataGeoViewportHi `json:"hi,omitempty"`
	Lo *GeolayerdataGeoViewportLo `json:"lo,omitempty"`
}

type GeolayerdataGeo struct {
	// The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.
	Boundary []string `json:"boundary,omitempty"`
	// The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER
	CachePolicy *string `json:"cachePolicy,omitempty"`
	// The country code of the location.
	CountryCode *string `json:"countryCode,omitempty"`
	// The latitude of the location.
	Latitude *float64 `json:"latitude,omitempty"`
	// The longitude of the location.
	Longitude *float64 `json:"longitude,omitempty"`
	// The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN
	MapType *string `json:"mapType,omitempty"`
	// The viewport for showing this location. This is a latitude, longitude rectangle.
	Viewport *GeolayerdataGeoViewport `json:"viewport,omitempty"`
	// The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels
	Zoom *int `json:"zoom,omitempty"`
}

type Geolayerdata struct {
	Common *GeolayerdataCommon `json:"common,omitempty"`
	Geo    *GeolayerdataGeo    `json:"geo,omitempty"`
	Kind   *string             `json:"kind,omitempty"`
}
