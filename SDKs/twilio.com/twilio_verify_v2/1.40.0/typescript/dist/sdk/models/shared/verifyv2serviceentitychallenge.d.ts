import { SpeakeasyBase } from "../../../internal/utils";
import { ChallengeEnumChallengeReasonsEnum } from "./challengeenumchallengereasonsenum";
import { ChallengeEnumChallengeStatusesEnum } from "./challengeenumchallengestatusesenum";
import { ChallengeEnumFactorTypesEnum } from "./challengeenumfactortypesenum";
/**
 * Created
 */
export declare class VerifyV2ServiceEntityChallenge extends SpeakeasyBase {
    /**
     * The unique SID identifier of the Account.
     */
    accountSid?: string;
    /**
     * The date that this Challenge was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    dateCreated?: Date;
    /**
     * The date that this Challenge was responded, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    dateResponded?: Date;
    /**
     * The date that this Challenge was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    dateUpdated?: Date;
    /**
     * Details provided to give context about the Challenge. Intended to be shown to the end user.
     */
    details?: any;
    /**
     * The unique SID identifier of the Entity.
     */
    entitySid?: string;
    /**
     * The date-time when this Challenge expires, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. The default value is five (5) minutes after Challenge creation. The max value is sixty (60) minutes after creation.
     */
    expirationDate?: Date;
    /**
     * The unique SID identifier of the Factor.
     */
    factorSid?: string;
    factorType?: ChallengeEnumFactorTypesEnum;
    /**
     * Details provided to give context about the Challenge. Intended to be hidden from the end user. It must be a stringified JSON with only strings values eg. `{"ip": "172.168.1.234"}`
     */
    hiddenDetails?: any;
    /**
     * Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
     */
    identity?: string;
    /**
     * Contains a dictionary of URL links to nested resources of this Challenge.
     */
    links?: Record<string, any>;
    /**
     * Custom metadata associated with the challenge. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{"os": "Android"}`. Can be up to 1024 characters in length.
     */
    metadata?: any;
    respondedReason?: ChallengeEnumChallengeReasonsEnum;
    /**
     * The unique SID identifier of the Service.
     */
    serviceSid?: string;
    /**
     * A 34 character string that uniquely identifies this Challenge.
     */
    sid?: string;
    status?: ChallengeEnumChallengeStatusesEnum;
    /**
     * The URL of this resource.
     */
    url?: string;
}
