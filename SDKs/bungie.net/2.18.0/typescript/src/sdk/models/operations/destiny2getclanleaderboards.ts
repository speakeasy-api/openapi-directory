/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class Destiny2GetClanLeaderboardsRequest extends SpeakeasyBase {
  /**
   * Group ID of the clan whose leaderboards you wish to fetch.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=groupId",
  })
  groupId: number;

  /**
   * Maximum number of top players to return. Use a large number to get entire leaderboard.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxtop",
  })
  maxtop?: number;

  /**
   * List of game modes for which to get leaderboards. See the documentation for DestinyActivityModeType for valid values, and pass in string representation, comma delimited.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=modes" })
  modes?: string;

  /**
   * ID of stat to return rather than returning all Leaderboard stats.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=statid",
  })
  statid?: string;
}

/**
 * Look at the Response property for more information about the nature of this response
 */
export class Destiny2GetClanLeaderboards200Wildcard extends SpeakeasyBase {
  @SpeakeasyMetadata()
  detailedErrorTrace?: string;

  @SpeakeasyMetadata()
  errorCode?: number;

  @SpeakeasyMetadata()
  errorStatus?: string;

  @SpeakeasyMetadata()
  message?: string;

  @SpeakeasyMetadata()
  messageData?: Record<string, string>;

  @SpeakeasyMetadata({
    elemType: shared.DestinyHistoricalStatsDestinyLeaderboard,
    elemDepth: 2,
  })
  response?: Record<
    string,
    Record<string, shared.DestinyHistoricalStatsDestinyLeaderboard>
  >;

  @SpeakeasyMetadata()
  throttleSeconds?: number;
}

export class Destiny2GetClanLeaderboardsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
