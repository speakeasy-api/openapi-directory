// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TabStopAlignmentEnum - The alignment of this tab stop. If unset, the value defaults to START.
type TabStopAlignmentEnum string

const (
	TabStopAlignmentEnumTabStopAlignmentUnspecified TabStopAlignmentEnum = "TAB_STOP_ALIGNMENT_UNSPECIFIED"
	TabStopAlignmentEnumStart                       TabStopAlignmentEnum = "START"
	TabStopAlignmentEnumCenter                      TabStopAlignmentEnum = "CENTER"
	TabStopAlignmentEnumEnd                         TabStopAlignmentEnum = "END"
)

func (e TabStopAlignmentEnum) ToPointer() *TabStopAlignmentEnum {
	return &e
}

func (e *TabStopAlignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TAB_STOP_ALIGNMENT_UNSPECIFIED":
		fallthrough
	case "START":
		fallthrough
	case "CENTER":
		fallthrough
	case "END":
		*e = TabStopAlignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TabStopAlignmentEnum: %v", v)
	}
}

// TabStop - A tab stop within a paragraph.
type TabStop struct {
	// The alignment of this tab stop. If unset, the value defaults to START.
	Alignment *TabStopAlignmentEnum `json:"alignment,omitempty"`
	// A magnitude in a single direction in the specified units.
	Offset *Dimension `json:"offset,omitempty"`
}
