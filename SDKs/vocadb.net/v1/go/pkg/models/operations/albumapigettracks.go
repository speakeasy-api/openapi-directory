// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AlbumAPIGetTracksPathParams struct {
	// Album ID (required).
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// AlbumAPIGetTracksFieldsEnum - List of optional fields (optional). Possible values are Albums, Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
type AlbumAPIGetTracksFieldsEnum string

const (
	AlbumAPIGetTracksFieldsEnumNone            AlbumAPIGetTracksFieldsEnum = "None"
	AlbumAPIGetTracksFieldsEnumAdditionalNames AlbumAPIGetTracksFieldsEnum = "AdditionalNames"
	AlbumAPIGetTracksFieldsEnumAlbums          AlbumAPIGetTracksFieldsEnum = "Albums"
	AlbumAPIGetTracksFieldsEnumArtists         AlbumAPIGetTracksFieldsEnum = "Artists"
	AlbumAPIGetTracksFieldsEnumLyrics          AlbumAPIGetTracksFieldsEnum = "Lyrics"
	AlbumAPIGetTracksFieldsEnumMainPicture     AlbumAPIGetTracksFieldsEnum = "MainPicture"
	AlbumAPIGetTracksFieldsEnumNames           AlbumAPIGetTracksFieldsEnum = "Names"
	AlbumAPIGetTracksFieldsEnumPVs             AlbumAPIGetTracksFieldsEnum = "PVs"
	AlbumAPIGetTracksFieldsEnumReleaseEvent    AlbumAPIGetTracksFieldsEnum = "ReleaseEvent"
	AlbumAPIGetTracksFieldsEnumTags            AlbumAPIGetTracksFieldsEnum = "Tags"
	AlbumAPIGetTracksFieldsEnumThumbURL        AlbumAPIGetTracksFieldsEnum = "ThumbUrl"
	AlbumAPIGetTracksFieldsEnumWebLinks        AlbumAPIGetTracksFieldsEnum = "WebLinks"
)

func (e *AlbumAPIGetTracksFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Albums":
		fallthrough
	case "Artists":
		fallthrough
	case "Lyrics":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "Tags":
		fallthrough
	case "ThumbUrl":
		fallthrough
	case "WebLinks":
		*e = AlbumAPIGetTracksFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetTracksFieldsEnum: %s", s)
	}
}

// AlbumAPIGetTracksLangEnum - Content language preference (optional).
type AlbumAPIGetTracksLangEnum string

const (
	AlbumAPIGetTracksLangEnumDefault  AlbumAPIGetTracksLangEnum = "Default"
	AlbumAPIGetTracksLangEnumJapanese AlbumAPIGetTracksLangEnum = "Japanese"
	AlbumAPIGetTracksLangEnumRomaji   AlbumAPIGetTracksLangEnum = "Romaji"
	AlbumAPIGetTracksLangEnumEnglish  AlbumAPIGetTracksLangEnum = "English"
)

func (e *AlbumAPIGetTracksLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = AlbumAPIGetTracksLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetTracksLangEnum: %s", s)
	}
}

type AlbumAPIGetTracksQueryParams struct {
	// List of optional fields (optional). Possible values are Albums, Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
	Fields *AlbumAPIGetTracksFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Content language preference (optional).
	Lang *AlbumAPIGetTracksLangEnum `queryParam:"style=form,explode=true,name=lang"`
}

type AlbumAPIGetTracksRequest struct {
	PathParams  AlbumAPIGetTracksPathParams
	QueryParams AlbumAPIGetTracksQueryParams
}

type AlbumAPIGetTracksResponse struct {
	Body        []byte
	ContentType string
	// OK
	SongInAlbumForAPIContracts []shared.SongInAlbumForAPIContract
	StatusCode                 int
	RawResponse                *http.Response
}
