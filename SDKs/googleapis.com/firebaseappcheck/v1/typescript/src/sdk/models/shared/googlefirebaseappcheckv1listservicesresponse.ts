/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleFirebaseAppcheckV1Service } from "./googlefirebaseappcheckv1service";
import { Expose, Type } from "class-transformer";

/**
 * Response message for the ListServices method.
 */
export class GoogleFirebaseAppcheckV1ListServicesResponse extends SpeakeasyBase {
  /**
   * If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListServices to find the next group of Services. Page tokens are short-lived and should not be persisted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The Services retrieved.
   */
  @SpeakeasyMetadata({ elemType: GoogleFirebaseAppcheckV1Service })
  @Expose({ name: "services" })
  @Type(() => GoogleFirebaseAppcheckV1Service)
  services?: GoogleFirebaseAppcheckV1Service[];
}
