/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ScheduleStateEnum } from "./schedulestateenum";
import { TargetSummary } from "./targetsummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The details of a schedule.
 */
export class ScheduleSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "GroupName" })
  groupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: ScheduleStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Target" })
  @Type(() => TargetSummary)
  target?: TargetSummary;
}
