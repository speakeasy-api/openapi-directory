"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleappscardv1action as shared_googleappscardv1action
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAppsCardV1SwitchControlControlTypeEnum(str, Enum):
    r"""How the switch appears in the user interface."""
    SWITCH = 'SWITCH'
    CHECKBOX = 'CHECKBOX'
    CHECK_BOX = 'CHECK_BOX'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAppsCardV1SwitchControl:
    r"""Either a toggle-style switch or a checkbox inside a `decoratedText` widget. Only supported on the `decoratedText` widget."""
    
    control_type: Optional[GoogleAppsCardV1SwitchControlControlTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('controlType'), 'exclude': lambda f: f is None }})
    r"""How the switch appears in the user interface."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name by which the switch widget is identified in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs)."""  
    on_change_action: Optional[shared_googleappscardv1action.GoogleAppsCardV1Action] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onChangeAction'), 'exclude': lambda f: f is None }})
    r"""An action that describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form. If the action is triggered, the form values are sent to the server."""  
    selected: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selected'), 'exclude': lambda f: f is None }})
    r"""When `true`, the switch is selected."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value entered by a user, returned as part of a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs)."""  
    