"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timeslicedmetricsforevergreen as shared_timeslicedmetricsforevergreen
from ..shared import timeslicednetmetricsforevergreen as shared_timeslicednetmetricsforevergreen
from ..shared import timeslicedtcbnetmetricsforevergreen as shared_timeslicedtcbnetmetricsforevergreen
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderMetricsForEvergreen:
    
    charge_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargeNumber'), 'exclude': lambda f: f is None }})  
    mrr: Optional[list[shared_timeslicednetmetricsforevergreen.TimeSlicedNetMetricsForEvergreen]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mrr'), 'exclude': lambda f: f is None }})  
    origin_rate_plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originRatePlanId'), 'exclude': lambda f: f is None }})  
    product_rate_plan_charge_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productRatePlanChargeId'), 'exclude': lambda f: f is None }})  
    product_rate_plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productRatePlanId'), 'exclude': lambda f: f is None }})  
    quantity: Optional[list[shared_timeslicedmetricsforevergreen.TimeSlicedMetricsForEvergreen]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity'), 'exclude': lambda f: f is None }})  
    tcb: Optional[list[shared_timeslicedtcbnetmetricsforevergreen.TimeSlicedTcbNetMetricsForEvergreen]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tcb'), 'exclude': lambda f: f is None }})
    r"""Total contracted billing which is the forecast value for the total invoice amount."""  
    tcv: Optional[list[shared_timeslicednetmetricsforevergreen.TimeSlicedNetMetricsForEvergreen]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tcv'), 'exclude': lambda f: f is None }})
    r"""Total contracted value."""  
    