"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .bucketaccesscontrols import BucketAccessControls
from .buckets import Buckets
from .channels import Channels
from .defaultobjectaccesscontrols import DefaultObjectAccessControls
from .objectaccesscontrols import ObjectAccessControls
from .objects import Objects

SERVERS = [
    "https://storage.googleapis.com/storage/v1beta2",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""Lets you store and retrieve potentially-large, immutable data objects.
    https://developers.google.com/storage/docs/json_api/
    """
    bucket_access_controls: BucketAccessControls
    buckets: Buckets
    channels: Channels
    default_object_access_controls: DefaultObjectAccessControls
    object_access_controls: ObjectAccessControls
    objects: Objects

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.bucket_access_controls = BucketAccessControls(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.buckets = Buckets(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.channels = Channels(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.default_object_access_controls = DefaultObjectAccessControls(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.object_access_controls = ObjectAccessControls(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.objects = Objects(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    