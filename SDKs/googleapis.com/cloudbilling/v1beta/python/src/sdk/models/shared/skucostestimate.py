"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import costestimate as shared_costestimate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SkuCostEstimate:
    r"""Estimated cost for usage on a SKU."""
    
    cost_estimate: Optional[shared_costestimate.CostEstimate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('costEstimate'), 'exclude': lambda f: f is None }})
    r"""An estimated cost."""  
    sku: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sku'), 'exclude': lambda f: f is None }})
    r"""The resource name for the SKU. Example: \\"services/DA34-426B-A397/skus/AA95-CD31-42FE\\" More information about the SKU can be found in the `skus` field of the `CostEstimationResult`."""  
    usage_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usageAmount'), 'exclude': lambda f: f is None }})
    r"""The amount of usage on this SKU."""  
    usage_unit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usageUnit'), 'exclude': lambda f: f is None }})
    r"""The unit for the usage on this SKU."""  
    