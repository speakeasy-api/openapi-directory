"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import playerseason as shared_playerseason
from enum import Enum
from typing import Optional

class LeagueLeadersBySeasonColumnEnum(str, Enum):
    r"""Response member you would like results sorted by."""
    FANTASY_POINTS = 'FantasyPoints'
    PASSING_YARDS = 'PassingYards'
    RUSHING_YARDS = 'RushingYards'
    RECEPTIONS = 'Receptions'
    SACKS = 'Sacks'
    INTERCEPTIONS = 'Interceptions'
    TOUCHDOWNS = 'Touchdowns'

class LeagueLeadersBySeasonFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""
    XML = 'XML'
    JSON = 'JSON'

class LeagueLeadersBySeasonPositionEnum(str, Enum):
    r"""Playerâ€™s position that you would like to filter by."""
    ALL = 'ALL'
    OFFENSE = 'OFFENSE'
    QB = 'QB'
    RB = 'RB'
    WR = 'WR'
    TE = 'TE'
    DEFENSE = 'DEFENSE'
    DL = 'DL'
    LB = 'LB'
    DB = 'DB'
    K = 'K'


@dataclasses.dataclass
class LeagueLeadersBySeasonRequest:
    
    column: LeagueLeadersBySeasonColumnEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'column', 'style': 'simple', 'explode': False }})
    r"""Response member you would like results sorted by."""  
    format: LeagueLeadersBySeasonFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""  
    position: LeagueLeadersBySeasonPositionEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'position', 'style': 'simple', 'explode': False }})
    r"""Playerâ€™s position that you would like to filter by."""  
    season: str = dataclasses.field(metadata={'path_param': { 'field_name': 'season', 'style': 'simple', 'explode': False }})
    r"""Year of the season and the season type. If no season type is provided, then the default is regular season.
              <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
    """  
    

@dataclasses.dataclass
class LeagueLeadersBySeasonResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    player_seasons: Optional[list[shared_playerseason.PlayerSeason]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    