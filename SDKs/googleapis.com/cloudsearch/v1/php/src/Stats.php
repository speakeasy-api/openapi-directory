<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Stats 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Gets indexed item statistics aggreggated across all data sources. This API only returns statistics for previous dates; it doesn't return statistics for the current day. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetIndexRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetIndexSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetIndexResponse
     */
	public function cloudsearchStatsGetIndex(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetIndexRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetIndexSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetIndexResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/index');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetIndexRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetIndexResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getCustomerIndexStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetCustomerIndexStatsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get the query statistics for customer. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetQueryRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetQuerySecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetQueryResponse
     */
	public function cloudsearchStatsGetQuery(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetQueryRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetQuerySecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetQueryResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/query');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetQueryRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetQueryResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getCustomerQueryStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetCustomerQueryStatsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get search application stats for customer. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSearchapplicationRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSearchapplicationSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSearchapplicationResponse
     */
	public function cloudsearchStatsGetSearchapplication(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSearchapplicationRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSearchapplicationSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSearchapplicationResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/searchapplication');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSearchapplicationRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSearchapplicationResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getCustomerSearchApplicationStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetCustomerSearchApplicationStatsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get the # of search sessions, % of successful sessions with a click query statistics for customer. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSessionRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSessionSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSessionResponse
     */
	public function cloudsearchStatsGetSession(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSessionRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSessionSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSessionResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/session');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSessionRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetSessionResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getCustomerSessionStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetCustomerSessionStatsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get the users statistics for customer. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetUserRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetUserSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetUserResponse
     */
	public function cloudsearchStatsGetUser(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetUserRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetUserSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetUserResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/user');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetUserRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsGetUserResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getCustomerUserStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetCustomerUserStatsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Gets indexed item statistics for a single data source. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetResponse
     */
	public function cloudsearchStatsIndexDatasourcesGet(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/index/{name}', \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsIndexDatasourcesGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getDataSourceIndexStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetDataSourceIndexStatsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get the query statistics for search application. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetResponse
     */
	public function cloudsearchStatsQuerySearchapplicationsGet(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/query/{name}', \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsQuerySearchapplicationsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getSearchApplicationQueryStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetSearchApplicationQueryStatsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get the # of search sessions, % of successful sessions with a click query statistics for search application. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetResponse
     */
	public function cloudsearchStatsSessionSearchapplicationsGet(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/session/{name}', \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsSessionSearchapplicationsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getSearchApplicationSessionStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetSearchApplicationSessionStatsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get the users statistics for search application. **Note:** This API requires a standard end user account to execute.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetResponse
     */
	public function cloudsearchStatsUserSearchapplicationsGet(
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/stats/user/{name}', \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudsearchStatsUserSearchapplicationsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getSearchApplicationUserStatsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GetSearchApplicationUserStatsResponse', 'json');
            }
        }

        return $response;
    }
}