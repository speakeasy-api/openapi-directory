// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposMergeRequestBody struct {
	// The name of the base branch that the head will be merged into.
	Base string `json:"base"`
	// Commit message to use for the merge commit. If omitted, a default message will be used.
	CommitMessage *string `json:"commit_message,omitempty"`
	// The head to merge. This can be a branch name or a commit SHA1.
	Head string `json:"head"`
}

type ReposMergeRequest struct {
	RequestBody ReposMergeRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposMergeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Forbidden
	BasicError *shared.BasicError
	// Successful Response (The resulting merge commit)
	Commit *shared.Commit
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
