/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * SubUserData - Container data for the sub user
 */
public class SubUserData {
    /**
     * The end date. until this date the user has access
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("AccessEndDate")
    @SpeakeasyMetadata("form:name=AccessEndDate")
    public OffsetDateTime accessEndDate;
    public SubUserData withAccessEndDate(OffsetDateTime accessEndDate) {
        this.accessEndDate = accessEndDate;
        return this;
    }
    
    /**
     * The start date. From this date the user has access
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("AccessTimeStartDate")
    @SpeakeasyMetadata("form:name=AccessTimeStartDate")
    public OffsetDateTime accessTimeStartDate;
    public SubUserData withAccessTimeStartDate(OffsetDateTime accessTimeStartDate) {
        this.accessTimeStartDate = accessTimeStartDate;
        return this;
    }
    
    /**
     * The Email adress
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Email")
    @SpeakeasyMetadata("form:name=Email")
    public String email;
    public SubUserData withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The ID of the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    @SpeakeasyMetadata("form:name=Id")
    public String id;
    public SubUserData withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * If set this is used a new password
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NewPassword")
    @SpeakeasyMetadata("form:name=NewPassword")
    public String newPassword;
    public SubUserData withNewPassword(String newPassword) {
        this.newPassword = newPassword;
        return this;
    }
    
    /**
     * The permission level of the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PermissionLevel")
    @SpeakeasyMetadata("form:name=PermissionLevel")
    public SubUserDataPermissionLevelEnum permissionLevel;
    public SubUserData withPermissionLevel(SubUserDataPermissionLevelEnum permissionLevel) {
        this.permissionLevel = permissionLevel;
        return this;
    }
    
    /**
     * The username
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Username")
    @SpeakeasyMetadata("form:name=Username")
    public String username;
    public SubUserData withUsername(String username) {
        this.username = username;
        return this;
    }
    
}
