// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SearchUsersDirectionEnum - The sort direction of the results.
type SearchUsersDirectionEnum string

const (
	SearchUsersDirectionEnumAsc  SearchUsersDirectionEnum = "asc"
	SearchUsersDirectionEnumDesc SearchUsersDirectionEnum = "desc"
)

func (e *SearchUsersDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = SearchUsersDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchUsersDirectionEnum: %s", s)
	}
}

// SearchUsersSortEnum - The way to sort the results.
type SearchUsersSortEnum string

const (
	SearchUsersSortEnumAlphabetical SearchUsersSortEnum = "alphabetical"
	SearchUsersSortEnumDate         SearchUsersSortEnum = "date"
	SearchUsersSortEnumFollowers    SearchUsersSortEnum = "followers"
	SearchUsersSortEnumRelevant     SearchUsersSortEnum = "relevant"
	SearchUsersSortEnumVideos       SearchUsersSortEnum = "videos"
)

func (e *SearchUsersSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "followers":
		fallthrough
	case "relevant":
		fallthrough
	case "videos":
		*e = SearchUsersSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchUsersSortEnum: %s", s)
	}
}

type SearchUsersRequest struct {
	// The sort direction of the results.
	Direction *SearchUsersDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *SearchUsersSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type SearchUsersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// There was an internal search error.
	LegacyError *shared.LegacyError
	// The search results were returned.
	Users []shared.User
}
