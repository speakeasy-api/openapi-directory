"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import moveimpact as shared_moveimpact
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MoveAnalysisResult:
    r"""An analysis result including blockers and warnings."""
    
    blockers: Optional[list[shared_moveimpact.MoveImpact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blockers'), 'exclude': lambda f: f is None }})
    r"""Blocking information that would prevent the target resource from moving to the specified destination at runtime."""  
    warnings: Optional[list[shared_moveimpact.MoveImpact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warnings'), 'exclude': lambda f: f is None }})
    r"""Warning information indicating that moving the target resource to the specified destination might be unsafe. This can include important policy information and configuration changes, but will not block moves at runtime."""  
    