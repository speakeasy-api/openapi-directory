// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountSupportingEntityCapabilityAllowedLevelEnum - The capability level that is allowed for the account holder.
//
// Possible values: **notApplicable**, **low**, **medium**, **high**.
type AccountSupportingEntityCapabilityAllowedLevelEnum string

const (
	AccountSupportingEntityCapabilityAllowedLevelEnumHigh          AccountSupportingEntityCapabilityAllowedLevelEnum = "high"
	AccountSupportingEntityCapabilityAllowedLevelEnumLow           AccountSupportingEntityCapabilityAllowedLevelEnum = "low"
	AccountSupportingEntityCapabilityAllowedLevelEnumMedium        AccountSupportingEntityCapabilityAllowedLevelEnum = "medium"
	AccountSupportingEntityCapabilityAllowedLevelEnumNotApplicable AccountSupportingEntityCapabilityAllowedLevelEnum = "notApplicable"
)

func (e *AccountSupportingEntityCapabilityAllowedLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "high":
		fallthrough
	case "low":
		fallthrough
	case "medium":
		fallthrough
	case "notApplicable":
		*e = AccountSupportingEntityCapabilityAllowedLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountSupportingEntityCapabilityAllowedLevelEnum: %s", s)
	}
}

// AccountSupportingEntityCapabilityRequestedLevelEnum - The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
//
// Possible values: **notApplicable**, **low**, **medium**, **high**.
type AccountSupportingEntityCapabilityRequestedLevelEnum string

const (
	AccountSupportingEntityCapabilityRequestedLevelEnumHigh          AccountSupportingEntityCapabilityRequestedLevelEnum = "high"
	AccountSupportingEntityCapabilityRequestedLevelEnumLow           AccountSupportingEntityCapabilityRequestedLevelEnum = "low"
	AccountSupportingEntityCapabilityRequestedLevelEnumMedium        AccountSupportingEntityCapabilityRequestedLevelEnum = "medium"
	AccountSupportingEntityCapabilityRequestedLevelEnumNotApplicable AccountSupportingEntityCapabilityRequestedLevelEnum = "notApplicable"
)

func (e *AccountSupportingEntityCapabilityRequestedLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "high":
		fallthrough
	case "low":
		fallthrough
	case "medium":
		fallthrough
	case "notApplicable":
		*e = AccountSupportingEntityCapabilityRequestedLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountSupportingEntityCapabilityRequestedLevelEnum: %s", s)
	}
}

// AccountSupportingEntityCapabilityVerificationStatusEnum - The status of the verification checks for the supporting entity capability.
//
// Possible values:
//
// * **pending**: Adyen is running the verification.
//
// * **invalid**: The verification failed. Check if the `errors` array contains more information.
//
// * **valid**: The verification has been successfully completed.
//
// * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
type AccountSupportingEntityCapabilityVerificationStatusEnum string

const (
	AccountSupportingEntityCapabilityVerificationStatusEnumInvalid  AccountSupportingEntityCapabilityVerificationStatusEnum = "invalid"
	AccountSupportingEntityCapabilityVerificationStatusEnumPending  AccountSupportingEntityCapabilityVerificationStatusEnum = "pending"
	AccountSupportingEntityCapabilityVerificationStatusEnumRejected AccountSupportingEntityCapabilityVerificationStatusEnum = "rejected"
	AccountSupportingEntityCapabilityVerificationStatusEnumValid    AccountSupportingEntityCapabilityVerificationStatusEnum = "valid"
)

func (e *AccountSupportingEntityCapabilityVerificationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid":
		fallthrough
	case "pending":
		fallthrough
	case "rejected":
		fallthrough
	case "valid":
		*e = AccountSupportingEntityCapabilityVerificationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountSupportingEntityCapabilityVerificationStatusEnum: %s", s)
	}
}

type AccountSupportingEntityCapability struct {
	// Indicates whether the supporting entity capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.
	Allowed *bool `json:"allowed,omitempty"`
	// The capability level that is allowed for the account holder.
	//
	// Possible values: **notApplicable**, **low**, **medium**, **high**.
	AllowedLevel *AccountSupportingEntityCapabilityAllowedLevelEnum `json:"allowedLevel,omitempty"`
	// Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
	Enabled *bool `json:"enabled,omitempty"`
	// The ID of the supporting entity.
	ID *string `json:"id,omitempty"`
	// Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
	Requested *bool `json:"requested,omitempty"`
	// The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
	//
	// Possible values: **notApplicable**, **low**, **medium**, **high**.
	RequestedLevel *AccountSupportingEntityCapabilityRequestedLevelEnum `json:"requestedLevel,omitempty"`
	// The status of the verification checks for the supporting entity capability.
	//
	// Possible values:
	//
	// * **pending**: Adyen is running the verification.
	//
	// * **invalid**: The verification failed. Check if the `errors` array contains more information.
	//
	// * **valid**: The verification has been successfully completed.
	//
	// * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
	//
	VerificationStatus *AccountSupportingEntityCapabilityVerificationStatusEnum `json:"verificationStatus,omitempty"`
}

type AccountSupportingEntityCapabilityInput struct {
	// Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
	Enabled *bool `json:"enabled,omitempty"`
	// Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
	Requested *bool `json:"requested,omitempty"`
	// The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
	//
	// Possible values: **notApplicable**, **low**, **medium**, **high**.
	RequestedLevel *AccountSupportingEntityCapabilityRequestedLevelEnum `json:"requestedLevel,omitempty"`
}
