"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import choicereason_enum as shared_choicereason_enum
from ..shared import choicestatus_enum as shared_choicestatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChoiceAnswerSummary:
    r"""A choice summary that has been answered on a question in your workload."""
    
    choice_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChoiceId'), 'exclude': lambda f: f is None }})
    r"""The ID of a choice."""  
    reason: Optional[shared_choicereason_enum.ChoiceReasonEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Reason'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_choicestatus_enum.ChoiceStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    