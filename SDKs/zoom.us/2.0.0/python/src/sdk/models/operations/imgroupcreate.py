"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ImGroupCreateApplicationJSONTypeEnum(str, Enum):
    r"""IM Group types:<br>`normal` - Only members can see automatically see the other members of this group. Other people can search for members within this group. <br>`shared` - Everyone under an account can see the group members automatically.<br>`restricted` - Nobody can see the group or search for members except the members in the group."""
    NORMAL = 'normal'
    SHARED = 'shared'
    RESTRICTED = 'restricted'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImGroupCreateApplicationJSON:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Group name: must be unique to one account."""  
    search_by_account: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_by_account'), 'exclude': lambda f: f is None }})
    r"""Members can search for others under same account."""  
    search_by_domain: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_by_domain'), 'exclude': lambda f: f is None }})
    r"""Members can search for others in the same email domain."""  
    search_by_ma_account: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_by_ma_account'), 'exclude': lambda f: f is None }})
    r"""Members can search for others under same master account, including all sub accounts."""  
    type: Optional[ImGroupCreateApplicationJSONTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""IM Group types:<br>`normal` - Only members can see automatically see the other members of this group. Other people can search for members within this group. <br>`shared` - Everyone under an account can see the group members automatically.<br>`restricted` - Nobody can see the group or search for members except the members in the group."""  
    

@dataclasses.dataclass
class ImGroupCreate201ApplicationXML:
    r"""**HTTP Status Code:** `201`<br>
    IM Group created.
    """
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Group ID."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Group name."""  
    search_by_account: Optional[bool] = dataclasses.field(default=None)
    r"""Members can search for others under same account."""  
    search_by_domain: Optional[bool] = dataclasses.field(default=None)
    r"""Members can search for others in the same email domain."""  
    search_by_ma_account: Optional[bool] = dataclasses.field(default=None)
    r"""Members can search for others under same master account, including all sub accounts."""  
    total_members: Optional[int] = dataclasses.field(default=None)
    r"""Group member count."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImGroupCreate201ApplicationJSON:
    r"""**HTTP Status Code:** `201`<br>
    IM Group created.
    """
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Group ID."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Group name."""  
    search_by_account: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_by_account'), 'exclude': lambda f: f is None }})
    r"""Members can search for others under same account."""  
    search_by_domain: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_by_domain'), 'exclude': lambda f: f is None }})
    r"""Members can search for others in the same email domain."""  
    search_by_ma_account: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_by_ma_account'), 'exclude': lambda f: f is None }})
    r"""Members can search for others under same master account, including all sub accounts."""  
    total_members: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_members'), 'exclude': lambda f: f is None }})
    r"""Group member count."""  
    

@dataclasses.dataclass
class ImGroupCreateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    im_group_create_201_application_json_object: Optional[ImGroupCreate201ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `201`<br>
    IM Group created.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    