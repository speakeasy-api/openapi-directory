/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * WebinarAbsenteesRegistrationListRegistrants - Registrant base object.
 */
public class WebinarAbsenteesRegistrationListRegistrants {
    /**
     * Registrant's address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;
    public WebinarAbsenteesRegistrationListRegistrants withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * Registrant's city.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public WebinarAbsenteesRegistrationListRegistrants withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * A field that allows registrants to provide any questions or comments that they might have.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public String comments;
    public WebinarAbsenteesRegistrationListRegistrants withComments(String comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public WebinarAbsenteesRegistrationListRegistrants withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The time at which the registrant registered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("create_time")
    public OffsetDateTime createTime;
    public WebinarAbsenteesRegistrationListRegistrants withCreateTime(OffsetDateTime createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Custom questions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_questions")
    public WebinarAbsenteesRegistrationListRegistrantsCustomQuestions[] customQuestions;
    public WebinarAbsenteesRegistrationListRegistrants withCustomQuestions(WebinarAbsenteesRegistrationListRegistrantsCustomQuestions[] customQuestions) {
        this.customQuestions = customQuestions;
        return this;
    }
    
    /**
     * A valid email address of the registrant.
     */
    @JsonProperty("email")
    public String email;
    public WebinarAbsenteesRegistrationListRegistrants withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Registrant's first name.
     */
    @JsonProperty("first_name")
    public String firstName;
    public WebinarAbsenteesRegistrationListRegistrants withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Registrant ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public WebinarAbsenteesRegistrationListRegistrants withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Registrant's Industry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("industry")
    public String industry;
    public WebinarAbsenteesRegistrationListRegistrants withIndustry(String industry) {
        this.industry = industry;
        return this;
    }
    
    /**
     * Registrant's job title.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("job_title")
    public String jobTitle;
    public WebinarAbsenteesRegistrationListRegistrants withJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
        return this;
    }
    
    /**
     * The URL using which an approved registrant can join the webinar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("join_url")
    public String joinUrl;
    public WebinarAbsenteesRegistrationListRegistrants withJoinUrl(String joinUrl) {
        this.joinUrl = joinUrl;
        return this;
    }
    
    /**
     * Registrant's last name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    public String lastName;
    public WebinarAbsenteesRegistrationListRegistrants withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Number of Employees:&lt;br&gt;`1-20`&lt;br&gt;`21-50`&lt;br&gt;`51-100`&lt;br&gt;`101-500`&lt;br&gt;`500-1,000`&lt;br&gt;`1,001-5,000`&lt;br&gt;`5,001-10,000`&lt;br&gt;`More than 10,000`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("no_of_employees")
    public String noOfEmployees;
    public WebinarAbsenteesRegistrationListRegistrants withNoOfEmployees(String noOfEmployees) {
        this.noOfEmployees = noOfEmployees;
        return this;
    }
    
    /**
     * Registrant's Organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("org")
    public String org;
    public WebinarAbsenteesRegistrationListRegistrants withOrg(String org) {
        this.org = org;
        return this;
    }
    
    /**
     * Registrant's Phone number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;
    public WebinarAbsenteesRegistrationListRegistrants withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     * This field can be included to gauge interest of webinar attendees towards buying your product or service.
     * 
     * Purchasing Time Frame:&lt;br&gt;`Within a month`&lt;br&gt;`1-3 months`&lt;br&gt;`4-6 months`&lt;br&gt;`More than 6 months`&lt;br&gt;`No timeframe`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchasing_time_frame")
    public String purchasingTimeFrame;
    public WebinarAbsenteesRegistrationListRegistrants withPurchasingTimeFrame(String purchasingTimeFrame) {
        this.purchasingTimeFrame = purchasingTimeFrame;
        return this;
    }
    
    /**
     * Role in Purchase Process:&lt;br&gt;`Decision Maker`&lt;br&gt;`Evaluator/Recommender`&lt;br&gt;`Influencer`&lt;br&gt;`Not involved` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role_in_purchase_process")
    public String roleInPurchaseProcess;
    public WebinarAbsenteesRegistrationListRegistrants withRoleInPurchaseProcess(String roleInPurchaseProcess) {
        this.roleInPurchaseProcess = roleInPurchaseProcess;
        return this;
    }
    
    /**
     * Registrant's State/Province.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public WebinarAbsenteesRegistrationListRegistrants withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * The status of the registrant's registration. &lt;br&gt; `approved`: User has been successfully approved for the webinar.&lt;br&gt; `pending`:  The registration is still pending.&lt;br&gt; `denied`: User has been denied from joining the webinar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public WebinarAbsenteesRegistrationListRegistrants withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Registrant's Zip/Postal Code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zip")
    public String zip;
    public WebinarAbsenteesRegistrationListRegistrants withZip(String zip) {
        this.zip = zip;
        return this;
    }
    
}
