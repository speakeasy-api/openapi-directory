"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkweekConfig:
    r"""Sets the day of the week and hour of the day that a business starts a
    workweek. This is used to calculate overtime pay.
    """
    
    start_of_day_local_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_of_day_local_time') }})
    r"""The local time at which a business week ends. Represented as a
    string in `HH:MM` format (`HH:MM:SS` is also accepted, but seconds are
    truncated).
    """  
    start_of_week: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_of_week') }})
    r"""The day of the week on which a business week ends for
    compensation purposes.
    """  
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""A read-only timestamp in RFC 3339 format; presented in UTC."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The UUID for this object."""  
    updated_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_at'), 'exclude': lambda f: f is None }})
    r"""A read-only timestamp in RFC 3339 format; presented in UTC."""  
    version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""Used for resolving concurrency issues. The request fails if the version
    provided does not match the server version at the time of the request. If not provided,
    Square executes a blind write; potentially overwriting data from another
    write.
    """  
    