// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum - Commercial grade disinfectant cleaning exception.
type EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum string

const (
	EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnumExceptionUnspecified EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum = "EXCEPTION_UNSPECIFIED"
	EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnumUnderConstruction    EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum = "UNDER_CONSTRUCTION"
	EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnumDependentOnSeason    EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum = "DEPENDENT_ON_SEASON"
	EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnumDependentOnDayOfWeek EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum) ToPointer() *EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum {
	return &e
}

func (e *EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum: %v", v)
	}
}

// EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum - Common areas enhanced cleaning exception.
type EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum string

const (
	EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnumExceptionUnspecified EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum = "EXCEPTION_UNSPECIFIED"
	EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnumUnderConstruction    EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum = "UNDER_CONSTRUCTION"
	EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnumDependentOnSeason    EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum = "DEPENDENT_ON_SEASON"
	EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnumDependentOnDayOfWeek EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum) ToPointer() *EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum {
	return &e
}

func (e *EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum: %v", v)
	}
}

// EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum - Employees trained cleaning procedures exception.
type EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum string

const (
	EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnumExceptionUnspecified EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum = "EXCEPTION_UNSPECIFIED"
	EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnumUnderConstruction    EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum = "UNDER_CONSTRUCTION"
	EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnumDependentOnSeason    EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum = "DEPENDENT_ON_SEASON"
	EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnumDependentOnDayOfWeek EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum) ToPointer() *EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum {
	return &e
}

func (e *EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum: %v", v)
	}
}

// EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum - Employees trained thorough hand washing exception.
type EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum string

const (
	EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnumExceptionUnspecified EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum = "EXCEPTION_UNSPECIFIED"
	EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnumUnderConstruction    EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum = "UNDER_CONSTRUCTION"
	EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnumDependentOnSeason    EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum = "DEPENDENT_ON_SEASON"
	EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnumDependentOnDayOfWeek EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum) ToPointer() *EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum {
	return &e
}

func (e *EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum: %v", v)
	}
}

// EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum - Employees wear protective equipment exception.
type EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum string

const (
	EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnumExceptionUnspecified EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum = "EXCEPTION_UNSPECIFIED"
	EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnumUnderConstruction    EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum = "UNDER_CONSTRUCTION"
	EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnumDependentOnSeason    EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum = "DEPENDENT_ON_SEASON"
	EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnumDependentOnDayOfWeek EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum) ToPointer() *EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum {
	return &e
}

func (e *EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum: %v", v)
	}
}

// EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum - Guest rooms enhanced cleaning exception.
type EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum string

const (
	EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnumExceptionUnspecified EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum = "EXCEPTION_UNSPECIFIED"
	EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnumUnderConstruction    EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum = "UNDER_CONSTRUCTION"
	EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnumDependentOnSeason    EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum = "DEPENDENT_ON_SEASON"
	EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnumDependentOnDayOfWeek EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum) ToPointer() *EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum {
	return &e
}

func (e *EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum: %v", v)
	}
}

// EnhancedCleaning - Enhanced cleaning measures implemented by the hotel during COVID-19.
type EnhancedCleaning struct {
	// Commercial-grade disinfectant used to clean the property.
	CommercialGradeDisinfectantCleaning *bool `json:"commercialGradeDisinfectantCleaning,omitempty"`
	// Commercial grade disinfectant cleaning exception.
	CommercialGradeDisinfectantCleaningException *EnhancedCleaningCommercialGradeDisinfectantCleaningExceptionEnum `json:"commercialGradeDisinfectantCleaningException,omitempty"`
	// Enhanced cleaning of common areas.
	CommonAreasEnhancedCleaning *bool `json:"commonAreasEnhancedCleaning,omitempty"`
	// Common areas enhanced cleaning exception.
	CommonAreasEnhancedCleaningException *EnhancedCleaningCommonAreasEnhancedCleaningExceptionEnum `json:"commonAreasEnhancedCleaningException,omitempty"`
	// Employees trained in COVID-19 cleaning procedures.
	EmployeesTrainedCleaningProcedures *bool `json:"employeesTrainedCleaningProcedures,omitempty"`
	// Employees trained cleaning procedures exception.
	EmployeesTrainedCleaningProceduresException *EnhancedCleaningEmployeesTrainedCleaningProceduresExceptionEnum `json:"employeesTrainedCleaningProceduresException,omitempty"`
	// Employees trained in thorough hand-washing.
	EmployeesTrainedThoroughHandWashing *bool `json:"employeesTrainedThoroughHandWashing,omitempty"`
	// Employees trained thorough hand washing exception.
	EmployeesTrainedThoroughHandWashingException *EnhancedCleaningEmployeesTrainedThoroughHandWashingExceptionEnum `json:"employeesTrainedThoroughHandWashingException,omitempty"`
	// Employees wear masks, face shields, and/or gloves.
	EmployeesWearProtectiveEquipment *bool `json:"employeesWearProtectiveEquipment,omitempty"`
	// Employees wear protective equipment exception.
	EmployeesWearProtectiveEquipmentException *EnhancedCleaningEmployeesWearProtectiveEquipmentExceptionEnum `json:"employeesWearProtectiveEquipmentException,omitempty"`
	// Enhanced cleaning of guest rooms.
	GuestRoomsEnhancedCleaning *bool `json:"guestRoomsEnhancedCleaning,omitempty"`
	// Guest rooms enhanced cleaning exception.
	GuestRoomsEnhancedCleaningException *EnhancedCleaningGuestRoomsEnhancedCleaningExceptionEnum `json:"guestRoomsEnhancedCleaningException,omitempty"`
}
