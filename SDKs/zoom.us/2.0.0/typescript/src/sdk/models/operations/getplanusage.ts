/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetPlanUsageSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class GetPlanUsageRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=accountId",
  })
  accountId: string;
}

export class GetPlanUsage200ApplicationXMLPlanBase extends SpeakeasyBase {
  /**
   * Number of hosts under the base plan.
   */
  @SpeakeasyMetadata()
  hosts?: number;

  /**
   * Type of the base plan.
   */
  @SpeakeasyMetadata()
  type?: string;

  /**
   * Total number of usage of this plan.
   */
  @SpeakeasyMetadata()
  usage?: number;
}

export class GetPlanUsage200ApplicationXMLPlanLargeMeeting extends SpeakeasyBase {
  /**
   * Number of hosts in this plan.
   */
  @SpeakeasyMetadata()
  hosts?: number;

  /**
   * Large meeting Plan Type
   */
  @SpeakeasyMetadata()
  type?: string;

  /**
   * Number of usages for this account plan.
   */
  @SpeakeasyMetadata()
  usage?: number;
}

/**
 * Recording Plan
 */
export class GetPlanUsage200ApplicationXMLPlanRecording extends SpeakeasyBase {
  /**
   * Recording free storage.
   */
  @SpeakeasyMetadata()
  freeStorage?: string;

  /**
   * Amount of free storage used.
   */
  @SpeakeasyMetadata()
  freeStorageUsage?: string;

  /**
   * Recording plan storage.
   */
  @SpeakeasyMetadata()
  planStorage?: string;

  @SpeakeasyMetadata()
  planStorageExceed?: string;

  /**
   * Recording storage usage.
   */
  @SpeakeasyMetadata()
  planStorageUsage?: string;

  /**
   * Recording plan type.
   */
  @SpeakeasyMetadata()
  type?: string;
}

/**
 * [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
 */
export class GetPlanUsage200ApplicationXMLPlanUnited extends SpeakeasyBase {
  /**
   * Number of licenses purchased.
   */
  @SpeakeasyMetadata()
  hosts?: number;

  /**
   * Name of the plan.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-united-plans).
   */
  @SpeakeasyMetadata()
  type?: string;

  /**
   * Number of licenses that are already being used.
   */
  @SpeakeasyMetadata()
  usage?: number;
}

export class GetPlanUsage200ApplicationXMLPlanWebinar extends SpeakeasyBase {
  /**
   * The number of hosts in this plan.
   */
  @SpeakeasyMetadata()
  hosts?: number;

  /**
   * The type of Webinar plan for the account.
   */
  @SpeakeasyMetadata()
  type?: string;

  /**
   * The total number of plan usage.
   */
  @SpeakeasyMetadata()
  usage?: number;
}

export class GetPlanUsage200ApplicationXMLPlanZoomRooms extends SpeakeasyBase {
  /**
   * The number of hosts in this plan.
   */
  @SpeakeasyMetadata()
  hosts?: number;

  /**
   * THe plan type for Zoom room plan.
   */
  @SpeakeasyMetadata()
  type?: string;

  /**
   * The total number of usage for this plan.
   */
  @SpeakeasyMetadata()
  usage?: number;
}

/**
 * **HTTP Status Code:** `200` <br>
 *
 * @remarks
 * Plan Usage returned.<br>
 */
export class GetPlanUsage200ApplicationXML extends SpeakeasyBase {
  /**
   * The base plan subscribed for the sub account.
   */
  @SpeakeasyMetadata({ elemType: GetPlanUsage200ApplicationXMLPlanBase })
  planBase?: GetPlanUsage200ApplicationXMLPlanBase[];

  /**
   * Large Meeting Plan
   */
  @SpeakeasyMetadata({
    elemType: GetPlanUsage200ApplicationXMLPlanLargeMeeting,
  })
  planLargeMeeting?: GetPlanUsage200ApplicationXMLPlanLargeMeeting[];

  /**
   * Recording Plan
   */
  @SpeakeasyMetadata()
  planRecording?: GetPlanUsage200ApplicationXMLPlanRecording;

  /**
   * [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
   */
  @SpeakeasyMetadata()
  planUnited?: GetPlanUsage200ApplicationXMLPlanUnited;

  /**
   * Webinar Plan
   */
  @SpeakeasyMetadata({ elemType: GetPlanUsage200ApplicationXMLPlanWebinar })
  planWebinar?: GetPlanUsage200ApplicationXMLPlanWebinar[];

  /**
   * Zoom Rooms Plan
   */
  @SpeakeasyMetadata({ elemType: GetPlanUsage200ApplicationXMLPlanZoomRooms })
  planZoomRooms?: GetPlanUsage200ApplicationXMLPlanZoomRooms[];
}

export class GetPlanUsage200ApplicationJSONPlanBase extends SpeakeasyBase {
  /**
   * Number of hosts under the base plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts?: number;

  /**
   * Type of the base plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Total number of usage of this plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage?: number;
}

export class GetPlanUsage200ApplicationJSONPlanLargeMeeting extends SpeakeasyBase {
  /**
   * Number of hosts in this plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts?: number;

  /**
   * Large meeting Plan Type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Number of usages for this account plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage?: number;
}

/**
 * Recording Plan
 */
export class GetPlanUsage200ApplicationJSONPlanRecording extends SpeakeasyBase {
  /**
   * Recording free storage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "free_storage" })
  freeStorage?: string;

  /**
   * Amount of free storage used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "free_storage_usage" })
  freeStorageUsage?: string;

  /**
   * Recording plan storage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_storage" })
  planStorage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "plan_storage_exceed" })
  planStorageExceed?: string;

  /**
   * Recording storage usage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_storage_usage" })
  planStorageUsage?: string;

  /**
   * Recording plan type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
 */
export class GetPlanUsage200ApplicationJSONPlanUnited extends SpeakeasyBase {
  /**
   * Number of licenses purchased.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts?: number;

  /**
   * Name of the plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-united-plans).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Number of licenses that are already being used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage?: number;
}

export class GetPlanUsage200ApplicationJSONPlanWebinar extends SpeakeasyBase {
  /**
   * The number of hosts in this plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts?: number;

  /**
   * The type of Webinar plan for the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The total number of plan usage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage?: number;
}

export class GetPlanUsage200ApplicationJSONPlanZoomRooms extends SpeakeasyBase {
  /**
   * The number of hosts in this plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts?: number;

  /**
   * THe plan type for Zoom room plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The total number of usage for this plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage?: number;
}

/**
 * **HTTP Status Code:** `200` <br>
 *
 * @remarks
 * Plan Usage returned.<br>
 */
export class GetPlanUsage200ApplicationJSON extends SpeakeasyBase {
  /**
   * The base plan subscribed for the sub account.
   */
  @SpeakeasyMetadata({ elemType: GetPlanUsage200ApplicationJSONPlanBase })
  @Expose({ name: "plan_base" })
  @Type(() => GetPlanUsage200ApplicationJSONPlanBase)
  planBase?: GetPlanUsage200ApplicationJSONPlanBase[];

  /**
   * Large Meeting Plan
   */
  @SpeakeasyMetadata({
    elemType: GetPlanUsage200ApplicationJSONPlanLargeMeeting,
  })
  @Expose({ name: "plan_large_meeting" })
  @Type(() => GetPlanUsage200ApplicationJSONPlanLargeMeeting)
  planLargeMeeting?: GetPlanUsage200ApplicationJSONPlanLargeMeeting[];

  /**
   * Recording Plan
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_recording" })
  @Type(() => GetPlanUsage200ApplicationJSONPlanRecording)
  planRecording?: GetPlanUsage200ApplicationJSONPlanRecording;

  /**
   * [Zoom United](https://zoom.us/pricing/zoom-bundles) plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_united" })
  @Type(() => GetPlanUsage200ApplicationJSONPlanUnited)
  planUnited?: GetPlanUsage200ApplicationJSONPlanUnited;

  /**
   * Webinar Plan
   */
  @SpeakeasyMetadata({ elemType: GetPlanUsage200ApplicationJSONPlanWebinar })
  @Expose({ name: "plan_webinar" })
  @Type(() => GetPlanUsage200ApplicationJSONPlanWebinar)
  planWebinar?: GetPlanUsage200ApplicationJSONPlanWebinar[];

  /**
   * Zoom Rooms Plan
   */
  @SpeakeasyMetadata({ elemType: GetPlanUsage200ApplicationJSONPlanZoomRooms })
  @Expose({ name: "plan_zoom_rooms" })
  @Type(() => GetPlanUsage200ApplicationJSONPlanZoomRooms)
  planZoomRooms?: GetPlanUsage200ApplicationJSONPlanZoomRooms[];
}

export class GetPlanUsageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` <br>
   *
   * @remarks
   * Plan Usage returned.<br>
   */
  @SpeakeasyMetadata()
  getPlanUsage200ApplicationJSONObject?: GetPlanUsage200ApplicationJSON;
}
