/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { V3Disruption } from "./v3disruption";
import { V3Status } from "./v3status";
import { V3StopOnRoute } from "./v3stoponroute";
import { Expose, Transform, Type } from "class-transformer";

/**
 * All stops on the specified route.
 */
export class V3StopsOnRouteResponse extends SpeakeasyBase {
  /**
   * Disruption information applicable to relevant routes or stops
   */
  @SpeakeasyMetadata({ elemType: V3Disruption })
  @Expose({ name: "disruptions" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, V3Disruption> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], V3Disruption);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  disruptions?: Record<string, V3Disruption>;

  /**
   * GeoPath for the route
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geopath" })
  geopath?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => V3Status)
  status?: V3Status;

  /**
   * Train stations, tram stops, bus stops, regional coach stops or Night Bus stops
   */
  @SpeakeasyMetadata({ elemType: V3StopOnRoute })
  @Expose({ name: "stops" })
  @Type(() => V3StopOnRoute)
  stops?: V3StopOnRoute[];
}
