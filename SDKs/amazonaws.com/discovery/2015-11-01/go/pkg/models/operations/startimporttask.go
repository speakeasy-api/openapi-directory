// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartImportTaskXAmzTargetEnum
type StartImportTaskXAmzTargetEnum string

const (
	StartImportTaskXAmzTargetEnumAwsPoseidonServiceV20151101StartImportTask StartImportTaskXAmzTargetEnum = "AWSPoseidonService_V2015_11_01.StartImportTask"
)

func (e StartImportTaskXAmzTargetEnum) ToPointer() *StartImportTaskXAmzTargetEnum {
	return &e
}

func (e *StartImportTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSPoseidonService_V2015_11_01.StartImportTask":
		*e = StartImportTaskXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartImportTaskXAmzTargetEnum: %v", v)
	}
}

type StartImportTaskRequest struct {
	StartImportTaskRequest shared.StartImportTaskRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             StartImportTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartImportTaskResponse struct {
	// AuthorizationErrorException
	AuthorizationErrorException interface{}
	ContentType                 string
	// HomeRegionNotSetException
	HomeRegionNotSetException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ServerInternalErrorException
	ServerInternalErrorException interface{}
	// Success
	StartImportTaskResponse *shared.StartImportTaskResponse
	StatusCode              int
	RawResponse             *http.Response
}
