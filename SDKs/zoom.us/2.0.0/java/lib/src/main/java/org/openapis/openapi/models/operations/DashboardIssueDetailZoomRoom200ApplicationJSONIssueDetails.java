/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails {
    /**
     * Zoom Room Issue Detail.&lt;br&gt; The value of the this field could be one of the following:&lt;br&gt;
     * * `Room Controller disconnected`&lt;br&gt;
     * * `Room Controller connected`
     * * `Selected camera has disconnected`
     * * `Selected camera is reconnected`
     * * `Selected microphone has disconnected`
     * * `Selected microphone is reconnected`
     * * `Selected speaker has disconnected`
     * * `Selected speaker is reconnected`
     * * `Zoom room is offline`
     * * `Zoom room is online`
     * * `High CPU usage is detected`
     * * `Low bandwidth network is detected`
     * * `{name} battery is low`
     * * `{name} battery is normal`
     * * `{name} disconnected`
     * * `{name} connected`
     * * `{name} is not charging`
     * 
     * Possible values for {name}: &lt;br&gt;
     * * Zoom Rooms Computer 
     * * Controller
     * * Scheduling Display
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issue")
    public String issue;
    public DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails withIssue(String issue) {
        this.issue = issue;
        return this;
    }
    
    /**
     * Time at which the issue was encountered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("time")
    public OffsetDateTime time;
    public DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails withTime(OffsetDateTime time) {
        this.time = time;
        return this;
    }
    
}
