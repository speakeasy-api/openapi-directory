"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import runner_groups_org as shared_runner_groups_org
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ActionsUpdateSelfHostedRunnerGroupForOrgRequestBodyVisibilityEnum(str, Enum):
    r"""Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories. Can be one of: `all`, `selected`, or `private`."""
    SELECTED = 'selected'
    ALL = 'all'
    PRIVATE = 'private'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsUpdateSelfHostedRunnerGroupForOrgRequestBody:
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the runner group."""  
    visibility: Optional[ActionsUpdateSelfHostedRunnerGroupForOrgRequestBodyVisibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visibility'), 'exclude': lambda f: f is None }})
    r"""Visibility of a runner group. You can select all repositories, select individual repositories, or all private repositories. Can be one of: `all`, `selected`, or `private`."""  
    

@dataclasses.dataclass
class ActionsUpdateSelfHostedRunnerGroupForOrgRequest:
    
    org: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org', 'style': 'simple', 'explode': False }})  
    request_body: ActionsUpdateSelfHostedRunnerGroupForOrgRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    runner_group_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'runner_group_id', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the self-hosted runner group."""  
    

@dataclasses.dataclass
class ActionsUpdateSelfHostedRunnerGroupForOrgResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    runner_groups_org: Optional[shared_runner_groups_org.RunnerGroupsOrg] = dataclasses.field(default=None)
    r"""Response"""  
    