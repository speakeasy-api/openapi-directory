/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Ipv6CidrBlockAssociation } from "./ipv6cidrblockassociation";
import { Expose, Type } from "class-transformer";

/**
 * Contains information about a subnet in Amazon EC2.
 */
export class AwsEc2SubnetDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssignIpv6AddressOnCreation" })
  assignIpv6AddressOnCreation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AvailabilityZone" })
  availabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AvailabilityZoneId" })
  availabilityZoneId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AvailableIpAddressCount" })
  availableIpAddressCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CidrBlock" })
  cidrBlock?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultForAz" })
  defaultForAz?: boolean;

  @SpeakeasyMetadata({ elemType: Ipv6CidrBlockAssociation })
  @Expose({ name: "Ipv6CidrBlockAssociationSet" })
  @Type(() => Ipv6CidrBlockAssociation)
  ipv6CidrBlockAssociationSet?: Ipv6CidrBlockAssociation[];

  @SpeakeasyMetadata()
  @Expose({ name: "MapPublicIpOnLaunch" })
  mapPublicIpOnLaunch?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "OwnerId" })
  ownerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetArn" })
  subnetArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetId" })
  subnetId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcId" })
  vpcId?: string;
}
