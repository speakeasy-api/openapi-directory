"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import onboardinglink as shared_onboardinglink
from ..shared import onboardinglinkinfo as shared_onboardinglinkinfo
from ..shared import security as shared_security
from ..shared import serviceerror as shared_serviceerror
from typing import Optional


@dataclasses.dataclass
class PostLegalEntitiesIDOnboardingLinksSecurity:
    
    api_key_auth: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Key' }})  
    basic_auth: Optional[shared_security.SchemeBasicAuth] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    

@dataclasses.dataclass
class PostLegalEntitiesIDOnboardingLinksRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the legal entity"""  
    onboarding_link_info: Optional[shared_onboardinglinkinfo.OnboardingLinkInfo] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PostLegalEntitiesIDOnboardingLinksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    onboarding_link: Optional[shared_onboardinglink.OnboardingLink] = dataclasses.field(default=None)
    r"""OK - the request has succeeded."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    service_error: Optional[shared_serviceerror.ServiceError] = dataclasses.field(default=None)
    r"""Bad Request - a problem reading or understanding the request."""  
    