/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MeasurementUnit } from "./measurementunit";
import { Expose, Type } from "class-transformer";

/**
 * Represents the unit used to measure a `CatalogItemVariation` and
 *
 * @remarks
 * specifies the precision for decimal quantities.
 */
export class CatalogMeasurementUnit extends SpeakeasyBase {
  /**
   * Represents a unit of measurement to use with a quantity, such as ounces
   *
   * @remarks
   * or inches. Exactly one of the following fields are required: `custom_unit`,
   * `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "measurement_unit" })
  @Type(() => MeasurementUnit)
  measurementUnit?: MeasurementUnit;

  /**
   * An integer between 0 and 5 that represents the maximum number of
   *
   * @remarks
   * positions allowed after the decimal in quantities measured with this unit.
   * For example:
   *
   * - if the precision is 0, the quantity can be 1, 2, 3, etc.
   * - if the precision is 1, the quantity can be 0.1, 0.2, etc.
   * - if the precision is 2, the quantity can be 0.01, 0.12, etc.
   *
   * Default: 3
   */
  @SpeakeasyMetadata()
  @Expose({ name: "precision" })
  precision?: number;
}
