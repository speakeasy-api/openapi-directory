// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetPricing200ApplicationJSONPricingFloatingIPPriceMonthly struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

// GetPricing200ApplicationJSONPricingFloatingIP - The cost of one Floating IP per month
type GetPricing200ApplicationJSONPricingFloatingIP struct {
	PriceMonthly GetPricing200ApplicationJSONPricingFloatingIPPriceMonthly `json:"price_monthly"`
}

// GetPricing200ApplicationJSONPricingFloatingIpsPricesPriceMonthly - Monthly costs for a Floating IP type in this Location
type GetPricing200ApplicationJSONPricingFloatingIpsPricesPriceMonthly struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

type GetPricing200ApplicationJSONPricingFloatingIpsPrices struct {
	// Name of the Location the price is for
	Location string `json:"location"`
	// Monthly costs for a Floating IP type in this Location
	PriceMonthly GetPricing200ApplicationJSONPricingFloatingIpsPricesPriceMonthly `json:"price_monthly"`
}

// GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum - The type of the Floating IP
type GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum string

const (
	GetPricing200ApplicationJSONPricingFloatingIpsTypeEnumIpv4 GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum = "ipv4"
	GetPricing200ApplicationJSONPricingFloatingIpsTypeEnumIpv6 GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum = "ipv6"
)

func (e *GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ipv4":
		fallthrough
	case "ipv6":
		*e = GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum: %s", s)
	}
}

type GetPricing200ApplicationJSONPricingFloatingIps struct {
	// Floating IP type costs per Location
	Prices []GetPricing200ApplicationJSONPricingFloatingIpsPrices `json:"prices"`
	// The type of the Floating IP
	Type GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum `json:"type"`
}

type GetPricing200ApplicationJSONPricingImagePricePerGbMonth struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

// GetPricing200ApplicationJSONPricingImage - The cost of Image per GB/month
type GetPricing200ApplicationJSONPricingImage struct {
	PricePerGbMonth GetPricing200ApplicationJSONPricingImagePricePerGbMonth `json:"price_per_gb_month"`
}

// GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceHourly - Hourly costs for a Load Balancer type in this network zone
type GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceHourly struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

// GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceMonthly - Monthly costs for a Load Balancer type in this network zone
type GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceMonthly struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

type GetPricing200ApplicationJSONPricingLoadBalancerTypesPrices struct {
	// Name of the Location the price is for
	Location string `json:"location"`
	// Hourly costs for a Load Balancer type in this network zone
	PriceHourly GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceHourly `json:"price_hourly"`
	// Monthly costs for a Load Balancer type in this network zone
	PriceMonthly GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceMonthly `json:"price_monthly"`
}

type GetPricing200ApplicationJSONPricingLoadBalancerTypes struct {
	// ID of the Load Balancer type the price is for
	ID float64 `json:"id"`
	// Name of the Load Balancer type the price is for
	Name string `json:"name"`
	// Load Balancer type costs per Location
	Prices []GetPricing200ApplicationJSONPricingLoadBalancerTypesPrices `json:"prices"`
}

// GetPricing200ApplicationJSONPricingServerBackup - Will increase base Server costs by specific percentage
type GetPricing200ApplicationJSONPricingServerBackup struct {
	// Percentage by how much the base price will increase
	Percentage string `json:"percentage"`
}

// GetPricing200ApplicationJSONPricingServerTypesPricesPriceHourly - Hourly costs for a Server type in this Location
type GetPricing200ApplicationJSONPricingServerTypesPricesPriceHourly struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

// GetPricing200ApplicationJSONPricingServerTypesPricesPriceMonthly - Monthly costs for a Server type in this Location
type GetPricing200ApplicationJSONPricingServerTypesPricesPriceMonthly struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

type GetPricing200ApplicationJSONPricingServerTypesPrices struct {
	// Name of the Location the price is for
	Location string `json:"location"`
	// Hourly costs for a Server type in this Location
	PriceHourly GetPricing200ApplicationJSONPricingServerTypesPricesPriceHourly `json:"price_hourly"`
	// Monthly costs for a Server type in this Location
	PriceMonthly GetPricing200ApplicationJSONPricingServerTypesPricesPriceMonthly `json:"price_monthly"`
}

type GetPricing200ApplicationJSONPricingServerTypes struct {
	// ID of the Server type the price is for
	ID float64 `json:"id"`
	// Name of the Server type the price is for
	Name string `json:"name"`
	// Server type costs per Location
	Prices []GetPricing200ApplicationJSONPricingServerTypesPrices `json:"prices"`
}

type GetPricing200ApplicationJSONPricingTrafficPricePerTb struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

// GetPricing200ApplicationJSONPricingTraffic - The cost of additional traffic per TB
type GetPricing200ApplicationJSONPricingTraffic struct {
	PricePerTb GetPricing200ApplicationJSONPricingTrafficPricePerTb `json:"price_per_tb"`
}

type GetPricing200ApplicationJSONPricingVolumePricePerGbMonth struct {
	// Price with VAT added
	Gross string `json:"gross"`
	// Price without VAT
	Net string `json:"net"`
}

// GetPricing200ApplicationJSONPricingVolume - The cost of Volume per GB/month
type GetPricing200ApplicationJSONPricingVolume struct {
	PricePerGbMonth GetPricing200ApplicationJSONPricingVolumePricePerGbMonth `json:"price_per_gb_month"`
}

type GetPricing200ApplicationJSONPricing struct {
	// Currency the returned prices are expressed in, coded according to ISO 4217
	Currency string `json:"currency"`
	// The cost of one Floating IP per month
	FloatingIP GetPricing200ApplicationJSONPricingFloatingIP `json:"floating_ip"`
	// Costs of Floating IPs types per Location and type
	FloatingIps []GetPricing200ApplicationJSONPricingFloatingIps `json:"floating_ips"`
	// The cost of Image per GB/month
	Image GetPricing200ApplicationJSONPricingImage `json:"image"`
	// Costs of Load Balancer types per Location and type
	LoadBalancerTypes []GetPricing200ApplicationJSONPricingLoadBalancerTypes `json:"load_balancer_types"`
	// Will increase base Server costs by specific percentage
	ServerBackup GetPricing200ApplicationJSONPricingServerBackup `json:"server_backup"`
	// Costs of Server types per Location and type
	ServerTypes []GetPricing200ApplicationJSONPricingServerTypes `json:"server_types"`
	// The cost of additional traffic per TB
	Traffic GetPricing200ApplicationJSONPricingTraffic `json:"traffic"`
	// The VAT rate used for calculating prices with VAT
	VatRate string `json:"vat_rate"`
	// The cost of Volume per GB/month
	Volume GetPricing200ApplicationJSONPricingVolume `json:"volume"`
}

// GetPricing200ApplicationJSON - The `pricing` key in the reply contains an pricing object with this structure
type GetPricing200ApplicationJSON struct {
	Pricing GetPricing200ApplicationJSONPricing `json:"pricing"`
}

type GetPricingResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The `pricing` key in the reply contains an pricing object with this structure
	GetPricing200ApplicationJSONObject *GetPricing200ApplicationJSON
}
