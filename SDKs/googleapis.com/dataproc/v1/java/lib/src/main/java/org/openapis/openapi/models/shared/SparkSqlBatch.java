/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SparkSqlBatch - A configuration for running Apache Spark SQL (https://spark.apache.org/sql/) queries as a batch workload.
 */
public class SparkSqlBatch {
    /**
     * Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jarFileUris")
    public String[] jarFileUris;
    public SparkSqlBatch withJarFileUris(String[] jarFileUris) {
        this.jarFileUris = jarFileUris;
        return this;
    }
    
    /**
     * Required. The HCFS URI of the script that contains Spark SQL queries to execute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryFileUri")
    public String queryFileUri;
    public SparkSqlBatch withQueryFileUri(String queryFileUri) {
        this.queryFileUri = queryFileUri;
        return this;
    }
    
    /**
     * Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryVariables")
    public java.util.Map<String, String> queryVariables;
    public SparkSqlBatch withQueryVariables(java.util.Map<String, String> queryVariables) {
        this.queryVariables = queryVariables;
        return this;
    }
    
}
