<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateMetricSetRequestBody
{
    /**
     * Describes a list of filters for choosing specific dimensions and specific values. Each filter consists of the dimension and one of its values that you want to include. When multiple dimensions or values are specified, the dimensions are joined with an AND operation and the values are joined with an OR operation.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MetricSetDimensionFilter> $dimensionFilterList
     */
	#[\JMS\Serializer\Annotation\SerializedName('DimensionFilterList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MetricSetDimensionFilter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dimensionFilterList = null;
    
    /**
     * The dimension list.
     * 
     * @var ?array<string> $dimensionList
     */
	#[\JMS\Serializer\Annotation\SerializedName('DimensionList')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dimensionList = null;
    
    /**
     * The metric list.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Metric> $metricList
     */
	#[\JMS\Serializer\Annotation\SerializedName('MetricList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Metric>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metricList = null;
    
    /**
     * The ARN of the dataset to update.
     * 
     * @var string $metricSetArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('MetricSetArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $metricSetArn;
    
    /**
     * The dataset's description.
     * 
     * @var ?string $metricSetDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('MetricSetDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $metricSetDescription = null;
    
    /**
     * The dataset's interval.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateMetricSetRequestBodyMetricSetFrequencyEnum $metricSetFrequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('MetricSetFrequency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateMetricSetRequestBodyMetricSetFrequencyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateMetricSetRequestBodyMetricSetFrequencyEnum $metricSetFrequency = null;
    
    /**
     * Contains information about source data used to generate metrics.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateMetricSetRequestBodyMetricSource $metricSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('MetricSource')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateMetricSetRequestBodyMetricSource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateMetricSetRequestBodyMetricSource $metricSource = null;
    
    /**
     * After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.
     * 
     * @var ?int $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('Offset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $offset = null;
    
    /**
     * Contains information about the column used to track time in a source data file.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateMetricSetRequestBodyTimestampColumn $timestampColumn
     */
	#[\JMS\Serializer\Annotation\SerializedName('TimestampColumn')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateMetricSetRequestBodyTimestampColumn')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateMetricSetRequestBodyTimestampColumn $timestampColumn = null;
    
	public function __construct()
	{
		$this->dimensionFilterList = null;
		$this->dimensionList = null;
		$this->metricList = null;
		$this->metricSetArn = "";
		$this->metricSetDescription = null;
		$this->metricSetFrequency = null;
		$this->metricSource = null;
		$this->offset = null;
		$this->timestampColumn = null;
	}
}
