/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Additional options for streaming.
 */
export class KafkaStreamingSourceOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AddRecordTimestamp" })
  addRecordTimestamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Assign" })
  assign?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BootstrapServers" })
  bootstrapServers?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Classification" })
  classification?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConnectionName" })
  connectionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Delimiter" })
  delimiter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EmitConsumerLagMetrics" })
  emitConsumerLagMetrics?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndingOffsets" })
  endingOffsets?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IncludeHeaders" })
  includeHeaders?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxOffsetsPerTrigger" })
  maxOffsetsPerTrigger?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MinPartitions" })
  minPartitions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NumRetries" })
  numRetries?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PollTimeoutMs" })
  pollTimeoutMs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RetryIntervalMs" })
  retryIntervalMs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityProtocol" })
  securityProtocol?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartingOffsets" })
  startingOffsets?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubscribePattern" })
  subscribePattern?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TopicName" })
  topicName?: string;
}
