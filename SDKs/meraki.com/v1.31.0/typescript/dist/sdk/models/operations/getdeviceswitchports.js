"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetDeviceSwitchPortsResponse = exports.GetDeviceSwitchPorts200ApplicationJSON = exports.GetDeviceSwitchPorts200ApplicationJSONUdldEnum = exports.GetDeviceSwitchPorts200ApplicationJSONTypeEnum = exports.GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum = exports.GetDeviceSwitchPorts200ApplicationJSONProfile = exports.GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum = exports.GetDeviceSwitchPortsRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetDeviceSwitchPortsRequest = /** @class */ (function (_super) {
    __extends(GetDeviceSwitchPortsRequest, _super);
    function GetDeviceSwitchPortsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=serial",
        }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPortsRequest.prototype, "serial", void 0);
    return GetDeviceSwitchPortsRequest;
}(utils_1.SpeakeasyBase));
exports.GetDeviceSwitchPortsRequest = GetDeviceSwitchPortsRequest;
/**
 * The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
 */
var GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum;
(function (GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum) {
    GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum["CustomAccessPolicy"] = "Custom access policy";
    GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum["MACAllowList"] = "MAC allow list";
    GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum["Open"] = "Open";
    GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum["StickyMACAllowList"] = "Sticky MAC allow list";
})(GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum = exports.GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum || (exports.GetDeviceSwitchPorts200ApplicationJSONAccessPolicyTypeEnum = {}));
/**
 * Profile attributes
 */
var GetDeviceSwitchPorts200ApplicationJSONProfile = /** @class */ (function (_super) {
    __extends(GetDeviceSwitchPorts200ApplicationJSONProfile, _super);
    function GetDeviceSwitchPorts200ApplicationJSONProfile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSONProfile.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSONProfile.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iname" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSONProfile.prototype, "iname", void 0);
    return GetDeviceSwitchPorts200ApplicationJSONProfile;
}(utils_1.SpeakeasyBase));
exports.GetDeviceSwitchPorts200ApplicationJSONProfile = GetDeviceSwitchPorts200ApplicationJSONProfile;
/**
 * The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
 */
var GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum;
(function (GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum) {
    GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum["BpduGuard"] = "bpdu guard";
    GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum["Disabled"] = "disabled";
    GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum["LoopGuard"] = "loop guard";
    GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum["RootGuard"] = "root guard";
})(GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum = exports.GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum || (exports.GetDeviceSwitchPorts200ApplicationJSONStpGuardEnum = {}));
/**
 * The type of the switch port ('trunk' or 'access').
 */
var GetDeviceSwitchPorts200ApplicationJSONTypeEnum;
(function (GetDeviceSwitchPorts200ApplicationJSONTypeEnum) {
    GetDeviceSwitchPorts200ApplicationJSONTypeEnum["Access"] = "access";
    GetDeviceSwitchPorts200ApplicationJSONTypeEnum["Trunk"] = "trunk";
})(GetDeviceSwitchPorts200ApplicationJSONTypeEnum = exports.GetDeviceSwitchPorts200ApplicationJSONTypeEnum || (exports.GetDeviceSwitchPorts200ApplicationJSONTypeEnum = {}));
/**
 * The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
 */
var GetDeviceSwitchPorts200ApplicationJSONUdldEnum;
(function (GetDeviceSwitchPorts200ApplicationJSONUdldEnum) {
    GetDeviceSwitchPorts200ApplicationJSONUdldEnum["AlertOnly"] = "Alert only";
    GetDeviceSwitchPorts200ApplicationJSONUdldEnum["Enforce"] = "Enforce";
})(GetDeviceSwitchPorts200ApplicationJSONUdldEnum = exports.GetDeviceSwitchPorts200ApplicationJSONUdldEnum || (exports.GetDeviceSwitchPorts200ApplicationJSONUdldEnum = {}));
var GetDeviceSwitchPorts200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetDeviceSwitchPorts200ApplicationJSON, _super);
    function GetDeviceSwitchPorts200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyNumber" }),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "accessPolicyNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyType" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "accessPolicyType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adaptivePolicyGroupId" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "adaptivePolicyGroupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowedVlans" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "allowedVlans", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "daiTrusted" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "daiTrusted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "flexibleStackingEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "flexibleStackingEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isolationEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "isolationEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkNegotiation" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "linkNegotiation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkNegotiationCapabilities" }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "linkNegotiationCapabilities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "macAllowList" }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "macAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peerSgtCapable" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "peerSgtCapable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "poeEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "poeEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "portId" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "portId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "portScheduleId" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "portScheduleId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "profile" }),
        (0, class_transformer_1.Type)(function () { return GetDeviceSwitchPorts200ApplicationJSONProfile; }),
        __metadata("design:type", GetDeviceSwitchPorts200ApplicationJSONProfile)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "profile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rstpEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "rstpEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowList" }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "stickyMacAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowListLimit" }),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "stickyMacAllowListLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stormControlEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "stormControlEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stpGuard" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "stpGuard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "udld" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "udld", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vlan" }),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "vlan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "voiceVlan" }),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPorts200ApplicationJSON.prototype, "voiceVlan", void 0);
    return GetDeviceSwitchPorts200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetDeviceSwitchPorts200ApplicationJSON = GetDeviceSwitchPorts200ApplicationJSON;
var GetDeviceSwitchPortsResponse = /** @class */ (function (_super) {
    __extends(GetDeviceSwitchPortsResponse, _super);
    function GetDeviceSwitchPortsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetDeviceSwitchPortsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPortsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetDeviceSwitchPortsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: GetDeviceSwitchPorts200ApplicationJSON }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPortsResponse.prototype, "getDeviceSwitchPorts200ApplicationJSONObjects", void 0);
    return GetDeviceSwitchPortsResponse;
}(utils_1.SpeakeasyBase));
exports.GetDeviceSwitchPortsResponse = GetDeviceSwitchPortsResponse;
