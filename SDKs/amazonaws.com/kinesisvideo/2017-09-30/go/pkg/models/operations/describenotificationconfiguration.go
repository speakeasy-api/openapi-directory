// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeNotificationConfigurationRequestBody struct {
	// The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to retrieve the notification configuration. You must specify either the <code>StreamName</code> or the StreamARN.
	StreamARN *string `json:"StreamARN,omitempty"`
	// The name of the stream from which to retrieve the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
	StreamName *string `json:"StreamName,omitempty"`
}

type DescribeNotificationConfigurationRequest struct {
	RequestBody       DescribeNotificationConfigurationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type DescribeNotificationConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// Success
	DescribeNotificationConfigurationOutput *shared.DescribeNotificationConfigurationOutput
	// InvalidArgumentException
	InvalidArgumentException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
