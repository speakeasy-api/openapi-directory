/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintRequestBody {
    /**
     * The OAuth app client secret for which to create the token.
     */
    @JsonProperty("client_secret")
    public String clientSecret;

    public OauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintRequestBody withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    /**
     * A note to remind you what the OAuth token is for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("note")
    public String note;

    public OauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintRequestBody withNote(String note) {
        this.note = note;
        return this;
    }
    
    /**
     * A URL to remind you what app the OAuth token is for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("note_url")
    public String noteUrl;

    public OauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintRequestBody withNoteUrl(String noteUrl) {
        this.noteUrl = noteUrl;
        return this;
    }
    
    /**
     * A list of scopes that this authorization is in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopes")
    public String[] scopes;

    public OauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintRequestBody withScopes(String[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    public OauthAuthorizationsGetOrCreateAuthorizationForAppAndFingerprintRequestBody(@JsonProperty("client_secret") String clientSecret) {
        this.clientSecret = clientSecret;
  }
}
