// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var FetchVerificationAttemptsSummaryServerList = []string{
	"https://verify.twilio.com",
}

type FetchVerificationAttemptsSummarySecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type FetchVerificationAttemptsSummaryQueryParams struct {
	// Filter Verification Attempts considered on the summary aggregation by communication channel. Valid values are `SMS` and `CALL`
	Channel *shared.VerificationAttemptsSummaryEnumChannelsEnum `queryParam:"style=form,explode=true,name=Channel"`
	// Filter used to consider only Verification Attempts sent to the specified destination country on the summary aggregation.
	Country *string `queryParam:"style=form,explode=true,name=Country"`
	// Datetime filter used to consider only Verification Attempts created after this datetime on the summary aggregation. Given as GMT in RFC 2822 format.
	DateCreatedAfter *time.Time `queryParam:"style=form,explode=true,name=DateCreatedAfter"`
	// Datetime filter used to consider only Verification Attempts created before this datetime on the summary aggregation. Given as GMT in RFC 2822 format.
	DateCreatedBefore *time.Time `queryParam:"style=form,explode=true,name=DateCreatedBefore"`
	// Filter the Verification Attempts considered on the summary aggregation by Destination prefix. It is the prefix of a phone number in E.164 format.
	DestinationPrefix *string `queryParam:"style=form,explode=true,name=DestinationPrefix"`
	// Filter used to consider only Verification Attempts of the given verify service on the summary aggregation.
	VerifyServiceSid *string `queryParam:"style=form,explode=true,name=VerifyServiceSid"`
}

type FetchVerificationAttemptsSummaryRequest struct {
	QueryParams FetchVerificationAttemptsSummaryQueryParams
	Security    FetchVerificationAttemptsSummarySecurity
	ServerURL   *string
}

type FetchVerificationAttemptsSummaryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	VerifyV2VerificationAttemptsSummary *shared.VerifyV2VerificationAttemptsSummary
}
