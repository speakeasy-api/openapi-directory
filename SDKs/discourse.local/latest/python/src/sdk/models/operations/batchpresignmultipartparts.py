"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchPresignMultipartPartsRequestBody:
    
    part_numbers: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('part_numbers') }})
    r"""The part numbers to generate the presigned URLs for,
    must be between 1 and 10000.
    """  
    unique_identifier: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unique_identifier') }})
    r"""The unique identifier returned in the original /create-multipart
    request.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchPresignMultipartParts200ApplicationJSON:
    r"""external upload initialized"""
    
    presigned_urls: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('presigned_urls') }})
    r"""The presigned URLs for each part number, which has
    the part numbers as keys.
    """  
    

@dataclasses.dataclass
class BatchPresignMultipartPartsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    batch_presign_multipart_parts_200_application_json_object: Optional[BatchPresignMultipartParts200ApplicationJSON] = dataclasses.field(default=None)
    r"""external upload initialized"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    