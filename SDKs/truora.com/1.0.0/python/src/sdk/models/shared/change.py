"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Change:
    r"""Represents changes in check scores between continuous checks"""
    
    dataset_score_changes: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataset_score_changes'), 'exclude': lambda f: f is None }})
    r"""Old and new score map by dataset"""  
    score_changes: Optional[list[Change]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score_changes'), 'exclude': lambda f: f is None }})
    r"""Old and new score list"""  
    