// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListUsageRecordServerList = []string{
	"https://supersim.twilio.com",
}

type ListUsageRecordSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type ListUsageRecordQueryParams struct {
	// Only include usage that occurred before this time (exclusive), specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Default is the current time.
	EndTime *time.Time `queryParam:"style=form,explode=true,name=EndTime"`
	// SID or unique name of a Fleet resource. Only show UsageRecords representing usage for Super SIMs belonging to this Fleet resource at the time the usage occurred.
	Fleet *string `queryParam:"style=form,explode=true,name=Fleet"`
	// Time-based grouping that UsageRecords should be aggregated by. Can be: `hour`, `day`, or `all`. Default is `all`. `all` returns one UsageRecord that describes the usage for the entire period.
	Granularity *shared.UsageRecordEnumGranularityEnum `queryParam:"style=form,explode=true,name=Granularity"`
	// Dimension over which to aggregate usage records. Can be: `sim`, `fleet`, `network`, `isoCountry`. Default is to not aggregate across any of these dimensions, UsageRecords will be aggregated into the time buckets described by the `Granularity` parameter.
	Group *shared.UsageRecordEnumGroupEnum `queryParam:"style=form,explode=true,name=Group"`
	// Alpha-2 ISO Country Code. Only show UsageRecords representing usage in this country.
	IsoCountry *string `queryParam:"style=form,explode=true,name=IsoCountry"`
	// SID of a Network resource. Only show UsageRecords representing usage on this network.
	Network *string `queryParam:"style=form,explode=true,name=Network"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// SID or unique name of a Sim resource. Only show UsageRecords representing usage incurred by this Super SIM.
	Sim *string `queryParam:"style=form,explode=true,name=Sim"`
	// Only include usage that occurred at or after this time, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Default is one month before the `end_time`.
	StartTime *time.Time `queryParam:"style=form,explode=true,name=StartTime"`
}

type ListUsageRecordRequest struct {
	QueryParams ListUsageRecordQueryParams
	Security    ListUsageRecordSecurity
	ServerURL   *string
}

type ListUsageRecordListUsageRecordResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListUsageRecordListUsageRecordResponse - OK
type ListUsageRecordListUsageRecordResponse struct {
	Meta         *ListUsageRecordListUsageRecordResponseMeta `json:"meta,omitempty"`
	UsageRecords []shared.SupersimV1UsageRecord              `json:"usage_records,omitempty"`
}

type ListUsageRecordResponse struct {
	ContentType string
	// OK
	ListUsageRecordResponse *ListUsageRecordListUsageRecordResponse
	StatusCode              int
	RawResponse             *http.Response
}
