// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveAnAccountNumberPathParams struct {
	AccountNumberID string `pathParam:"style=simple,explode=false,name=account_number_id"`
}

type RetrieveAnAccountNumberRequest struct {
	PathParams RetrieveAnAccountNumberPathParams
}

type RetrieveAnAccountNumberDefaultApplicationJSON13StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveAnAccountNumberDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON13TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveAnAccountNumberDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON13 struct {
	Detail     string                                                    `json:"detail"`
	RetryAfter *int64                                                    `json:"retry_after,omitempty"`
	Status     RetrieveAnAccountNumberDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                    `json:"title"`
	Type       RetrieveAnAccountNumberDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON12StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveAnAccountNumberDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON12TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveAnAccountNumberDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON12 struct {
	Detail string                                                    `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON11StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveAnAccountNumberDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON11TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveAnAccountNumberDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON11 struct {
	Detail string                                                    `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON10StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON10StatusEnumFourHundred RetrieveAnAccountNumberDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON10TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveAnAccountNumberDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON10 struct {
	Detail string                                                    `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON9StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON9StatusEnumFourHundred RetrieveAnAccountNumberDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON9TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveAnAccountNumberDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                 `json:"errors,omitempty"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON8StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveAnAccountNumberDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON8TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveAnAccountNumberDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON8 struct {
	Detail string                                                   `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON7StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveAnAccountNumberDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON7TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveAnAccountNumberDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON7 struct {
	Detail string                                                   `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON6StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON6StatusEnumFiveHundred RetrieveAnAccountNumberDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON6TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON6TypeEnumInternalServerError RetrieveAnAccountNumberDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON6 struct {
	Detail string                                                   `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON5StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveAnAccountNumberDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON5TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveAnAccountNumberDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON5 struct {
	Detail string                                                   `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON4StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveAnAccountNumberDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON4TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveAnAccountNumberDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON4 struct {
	Detail string                                                   `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON3StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveAnAccountNumberDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON3TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveAnAccountNumberDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON3 struct {
	Detail string                                                   `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON2StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveAnAccountNumberDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON2TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveAnAccountNumberDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON2 struct {
	Detail string                                                   `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberDefaultApplicationJSON1StatusEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveAnAccountNumberDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON1TypeEnum string

const (
	RetrieveAnAccountNumberDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveAnAccountNumberDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RetrieveAnAccountNumberDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RetrieveAnAccountNumberDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnAccountNumberDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RetrieveAnAccountNumberDefaultApplicationJSON1 struct {
	Detail string                                                   `json:"detail"`
	Status RetrieveAnAccountNumberDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   RetrieveAnAccountNumberDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveAnAccountNumberResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account Number
	AccountNumber *shared.AccountNumber
	// Error
	Error interface{}
}
