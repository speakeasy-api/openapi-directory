/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelMute } from "./channelmute";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class MuteChannelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "channel_mute" })
  @Type(() => ChannelMute)
  channelMute?: ChannelMute;

  /**
   * Object with mutes (if multiple channels were muted)
   */
  @SpeakeasyMetadata({ elemType: ChannelMute })
  @Expose({ name: "channel_mutes" })
  @Type(() => ChannelMute)
  channelMutes?: ChannelMute[];

  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: string;

  @SpeakeasyMetadata()
  @Expose({ name: "own_user" })
  ownUser?: Record<string, any>;
}
