/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ONDRouteRequest {
    /**
     * Mandatory http header:  application/xml or application/json
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Accept")
    public String accept;

    public ONDRouteRequest withAccept(String accept) {
        this.accept = accept;
        return this;
    }
    
    /**
     * Carrier for which the OND will be retrieved (e.g. 'LH')
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=catalogues")
    public String catalogues;

    public ONDRouteRequest withCatalogues(String catalogues) {
        this.catalogues = catalogues;
        return this;
    }
    
    /**
     * Enter either the destination city or country code (e.g 'MAD' or 'ES'). Enter '*' for all
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=destination")
    public String destination;

    public ONDRouteRequest withDestination(String destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public String limit;

    public ONDRouteRequest withLimit(String limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Number of records skipped. Defaults to 0
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public String offset;

    public ONDRouteRequest withOffset(String offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Enter either the orgin city or orgin country code (e.g 'FRA' or 'DE'). Enter '*' for all
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=origin")
    public String origin;

    public ONDRouteRequest withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    public ONDRouteRequest(@JsonProperty("Accept") String accept, @JsonProperty("destination") String destination, @JsonProperty("origin") String origin) {
        this.accept = accept;
        this.destination = destination;
        this.origin = origin;
  }
}
