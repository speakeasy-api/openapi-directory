/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UrlNotification } from "./urlnotification";
import { Expose, Type } from "class-transformer";

/**
 * Summary of the most recent Indexing API notifications successfully received, for a given URL.
 */
export class UrlNotificationMetadata extends SpeakeasyBase {
  /**
   * `UrlNotification` is the resource used in all Indexing API calls. It describes one event in the life cycle of a Web Document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latestRemove" })
  @Type(() => UrlNotification)
  latestRemove?: UrlNotification;

  /**
   * `UrlNotification` is the resource used in all Indexing API calls. It describes one event in the life cycle of a Web Document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latestUpdate" })
  @Type(() => UrlNotification)
  latestUpdate?: UrlNotification;

  /**
   * URL to which this metadata refers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
