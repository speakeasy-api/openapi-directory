"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cognitoconfig as shared_cognitoconfig
from ..shared import oidcconfig as shared_oidcconfig
from ..shared import sourceipconfig as shared_sourceipconfig
from ..shared import tag as shared_tag
from ..shared import workforcevpcconfigrequest as shared_workforcevpcconfigrequest
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateWorkforceRequest:
    
    workforce_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkforceName') }})  
    cognito_config: Optional[shared_cognitoconfig.CognitoConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CognitoConfig'), 'exclude': lambda f: f is None }})  
    oidc_config: Optional[shared_oidcconfig.OidcConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OidcConfig'), 'exclude': lambda f: f is None }})  
    source_ip_config: Optional[shared_sourceipconfig.SourceIPConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceIpConfig'), 'exclude': lambda f: f is None }})
    r"""A list of IP address ranges (<a href=\\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html\\">CIDRs</a>). Used to create an allow list of IP addresses for a private workforce. Workers will only be able to login to their worker portal from an IP address within this range. By default, a workforce isn't restricted to specific IP addresses."""  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    workforce_vpc_config: Optional[shared_workforcevpcconfigrequest.WorkforceVpcConfigRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkforceVpcConfig'), 'exclude': lambda f: f is None }})  
    