/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * WebinarCreateApplicationJSON - Base webinar object for sessions.
 */
public class WebinarCreateApplicationJSON {
    /**
     * Webinar description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("agenda")
    public String agenda;
    public WebinarCreateApplicationJSON withAgenda(String agenda) {
        this.agenda = agenda;
        return this;
    }
    
    /**
     * Webinar duration (minutes). Used for scheduled webinars only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;
    public WebinarCreateApplicationJSON withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Webinar passcode. Passcode may only contain the following characters: [a-z A-Z 0-9 @ - _ * !]. Max of 10 characters.
     * 
     * If "Require a passcode when scheduling new meetings" setting has been **enabled** **and** [locked](https://support.zoom.us/hc/en-us/articles/115005269866-Using-Tiered-Settings#locked) for the user, the passcode field will be autogenerated for the Webinar in the response even if it is not provided in the API request. &lt;br&gt;&lt;br&gt;
     * 
     * **Note:** If the account owner or the admin has configured [minimum passcode requirement settings](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604), the passcode value provided here must meet those requirements. &lt;br&gt;&lt;br&gt;If the requirements are enabled, you can view those requirements by calling [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API. 
     * 
     * 
     * 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public WebinarCreateApplicationJSON withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Recurrence object. Use this object only for a webinar of type `9` i.e., a recurring webinar with fixed time. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recurrence")
    public WebinarCreateApplicationJSONRecurrenceWebinar recurrence;
    public WebinarCreateApplicationJSON withRecurrence(WebinarCreateApplicationJSONRecurrenceWebinar recurrence) {
        this.recurrence = recurrence;
        return this;
    }
    
    /**
     * Create Webinar settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    public WebinarCreateApplicationJSONSettings settings;
    public WebinarCreateApplicationJSON withSettings(WebinarCreateApplicationJSONSettings settings) {
        this.settings = settings;
        return this;
    }
    
    /**
     * Webinar start time. We support two formats for `start_time` - local time and GMT.&lt;br&gt; 
     * 
     * To set time as GMT the format should be `yyyy-MM-dd`T`HH:mm:ssZ`.
     * 
     * To set time using a specific timezone, use `yyyy-MM-dd`T`HH:mm:ss` format and specify the timezone [ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) in the `timezone` field OR leave it blank and the timezone set on your Zoom account will be used. You can also set the time as UTC as the timezone field.
     * 
     * The `start_time` should only be used for scheduled and / or recurring webinars with fixed time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("start_time")
    public OffsetDateTime startTime;
    public WebinarCreateApplicationJSON withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Time zone to format start_time. For example, "America/Los_Angeles". For scheduled meetings only. Please reference our [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list for supported time zones and their formats.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timezone")
    public String timezone;
    public WebinarCreateApplicationJSON withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }
    
    /**
     * Webinar topic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topic")
    public String topic;
    public WebinarCreateApplicationJSON withTopic(String topic) {
        this.topic = topic;
        return this;
    }
    
    /**
     * Tracking fields
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking_fields")
    public WebinarCreateApplicationJSONTrackingFields[] trackingFields;
    public WebinarCreateApplicationJSON withTrackingFields(WebinarCreateApplicationJSONTrackingFields[] trackingFields) {
        this.trackingFields = trackingFields;
        return this;
    }
    
    /**
     * Webinar Types:&lt;br&gt;`5` - Webinar.&lt;br&gt;`6` - Recurring webinar with no fixed time.&lt;br&gt;`9` - Recurring webinar with a fixed time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public WebinarCreateApplicationJSONTypeEnum type;
    public WebinarCreateApplicationJSON withType(WebinarCreateApplicationJSONTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
