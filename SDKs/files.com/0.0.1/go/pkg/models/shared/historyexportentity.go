// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// HistoryExportEntity - Show History Export
type HistoryExportEntity struct {
	// End date/time of export range.
	EndAt *time.Time `json:"end_at,omitempty"`
	// Version of the history for the export.
	HistoryVersion *string `json:"history_version,omitempty"`
	// History Export ID
	ID *int `json:"id,omitempty"`
	// Filter results by this this action type. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`
	QueryAction *string `json:"query_action,omitempty"`
	// Return results that are file moves with this path as destination.
	QueryDestination *string `json:"query_destination,omitempty"`
	// If searching for Histories about login failures, this parameter restricts results to failures of this specific type.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`
	QueryFailureType *string `json:"query_failure_type,omitempty"`
	// Return results that are file actions related to the file indicated by this File ID
	QueryFileID *string `json:"query_file_id,omitempty"`
	// Return results that are file actions related to files or folders inside this folder path.
	QueryFolder *string `json:"query_folder,omitempty"`
	// Filter results by this this interface type. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`
	QueryInterface *string `json:"query_interface,omitempty"`
	// Filter results by this IP address.
	QueryIP *string `json:"query_ip,omitempty"`
	// Return results that are file actions inside the parent folder specified by this folder ID
	QueryParentID *string `json:"query_parent_id,omitempty"`
	// Return results that are file actions related to this path.
	QueryPath *string `json:"query_path,omitempty"`
	// Return results that are file moves originating from this path.
	QuerySrc *string `json:"query_src,omitempty"`
	// If searching for Histories about specific objects (such as Users, or API Keys), this paremeter restricts results to objects that match this ID.
	QueryTargetID *string `json:"query_target_id,omitempty"`
	// If searching for Histories about Users, Groups or other objects with names, this parameter restricts results to objects with this name/username.
	QueryTargetName *string `json:"query_target_name,omitempty"`
	// If searching for Histories about Permisisons, this parameter restricts results to permissions of this level.
	QueryTargetPermission *string `json:"query_target_permission,omitempty"`
	// If searching for Histories about API keys, this parameter restricts results to API keys with this permission set.
	QueryTargetPermissionSet *string `json:"query_target_permission_set,omitempty"`
	// If searching for Histories about API keys, this parameter restricts results to API keys associated with this platform.
	QueryTargetPlatform *string `json:"query_target_platform,omitempty"`
	// If searching for Histories about API keys, this parameter restricts results to API keys created by/for this user ID.
	QueryTargetUserID *string `json:"query_target_user_id,omitempty"`
	// If searching for Histories about API keys, this parameter restricts results to API keys created by/for this username.
	QueryTargetUsername *string `json:"query_target_username,omitempty"`
	// Return results that are actions performed by the user indiciated by this User ID
	QueryUserID *string `json:"query_user_id,omitempty"`
	// Filter results by this username.
	QueryUsername *string `json:"query_username,omitempty"`
	// If `status` is `ready`, this will be a URL where all the results can be downloaded at once as a CSV.
	ResultsURL *string `json:"results_url,omitempty"`
	// Start date/time of export range.
	StartAt *time.Time `json:"start_at,omitempty"`
	// Status of export.  Will be: `building`, `ready`, or `failed`
	Status *string `json:"status,omitempty"`
}
