// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DistributionGroupsDeleteSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type DistributionGroupsDeleteRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the distribution group
	DistributionGroupName string `pathParam:"style=simple,explode=false,name=distribution_group_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum string

const (
	DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnumBadRequest          DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnumConflict            DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnumNotAcceptable       DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnumNotFound            DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnumInternalServerError DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnumUnauthorized        DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnumTooManyRequests     DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type DistributionGroupsDeleteDefaultApplicationJSONError struct {
	Code    DistributionGroupsDeleteDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                      `json:"message"`
}

// DistributionGroupsDeleteDefaultApplicationJSON - Error
type DistributionGroupsDeleteDefaultApplicationJSON struct {
	Error DistributionGroupsDeleteDefaultApplicationJSONError `json:"error"`
}

type DistributionGroupsDeleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	DistributionGroupsDeleteDefaultApplicationJSONObject *DistributionGroupsDeleteDefaultApplicationJSON
}
