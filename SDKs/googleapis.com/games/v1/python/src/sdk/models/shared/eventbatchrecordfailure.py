"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventperiodrange as shared_eventperiodrange
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EventBatchRecordFailureFailureCauseEnum(str, Enum):
    r"""The cause for the update failure."""
    EVENT_FAILURE_CAUSE_UNSPECIFIED = 'EVENT_FAILURE_CAUSE_UNSPECIFIED'
    TOO_LARGE = 'TOO_LARGE'
    TIME_PERIOD_EXPIRED = 'TIME_PERIOD_EXPIRED'
    TIME_PERIOD_SHORT = 'TIME_PERIOD_SHORT'
    TIME_PERIOD_LONG = 'TIME_PERIOD_LONG'
    ALREADY_UPDATED = 'ALREADY_UPDATED'
    RECORD_RATE_HIGH = 'RECORD_RATE_HIGH'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventBatchRecordFailure:
    r"""A batch update failure resource."""
    
    failure_cause: Optional[EventBatchRecordFailureFailureCauseEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureCause'), 'exclude': lambda f: f is None }})
    r"""The cause for the update failure."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#eventBatchRecordFailure`."""  
    range: Optional[shared_eventperiodrange.EventPeriodRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('range'), 'exclude': lambda f: f is None }})
    r"""An event period time range."""  
    