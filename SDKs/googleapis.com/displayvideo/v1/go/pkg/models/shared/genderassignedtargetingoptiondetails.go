// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GenderAssignedTargetingOptionDetailsGenderEnum - The gender of the audience. Output only in v1. Required in v2.
type GenderAssignedTargetingOptionDetailsGenderEnum string

const (
	GenderAssignedTargetingOptionDetailsGenderEnumGenderUnspecified GenderAssignedTargetingOptionDetailsGenderEnum = "GENDER_UNSPECIFIED"
	GenderAssignedTargetingOptionDetailsGenderEnumGenderMale        GenderAssignedTargetingOptionDetailsGenderEnum = "GENDER_MALE"
	GenderAssignedTargetingOptionDetailsGenderEnumGenderFemale      GenderAssignedTargetingOptionDetailsGenderEnum = "GENDER_FEMALE"
	GenderAssignedTargetingOptionDetailsGenderEnumGenderUnknown     GenderAssignedTargetingOptionDetailsGenderEnum = "GENDER_UNKNOWN"
)

func (e *GenderAssignedTargetingOptionDetailsGenderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GENDER_UNSPECIFIED":
		fallthrough
	case "GENDER_MALE":
		fallthrough
	case "GENDER_FEMALE":
		fallthrough
	case "GENDER_UNKNOWN":
		*e = GenderAssignedTargetingOptionDetailsGenderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GenderAssignedTargetingOptionDetailsGenderEnum: %s", s)
	}
}

// GenderAssignedTargetingOptionDetails - Details for assigned gender targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_GENDER`.
type GenderAssignedTargetingOptionDetails struct {
	// The gender of the audience. Output only in v1. Required in v2.
	Gender *GenderAssignedTargetingOptionDetailsGenderEnum `json:"gender,omitempty"`
	// Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_GENDER`.
	TargetingOptionID *string `json:"targetingOptionId,omitempty"`
}
