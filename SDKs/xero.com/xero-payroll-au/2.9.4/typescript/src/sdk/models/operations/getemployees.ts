/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetEmployeesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

export class GetEmployeesRequest extends SpeakeasyBase {
  /**
   * Only records created or modified since this timestamp will be returned
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=If-Modified-Since",
  })
  ifModifiedSince?: string;

  /**
   * Xero identifier for Tenant
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Xero-Tenant-Id",
  })
  xeroTenantId: string;

  /**
   * Order by an any element
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: string;

  /**
   * e.g. page=1 â€“ Up to 100 employees will be returned in a single API call
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Filter by an any element
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=where" })
  where?: string;
}

export class GetEmployeesResponse extends SpeakeasyBase {
  /**
   * validation error for a bad request
   */
  @SpeakeasyMetadata()
  apiException?: shared.APIException;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * search results matching criteria
   */
  @SpeakeasyMetadata()
  employees?: shared.Employees;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
