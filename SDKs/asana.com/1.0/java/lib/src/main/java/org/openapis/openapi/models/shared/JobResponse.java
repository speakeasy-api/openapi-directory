/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobResponse - A *job* is an object representing a process that handles asynchronous work.
 */
public class JobResponse {
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;
    public JobResponse withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_project")
    public ProjectCompact newProject;
    public JobResponse withNewProject(ProjectCompact newProject) {
        this.newProject = newProject;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_project_template")
    public ProjectTemplateCompact newProjectTemplate;
    public JobResponse withNewProjectTemplate(ProjectTemplateCompact newProjectTemplate) {
        this.newProjectTemplate = newProjectTemplate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_task")
    public TaskCompact newTask;
    public JobResponse withNewTask(TaskCompact newTask) {
        this.newTask = newTask;
        return this;
    }
    
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_subtype")
    public String resourceSubtype;
    public JobResponse withResourceSubtype(String resourceSubtype) {
        this.resourceSubtype = resourceSubtype;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;
    public JobResponse withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * The current status of this job. The value is one of: `not_started`, `in_progress`, `succeeded`, or `failed`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public JobResponseStatusEnum status;
    public JobResponse withStatus(JobResponseStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
