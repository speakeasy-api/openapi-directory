"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import batchinputmarketingeventemailsubscriber as shared_batchinputmarketingeventemailsubscriber
from ..shared import batchresponsesubscriberemailresponse as shared_batchresponsesubscriberemailresponse
from typing import Optional


@dataclasses.dataclass
class PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailSecurity:
    
    oauth2_legacy: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    private_apps_legacy: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'private-app-legacy' }})  
    

@dataclasses.dataclass
class PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailRequest:
    
    batch_input_marketing_event_email_subscriber: shared_batchinputmarketingeventemailsubscriber.BatchInputMarketingEventEmailSubscriber = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The details of the contacts to subscribe to the event. Parameters of join and left time if state is Attended."""  
    external_event_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'externalEventId', 'style': 'simple', 'explode': False }})
    r"""The id of the marketing event"""  
    subscriber_state: str = dataclasses.field(metadata={'path_param': { 'field_name': 'subscriberState', 'style': 'simple', 'explode': False }})
    r"""The new subscriber state for the HubSpot contacts and the specified marketing event. For example: 'register', 'attend' or 'cancel'."""  
    external_account_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'externalAccountId', 'style': 'form', 'explode': True }})
    r"""The account id associated with the marketing event"""  
    

@dataclasses.dataclass
class PostMarketingV3MarketingEventsAttendanceExternalEventIDSubscriberStateEmailCreateCreateByEmailResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    batch_response_subscriber_email_response: Optional[shared_batchresponsesubscriberemailresponse.BatchResponseSubscriberEmailResponse] = dataclasses.field(default=None)
    r"""successful operation"""  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    