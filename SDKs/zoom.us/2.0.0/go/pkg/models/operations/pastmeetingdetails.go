// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type PastMeetingDetailsSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PastMeetingDetailsRequest struct {
	// The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.
	MeetingUUID string `pathParam:"style=simple,explode=false,name=meetingUUID"`
}

// PastMeetingDetails200ApplicationXML - **HTTP Status Code:** `200`<br>
// Meeting details returned.
type PastMeetingDetails200ApplicationXML struct {
	// Meeting duration.
	Duration *int64
	// Meeting end time (GMT).
	EndTime *time.Time
	// Host ID.
	HostID *string
	// [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
	ID *int64
	// Number of meeting participants.
	ParticipantsCount *int64
	// Meeting start time (GMT).
	StartTime *time.Time
	// Meeting topic.
	Topic *string
	// Sum of meeting minutes from all participants in the meeting.
	TotalMinutes *int64
	// Meeting type.
	Type *int64
	// User email.
	UserEmail *string
	// User display name.
	UserName *string
	// Meeting UUID.
	UUID *string
}

// PastMeetingDetails200ApplicationJSON - **HTTP Status Code:** `200`<br>
// Meeting details returned.
type PastMeetingDetails200ApplicationJSON struct {
	// Meeting duration.
	Duration *int64 `json:"duration,omitempty"`
	// Meeting end time (GMT).
	EndTime *time.Time `json:"end_time,omitempty"`
	// Host ID.
	HostID *string `json:"host_id,omitempty"`
	// [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
	ID *int64 `json:"id,omitempty"`
	// Number of meeting participants.
	ParticipantsCount *int64 `json:"participants_count,omitempty"`
	// Meeting start time (GMT).
	StartTime *time.Time `json:"start_time,omitempty"`
	// Meeting topic.
	Topic *string `json:"topic,omitempty"`
	// Sum of meeting minutes from all participants in the meeting.
	TotalMinutes *int64 `json:"total_minutes,omitempty"`
	// Meeting type.
	Type *int64 `json:"type,omitempty"`
	// User email.
	UserEmail *string `json:"user_email,omitempty"`
	// User display name.
	UserName *string `json:"user_name,omitempty"`
	// Meeting UUID.
	UUID *string `json:"uuid,omitempty"`
}

type PastMeetingDetailsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Meeting details returned.
	PastMeetingDetails200ApplicationJSONObject *PastMeetingDetails200ApplicationJSON
}
