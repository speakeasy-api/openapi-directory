/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CartSimulationRequestBodyItems extends SpeakeasyBase {
  /**
   * The SKU ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The quantity of items of this specific SKU in the cart to be simulated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  seller?: string;
}

export class CartSimulationRequestBody extends SpeakeasyBase {
  /**
   * Three letter ISO code of the country of the shipping address. This value must be sent along with the `postalCode` or `geoCoordinates` values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Array containing two floats with geocoordinates, first longitude, then latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCoordinates" })
  geoCoordinates?: number[];

  /**
   * Array containing information about the SKUs inside the cart to be simulated.
   */
  @SpeakeasyMetadata({ elemType: CartSimulationRequestBodyItems })
  @Expose({ name: "items" })
  @Type(() => CartSimulationRequestBodyItems)
  items?: CartSimulationRequestBodyItems[];

  /**
   * Postal code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;
}

export class CartSimulationRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CartSimulationRequestBody;

  /**
   * This parameter defines which promotions apply to the simulation. Use `0` for simulations at cart stage, which means all promotions apply. In case of window simulation use `1`, which indicates promotions that apply nominal discounts over the total purchase value shouldn't be considered on the simulation.
   * 
   * @remarks
   * 
   * 
Note that if this not sent, the parameter is `1`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RnbBehavior",
  })
  rnbBehavior?: number;

  /**
   * Trade Policy (Sales Channel) identification.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sc" })
  sc?: number;
}

export class CartSimulation200ApplicationJSONItemsPriceDefinitionSellingPrices extends SpeakeasyBase {
  /**
   * Rounding quantity, meaning how many items are rounded to this value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Value in cents for that specific rounding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * Price information for all units of a specific item.
 */
export class CartSimulation200ApplicationJSONItemsPriceDefinition extends SpeakeasyBase {
  /**
   * Item's calculated unitary selling price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calculatedSellingPrice" })
  calculatedSellingPrice?: number;

  /**
   * Array of objects, each containing value (in cents) and quantity for the different rounding instances that can be combined to form the correctly rounded total.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONItemsPriceDefinitionSellingPrices,
  })
  @Expose({ name: "sellingPrices" })
  @Type(() => CartSimulation200ApplicationJSONItemsPriceDefinitionSellingPrices)
  sellingPrices?: CartSimulation200ApplicationJSONItemsPriceDefinitionSellingPrices[];

  /**
   * Total value for all units of the item in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class CartSimulation200ApplicationJSONItemsPriceTags extends SpeakeasyBase {
  /**
   * Price tag identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  /**
   * Indicates whether price tag value is applied through a percentage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPercentual" })
  isPercentual?: boolean;

  /**
   * Price tag name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Identification of the responsible for the price tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  /**
   * Price tag raw value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawValue" })
  rawValue?: number;

  /**
   * Price tag value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

export class CartSimulation200ApplicationJSONItems extends SpeakeasyBase {
  /**
   * Availability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availability" })
  availability?: string;

  /**
   * ID of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * List price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  /**
   * Measurement unit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "measurementUnit" })
  measurementUnit?: string;

  /**
   * Array containing offering information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offerings" })
  offerings?: any[];

  /**
   * Parent assembly binding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentAssemblyBinding" })
  parentAssemblyBinding?: string;

  /**
   * Parent item index.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentItemIndex" })
  parentItemIndex?: number;

  /**
   * Price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Price information for all units of a specific item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceDefinition" })
  @Type(() => CartSimulation200ApplicationJSONItemsPriceDefinition)
  priceDefinition?: CartSimulation200ApplicationJSONItemsPriceDefinition;

  /**
   * Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONItemsPriceTags,
  })
  @Expose({ name: "priceTags" })
  @Type(() => CartSimulation200ApplicationJSONItemsPriceTags)
  priceTags?: CartSimulation200ApplicationJSONItemsPriceTags[];

  /**
   * Price expiration date and time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceValidUntil" })
  priceValidUntil?: string;

  /**
   * The quantity of the item the cart.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Request index information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestIndex" })
  requestIndex?: number;

  /**
   * Reward value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rewardValue" })
  rewardValue?: number;

  /**
   * The seller responsible for the SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  seller?: string;

  /**
   * Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerChain" })
  sellerChain?: string[];

  /**
   * Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellingPrice" })
  sellingPrice?: number;

  /**
   * Tax value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;

  /**
   * Unit multiplier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitMultiplier" })
  unitMultiplier?: number;
}

export class CartSimulation200ApplicationJSONLogisticsInfoDeliveryChannels extends SpeakeasyBase {
  /**
   * Delivery channel ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class CartSimulation200ApplicationJSONLogisticsInfoItemMetadataItems extends SpeakeasyBase {
  /**
   * Assembly options information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assemblyOptions" })
  assemblyOptions?: any[];

  /**
   * Item ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  seller?: string;
}

/**
 * Item metadata.
 */
export class CartSimulation200ApplicationJSONLogisticsInfoItemMetadata extends SpeakeasyBase {
  /**
   * List of objects containing metadata on each item in the order.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONLogisticsInfoItemMetadataItems,
  })
  @Expose({ name: "items" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoItemMetadataItems)
  items?: CartSimulation200ApplicationJSONLogisticsInfoItemMetadataItems[];
}

/**
 * This object contains information about the delivery window available to the shopper.
 */
export class CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasAvailableDeliveryWindows extends SpeakeasyBase {
  /**
   * Delivery window ending day and time in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDateUtc" })
  endDateUtc?: string;

  /**
   * Delivery window list price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lisPrice" })
  lisPrice?: number;

  /**
   * Delivery window price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Delivery window starting day and time in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDateUtc" })
  startDateUtc?: string;

  /**
   * Delivery window tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;
}

export class CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryIds extends SpeakeasyBase {
  /**
   * Courier ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courierId" })
  courierId?: string;

  /**
   * Courier name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courierName" })
  courierName?: string;

  /**
   * Warehouse ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId?: string;

  /**
   * Quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Warehouse ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warehouseId" })
  warehouseId?: string;
}

/**
 * In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.
 */
export class CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryWindow extends SpeakeasyBase {
  /**
   * Delivery window ending day and time in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDateUtc" })
  endDateUtc?: string;

  /**
   * Delivery window list price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lisPrice" })
  lisPrice?: number;

  /**
   * Delivery window price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Delivery window starting day and time in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDateUtc" })
  startDateUtc?: string;

  /**
   * Delivery window tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;
}

/**
 * Information on the pickup store.
 */
export class CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasPickupStoreInfo extends SpeakeasyBase {
  /**
   * Additional information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfo" })
  additionalInfo?: string;

  /**
   * Address information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: Record<string, any>;

  /**
   * Corresponding dock ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId?: string;

  /**
   * Friendly name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendlyName" })
  friendlyName?: string;

  /**
   * Indicates whether it is the pickup store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPickupStore" })
  isPickupStore?: boolean;
}

export class CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas extends SpeakeasyBase {
  /**
   * This object contains information about the delivery window available to the shopper.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableDeliveryWindows" })
  @Type(
    () =>
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasAvailableDeliveryWindows
  )
  availableDeliveryWindows?: CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasAvailableDeliveryWindows;

  /**
   * Delivery channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryChannel" })
  deliveryChannel?: string;

  /**
   * Information on each delivery ID.
   */
  @SpeakeasyMetadata({
    elemType:
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryIds,
  })
  @Expose({ name: "deliveryIds" })
  @Type(
    () =>
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryIds
  )
  deliveryIds?: CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryIds[];

  /**
   * In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryWindow" })
  @Type(
    () =>
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryWindow
  )
  deliveryWindow?: CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasDeliveryWindow;

  /**
   * SLA ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * List price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  /**
   * Estimate date of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockTTL" })
  lockTTL?: string;

  /**
   * SLA name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Pickup point distance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupDistance" })
  pickupDistance?: number;

  /**
   * Pickup point ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupPointId" })
  pickupPointId?: string;

  /**
   * Information on the pickup store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupStoreInfo" })
  @Type(
    () =>
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasPickupStoreInfo
  )
  pickupStoreInfo?: CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlasPickupStoreInfo;

  /**
   * Polygon name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "polygonName" })
  polygonName?: string;

  /**
   * Price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Shipping estimate. For instance, "three business days" will be represented as `3bd`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingEstimate" })
  shippingEstimate?: string;

  /**
   * Shipping estimate date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingEstimateDate" })
  shippingEstimateDate?: string;

  /**
   * Tax in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;

  /**
   * Transit time. For instance, "three business days" is represented as `3bd`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transitTime" })
  transitTime?: string;
}

export class CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditions extends SpeakeasyBase {
  /**
   * Item ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * List price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  /**
   * Price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  seller?: string;

  /**
   * Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerChain" })
  sellerChain?: any[];

  /**
   * Information on available SLAs.
   */
  @SpeakeasyMetadata({
    elemType:
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas,
  })
  @Expose({ name: "slas" })
  @Type(
    () =>
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas
  )
  slas?: CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditionsSlas[];
}

/**
 * Purchase conditions information.
 */
export class CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditions extends SpeakeasyBase {
  /**
   * List of objects containing purchase condition information on each item in the order.
   */
  @SpeakeasyMetadata({
    elemType:
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditions,
  })
  @Expose({ name: "itemPurchaseConditions" })
  @Type(
    () =>
      CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditions
  )
  itemPurchaseConditions?: CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditionsItemPurchaseConditions[];
}

/**
 * This object contains information about the delivery window available to the shopper.
 */
export class CartSimulation200ApplicationJSONLogisticsInfoSlasAvailableDeliveryWindows extends SpeakeasyBase {
  /**
   * Delivery window ending day and time in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDateUtc" })
  endDateUtc?: string;

  /**
   * Delivery window list price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lisPrice" })
  lisPrice?: number;

  /**
   * Delivery window price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Delivery window starting day and time in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDateUtc" })
  startDateUtc?: string;

  /**
   * Delivery window tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;
}

export class CartSimulation200ApplicationJSONLogisticsInfoSlasDeliveryIds extends SpeakeasyBase {
  /**
   * Courier ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courierId" })
  courierId?: string;

  /**
   * Courier name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courierName" })
  courierName?: string;

  /**
   * Warehouse ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId?: string;

  /**
   * Quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Warehouse ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warehouseId" })
  warehouseId?: string;
}

/**
 * In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.
 */
export class CartSimulation200ApplicationJSONLogisticsInfoSlasDeliveryWindow extends SpeakeasyBase {
  /**
   * Delivery window ending day and time in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDateUtc" })
  endDateUtc?: string;

  /**
   * Delivery window list price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lisPrice" })
  lisPrice?: number;

  /**
   * Delivery window price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Delivery window starting day and time in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDateUtc" })
  startDateUtc?: string;

  /**
   * Delivery window tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;
}

/**
 * Information on the pickup store.
 */
export class CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo extends SpeakeasyBase {
  /**
   * Additional information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfo" })
  additionalInfo?: string;

  /**
   * Address information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: Record<string, any>;

  /**
   * Corresponding dock ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId?: string;

  /**
   * Friendly name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendlyName" })
  friendlyName?: string;

  /**
   * Indicates whether it is the pickup store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPickupStore" })
  isPickupStore?: boolean;
}

export class CartSimulation200ApplicationJSONLogisticsInfoSlas extends SpeakeasyBase {
  /**
   * This object contains information about the delivery window available to the shopper.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableDeliveryWindows" })
  @Type(
    () =>
      CartSimulation200ApplicationJSONLogisticsInfoSlasAvailableDeliveryWindows
  )
  availableDeliveryWindows?: CartSimulation200ApplicationJSONLogisticsInfoSlasAvailableDeliveryWindows;

  /**
   * Delivery channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryChannel" })
  deliveryChannel?: string;

  /**
   * Information on each delivery ID.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONLogisticsInfoSlasDeliveryIds,
  })
  @Expose({ name: "deliveryIds" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoSlasDeliveryIds)
  deliveryIds?: CartSimulation200ApplicationJSONLogisticsInfoSlasDeliveryIds[];

  /**
   * In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryWindow" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoSlasDeliveryWindow)
  deliveryWindow?: CartSimulation200ApplicationJSONLogisticsInfoSlasDeliveryWindow;

  /**
   * SLA ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * List price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  /**
   * Estimate date of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockTTL" })
  lockTTL?: string;

  /**
   * SLA name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Pickup point distance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupDistance" })
  pickupDistance?: number;

  /**
   * Pickup point ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupPointId" })
  pickupPointId?: string;

  /**
   * Information on the pickup store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupStoreInfo" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo)
  pickupStoreInfo?: CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo;

  /**
   * Polygon name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "polygonName" })
  polygonName?: string;

  /**
   * Price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Shipping estimate. For instance, "three business days" will be represented as `3bd`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingEstimate" })
  shippingEstimate?: string;

  /**
   * Shipping estimate date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingEstimateDate" })
  shippingEstimateDate?: string;

  /**
   * Tax in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;

  /**
   * Transit time. For instance, "three business days" is represented as `3bd`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transitTime" })
  transitTime?: string;
}

export class CartSimulation200ApplicationJSONLogisticsInfoTotals extends SpeakeasyBase {
  /**
   * Total ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Total name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Total value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

export class CartSimulation200ApplicationJSONLogisticsInfo extends SpeakeasyBase {
  /**
   * Address ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressId" })
  addressId?: string;

  /**
   * List of available delivery channels.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONLogisticsInfoDeliveryChannels,
  })
  @Expose({ name: "deliveryChannels" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoDeliveryChannels)
  deliveryChannels?: CartSimulation200ApplicationJSONLogisticsInfoDeliveryChannels[];

  /**
   * Index of item in items array.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemIndex" })
  itemIndex?: number;

  /**
   * Item metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemMetadata" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoItemMetadata)
  itemMetadata?: CartSimulation200ApplicationJSONLogisticsInfoItemMetadata;

  /**
   * Array containing an object for each message generated by our servers while processing the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messages" })
  messages?: any[];

  /**
   * Array containing pickup points information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupPoints" })
  pickupPoints?: any[];

  /**
   * Purchase conditions information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purchaseConditions" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditions)
  purchaseConditions?: CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditions;

  /**
   * Quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Delivery channel selected by the customer. For example, `"delivery"` or `"pickup-in-point"`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedDeliveryChannel" })
  selectedDeliveryChannel?: string;

  /**
   * Selected SLA. For example, `"normal"` or `"express"`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedSla" })
  selectedSla?: string;

  /**
   * List of countries that the item may be shipped to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipsTo" })
  shipsTo?: any[];

  /**
   * Information on available SLAs.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONLogisticsInfoSlas,
  })
  @Expose({ name: "slas" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoSlas)
  slas?: CartSimulation200ApplicationJSONLogisticsInfoSlas[];

  /**
   * Subscription information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionData" })
  subscriptionData?: Record<string, any>;

  /**
   * Information on order totals.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONLogisticsInfoTotals,
  })
  @Expose({ name: "totals" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfoTotals)
  totals?: CartSimulation200ApplicationJSONLogisticsInfoTotals[];
}

export class CartSimulation200ApplicationJSONPaymentDataPaymentSystems extends SpeakeasyBase {
  /**
   * Availability of payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availablePayments" })
  availablePayments?: string;

  /**
   * Description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Indicates whether a document is shown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayDocument" })
  displayDocument?: boolean;

  /**
   * Payment due date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dueDate" })
  dueDate?: string;

  /**
   * Payment group name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupName" })
  groupName?: string;

  /**
   * Payment system ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Indicates whether it is custom.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCustom" })
  isCustom?: boolean;

  /**
   * Payment system name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Indicates whether a authentication is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requiresAuthentication" })
  requiresAuthentication?: boolean;

  /**
   * Indicates whether a document is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requiresDocument" })
  requiresDocument?: boolean;

  /**
   * String ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringId" })
  stringId?: string;

  /**
   * Template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  template?: string;

  /**
   * Payment system validator.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validator" })
  validator?: Record<string, any>;
}

/**
 * Payment data information.
 */
export class CartSimulation200ApplicationJSONPaymentData extends SpeakeasyBase {
  /**
   * Available accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableAccounts" })
  availableAccounts?: any[];

  /**
   * Available associations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableAssociations" })
  availableAssociations?: Record<string, any>;

  /**
   * Available tokens.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableTokens" })
  availableTokens?: any[];

  /**
   * Array of gift card messages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "giftCardMessages" })
  giftCardMessages?: any[];

  /**
   * Gift card information, if it applies to the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "giftCards" })
  giftCards?: any[];

  /**
   * Installment options information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "installmentOptions" })
  installmentOptions?: any[];

  /**
   * Information on payment systems.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONPaymentDataPaymentSystems,
  })
  @Expose({ name: "paymentSystems" })
  @Type(() => CartSimulation200ApplicationJSONPaymentDataPaymentSystems)
  paymentSystems?: CartSimulation200ApplicationJSONPaymentDataPaymentSystems[];

  /**
   * Information on each payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payments" })
  payments?: any[];
}

/**
 * Information on rates and benefits that apply to the order.
 */
export class CartSimulation200ApplicationJSONRatesAndBenefitsData extends SpeakeasyBase {
  /**
   * List with rates and benefits identifiers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rateAndBenefitsIdentifiers" })
  rateAndBenefitsIdentifiers?: any[];

  /**
   * List with rates and benefits teasers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "teaser" })
  teaser?: any[];
}

/**
 * OK
 */
export class CartSimulation200ApplicationJSON extends SpeakeasyBase {
  /**
   * Three letter ISO code of the country of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Information on each item in the cart.
   */
  @SpeakeasyMetadata({ elemType: CartSimulation200ApplicationJSONItems })
  @Expose({ name: "items" })
  @Type(() => CartSimulation200ApplicationJSONItems)
  items?: CartSimulation200ApplicationJSONItems[];

  /**
   * Array with logistics information on each item of the `items` array in the `orderForm`.
   */
  @SpeakeasyMetadata({
    elemType: CartSimulation200ApplicationJSONLogisticsInfo,
  })
  @Expose({ name: "logisticsInfo" })
  @Type(() => CartSimulation200ApplicationJSONLogisticsInfo)
  logisticsInfo?: CartSimulation200ApplicationJSONLogisticsInfo[];

  /**
   * Object containing promotion data such as coupon tracking information and internal or external UTMs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketingData" })
  marketingData?: Record<string, any>;

  /**
   * Payment data information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentData" })
  @Type(() => CartSimulation200ApplicationJSONPaymentData)
  paymentData?: CartSimulation200ApplicationJSONPaymentData;

  /**
   * Postal Code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * Information on rates and benefits that apply to the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ratesAndBenefitsData" })
  @Type(() => CartSimulation200ApplicationJSONRatesAndBenefitsData)
  ratesAndBenefitsData?: CartSimulation200ApplicationJSONRatesAndBenefitsData;

  /**
   * Array containing the data of the item selected as a gift.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectableGifts" })
  selectableGifts?: any[];
}

export class CartSimulationResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  cartSimulation200ApplicationJSONObject?: CartSimulation200ApplicationJSON;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
