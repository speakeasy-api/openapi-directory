<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ForecastItem
{
    /**
     * CO2 footprint in Gramm per kwh (only Green Power)
     * 
     * @var ?int $co2GOekostrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('co2_g_oekostrom')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $co2GOekostrom = null;
    
    /**
     * Local/regional energyprice modification (cent per kWh or euro per MWh).
     * 
     * @var ?float $energyprice
     */
	#[\JMS\Serializer\Annotation\SerializedName('energyprice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $energyprice = null;
    
    /**
     * Timestamps in Seconds
     * 
     * @var ?int $epochtime
     */
	#[\JMS\Serializer\Annotation\SerializedName('epochtime')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $epochtime = null;
    
    /**
     * Actual GreenPowerIndex for given Timestamp (between 0-100)
     * 
     * @var ?int $gsi
     */
	#[\JMS\Serializer\Annotation\SerializedName('gsi')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $gsi = null;
    
    /**
     * Indicates if scaling is in operation to predict values
     * 
     * @var ?bool $scaled
     */
	#[\JMS\Serializer\Annotation\SerializedName('scaled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $scaled = null;
    
    /**
     * Subindex just for Solar Energy
     * 
     * @var ?int $sci
     */
	#[\JMS\Serializer\Annotation\SerializedName('sci')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sci = null;
    
    /**
     * Timestamp in Standard Milliseconds
     * 
     * @var ?int $timeStamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeStamp')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $timeStamp = null;
    
	public function __construct()
	{
		$this->co2GOekostrom = null;
		$this->energyprice = null;
		$this->epochtime = null;
		$this->gsi = null;
		$this->scaled = null;
		$this->sci = null;
		$this->timeStamp = null;
	}
}
