// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDataplexV1ZoneStateEnum - Output only. Current state of the zone.
type GoogleCloudDataplexV1ZoneStateEnum string

const (
	GoogleCloudDataplexV1ZoneStateEnumStateUnspecified GoogleCloudDataplexV1ZoneStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudDataplexV1ZoneStateEnumActive           GoogleCloudDataplexV1ZoneStateEnum = "ACTIVE"
	GoogleCloudDataplexV1ZoneStateEnumCreating         GoogleCloudDataplexV1ZoneStateEnum = "CREATING"
	GoogleCloudDataplexV1ZoneStateEnumDeleting         GoogleCloudDataplexV1ZoneStateEnum = "DELETING"
	GoogleCloudDataplexV1ZoneStateEnumActionRequired   GoogleCloudDataplexV1ZoneStateEnum = "ACTION_REQUIRED"
)

func (e GoogleCloudDataplexV1ZoneStateEnum) ToPointer() *GoogleCloudDataplexV1ZoneStateEnum {
	return &e
}

func (e *GoogleCloudDataplexV1ZoneStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "CREATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "ACTION_REQUIRED":
		*e = GoogleCloudDataplexV1ZoneStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDataplexV1ZoneStateEnum: %v", v)
	}
}

// GoogleCloudDataplexV1ZoneTypeEnum - Required. Immutable. The type of the zone.
type GoogleCloudDataplexV1ZoneTypeEnum string

const (
	GoogleCloudDataplexV1ZoneTypeEnumTypeUnspecified GoogleCloudDataplexV1ZoneTypeEnum = "TYPE_UNSPECIFIED"
	GoogleCloudDataplexV1ZoneTypeEnumRaw             GoogleCloudDataplexV1ZoneTypeEnum = "RAW"
	GoogleCloudDataplexV1ZoneTypeEnumCurated         GoogleCloudDataplexV1ZoneTypeEnum = "CURATED"
)

func (e GoogleCloudDataplexV1ZoneTypeEnum) ToPointer() *GoogleCloudDataplexV1ZoneTypeEnum {
	return &e
}

func (e *GoogleCloudDataplexV1ZoneTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "RAW":
		fallthrough
	case "CURATED":
		*e = GoogleCloudDataplexV1ZoneTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDataplexV1ZoneTypeEnum: %v", v)
	}
}

// GoogleCloudDataplexV1Zone - A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
type GoogleCloudDataplexV1Zone struct {
	// Aggregated status of the underlying assets of a lake or zone.
	AssetStatus *GoogleCloudDataplexV1AssetStatus `json:"assetStatus,omitempty"`
	// Output only. The time when the zone was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Optional. Description of the zone.
	Description *string `json:"description,omitempty"`
	// Settings to manage the metadata discovery and publishing in a zone.
	DiscoverySpec *GoogleCloudDataplexV1ZoneDiscoverySpec `json:"discoverySpec,omitempty"`
	// Optional. User friendly display name.
	DisplayName *string `json:"displayName,omitempty"`
	// Optional. User defined labels for the zone.
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. The relative resource name of the zone, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}.
	Name *string `json:"name,omitempty"`
	// Settings for resources attached as assets within a zone.
	ResourceSpec *GoogleCloudDataplexV1ZoneResourceSpec `json:"resourceSpec,omitempty"`
	// Output only. Current state of the zone.
	State *GoogleCloudDataplexV1ZoneStateEnum `json:"state,omitempty"`
	// Required. Immutable. The type of the zone.
	Type *GoogleCloudDataplexV1ZoneTypeEnum `json:"type,omitempty"`
	// Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.
	UID *string `json:"uid,omitempty"`
	// Output only. The time when the zone was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// GoogleCloudDataplexV1ZoneInput - A zone represents a logical group of related assets within a lake. A zone can be used to map to organizational structure or represent stages of data readiness from raw to curated. It provides managing behavior that is shared or inherited by all contained assets.
type GoogleCloudDataplexV1ZoneInput struct {
	// Aggregated status of the underlying assets of a lake or zone.
	AssetStatus *GoogleCloudDataplexV1AssetStatus `json:"assetStatus,omitempty"`
	// Optional. Description of the zone.
	Description *string `json:"description,omitempty"`
	// Settings to manage the metadata discovery and publishing in a zone.
	DiscoverySpec *GoogleCloudDataplexV1ZoneDiscoverySpec `json:"discoverySpec,omitempty"`
	// Optional. User friendly display name.
	DisplayName *string `json:"displayName,omitempty"`
	// Optional. User defined labels for the zone.
	Labels map[string]string `json:"labels,omitempty"`
	// Settings for resources attached as assets within a zone.
	ResourceSpec *GoogleCloudDataplexV1ZoneResourceSpec `json:"resourceSpec,omitempty"`
	// Required. Immutable. The type of the zone.
	Type *GoogleCloudDataplexV1ZoneTypeEnum `json:"type,omitempty"`
}
