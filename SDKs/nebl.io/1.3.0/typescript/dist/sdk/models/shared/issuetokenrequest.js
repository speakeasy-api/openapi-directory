"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IssueTokenRequest = exports.IssueTokenRequestTransfer = exports.IssueTokenRequestMetadata = exports.IssueTokenRequestMetadataUserData = exports.IssueTokenRequestMetadataUserDataMeta = exports.IssueTokenRequestMetadataUrls = exports.IssueTokenRequestMetadataRules = exports.IssueTokenRequestMetadataRulesHolders = exports.IssueTokenRequestMetadataRulesFees = exports.IssueTokenRequestMetadataRulesFeesItems = exports.IssueTokenRequestMetadataRulesExpiration = exports.IssueTokenRequestMetadataEncryptions = exports.IssueTokenRequestFlags = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Object representing flags that potentialy modify this transaction
 */
var IssueTokenRequestFlags = /** @class */ (function (_super) {
    __extends(IssueTokenRequestFlags, _super);
    function IssueTokenRequestFlags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "splitChange" }),
        __metadata("design:type", Boolean)
    ], IssueTokenRequestFlags.prototype, "splitChange", void 0);
    return IssueTokenRequestFlags;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestFlags = IssueTokenRequestFlags;
var IssueTokenRequestMetadataEncryptions = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataEncryptions, _super);
    function IssueTokenRequestMetadataEncryptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "format" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataEncryptions.prototype, "format", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataEncryptions.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pubkey" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataEncryptions.prototype, "pubkey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataEncryptions.prototype, "type", void 0);
    return IssueTokenRequestMetadataEncryptions;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataEncryptions = IssueTokenRequestMetadataEncryptions;
/**
 * Object describing expiration rules of the token
 */
var IssueTokenRequestMetadataRulesExpiration = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataRulesExpiration, _super);
    function IssueTokenRequestMetadataRulesExpiration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locked" }),
        __metadata("design:type", Boolean)
    ], IssueTokenRequestMetadataRulesExpiration.prototype, "locked", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "validUntil" }),
        __metadata("design:type", Number)
    ], IssueTokenRequestMetadataRulesExpiration.prototype, "validUntil", void 0);
    return IssueTokenRequestMetadataRulesExpiration;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataRulesExpiration = IssueTokenRequestMetadataRulesExpiration;
var IssueTokenRequestMetadataRulesFeesItems = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataRulesFeesItems, _super);
    function IssueTokenRequestMetadataRulesFeesItems() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataRulesFeesItems.prototype, "address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tokenId" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataRulesFeesItems.prototype, "tokenId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataRulesFeesItems.prototype, "value", void 0);
    return IssueTokenRequestMetadataRulesFeesItems;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataRulesFeesItems = IssueTokenRequestMetadataRulesFeesItems;
var IssueTokenRequestMetadataRulesFees = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataRulesFees, _super);
    function IssueTokenRequestMetadataRulesFees() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: IssueTokenRequestMetadataRulesFeesItems }),
        (0, class_transformer_1.Expose)({ name: "items" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataRulesFeesItems; }),
        __metadata("design:type", Array)
    ], IssueTokenRequestMetadataRulesFees.prototype, "items", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locked" }),
        __metadata("design:type", Boolean)
    ], IssueTokenRequestMetadataRulesFees.prototype, "locked", void 0);
    return IssueTokenRequestMetadataRulesFees;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataRulesFees = IssueTokenRequestMetadataRulesFees;
var IssueTokenRequestMetadataRulesHolders = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataRulesHolders, _super);
    function IssueTokenRequestMetadataRulesHolders() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataRulesHolders.prototype, "address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locked" }),
        __metadata("design:type", Boolean)
    ], IssueTokenRequestMetadataRulesHolders.prototype, "locked", void 0);
    return IssueTokenRequestMetadataRulesHolders;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataRulesHolders = IssueTokenRequestMetadataRulesHolders;
/**
 * Object describing token rules
 */
var IssueTokenRequestMetadataRules = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataRules, _super);
    function IssueTokenRequestMetadataRules() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expiration" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataRulesExpiration; }),
        __metadata("design:type", IssueTokenRequestMetadataRulesExpiration)
    ], IssueTokenRequestMetadataRules.prototype, "expiration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fees" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataRulesFees; }),
        __metadata("design:type", IssueTokenRequestMetadataRulesFees)
    ], IssueTokenRequestMetadataRules.prototype, "fees", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: IssueTokenRequestMetadataRulesHolders }),
        (0, class_transformer_1.Expose)({ name: "holders" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataRulesHolders; }),
        __metadata("design:type", Array)
    ], IssueTokenRequestMetadataRules.prototype, "holders", void 0);
    return IssueTokenRequestMetadataRules;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataRules = IssueTokenRequestMetadataRules;
var IssueTokenRequestMetadataUrls = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataUrls, _super);
    function IssueTokenRequestMetadataUrls() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataHash" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataUrls.prototype, "dataHash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mimeType" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataUrls.prototype, "mimeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataUrls.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataUrls.prototype, "url", void 0);
    return IssueTokenRequestMetadataUrls;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataUrls = IssueTokenRequestMetadataUrls;
var IssueTokenRequestMetadataUserDataMeta = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataUserDataMeta, _super);
    function IssueTokenRequestMetadataUserDataMeta() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataUserDataMeta.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadataUserDataMeta.prototype, "value", void 0);
    return IssueTokenRequestMetadataUserDataMeta;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataUserDataMeta = IssueTokenRequestMetadataUserDataMeta;
/**
 * Metadata set by user on token
 */
var IssueTokenRequestMetadataUserData = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadataUserData, _super);
    function IssueTokenRequestMetadataUserData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: IssueTokenRequestMetadataUserDataMeta }),
        (0, class_transformer_1.Expose)({ name: "meta" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataUserDataMeta; }),
        __metadata("design:type", Array)
    ], IssueTokenRequestMetadataUserData.prototype, "meta", void 0);
    return IssueTokenRequestMetadataUserData;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadataUserData = IssueTokenRequestMetadataUserData;
/**
 * Object representing all metadata at token issuance
 */
var IssueTokenRequestMetadata = /** @class */ (function (_super) {
    __extends(IssueTokenRequestMetadata, _super);
    function IssueTokenRequestMetadata() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadata.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: IssueTokenRequestMetadataEncryptions }),
        (0, class_transformer_1.Expose)({ name: "encryptions" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataEncryptions; }),
        __metadata("design:type", Array)
    ], IssueTokenRequestMetadata.prototype, "encryptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issuer" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadata.prototype, "issuer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rules" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataRules; }),
        __metadata("design:type", IssueTokenRequestMetadataRules)
    ], IssueTokenRequestMetadata.prototype, "rules", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tokenName" }),
        __metadata("design:type", String)
    ], IssueTokenRequestMetadata.prototype, "tokenName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: IssueTokenRequestMetadataUrls }),
        (0, class_transformer_1.Expose)({ name: "urls" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataUrls; }),
        __metadata("design:type", Array)
    ], IssueTokenRequestMetadata.prototype, "urls", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userData" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadataUserData; }),
        __metadata("design:type", IssueTokenRequestMetadataUserData)
    ], IssueTokenRequestMetadata.prototype, "userData", void 0);
    return IssueTokenRequestMetadata;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestMetadata = IssueTokenRequestMetadata;
var IssueTokenRequestTransfer = /** @class */ (function (_super) {
    __extends(IssueTokenRequestTransfer, _super);
    function IssueTokenRequestTransfer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address" }),
        __metadata("design:type", String)
    ], IssueTokenRequestTransfer.prototype, "address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], IssueTokenRequestTransfer.prototype, "amount", void 0);
    return IssueTokenRequestTransfer;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequestTransfer = IssueTokenRequestTransfer;
/**
 * Object representing the token to be created
 */
var IssueTokenRequest = /** @class */ (function (_super) {
    __extends(IssueTokenRequest, _super);
    function IssueTokenRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], IssueTokenRequest.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "divisibility" }),
        __metadata("design:type", Number)
    ], IssueTokenRequest.prototype, "divisibility", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fee" }),
        __metadata("design:type", Number)
    ], IssueTokenRequest.prototype, "fee", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "flags" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestFlags; }),
        __metadata("design:type", IssueTokenRequestFlags)
    ], IssueTokenRequest.prototype, "flags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issueAddress" }),
        __metadata("design:type", String)
    ], IssueTokenRequest.prototype, "issueAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metadata" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestMetadata; }),
        __metadata("design:type", IssueTokenRequestMetadata)
    ], IssueTokenRequest.prototype, "metadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reissuable" }),
        __metadata("design:type", Boolean)
    ], IssueTokenRequest.prototype, "reissuable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: IssueTokenRequestTransfer }),
        (0, class_transformer_1.Expose)({ name: "transfer" }),
        (0, class_transformer_1.Type)(function () { return IssueTokenRequestTransfer; }),
        __metadata("design:type", Array)
    ], IssueTokenRequest.prototype, "transfer", void 0);
    return IssueTokenRequest;
}(utils_1.SpeakeasyBase));
exports.IssueTokenRequest = IssueTokenRequest;
