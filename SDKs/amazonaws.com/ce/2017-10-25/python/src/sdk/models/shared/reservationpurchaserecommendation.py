"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountscope_enum as shared_accountscope_enum
from ..shared import lookbackperiodindays_enum as shared_lookbackperiodindays_enum
from ..shared import paymentoption_enum as shared_paymentoption_enum
from ..shared import reservationpurchaserecommendationdetail as shared_reservationpurchaserecommendationdetail
from ..shared import reservationpurchaserecommendationsummary as shared_reservationpurchaserecommendationsummary
from ..shared import servicespecification as shared_servicespecification
from ..shared import terminyears_enum as shared_terminyears_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReservationPurchaseRecommendation:
    r"""A specific reservation that Amazon Web Services recommends for purchase."""
    
    account_scope: Optional[shared_accountscope_enum.AccountScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountScope'), 'exclude': lambda f: f is None }})  
    lookback_period_in_days: Optional[shared_lookbackperiodindays_enum.LookbackPeriodInDaysEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LookbackPeriodInDays'), 'exclude': lambda f: f is None }})  
    payment_option: Optional[shared_paymentoption_enum.PaymentOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaymentOption'), 'exclude': lambda f: f is None }})  
    recommendation_details: Optional[list[shared_reservationpurchaserecommendationdetail.ReservationPurchaseRecommendationDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecommendationDetails'), 'exclude': lambda f: f is None }})  
    recommendation_summary: Optional[shared_reservationpurchaserecommendationsummary.ReservationPurchaseRecommendationSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecommendationSummary'), 'exclude': lambda f: f is None }})  
    service_specification: Optional[shared_servicespecification.ServiceSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceSpecification'), 'exclude': lambda f: f is None }})  
    term_in_years: Optional[shared_terminyears_enum.TermInYearsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TermInYears'), 'exclude': lambda f: f is None }})  
    