/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SupersimV1UsageRecord {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that incurred the usage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public SupersimV1UsageRecord withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The currency in which the billed amounts are measured, specified in the 3 letter ISO 4127 format (e.g. `USD`, `EUR`, `JPY`). This can be null when data_toal_billed is 0 and we do not yet have billing information for the corresponding data usage. Refer to [Data Usage Processing](https://www.twilio.com/docs/iot/supersim/api/usage-record-resource#data-usage-processing) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billed_unit")
    public String billedUnit;

    public SupersimV1UsageRecord withBilledUnit(String billedUnit) {
        this.billedUnit = billedUnit;
        return this;
    }
    
    /**
     * Total data downloaded in bytes, aggregated by the query parameters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_download")
    public Long dataDownload;

    public SupersimV1UsageRecord withDataDownload(Long dataDownload) {
        this.dataDownload = dataDownload;
        return this;
    }
    
    /**
     * Total of data_upload and data_download.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_total")
    public Long dataTotal;

    public SupersimV1UsageRecord withDataTotal(Long dataTotal) {
        this.dataTotal = dataTotal;
        return this;
    }
    
    /**
     * Total amount in the `billed_unit` that was charged for the data uploaded or downloaded. Will return 0 for usage prior to February 1, 2022. Value may be 0 despite `data_total` being greater than 0 if the data usage is still being processed by Twilio's billing system. Refer to [Data Usage Processing](https://www.twilio.com/docs/iot/supersim/api/usage-record-resource#data-usage-processing) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_total_billed")
    public Double dataTotalBilled;

    public SupersimV1UsageRecord withDataTotalBilled(Double dataTotalBilled) {
        this.dataTotalBilled = dataTotalBilled;
        return this;
    }
    
    /**
     * Total data uploaded in bytes, aggregated by the query parameters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_upload")
    public Long dataUpload;

    public SupersimV1UsageRecord withDataUpload(Long dataUpload) {
        this.dataUpload = dataUpload;
        return this;
    }
    
    /**
     * SID of the Fleet resource the usage occurred on. Value will only be present when either a value for the `Fleet` query parameter is provided or when UsageRecords are grouped by `fleet`. Otherwise, the value will be `null`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fleet_sid")
    public String fleetSid;

    public SupersimV1UsageRecord withFleetSid(String fleetSid) {
        this.fleetSid = fleetSid;
        return this;
    }
    
    /**
     * Alpha-2 ISO Country Code that the usage occurred in. Value will only be present when either a value for the `IsoCountry` query parameter is provided or when UsageRecords are grouped by `isoCountry`. Otherwise, the value will be `null`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iso_country")
    public String isoCountry;

    public SupersimV1UsageRecord withIsoCountry(String isoCountry) {
        this.isoCountry = isoCountry;
        return this;
    }
    
    /**
     * SID of the Network resource the usage occurred on. Value will only be present when either a value for the `Network` query parameter is provided or when UsageRecords are grouped by `network`. Otherwise, the value will be `null`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network_sid")
    public String networkSid;

    public SupersimV1UsageRecord withNetworkSid(String networkSid) {
        this.networkSid = networkSid;
        return this;
    }
    
    /**
     * The time period for which the usage is reported. The period is represented as a pair of `start_time` and `end_time` timestamps specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("period")
    public Object period;

    public SupersimV1UsageRecord withPeriod(Object period) {
        this.period = period;
        return this;
    }
    
    /**
     * SID of a Sim resource to which the UsageRecord belongs. Value will only be present when either a value for the `Sim` query parameter is provided or when UsageRecords are grouped by `sim`. Otherwise, the value will be `null`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sim_sid")
    public String simSid;

    public SupersimV1UsageRecord withSimSid(String simSid) {
        this.simSid = simSid;
        return this;
    }
    
    public SupersimV1UsageRecord(){}
}
