/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Assignee } from "./assignee";
import { Follower } from "./follower";
import { Target } from "./target";
import { Expose, Type } from "class-transformer";

export class NewTaskRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assignee" })
  @Type(() => Assignee)
  assignee: Assignee;

  @SpeakeasyMetadata()
  @Expose({ name: "context" })
  context: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dueDate" })
  dueDate: string;

  @SpeakeasyMetadata({ elemType: Follower })
  @Expose({ name: "followers" })
  @Type(() => Follower)
  followers: Follower[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parentTaskId" })
  parentTaskId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority: string;

  @SpeakeasyMetadata()
  @Expose({ name: "surrogateKey" })
  surrogateKey: string;

  @SpeakeasyMetadata({ elemType: Target })
  @Expose({ name: "target" })
  @Type(() => Target)
  target: Target[];
}
