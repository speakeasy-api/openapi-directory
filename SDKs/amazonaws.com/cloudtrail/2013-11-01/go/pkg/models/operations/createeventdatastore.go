// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateEventDataStoreXAmzTargetEnum
type CreateEventDataStoreXAmzTargetEnum string

const (
	CreateEventDataStoreXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101CreateEventDataStore CreateEventDataStoreXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CreateEventDataStore"
)

func (e *CreateEventDataStoreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.CreateEventDataStore":
		*e = CreateEventDataStoreXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateEventDataStoreXAmzTargetEnum: %s", s)
	}
}

type CreateEventDataStoreHeaders struct {
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateEventDataStoreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateEventDataStoreRequest struct {
	Headers CreateEventDataStoreHeaders
	Request shared.CreateEventDataStoreRequest `request:"mediaType=application/json"`
}

type CreateEventDataStoreResponse struct {
	// CloudTrailAccessNotEnabledException
	CloudTrailAccessNotEnabledException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateEventDataStoreResponse *shared.CreateEventDataStoreResponse
	// EventDataStoreAlreadyExistsException
	EventDataStoreAlreadyExistsException interface{}
	// EventDataStoreMaxLimitExceededException
	EventDataStoreMaxLimitExceededException interface{}
	// InsufficientDependencyServiceAccessPermissionException
	InsufficientDependencyServiceAccessPermissionException interface{}
	// InsufficientEncryptionPolicyException
	InsufficientEncryptionPolicyException interface{}
	// InvalidEventSelectorsException
	InvalidEventSelectorsException interface{}
	// InvalidKmsKeyIdException
	InvalidKmsKeyIDException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidTagParameterException
	InvalidTagParameterException interface{}
	// KmsException
	KmsException interface{}
	// KmsKeyNotFoundException
	KmsKeyNotFoundException interface{}
	// NoManagementAccountSLRExistsException
	NoManagementAccountSLRExistsException interface{}
	// NotOrganizationMasterAccountException
	NotOrganizationMasterAccountException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// OrganizationNotInAllFeaturesModeException
	OrganizationNotInAllFeaturesModeException interface{}
	// OrganizationsNotInUseException
	OrganizationsNotInUseException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
