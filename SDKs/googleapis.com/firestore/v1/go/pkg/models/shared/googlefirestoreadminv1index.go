// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleFirestoreAdminV1IndexAPIScopeEnum - The API scope supported by this index.
type GoogleFirestoreAdminV1IndexAPIScopeEnum string

const (
	GoogleFirestoreAdminV1IndexAPIScopeEnumAnyAPI           GoogleFirestoreAdminV1IndexAPIScopeEnum = "ANY_API"
	GoogleFirestoreAdminV1IndexAPIScopeEnumDatastoreModeAPI GoogleFirestoreAdminV1IndexAPIScopeEnum = "DATASTORE_MODE_API"
)

func (e *GoogleFirestoreAdminV1IndexAPIScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ANY_API":
		fallthrough
	case "DATASTORE_MODE_API":
		*e = GoogleFirestoreAdminV1IndexAPIScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleFirestoreAdminV1IndexAPIScopeEnum: %s", s)
	}
}

// GoogleFirestoreAdminV1IndexQueryScopeEnum - Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.
type GoogleFirestoreAdminV1IndexQueryScopeEnum string

const (
	GoogleFirestoreAdminV1IndexQueryScopeEnumQueryScopeUnspecified GoogleFirestoreAdminV1IndexQueryScopeEnum = "QUERY_SCOPE_UNSPECIFIED"
	GoogleFirestoreAdminV1IndexQueryScopeEnumCollection            GoogleFirestoreAdminV1IndexQueryScopeEnum = "COLLECTION"
	GoogleFirestoreAdminV1IndexQueryScopeEnumCollectionGroup       GoogleFirestoreAdminV1IndexQueryScopeEnum = "COLLECTION_GROUP"
	GoogleFirestoreAdminV1IndexQueryScopeEnumCollectionRecursive   GoogleFirestoreAdminV1IndexQueryScopeEnum = "COLLECTION_RECURSIVE"
)

func (e *GoogleFirestoreAdminV1IndexQueryScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "QUERY_SCOPE_UNSPECIFIED":
		fallthrough
	case "COLLECTION":
		fallthrough
	case "COLLECTION_GROUP":
		fallthrough
	case "COLLECTION_RECURSIVE":
		*e = GoogleFirestoreAdminV1IndexQueryScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleFirestoreAdminV1IndexQueryScopeEnum: %s", s)
	}
}

// GoogleFirestoreAdminV1IndexStateEnum - Output only. The serving state of the index.
type GoogleFirestoreAdminV1IndexStateEnum string

const (
	GoogleFirestoreAdminV1IndexStateEnumStateUnspecified GoogleFirestoreAdminV1IndexStateEnum = "STATE_UNSPECIFIED"
	GoogleFirestoreAdminV1IndexStateEnumCreating         GoogleFirestoreAdminV1IndexStateEnum = "CREATING"
	GoogleFirestoreAdminV1IndexStateEnumReady            GoogleFirestoreAdminV1IndexStateEnum = "READY"
	GoogleFirestoreAdminV1IndexStateEnumNeedsRepair      GoogleFirestoreAdminV1IndexStateEnum = "NEEDS_REPAIR"
)

func (e *GoogleFirestoreAdminV1IndexStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "READY":
		fallthrough
	case "NEEDS_REPAIR":
		*e = GoogleFirestoreAdminV1IndexStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleFirestoreAdminV1IndexStateEnum: %s", s)
	}
}

// GoogleFirestoreAdminV1Index - Cloud Firestore indexes enable simple and complex queries against documents in a database.
type GoogleFirestoreAdminV1Index struct {
	// The API scope supported by this index.
	APIScope *GoogleFirestoreAdminV1IndexAPIScopeEnum `json:"apiScope,omitempty"`
	// The fields supported by this index. For composite indexes, this requires a minimum of 2 and a maximum of 100 fields. The last field entry is always for the field path `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically with the same direction as that of the last field defined. If the final field in a composite index is not directional, the `__name__` will be ordered ASCENDING (unless explicitly specified). For single field indexes, this will always be exactly one entry with a field path equal to the field path of the associated field.
	Fields []GoogleFirestoreAdminV1IndexField `json:"fields,omitempty"`
	// Output only. A server defined name for this index. The form of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}` For single field indexes, this field will be empty.
	Name *string `json:"name,omitempty"`
	// Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.
	QueryScope *GoogleFirestoreAdminV1IndexQueryScopeEnum `json:"queryScope,omitempty"`
	// Output only. The serving state of the index.
	State *GoogleFirestoreAdminV1IndexStateEnum `json:"state,omitempty"`
}
