/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { CodeGenConfigurationNode } from "./codegenconfigurationnode";
import { ConnectionsList } from "./connectionslist";
import { ExecutionClassEnum } from "./executionclassenum";
import { ExecutionProperty } from "./executionproperty";
import { JobCommand } from "./jobcommand";
import { NotificationProperty } from "./notificationproperty";
import { SourceControlDetails } from "./sourcecontroldetails";
import { WorkerTypeEnum } from "./workertypeenum";
import { Expose, Transform, Type } from "class-transformer";

export class CreateJobRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllocatedCapacity" })
  allocatedCapacity?: number;

  @SpeakeasyMetadata({ elemType: CodeGenConfigurationNode })
  @Expose({ name: "CodeGenConfigurationNodes" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, CodeGenConfigurationNode> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], CodeGenConfigurationNode);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  codeGenConfigurationNodes?: Record<string, CodeGenConfigurationNode>;

  @SpeakeasyMetadata()
  @Expose({ name: "Command" })
  @Type(() => JobCommand)
  command: JobCommand;

  @SpeakeasyMetadata()
  @Expose({ name: "Connections" })
  @Type(() => ConnectionsList)
  connections?: ConnectionsList;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultArguments" })
  defaultArguments?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionClass" })
  executionClass?: ExecutionClassEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionProperty" })
  @Type(() => ExecutionProperty)
  executionProperty?: ExecutionProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "GlueVersion" })
  glueVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LogUri" })
  logUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxCapacity" })
  maxCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxRetries" })
  maxRetries?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NonOverridableArguments" })
  nonOverridableArguments?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationProperty" })
  @Type(() => NotificationProperty)
  notificationProperty?: NotificationProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfWorkers" })
  numberOfWorkers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Role" })
  role: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityConfiguration" })
  securityConfiguration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceControlDetails" })
  @Type(() => SourceControlDetails)
  sourceControlDetails?: SourceControlDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Timeout" })
  timeout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkerType" })
  workerType?: WorkerTypeEnum;
}
