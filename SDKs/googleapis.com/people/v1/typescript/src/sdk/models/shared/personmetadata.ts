/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Source, SourceInput } from "./source";
import { Expose, Type } from "class-transformer";

/**
 * Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead) The type of the person object.
 */
export enum PersonMetadataObjectTypeEnum {
  ObjectTypeUnspecified = "OBJECT_TYPE_UNSPECIFIED",
  Person = "PERSON",
  Page = "PAGE",
}

/**
 * The metadata about a person.
 */
export class PersonMetadata extends SpeakeasyBase {
  /**
   * Output only. True if the person resource has been deleted. Populated only for `people.connections.list` and `otherContacts.list` sync requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  /**
   * Output only. Resource names of people linked to this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedPeopleResourceNames" })
  linkedPeopleResourceNames?: string[];

  /**
   * Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead) The type of the person object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "objectType" })
  objectType?: PersonMetadataObjectTypeEnum;

  /**
   * Output only. Any former resource names this person has had. Populated only for `people.connections.list` requests that include a sync token. The resource name may change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or profile URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previousResourceNames" })
  previousResourceNames?: string[];

  /**
   * The sources of data for the person.
   */
  @SpeakeasyMetadata({ elemType: Source })
  @Expose({ name: "sources" })
  @Type(() => Source)
  sources?: Source[];
}

/**
 * The metadata about a person.
 */
export class PersonMetadataInput extends SpeakeasyBase {
  /**
   * The sources of data for the person.
   */
  @SpeakeasyMetadata({ elemType: SourceInput })
  @Expose({ name: "sources" })
  @Type(() => SourceInput)
  sources?: SourceInput[];
}
