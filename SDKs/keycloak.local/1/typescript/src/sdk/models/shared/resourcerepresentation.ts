/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ScopeRepresentation } from "./scoperepresentation";
import { Expose, Type } from "class-transformer";

export class ResourceRepresentation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "icon_uri" })
  iconUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ownerManagedAccess" })
  ownerManagedAccess?: boolean;

  @SpeakeasyMetadata({ elemType: ScopeRepresentation })
  @Expose({ name: "scopes" })
  @Type(() => ScopeRepresentation)
  scopes?: ScopeRepresentation[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uris" })
  uris?: string[];
}
