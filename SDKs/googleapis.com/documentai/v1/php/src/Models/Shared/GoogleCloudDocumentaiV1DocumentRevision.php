<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDocumentaiV1DocumentRevision - Contains past or forward revisions of this document.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDocumentaiV1DocumentRevision
{
    /**
     * If the change was made by a person specify the name or id of that person.
     * 
     * @var ?string $agent
     */
	#[\JMS\Serializer\Annotation\SerializedName('agent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $agent = null;
    
    /**
     * The time that the revision was created, internally generated by doc proto storage at the time of create.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Human Review information of the document.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentRevisionHumanReview $humanReview
     */
	#[\JMS\Serializer\Annotation\SerializedName('humanReview')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentRevisionHumanReview')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDocumentaiV1DocumentRevisionHumanReview $humanReview = null;
    
    /**
     * Id of the revision, internally generated by doc proto storage. Unique within the context of the document.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.
     * 
     * @var ?array<int> $parent
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parent = null;
    
    /**
     * The revisions that this revision is based on. Must include all the ids that have anything to do with this revision - eg. there are `provenance.parent.revision` fields that index into this field.
     * 
     * @var ?array<string> $parentIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parentIds = null;
    
    /**
     * If the annotation was made by processor identify the processor by its resource name.
     * 
     * @var ?string $processor
     */
	#[\JMS\Serializer\Annotation\SerializedName('processor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $processor = null;
    
	public function __construct()
	{
		$this->agent = null;
		$this->createTime = null;
		$this->humanReview = null;
		$this->id = null;
		$this->parent = null;
		$this->parentIds = null;
		$this->processor = null;
	}
}
