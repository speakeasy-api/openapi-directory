/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class GetinvestorAccountSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

export class GetinvestorAccountRequest extends SpeakeasyBase {
  /**
   * Unique identifier of the investor account
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=account_id",
  })
  accountId: string;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class GetinvestorAccount500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class GetinvestorAccount429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum GetinvestorAccount409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class GetinvestorAccount409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: GetinvestorAccount409ApplicationJSONStatusEnum;
}

/**
 * The specified resource was not found
 */
export class GetinvestorAccount404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class GetinvestorAccount403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class GetinvestorAccount401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class GetinvestorAccount400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export enum GetinvestorAccount200ApplicationJSONAccountTypeEnum {
  X = "X",
  Z = "Z",
  B = "B",
  G = "G",
}

/**
 * account status
 */
export enum GetinvestorAccount200ApplicationJSONStatusEnum {
  Active = "active",
}

/**
 * success
 */
export class GetinvestorAccount200ApplicationJSON extends SpeakeasyBase {
  /**
   * investor account id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "account_type" })
  accountType?: GetinvestorAccount200ApplicationJSONAccountTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * does the Account have contributions for the current tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_year_subscription" })
  currentYearSubscription?: boolean;

  /**
   * total contribution by investor for account for the current tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_year_total_contribution" })
  currentYearTotalContribution?: string;

  /**
   * total contribution by investor for all ISA product types for the current tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_year_total_isa_contribution" })
  currentYearTotalIsaContribution?: string;

  /**
   * total subscription allowance remaining for investor across all ISA product types for the current tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_year_total_isa_withdrawals" })
  currentYearTotalIsaWithdrawals?: string;

  /**
   * total withdrawal by investor for account for the current tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "current_year_total_withdrawals" })
  currentYearTotalWithdrawals?: string;

  /**
   * the first date the account was opened by the investor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_of_account_activation" })
  dateOfAccountActivation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "financial_product_id" })
  financialProductId: string;

  /**
   * date of the first subscription received for the current tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_subscription_date_for_current_year" })
  firstSubscriptionDateForCurrentYear?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "investor_id" })
  investorId: string;

  /**
   * total subscription allowance remaining for investor across all ISA product types for the current tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isa_allowance_remaining" })
  isaAllowanceRemaining?: string;

  /**
   * Array of pot IDs attached to Investor Account ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string[];

  /**
   * account status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: GetinvestorAccount200ApplicationJSONStatusEnum;

  /**
   * Value of holdings across all pots attached to the account ID (including investment products and cash)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_market_value" })
  totalMarketValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

export class GetinvestorAccountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  getinvestorAccount200ApplicationJSONObject?: GetinvestorAccount200ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  getinvestorAccount400ApplicationJSONObject?: GetinvestorAccount400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  getinvestorAccount401ApplicationJSONObject?: GetinvestorAccount401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  getinvestorAccount403ApplicationJSONObject?: GetinvestorAccount403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  getinvestorAccount404ApplicationJSONObject?: GetinvestorAccount404ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  getinvestorAccount409ApplicationJSONObject?: GetinvestorAccount409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  getinvestorAccount429ApplicationJSONObject?: GetinvestorAccount429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  getinvestorAccount500ApplicationJSONObject?: GetinvestorAccount500ApplicationJSON;
}
