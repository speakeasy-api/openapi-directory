"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import enterprise_security_product_enablement_enum as shared_enterprise_security_product_enablement_enum
from ..shared import enterprise_security_product_enum as shared_enterprise_security_product_enum
from typing import Optional


@dataclasses.dataclass
class SecretScanningPostSecurityProductEnablementForEnterpriseRequest:
    
    enablement: shared_enterprise_security_product_enablement_enum.EnterpriseSecurityProductEnablementEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'enablement', 'style': 'simple', 'explode': False }})
    r"""The action to take.
    
    `enable_all` means to enable the specified security feature for all repositories in the enterprise.
    `disable_all` means to disable the specified security feature for all repositories in the enterprise.
    """  
    enterprise: str = dataclasses.field(metadata={'path_param': { 'field_name': 'enterprise', 'style': 'simple', 'explode': False }})
    r"""The slug version of the enterprise name. You can also substitute this value with the enterprise id."""  
    security_product: shared_enterprise_security_product_enum.EnterpriseSecurityProductEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'security_product', 'style': 'simple', 'explode': False }})
    r"""The security feature to enable or disable."""  
    

@dataclasses.dataclass
class SecretScanningPostSecurityProductEnablementForEnterpriseResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Resource not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    