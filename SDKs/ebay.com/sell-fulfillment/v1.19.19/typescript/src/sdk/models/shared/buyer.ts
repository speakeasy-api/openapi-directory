/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TaxAddress } from "./taxaddress";
import { TaxIdentifier } from "./taxidentifier";
import { Expose, Type } from "class-transformer";

/**
 * This type contains information about the order's buyer.
 */
export class Buyer extends SpeakeasyBase {
  /**
   * This container consists of address information that can be used by sellers for tax purpose.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxAddress" })
  @Type(() => TaxAddress)
  taxAddress?: TaxAddress;

  /**
   * This type is used by the <strong>taxIdentifier</strong> container that is returned in <strong>getOrder</strong>. The <strong>taxIdentifier</strong> container consists of taxpayer identification information for buyers from Italy, Spain, or Guatemala. It is currently only returned for orders occurring on the eBay Italy or eBay Spain marketplaces.<br><br><span class="tablenote"><strong>Note:</strong> Currently, the <strong>taxIdentifier</strong> container is only returned in <strong>getOrder</strong> and not in <strong>getOrders</strong>. So, if a seller wanted to view a buyer's tax information for a particular order returned in <strong>getOrders</strong>, that seller would need to use the <strong>orderId</strong> value for that particular order, and then run a <strong>getOrder</strong> call against that order ID. </span>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxIdentifier" })
  @Type(() => TaxIdentifier)
  taxIdentifier?: TaxIdentifier;

  /**
   * The buyer's eBay user ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}
