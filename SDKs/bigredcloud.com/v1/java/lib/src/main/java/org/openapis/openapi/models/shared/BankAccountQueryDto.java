/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BankAccountQueryDto {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acCode")
    public String acCode;
    public BankAccountQueryDto withAcCode(String acCode) {
        this.acCode = acCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountName")
    public String accountName;
    public BankAccountQueryDto withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public BankAccountQueryDto withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String[] address;
    public BankAccountQueryDto withAddress(String[] address) {
        this.address = address;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankFeedSource")
    public Integer bankFeedSource;
    public BankAccountQueryDto withBankFeedSource(Integer bankFeedSource) {
        this.bankFeedSource = bankFeedSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("businessIdentifierCodes")
    public String businessIdentifierCodes;
    public BankAccountQueryDto withBusinessIdentifierCodes(String businessIdentifierCodes) {
        this.businessIdentifierCodes = businessIdentifierCodes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryId")
    public Long categoryId;
    public BankAccountQueryDto withCategoryId(Long categoryId) {
        this.categoryId = categoryId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorScheme")
    public String creditorScheme;
    public BankAccountQueryDto withCreditorScheme(String creditorScheme) {
        this.creditorScheme = creditorScheme;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    public String details;
    public BankAccountQueryDto withDetails(String details) {
        this.details = details;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public BankAccountQueryDto withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internationalBankAccountNumber")
    public String internationalBankAccountNumber;
    public BankAccountQueryDto withInternationalBankAccountNumber(String internationalBankAccountNumber) {
        this.internationalBankAccountNumber = internationalBankAccountNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDefaultBank")
    public Boolean isDefaultBank;
    public BankAccountQueryDto withIsDefaultBank(Boolean isDefaultBank) {
        this.isDefaultBank = isDefaultBank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastChq")
    public String lastChq;
    public BankAccountQueryDto withLastChq(String lastChq) {
        this.lastChq = lastChq;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nominalAcCode")
    public String nominalAcCode;
    public BankAccountQueryDto withNominalAcCode(String nominalAcCode) {
        this.nominalAcCode = nominalAcCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortCode")
    public String sortCode;
    public BankAccountQueryDto withSortCode(String sortCode) {
        this.sortCode = sortCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;
    public BankAccountQueryDto withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
}
