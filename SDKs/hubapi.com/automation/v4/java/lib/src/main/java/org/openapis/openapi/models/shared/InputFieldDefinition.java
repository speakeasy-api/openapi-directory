/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InputFieldDefinition - Configuration for an input field on the custom action
 */
public class InputFieldDefinition {
    /**
     * Whether the field is required for the custom action to be valid
     */
    @JsonProperty("isRequired")
    public Boolean isRequired;

    public InputFieldDefinition withIsRequired(Boolean isRequired) {
        this.isRequired = isRequired;
        return this;
    }
    
    /**
     * Controls what kind of input a customer can use to specify the field value. Must contain exactly one of `STATIC_VALUE` or `OBJECT_PROPERTY`. If `STATIC_VALUE`, the customer will be able to choose a value when configuring the custom action; if `OBJECT_PROPERTY`, the customer will be able to choose a property from the enrolled workflow object that the field value will be copied from. In the future we may support more than one input control type here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedValueTypes")
    public InputFieldDefinitionSupportedValueTypesEnum[] supportedValueTypes;

    public InputFieldDefinition withSupportedValueTypes(InputFieldDefinitionSupportedValueTypesEnum[] supportedValueTypes) {
        this.supportedValueTypes = supportedValueTypes;
        return this;
    }
    
    /**
     * The data type expected by an input field.
     */
    @JsonProperty("typeDefinition")
    public FieldTypeDefinition typeDefinition;

    public InputFieldDefinition withTypeDefinition(FieldTypeDefinition typeDefinition) {
        this.typeDefinition = typeDefinition;
        return this;
    }
    
    public InputFieldDefinition(@JsonProperty("isRequired") Boolean isRequired, @JsonProperty("typeDefinition") FieldTypeDefinition typeDefinition) {
        this.isRequired = isRequired;
        this.typeDefinition = typeDefinition;
  }
}
