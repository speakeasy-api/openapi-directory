/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DateTimeZone } from "./datetimezone";
import { Duration } from "./duration";
import { Locale } from "./locale";
import { LocalTimeZoneRestriction } from "./localtimezonerestriction";
import { TimeZone } from "./timezone";
import { ZoneId } from "./zoneid";
import { Expose, Transform, Type } from "class-transformer";

/**
 * ~
 */
export enum AccountBrandEnum {
  Eztexting = "EZTEXTING",
  Clubtexting = "CLUBTEXTING",
  Grouptexting = "GROUPTEXTING",
  Tellmycell = "TELLMYCELL",
  Ez = "EZ",
  Callfire = "CALLFIRE",
  Tesla = "TESLA",
}

/**
 * ~
 */
export enum AccountCountryEnum {
  Us = "US",
  Ca = "CA",
}

/**
 * ~
 */
export enum AccountCountryOrDefaultEnum {
  Us = "US",
  Ca = "CA",
}

/**
 * ~
 */
export enum AccountEntityTypeEnum {
  Sp = "SP",
  Company = "COMPANY",
}

/**
 * ~
 */
export enum AccountIndustryEnum {
  Unknown = "UNKNOWN",
  Advertising = "ADVERTISING",
  Automotive = "AUTOMOTIVE",
  Collections = "COLLECTIONS",
  Consulting = "CONSULTING",
  Decline = "DECLINE",
  Education = "EDUCATION",
  Emergency = "EMERGENCY",
  Entertainment = "ENTERTAINMENT",
  Finance = "FINANCE",
  Hospitality = "HOSPITALITY",
  Healthfitness = "HEALTHFITNESS",
  Healthcare = "HEALTHCARE",
  Insurance = "INSURANCE",
  Lead = "LEAD",
  Other = "OTHER",
  Political = "POLITICAL",
  RealEstate = "REAL_ESTATE",
  Retail = "RETAIL",
  SearchMarketing = "SEARCH_MARKETING",
  Telecom = "TELECOM",
}

/**
 * ~
 */
export enum AccountReceiverPeriodTimeUnitEnum {
  Nanoseconds = "NANOSECONDS",
  Microseconds = "MICROSECONDS",
  Milliseconds = "MILLISECONDS",
  Seconds = "SECONDS",
  Minutes = "MINUTES",
  Hours = "HOURS",
  Days = "DAYS",
}

/**
 * ~
 */
export enum AccountStatusEnum {
  Active = "ACTIVE",
  PendingCancelled = "PENDING_CANCELLED",
  Cancelled = "CANCELLED",
  Archived = "ARCHIVED",
}

/**
 * ~
 */
export enum AccountTrustLevelEnum {
  Locked = "LOCKED",
  Suspended = "SUSPENDED",
  Probation = "PROBATION",
  Normal = "NORMAL",
  Trusted = "TRUSTED",
}

/**
 * Object represents user account in Callfire system
 */
export class Account extends SpeakeasyBase {
  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "age" })
  @Type(() => Duration)
  age?: Duration;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "agencyManagedAccounts" })
  agencyManagedAccounts?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedToCreateCampaign" })
  allowedToCreateCampaign?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apiCallLimit" })
  apiCallLimit?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoAddDoNotContact" })
  autoAddDoNotContact?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand?: AccountBrandEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canceled" })
  canceled?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canceledOrArchived" })
  canceledOrArchived?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: AccountCountryEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countryOrDefault" })
  countryOrDefault?: AccountCountryOrDefaultEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateTimeZone" })
  @Type(() => DateTimeZone)
  dateTimeZone?: DateTimeZone;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultNotificationTtlMillis" })
  defaultNotificationTtlMillis?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultNumberId" })
  defaultNumberId?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ein" })
  ein?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityType" })
  entityType?: AccountEntityTypeEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ez" })
  ez?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failedVerificationAttempts" })
  failedVerificationAttempts?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromNumberPool" })
  fromNumberPool?: string;

  /**
   * An id of an account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "industry" })
  industry?: AccountIndustryEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "industryName" })
  industryName?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localTimeZoneRestriction" })
  @Type(() => LocalTimeZoneRestriction)
  localTimeZoneRestriction?: LocalTimeZoneRestriction;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locale" })
  @Type(() => Locale)
  locale?: Locale;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxAgents" })
  maxAgents?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageClass" })
  messageClass?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageFlows" })
  messageFlows?: string[];

  /**
   * Name associated with an account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outboundThreshold" })
  outboundThreshold?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverPeriodCall" })
  receiverPeriodCall?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverPeriodEnabled" })
  receiverPeriodEnabled?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverPeriodGlobal" })
  receiverPeriodGlobal?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverPeriodText" })
  receiverPeriodText?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverPeriodTimeUnit" })
  receiverPeriodTimeUnit?: AccountReceiverPeriodTimeUnitEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retainOnlyMetadata" })
  retainOnlyMetadata?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retainOnlyMetadataLastDetailRecordId" })
  retainOnlyMetadataLastDetailRecordId?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retainOnlyMetadataLastModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  retainOnlyMetadataLastModified?: Date;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scrub" })
  scrub?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sharedShortCodeAllowed" })
  sharedShortCodeAllowed?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sharedShortCodeId" })
  sharedShortCodeId?: number;

  /**
   * Object represents user account in Callfire system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "soaAccount" })
  @Type(() => Account)
  soaAccount?: Account;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startCapable" })
  startCapable?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AccountStatusEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textOutboundThreshold" })
  textOutboundThreshold?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  @Type(() => TimeZone)
  timeZone?: TimeZone;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZoneId" })
  @Type(() => ZoneId)
  timeZoneId?: ZoneId;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trustLevel" })
  trustLevel?: AccountTrustLevelEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tsrAgreement" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  tsrAgreement?: Date;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tsrInitials" })
  tsrInitials?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uiContext" })
  uiContext?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "universal" })
  universal?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "website" })
  website?: string;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zipcode" })
  zipcode?: string;
}
