// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GatewaySecurityPolicyRuleBasicProfileEnum - Required. Profile which tells what the primitive action should be.
type GatewaySecurityPolicyRuleBasicProfileEnum string

const (
	GatewaySecurityPolicyRuleBasicProfileEnumBasicProfileUnspecified GatewaySecurityPolicyRuleBasicProfileEnum = "BASIC_PROFILE_UNSPECIFIED"
	GatewaySecurityPolicyRuleBasicProfileEnumAllow                   GatewaySecurityPolicyRuleBasicProfileEnum = "ALLOW"
	GatewaySecurityPolicyRuleBasicProfileEnumDeny                    GatewaySecurityPolicyRuleBasicProfileEnum = "DENY"
)

func (e GatewaySecurityPolicyRuleBasicProfileEnum) ToPointer() *GatewaySecurityPolicyRuleBasicProfileEnum {
	return &e
}

func (e *GatewaySecurityPolicyRuleBasicProfileEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BASIC_PROFILE_UNSPECIFIED":
		fallthrough
	case "ALLOW":
		fallthrough
	case "DENY":
		*e = GatewaySecurityPolicyRuleBasicProfileEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GatewaySecurityPolicyRuleBasicProfileEnum: %v", v)
	}
}

// GatewaySecurityPolicyRule - The GatewaySecurityPolicyRule resource is in a nested collection within a GatewaySecurityPolicy and represents a traffic matching condition and associated action to perform.
type GatewaySecurityPolicyRule struct {
	// Optional. CEL expression for matching on L7/application level criteria.
	ApplicationMatcher *string `json:"applicationMatcher,omitempty"`
	// Required. Profile which tells what the primitive action should be.
	BasicProfile *GatewaySecurityPolicyRuleBasicProfileEnum `json:"basicProfile,omitempty"`
	// Output only. Time when the rule was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Optional. Free-text description of the resource.
	Description *string `json:"description,omitempty"`
	// Required. Whether the rule is enforced.
	Enabled *bool `json:"enabled,omitempty"`
	// Required. Immutable. Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule} rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
	Name *string `json:"name,omitempty"`
	// Required. Priority of the rule. Lower number corresponds to higher precedence.
	Priority *int `json:"priority,omitempty"`
	// Required. CEL expression for matching on session criteria.
	SessionMatcher *string `json:"sessionMatcher,omitempty"`
	// Optional. Flag to enable TLS inspection of traffic matching on , can only be true if the parent GatewaySecurityPolicy references a TLSInspectionConfig.
	TLSInspectionEnabled *bool `json:"tlsInspectionEnabled,omitempty"`
	// Output only. Time when the rule was updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// GatewaySecurityPolicyRuleInput - The GatewaySecurityPolicyRule resource is in a nested collection within a GatewaySecurityPolicy and represents a traffic matching condition and associated action to perform.
type GatewaySecurityPolicyRuleInput struct {
	// Optional. CEL expression for matching on L7/application level criteria.
	ApplicationMatcher *string `json:"applicationMatcher,omitempty"`
	// Required. Profile which tells what the primitive action should be.
	BasicProfile *GatewaySecurityPolicyRuleBasicProfileEnum `json:"basicProfile,omitempty"`
	// Optional. Free-text description of the resource.
	Description *string `json:"description,omitempty"`
	// Required. Whether the rule is enforced.
	Enabled *bool `json:"enabled,omitempty"`
	// Required. Immutable. Name of the resource. ame is the full resource name so projects/{project}/locations/{location}/gatewaySecurityPolicies/{gateway_security_policy}/rules/{rule} rule should match the pattern: (^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$).
	Name *string `json:"name,omitempty"`
	// Required. Priority of the rule. Lower number corresponds to higher precedence.
	Priority *int `json:"priority,omitempty"`
	// Required. CEL expression for matching on session criteria.
	SessionMatcher *string `json:"sessionMatcher,omitempty"`
	// Optional. Flag to enable TLS inspection of traffic matching on , can only be true if the parent GatewaySecurityPolicy references a TLSInspectionConfig.
	TLSInspectionEnabled *bool `json:"tlsInspectionEnabled,omitempty"`
}
