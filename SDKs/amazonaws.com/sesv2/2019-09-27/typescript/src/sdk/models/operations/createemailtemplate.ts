/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The content of the email, composed of a subject line, an HTML part, and a text-only part.
 */
export class CreateEmailTemplateRequestBodyTemplateContent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Html" })
  html?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Subject" })
  subject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Text" })
  text?: string;
}

export class CreateEmailTemplateRequestBody extends SpeakeasyBase {
  /**
   * The content of the email, composed of a subject line, an HTML part, and a text-only part.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TemplateContent" })
  @Type(() => CreateEmailTemplateRequestBodyTemplateContent)
  templateContent: CreateEmailTemplateRequestBodyTemplateContent;

  /**
   * The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TemplateName" })
  templateName: string;
}

export class CreateEmailTemplateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateEmailTemplateRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateEmailTemplateResponse extends SpeakeasyBase {
  /**
   * AlreadyExistsException
   */
  @SpeakeasyMetadata()
  alreadyExistsException?: any;

  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createEmailTemplateResponse?: Record<string, any>;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;
}
