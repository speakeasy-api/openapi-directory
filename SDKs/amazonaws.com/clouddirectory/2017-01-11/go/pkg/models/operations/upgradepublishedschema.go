// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpgradePublishedSchemaHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpgradePublishedSchemaRequestBody struct {
	// The ARN of the development schema with the changes used for the upgrade.
	DevelopmentSchemaArn string `json:"DevelopmentSchemaArn"`
	// Used for testing whether the Development schema provided is backwards compatible, or not, with the publish schema provided by the user to be upgraded. If schema compatibility fails, an exception would be thrown else the call would succeed. This parameter is optional and defaults to false.
	DryRun *bool `json:"DryRun,omitempty"`
	// Identifies the minor version of the published schema that will be created. This parameter is NOT optional.
	MinorVersion string `json:"MinorVersion"`
	// The ARN of the published schema to be upgraded.
	PublishedSchemaArn string `json:"PublishedSchemaArn"`
}

type UpgradePublishedSchemaRequest struct {
	Headers UpgradePublishedSchemaHeaders
	Request UpgradePublishedSchemaRequestBody `request:"mediaType=application/json"`
}

type UpgradePublishedSchemaResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// IncompatibleSchemaException
	IncompatibleSchemaException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidArnException
	InvalidArnException interface{}
	// InvalidAttachmentException
	InvalidAttachmentException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// RetryableConflictException
	RetryableConflictException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// Success
	UpgradePublishedSchemaResponse *shared.UpgradePublishedSchemaResponse
	// ValidationException
	ValidationException interface{}
}
