"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import position as shared_position
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApproximateProgress:
    r"""Obsolete in favor of ApproximateReportedProgress and ApproximateSplitRequest."""
    
    percent_complete: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentComplete'), 'exclude': lambda f: f is None }})
    r"""Obsolete."""  
    position: Optional[shared_position.Position] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index."""  
    remaining_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remainingTime'), 'exclude': lambda f: f is None }})
    r"""Obsolete."""  
    