// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NoteCreatorRoleEnum - Output only. The role of the person (buyer/seller) creating the note.
type NoteCreatorRoleEnum string

const (
	NoteCreatorRoleEnumBuyerSellerRoleUnspecified NoteCreatorRoleEnum = "BUYER_SELLER_ROLE_UNSPECIFIED"
	NoteCreatorRoleEnumBuyer                      NoteCreatorRoleEnum = "BUYER"
	NoteCreatorRoleEnumSeller                     NoteCreatorRoleEnum = "SELLER"
)

func (e *NoteCreatorRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BUYER_SELLER_ROLE_UNSPECIFIED":
		fallthrough
	case "BUYER":
		fallthrough
	case "SELLER":
		*e = NoteCreatorRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NoteCreatorRoleEnum: %s", s)
	}
}

// Note - A proposal may be associated to several notes.
type Note struct {
	// Output only. The timestamp for when this note was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The role of the person (buyer/seller) creating the note.
	CreatorRole *NoteCreatorRoleEnum `json:"creatorRole,omitempty"`
	// The actual note to attach. (max-length: 1024 unicode code units) Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.
	Note *string `json:"note,omitempty"`
	// Output only. The unique ID for the note.
	NoteID *string `json:"noteId,omitempty"`
	// Output only. The revision number of the proposal when the note is created.
	ProposalRevision *string `json:"proposalRevision,omitempty"`
}

// NoteInput - A proposal may be associated to several notes.
type NoteInput struct {
	// The actual note to attach. (max-length: 1024 unicode code units) Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error.
	Note *string `json:"note,omitempty"`
}
