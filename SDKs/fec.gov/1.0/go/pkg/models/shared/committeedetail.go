// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
)

type CommitteeDetail struct {
	// Affiliated committee or connected organization
	//
	AffiliatedCommitteeName *string `json:"affiliated_committee_name,omitempty"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office.
	//
	CandidateIds []string `json:"candidate_ids,omitempty"`
	// City of committee as reported on the Form 1
	//
	City *string `json:"city,omitempty"`
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	CommitteeID string `json:"committee_id"`
	// The one-letter type code of the organization:
	//         - C communication cost
	//         - D delegate
	//         - E electioneering communication
	//         - H House
	//         - I independent expenditor (person or group)
	//         - N PAC - nonqualified
	//         - O independent expenditure-only (super PACs)
	//         - P presidential
	//         - Q PAC - qualified
	//         - S Senate
	//         - U single candidate independent expenditure
	//         - V PAC with non-contribution account, nonqualified
	//         - W PAC with non-contribution account, qualified
	//         - X party, nonqualified
	//         - Y party, qualified
	//         - Z national party non-federal account
	//
	CommitteeType *string `json:"committee_type,omitempty"`
	// The one-letter type code of the organization:
	//         - C communication cost
	//         - D delegate
	//         - E electioneering communication
	//         - H House
	//         - I independent expenditor (person or group)
	//         - N PAC - nonqualified
	//         - O independent expenditure-only (super PACs)
	//         - P presidential
	//         - Q PAC - qualified
	//         - S Senate
	//         - U single candidate independent expenditure
	//         - V PAC with non-contribution account, nonqualified
	//         - W PAC with non-contribution account, qualified
	//         - X party, nonqualified
	//         - Y party, qualified
	//         - Z national party non-federal account
	//
	CommitteeTypeFull *string `json:"committee_type_full,omitempty"`
	// City of committee custodian as reported on the Form 1
	//
	CustodianCity *string `json:"custodian_city,omitempty"`
	// Name 1 of committee custodian as reported on the Form 1
	//
	CustodianName1 *string `json:"custodian_name_1,omitempty"`
	// Name 2 of committee custodian as reported on the Form 1
	//
	CustodianName2 *string `json:"custodian_name_2,omitempty"`
	// Full name of committee custodian as reported on the Form 1
	//
	CustodianNameFull *string `json:"custodian_name_full,omitempty"`
	// Middle name of committee custodian as reported on the Form 1
	//
	CustodianNameMiddle *string `json:"custodian_name_middle,omitempty"`
	// Name prefix of committee custodian as reported on the Form 1
	//
	CustodianNamePrefix *string `json:"custodian_name_prefix,omitempty"`
	// Suffix name of the committee custodian as reported on the Form 1
	//
	CustodianNameSuffix *string `json:"custodian_name_suffix,omitempty"`
	// Name title of the committee custodian as reported on the Form 1
	//
	CustodianNameTitle *string `json:"custodian_name_title,omitempty"`
	// Phone number of committee custodian as reported on the Form 1
	//
	CustodianPhone *string `json:"custodian_phone,omitempty"`
	// State of committee custodian as reported on the Form 1
	//
	CustodianState *string `json:"custodian_state,omitempty"`
	// Street address of the committee custodian as reported on the Form 1
	//
	CustodianStreet1 *string `json:"custodian_street_1,omitempty"`
	// Second line of the street address of the committee custodian as reported on the Form 1
	//
	CustodianStreet2 *string `json:"custodian_street_2,omitempty"`
	// Zip code of the committee custodian as reported on the Form 1
	//
	CustodianZip *string `json:"custodian_zip,omitempty"`
	// A two year election cycle that the committee was active- (after original registration
	// date but before expiration date in Form 1s) The cycle begins with
	// an odd year and is named for its ending, even year.
	//
	Cycles []int `json:"cycles,omitempty"`
	// The one-letter designation code of the organization:
	//          - A authorized by a candidate
	//          - J joint fundraising committee
	//          - P principal campaign committee of a candidate
	//          - U unauthorized
	//          - B lobbyist/registrant PAC
	//          - D leadership PAC
	//
	Designation *string `json:"designation,omitempty"`
	// The one-letter designation code of the organization:
	//          - A authorized by a candidate
	//          - J joint fundraising committee
	//          - P principal campaign committee of a candidate
	//          - U unauthorized
	//          - B lobbyist/registrant PAC
	//          - D leadership PAC
	//
	DesignationFull *string `json:"designation_full,omitempty"`
	// Email as reported on the Form 1
	//
	Email *string `json:"email,omitempty"`
	// Fax as reported on the Form 1
	//
	Fax *string `json:"fax,omitempty"`
	// The one-letter
	//     code of the filing frequency:
	//          - A Administratively terminated
	//          - D Debt
	//          - M Monthly filer
	//          - Q Quarterly filer
	//          - T Terminated
	//          - W Waived
	//
	FilingFrequency *string `json:"filing_frequency,omitempty"`
	// The day the FEC received the committee's first filing. This is usually a Form 1 committee registration.
	FirstFileDate *types.Date `json:"first_file_date,omitempty"`
	// The form where the underlying data comes from, for example, Form 1 would appear as F1:
	//     - F1   Statement of Organization
	//     - F1M  Notification of Multicandidate Status
	//     - F2   Statement of Candidacy
	//     - F3   Report of Receipts and Disbursements for an Authorized Committee
	//     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President
	//     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs
	//     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee
	//     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention
	//     - F5   Report of Independent Expenditures Made and Contributions Received
	//     - F6   48 Hour Notice of Contributions/Loans Received
	//     - F7   Report of Communication Costs by Corporations and Membership Organizations
	//     - F8   Debt Settlement Plan
	//     - F9   24 Hour Notice of Disbursements for Electioneering Communications
	//     - F13  Report of Donations Accepted for Inaugural Committee
	//     - F99  Miscellaneous Text
	//     - FRQ  Request for Additional Information
	//
	FormType *string `json:"form_type,omitempty"`
	// The day the FEC received the committee's most recent filing
	LastFileDate *types.Date `json:"last_file_date,omitempty"`
	// Indicates if the committee is a leadership PAC
	//
	LeadershipPac *string `json:"leadership_pac,omitempty"`
	// Indicates if the committee is a lobbyist registrant PAC
	//
	LobbyistRegistrantPac *string `json:"lobbyist_registrant_pac,omitempty"`
	// The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
	Name *string `json:"name,omitempty"`
	// The one-letter code for the kind for organization:
	//         - C corporation
	//         - L labor organization
	//         - M membership organization
	//         - T trade association
	//         - V cooperative
	//         - W corporation without capital stock
	//
	OrganizationType *string `json:"organization_type,omitempty"`
	// The one-letter code for the kind for organization:
	//         - C corporation
	//         - L labor organization
	//         - M membership organization
	//         - T trade association
	//         - V cooperative
	//         - W corporation without capital stock
	//
	OrganizationTypeFull *string `json:"organization_type_full,omitempty"`
	// Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
	Party *string `json:"party,omitempty"`
	// Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
	PartyFull *string `json:"party_full,omitempty"`
	// Code for the type of party the committee is, only if applicable
	//
	PartyType *string `json:"party_type,omitempty"`
	// Description of the type of party the committee is, only if applicable
	//
	PartyTypeFull *string `json:"party_type_full,omitempty"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office. This is a filter for Leadership PAC sponsor.
	//
	SponsorCandidateIds []string `json:"sponsor_candidate_ids,omitempty"`
	// State of the committee's address as filed on the Form 1
	//
	State *string `json:"state,omitempty"`
	// State of committee as reported on the Form 1
	//
	StateFull *string `json:"state_full,omitempty"`
	// Street address of committee as reported on the Form 1
	//
	Street1 *string `json:"street_1,omitempty"`
	// Second line of street address of committee as reported on the Form 1
	//
	Street2 *string `json:"street_2,omitempty"`
	// City of committee treasurer as reported on the Form 1
	//
	TreasurerCity *string `json:"treasurer_city,omitempty"`
	// Name of the Committee's treasurer. If multiple treasurers for the committee, the most recent treasurer will be shown.
	TreasurerName *string `json:"treasurer_name,omitempty"`
	// Name 1 of committee treasurer as reported on the Form 1
	//
	TreasurerName1 *string `json:"treasurer_name_1,omitempty"`
	// Name 2 of committee treasurer as reported on the Form 1
	//
	TreasurerName2 *string `json:"treasurer_name_2,omitempty"`
	// Middle name of committee treasurer as reported on the Form 1
	//
	TreasurerNameMiddle *string `json:"treasurer_name_middle,omitempty"`
	// Name Prefix of committee treasurer as reported on the Form 1
	//
	TreasurerNamePrefix *string `json:"treasurer_name_prefix,omitempty"`
	// Name suffix of committee treasurer as reported on the Form 1
	//
	TreasurerNameSuffix *string `json:"treasurer_name_suffix,omitempty"`
	// Name title of committee treasurer as reported on the Form 1
	//
	TreasurerNameTitle *string `json:"treasurer_name_title,omitempty"`
	// Phone of committee treasurer as reported on the Form 1
	//
	TreasurerPhone *string `json:"treasurer_phone,omitempty"`
	// State of committee treasurer as reported on the Form 1
	//
	TreasurerState *string `json:"treasurer_state,omitempty"`
	// Street of committee treasurer as reported on the Form 1
	//
	TreasurerStreet1 *string `json:"treasurer_street_1,omitempty"`
	// Second line of the street of committee treasurer as reported on the Form 1
	//
	TreasurerStreet2 *string `json:"treasurer_street_2,omitempty"`
	// Zip code of committee treasurer as reported on the Form 1
	//
	TreasurerZip *string `json:"treasurer_zip,omitempty"`
	// Website url as reported on the Form 1
	//
	Website *string `json:"website,omitempty"`
	// Zip code of committee as reported on the Form 1
	//
	Zip *string `json:"zip,omitempty"`
}
