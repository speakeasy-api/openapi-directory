// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MatterPermissionRoleEnum - The user's role for the matter.
type MatterPermissionRoleEnum string

const (
	MatterPermissionRoleEnumRoleUnspecified MatterPermissionRoleEnum = "ROLE_UNSPECIFIED"
	MatterPermissionRoleEnumCollaborator    MatterPermissionRoleEnum = "COLLABORATOR"
	MatterPermissionRoleEnumOwner           MatterPermissionRoleEnum = "OWNER"
)

func (e *MatterPermissionRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ROLE_UNSPECIFIED":
		fallthrough
	case "COLLABORATOR":
		fallthrough
	case "OWNER":
		*e = MatterPermissionRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MatterPermissionRoleEnum: %s", s)
	}
}

// MatterPermission - Users can be matter owners or collaborators. Each matter has only one owner. All others users who can access the matter are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.
type MatterPermission struct {
	// The account ID, as provided by the [Admin SDK](https://developers.google.com/admin-sdk/).
	AccountID *string `json:"accountId,omitempty"`
	// The user's role for the matter.
	Role *MatterPermissionRoleEnum `json:"role,omitempty"`
}
