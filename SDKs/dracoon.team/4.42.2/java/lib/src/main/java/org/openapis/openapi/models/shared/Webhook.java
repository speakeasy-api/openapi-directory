/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Webhook - Webhook information
 */
public class Webhook {
    /**
     * Creation date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public Webhook withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public UserInfo createdBy;
    public Webhook withCreatedBy(UserInfo createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * List of names of event types
     */
    @JsonProperty("eventTypeNames")
    public String[] eventTypeNames;
    public Webhook withEventTypeNames(String[] eventTypeNames) {
        this.eventTypeNames = eventTypeNames;
        return this;
    }
    
    /**
     * Expiration date / time
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expireAt")
    public OffsetDateTime expireAt;
    public Webhook withExpireAt(OffsetDateTime expireAt) {
        this.expireAt = expireAt;
        return this;
    }
    
    /**
     * Last HTTP status code when a webhook is disabled due to delivery failures
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failStatus")
    public Integer failStatus;
    public Webhook withFailStatus(Integer failStatus) {
        this.failStatus = failStatus;
        return this;
    }
    
    /**
     * ID
     */
    @JsonProperty("id")
    public Long id;
    public Webhook withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Is enabled
     */
    @JsonProperty("isEnabled")
    public Boolean isEnabled;
    public Webhook withIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }
    
    /**
     * Name
     */
    @JsonProperty("name")
    public String name;
    public Webhook withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Secret; used for event message signatures
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;
    public Webhook withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * Modification date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public Webhook withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public UserInfo updatedBy;
    public Webhook withUpdatedBy(UserInfo updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
    /**
     * URL
     */
    @JsonProperty("url")
    public String url;
    public Webhook withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
