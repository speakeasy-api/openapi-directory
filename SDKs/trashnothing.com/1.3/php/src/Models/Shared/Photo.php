<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Photo
{
    /**
     * A blurhash of the photo that can be used as a placeholder while the photo is loading (see: https://github.com/woltapp/blurhash). May be null if no blurhash is available and the length of the blurhash can vary based on the photo.
     * 
     * 
     * 
     * @var ?string $blurhash
     */
	#[\JMS\Serializer\Annotation\SerializedName('blurhash')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $blurhash = null;
    
    /**
     * All the versions of this photo ordered from smallest to largest.  This list is guaranteed to include the photos specified by the above thumbnail and url properties.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PhotoImages> $images
     */
	#[\JMS\Serializer\Annotation\SerializedName('images')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PhotoImages>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $images = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('photo_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $photoId = null;
    
    /**
     * A URL to a thumbnail of this photo.  The size of the thumbnail depends on the device_pixel_ratio parameter and it is not guaranteed to be square.
     * 
     * @var ?string $thumbnail
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumbnail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $thumbnail = null;
    
    /**
     * A URL to a large version of this photo (but not necessarily the largest size available).
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
	public function __construct()
	{
		$this->blurhash = null;
		$this->images = null;
		$this->photoId = null;
		$this->thumbnail = null;
		$this->url = null;
	}
}
