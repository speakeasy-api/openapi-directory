// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum - Output only. The video player size.
type VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum string

const (
	VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeUnspecified VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_UNSPECIFIED"
	VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeSmall       VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_SMALL"
	VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeLarge       VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_LARGE"
	VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeHd          VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_HD"
	VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnumVideoPlayerSizeUnknown     VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum = "VIDEO_PLAYER_SIZE_UNKNOWN"
)

func (e VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum) ToPointer() *VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum {
	return &e
}

func (e *VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VIDEO_PLAYER_SIZE_UNSPECIFIED":
		fallthrough
	case "VIDEO_PLAYER_SIZE_SMALL":
		fallthrough
	case "VIDEO_PLAYER_SIZE_LARGE":
		fallthrough
	case "VIDEO_PLAYER_SIZE_HD":
		fallthrough
	case "VIDEO_PLAYER_SIZE_UNKNOWN":
		*e = VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum: %v", v)
	}
}

// VideoPlayerSizeTargetingOptionDetails - Represents a targetable video player size. This will be populated in the video_player_size_details field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.
type VideoPlayerSizeTargetingOptionDetails struct {
	// Output only. The video player size.
	VideoPlayerSize *VideoPlayerSizeTargetingOptionDetailsVideoPlayerSizeEnum `json:"videoPlayerSize,omitempty"`
}
