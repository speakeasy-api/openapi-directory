<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class TeamsCreateRequestBody
{
    /**
     * The description of the team.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The [distinguished name](https://www.ldap.com/ldap-dns-and-rdns) (DN) of the LDAP entry to map to a team. LDAP synchronization must be enabled to map LDAP entries to a team. Use the "[Update LDAP mapping for a team](https://docs.github.com/enterprise-server@3.5/rest/reference/enterprise-admin#update-ldap-mapping-for-a-team)" endpoint to change the LDAP DN. For more information, see "[Using LDAP](https://docs.github.com/enterprise-server@3.5/admin/identity-and-access-management/authenticating-users-for-your-github-enterprise-server-instance/using-ldap#enabling-ldap-sync)."
     * 
     * @var ?string $ldapDn
     */
	#[\JMS\Serializer\Annotation\SerializedName('ldap_dn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ldapDn = null;
    
    /**
     * List GitHub IDs for organization members who will become team maintainers.
     * 
     * @var ?array<string> $maintainers
     */
	#[\JMS\Serializer\Annotation\SerializedName('maintainers')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $maintainers = null;
    
    /**
     * The name of the team.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The ID of a team to set as the parent team.
     * 
     * @var ?int $parentTeamId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_team_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $parentTeamId = null;
    
    /**
     * **Deprecated**. The permission that new repositories will be added to the team with when none is specified.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\TeamsCreateRequestBodyPermissionEnum $permission
     */
	#[\JMS\Serializer\Annotation\SerializedName('permission')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\TeamsCreateRequestBodyPermissionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TeamsCreateRequestBodyPermissionEnum $permission = null;
    
    /**
     * The level of privacy this team should have. The options are:  
     * 
     * **For a non-nested team:**  
     *  * `secret` - only visible to organization owners and members of this team.  
     *  * `closed` - visible to all members of this organization.  
     * Default: `secret`  
     * **For a parent or child team:**  
     *  * `closed` - visible to all members of this organization.  
     * Default for child team: `closed`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\TeamsCreateRequestBodyPrivacyEnum $privacy
     */
	#[\JMS\Serializer\Annotation\SerializedName('privacy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\TeamsCreateRequestBodyPrivacyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TeamsCreateRequestBodyPrivacyEnum $privacy = null;
    
    /**
     * The full name (e.g., "organization-name/repository-name") of repositories to add the team to.
     * 
     * @var ?array<string> $repoNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('repo_names')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $repoNames = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->ldapDn = null;
		$this->maintainers = null;
		$this->name = "";
		$this->parentTeamId = null;
		$this->permission = null;
		$this->privacy = null;
		$this->repoNames = null;
	}
}
