"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tfl_api_presentation_entities_stoppointsresponse as shared_tfl_api_presentation_entities_stoppointsresponse
from typing import Optional


@dataclasses.dataclass
class StopPointGetByModeRequest:
    
    modes: list[str] = dataclasses.field(metadata={'path_param': { 'field_name': 'modes', 'style': 'simple', 'explode': False }})
    r"""A comma-seperated list of modes e.g. tube,dlr"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""The data set page to return. Page 1 equates to the first 1000 stop points, page 2 equates to 1001-2000 etc. Must be entered for bus mode as data set is too large."""  
    

@dataclasses.dataclass
class StopPointGetByModeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tfl_api_presentation_entities_stop_points_response: Optional[shared_tfl_api_presentation_entities_stoppointsresponse.TflAPIPresentationEntitiesStopPointsResponse] = dataclasses.field(default=None)
    r"""OK"""  
    