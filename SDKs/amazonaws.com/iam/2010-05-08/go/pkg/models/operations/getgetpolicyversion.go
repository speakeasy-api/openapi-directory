// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETPolicyVersionActionEnum
type GETGETPolicyVersionActionEnum string

const (
	GETGETPolicyVersionActionEnumGetPolicyVersion GETGETPolicyVersionActionEnum = "GetPolicyVersion"
)

func (e *GETGETPolicyVersionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetPolicyVersion":
		*e = GETGETPolicyVersionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETPolicyVersionActionEnum: %s", s)
	}
}

// GETGETPolicyVersionVersionEnum
type GETGETPolicyVersionVersionEnum string

const (
	GETGETPolicyVersionVersionEnumTwoThousandAndTen0508 GETGETPolicyVersionVersionEnum = "2010-05-08"
)

func (e *GETGETPolicyVersionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETGETPolicyVersionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETPolicyVersionVersionEnum: %s", s)
	}
}

type GETGETPolicyVersionRequest struct {
	Action GETGETPolicyVersionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The Amazon Resource Name (ARN) of the managed policy that you want information about.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
	PolicyArn string                         `queryParam:"style=form,explode=true,name=PolicyArn"`
	Version   GETGETPolicyVersionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// <p>Identifies the policy version to retrieve.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters that consists of the lowercase letter 'v' followed by one or two digits, and optionally followed by a period '.' and a string of letters and digits.</p>
	VersionID         string  `queryParam:"style=form,explode=true,name=VersionId"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETPolicyVersionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
