// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetRelatedVideosPathParams struct {
	// The ID of the video.
	VideoID float64 `pathParam:"style=simple,explode=false,name=video_id"`
}

// GetRelatedVideosFilterEnum - The attribute by which to filter the results.
type GetRelatedVideosFilterEnum string

const (
	GetRelatedVideosFilterEnumRelated GetRelatedVideosFilterEnum = "related"
)

func (e *GetRelatedVideosFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "related":
		*e = GetRelatedVideosFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRelatedVideosFilterEnum: %s", s)
	}
}

type GetRelatedVideosQueryParams struct {
	// The attribute by which to filter the results.
	Filter *GetRelatedVideosFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
}

type GetRelatedVideosRequest struct {
	PathParams  GetRelatedVideosPathParams
	QueryParams GetRelatedVideosQueryParams
}

type GetRelatedVideosResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The value of `filter` isn' `related`.
	LegacyError *shared.LegacyError
	// The related videos were returned.
	Videos []shared.Video
}
