/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Information about the videos related to this tag.
 */
export class TagMetadataConnectionsVideos extends SpeakeasyBase {
  /**
   * An array of HTTP methods permitted on this URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options: string[];

  /**
   * The total number of videos on this connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;

  /**
   * The API URI that resolves to the connection data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * A collection of information that is connected to this resource.
 */
export class TagMetadataConnections extends SpeakeasyBase {
  /**
   * Information about the videos related to this tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videos" })
  @Type(() => TagMetadataConnectionsVideos)
  videos: TagMetadataConnectionsVideos;
}

/**
 * Metadata about the group.
 */
export class TagMetadata extends SpeakeasyBase {
  /**
   * A collection of information that is connected to this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connections" })
  @Type(() => TagMetadataConnections)
  connections: TagMetadataConnections;
}

/**
 * The tag was returned.
 */
export class Tag extends SpeakeasyBase {
  /**
   * The normalized canonical tag name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canonical" })
  canonical: string;

  /**
   * Metadata about the group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => TagMetadata)
  metadata: TagMetadata;

  /**
   * The tag value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The tag's resource key string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_key" })
  resourceKey: string;

  /**
   * The canonical relative URI of the tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}
