/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Represents a 'commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository.
 */
export class SecretScanningLocationCommit extends SpeakeasyBase {
  /**
   * SHA-1 hash ID of the associated blob
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blob_sha" })
  blobSha: string;

  /**
   * The API URL to get the associated blob resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blob_url" })
  blobUrl: string;

  /**
   * SHA-1 hash ID of the associated commit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commit_sha" })
  commitSha: string;

  /**
   * The API URL to get the associated commit resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commit_url" })
  commitUrl: string;

  /**
   * The column at which the secret ends within the end line when the file is interpreted as 8BIT ASCII
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_column" })
  endColumn: number;

  /**
   * Line number at which the secret ends in the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_line" })
  endLine: number;

  /**
   * The file path in the repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * The column at which the secret starts within the start line when the file is interpreted as 8BIT ASCII
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_column" })
  startColumn: number;

  /**
   * Line number at which the secret starts in the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_line" })
  startLine: number;
}
