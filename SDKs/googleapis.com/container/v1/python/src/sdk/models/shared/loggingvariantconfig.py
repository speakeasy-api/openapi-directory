"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LoggingVariantConfigVariantEnum(str, Enum):
    r"""Logging variant deployed on nodes."""
    VARIANT_UNSPECIFIED = 'VARIANT_UNSPECIFIED'
    DEFAULT = 'DEFAULT'
    MAX_THROUGHPUT = 'MAX_THROUGHPUT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LoggingVariantConfig:
    r"""LoggingVariantConfig specifies the behaviour of the logging component."""
    
    variant: Optional[LoggingVariantConfigVariantEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variant'), 'exclude': lambda f: f is None }})
    r"""Logging variant deployed on nodes."""  
    