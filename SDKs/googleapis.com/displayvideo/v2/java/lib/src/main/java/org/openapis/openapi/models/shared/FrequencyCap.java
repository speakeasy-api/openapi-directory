/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FrequencyCap - Settings that control the number of times a user may be shown with the same ad during a given time period.
 */
public class FrequencyCap {
    /**
     * The maximum number of times a user may be shown the same ad during this period. Must be greater than 0. Required when unlimited is `false` and max_views is not set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxImpressions")
    public Integer maxImpressions;
    public FrequencyCap withMaxImpressions(Integer maxImpressions) {
        this.maxImpressions = maxImpressions;
        return this;
    }
    
    /**
     * The maximum number of times a user may click-through or fully view an ad during this period until it is no longer served to them. Must be greater than 0. Only applicable to YouTube and Partners resources. Required when unlimited is `false` and max_impressions is not set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxViews")
    public Integer maxViews;
    public FrequencyCap withMaxViews(Integer maxViews) {
        this.maxViews = maxViews;
        return this;
    }
    
    /**
     * The time unit in which the frequency cap will be applied. Required when unlimited is `false`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeUnit")
    public FrequencyCapTimeUnitEnum timeUnit;
    public FrequencyCap withTimeUnit(FrequencyCapTimeUnitEnum timeUnit) {
        this.timeUnit = timeUnit;
        return this;
    }
    
    /**
     * The number of time_unit the frequency cap will last. Required when unlimited is `false`. The following restrictions apply based on the value of time_unit: * `TIME_UNIT_LIFETIME` - this field is output only and will default to 1 * `TIME_UNIT_MONTHS` - must be between 1 and 2 * `TIME_UNIT_WEEKS` - must be between 1 and 4 * `TIME_UNIT_DAYS` - must be between 1 and 6 * `TIME_UNIT_HOURS` - must be between 1 and 23 * `TIME_UNIT_MINUTES` - must be between 1 and 59
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeUnitCount")
    public Integer timeUnitCount;
    public FrequencyCap withTimeUnitCount(Integer timeUnitCount) {
        this.timeUnitCount = timeUnitCount;
        return this;
    }
    
    /**
     * Whether unlimited frequency capping is applied. When this field is set to `true`, the remaining frequency cap fields are not applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unlimited")
    public Boolean unlimited;
    public FrequencyCap withUnlimited(Boolean unlimited) {
        this.unlimited = unlimited;
        return this;
    }
    
}
