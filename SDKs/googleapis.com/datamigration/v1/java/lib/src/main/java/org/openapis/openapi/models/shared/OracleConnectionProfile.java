/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OracleConnectionProfile - Specifies connection parameters required specifically for Oracle databases.
 */
public class OracleConnectionProfile {
    /**
     * Required. Database service for the Oracle connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseService")
    public String databaseService;
    public OracleConnectionProfile withDatabaseService(String databaseService) {
        this.databaseService = databaseService;
        return this;
    }
    
    /**
     * Forward SSH Tunnel connectivity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forwardSshConnectivity")
    public ForwardSshTunnelConnectivity forwardSshConnectivity;
    public OracleConnectionProfile withForwardSshConnectivity(ForwardSshTunnelConnectivity forwardSshConnectivity) {
        this.forwardSshConnectivity = forwardSshConnectivity;
        return this;
    }
    
    /**
     * Required. The IP or hostname of the source Oracle database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host")
    public String host;
    public OracleConnectionProfile withHost(String host) {
        this.host = host;
        return this;
    }
    
    /**
     * Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public OracleConnectionProfile withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Output only. Indicates whether a new password is included in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passwordSet")
    public Boolean passwordSet;
    public OracleConnectionProfile withPasswordSet(Boolean passwordSet) {
        this.passwordSet = passwordSet;
        return this;
    }
    
    /**
     * Required. The network port of the source Oracle database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public Integer port;
    public OracleConnectionProfile withPort(Integer port) {
        this.port = port;
        return this;
    }
    
    /**
     * Private Connectivity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateConnectivity")
    public PrivateConnectivity privateConnectivity;
    public OracleConnectionProfile withPrivateConnectivity(PrivateConnectivity privateConnectivity) {
        this.privateConnectivity = privateConnectivity;
        return this;
    }
    
    /**
     * Static IP address connectivity configured on service project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("staticServiceIpConnectivity")
    public java.util.Map<String, Object> staticServiceIpConnectivity;
    public OracleConnectionProfile withStaticServiceIpConnectivity(java.util.Map<String, Object> staticServiceIpConnectivity) {
        this.staticServiceIpConnectivity = staticServiceIpConnectivity;
        return this;
    }
    
    /**
     * Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;
    public OracleConnectionProfile withUsername(String username) {
        this.username = username;
        return this;
    }
    
}
