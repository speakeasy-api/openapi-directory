/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListCustomersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class ListCustomersRequest extends SpeakeasyBase {
  /**
   * A pagination cursor returned by a previous call to this endpoint.
   *
   * @remarks
   * Provide this cursor to retrieve the next set of results for your original query.
   *
   * For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * The maximum number of results to return in a single page. This limit is advisory. The response might contain more or fewer results.
   *
   * @remarks
   * The limit is ignored if it is less than 1 or greater than 100. The default value is 100.
   *
   * For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Indicates how customers should be sorted.
   *
   * @remarks
   *
   * The default value is `DEFAULT`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_field",
  })
  sortField?: string;

  /**
   * Indicates whether customers should be sorted in ascending (`ASC`) or
   *
   * @remarks
   * descending (`DESC`) order.
   *
   * The default value is `ASC`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_order",
  })
  sortOrder?: string;
}

export class ListCustomersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listCustomersResponse?: shared.ListCustomersResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
