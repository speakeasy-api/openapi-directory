/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDocumentaiV1DocumentPageBlock } from "./googleclouddocumentaiv1documentpageblock";
import { GoogleCloudDocumentaiV1DocumentPageDetectedBarcode } from "./googleclouddocumentaiv1documentpagedetectedbarcode";
import { GoogleCloudDocumentaiV1DocumentPageDetectedLanguage } from "./googleclouddocumentaiv1documentpagedetectedlanguage";
import { GoogleCloudDocumentaiV1DocumentPageDimension } from "./googleclouddocumentaiv1documentpagedimension";
import { GoogleCloudDocumentaiV1DocumentPageFormField } from "./googleclouddocumentaiv1documentpageformfield";
import { GoogleCloudDocumentaiV1DocumentPageImage } from "./googleclouddocumentaiv1documentpageimage";
import { GoogleCloudDocumentaiV1DocumentPageImageQualityScores } from "./googleclouddocumentaiv1documentpageimagequalityscores";
import { GoogleCloudDocumentaiV1DocumentPageLayout } from "./googleclouddocumentaiv1documentpagelayout";
import { GoogleCloudDocumentaiV1DocumentPageLine } from "./googleclouddocumentaiv1documentpageline";
import { GoogleCloudDocumentaiV1DocumentPageMatrix } from "./googleclouddocumentaiv1documentpagematrix";
import { GoogleCloudDocumentaiV1DocumentPageParagraph } from "./googleclouddocumentaiv1documentpageparagraph";
import { GoogleCloudDocumentaiV1DocumentPageSymbol } from "./googleclouddocumentaiv1documentpagesymbol";
import { GoogleCloudDocumentaiV1DocumentPageTable } from "./googleclouddocumentaiv1documentpagetable";
import { GoogleCloudDocumentaiV1DocumentPageToken } from "./googleclouddocumentaiv1documentpagetoken";
import { GoogleCloudDocumentaiV1DocumentPageVisualElement } from "./googleclouddocumentaiv1documentpagevisualelement";
import { GoogleCloudDocumentaiV1DocumentProvenance } from "./googleclouddocumentaiv1documentprovenance";
import { Expose, Type } from "class-transformer";

/**
 * A page in a Document.
 */
export class GoogleCloudDocumentaiV1DocumentPage extends SpeakeasyBase {
  /**
   * A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1DocumentPageBlock })
  @Expose({ name: "blocks" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageBlock)
  blocks?: GoogleCloudDocumentaiV1DocumentPageBlock[];

  /**
   * A list of detected barcodes.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDocumentaiV1DocumentPageDetectedBarcode,
  })
  @Expose({ name: "detectedBarcodes" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageDetectedBarcode)
  detectedBarcodes?: GoogleCloudDocumentaiV1DocumentPageDetectedBarcode[];

  /**
   * A list of detected languages together with confidence.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage,
  })
  @Expose({ name: "detectedLanguages" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageDetectedLanguage)
  detectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];

  /**
   * Dimension for the page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimension" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageDimension)
  dimension?: GoogleCloudDocumentaiV1DocumentPageDimension;

  /**
   * A list of visually detected form fields on the page.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1DocumentPageFormField })
  @Expose({ name: "formFields" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageFormField)
  formFields?: GoogleCloudDocumentaiV1DocumentPageFormField[];

  /**
   * Rendered image contents for this page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageImage)
  image?: GoogleCloudDocumentaiV1DocumentPageImage;

  /**
   * Image Quality Scores for the page image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageQualityScores" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageImageQualityScores)
  imageQualityScores?: GoogleCloudDocumentaiV1DocumentPageImageQualityScores;

  /**
   * Visual element describing a layout unit on a page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layout" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageLayout)
  layout?: GoogleCloudDocumentaiV1DocumentPageLayout;

  /**
   * A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1DocumentPageLine })
  @Expose({ name: "lines" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageLine)
  lines?: GoogleCloudDocumentaiV1DocumentPageLine[];

  /**
   * 1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageNumber" })
  pageNumber?: number;

  /**
   * A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1DocumentPageParagraph })
  @Expose({ name: "paragraphs" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageParagraph)
  paragraphs?: GoogleCloudDocumentaiV1DocumentPageParagraph[];

  /**
   * Structure to identify provenance relationships between annotations in different revisions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provenance" })
  @Type(() => GoogleCloudDocumentaiV1DocumentProvenance)
  provenance?: GoogleCloudDocumentaiV1DocumentProvenance;

  /**
   * A list of visually detected symbols on the page.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1DocumentPageSymbol })
  @Expose({ name: "symbols" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageSymbol)
  symbols?: GoogleCloudDocumentaiV1DocumentPageSymbol[];

  /**
   * A list of visually detected tables on the page.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1DocumentPageTable })
  @Expose({ name: "tables" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageTable)
  tables?: GoogleCloudDocumentaiV1DocumentPageTable[];

  /**
   * A list of visually detected tokens on the page.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1DocumentPageToken })
  @Expose({ name: "tokens" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageToken)
  tokens?: GoogleCloudDocumentaiV1DocumentPageToken[];

  /**
   * Transformation matrices that were applied to the original document image to produce Page.image.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1DocumentPageMatrix })
  @Expose({ name: "transforms" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageMatrix)
  transforms?: GoogleCloudDocumentaiV1DocumentPageMatrix[];

  /**
   * A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDocumentaiV1DocumentPageVisualElement,
  })
  @Expose({ name: "visualElements" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageVisualElement)
  visualElements?: GoogleCloudDocumentaiV1DocumentPageVisualElement[];
}
