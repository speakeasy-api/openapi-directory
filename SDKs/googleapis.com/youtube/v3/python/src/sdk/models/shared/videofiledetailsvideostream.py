"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VideoFileDetailsVideoStreamRotationEnum(str, Enum):
    r"""The amount that YouTube needs to rotate the original source content to properly display the video."""
    NONE = 'none'
    CLOCKWISE = 'clockwise'
    UPSIDE_DOWN = 'upsideDown'
    COUNTER_CLOCKWISE = 'counterClockwise'
    OTHER = 'other'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VideoFileDetailsVideoStream:
    r"""Information about a video stream."""
    
    aspect_ratio: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aspectRatio'), 'exclude': lambda f: f is None }})
    r"""The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed."""  
    bitrate_bps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bitrateBps'), 'exclude': lambda f: f is None }})
    r"""The video stream's bitrate, in bits per second."""  
    codec: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codec'), 'exclude': lambda f: f is None }})
    r"""The video codec that the stream uses."""  
    frame_rate_fps: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frameRateFps'), 'exclude': lambda f: f is None }})
    r"""The video stream's frame rate, in frames per second."""  
    height_pixels: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('heightPixels'), 'exclude': lambda f: f is None }})
    r"""The encoded video content's height in pixels."""  
    rotation: Optional[VideoFileDetailsVideoStreamRotationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rotation'), 'exclude': lambda f: f is None }})
    r"""The amount that YouTube needs to rotate the original source content to properly display the video."""  
    vendor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendor'), 'exclude': lambda f: f is None }})
    r"""A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code."""  
    width_pixels: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('widthPixels'), 'exclude': lambda f: f is None }})
    r"""The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels / height_pixels."""  
    