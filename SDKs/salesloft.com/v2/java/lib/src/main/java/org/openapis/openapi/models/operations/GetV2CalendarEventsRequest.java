/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetV2CalendarEventsRequest {
    /**
     * calendar_id of the user who created or included as a guest to the event.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=calendar_id")
    public String calendarId;

    public GetV2CalendarEventsRequest withCalendarId(String calendarId) {
        this.calendarId = calendarId;
        return this;
    }
    
    /**
     * Upper bound (exclusive) for a calendar event's start time to filter by.
     * Must be in ISO 8601 format.
     * 
     * Example: `2022-02-14T10:12:59+00:00`.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end_time")
    public String endTime;

    public GetV2CalendarEventsRequest withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Whether to include total_pages and total_count in the metadata. Defaults to false
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include_paging_counts")
    public Boolean includePagingCounts;

    public GetV2CalendarEventsRequest withIncludePagingCounts(Boolean includePagingCounts) {
        this.includePagingCounts = includePagingCounts;
        return this;
    }
    
    /**
     * The current page to fetch results from. Defaults to 1
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;

    public GetV2CalendarEventsRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * How many records to show per page in the range [1, 100]. Defaults to 25
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Long perPage;

    public GetV2CalendarEventsRequest withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * Key to sort on, must be one of: start_time. Defaults to start_time
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public String sortBy;

    public GetV2CalendarEventsRequest withSortBy(String sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Direction to sort in, must be one of: ASC, DESC. Defaults to DESC
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_direction")
    public String sortDirection;

    public GetV2CalendarEventsRequest withSortDirection(String sortDirection) {
        this.sortDirection = sortDirection;
        return this;
    }
    
    /**
     * Lower bound (inclusive) for a calendar event's end time to filter by.
     * Must be in ISO 8601 format.
     * 
     * Example: `2022-02-14T10:12:59+00:00`.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start_time")
    public String startTime;

    public GetV2CalendarEventsRequest withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * user_guid of the user who created or included as a guest to the event.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=user_guid")
    public String userGuid;

    public GetV2CalendarEventsRequest withUserGuid(String userGuid) {
        this.userGuid = userGuid;
        return this;
    }
    
    public GetV2CalendarEventsRequest(){}
}
