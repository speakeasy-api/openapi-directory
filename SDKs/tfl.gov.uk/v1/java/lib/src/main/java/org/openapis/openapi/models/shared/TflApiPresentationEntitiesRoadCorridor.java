/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class TflApiPresentationEntitiesRoadCorridor {
    /**
     * The Bounds of the Corridor, given by the south-east followed by the north-west co-ordinate
     *             pair in geoJSON format e.g. "[[-1.241531,51.242151],[1.641223,53.765721]]"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bounds")
    public String bounds;

    public TflApiPresentationEntitiesRoadCorridor withBounds(String bounds) {
        this.bounds = bounds;
        return this;
    }
    
    /**
     * The display name of the Corridor e.g. "North Circular (A406)". This
     *             may be identical to the Id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public TflApiPresentationEntitiesRoadCorridor withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The Envelope of the Corridor, given by the corner co-ordinates of a rectangular (four-point) polygon
     *             in geoJSON format e.g. "[[-1.241531,51.242151],[-1.241531,53.765721],[1.641223,53.765721],[1.641223,51.242151]]"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("envelope")
    public String envelope;

    public TflApiPresentationEntitiesRoadCorridor withEnvelope(String envelope) {
        this.envelope = envelope;
        return this;
    }
    
    /**
     * The group name of the Corridor e.g. "Central London". Most corridors are not grouped, in which case this field can be null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group")
    public String group;

    public TflApiPresentationEntitiesRoadCorridor withGroup(String group) {
        this.group = group;
        return this;
    }
    
    /**
     * The Id of the Corridor e.g. "A406"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public TflApiPresentationEntitiesRoadCorridor withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The end of the period over which status has been aggregated, or null if this is the current corridor status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("statusAggregationEndDate")
    public OffsetDateTime statusAggregationEndDate;

    public TflApiPresentationEntitiesRoadCorridor withStatusAggregationEndDate(OffsetDateTime statusAggregationEndDate) {
        this.statusAggregationEndDate = statusAggregationEndDate;
        return this;
    }
    
    /**
     * The start of the period over which status has been aggregated, or null if this is the current corridor status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("statusAggregationStartDate")
    public OffsetDateTime statusAggregationStartDate;

    public TflApiPresentationEntitiesRoadCorridor withStatusAggregationStartDate(OffsetDateTime statusAggregationStartDate) {
        this.statusAggregationStartDate = statusAggregationStartDate;
        return this;
    }
    
    /**
     * Standard multi-mode status severity code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusSeverity")
    public String statusSeverity;

    public TflApiPresentationEntitiesRoadCorridor withStatusSeverity(String statusSeverity) {
        this.statusSeverity = statusSeverity;
        return this;
    }
    
    /**
     * Description of the status severity as applied to RoadCorridors
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusSeverityDescription")
    public String statusSeverityDescription;

    public TflApiPresentationEntitiesRoadCorridor withStatusSeverityDescription(String statusSeverityDescription) {
        this.statusSeverityDescription = statusSeverityDescription;
        return this;
    }
    
    /**
     * URL to retrieve this Corridor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public TflApiPresentationEntitiesRoadCorridor withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public TflApiPresentationEntitiesRoadCorridor(){}
}
