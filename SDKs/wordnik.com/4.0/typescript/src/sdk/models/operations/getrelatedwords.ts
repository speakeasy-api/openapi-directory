/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * Limits the total results per type of relationship type
 */
export enum GetRelatedWordsRelationshipTypesEnum {
  Synonym = "synonym",
  Antonym = "antonym",
  Variant = "variant",
  Equivalent = "equivalent",
  CrossReference = "cross-reference",
  RelatedWord = "related-word",
  Rhyme = "rhyme",
  Form = "form",
  EtymologicallyRelatedTerm = "etymologically-related-term",
  Hypernym = "hypernym",
  Hyponym = "hyponym",
  InflectedForm = "inflected-form",
  Primary = "primary",
  SameContext = "same-context",
  VerbForm = "verb-form",
  VerbStem = "verb-stem",
  HasTopic = "has_topic",
}

/**
 * If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
 */
export enum GetRelatedWordsUseCanonicalEnum {
  False = "false",
  True = "true",
}

export class GetRelatedWordsRequest extends SpeakeasyBase {
  /**
   * Restrict to the supplied relationship types
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=limitPerRelationshipType",
  })
  limitPerRelationshipType?: number;

  /**
   * Limits the total results per type of relationship type
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=relationshipTypes",
  })
  relationshipTypes?: GetRelatedWordsRelationshipTypesEnum;

  /**
   * If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=useCanonical",
  })
  useCanonical?: GetRelatedWordsUseCanonicalEnum;

  /**
   * Word to fetch relationships for
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=word",
  })
  word: string;
}

export class GetRelatedWordsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
