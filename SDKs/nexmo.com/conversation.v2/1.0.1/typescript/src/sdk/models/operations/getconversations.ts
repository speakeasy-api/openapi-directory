/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetConversationsRequest extends SpeakeasyBase {
  /**
   * The cursor to start returning results from.
   *
   * @remarks
   *
   * You are not expected to provide this manually, but to follow the url provided in `_links.next.href` in the response which contains a `cursor` value
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * Search for conversations created before this ISO8601 date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_end",
  })
  dateEnd?: string;

  /**
   * Search for conversations created after this ISO8601 date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_start",
  })
  dateStart?: string;

  /**
   * Show the most (`desc`) / least (`asc`) recently created entries first
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: shared.OrderEnum;

  /**
   * The number of results returned per page.   The default value is `10`. The maximum value is `100`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;
}

export class GetConversations200ApplicationJSONEmbeddedData extends SpeakeasyBase {
  /**
   * List of conversations matching the provided filter
   */
  @SpeakeasyMetadata({ elemType: shared.ConversationList })
  @Expose({ name: "conversations" })
  @Type(() => shared.ConversationList)
  conversations?: shared.ConversationList[];
}

export class GetConversations200ApplicationJSONEmbedded extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => GetConversations200ApplicationJSONEmbeddedData)
  data?: GetConversations200ApplicationJSONEmbeddedData;
}

export class GetConversations200ApplicationJSONLinksFirst extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class GetConversations200ApplicationJSONLinksNext extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class GetConversations200ApplicationJSONLinksPrev extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class GetConversations200ApplicationJSONLinksSelf extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class GetConversations200ApplicationJSONLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first" })
  @Type(() => GetConversations200ApplicationJSONLinksFirst)
  first?: GetConversations200ApplicationJSONLinksFirst;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  @Type(() => GetConversations200ApplicationJSONLinksNext)
  next?: GetConversations200ApplicationJSONLinksNext;

  @SpeakeasyMetadata()
  @Expose({ name: "prev" })
  @Type(() => GetConversations200ApplicationJSONLinksPrev)
  prev?: GetConversations200ApplicationJSONLinksPrev;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => GetConversations200ApplicationJSONLinksSelf)
  self?: GetConversations200ApplicationJSONLinksSelf;
}

/**
 * OK
 */
export class GetConversations200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_embedded" })
  @Type(() => GetConversations200ApplicationJSONEmbedded)
  embedded?: GetConversations200ApplicationJSONEmbedded;

  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => GetConversations200ApplicationJSONLinks)
  links?: GetConversations200ApplicationJSONLinks;

  /**
   * Current cursor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * The number of results returned on this page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;
}

export class GetConversationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getConversations200ApplicationJSONObject?: GetConversations200ApplicationJSON;
}
