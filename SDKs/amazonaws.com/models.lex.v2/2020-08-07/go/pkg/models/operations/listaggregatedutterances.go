// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListAggregatedUtterancesPathParams struct {
	// The unique identifier of the bot associated with this request.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
}

type ListAggregatedUtterancesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListAggregatedUtterancesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListAggregatedUtterancesRequestBodyAggregationDuration - Provides parameters for setting the time window and duration for aggregating utterance data.
type ListAggregatedUtterancesRequestBodyAggregationDuration struct {
	RelativeAggregationDuration *shared.RelativeAggregationDuration `json:"relativeAggregationDuration,omitempty"`
}

// ListAggregatedUtterancesRequestBodySortBy - Specifies attributes for sorting a list of utterances.
type ListAggregatedUtterancesRequestBodySortBy struct {
	Attribute *shared.AggregatedUtterancesSortAttributeEnum `json:"attribute,omitempty"`
	Order     *shared.SortOrderEnum                         `json:"order,omitempty"`
}

type ListAggregatedUtterancesRequestBody struct {
	// Provides parameters for setting the time window and duration for aggregating utterance data.
	AggregationDuration ListAggregatedUtterancesRequestBodyAggregationDuration `json:"aggregationDuration"`
	// The identifier of the bot alias associated with this request. If you specify the bot alias, you can't specify the bot version.
	BotAliasID *string `json:"botAliasId,omitempty"`
	// The identifier of the bot version associated with this request. If you specify the bot version, you can't specify the bot alias.
	BotVersion *string `json:"botVersion,omitempty"`
	// Provides the specification of a filter used to limit the utterances in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.
	Filters []shared.AggregatedUtterancesFilter `json:"filters,omitempty"`
	// The identifier of the language and locale where the utterances were collected. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.
	LocaleID string `json:"localeId"`
	// The maximum number of utterances to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned. If you don't specify the <code>maxResults</code> parameter, 1,000 results are returned.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// If the response from the <code>ListAggregatedUtterances</code> operation contains more results that specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.
	NextToken *string `json:"nextToken,omitempty"`
	// Specifies attributes for sorting a list of utterances.
	SortBy *ListAggregatedUtterancesRequestBodySortBy `json:"sortBy,omitempty"`
}

type ListAggregatedUtterancesRequest struct {
	PathParams  ListAggregatedUtterancesPathParams
	QueryParams ListAggregatedUtterancesQueryParams
	Headers     ListAggregatedUtterancesHeaders
	Request     ListAggregatedUtterancesRequestBody `request:"mediaType=application/json"`
}

type ListAggregatedUtterancesResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListAggregatedUtterancesResponse *shared.ListAggregatedUtterancesResponse
	// PreconditionFailedException
	PreconditionFailedException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
