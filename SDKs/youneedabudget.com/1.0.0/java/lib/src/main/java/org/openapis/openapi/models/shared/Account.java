/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Account {
    /**
     * The current balance of the account in milliunits format
     */
    @JsonProperty("balance")
    public Long balance;

    public Account withBalance(Long balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * The current cleared balance of the account in milliunits format
     */
    @JsonProperty("cleared_balance")
    public Long clearedBalance;

    public Account withClearedBalance(Long clearedBalance) {
        this.clearedBalance = clearedBalance;
        return this;
    }
    
    /**
     * Whether this account is closed or not
     */
    @JsonProperty("closed")
    public Boolean closed;

    public Account withClosed(Boolean closed) {
        this.closed = closed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debt_escrow_amounts")
    public java.util.Map<String, Long> debtEscrowAmounts;

    public Account withDebtEscrowAmounts(java.util.Map<String, Long> debtEscrowAmounts) {
        this.debtEscrowAmounts = debtEscrowAmounts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debt_interest_rates")
    public java.util.Map<String, Long> debtInterestRates;

    public Account withDebtInterestRates(java.util.Map<String, Long> debtInterestRates) {
        this.debtInterestRates = debtInterestRates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debt_minimum_payments")
    public java.util.Map<String, Long> debtMinimumPayments;

    public Account withDebtMinimumPayments(java.util.Map<String, Long> debtMinimumPayments) {
        this.debtMinimumPayments = debtMinimumPayments;
        return this;
    }
    
    /**
     * The original debt/loan account balance, specified in milliunits format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debt_original_balance")
    public Long debtOriginalBalance;

    public Account withDebtOriginalBalance(Long debtOriginalBalance) {
        this.debtOriginalBalance = debtOriginalBalance;
        return this;
    }
    
    /**
     * Whether or not the account has been deleted.  Deleted accounts will only be included in delta requests.
     */
    @JsonProperty("deleted")
    public Boolean deleted;

    public Account withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * If an account linked to a financial institution (direct_import_linked=true) and the linked connection is not in a healthy state, this will be true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direct_import_in_error")
    public Boolean directImportInError;

    public Account withDirectImportInError(Boolean directImportInError) {
        this.directImportInError = directImportInError;
        return this;
    }
    
    /**
     * Whether or not the account is linked to a financial institution for automatic transaction import.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direct_import_linked")
    public Boolean directImportLinked;

    public Account withDirectImportLinked(Boolean directImportLinked) {
        this.directImportLinked = directImportLinked;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public Account withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A date/time specifying when the account was last reconciled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_reconciled_at")
    public OffsetDateTime lastReconciledAt;

    public Account withLastReconciledAt(OffsetDateTime lastReconciledAt) {
        this.lastReconciledAt = lastReconciledAt;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public Account withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("note")
    public String note;

    public Account withNote(String note) {
        this.note = note;
        return this;
    }
    
    /**
     * Whether this account is on budget or not
     */
    @JsonProperty("on_budget")
    public Boolean onBudget;

    public Account withOnBudget(Boolean onBudget) {
        this.onBudget = onBudget;
        return this;
    }
    
    /**
     * The payee id which should be used when transferring to this account
     */
    @JsonProperty("transfer_payee_id")
    public String transferPayeeId;

    public Account withTransferPayeeId(String transferPayeeId) {
        this.transferPayeeId = transferPayeeId;
        return this;
    }
    
    /**
     * The type of account
     */
    @JsonProperty("type")
    public AccountTypeEnum type;

    public Account withType(AccountTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The current uncleared balance of the account in milliunits format
     */
    @JsonProperty("uncleared_balance")
    public Long unclearedBalance;

    public Account withUnclearedBalance(Long unclearedBalance) {
        this.unclearedBalance = unclearedBalance;
        return this;
    }
    
    public Account(@JsonProperty("balance") Long balance, @JsonProperty("cleared_balance") Long clearedBalance, @JsonProperty("closed") Boolean closed, @JsonProperty("deleted") Boolean deleted, @JsonProperty("id") String id, @JsonProperty("name") String name, @JsonProperty("on_budget") Boolean onBudget, @JsonProperty("transfer_payee_id") String transferPayeeId, @JsonProperty("type") AccountTypeEnum type, @JsonProperty("uncleared_balance") Long unclearedBalance) {
        this.balance = balance;
        this.clearedBalance = clearedBalance;
        this.closed = closed;
        this.deleted = deleted;
        this.id = id;
        this.name = name;
        this.onBudget = onBudget;
        this.transferPayeeId = transferPayeeId;
        this.type = type;
        this.unclearedBalance = unclearedBalance;
  }
}
