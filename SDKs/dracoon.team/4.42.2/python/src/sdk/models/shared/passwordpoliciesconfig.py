"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import encryptionpasswordpolicies as shared_encryptionpasswordpolicies
from ..shared import loginpasswordpolicies as shared_loginpasswordpolicies
from ..shared import sharespasswordpolicies as shared_sharespasswordpolicies
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PasswordPoliciesConfig:
    r"""Set of password policies"""
    
    encryption_password_policies: Optional[shared_encryptionpasswordpolicies.EncryptionPasswordPolicies] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryptionPasswordPolicies'), 'exclude': lambda f: f is None }})
    r"""Encryption password policies"""  
    login_password_policies: Optional[shared_loginpasswordpolicies.LoginPasswordPolicies] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loginPasswordPolicies'), 'exclude': lambda f: f is None }})
    r"""Login password policies"""  
    shares_password_policies: Optional[shared_sharespasswordpolicies.SharesPasswordPolicies] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sharesPasswordPolicies'), 'exclude': lambda f: f is None }})
    r"""Shares password policies"""  
    