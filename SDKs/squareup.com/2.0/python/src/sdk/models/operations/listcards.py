"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listcardsresponse as shared_listcardsresponse
from typing import Optional


@dataclasses.dataclass
class ListCardsSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListCardsRequest:
    
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""A pagination cursor returned by a previous call to this endpoint.
    Provide this to retrieve the next set of results for your original query.
    
    See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
    """  
    customer_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'customer_id', 'style': 'form', 'explode': True }})
    r"""Limit results to cards associated with the customer supplied.
    By default, all cards owned by the merchant are returned.
    """  
    include_disabled: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_disabled', 'style': 'form', 'explode': True }})
    r"""Includes disabled cards.
    By default, all enabled cards owned by the merchant are returned.
    """  
    reference_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'reference_id', 'style': 'form', 'explode': True }})
    r"""Limit results to cards associated with the reference_id supplied."""  
    sort_order: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_order', 'style': 'form', 'explode': True }})
    r"""Sorts the returned list by when the card was created with the specified order.
    This field defaults to ASC.
    """  
    

@dataclasses.dataclass
class ListCardsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_cards_response: Optional[shared_listcardsresponse.ListCardsResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    