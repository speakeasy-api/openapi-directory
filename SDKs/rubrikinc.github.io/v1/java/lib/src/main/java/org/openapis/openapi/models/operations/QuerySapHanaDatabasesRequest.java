/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QuerySapHanaDatabasesRequest {
    /**
     * The ID of the SLA Domain that controls the protection of the host.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=effective_sla_domain_id")
    public String effectiveSlaDomainId;

    public QuerySapHanaDatabasesRequest withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * Specify whether the SAP HANA database is accessible on the Rubrik cluster.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_relic")
    public Boolean isRelic;

    public QuerySapHanaDatabasesRequest withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QuerySapHanaDatabasesRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The name of the SAP HANA database.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public QuerySapHanaDatabasesRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * An integer that specifies a number of initial matches to ignore.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QuerySapHanaDatabasesRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The ID of the Rubrik cluster that provides primary protection for the SAP HANA databases.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_cluster_id")
    public String primaryClusterId;

    public QuerySapHanaDatabasesRequest withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * The name of the SLA Domain that controls the protection of the SAP HANA database.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sla_assignment")
    public String slaAssignment;

    public QuerySapHanaDatabasesRequest withSlaAssignment(String slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * Specifies the SAP HANA Database attribute to use in sorting the summary information.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QuerySapHanaDatabasesSortByEnum sortBy;

    public QuerySapHanaDatabasesRequest withSortBy(QuerySapHanaDatabasesSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * The order to sort the responses by. Valid choices are asc (ascending) and desc (descending).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QuerySapHanaDatabasesSortOrderEnum sortOrder;

    public QuerySapHanaDatabasesRequest withSortOrder(QuerySapHanaDatabasesSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QuerySapHanaDatabasesRequest(){}
}
