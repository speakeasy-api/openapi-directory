"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import notificationchannelstrategy as shared_notificationchannelstrategy
from ..shared import notificationratelimit as shared_notificationratelimit
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AlertStrategy:
    r"""Control over how the notification channels in notification_channels are notified when this alert fires."""
    
    auto_close: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoClose'), 'exclude': lambda f: f is None }})
    r"""If an alert policy that was active has no data for this long, any open incidents will close"""  
    notification_channel_strategy: Optional[list[shared_notificationchannelstrategy.NotificationChannelStrategy]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notificationChannelStrategy'), 'exclude': lambda f: f is None }})
    r"""Control how notifications will be sent out, on a per-channel basis."""  
    notification_rate_limit: Optional[shared_notificationratelimit.NotificationRateLimit] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notificationRateLimit'), 'exclude': lambda f: f is None }})
    r"""Control over the rate of notifications sent to this alert policy's notification channels."""  
    