/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetElectioneeringRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=api_key",
  })
  apiKey: string;

  /**
   *
   * @remarks
   * A unique identifier assigned to each candidate registered with the FEC.
   * If a person runs for several offices, that person will have separate candidate IDs for each office.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=candidate_id",
  })
  candidateId?: string[];

  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=committee_id",
  })
  committeeId?: string[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=description",
  })
  description?: string;

  /**
   * Index of last result from previous page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=last_index",
  })
  lastIndex?: number;

  /**
   * Filter for all amounts less than a value.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_amount",
  })
  maxAmount?: string;

  /**
   * Maximum disbursement date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_date;dateTimeFormat=YYYY-MM-DD",
  })
  maxDate?: Date;

  /**
   * Filter for all amounts greater than a value.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_amount",
  })
  minAmount?: string;

  /**
   * Minimum disbursement date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_date;dateTimeFormat=YYYY-MM-DD",
  })
  minDate?: Date;

  /**
   * For paginating through results, starting at page 1
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results returned per page. Defaults to 20.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   *
   * @remarks
   * Forms with coverage date -
   *     year from the coverage ending date.
   * Forms without coverage date -
   *     year from the receipt date.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=report_year",
  })
  reportYear?: number[];

  /**
   * Provide a field to sort by. Use `-` for descending order.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * Hide null values on sorted column(s).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_hide_null",
  })
  sortHideNull?: boolean;

  /**
   * Toggle that filters out all rows having sort column that is non-null
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_null_only",
  })
  sortNullOnly?: boolean;

  /**
   * Toggle that sorts null values last
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_nulls_last",
  })
  sortNullsLast?: boolean;
}

export class GetElectioneeringResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  electioneeringPage?: shared.ElectioneeringPage;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
