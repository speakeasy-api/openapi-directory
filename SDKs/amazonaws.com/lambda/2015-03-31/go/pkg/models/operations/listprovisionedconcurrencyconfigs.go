// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListProvisionedConcurrencyConfigsListEnum
type ListProvisionedConcurrencyConfigsListEnum string

const (
	ListProvisionedConcurrencyConfigsListEnumAll ListProvisionedConcurrencyConfigsListEnum = "ALL"
)

func (e ListProvisionedConcurrencyConfigsListEnum) ToPointer() *ListProvisionedConcurrencyConfigsListEnum {
	return &e
}

func (e *ListProvisionedConcurrencyConfigsListEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALL":
		*e = ListProvisionedConcurrencyConfigsListEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListProvisionedConcurrencyConfigsListEnum: %v", v)
	}
}

type ListProvisionedConcurrencyConfigsRequest struct {
	// <p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
	FunctionName string                                    `pathParam:"style=simple,explode=false,name=FunctionName"`
	List         ListProvisionedConcurrencyConfigsListEnum `queryParam:"style=form,explode=true,name=List"`
	// Specify the pagination token that's returned by a previous request to retrieve the next page of results.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Specify a number to limit the number of configurations returned.
	MaxItems          *int64  `queryParam:"style=form,explode=true,name=MaxItems"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListProvisionedConcurrencyConfigsResponse struct {
	ContentType string
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// Success
	ListProvisionedConcurrencyConfigsResponse *shared.ListProvisionedConcurrencyConfigsResponse
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
