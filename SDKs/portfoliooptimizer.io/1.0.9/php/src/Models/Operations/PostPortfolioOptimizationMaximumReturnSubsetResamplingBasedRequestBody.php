<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBody
{
    /**
     * The number of assets
     * 
     * @var int $assets
     */
	#[\JMS\Serializer\Annotation\SerializedName('assets')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $assets;
    
    /**
     * assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
     * 
     * @var ?array<array<float>> $assetsCovarianceMatrix
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsCovarianceMatrix')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assetsCovarianceMatrix = null;
    
    /**
     * assetsReturns[i] is the arithmetic return of asset i
     * 
     * @var array<float> $assetsReturns
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsReturns')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    public array $assetsReturns;
    
	#[\JMS\Serializer\Annotation\SerializedName('constraints')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBodyConstraints')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBodyConstraints $constraints = null;
    
    /**
     * The number of subset portfolios to compute; only applicable if the enumeration method for the subset portfolios is random sampling
     * 
     * @var ?int $subsetPortfolios
     */
	#[\JMS\Serializer\Annotation\SerializedName('subsetPortfolios')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subsetPortfolios = null;
    
    /**
     * The method to aggregate the subset portfolios
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum $subsetPortfoliosAggregationMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('subsetPortfoliosAggregationMethod')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum $subsetPortfoliosAggregationMethod = null;
    
    /**
     * The method to enumerate the subset portfolios
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum $subsetPortfoliosEnumerationMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('subsetPortfoliosEnumerationMethod')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostPortfolioOptimizationMaximumReturnSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum $subsetPortfoliosEnumerationMethod = null;
    
    /**
     * The number of assets to include in each subset portfolio; defaults to a value of order the square root of the total number of assets
     * 
     * @var ?int $subsetSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('subsetSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subsetSize = null;
    
	public function __construct()
	{
		$this->assets = 0;
		$this->assetsCovarianceMatrix = null;
		$this->assetsReturns = [];
		$this->constraints = null;
		$this->subsetPortfolios = null;
		$this->subsetPortfoliosAggregationMethod = null;
		$this->subsetPortfoliosEnumerationMethod = null;
		$this->subsetSize = null;
	}
}
