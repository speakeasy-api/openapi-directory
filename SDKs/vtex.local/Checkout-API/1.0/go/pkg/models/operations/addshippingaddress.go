// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type AddShippingAddressRequestBodyLogisticsInfo struct {
	// Index of item in items array
	ItemIndex *int64 `json:"itemIndex,omitempty"`
	// Delivery channel selected by the customer. For example, `"delivery"` or `"pickup-in-point"`.
	SelectedDeliveryChannel *string `json:"selectedDeliveryChannel,omitempty"`
	// Selected SLA. For example, `"normal"` or `"express"`.
	SelectedSLA *string `json:"selectedSla,omitempty"`
}

type AddShippingAddressRequestBodySelectedAddresses struct {
	// Type of address. For example, `Residential` or `Pickup`, among others.
	AddressType *string `json:"addressType,omitempty"`
	// City of the shipping address.
	City *string `json:"city,omitempty"`
	// Complement to the shipping address in case it applies.
	Complement *string `json:"complement,omitempty"`
	// Three letter ISO code of the country of the shipping address.
	Country *string `json:"country,omitempty"`
	// Array containing two floats with geocoordinates, first longitude, then latitude.
	GeoCoordinates []float64 `json:"geoCoordinates,omitempty"`
	// Neighborhood of the shipping address.
	Neighborhood *string `json:"neighborhood,omitempty"`
	// Number of the building, house or apartment in the shipping address.
	Number *string `json:"number,omitempty"`
	// Postal Code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Name of the person who is going to receive the order.
	ReceiverName *string `json:"receiverName,omitempty"`
	// Complement that might help locate the shipping address more precisely in case of delivery.
	Reference *string `json:"reference,omitempty"`
	// State of the shipping address.
	State *string `json:"state,omitempty"`
	// Street of the shipping address.
	Street *string `json:"street,omitempty"`
}

type AddShippingAddressRequestBody struct {
	// This field should be sent as `false` to prevent the address information from being filled in automatically based on the `postalCode` information.
	ClearAddressIfPostalCodeNotFound *bool `json:"clearAddressIfPostalCodeNotFound,omitempty"`
	// Array with logistics information on each item of the `items` array in the `orderForm`.
	LogisticsInfo []AddShippingAddressRequestBodyLogisticsInfo `json:"logisticsInfo,omitempty"`
	// List of objects with addresses information.
	SelectedAddresses []AddShippingAddressRequestBodySelectedAddresses `json:"selectedAddresses,omitempty"`
}

type AddShippingAddressRequest struct {
	// HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent.
	ContentType string                        `header:"style=simple,explode=false,name=Content-Type"`
	RequestBody AddShippingAddressRequestBody `request:"mediaType=application/json"`
	// ID of the orderForm that will receive client profile information.
	OrderFormID string `pathParam:"style=simple,explode=false,name=orderFormId"`
}

type AddShippingAddressResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
