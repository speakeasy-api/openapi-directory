// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCompleteMigrationActionEnum
type GETCompleteMigrationActionEnum string

const (
	GETCompleteMigrationActionEnumCompleteMigration GETCompleteMigrationActionEnum = "CompleteMigration"
)

func (e GETCompleteMigrationActionEnum) ToPointer() *GETCompleteMigrationActionEnum {
	return &e
}

func (e *GETCompleteMigrationActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CompleteMigration":
		*e = GETCompleteMigrationActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCompleteMigrationActionEnum: %v", v)
	}
}

// GETCompleteMigrationVersionEnum
type GETCompleteMigrationVersionEnum string

const (
	GETCompleteMigrationVersionEnumTwoThousandAndFifteen0202 GETCompleteMigrationVersionEnum = "2015-02-02"
)

func (e GETCompleteMigrationVersionEnum) ToPointer() *GETCompleteMigrationVersionEnum {
	return &e
}

func (e *GETCompleteMigrationVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETCompleteMigrationVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCompleteMigrationVersionEnum: %v", v)
	}
}

type GETCompleteMigrationRequest struct {
	Action GETCompleteMigrationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Forces the migration to stop without ensuring that data is in sync. It is recommended to use this option only to abort the migration and not recommended when application wants to continue migration to ElastiCache.
	Force *bool `queryParam:"style=form,explode=true,name=Force"`
	// The ID of the replication group to which data is being migrated.
	ReplicationGroupID string                          `queryParam:"style=form,explode=true,name=ReplicationGroupId"`
	Version            GETCompleteMigrationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm      *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCompleteMigrationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
