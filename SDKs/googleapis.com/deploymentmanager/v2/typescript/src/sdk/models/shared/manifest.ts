/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigFile } from "./configfile";
import { ImportFile } from "./importfile";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class Manifest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => ConfigFile)
  config?: ConfigFile;

  /**
   * Output only. The fully-expanded configuration file, including any templates and references.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expandedConfig" })
  expandedConfig?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Output only. The imported files for this manifest.
   */
  @SpeakeasyMetadata({ elemType: ImportFile })
  @Expose({ name: "imports" })
  @Type(() => ImportFile)
  imports?: ImportFile[];

  /**
   * Output only. Creation timestamp in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "insertTime" })
  insertTime?: string;

  /**
   * Output only. The YAML layout for this manifest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layout" })
  layout?: string;

  /**
   * Output only. The computed size of the fully expanded manifest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manifestSizeBytes" })
  manifestSizeBytes?: string;

  /**
   * Output only. The size limit for expanded manifests in the project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manifestSizeLimitBytes" })
  manifestSizeLimitBytes?: string;

  /**
   * Output only. The name of the manifest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. Self link for the manifest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;
}
