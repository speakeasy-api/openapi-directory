<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Stats - Live stats for a service or globally
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Stats
{
    /**
     * Number of calls on the specified service or globally
     * 
     * @var int $calls
     */
	#[\JMS\Serializer\Annotation\SerializedName('calls')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $calls;
    
    /**
     * The number of concurrent request currently
     * 
     * @var int $concurrentHandledRequests
     */
	#[\JMS\Serializer\Annotation\SerializedName('concurrentHandledRequests')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $concurrentHandledRequests;
    
    /**
     * The amount of data sent to the specified service or Otoroshi globally
     * 
     * @var int $dataIn
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataIn')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $dataIn;
    
    /**
     * The rate of data sent to the specified service or Otoroshi globally
     * 
     * @var float $dataInRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataInRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $dataInRate;
    
    /**
     * The amount of data sent from the specified service or Otoroshi globally
     * 
     * @var int $dataOut
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataOut')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $dataOut;
    
    /**
     * The rate of data sent from the specified service or Otoroshi globally
     * 
     * @var float $dataOutRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataOutRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $dataOutRate;
    
    /**
     * The average duration for a call
     * 
     * @var float $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $duration;
    
    /**
     * The average overhead time induced by Otoroshi for each call
     * 
     * @var float $overhead
     */
	#[\JMS\Serializer\Annotation\SerializedName('overhead')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $overhead;
    
    /**
     * The rate of data sent from and to the specified service or Otoroshi globally
     * 
     * @var float $rate
     */
	#[\JMS\Serializer\Annotation\SerializedName('rate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $rate;
    
	public function __construct()
	{
		$this->calls = 0;
		$this->concurrentHandledRequests = 0;
		$this->dataIn = 0;
		$this->dataInRate = 0;
		$this->dataOut = 0;
		$this->dataOutRate = 0;
		$this->duration = 0;
		$this->overhead = 0;
		$this->rate = 0;
	}
}
