/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Parameter } from "./parameter";
import { Expose, Type } from "class-transformer";

/**
 * Represents a Google Tag Manager Variable.
 */
export class Variable extends SpeakeasyBase {
  /**
   * GTM Account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * GTM Container ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containerId" })
  containerId?: string;

  /**
   * For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disablingTriggerId" })
  disablingTriggerId?: string[];

  /**
   * For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enablingTriggerId" })
  enablingTriggerId?: string[];

  /**
   * The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint?: string;

  /**
   * Variable display name. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * The variable's parameters. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update
   */
  @SpeakeasyMetadata({ elemType: Parameter })
  @Expose({ name: "parameter" })
  @Type(() => Parameter)
  parameter?: Parameter[];

  /**
   * Parent folder id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentFolderId" })
  parentFolderId?: string;

  /**
   * The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduleEndMs" })
  scheduleEndMs?: string;

  /**
   * The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduleStartMs" })
  scheduleStartMs?: string;

  /**
   * GTM Variable Type. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The Variable ID uniquely identifies the GTM Variable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variableId" })
  variableId?: string;
}
