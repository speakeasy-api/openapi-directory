/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ElectionDate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active_election" })
  activeElection?: boolean;

  /**
   * Date the record was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "create_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createDate?: Date;

  /**
   * Date of election
   */
  @SpeakeasyMetadata()
  @Expose({ name: "election_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  electionDate?: Date;

  /**
   * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "election_district" })
  electionDistrict?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "election_notes" })
  electionNotes?: string;

  /**
   * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "election_party" })
  electionParty?: string;

  /**
   * US state or territory where a candidate runs for office
   */
  @SpeakeasyMetadata()
  @Expose({ name: "election_state" })
  electionState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "election_type_full" })
  electionTypeFull?: string;

  /**
   * Election type
   *
   * @remarks
   * Convention, Primary,
   * General, Special,
   * Runoff etc.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "election_type_id" })
  electionTypeId?: string;

  /**
   * Year of election
   */
  @SpeakeasyMetadata()
  @Expose({ name: "election_year" })
  electionYear?: number;

  /**
   * Federal office candidate runs for: H, S or P
   */
  @SpeakeasyMetadata()
  @Expose({ name: "office_sought" })
  officeSought?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_general_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  primaryGeneralDate?: Date;

  /**
   * Date the record was updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "update_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateDate?: Date;
}
