/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NullableRepositoryTemplateRepository {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_auto_merge")
    public Boolean allowAutoMerge;

    public NullableRepositoryTemplateRepository withAllowAutoMerge(Boolean allowAutoMerge) {
        this.allowAutoMerge = allowAutoMerge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_merge_commit")
    public Boolean allowMergeCommit;

    public NullableRepositoryTemplateRepository withAllowMergeCommit(Boolean allowMergeCommit) {
        this.allowMergeCommit = allowMergeCommit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_rebase_merge")
    public Boolean allowRebaseMerge;

    public NullableRepositoryTemplateRepository withAllowRebaseMerge(Boolean allowRebaseMerge) {
        this.allowRebaseMerge = allowRebaseMerge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_squash_merge")
    public Boolean allowSquashMerge;

    public NullableRepositoryTemplateRepository withAllowSquashMerge(Boolean allowSquashMerge) {
        this.allowSquashMerge = allowSquashMerge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_update_branch")
    public Boolean allowUpdateBranch;

    public NullableRepositoryTemplateRepository withAllowUpdateBranch(Boolean allowUpdateBranch) {
        this.allowUpdateBranch = allowUpdateBranch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archive_url")
    public String archiveUrl;

    public NullableRepositoryTemplateRepository withArchiveUrl(String archiveUrl) {
        this.archiveUrl = archiveUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archived")
    public Boolean archived;

    public NullableRepositoryTemplateRepository withArchived(Boolean archived) {
        this.archived = archived;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignees_url")
    public String assigneesUrl;

    public NullableRepositoryTemplateRepository withAssigneesUrl(String assigneesUrl) {
        this.assigneesUrl = assigneesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blobs_url")
    public String blobsUrl;

    public NullableRepositoryTemplateRepository withBlobsUrl(String blobsUrl) {
        this.blobsUrl = blobsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branches_url")
    public String branchesUrl;

    public NullableRepositoryTemplateRepository withBranchesUrl(String branchesUrl) {
        this.branchesUrl = branchesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clone_url")
    public String cloneUrl;

    public NullableRepositoryTemplateRepository withCloneUrl(String cloneUrl) {
        this.cloneUrl = cloneUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collaborators_url")
    public String collaboratorsUrl;

    public NullableRepositoryTemplateRepository withCollaboratorsUrl(String collaboratorsUrl) {
        this.collaboratorsUrl = collaboratorsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments_url")
    public String commentsUrl;

    public NullableRepositoryTemplateRepository withCommentsUrl(String commentsUrl) {
        this.commentsUrl = commentsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commits_url")
    public String commitsUrl;

    public NullableRepositoryTemplateRepository withCommitsUrl(String commitsUrl) {
        this.commitsUrl = commitsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compare_url")
    public String compareUrl;

    public NullableRepositoryTemplateRepository withCompareUrl(String compareUrl) {
        this.compareUrl = compareUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contents_url")
    public String contentsUrl;

    public NullableRepositoryTemplateRepository withContentsUrl(String contentsUrl) {
        this.contentsUrl = contentsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contributors_url")
    public String contributorsUrl;

    public NullableRepositoryTemplateRepository withContributorsUrl(String contributorsUrl) {
        this.contributorsUrl = contributorsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;

    public NullableRepositoryTemplateRepository withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("default_branch")
    public String defaultBranch;

    public NullableRepositoryTemplateRepository withDefaultBranch(String defaultBranch) {
        this.defaultBranch = defaultBranch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delete_branch_on_merge")
    public Boolean deleteBranchOnMerge;

    public NullableRepositoryTemplateRepository withDeleteBranchOnMerge(Boolean deleteBranchOnMerge) {
        this.deleteBranchOnMerge = deleteBranchOnMerge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deployments_url")
    public String deploymentsUrl;

    public NullableRepositoryTemplateRepository withDeploymentsUrl(String deploymentsUrl) {
        this.deploymentsUrl = deploymentsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public NullableRepositoryTemplateRepository withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabled")
    public Boolean disabled;

    public NullableRepositoryTemplateRepository withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("downloads_url")
    public String downloadsUrl;

    public NullableRepositoryTemplateRepository withDownloadsUrl(String downloadsUrl) {
        this.downloadsUrl = downloadsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("events_url")
    public String eventsUrl;

    public NullableRepositoryTemplateRepository withEventsUrl(String eventsUrl) {
        this.eventsUrl = eventsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fork")
    public Boolean fork;

    public NullableRepositoryTemplateRepository withFork(Boolean fork) {
        this.fork = fork;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forks_count")
    public Long forksCount;

    public NullableRepositoryTemplateRepository withForksCount(Long forksCount) {
        this.forksCount = forksCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forks_url")
    public String forksUrl;

    public NullableRepositoryTemplateRepository withForksUrl(String forksUrl) {
        this.forksUrl = forksUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("full_name")
    public String fullName;

    public NullableRepositoryTemplateRepository withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("git_commits_url")
    public String gitCommitsUrl;

    public NullableRepositoryTemplateRepository withGitCommitsUrl(String gitCommitsUrl) {
        this.gitCommitsUrl = gitCommitsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("git_refs_url")
    public String gitRefsUrl;

    public NullableRepositoryTemplateRepository withGitRefsUrl(String gitRefsUrl) {
        this.gitRefsUrl = gitRefsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("git_tags_url")
    public String gitTagsUrl;

    public NullableRepositoryTemplateRepository withGitTagsUrl(String gitTagsUrl) {
        this.gitTagsUrl = gitTagsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("git_url")
    public String gitUrl;

    public NullableRepositoryTemplateRepository withGitUrl(String gitUrl) {
        this.gitUrl = gitUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_downloads")
    public Boolean hasDownloads;

    public NullableRepositoryTemplateRepository withHasDownloads(Boolean hasDownloads) {
        this.hasDownloads = hasDownloads;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_issues")
    public Boolean hasIssues;

    public NullableRepositoryTemplateRepository withHasIssues(Boolean hasIssues) {
        this.hasIssues = hasIssues;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_pages")
    public Boolean hasPages;

    public NullableRepositoryTemplateRepository withHasPages(Boolean hasPages) {
        this.hasPages = hasPages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_projects")
    public Boolean hasProjects;

    public NullableRepositoryTemplateRepository withHasProjects(Boolean hasProjects) {
        this.hasProjects = hasProjects;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_wiki")
    public Boolean hasWiki;

    public NullableRepositoryTemplateRepository withHasWiki(Boolean hasWiki) {
        this.hasWiki = hasWiki;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("homepage")
    public String homepage;

    public NullableRepositoryTemplateRepository withHomepage(String homepage) {
        this.homepage = homepage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hooks_url")
    public String hooksUrl;

    public NullableRepositoryTemplateRepository withHooksUrl(String hooksUrl) {
        this.hooksUrl = hooksUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_url")
    public String htmlUrl;

    public NullableRepositoryTemplateRepository withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public NullableRepositoryTemplateRepository withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_template")
    public Boolean isTemplate;

    public NullableRepositoryTemplateRepository withIsTemplate(Boolean isTemplate) {
        this.isTemplate = isTemplate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issue_comment_url")
    public String issueCommentUrl;

    public NullableRepositoryTemplateRepository withIssueCommentUrl(String issueCommentUrl) {
        this.issueCommentUrl = issueCommentUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issue_events_url")
    public String issueEventsUrl;

    public NullableRepositoryTemplateRepository withIssueEventsUrl(String issueEventsUrl) {
        this.issueEventsUrl = issueEventsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issues_url")
    public String issuesUrl;

    public NullableRepositoryTemplateRepository withIssuesUrl(String issuesUrl) {
        this.issuesUrl = issuesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keys_url")
    public String keysUrl;

    public NullableRepositoryTemplateRepository withKeysUrl(String keysUrl) {
        this.keysUrl = keysUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels_url")
    public String labelsUrl;

    public NullableRepositoryTemplateRepository withLabelsUrl(String labelsUrl) {
        this.labelsUrl = labelsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;

    public NullableRepositoryTemplateRepository withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languages_url")
    public String languagesUrl;

    public NullableRepositoryTemplateRepository withLanguagesUrl(String languagesUrl) {
        this.languagesUrl = languagesUrl;
        return this;
    }
    
    /**
     * The default value for a merge commit message.
     * 
     * - `PR_TITLE` - default to the pull request's title.
     * - `PR_BODY` - default to the pull request's body.
     * - `BLANK` - default to a blank commit message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merge_commit_message")
    public NullableRepositoryTemplateRepositoryMergeCommitMessageEnum mergeCommitMessage;

    public NullableRepositoryTemplateRepository withMergeCommitMessage(NullableRepositoryTemplateRepositoryMergeCommitMessageEnum mergeCommitMessage) {
        this.mergeCommitMessage = mergeCommitMessage;
        return this;
    }
    
    /**
     * The default value for a merge commit title.
     * 
     * - `PR_TITLE` - default to the pull request's title.
     * - `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merge_commit_title")
    public NullableRepositoryTemplateRepositoryMergeCommitTitleEnum mergeCommitTitle;

    public NullableRepositoryTemplateRepository withMergeCommitTitle(NullableRepositoryTemplateRepositoryMergeCommitTitleEnum mergeCommitTitle) {
        this.mergeCommitTitle = mergeCommitTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merges_url")
    public String mergesUrl;

    public NullableRepositoryTemplateRepository withMergesUrl(String mergesUrl) {
        this.mergesUrl = mergesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("milestones_url")
    public String milestonesUrl;

    public NullableRepositoryTemplateRepository withMilestonesUrl(String milestonesUrl) {
        this.milestonesUrl = milestonesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mirror_url")
    public String mirrorUrl;

    public NullableRepositoryTemplateRepository withMirrorUrl(String mirrorUrl) {
        this.mirrorUrl = mirrorUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NullableRepositoryTemplateRepository withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network_count")
    public Long networkCount;

    public NullableRepositoryTemplateRepository withNetworkCount(Long networkCount) {
        this.networkCount = networkCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("node_id")
    public String nodeId;

    public NullableRepositoryTemplateRepository withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifications_url")
    public String notificationsUrl;

    public NullableRepositoryTemplateRepository withNotificationsUrl(String notificationsUrl) {
        this.notificationsUrl = notificationsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("open_issues_count")
    public Long openIssuesCount;

    public NullableRepositoryTemplateRepository withOpenIssuesCount(Long openIssuesCount) {
        this.openIssuesCount = openIssuesCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public NullableRepositoryTemplateRepositoryOwner owner;

    public NullableRepositoryTemplateRepository withOwner(NullableRepositoryTemplateRepositoryOwner owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public NullableRepositoryTemplateRepositoryPermissions permissions;

    public NullableRepositoryTemplateRepository withPermissions(NullableRepositoryTemplateRepositoryPermissions permissions) {
        this.permissions = permissions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("private")
    public Boolean private_;

    public NullableRepositoryTemplateRepository withPrivate(Boolean private_) {
        this.private_ = private_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pulls_url")
    public String pullsUrl;

    public NullableRepositoryTemplateRepository withPullsUrl(String pullsUrl) {
        this.pullsUrl = pullsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pushed_at")
    public String pushedAt;

    public NullableRepositoryTemplateRepository withPushedAt(String pushedAt) {
        this.pushedAt = pushedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("releases_url")
    public String releasesUrl;

    public NullableRepositoryTemplateRepository withReleasesUrl(String releasesUrl) {
        this.releasesUrl = releasesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;

    public NullableRepositoryTemplateRepository withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * The default value for a squash merge commit message:
     * 
     * - `PR_BODY` - default to the pull request's body.
     * - `COMMIT_MESSAGES` - default to the branch's commit messages.
     * - `BLANK` - default to a blank commit message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("squash_merge_commit_message")
    public NullableRepositoryTemplateRepositorySquashMergeCommitMessageEnum squashMergeCommitMessage;

    public NullableRepositoryTemplateRepository withSquashMergeCommitMessage(NullableRepositoryTemplateRepositorySquashMergeCommitMessageEnum squashMergeCommitMessage) {
        this.squashMergeCommitMessage = squashMergeCommitMessage;
        return this;
    }
    
    /**
     * The default value for a squash merge commit title:
     * 
     * - `PR_TITLE` - default to the pull request's title.
     * - `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("squash_merge_commit_title")
    public NullableRepositoryTemplateRepositorySquashMergeCommitTitleEnum squashMergeCommitTitle;

    public NullableRepositoryTemplateRepository withSquashMergeCommitTitle(NullableRepositoryTemplateRepositorySquashMergeCommitTitleEnum squashMergeCommitTitle) {
        this.squashMergeCommitTitle = squashMergeCommitTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssh_url")
    public String sshUrl;

    public NullableRepositoryTemplateRepository withSshUrl(String sshUrl) {
        this.sshUrl = sshUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stargazers_count")
    public Long stargazersCount;

    public NullableRepositoryTemplateRepository withStargazersCount(Long stargazersCount) {
        this.stargazersCount = stargazersCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stargazers_url")
    public String stargazersUrl;

    public NullableRepositoryTemplateRepository withStargazersUrl(String stargazersUrl) {
        this.stargazersUrl = stargazersUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statuses_url")
    public String statusesUrl;

    public NullableRepositoryTemplateRepository withStatusesUrl(String statusesUrl) {
        this.statusesUrl = statusesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscribers_count")
    public Long subscribersCount;

    public NullableRepositoryTemplateRepository withSubscribersCount(Long subscribersCount) {
        this.subscribersCount = subscribersCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscribers_url")
    public String subscribersUrl;

    public NullableRepositoryTemplateRepository withSubscribersUrl(String subscribersUrl) {
        this.subscribersUrl = subscribersUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription_url")
    public String subscriptionUrl;

    public NullableRepositoryTemplateRepository withSubscriptionUrl(String subscriptionUrl) {
        this.subscriptionUrl = subscriptionUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("svn_url")
    public String svnUrl;

    public NullableRepositoryTemplateRepository withSvnUrl(String svnUrl) {
        this.svnUrl = svnUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags_url")
    public String tagsUrl;

    public NullableRepositoryTemplateRepository withTagsUrl(String tagsUrl) {
        this.tagsUrl = tagsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("teams_url")
    public String teamsUrl;

    public NullableRepositoryTemplateRepository withTeamsUrl(String teamsUrl) {
        this.teamsUrl = teamsUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("temp_clone_token")
    public String tempCloneToken;

    public NullableRepositoryTemplateRepository withTempCloneToken(String tempCloneToken) {
        this.tempCloneToken = tempCloneToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topics")
    public String[] topics;

    public NullableRepositoryTemplateRepository withTopics(String[] topics) {
        this.topics = topics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trees_url")
    public String treesUrl;

    public NullableRepositoryTemplateRepository withTreesUrl(String treesUrl) {
        this.treesUrl = treesUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;

    public NullableRepositoryTemplateRepository withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public NullableRepositoryTemplateRepository withUrl(String url) {
        this.url = url;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("use_squash_pr_title_as_default")
    public Boolean useSquashPrTitleAsDefault;

    public NullableRepositoryTemplateRepository withUseSquashPrTitleAsDefault(Boolean useSquashPrTitleAsDefault) {
        this.useSquashPrTitleAsDefault = useSquashPrTitleAsDefault;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visibility")
    public String visibility;

    public NullableRepositoryTemplateRepository withVisibility(String visibility) {
        this.visibility = visibility;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("watchers_count")
    public Long watchersCount;

    public NullableRepositoryTemplateRepository withWatchersCount(Long watchersCount) {
        this.watchersCount = watchersCount;
        return this;
    }
    
    public NullableRepositoryTemplateRepository(){}
}
