// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposUpdateStatusCheckProtectionRequestBodyChecks struct {
	// The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App. Pass -1 to explicitly allow any app to set the status.
	AppID *int64 `json:"app_id,omitempty"`
	// The name of the required check
	Context string `json:"context"`
}

type ReposUpdateStatusCheckProtectionRequestBody struct {
	// The list of status checks to require in order to merge into this branch.
	Checks []ReposUpdateStatusCheckProtectionRequestBodyChecks `json:"checks,omitempty"`
	// **Deprecated**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.
	//
	Contexts []string `json:"contexts,omitempty"`
	// Require branches to be up to date before merging.
	Strict *bool `json:"strict,omitempty"`
}

type ReposUpdateStatusCheckProtectionRequest struct {
	RequestBody *ReposUpdateStatusCheckProtectionRequestBody `request:"mediaType=application/json"`
	// The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL API](https://docs.github.com/enterprise-server@3.8/graphql).
	Branch string `pathParam:"style=simple,explode=false,name=branch"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposUpdateStatusCheckProtectionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	StatusCheckPolicy *shared.StatusCheckPolicy
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
