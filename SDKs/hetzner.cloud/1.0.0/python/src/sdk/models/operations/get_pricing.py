"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingFloatingIPPriceMonthly:
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingFloatingIP:
    r"""The cost of one Floating IP per month"""
    
    price_monthly: GetPricing200ApplicationJSONPricingFloatingIPPriceMonthly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_monthly') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingFloatingIpsPricesPriceMonthly:
    r"""Monthly costs for a Floating IP type in this Location"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingFloatingIpsPrices:
    
    location: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})
    r"""Name of the Location the price is for"""  
    price_monthly: GetPricing200ApplicationJSONPricingFloatingIpsPricesPriceMonthly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_monthly') }})
    r"""Monthly costs for a Floating IP type in this Location"""  
    
class GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum(str, Enum):
    r"""The type of the Floating IP"""
    IPV4 = 'ipv4'
    IPV6 = 'ipv6'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingFloatingIps:
    
    prices: list[GetPricing200ApplicationJSONPricingFloatingIpsPrices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prices') }})
    r"""Floating IP type costs per Location"""  
    type: GetPricing200ApplicationJSONPricingFloatingIpsTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of the Floating IP"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingImagePricePerGbMonth:
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingImage:
    r"""The cost of Image per GB/month"""
    
    price_per_gb_month: GetPricing200ApplicationJSONPricingImagePricePerGbMonth = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_per_gb_month') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceHourly:
    r"""Hourly costs for a Load Balancer type in this network zone"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceMonthly:
    r"""Monthly costs for a Load Balancer type in this network zone"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingLoadBalancerTypesPrices:
    
    location: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})
    r"""Name of the Location the price is for"""  
    price_hourly: GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceHourly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_hourly') }})
    r"""Hourly costs for a Load Balancer type in this network zone"""  
    price_monthly: GetPricing200ApplicationJSONPricingLoadBalancerTypesPricesPriceMonthly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_monthly') }})
    r"""Monthly costs for a Load Balancer type in this network zone"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingLoadBalancerTypes:
    
    id: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""ID of the Load Balancer type the price is for"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the Load Balancer type the price is for"""  
    prices: list[GetPricing200ApplicationJSONPricingLoadBalancerTypesPrices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prices') }})
    r"""Load Balancer type costs per Location"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingPrimaryIpsPricesPriceHourly:
    r"""Hourly costs for a Primary IP type in this Location"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingPrimaryIpsPricesPriceMonthly:
    r"""Monthly costs for a Primary IP type in this Location"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingPrimaryIpsPrices:
    
    location: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})
    r"""Name of the Location the price is for"""  
    price_hourly: GetPricing200ApplicationJSONPricingPrimaryIpsPricesPriceHourly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_hourly') }})
    r"""Hourly costs for a Primary IP type in this Location"""  
    price_monthly: GetPricing200ApplicationJSONPricingPrimaryIpsPricesPriceMonthly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_monthly') }})
    r"""Monthly costs for a Primary IP type in this Location"""  
    
class GetPricing200ApplicationJSONPricingPrimaryIpsTypeEnum(str, Enum):
    r"""The type of the Primary IP"""
    IPV4 = 'ipv4'
    IPV6 = 'ipv6'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingPrimaryIps:
    
    prices: list[GetPricing200ApplicationJSONPricingPrimaryIpsPrices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prices') }})
    r"""Primary IP type costs per Location"""  
    type: GetPricing200ApplicationJSONPricingPrimaryIpsTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of the Primary IP"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingServerBackup:
    r"""Will increase base Server costs by specific percentage"""
    
    percentage: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentage') }})
    r"""Percentage by how much the base price will increase"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingServerTypesPricesPriceHourly:
    r"""Hourly costs for a Server type in this Location"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingServerTypesPricesPriceMonthly:
    r"""Monthly costs for a Server type in this Location"""
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingServerTypesPrices:
    
    location: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})
    r"""Name of the Location the price is for"""  
    price_hourly: GetPricing200ApplicationJSONPricingServerTypesPricesPriceHourly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_hourly') }})
    r"""Hourly costs for a Server type in this Location"""  
    price_monthly: GetPricing200ApplicationJSONPricingServerTypesPricesPriceMonthly = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_monthly') }})
    r"""Monthly costs for a Server type in this Location"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingServerTypes:
    
    id: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""ID of the Server type the price is for"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the Server type the price is for"""  
    prices: list[GetPricing200ApplicationJSONPricingServerTypesPrices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prices') }})
    r"""Server type costs per Location"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingTrafficPricePerTb:
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingTraffic:
    r"""The cost of additional traffic per TB"""
    
    price_per_tb: GetPricing200ApplicationJSONPricingTrafficPricePerTb = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_per_tb') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingVolumePricePerGbMonth:
    
    gross: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross') }})
    r"""Price with VAT added"""  
    net: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net') }})
    r"""Price without VAT"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricingVolume:
    r"""The cost of Volume per GB/month"""
    
    price_per_gb_month: GetPricing200ApplicationJSONPricingVolumePricePerGbMonth = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_per_gb_month') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSONPricing:
    
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})
    r"""Currency the returned prices are expressed in, coded according to ISO 4217"""  
    floating_ip: GetPricing200ApplicationJSONPricingFloatingIP = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('floating_ip') }})
    r"""The cost of one Floating IP per month"""  
    floating_ips: list[GetPricing200ApplicationJSONPricingFloatingIps] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('floating_ips') }})
    r"""Costs of Floating IPs types per Location and type"""  
    image: GetPricing200ApplicationJSONPricingImage = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image') }})
    r"""The cost of Image per GB/month"""  
    load_balancer_types: list[GetPricing200ApplicationJSONPricingLoadBalancerTypes] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('load_balancer_types') }})
    r"""Costs of Load Balancer types per Location and type"""  
    primary_ips: list[GetPricing200ApplicationJSONPricingPrimaryIps] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primary_ips') }})
    r"""Costs of Primary IPs types per Location"""  
    server_backup: GetPricing200ApplicationJSONPricingServerBackup = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('server_backup') }})
    r"""Will increase base Server costs by specific percentage"""  
    server_types: list[GetPricing200ApplicationJSONPricingServerTypes] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('server_types') }})
    r"""Costs of Server types per Location and type"""  
    traffic: GetPricing200ApplicationJSONPricingTraffic = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('traffic') }})
    r"""The cost of additional traffic per TB"""  
    vat_rate: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vat_rate') }})
    r"""The VAT rate used for calculating prices with VAT"""  
    volume: GetPricing200ApplicationJSONPricingVolume = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volume') }})
    r"""The cost of Volume per GB/month"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPricing200ApplicationJSON:
    r"""The `pricing` key in the reply contains an pricing object with this structure"""
    
    pricing: GetPricing200ApplicationJSONPricing = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pricing') }})  
    

@dataclasses.dataclass
class GetPricingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_pricing_200_application_json_object: Optional[GetPricing200ApplicationJSON] = dataclasses.field(default=None)
    r"""The `pricing` key in the reply contains an pricing object with this structure"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    