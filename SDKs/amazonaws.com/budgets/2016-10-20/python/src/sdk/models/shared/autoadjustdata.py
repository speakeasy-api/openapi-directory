"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import autoadjusttype_enum as shared_autoadjusttype_enum
from ..shared import historicaloptions as shared_historicaloptions
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoAdjustData:
    r"""The parameters that determine the budget amount for an auto-adjusting budget."""
    
    auto_adjust_type: shared_autoadjusttype_enum.AutoAdjustTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoAdjustType') }})  
    historical_options: Optional[shared_historicaloptions.HistoricalOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HistoricalOptions'), 'exclude': lambda f: f is None }})  
    last_auto_adjust_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastAutoAdjustTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    