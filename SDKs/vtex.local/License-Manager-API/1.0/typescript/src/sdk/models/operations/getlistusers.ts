/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetListUsersRequest extends SpeakeasyBase {
  /**
   * The media type of the body of the request. Default value for license manager protocol is application/json
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Number of items in the returned page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=numItems",
  })
  numItems?: number;

  /**
   * Which page from the whole list will be returned
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageNumber",
  })
  pageNumber?: number;

  /**
   * Chooses the field that the list will be sorted by
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * Defines the sorting order. `ASC` is used for ascendant order. `DSC` is used for descendant order
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sortType",
  })
  sortType?: string;
}

export class GetListUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listUsersResponse?: shared.ListUsersResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
