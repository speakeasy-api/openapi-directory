// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// HTTPRouteHeaderMatch - Specifies how to select a route rule based on HTTP request headers.
type HTTPRouteHeaderMatch struct {
	// The value of the header should match exactly the content of exact_match.
	ExactMatch *string `json:"exactMatch,omitempty"`
	// The name of the HTTP header to match against.
	Header *string `json:"header,omitempty"`
	// If specified, the match result will be inverted before checking. Default value is set to false.
	InvertMatch *bool `json:"invertMatch,omitempty"`
	// The value of the header must start with the contents of prefix_match.
	PrefixMatch *string `json:"prefixMatch,omitempty"`
	// A header with header_name must exist. The match takes place whether or not the header has a value.
	PresentMatch *bool `json:"presentMatch,omitempty"`
	// Represents an integer value range.
	RangeMatch *HTTPRouteHeaderMatchIntegerRange `json:"rangeMatch,omitempty"`
	// The value of the header must match the regular expression specified in regex_match. For regular expression grammar, please see: https://github.com/google/re2/wiki/Syntax
	RegexMatch *string `json:"regexMatch,omitempty"`
	// The value of the header must end with the contents of suffix_match.
	SuffixMatch *string `json:"suffixMatch,omitempty"`
}
