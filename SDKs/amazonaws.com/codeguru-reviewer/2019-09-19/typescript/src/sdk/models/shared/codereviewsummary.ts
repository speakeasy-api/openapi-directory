/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { JobStateEnum } from "./jobstateenum";
import { MetricsSummary } from "./metricssummary";
import { ProviderTypeEnum } from "./providertypeenum";
import { SourceCodeType } from "./sourcecodetype";
import { TypeEnum } from "./typeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about the summary of the code review.
 */
export class CodeReviewSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CodeReviewArn" })
  codeReviewArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTimeStamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTimeStamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MetricsSummary" })
  @Type(() => MetricsSummary)
  metricsSummary?: MetricsSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderType" })
  providerType?: ProviderTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PullRequestId" })
  pullRequestId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RepositoryName" })
  repositoryName?: string;

  /**
   * Specifies the source code that is analyzed in a code review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SourceCodeType" })
  @Type(() => SourceCodeType)
  sourceCodeType?: SourceCodeType;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: JobStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: TypeEnum;
}
