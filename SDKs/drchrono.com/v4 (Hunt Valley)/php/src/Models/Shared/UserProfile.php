<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UserProfile - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UserProfile
{
    /**
     * For staff members, this is their primary physician's ID. For doctors, it is their own ID.
     * 
     * @var ?string $doctor
     */
	#[\JMS\Serializer\Annotation\SerializedName('doctor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $doctor = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Mutually exclusive with `is_staff`
     * 
     * @var ?string $isDoctor
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_doctor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $isDoctor = null;
    
    /**
     * Mutually exclusive with `is_doctor`
     * 
     * @var ?string $isStaff
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_staff')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $isStaff = null;
    
    /**
     * Permissions the user has.
     * 
     * @var ?string $permissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissions')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $permissions = null;
    
    /**
     * The ID of the practice group this user belongs to. This can be used to identify users in the same practice.
     * 
     * @var ?string $practiceGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('practice_group')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $practiceGroup = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->doctor = null;
		$this->id = null;
		$this->isDoctor = null;
		$this->isStaff = null;
		$this->permissions = null;
		$this->practiceGroup = null;
		$this->username = null;
	}
}
