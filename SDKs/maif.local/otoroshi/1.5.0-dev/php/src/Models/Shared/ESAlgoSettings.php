<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ESAlgoSettings - Settings for an EC + SHA signing algorithm
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ESAlgoSettings
{
    /**
     * The private key for the RSA function
     * 
     * @var ?string $privateKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $privateKey = null;
    
    /**
     * The public key for the RSA function
     * 
     * @var string $publicKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('publicKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $publicKey;
    
    /**
     * Size for SHA function. can be 256, 384 or 512
     * 
     * @var int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $size;
    
    /**
     * String with value ESAlgoSettings
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->privateKey = null;
		$this->publicKey = "";
		$this->size = 0;
		$this->type = "";
	}
}
