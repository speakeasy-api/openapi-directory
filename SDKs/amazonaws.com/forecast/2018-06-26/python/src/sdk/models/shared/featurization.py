"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import featurizationmethod as shared_featurizationmethod
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Featurization:
    r"""<note> <p>This object belongs to the <a>CreatePredictor</a> operation. If you created your predictor with <a>CreateAutoPredictor</a>, see <a>AttributeConfig</a>.</p> </note> <p>Provides featurization (transformation) information for a dataset field. This object is part of the <a>FeaturizationConfig</a> object.</p> <p>For example:</p> <p> <code>{</code> </p> <p> <code>\\"AttributeName\\": \\"demand\\",</code> </p> <p> <code>FeaturizationPipeline [ {</code> </p> <p> <code>\\"FeaturizationMethodName\\": \\"filling\\",</code> </p> <p> <code>\\"FeaturizationMethodParameters\\": {\\"aggregation\\": \\"avg\\", \\"backfill\\": \\"nan\\"}</code> </p> <p> <code>} ]</code> </p> <p> <code>}</code> </p>"""
    
    attribute_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttributeName') }})  
    featurization_pipeline: Optional[list[shared_featurizationmethod.FeaturizationMethod]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeaturizationPipeline'), 'exclude': lambda f: f is None }})  
    