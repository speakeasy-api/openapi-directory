"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import review as shared_review
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListReviewsResponse:
    r"""Response message for Reviews.ListReviews."""
    
    average_rating: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('averageRating'), 'exclude': lambda f: f is None }})
    r"""The average star rating of all reviews for this location on a scale of 1 to 5, where 5 is the highest rating."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""If the number of reviews exceeded the requested page size, this field is populated with a token to fetch the next page of reviews on a subsequent call to ListReviews. If there are no more reviews, this field is not present in the response."""  
    reviews: Optional[list[shared_review.Review]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reviews'), 'exclude': lambda f: f is None }})
    r"""The reviews."""  
    total_review_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalReviewCount'), 'exclude': lambda f: f is None }})
    r"""The total number of reviews for this location."""  
    