// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// EntryAPIGetListEntryTypesEnum - Included entry types (optional).
type EntryAPIGetListEntryTypesEnum string

const (
	EntryAPIGetListEntryTypesEnumNothing            EntryAPIGetListEntryTypesEnum = "Nothing"
	EntryAPIGetListEntryTypesEnumAlbum              EntryAPIGetListEntryTypesEnum = "Album"
	EntryAPIGetListEntryTypesEnumArtist             EntryAPIGetListEntryTypesEnum = "Artist"
	EntryAPIGetListEntryTypesEnumDiscussionTopic    EntryAPIGetListEntryTypesEnum = "DiscussionTopic"
	EntryAPIGetListEntryTypesEnumPv                 EntryAPIGetListEntryTypesEnum = "PV"
	EntryAPIGetListEntryTypesEnumReleaseEvent       EntryAPIGetListEntryTypesEnum = "ReleaseEvent"
	EntryAPIGetListEntryTypesEnumReleaseEventSeries EntryAPIGetListEntryTypesEnum = "ReleaseEventSeries"
	EntryAPIGetListEntryTypesEnumSong               EntryAPIGetListEntryTypesEnum = "Song"
	EntryAPIGetListEntryTypesEnumSongList           EntryAPIGetListEntryTypesEnum = "SongList"
	EntryAPIGetListEntryTypesEnumTag                EntryAPIGetListEntryTypesEnum = "Tag"
	EntryAPIGetListEntryTypesEnumUser               EntryAPIGetListEntryTypesEnum = "User"
	EntryAPIGetListEntryTypesEnumVenue              EntryAPIGetListEntryTypesEnum = "Venue"
)

func (e *EntryAPIGetListEntryTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Album":
		fallthrough
	case "Artist":
		fallthrough
	case "DiscussionTopic":
		fallthrough
	case "PV":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "ReleaseEventSeries":
		fallthrough
	case "Song":
		fallthrough
	case "SongList":
		fallthrough
	case "Tag":
		fallthrough
	case "User":
		fallthrough
	case "Venue":
		*e = EntryAPIGetListEntryTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryAPIGetListEntryTypesEnum: %s", s)
	}
}

// EntryAPIGetListFieldsEnum - List of optional fields (optional). Possible values are Description, MainPicture, Names, Tags, WebLinks.
type EntryAPIGetListFieldsEnum string

const (
	EntryAPIGetListFieldsEnumNone            EntryAPIGetListFieldsEnum = "None"
	EntryAPIGetListFieldsEnumAdditionalNames EntryAPIGetListFieldsEnum = "AdditionalNames"
	EntryAPIGetListFieldsEnumDescription     EntryAPIGetListFieldsEnum = "Description"
	EntryAPIGetListFieldsEnumMainPicture     EntryAPIGetListFieldsEnum = "MainPicture"
	EntryAPIGetListFieldsEnumNames           EntryAPIGetListFieldsEnum = "Names"
	EntryAPIGetListFieldsEnumPVs             EntryAPIGetListFieldsEnum = "PVs"
	EntryAPIGetListFieldsEnumTags            EntryAPIGetListFieldsEnum = "Tags"
	EntryAPIGetListFieldsEnumWebLinks        EntryAPIGetListFieldsEnum = "WebLinks"
)

func (e *EntryAPIGetListFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Description":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "Tags":
		fallthrough
	case "WebLinks":
		*e = EntryAPIGetListFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryAPIGetListFieldsEnum: %s", s)
	}
}

// EntryAPIGetListLangEnum - Content language preference (optional).
type EntryAPIGetListLangEnum string

const (
	EntryAPIGetListLangEnumDefault  EntryAPIGetListLangEnum = "Default"
	EntryAPIGetListLangEnumJapanese EntryAPIGetListLangEnum = "Japanese"
	EntryAPIGetListLangEnumRomaji   EntryAPIGetListLangEnum = "Romaji"
	EntryAPIGetListLangEnumEnglish  EntryAPIGetListLangEnum = "English"
)

func (e *EntryAPIGetListLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = EntryAPIGetListLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryAPIGetListLangEnum: %s", s)
	}
}

// EntryAPIGetListNameMatchModeEnum - Match mode for entry name (optional, defaults to Exact).
type EntryAPIGetListNameMatchModeEnum string

const (
	EntryAPIGetListNameMatchModeEnumAuto       EntryAPIGetListNameMatchModeEnum = "Auto"
	EntryAPIGetListNameMatchModeEnumPartial    EntryAPIGetListNameMatchModeEnum = "Partial"
	EntryAPIGetListNameMatchModeEnumStartsWith EntryAPIGetListNameMatchModeEnum = "StartsWith"
	EntryAPIGetListNameMatchModeEnumExact      EntryAPIGetListNameMatchModeEnum = "Exact"
	EntryAPIGetListNameMatchModeEnumWords      EntryAPIGetListNameMatchModeEnum = "Words"
)

func (e *EntryAPIGetListNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = EntryAPIGetListNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryAPIGetListNameMatchModeEnum: %s", s)
	}
}

// EntryAPIGetListSortEnum - Sort rule (optional, defaults to Name). Possible values are None, Name, AdditionDate.
type EntryAPIGetListSortEnum string

const (
	EntryAPIGetListSortEnumNone         EntryAPIGetListSortEnum = "None"
	EntryAPIGetListSortEnumName         EntryAPIGetListSortEnum = "Name"
	EntryAPIGetListSortEnumAdditionDate EntryAPIGetListSortEnum = "AdditionDate"
	EntryAPIGetListSortEnumActivityDate EntryAPIGetListSortEnum = "ActivityDate"
)

func (e *EntryAPIGetListSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Name":
		fallthrough
	case "AdditionDate":
		fallthrough
	case "ActivityDate":
		*e = EntryAPIGetListSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryAPIGetListSortEnum: %s", s)
	}
}

// EntryAPIGetListStatusEnum - Filter by entry status (optional).
type EntryAPIGetListStatusEnum string

const (
	EntryAPIGetListStatusEnumDraft    EntryAPIGetListStatusEnum = "Draft"
	EntryAPIGetListStatusEnumFinished EntryAPIGetListStatusEnum = "Finished"
	EntryAPIGetListStatusEnumApproved EntryAPIGetListStatusEnum = "Approved"
	EntryAPIGetListStatusEnumLocked   EntryAPIGetListStatusEnum = "Locked"
)

func (e *EntryAPIGetListStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Finished":
		fallthrough
	case "Approved":
		fallthrough
	case "Locked":
		*e = EntryAPIGetListStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryAPIGetListStatusEnum: %s", s)
	}
}

type EntryAPIGetListQueryParams struct {
	// Include child tags, if the tags being filtered by have any.
	ChildTags *bool `queryParam:"style=form,explode=true,name=childTags"`
	// Included entry types (optional).
	EntryTypes *EntryAPIGetListEntryTypesEnum `queryParam:"style=form,explode=true,name=entryTypes"`
	// List of optional fields (optional). Possible values are Description, MainPicture, Names, Tags, WebLinks.
	Fields *EntryAPIGetListFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Whether to load total number of items (optional, default to false).
	GetTotalCount *bool `queryParam:"style=form,explode=true,name=getTotalCount"`
	// Content language preference (optional).
	Lang *EntryAPIGetListLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// Maximum number of results to be loaded (optional, defaults to 10, maximum of 30).
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Match mode for entry name (optional, defaults to Exact).
	NameMatchMode *EntryAPIGetListNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Entry name query (optional).
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Sort rule (optional, defaults to Name). Possible values are None, Name, AdditionDate.
	Sort *EntryAPIGetListSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// First item to be retrieved (optional, defaults to 0).
	Start *int `queryParam:"style=form,explode=true,name=start"`
	// Filter by entry status (optional).
	Status *EntryAPIGetListStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Filter by tag Id (optional).
	TagID []int `queryParam:"style=form,explode=true,name=tagId"`
	// Filter by tag name (optional).
	TagName []string `queryParam:"style=form,explode=true,name=tagName"`
}

type EntryAPIGetListRequest struct {
	QueryParams EntryAPIGetListQueryParams
}

type EntryAPIGetListResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultEntryForAPIContract *shared.PartialFindResultEntryForAPIContract
	StatusCode                           int
	RawResponse                          *http.Response
}
