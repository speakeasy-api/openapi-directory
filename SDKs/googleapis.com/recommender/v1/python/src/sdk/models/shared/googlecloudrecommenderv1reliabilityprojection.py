"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class GoogleCloudRecommenderV1ReliabilityProjectionRisksEnum(str, Enum):
    RISK_TYPE_UNSPECIFIED = 'RISK_TYPE_UNSPECIFIED'
    SERVICE_DISRUPTION = 'SERVICE_DISRUPTION'
    DATA_LOSS = 'DATA_LOSS'
    ACCESS_DENY = 'ACCESS_DENY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecommenderV1ReliabilityProjection:
    r"""Contains information on the impact of a reliability recommendation."""
    
    details: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('details'), 'exclude': lambda f: f is None }})
    r"""Per-recommender projection."""  
    risks: Optional[list[GoogleCloudRecommenderV1ReliabilityProjectionRisksEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('risks'), 'exclude': lambda f: f is None }})
    r"""Reliability risks mitigated by this recommendation."""  
    