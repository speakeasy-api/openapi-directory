/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DeleteCustomerSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class DeleteCustomerRequest extends SpeakeasyBase {
  /**
   * The ID of the customer to delete.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=customer_id",
  })
  customerId: string;

  /**
   * The current version of the customer profile.
   *
   * @remarks
   *
   * As a best practice, you should include this parameter to enable [optimistic concurrency](https://developer.squareup.com/docs/working-with-apis/optimistic-concurrency) control.  For more information, see [Delete a customer profile](https://developer.squareup.com/docs/customers-api/use-the-api/keep-records#delete-customer-profile).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=version",
  })
  version?: number;
}

export class DeleteCustomerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  deleteCustomerResponse?: shared.DeleteCustomerResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
