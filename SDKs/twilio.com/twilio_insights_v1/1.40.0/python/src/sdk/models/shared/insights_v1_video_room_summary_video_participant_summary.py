"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import video_participant_summary_enum_codec_enum as shared_video_participant_summary_enum_codec_enum
from ..shared import video_participant_summary_enum_edge_location_enum as shared_video_participant_summary_enum_edge_location_enum
from ..shared import video_participant_summary_enum_room_status_enum as shared_video_participant_summary_enum_room_status_enum
from ..shared import video_participant_summary_enum_twilio_realm_enum as shared_video_participant_summary_enum_twilio_realm_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InsightsV1VideoRoomSummaryVideoParticipantSummary:
    r"""OK"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""Account SID associated with the room."""  
    codecs: Optional[list[shared_video_participant_summary_enum_codec_enum.VideoParticipantSummaryEnumCodecEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codecs'), 'exclude': lambda f: f is None }})
    r"""Codecs detected from the participant. Can be `VP8`, `H264`, or `VP9`."""  
    duration_sec: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration_sec'), 'exclude': lambda f: f is None }})
    r"""Amount of time in seconds the participant was in the room."""  
    edge_location: Optional[shared_video_participant_summary_enum_edge_location_enum.VideoParticipantSummaryEnumEdgeLocationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('edge_location'), 'exclude': lambda f: f is None }})  
    end_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_reason'), 'exclude': lambda f: f is None }})
    r"""Reason the participant left the room. See [the list of possible values here](https://www.twilio.com/docs/video/video-log-analyzer/video-log-analyzer-api#end_reason)."""  
    error_code: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_code'), 'exclude': lambda f: f is None }})
    r"""Errors encountered by the participant."""  
    error_code_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_code_url'), 'exclude': lambda f: f is None }})
    r"""Twilio error code dictionary link."""  
    join_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('join_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""When the participant joined the room."""  
    leave_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('leave_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""When the participant left the room."""  
    media_region: Optional[shared_video_participant_summary_enum_twilio_realm_enum.VideoParticipantSummaryEnumTwilioRealmEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('media_region'), 'exclude': lambda f: f is None }})  
    participant_identity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('participant_identity'), 'exclude': lambda f: f is None }})
    r"""The application-defined string that uniquely identifies the participant within a Room."""  
    participant_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('participant_sid'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for the participant."""  
    properties: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties'), 'exclude': lambda f: f is None }})
    r"""Object containing information about the participant's data from the room. See [below](https://www.twilio.com/docs/video/video-log-analyzer/video-log-analyzer-api#properties) for more information."""  
    publisher_info: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisher_info'), 'exclude': lambda f: f is None }})
    r"""Object containing information about the SDK name and version. See [below](https://www.twilio.com/docs/video/video-log-analyzer/video-log-analyzer-api#publisher_info) for more information."""  
    room_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('room_sid'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for the room."""  
    status: Optional[shared_video_participant_summary_enum_room_status_enum.VideoParticipantSummaryEnumRoomStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""URL of the participant resource."""  
    