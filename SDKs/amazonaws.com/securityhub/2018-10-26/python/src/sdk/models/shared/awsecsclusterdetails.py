"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsecsclusterclustersettingsdetails as shared_awsecsclusterclustersettingsdetails
from ..shared import awsecsclusterconfigurationdetails as shared_awsecsclusterconfigurationdetails
from ..shared import awsecsclusterdefaultcapacityproviderstrategydetails as shared_awsecsclusterdefaultcapacityproviderstrategydetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsEcsClusterDetails:
    r"""Provides details about an Amazon ECS cluster."""
    
    active_services_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ActiveServicesCount'), 'exclude': lambda f: f is None }})  
    capacity_providers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CapacityProviders'), 'exclude': lambda f: f is None }})  
    cluster_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClusterArn'), 'exclude': lambda f: f is None }})  
    cluster_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClusterName'), 'exclude': lambda f: f is None }})  
    cluster_settings: Optional[list[shared_awsecsclusterclustersettingsdetails.AwsEcsClusterClusterSettingsDetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClusterSettings'), 'exclude': lambda f: f is None }})  
    configuration: Optional[shared_awsecsclusterconfigurationdetails.AwsEcsClusterConfigurationDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Configuration'), 'exclude': lambda f: f is None }})  
    default_capacity_provider_strategy: Optional[list[shared_awsecsclusterdefaultcapacityproviderstrategydetails.AwsEcsClusterDefaultCapacityProviderStrategyDetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultCapacityProviderStrategy'), 'exclude': lambda f: f is None }})  
    registered_container_instances_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RegisteredContainerInstancesCount'), 'exclude': lambda f: f is None }})  
    running_tasks_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RunningTasksCount'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    