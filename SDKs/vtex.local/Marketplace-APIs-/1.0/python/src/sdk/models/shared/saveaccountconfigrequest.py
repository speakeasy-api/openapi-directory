"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import matcher as shared_matcher
from ..shared import score as shared_score
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SaveaccountconfigRequest:
    
    matchers: list[shared_matcher.Matcher] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Matchers') }})
    r"""Matchers for approving and rejecting SKUs received from sellers."""  
    match_flux: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MatchFlux') }})
    r"""This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include:
    
    - `default` where the Matcher reviews the SKU, and approves it based on its score 
    
    - `manual` for manual approvals through the Received SKU UI or Match API 
    
    - `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.
    """  
    score: shared_score.Score = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Score') }})
    r"""Matcher rates received SKUs by comparing the data sent by sellers to existing fields in the marketplace. The calculation of these scores determines whether the product has been: `Approved` or `Denied`."""  
    specifications_mapping: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpecificationsMapping') }})
    r"""This attribute maps product and SKU specifications."""  
    