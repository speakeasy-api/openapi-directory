"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIServiceOut:
    r"""List of API Services"""
    
    cost_in_units: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('costInUnits'), 'exclude': lambda f: f is None }})
    r"""Indicates how many units per call this service costs (ex. the number of units per name)"""  
    service_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceGroup'), 'exclude': lambda f: f is None }})
    r"""Groups together classifiers providing a similar service (ex. gender groups personalname_gender and personalfullname_gender)"""  
    service_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceName'), 'exclude': lambda f: f is None }})
    r"""A service name corresponds to classifier name in apiStatus (ex. personalname_gender or personalfullname_gender)"""  
    