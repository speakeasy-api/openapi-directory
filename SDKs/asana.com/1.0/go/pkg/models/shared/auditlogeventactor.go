// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AuditLogEventActorActorTypeEnum - The type of actor.
// Can be one of `user`, `asana`, `asana_support`, `anonymous`, or `external_administrator`.
type AuditLogEventActorActorTypeEnum string

const (
	AuditLogEventActorActorTypeEnumUser                  AuditLogEventActorActorTypeEnum = "user"
	AuditLogEventActorActorTypeEnumAsana                 AuditLogEventActorActorTypeEnum = "asana"
	AuditLogEventActorActorTypeEnumAsanaSupport          AuditLogEventActorActorTypeEnum = "asana_support"
	AuditLogEventActorActorTypeEnumAnonymous             AuditLogEventActorActorTypeEnum = "anonymous"
	AuditLogEventActorActorTypeEnumExternalAdministrator AuditLogEventActorActorTypeEnum = "external_administrator"
)

func (e *AuditLogEventActorActorTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "asana":
		fallthrough
	case "asana_support":
		fallthrough
	case "anonymous":
		fallthrough
	case "external_administrator":
		*e = AuditLogEventActorActorTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AuditLogEventActorActorTypeEnum: %s", s)
	}
}

// AuditLogEventActor - The entity that triggered the event. Will typically be a user.
type AuditLogEventActor struct {
	// The type of actor.
	// Can be one of `user`, `asana`, `asana_support`, `anonymous`, or `external_administrator`.
	ActorType *AuditLogEventActorActorTypeEnum `json:"actor_type,omitempty"`
	// The email of the actor, if it is a user.
	Email *string `json:"email,omitempty"`
	// Globally unique identifier of the actor, if it is a user.
	Gid *string `json:"gid,omitempty"`
	// The name of the actor, if it is a user.
	Name *string `json:"name,omitempty"`
}
