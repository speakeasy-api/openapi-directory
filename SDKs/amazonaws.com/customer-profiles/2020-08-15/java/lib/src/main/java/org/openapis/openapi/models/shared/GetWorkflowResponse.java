/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetWorkflowResponse - Success
 */
public class GetWorkflowResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attributes")
    public WorkflowAttributes attributes;

    public GetWorkflowResponse withAttributes(WorkflowAttributes attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorDescription")
    public String errorDescription;

    public GetWorkflowResponse withErrorDescription(String errorDescription) {
        this.errorDescription = errorDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedAt")
    public OffsetDateTime lastUpdatedAt;

    public GetWorkflowResponse withLastUpdatedAt(OffsetDateTime lastUpdatedAt) {
        this.lastUpdatedAt = lastUpdatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Metrics")
    public WorkflowMetrics metrics;

    public GetWorkflowResponse withMetrics(WorkflowMetrics metrics) {
        this.metrics = metrics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartDate")
    public OffsetDateTime startDate;

    public GetWorkflowResponse withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public StatusEnum status;

    public GetWorkflowResponse withStatus(StatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkflowId")
    public String workflowId;

    public GetWorkflowResponse withWorkflowId(String workflowId) {
        this.workflowId = workflowId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkflowType")
    public WorkflowTypeEnum workflowType;

    public GetWorkflowResponse withWorkflowType(WorkflowTypeEnum workflowType) {
        this.workflowType = workflowType;
        return this;
    }
    
    public GetWorkflowResponse(){}
}
