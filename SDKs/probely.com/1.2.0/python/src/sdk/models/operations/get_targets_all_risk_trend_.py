"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTargetsAllRiskTrend200ApplicationJSON:
    
    zero: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('0'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date time"""  
    one: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('1'), 'exclude': lambda f: f is None }})
    r"""Risk score"""  
    

@dataclasses.dataclass
class GetTargetsAllRiskTrendResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_targets_all_risk_trend_200_application_json_objects: Optional[list[GetTargetsAllRiskTrend200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Risk trend plot data"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    