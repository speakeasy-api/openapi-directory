"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class DeleteCustomTypeSecurity:
    
    api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Truora-API-Key' }})  
    
class DeleteCustomTypeCountryEnum(str, Enum):
    r"""Country where the custom type is valid"""
    BR = 'BR'
    CL = 'CL'
    CO = 'CO'
    CR = 'CR'
    EC = 'EC'
    MX = 'MX'
    PE = 'PE'
    ALL = 'ALL'


@dataclasses.dataclass
class DeleteCustomTypeRequest:
    
    type: str = dataclasses.field(metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Name of the custom type to be deleted"""  
    country: Optional[DeleteCustomTypeCountryEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'country', 'style': 'form', 'explode': True }})
    r"""Country where the custom type is valid"""  
    

@dataclasses.dataclass
class DeleteCustomTypeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    