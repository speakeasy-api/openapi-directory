/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PutAlarmRequest {
    @JsonProperty("alarmName")
    public String alarmName;

    public PutAlarmRequest withAlarmName(String alarmName) {
        this.alarmName = alarmName;
        return this;
    }
    
    @JsonProperty("comparisonOperator")
    public ComparisonOperatorEnum comparisonOperator;

    public PutAlarmRequest withComparisonOperator(ComparisonOperatorEnum comparisonOperator) {
        this.comparisonOperator = comparisonOperator;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactProtocols")
    public ContactProtocolEnum[] contactProtocols;

    public PutAlarmRequest withContactProtocols(ContactProtocolEnum[] contactProtocols) {
        this.contactProtocols = contactProtocols;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datapointsToAlarm")
    public Long datapointsToAlarm;

    public PutAlarmRequest withDatapointsToAlarm(Long datapointsToAlarm) {
        this.datapointsToAlarm = datapointsToAlarm;
        return this;
    }
    
    @JsonProperty("evaluationPeriods")
    public Long evaluationPeriods;

    public PutAlarmRequest withEvaluationPeriods(Long evaluationPeriods) {
        this.evaluationPeriods = evaluationPeriods;
        return this;
    }
    
    @JsonProperty("metricName")
    public MetricNameEnum metricName;

    public PutAlarmRequest withMetricName(MetricNameEnum metricName) {
        this.metricName = metricName;
        return this;
    }
    
    @JsonProperty("monitoredResourceName")
    public String monitoredResourceName;

    public PutAlarmRequest withMonitoredResourceName(String monitoredResourceName) {
        this.monitoredResourceName = monitoredResourceName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notificationEnabled")
    public Boolean notificationEnabled;

    public PutAlarmRequest withNotificationEnabled(Boolean notificationEnabled) {
        this.notificationEnabled = notificationEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notificationTriggers")
    public AlarmStateEnum[] notificationTriggers;

    public PutAlarmRequest withNotificationTriggers(AlarmStateEnum[] notificationTriggers) {
        this.notificationTriggers = notificationTriggers;
        return this;
    }
    
    @JsonProperty("threshold")
    public Double threshold;

    public PutAlarmRequest withThreshold(Double threshold) {
        this.threshold = threshold;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("treatMissingData")
    public TreatMissingDataEnum treatMissingData;

    public PutAlarmRequest withTreatMissingData(TreatMissingDataEnum treatMissingData) {
        this.treatMissingData = treatMissingData;
        return this;
    }
    
    public PutAlarmRequest(@JsonProperty("alarmName") String alarmName, @JsonProperty("comparisonOperator") ComparisonOperatorEnum comparisonOperator, @JsonProperty("evaluationPeriods") Long evaluationPeriods, @JsonProperty("metricName") MetricNameEnum metricName, @JsonProperty("monitoredResourceName") String monitoredResourceName, @JsonProperty("threshold") Double threshold) {
        this.alarmName = alarmName;
        this.comparisonOperator = comparisonOperator;
        this.evaluationPeriods = evaluationPeriods;
        this.metricName = metricName;
        this.monitoredResourceName = monitoredResourceName;
        this.threshold = threshold;
  }
}
