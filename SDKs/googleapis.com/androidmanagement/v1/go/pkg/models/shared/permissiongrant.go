// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PermissionGrantPolicyEnum - The policy for granting the permission.
type PermissionGrantPolicyEnum string

const (
	PermissionGrantPolicyEnumPermissionPolicyUnspecified PermissionGrantPolicyEnum = "PERMISSION_POLICY_UNSPECIFIED"
	PermissionGrantPolicyEnumPrompt                      PermissionGrantPolicyEnum = "PROMPT"
	PermissionGrantPolicyEnumGrant                       PermissionGrantPolicyEnum = "GRANT"
	PermissionGrantPolicyEnumDeny                        PermissionGrantPolicyEnum = "DENY"
)

func (e *PermissionGrantPolicyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PERMISSION_POLICY_UNSPECIFIED":
		fallthrough
	case "PROMPT":
		fallthrough
	case "GRANT":
		fallthrough
	case "DENY":
		*e = PermissionGrantPolicyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PermissionGrantPolicyEnum: %s", s)
	}
}

// PermissionGrant - Configuration for an Android permission and its grant state.
type PermissionGrant struct {
	// The Android permission or group, e.g. android.permission.READ_CALENDAR or android.permission_group.CALENDAR.
	Permission *string `json:"permission,omitempty"`
	// The policy for granting the permission.
	Policy *PermissionGrantPolicyEnum `json:"policy,omitempty"`
}
