"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import analyzernameunion as shared_analyzernameunion
from ..shared import antipatternreportstatus_enum as shared_antipatternreportstatus_enum
from ..shared import s3object as shared_s3object
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AntipatternReportResult:
    r"""The anti-pattern report result."""
    
    analyzer_name: Optional[shared_analyzernameunion.AnalyzerNameUnion] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analyzerName'), 'exclude': lambda f: f is None }})  
    anti_pattern_report_s3_object: Optional[shared_s3object.S3Object] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('antiPatternReportS3Object'), 'exclude': lambda f: f is None }})
    r"""Contains the S3 bucket name and the Amazon S3 key name."""  
    antipattern_report_status: Optional[shared_antipatternreportstatus_enum.AntipatternReportStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('antipatternReportStatus'), 'exclude': lambda f: f is None }})  
    antipattern_report_status_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('antipatternReportStatusMessage'), 'exclude': lambda f: f is None }})  
    