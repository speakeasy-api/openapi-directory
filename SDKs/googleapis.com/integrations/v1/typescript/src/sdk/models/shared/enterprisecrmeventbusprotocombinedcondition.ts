/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoCondition } from "./enterprisecrmeventbusprotocondition";
import { Expose, Type } from "class-transformer";

/**
 * This message recursively combines constituent conditions using logical AND.
 */
export class EnterpriseCrmEventbusProtoCombinedCondition extends SpeakeasyBase {
  /**
   * A set of individual constituent conditions.
   */
  @SpeakeasyMetadata({ elemType: EnterpriseCrmEventbusProtoCondition })
  @Expose({ name: "conditions" })
  @Type(() => EnterpriseCrmEventbusProtoCondition)
  conditions?: EnterpriseCrmEventbusProtoCondition[];
}
