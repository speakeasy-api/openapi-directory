/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Identity } from "./identity";
import { PermissionEnum } from "./permissionenum";
import { Resource } from "./resource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeAccessPolicyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accessPolicyArn" })
  accessPolicyArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "accessPolicyCreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  accessPolicyCreationDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "accessPolicyId" })
  accessPolicyId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "accessPolicyIdentity" })
  @Type(() => Identity)
  accessPolicyIdentity: Identity;

  @SpeakeasyMetadata()
  @Expose({ name: "accessPolicyLastUpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  accessPolicyLastUpdateDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "accessPolicyPermission" })
  accessPolicyPermission: PermissionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "accessPolicyResource" })
  @Type(() => Resource)
  accessPolicyResource: Resource;
}
