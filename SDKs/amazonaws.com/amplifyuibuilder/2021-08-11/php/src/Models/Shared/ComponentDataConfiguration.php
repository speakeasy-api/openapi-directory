<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ComponentDataConfiguration - Describes the configuration for binding a component's properties to data.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ComponentDataConfiguration
{
    /**
     * $identifiers
     * 
     * @var ?array<string> $identifiers
     */
	#[\JMS\Serializer\Annotation\SerializedName('identifiers')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $identifiers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('model')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $model;
    
	#[\JMS\Serializer\Annotation\SerializedName('predicate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Predicate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Predicate $predicate = null;
    
    /**
     * $sort
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SortProperty> $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SortProperty>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sort = null;
    
	public function __construct()
	{
		$this->identifiers = null;
		$this->model = "";
		$this->predicate = null;
		$this->sort = null;
	}
}
