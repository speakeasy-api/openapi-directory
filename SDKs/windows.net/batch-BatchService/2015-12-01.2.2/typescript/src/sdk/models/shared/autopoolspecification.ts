/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PoolSpecification } from "./poolspecification";
import { Expose, Type } from "class-transformer";

/**
 * Gets or sets the minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to pools.
 */
export enum AutoPoolSpecificationPoolLifetimeOptionEnum {
  Jobschedule = "jobschedule",
  Job = "job",
  Unmapped = "unmapped",
}

/**
 * Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool, run all the tasks for the job on it, and will delete the pool once the job has completed.
 */
export class AutoPoolSpecification extends SpeakeasyBase {
  /**
   * Gets or sets a prefix to be added to the unique identifier when a pool is automatically created. The prefix can be up to 20 characters long.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoPoolIdPrefix" })
  autoPoolIdPrefix?: string;

  /**
   * Gets or sets whether to keep an auto pool alive after its lifetime expires.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keepAlive" })
  keepAlive?: boolean;

  /**
   * Specification for creating a new pool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pool" })
  @Type(() => PoolSpecification)
  pool?: PoolSpecification;

  /**
   * Gets or sets the minimum lifetime of created auto pools, and how multiple jobs on a schedule are assigned to pools.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "poolLifetimeOption" })
  poolLifetimeOption: AutoPoolSpecificationPoolLifetimeOptionEnum;
}
