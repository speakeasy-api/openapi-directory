/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ExportConfigurationsPartialUpdateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export enum ExportConfigurationsPartialUpdateRequestBodyExportEntitiesEnum {
  Crashes = "crashes",
  Errors = "errors",
  Attachments = "attachments",
  NoLogs = "no_logs",
}

/**
 * Type of export configuration
 */
export enum ExportConfigurationsPartialUpdateRequestBodyTypeEnum {
  BlobStorageConnectionString = "blob_storage_connection_string",
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription",
}

/**
 * Export configuration
 */
export class ExportConfigurationsPartialUpdateRequestBody extends SpeakeasyBase {
  /**
   * Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backfill" })
  backfill?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "export_entities" })
  exportEntities?: ExportConfigurationsPartialUpdateRequestBodyExportEntitiesEnum[];

  /**
   * The resource group name on azure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_group" })
  resourceGroup?: string;

  /**
   * The resource name on azure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_name" })
  resourceName?: string;

  /**
   * Type of export configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ExportConfigurationsPartialUpdateRequestBodyTypeEnum;
}

export class ExportConfigurationsPartialUpdateRequest extends SpeakeasyBase {
  /**
   * Export configurations.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ExportConfigurationsPartialUpdateRequestBody;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The id of the export configuration.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=export_configuration_id",
  })
  exportConfigurationId: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum ExportConfigurationsPartialUpdateDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class ExportConfigurationsPartialUpdateDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ExportConfigurationsPartialUpdateDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class ExportConfigurationsPartialUpdateDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ExportConfigurationsPartialUpdateDefaultApplicationJSONError)
  error: ExportConfigurationsPartialUpdateDefaultApplicationJSONError;
}

export enum ExportConfigurationsPartialUpdate200ApplicationJSONExportConfigurationExportEntitiesEnum {
  Crashes = "crashes",
  Errors = "errors",
  Attachments = "attachments",
  NoLogs = "no_logs",
}

/**
 * Type of export configuration
 */
export enum ExportConfigurationsPartialUpdate200ApplicationJSONExportConfigurationTypeEnum {
  BlobStorageConnectionString = "blob_storage_connection_string",
  ApplicationInsightsInstrumentationKey = "application_insights_instrumentation_key",
  BlobStorageLinkedSubscription = "blob_storage_linked_subscription",
  ApplicationInsightsLinkedSubscription = "application_insights_linked_subscription",
}

/**
 * Export configuration
 */
export class ExportConfigurationsPartialUpdate200ApplicationJSONExportConfiguration extends SpeakeasyBase {
  /**
   * Field to determine if backfilling should occur. The default value is true. If set to false export starts from date and time of config creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backfill" })
  backfill?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "export_entities" })
  exportEntities?: ExportConfigurationsPartialUpdate200ApplicationJSONExportConfigurationExportEntitiesEnum[];

  /**
   * The resource group name on azure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_group" })
  resourceGroup?: string;

  /**
   * The resource name on azure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_name" })
  resourceName?: string;

  /**
   * Type of export configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ExportConfigurationsPartialUpdate200ApplicationJSONExportConfigurationTypeEnum;
}

export enum ExportConfigurationsPartialUpdate200ApplicationJSONExportEntitiesEnum {
  Crashes = "crashes",
  Errors = "errors",
  Attachments = "attachments",
  NoLogs = "no_logs",
}

/**
 * Target resource type of export configuration
 */
export enum ExportConfigurationsPartialUpdate200ApplicationJSONExportTypeEnum {
  BlobStorage = "BlobStorage",
  AppInsights = "AppInsights",
}

/**
 * State of the export job
 */
export enum ExportConfigurationsPartialUpdate200ApplicationJSONStateEnum {
  Enabled = "Enabled",
  Disabled = "Disabled",
  Pending = "Pending",
  Deleted = "Deleted",
  Invalid = "Invalid",
}

/**
 * Export configuration result
 */
export class ExportConfigurationsPartialUpdate200ApplicationJSON extends SpeakeasyBase {
  /**
   * Creation time in ISO 8601 format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creation_time" })
  creationTime: string;

  /**
   * Export configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "export_configuration" })
  @Type(
    () => ExportConfigurationsPartialUpdate200ApplicationJSONExportConfiguration
  )
  exportConfiguration?: ExportConfigurationsPartialUpdate200ApplicationJSONExportConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "export_entities" })
  exportEntities?: ExportConfigurationsPartialUpdate200ApplicationJSONExportEntitiesEnum[];

  /**
   * Target resource type of export configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "export_type" })
  exportType: ExportConfigurationsPartialUpdate200ApplicationJSONExportTypeEnum;

  /**
   * Export configuration id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Latest time in ISO 8601 format when export completed successfully
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_run_time" })
  lastRunTime?: string;

  /**
   * resource group for the storage account/App Insights resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_group" })
  resourceGroup?: string;

  /**
   * Storage accout or Appinsights resource name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_name" })
  resourceName?: string;

  /**
   * State of the export job
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: ExportConfigurationsPartialUpdate200ApplicationJSONStateEnum;

  /**
   * Additional information about export configuration state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state_info" })
  stateInfo?: string;
}

export class ExportConfigurationsPartialUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Export configuration updated successfully.
   */
  @SpeakeasyMetadata()
  exportConfigurationsPartialUpdate200ApplicationJSONObject?: ExportConfigurationsPartialUpdate200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  exportConfigurationsPartialUpdateDefaultApplicationJSONObject?: ExportConfigurationsPartialUpdateDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
