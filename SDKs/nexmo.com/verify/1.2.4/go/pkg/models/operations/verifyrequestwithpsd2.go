// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type VerifyRequestWithPsd2PathParams struct {
	// The response format.
	Format shared.FormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type VerifyRequestWithPsd2Request struct {
	PathParams VerifyRequestWithPsd2PathParams
	Request    shared.Psd2Request `request:"mediaType=application/x-www-form-urlencoded"`
}

type VerifyRequestWithPsd2200ApplicationJSONType string

const (
	VerifyRequestWithPsd2200ApplicationJSONTypeRequestResponse      VerifyRequestWithPsd2200ApplicationJSONType = "requestResponse"
	VerifyRequestWithPsd2200ApplicationJSONTypeRequestErrorResponse VerifyRequestWithPsd2200ApplicationJSONType = "requestErrorResponse"
)

type VerifyRequestWithPsd2200ApplicationJSON struct {
	RequestResponse      *shared.RequestResponse
	RequestErrorResponse *shared.RequestErrorResponse

	Type VerifyRequestWithPsd2200ApplicationJSONType
}

func CreateVerifyRequestWithPsd2200ApplicationJSONRequestResponse(requestResponse shared.RequestResponse) VerifyRequestWithPsd2200ApplicationJSON {
	typ := VerifyRequestWithPsd2200ApplicationJSONTypeRequestResponse

	return VerifyRequestWithPsd2200ApplicationJSON{
		RequestResponse: &requestResponse,
		Type:            typ,
	}
}

func CreateVerifyRequestWithPsd2200ApplicationJSONRequestErrorResponse(requestErrorResponse shared.RequestErrorResponse) VerifyRequestWithPsd2200ApplicationJSON {
	typ := VerifyRequestWithPsd2200ApplicationJSONTypeRequestErrorResponse

	return VerifyRequestWithPsd2200ApplicationJSON{
		RequestErrorResponse: &requestErrorResponse,
		Type:                 typ,
	}
}

func (u *VerifyRequestWithPsd2200ApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	requestResponse := new(shared.RequestResponse)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&requestResponse); err == nil {
		u.RequestResponse = requestResponse
		u.Type = VerifyRequestWithPsd2200ApplicationJSONTypeRequestResponse
		return nil
	}

	requestErrorResponse := new(shared.RequestErrorResponse)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&requestErrorResponse); err == nil {
		u.RequestErrorResponse = requestErrorResponse
		u.Type = VerifyRequestWithPsd2200ApplicationJSONTypeRequestErrorResponse
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u VerifyRequestWithPsd2200ApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.RequestResponse != nil {
		return json.Marshal(u.RequestResponse)
	}

	if u.RequestErrorResponse != nil {
		return json.Marshal(u.RequestErrorResponse)
	}

	return nil, nil
}

type VerifyRequestWithPsd2Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	VerifyRequestWithPsd2200ApplicationJSONOneOf *VerifyRequestWithPsd2200ApplicationJSON
}
