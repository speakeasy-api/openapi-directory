/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PostInvoiceResponse - Container for custom fields of an Invoice object.
 * 
 */
public class PostInvoiceResponse {
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public PostInvoiceResponse withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public PostInvoiceResponse withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public PostInvoiceResponse withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * The ID of the customer account associated with the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public PostInvoiceResponse withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The total amount of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public String amount;
    public PostInvoiceResponse withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The invoice amount excluding tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountWithoutTax")
    public String amountWithoutTax;
    public PostInvoiceResponse withAmountWithoutTax(String amountWithoutTax) {
        this.amountWithoutTax = amountWithoutTax;
        return this;
    }
    
    /**
     * Whether invoices are automatically picked up for processing in the corresponding payment run.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPay")
    public Boolean autoPay;
    public PostInvoiceResponse withAutoPay(Boolean autoPay) {
        this.autoPay = autoPay;
        return this;
    }
    
    /**
     * Comments about the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public String comments;
    public PostInvoiceResponse withComments(String comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * The date by which the payment for this invoice is due.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("dueDate")
    public LocalDate dueDate;
    public PostInvoiceResponse withDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * The unique ID of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public PostInvoiceResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The date that appears on the invoice being created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("invoiceDate")
    public LocalDate invoiceDate;
    public PostInvoiceResponse withInvoiceDate(LocalDate invoiceDate) {
        this.invoiceDate = invoiceDate;
        return this;
    }
    
    /**
     * The unique identification number of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceNumber")
    public String invoiceNumber;
    public PostInvoiceResponse withInvoiceNumber(String invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
        return this;
    }
    
    /**
     * The status of the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PostInvoiceResponseStatusEnum status;
    public PostInvoiceResponse withStatus(PostInvoiceResponseStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The amount of taxation.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxAmount")
    public String taxAmount;
    public PostInvoiceResponse withTaxAmount(String taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * The total amount of taxes or VAT for which the customer has an exemption.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxExemptAmount")
    public String taxExemptAmount;
    public PostInvoiceResponse withTaxExemptAmount(String taxExemptAmount) {
        this.taxExemptAmount = taxExemptAmount;
        return this;
    }
    
    /**
     * Whether the invoice was transferred to an external accounting system.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferredToAccounting")
    public PostInvoiceResponseTransferredToAccountingEnum transferredToAccounting;
    public PostInvoiceResponse withTransferredToAccounting(PostInvoiceResponseTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
}
