// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PUTOrderTriggerDatesResponseTypeReasons struct {
	// The error code of response.
	//
	Code *string `json:"code,omitempty"`
	// The detail information of the error response
	//
	Message *string `json:"message,omitempty"`
}

// PUTOrderTriggerDatesResponseTypeStatusEnum - Status of the order.
type PUTOrderTriggerDatesResponseTypeStatusEnum string

const (
	PUTOrderTriggerDatesResponseTypeStatusEnumCompleted PUTOrderTriggerDatesResponseTypeStatusEnum = "Completed"
	PUTOrderTriggerDatesResponseTypeStatusEnumPending   PUTOrderTriggerDatesResponseTypeStatusEnum = "Pending"
)

func (e *PUTOrderTriggerDatesResponseTypeStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Completed":
		fallthrough
	case "Pending":
		*e = PUTOrderTriggerDatesResponseTypeStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PUTOrderTriggerDatesResponseTypeStatusEnum: %s", s)
	}
}

// PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum - Status of the subscription. `Pending Activation` and `Pending Acceptance` are only applicable for an order that contains a `CreateSubscription` order action.
type PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum string

const (
	PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnumActive            PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum = "Active"
	PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnumPendingActivation PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum = "Pending Activation"
	PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnumPendingAcceptance PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum = "Pending Acceptance"
)

func (e *PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Pending Activation":
		fallthrough
	case "Pending Acceptance":
		*e = PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum: %s", s)
	}
}

type PUTOrderTriggerDatesResponseTypeSubscriptions struct {
	// Status of the subscription. `Pending Activation` and `Pending Acceptance` are only applicable for an order that contains a `CreateSubscription` order action.
	Status *PUTOrderTriggerDatesResponseTypeSubscriptionsStatusEnum `json:"status,omitempty"`
	// Subscription number of the subscription updated.
	SubscriptionNumber *string `json:"subscriptionNumber,omitempty"`
}

type PUTOrderTriggerDatesResponseType struct {
	// The account number for the order.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The order number of the order updated.
	OrderNumber *string `json:"orderNumber,omitempty"`
	// The Id of the process that handle the operation.
	//
	ProcessID *string                                   `json:"processId,omitempty"`
	Reasons   []PUTOrderTriggerDatesResponseTypeReasons `json:"reasons,omitempty"`
	// Status of the order.
	Status *PUTOrderTriggerDatesResponseTypeStatusEnum `json:"status,omitempty"`
	// The subscriptions updated.
	Subscriptions []PUTOrderTriggerDatesResponseTypeSubscriptions `json:"subscriptions,omitempty"`
	// Indicates whether the call succeeded.
	//
	Success *bool `json:"success,omitempty"`
}
