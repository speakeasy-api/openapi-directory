// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GenderTargetingOptionDetailsGenderEnum - Output only. The gender of an audience.
type GenderTargetingOptionDetailsGenderEnum string

const (
	GenderTargetingOptionDetailsGenderEnumGenderUnspecified GenderTargetingOptionDetailsGenderEnum = "GENDER_UNSPECIFIED"
	GenderTargetingOptionDetailsGenderEnumGenderMale        GenderTargetingOptionDetailsGenderEnum = "GENDER_MALE"
	GenderTargetingOptionDetailsGenderEnumGenderFemale      GenderTargetingOptionDetailsGenderEnum = "GENDER_FEMALE"
	GenderTargetingOptionDetailsGenderEnumGenderUnknown     GenderTargetingOptionDetailsGenderEnum = "GENDER_UNKNOWN"
)

func (e GenderTargetingOptionDetailsGenderEnum) ToPointer() *GenderTargetingOptionDetailsGenderEnum {
	return &e
}

func (e *GenderTargetingOptionDetailsGenderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GENDER_UNSPECIFIED":
		fallthrough
	case "GENDER_MALE":
		fallthrough
	case "GENDER_FEMALE":
		fallthrough
	case "GENDER_UNKNOWN":
		*e = GenderTargetingOptionDetailsGenderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GenderTargetingOptionDetailsGenderEnum: %v", v)
	}
}

// GenderTargetingOptionDetails - Represents a targetable gender. This will be populated in the gender_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_GENDER`.
type GenderTargetingOptionDetails struct {
	// Output only. The gender of an audience.
	Gender *GenderTargetingOptionDetailsGenderEnum `json:"gender,omitempty"`
}
