/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProcessingError } from "./processingerror";
import { RepositoryError } from "./repositoryerror";
import { Expose, Type } from "class-transformer";

/**
 * Status code.
 */
export enum ItemStatusCodeEnum {
  CodeUnspecified = "CODE_UNSPECIFIED",
  Error = "ERROR",
  Modified = "MODIFIED",
  NewItem = "NEW_ITEM",
  Accepted = "ACCEPTED",
}

/**
 * This contains item's status and any errors.
 */
export class ItemStatus extends SpeakeasyBase {
  /**
   * Status code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: ItemStatusCodeEnum;

  /**
   * Error details in case the item is in ERROR state.
   */
  @SpeakeasyMetadata({ elemType: ProcessingError })
  @Expose({ name: "processingErrors" })
  @Type(() => ProcessingError)
  processingErrors?: ProcessingError[];

  /**
   * Repository error reported by connector.
   */
  @SpeakeasyMetadata({ elemType: RepositoryError })
  @Expose({ name: "repositoryErrors" })
  @Type(() => RepositoryError)
  repositoryErrors?: RepositoryError[];
}
