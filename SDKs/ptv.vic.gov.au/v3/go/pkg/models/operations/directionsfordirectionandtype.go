// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DirectionsForDirectionAndTypeRouteTypeEnum - Number identifying transport mode; values returned via RouteTypes API
type DirectionsForDirectionAndTypeRouteTypeEnum string

const (
	DirectionsForDirectionAndTypeRouteTypeEnumZero  DirectionsForDirectionAndTypeRouteTypeEnum = "0"
	DirectionsForDirectionAndTypeRouteTypeEnumOne   DirectionsForDirectionAndTypeRouteTypeEnum = "1"
	DirectionsForDirectionAndTypeRouteTypeEnumTwo   DirectionsForDirectionAndTypeRouteTypeEnum = "2"
	DirectionsForDirectionAndTypeRouteTypeEnumThree DirectionsForDirectionAndTypeRouteTypeEnum = "3"
	DirectionsForDirectionAndTypeRouteTypeEnumFour  DirectionsForDirectionAndTypeRouteTypeEnum = "4"
)

func (e *DirectionsForDirectionAndTypeRouteTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		*e = DirectionsForDirectionAndTypeRouteTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DirectionsForDirectionAndTypeRouteTypeEnum: %s", s)
	}
}

type DirectionsForDirectionAndTypeRequest struct {
	// Your developer id
	Devid *string `queryParam:"style=form,explode=true,name=devid"`
	// Identifier of direction of travel; values returned by Directions API - /v3/directions/route/{route_id}
	DirectionID int `pathParam:"style=simple,explode=false,name=direction_id"`
	// Number identifying transport mode; values returned via RouteTypes API
	RouteType DirectionsForDirectionAndTypeRouteTypeEnum `pathParam:"style=simple,explode=false,name=route_type"`
	// Authentication signature for request
	Signature *string `queryParam:"style=form,explode=true,name=signature"`
	// Please ignore
	Token *string `queryParam:"style=form,explode=true,name=token"`
}

type DirectionsForDirectionAndTypeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// All routes of the specified route type that travel in the specified direction.
	V3DirectionsResponse *shared.V3DirectionsResponse
	// Invalid Request
	V3ErrorResponse *shared.V3ErrorResponse
}
