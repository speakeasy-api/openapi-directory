"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import formality_enum as shared_formality_enum
from ..shared import profanity_enum as shared_profanity_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TranslationSettings:
    r"""Optional settings that configure the translation output. Use these settings for real time translations and asynchronous translation jobs."""
    
    formality: Optional[shared_formality_enum.FormalityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Formality'), 'exclude': lambda f: f is None }})  
    profanity: Optional[shared_profanity_enum.ProfanityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Profanity'), 'exclude': lambda f: f is None }})  
    