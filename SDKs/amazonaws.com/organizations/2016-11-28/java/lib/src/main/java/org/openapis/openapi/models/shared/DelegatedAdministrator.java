/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DelegatedAdministrator - Contains information about the delegated administrator.
 */
public class DelegatedAdministrator {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Arn")
    public String arn;
    public DelegatedAdministrator withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("DelegationEnabledDate")
    public OffsetDateTime delegationEnabledDate;
    public DelegatedAdministrator withDelegationEnabledDate(OffsetDateTime delegationEnabledDate) {
        this.delegationEnabledDate = delegationEnabledDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Email")
    public String email;
    public DelegatedAdministrator withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public DelegatedAdministrator withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JoinedMethod")
    public AccountJoinedMethodEnum joinedMethod;
    public DelegatedAdministrator withJoinedMethod(AccountJoinedMethodEnum joinedMethod) {
        this.joinedMethod = joinedMethod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("JoinedTimestamp")
    public OffsetDateTime joinedTimestamp;
    public DelegatedAdministrator withJoinedTimestamp(OffsetDateTime joinedTimestamp) {
        this.joinedTimestamp = joinedTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public DelegatedAdministrator withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public AccountStatusEnum status;
    public DelegatedAdministrator withStatus(AccountStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
