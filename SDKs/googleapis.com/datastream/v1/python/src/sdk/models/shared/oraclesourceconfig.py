"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import oraclerdbms as shared_oraclerdbms
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OracleSourceConfig:
    r"""Oracle data source configuration"""
    
    drop_large_objects: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dropLargeObjects'), 'exclude': lambda f: f is None }})
    r"""Configuration to drop large object values."""  
    exclude_objects: Optional[shared_oraclerdbms.OracleRdbms] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('excludeObjects'), 'exclude': lambda f: f is None }})
    r"""Oracle database structure."""  
    include_objects: Optional[shared_oraclerdbms.OracleRdbms] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includeObjects'), 'exclude': lambda f: f is None }})
    r"""Oracle database structure."""  
    max_concurrent_backfill_tasks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxConcurrentBackfillTasks'), 'exclude': lambda f: f is None }})
    r"""Maximum number of concurrent backfill tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used."""  
    max_concurrent_cdc_tasks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxConcurrentCdcTasks'), 'exclude': lambda f: f is None }})
    r"""Maximum number of concurrent CDC tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used."""  
    stream_large_objects: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('streamLargeObjects'), 'exclude': lambda f: f is None }})
    r"""Configuration to stream large object values."""  
    