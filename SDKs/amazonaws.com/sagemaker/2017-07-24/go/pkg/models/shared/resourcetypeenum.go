// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResourceTypeEnum string

const (
	ResourceTypeEnumTrainingJob              ResourceTypeEnum = "TrainingJob"
	ResourceTypeEnumExperiment               ResourceTypeEnum = "Experiment"
	ResourceTypeEnumExperimentTrial          ResourceTypeEnum = "ExperimentTrial"
	ResourceTypeEnumExperimentTrialComponent ResourceTypeEnum = "ExperimentTrialComponent"
	ResourceTypeEnumEndpoint                 ResourceTypeEnum = "Endpoint"
	ResourceTypeEnumModelPackage             ResourceTypeEnum = "ModelPackage"
	ResourceTypeEnumModelPackageGroup        ResourceTypeEnum = "ModelPackageGroup"
	ResourceTypeEnumPipeline                 ResourceTypeEnum = "Pipeline"
	ResourceTypeEnumPipelineExecution        ResourceTypeEnum = "PipelineExecution"
	ResourceTypeEnumFeatureGroup             ResourceTypeEnum = "FeatureGroup"
	ResourceTypeEnumProject                  ResourceTypeEnum = "Project"
	ResourceTypeEnumFeatureMetadata          ResourceTypeEnum = "FeatureMetadata"
	ResourceTypeEnumHyperParameterTuningJob  ResourceTypeEnum = "HyperParameterTuningJob"
	ResourceTypeEnumModelCard                ResourceTypeEnum = "ModelCard"
	ResourceTypeEnumModel                    ResourceTypeEnum = "Model"
)

func (e ResourceTypeEnum) ToPointer() *ResourceTypeEnum {
	return &e
}

func (e *ResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TrainingJob":
		fallthrough
	case "Experiment":
		fallthrough
	case "ExperimentTrial":
		fallthrough
	case "ExperimentTrialComponent":
		fallthrough
	case "Endpoint":
		fallthrough
	case "ModelPackage":
		fallthrough
	case "ModelPackageGroup":
		fallthrough
	case "Pipeline":
		fallthrough
	case "PipelineExecution":
		fallthrough
	case "FeatureGroup":
		fallthrough
	case "Project":
		fallthrough
	case "FeatureMetadata":
		fallthrough
	case "HyperParameterTuningJob":
		fallthrough
	case "ModelCard":
		fallthrough
	case "Model":
		*e = ResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceTypeEnum: %v", v)
	}
}
