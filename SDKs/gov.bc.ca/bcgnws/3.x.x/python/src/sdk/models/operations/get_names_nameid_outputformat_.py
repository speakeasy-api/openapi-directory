"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetNamesNameIDOutputFormatOutputFormatEnum(str, Enum):
    r"""The format of the output."""
    JSON = 'json'
    XML = 'xml'
    KML = 'kml'
    CSV = 'csv'
    HTML = 'html'


@dataclasses.dataclass
class GetNamesNameIDOutputFormatRequest:
    
    name_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'nameId', 'style': 'simple', 'explode': False }})
    r"""The unique identifier for a name"""  
    output_format: GetNamesNameIDOutputFormatOutputFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'outputFormat', 'style': 'simple', 'explode': False }})
    r"""The format of the output."""  
    

@dataclasses.dataclass
class GetNamesNameIDOutputFormatResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    