"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import asyncinferencenotificationconfig as shared_asyncinferencenotificationconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AsyncInferenceOutputConfig:
    r"""Specifies the configuration for asynchronous inference invocation outputs."""
    
    s3_output_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3OutputPath') }})  
    kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KmsKeyId'), 'exclude': lambda f: f is None }})  
    notification_config: Optional[shared_asyncinferencenotificationconfig.AsyncInferenceNotificationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotificationConfig'), 'exclude': lambda f: f is None }})  
    