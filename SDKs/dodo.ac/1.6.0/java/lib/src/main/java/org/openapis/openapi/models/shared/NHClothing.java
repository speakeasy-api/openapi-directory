/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NHClothing - A JSON object describing the clothing.
 */
public class NHClothing {
    /**
     * Where the clothing may be obtained from (could be multiple sources). `from` is a brief description of the source; `note`, when provided, provides additional details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availability")
    public NHClothingAvailability[] availability;

    public NHClothing withAvailability(NHClothingAvailability[] availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * An array of prices, for when the item may be purchased with Bells, Nook Miles, etc..
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buy")
    public NHClothingBuy[] buy;

    public NHClothing withBuy(NHClothingBuy[] buy) {
        this.buy = buy;
        return this;
    }
    
    /**
     * The category of item as shown in the player's inventory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public NHClothingCategoryEnum category;

    public NHClothing withCategory(NHClothingCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * The clothing's Label theme(s). This is used for completing the requested outfit theme for [Label](https://nookipedia.com/wiki/Label) when she visits the player's island.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_themes")
    public NHClothingLabelThemesEnum[] labelThemes;

    public NHClothing withLabelThemes(NHClothingLabelThemesEnum[] labelThemes) {
        this.labelThemes = labelThemes;
        return this;
    }
    
    /**
     * The name of the clothing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NHClothing withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Any additional miscellaneous information about the clothing, such as a name change from a past update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public NHClothing withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The time of the year that the clothing is available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seasonality")
    public String seasonality;

    public NHClothing withSeasonality(String seasonality) {
        this.seasonality = seasonality;
        return this;
    }
    
    /**
     * The number of Bells the clothing can be sold to the store for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sell")
    public Long sell;

    public NHClothing withSell(Long sell) {
        this.sell = sell;
        return this;
    }
    
    /**
     * The clothing's style(s). Styles are used for gifting villagers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("styles")
    public NHClothingStylesEnum[] styles;

    public NHClothing withStyles(NHClothingStylesEnum[] styles) {
        this.styles = styles;
        return this;
    }
    
    /**
     * Whether the item is available through legitimate gameplay. Some items are added to the game files in an update, but aren't actually made available until a subsequent update unlocks them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unlocked")
    public Boolean unlocked;

    public NHClothing withUnlocked(Boolean unlocked) {
        this.unlocked = unlocked;
        return this;
    }
    
    /**
     * Link to the respective Nookipedia article.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public NHClothing withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The total number of variations the clothing has, between 0 and 8.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variation_total")
    public NHClothingVariationTotalEnum variationTotal;

    public NHClothing withVariationTotal(NHClothingVariationTotalEnum variationTotal) {
        this.variationTotal = variationTotal;
        return this;
    }
    
    /**
     * An array of objects, each object representing a variation of the clothing. Clothing that has no variations (only one version) will have a single variation object with the image URL and colors, but the `variation` field will be empty. Clothing with multiple variations will have the `variation` fields defined with the name of each variation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variations")
    public NHClothingVariations[] variations;

    public NHClothing withVariations(NHClothingVariations[] variations) {
        this.variations = variations;
        return this;
    }
    
    /**
     * The version of *New Horizons* that the item was added. Items that were included at the game's launch have version "1.0.0".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version_added")
    public String versionAdded;

    public NHClothing withVersionAdded(String versionAdded) {
        this.versionAdded = versionAdded;
        return this;
    }
    
    /**
     * Whether villagers may equip this item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vill_equip")
    public Boolean villEquip;

    public NHClothing withVillEquip(Boolean villEquip) {
        this.villEquip = villEquip;
        return this;
    }
    
    public NHClothing(){}
}
