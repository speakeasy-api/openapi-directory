"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatalabelingv1beta1annotation as shared_googleclouddatalabelingv1beta1annotation
from ..shared import googleclouddatalabelingv1beta1imagepayload as shared_googleclouddatalabelingv1beta1imagepayload
from ..shared import googleclouddatalabelingv1beta1textpayload as shared_googleclouddatalabelingv1beta1textpayload
from ..shared import googleclouddatalabelingv1beta1videopayload as shared_googleclouddatalabelingv1beta1videopayload
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatalabelingV1beta1Example:
    r"""An Example is a piece of data and its annotation. For example, an image with label \\"house\\"."""
    
    annotations: Optional[list[shared_googleclouddatalabelingv1beta1annotation.GoogleCloudDatalabelingV1beta1Annotation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotations'), 'exclude': lambda f: f is None }})
    r"""Output only. Annotations for the piece of data in Example. One piece of data can have multiple annotations."""  
    image_payload: Optional[shared_googleclouddatalabelingv1beta1imagepayload.GoogleCloudDatalabelingV1beta1ImagePayload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imagePayload'), 'exclude': lambda f: f is None }})
    r"""Container of information about an image."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Name of the example, in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}/examples/{example_id}"""  
    text_payload: Optional[shared_googleclouddatalabelingv1beta1textpayload.GoogleCloudDatalabelingV1beta1TextPayload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textPayload'), 'exclude': lambda f: f is None }})
    r"""Container of information about a piece of text."""  
    video_payload: Optional[shared_googleclouddatalabelingv1beta1videopayload.GoogleCloudDatalabelingV1beta1VideoPayload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoPayload'), 'exclude': lambda f: f is None }})
    r"""Container of information of a video."""  
    