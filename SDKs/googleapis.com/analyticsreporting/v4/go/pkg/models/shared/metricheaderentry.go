// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MetricHeaderEntryTypeEnum - The type of the metric, for example `INTEGER`.
type MetricHeaderEntryTypeEnum string

const (
	MetricHeaderEntryTypeEnumMetricTypeUnspecified MetricHeaderEntryTypeEnum = "METRIC_TYPE_UNSPECIFIED"
	MetricHeaderEntryTypeEnumInteger               MetricHeaderEntryTypeEnum = "INTEGER"
	MetricHeaderEntryTypeEnumFloat                 MetricHeaderEntryTypeEnum = "FLOAT"
	MetricHeaderEntryTypeEnumCurrency              MetricHeaderEntryTypeEnum = "CURRENCY"
	MetricHeaderEntryTypeEnumPercent               MetricHeaderEntryTypeEnum = "PERCENT"
	MetricHeaderEntryTypeEnumTime                  MetricHeaderEntryTypeEnum = "TIME"
)

func (e *MetricHeaderEntryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METRIC_TYPE_UNSPECIFIED":
		fallthrough
	case "INTEGER":
		fallthrough
	case "FLOAT":
		fallthrough
	case "CURRENCY":
		fallthrough
	case "PERCENT":
		fallthrough
	case "TIME":
		*e = MetricHeaderEntryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricHeaderEntryTypeEnum: %s", s)
	}
}

// MetricHeaderEntry - Header for the metrics.
type MetricHeaderEntry struct {
	// The name of the header.
	Name *string `json:"name,omitempty"`
	// The type of the metric, for example `INTEGER`.
	Type *MetricHeaderEntryTypeEnum `json:"type,omitempty"`
}
