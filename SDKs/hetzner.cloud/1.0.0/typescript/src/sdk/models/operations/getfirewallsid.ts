/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetFirewallsIdRequest extends SpeakeasyBase {
  /**
   * ID of the resource
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

export class GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResourcesServer extends SpeakeasyBase {
  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

/**
 * Type of resource referenced
 */
export enum GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResourcesTypeEnum {
  Server = "server",
}

export class GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResources extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "server" })
  @Type(
    () =>
      GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResourcesServer
  )
  server?: GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResourcesServer;

  /**
   * Type of resource referenced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResourcesTypeEnum;
}

export class GetFirewallsIdFirewallResponseFirewallAppliedToLabelSelector extends SpeakeasyBase {
  /**
   * Label selector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selector" })
  selector: string;
}

export class GetFirewallsIdFirewallResponseFirewallAppliedToServer extends SpeakeasyBase {
  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

/**
 * Type of resource referenced
 */
export enum GetFirewallsIdFirewallResponseFirewallAppliedToTypeEnum {
  Server = "server",
  LabelSelector = "label_selector",
}

export class GetFirewallsIdFirewallResponseFirewallAppliedTo extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResources,
  })
  @Expose({ name: "applied_to_resources" })
  @Type(() => GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResources)
  appliedToResources?: GetFirewallsIdFirewallResponseFirewallAppliedToAppliedToResources[];

  @SpeakeasyMetadata()
  @Expose({ name: "label_selector" })
  @Type(() => GetFirewallsIdFirewallResponseFirewallAppliedToLabelSelector)
  labelSelector?: GetFirewallsIdFirewallResponseFirewallAppliedToLabelSelector;

  @SpeakeasyMetadata()
  @Expose({ name: "server" })
  @Type(() => GetFirewallsIdFirewallResponseFirewallAppliedToServer)
  server?: GetFirewallsIdFirewallResponseFirewallAppliedToServer;

  /**
   * Type of resource referenced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetFirewallsIdFirewallResponseFirewallAppliedToTypeEnum;
}

/**
 * Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.
 */
export enum GetFirewallsIdFirewallResponseFirewallRuleDirectionEnum {
  In = "in",
  Out = "out",
}

/**
 * Type of traffic to allow
 */
export enum GetFirewallsIdFirewallResponseFirewallRuleProtocolEnum {
  Tcp = "tcp",
  Udp = "udp",
  Icmp = "icmp",
  Esp = "esp",
  Gre = "gre",
}

export class GetFirewallsIdFirewallResponseFirewallRule extends SpeakeasyBase {
  /**
   * Description of the Rule
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination_ips" })
  destinationIps?: string[];

  /**
   * Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction: GetFirewallsIdFirewallResponseFirewallRuleDirectionEnum;

  /**
   * Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: string;

  /**
   * Type of traffic to allow
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol: GetFirewallsIdFirewallResponseFirewallRuleProtocolEnum;

  /**
   * List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_ips" })
  sourceIps?: string[];
}

export class GetFirewallsIdFirewallResponseFirewall extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetFirewallsIdFirewallResponseFirewallAppliedTo,
  })
  @Expose({ name: "applied_to" })
  @Type(() => GetFirewallsIdFirewallResponseFirewallAppliedTo)
  appliedTo: GetFirewallsIdFirewallResponseFirewallAppliedTo[];

  /**
   * Point in time when the Resource was created (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created: string;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * User-defined labels (key-value pairs)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Name of the Resource. Must be unique per Project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: GetFirewallsIdFirewallResponseFirewallRule })
  @Expose({ name: "rules" })
  @Type(() => GetFirewallsIdFirewallResponseFirewallRule)
  rules: GetFirewallsIdFirewallResponseFirewallRule[];
}

/**
 * The `firewall` key contains a Firewall object
 */
export class GetFirewallsIdFirewallResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "firewall" })
  @Type(() => GetFirewallsIdFirewallResponseFirewall)
  firewall: GetFirewallsIdFirewallResponseFirewall;
}

export class GetFirewallsIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The `firewall` key contains a Firewall object
   */
  @SpeakeasyMetadata()
  firewallResponse?: GetFirewallsIdFirewallResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
