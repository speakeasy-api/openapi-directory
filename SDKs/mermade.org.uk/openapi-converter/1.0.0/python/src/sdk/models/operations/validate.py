"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import validationresult as shared_validationresult
from typing import Any, Optional


@dataclasses.dataclass
class ValidateRequestBody:
    
    filename: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'filename' }})
    r"""The file to upload and validate"""  
    source: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'source' }})
    r"""The text of an OpenAPI 3.0.x definition to validate"""  
    

@dataclasses.dataclass
class ValidateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    validate_400_application_json_any: Optional[Any] = dataclasses.field(default=None)
    r"""Invalid request"""  
    validation_result: Optional[shared_validationresult.ValidationResult] = dataclasses.field(default=None)
    r"""default"""  
    