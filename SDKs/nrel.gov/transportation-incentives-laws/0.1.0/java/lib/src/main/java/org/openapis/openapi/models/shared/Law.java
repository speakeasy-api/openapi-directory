/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.OffsetDateTime;

/**
 * Law - This is a Law
 */
public class Law {
    /**
     * The agency with primary responsibility for federal incentives/regulations.
     */
    
    public String agency;
    public Law withAgency(String agency) {
        this.agency = agency;
        return this;
    }
    
    /**
     * The date the incentive/law/regulation was updated through new legislation or rulemaking.
     */
    
    public OffsetDateTime amendedDate;
    public Law withAmendedDate(OffsetDateTime amendedDate) {
        this.amendedDate = amendedDate;
        return this;
    }
    
    /**
     * The date that an incentive/law/regulation is no longer relevant to the database. This may include longstanding Executive Orders or laws requiring legislative studies that have been completed.
     */
    
    public OffsetDateTime archivedDate;
    public Law withArchivedDate(OffsetDateTime archivedDate) {
        this.archivedDate = archivedDate;
        return this;
    }
    
    /**
     * The various law categories that apply to this law
     */
    
    public Category[] categories;
    public Law withCategories(Category[] categories) {
        this.categories = categories;
        return this;
    }
    
    /**
     * The contacts for the given law, returned only if the parameter poc is true
     */
    
    public Poc[] contacts;
    public Law withContacts(Poc[] contacts) {
        this.contacts = contacts;
        return this;
    }
    
    /**
     * The date the enacting legislation (if applicable) was signed into law.
     */
    
    public OffsetDateTime enactedDate;
    public Law withEnactedDate(OffsetDateTime enactedDate) {
        this.enactedDate = enactedDate;
        return this;
    }
    
    /**
     * The date the incentive/law/regulation is set to end.
     */
    
    public OffsetDateTime expiredDate;
    public Law withExpiredDate(OffsetDateTime expiredDate) {
        this.expiredDate = expiredDate;
        return this;
    }
    
    /**
     * A unique identifier for this specific incentive/law/regulation.
     */
    
    public Long id;
    public Law withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The true or false value used to distinguish between recent federal executive actions (TRUE) and active incentives/laws/regulations (FALSE).
     */
    
    public Boolean isRecent;
    public Law withIsRecent(Boolean isRecent) {
        this.isRecent = isRecent;
        return this;
    }
    
    /**
     * Description of the incentive/law/regulation, including applicable legislative references, in &lt;a href="https://guides.github.com/features/mastering-markdown/"&gt;markdown formatting&lt;/a&gt;
     */
    
    public String plaintext;
    public Law withPlaintext(String plaintext) {
        this.plaintext = plaintext;
        return this;
    }
    
    /**
     * An indicator if the last significant update was an update or the laws creation.
     */
    
    public String recentUpdateOrNew;
    public Law withRecentUpdateOrNew(String recentUpdateOrNew) {
        this.recentUpdateOrNew = recentUpdateOrNew;
        return this;
    }
    
    /**
     * The URL associated with any bill or legislative reference included in the description.
     */
    
    public LawReference[] references;
    public Law withReferences(LawReference[] references) {
        this.references = references;
        return this;
    }
    
    /**
     * The date legislation is enacted or a rulemaking is finalized to repeal the incentive/law/regulation.
     */
    
    public OffsetDateTime repealedDate;
    public Law withRepealedDate(OffsetDateTime repealedDate) {
        this.repealedDate = repealedDate;
        return this;
    }
    
    /**
     * The numerical value assigned to a description to show the order in which it is displayed online within a jurisdiction (state).
     */
    
    public Long seqNum;
    public Law withSeqNum(Long seqNum) {
        this.seqNum = seqNum;
        return this;
    }
    
    /**
     * When the last significant update to the law was made.
     */
    
    public OffsetDateTime significantUpdateDate;
    public Law withSignificantUpdateDate(OffsetDateTime significantUpdateDate) {
        this.significantUpdateDate = significantUpdateDate;
        return this;
    }
    
    /**
     * The state in which the incentive/law/regulation was enacted and is active.
     */
    
    public String state;
    public Law withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Description of the incentive/law/regulation, including applicable legislative references, html formated.
     */
    
    public String text;
    public Law withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The brief title assigned to the incentive/law/regulation description.
     */
    
    public String title;
    public Law withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * For local incentive/regulation descriptions, the category that the incentive/regulation falls under, described below: Infrastructure Requirements, Vehicle Purchase and Infrastructure Development Incentives, Fuel Use Incentives, Parking Incentives, Technical Assistance, Vehicle Acquisition Requirements, Promotion Initiatives, Idle Reduction Requirements, Renewable Fuels Mandates and Standards
     */
    
    public LawTopics[] topics;
    public Law withTopics(LawTopics[] topics) {
        this.topics = topics;
        return this;
    }
    
    /**
     * The category that the incentive/law/regulation falls under, described below: -State Incentives, -Laws and Regulations, -Utility/Private Incentives
     */
    
    public String type;
    public Law withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * The types that apply to this law
     */
    
    public LawType[] types;
    public Law withTypes(LawType[] types) {
        this.types = types;
        return this;
    }
    
}
