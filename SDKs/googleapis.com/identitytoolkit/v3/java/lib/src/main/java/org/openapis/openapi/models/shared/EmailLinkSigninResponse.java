/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EmailLinkSigninResponse - Response of email signIn.
 */
public class EmailLinkSigninResponse {
    /**
     * The user's email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public EmailLinkSigninResponse withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Expiration time of STS id token in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiresIn")
    public String expiresIn;

    public EmailLinkSigninResponse withExpiresIn(String expiresIn) {
        this.expiresIn = expiresIn;
        return this;
    }
    
    /**
     * The STS id token to login the newly signed in user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idToken")
    public String idToken;

    public EmailLinkSigninResponse withIdToken(String idToken) {
        this.idToken = idToken;
        return this;
    }
    
    /**
     * Whether the user is new.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isNewUser")
    public Boolean isNewUser;

    public EmailLinkSigninResponse withIsNewUser(Boolean isNewUser) {
        this.isNewUser = isNewUser;
        return this;
    }
    
    /**
     * The fixed string "identitytoolkit#EmailLinkSigninResponse".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public EmailLinkSigninResponse withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The RP local ID of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localId")
    public String localId;

    public EmailLinkSigninResponse withLocalId(String localId) {
        this.localId = localId;
        return this;
    }
    
    /**
     * The refresh token for the signed in user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refreshToken")
    public String refreshToken;

    public EmailLinkSigninResponse withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
    public EmailLinkSigninResponse(){}
}
