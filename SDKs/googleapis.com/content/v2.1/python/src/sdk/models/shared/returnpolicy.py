"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import price as shared_price
from ..shared import returnpolicypolicy as shared_returnpolicypolicy
from ..shared import returnpolicyseasonaloverride as shared_returnpolicyseasonaloverride
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReturnPolicy:
    r"""Return policy resource."""
    
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""Required. The country of sale where the return policy is applicable."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"`content#returnPolicy`\\" """  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""Required. The user-defined label of the return policy. For the default policy, use the label \\"default\\"."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the policy as shown in Merchant Center."""  
    non_free_return_reasons: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nonFreeReturnReasons'), 'exclude': lambda f: f is None }})
    r"""Return reasons that will incur return fees."""  
    policy: Optional[shared_returnpolicypolicy.ReturnPolicyPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy'), 'exclude': lambda f: f is None }})  
    return_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnPolicyId'), 'exclude': lambda f: f is None }})
    r"""Return policy ID generated by Google."""  
    return_shipping_fee: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnShippingFee'), 'exclude': lambda f: f is None }})  
    seasonal_overrides: Optional[list[shared_returnpolicyseasonaloverride.ReturnPolicySeasonalOverride]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seasonalOverrides'), 'exclude': lambda f: f is None }})
    r"""An optional list of seasonal overrides."""  
    