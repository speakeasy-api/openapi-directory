// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListAliasesXAmzTargetEnum
type ListAliasesXAmzTargetEnum string

const (
	ListAliasesXAmzTargetEnumGameLiftListAliases ListAliasesXAmzTargetEnum = "GameLift.ListAliases"
)

func (e ListAliasesXAmzTargetEnum) ToPointer() *ListAliasesXAmzTargetEnum {
	return &e
}

func (e *ListAliasesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GameLift.ListAliases":
		*e = ListAliasesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAliasesXAmzTargetEnum: %v", v)
	}
}

type ListAliasesRequest struct {
	// Pagination limit
	Limit            *string                 `queryParam:"style=form,explode=true,name=Limit"`
	ListAliasesInput shared.ListAliasesInput `request:"mediaType=application/json"`
	// Pagination token
	NextToken         *string                   `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListAliasesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListAliasesResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListAliasesOutput *shared.ListAliasesOutput
	StatusCode        int
	RawResponse       *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
}
