/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MetricUpdate - Describes the state of a metric.
 */
public class MetricUpdate {
    /**
     * True if this metric is reported as the total cumulative aggregate value accumulated since the worker started working on this WorkItem. By default this is false, indicating that this metric is reported as a delta that is not associated with any WorkItem.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cumulative")
    public Boolean cumulative;
    public MetricUpdate withCumulative(Boolean cumulative) {
        this.cumulative = cumulative;
        return this;
    }
    
    /**
     * A struct value describing properties of a distribution of numeric values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distribution")
    public Object distribution;
    public MetricUpdate withDistribution(Object distribution) {
        this.distribution = distribution;
        return this;
    }
    
    /**
     * A struct value describing properties of a Gauge. Metrics of gauge type show the value of a metric across time, and is aggregated based on the newest value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gauge")
    public Object gauge;
    public MetricUpdate withGauge(Object gauge) {
        this.gauge = gauge;
        return this;
    }
    
    /**
     * Worker-computed aggregate value for internal use by the Dataflow service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internal")
    public Object internal;
    public MetricUpdate withInternal(Object internal) {
        this.internal = internal;
        return this;
    }
    
    /**
     * Metric aggregation kind. The possible metric aggregation kinds are "Sum", "Max", "Min", "Mean", "Set", "And", "Or", and "Distribution". The specified aggregation kind is case-insensitive. If omitted, this is not an aggregated value but instead a single metric sample value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public MetricUpdate withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Worker-computed aggregate value for the "Mean" aggregation kind. This holds the count of the aggregated values and is used in combination with mean_sum above to obtain the actual mean aggregate value. The only possible value type is Long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meanCount")
    public Object meanCount;
    public MetricUpdate withMeanCount(Object meanCount) {
        this.meanCount = meanCount;
        return this;
    }
    
    /**
     * Worker-computed aggregate value for the "Mean" aggregation kind. This holds the sum of the aggregated values and is used in combination with mean_count below to obtain the actual mean aggregate value. The only possible value types are Long and Double.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meanSum")
    public Object meanSum;
    public MetricUpdate withMeanSum(Object meanSum) {
        this.meanSum = meanSum;
        return this;
    }
    
    /**
     * Identifies a metric, by describing the source which generated the metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public MetricStructuredName name;
    public MetricUpdate withName(MetricStructuredName name) {
        this.name = name;
        return this;
    }
    
    /**
     * Worker-computed aggregate value for aggregation kinds "Sum", "Max", "Min", "And", and "Or". The possible value types are Long, Double, and Boolean.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scalar")
    public Object scalar;
    public MetricUpdate withScalar(Object scalar) {
        this.scalar = scalar;
        return this;
    }
    
    /**
     * Worker-computed aggregate value for the "Set" aggregation kind. The only possible value type is a list of Values whose type can be Long, Double, or String, according to the metric's type. All Values in the list must be of the same type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("set")
    public Object set;
    public MetricUpdate withSet(Object set) {
        this.set = set;
        return this;
    }
    
    /**
     * Timestamp associated with the metric value. Optional when workers are reporting work progress; it will be filled in responses from the metrics API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public MetricUpdate withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
