/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PatchesSchema - A JSON patch operation
 */
public class PatchesSchema {
    /**
     * JSON patch operation type
     */
    @JsonProperty("op")
    public PatchesSchemaOpEnum op;
    public PatchesSchema withOp(PatchesSchemaOpEnum op) {
        this.op = op;
        return this;
    }
    
    /**
     * A [JSON pointer](https://tools.ietf.org/html/rfc6901) to a location within the target document where the operation is performed.
     * 
     * The *effective path* is this value prefixed with the API call's `path` parameter.
     * 
     * The server will return a *bad request* (404) response if:
     * 
     * - The *parent* of the effective path does not refer to an existing document
     * - For **remove** and **replace** operations, the effective path does not refer to an existing document.
     */
    @JsonProperty("path")
    public String path;
    public PatchesSchema withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * The value to add, replace or test.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public java.util.Map<String, Object> value;
    public PatchesSchema withValue(java.util.Map<String, Object> value) {
        this.value = value;
        return this;
    }
    
}
