"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Quaternion:
    r"""A [Quaternion](//en.wikipedia.org/wiki/Quaternion). Please note: if in the response you see \\"w: 1\\" and nothing else this is the default value of [0, 0, 0, 1] where x,y, and z are 0."""
    
    w: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('w'), 'exclude': lambda f: f is None }})
    r"""The scalar component."""  
    x: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('x'), 'exclude': lambda f: f is None }})
    r"""The x component."""  
    y: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('y'), 'exclude': lambda f: f is None }})
    r"""The y component."""  
    z: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('z'), 'exclude': lambda f: f is None }})
    r"""The z component."""  
    