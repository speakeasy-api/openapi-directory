"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EBSResourceUtilization:
    r"""The EBS field that contains a list of EBS metrics that are associated with the current instance."""
    
    ebs_read_bytes_per_second: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EbsReadBytesPerSecond'), 'exclude': lambda f: f is None }})  
    ebs_read_ops_per_second: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EbsReadOpsPerSecond'), 'exclude': lambda f: f is None }})  
    ebs_write_bytes_per_second: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EbsWriteBytesPerSecond'), 'exclude': lambda f: f is None }})  
    ebs_write_ops_per_second: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EbsWriteOpsPerSecond'), 'exclude': lambda f: f is None }})  
    