/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetCallQoSRequest extends SpeakeasyBase {
  /**
   * Unique identifier of the call.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=callId",
  })
  callId: string;
}

export class GetCallQoS200ApplicationXMLCalleeQosReceivingQos extends SpeakeasyBase {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  avgLoss?: string;

  /**
   * The number of bits per second in kbps that can be transmitted along a digital network.
   */
  @SpeakeasyMetadata()
  bitrate?: string;

  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  @SpeakeasyMetadata()
  jitter?: string;

  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  maxLoss?: string;

  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  @SpeakeasyMetadata()
  mos?: string;

  /**
   * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
   */
  @SpeakeasyMetadata()
  networkDelay?: string;
}

export class GetCallQoS200ApplicationXMLCalleeQosReceiving extends SpeakeasyBase {
  /**
   * Date and time at which the QoS was received.
   */
  @SpeakeasyMetadata()
  dateTime?: Date;

  @SpeakeasyMetadata()
  qos?: GetCallQoS200ApplicationXMLCalleeQosReceivingQos;
}

export class GetCallQoS200ApplicationXMLCalleeQosSendingQos extends SpeakeasyBase {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  avgLoss?: string;

  /**
   * The number of bits per second expressed in kbps that can be transmitted along a digital network.
   */
  @SpeakeasyMetadata()
  bitrate?: string;

  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  @SpeakeasyMetadata()
  jitter?: string;

  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  maxLoss?: string;

  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  @SpeakeasyMetadata()
  mos?: string;

  /**
   * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
   */
  @SpeakeasyMetadata()
  networkDelay?: string;
}

export class GetCallQoS200ApplicationXMLCalleeQosSending extends SpeakeasyBase {
  /**
   * Date and time at which the QoS was delivered.
   */
  @SpeakeasyMetadata()
  dateTime?: Date;

  @SpeakeasyMetadata()
  qos?: GetCallQoS200ApplicationXMLCalleeQosSendingQos;
}

export class GetCallQoS200ApplicationXMLCalleeQos extends SpeakeasyBase {
  /**
   * QoS received by the callee.
   */
  @SpeakeasyMetadata({
    elemType: GetCallQoS200ApplicationXMLCalleeQosReceiving,
  })
  receiving?: GetCallQoS200ApplicationXMLCalleeQosReceiving[];

  /**
   * QoS sent by the callee.
   */
  @SpeakeasyMetadata({ elemType: GetCallQoS200ApplicationXMLCalleeQosSending })
  sending?: GetCallQoS200ApplicationXMLCalleeQosSending[];
}

export class GetCallQoS200ApplicationXMLCallerQosReceivingQos extends SpeakeasyBase {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  avgLoss?: string;

  /**
   * The number of bits per second in kbps that can be transmitted along a digital network.
   */
  @SpeakeasyMetadata()
  bitrate?: string;

  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  @SpeakeasyMetadata()
  jitter?: string;

  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  maxLoss?: string;

  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  @SpeakeasyMetadata()
  mos?: string;

  /**
   * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
   */
  @SpeakeasyMetadata()
  networkDelay?: string;
}

export class GetCallQoS200ApplicationXMLCallerQosReceiving extends SpeakeasyBase {
  /**
   * Date and time at which the QoS was received.
   */
  @SpeakeasyMetadata()
  dateTime?: Date;

  @SpeakeasyMetadata()
  qos?: GetCallQoS200ApplicationXMLCallerQosReceivingQos;
}

export class GetCallQoS200ApplicationXMLCallerQosSendingQos extends SpeakeasyBase {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  avgLoss?: string;

  /**
   * The number of bits per second in kbps that can be transmitted along a digital network.
   */
  @SpeakeasyMetadata()
  bitrate?: string;

  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  @SpeakeasyMetadata()
  jitter?: string;

  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  maxLoss?: string;

  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  @SpeakeasyMetadata()
  mos?: string;

  /**
   * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
   */
  @SpeakeasyMetadata()
  networkDelay?: string;
}

export class GetCallQoS200ApplicationXMLCallerQosSending extends SpeakeasyBase {
  /**
   * Date and time at which the QoS was delivered.
   */
  @SpeakeasyMetadata()
  dateTime?: Date;

  @SpeakeasyMetadata()
  qos?: GetCallQoS200ApplicationXMLCallerQosSendingQos;
}

/**
 * Quality of Service object that represents the call quality data of the caller.
 */
export class GetCallQoS200ApplicationXMLCallerQos extends SpeakeasyBase {
  /**
   * QoS received by the caller.
   */
  @SpeakeasyMetadata({
    elemType: GetCallQoS200ApplicationXMLCallerQosReceiving,
  })
  receiving?: GetCallQoS200ApplicationXMLCallerQosReceiving[];

  /**
   * QoS sent by the caller.
   */
  @SpeakeasyMetadata({ elemType: GetCallQoS200ApplicationXMLCallerQosSending })
  sending?: GetCallQoS200ApplicationXMLCallerQosSending[];
}

export class GetCallQoS200ApplicationXML extends SpeakeasyBase {
  /**
   * Unique identifier of the phone call.
   */
  @SpeakeasyMetadata()
  callId?: string;

  @SpeakeasyMetadata()
  calleeQos?: GetCallQoS200ApplicationXMLCalleeQos;

  /**
   * Quality of Service object that represents the call quality data of the caller.
   */
  @SpeakeasyMetadata()
  callerQos?: GetCallQoS200ApplicationXMLCallerQos;
}

export class GetCallQoS200ApplicationJSONCalleeQosReceivingQos extends SpeakeasyBase {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avg_loss" })
  avgLoss?: string;

  /**
   * The number of bits per second in kbps that can be transmitted along a digital network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bitrate" })
  bitrate?: string;

  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jitter" })
  jitter?: string;

  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_loss" })
  maxLoss?: string;

  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mos" })
  mos?: string;

  /**
   * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network_delay" })
  networkDelay?: string;
}

export class GetCallQoS200ApplicationJSONCalleeQosReceiving extends SpeakeasyBase {
  /**
   * Date and time at which the QoS was received.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "qos" })
  @Type(() => GetCallQoS200ApplicationJSONCalleeQosReceivingQos)
  qos?: GetCallQoS200ApplicationJSONCalleeQosReceivingQos;
}

export class GetCallQoS200ApplicationJSONCalleeQosSendingQos extends SpeakeasyBase {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avg_loss" })
  avgLoss?: string;

  /**
   * The number of bits per second expressed in kbps that can be transmitted along a digital network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bitrate" })
  bitrate?: string;

  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jitter" })
  jitter?: string;

  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_loss" })
  maxLoss?: string;

  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mos" })
  mos?: string;

  /**
   * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network_delay" })
  networkDelay?: string;
}

export class GetCallQoS200ApplicationJSONCalleeQosSending extends SpeakeasyBase {
  /**
   * Date and time at which the QoS was delivered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "qos" })
  @Type(() => GetCallQoS200ApplicationJSONCalleeQosSendingQos)
  qos?: GetCallQoS200ApplicationJSONCalleeQosSendingQos;
}

export class GetCallQoS200ApplicationJSONCalleeQos extends SpeakeasyBase {
  /**
   * QoS received by the callee.
   */
  @SpeakeasyMetadata({
    elemType: GetCallQoS200ApplicationJSONCalleeQosReceiving,
  })
  @Expose({ name: "receiving" })
  @Type(() => GetCallQoS200ApplicationJSONCalleeQosReceiving)
  receiving?: GetCallQoS200ApplicationJSONCalleeQosReceiving[];

  /**
   * QoS sent by the callee.
   */
  @SpeakeasyMetadata({ elemType: GetCallQoS200ApplicationJSONCalleeQosSending })
  @Expose({ name: "sending" })
  @Type(() => GetCallQoS200ApplicationJSONCalleeQosSending)
  sending?: GetCallQoS200ApplicationJSONCalleeQosSending[];
}

export class GetCallQoS200ApplicationJSONCallerQosReceivingQos extends SpeakeasyBase {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avg_loss" })
  avgLoss?: string;

  /**
   * The number of bits per second in kbps that can be transmitted along a digital network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bitrate" })
  bitrate?: string;

  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jitter" })
  jitter?: string;

  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_loss" })
  maxLoss?: string;

  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mos" })
  mos?: string;

  /**
   * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network_delay" })
  networkDelay?: string;
}

export class GetCallQoS200ApplicationJSONCallerQosReceiving extends SpeakeasyBase {
  /**
   * Date and time at which the QoS was received.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "qos" })
  @Type(() => GetCallQoS200ApplicationJSONCallerQosReceivingQos)
  qos?: GetCallQoS200ApplicationJSONCallerQosReceivingQos;
}

export class GetCallQoS200ApplicationJSONCallerQosSendingQos extends SpeakeasyBase {
  /**
   * The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avg_loss" })
  avgLoss?: string;

  /**
   * The number of bits per second in kbps that can be transmitted along a digital network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bitrate" })
  bitrate?: string;

  /**
   * The variation in the delay of received packets. The value of this field is expressed in milliseconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jitter" })
  jitter?: string;

  /**
   * The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_loss" })
  maxLoss?: string;

  /**
   * Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mos" })
  mos?: string;

  /**
   * The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network_delay" })
  networkDelay?: string;
}

export class GetCallQoS200ApplicationJSONCallerQosSending extends SpeakeasyBase {
  /**
   * Date and time at which the QoS was delivered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "qos" })
  @Type(() => GetCallQoS200ApplicationJSONCallerQosSendingQos)
  qos?: GetCallQoS200ApplicationJSONCallerQosSendingQos;
}

/**
 * Quality of Service object that represents the call quality data of the caller.
 */
export class GetCallQoS200ApplicationJSONCallerQos extends SpeakeasyBase {
  /**
   * QoS received by the caller.
   */
  @SpeakeasyMetadata({
    elemType: GetCallQoS200ApplicationJSONCallerQosReceiving,
  })
  @Expose({ name: "receiving" })
  @Type(() => GetCallQoS200ApplicationJSONCallerQosReceiving)
  receiving?: GetCallQoS200ApplicationJSONCallerQosReceiving[];

  /**
   * QoS sent by the caller.
   */
  @SpeakeasyMetadata({ elemType: GetCallQoS200ApplicationJSONCallerQosSending })
  @Expose({ name: "sending" })
  @Type(() => GetCallQoS200ApplicationJSONCallerQosSending)
  sending?: GetCallQoS200ApplicationJSONCallerQosSending[];
}

export class GetCallQoS200ApplicationJSON extends SpeakeasyBase {
  /**
   * Unique identifier of the phone call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_id" })
  callId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "callee_qos" })
  @Type(() => GetCallQoS200ApplicationJSONCalleeQos)
  calleeQos?: GetCallQoS200ApplicationJSONCalleeQos;

  /**
   * Quality of Service object that represents the call quality data of the caller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_qos" })
  @Type(() => GetCallQoS200ApplicationJSONCallerQos)
  callerQos?: GetCallQoS200ApplicationJSONCallerQos;
}

export class GetCallQoSResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  getCallQoS200ApplicationJSONObject?: GetCallQoS200ApplicationJSON;
}
