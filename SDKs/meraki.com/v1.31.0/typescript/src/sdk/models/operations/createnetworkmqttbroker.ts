/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * TLS settings of the MQTT broker.
 */
export class CreateNetworkMqttBrokerRequestBodySecuritySecurity extends SpeakeasyBase {
  /**
   * CA Certificate of the MQTT broker.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caCertificate" })
  caCertificate?: string;

  /**
   * Whether the TLS hostname verification is enabled for the MQTT broker.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verifyHostnames" })
  verifyHostnames?: boolean;
}

/**
 * Security settings of the MQTT broker.
 */
export class CreateNetworkMqttBrokerRequestBodySecurity extends SpeakeasyBase {
  /**
   * Security protocol of the MQTT broker.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mode" })
  mode?: string;

  /**
   * TLS settings of the MQTT broker.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "security" })
  @Type(() => CreateNetworkMqttBrokerRequestBodySecuritySecurity)
  security?: CreateNetworkMqttBrokerRequestBodySecuritySecurity;
}

export class CreateNetworkMqttBrokerRequestBody extends SpeakeasyBase {
  /**
   * Authentication settings of the MQTT broker
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  authentication?: Record<string, any>;

  /**
   * Host name/IP address where the MQTT broker runs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  host: string;

  /**
   * Name of the MQTT broker.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Host port though which the MQTT broker can be reached.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port: number;

  /**
   * Security settings of the MQTT broker.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "security" })
  @Type(() => CreateNetworkMqttBrokerRequestBodySecurity)
  security?: CreateNetworkMqttBrokerRequestBodySecurity;
}

export class CreateNetworkMqttBrokerRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateNetworkMqttBrokerRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class CreateNetworkMqttBrokerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createNetworkMqttBroker201ApplicationJSONObject?: Record<string, any>;
}
