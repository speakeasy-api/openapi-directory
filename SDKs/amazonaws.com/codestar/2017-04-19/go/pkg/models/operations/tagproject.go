// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TagProjectXAmzTargetEnum
type TagProjectXAmzTargetEnum string

const (
	TagProjectXAmzTargetEnumCodeStar20170419TagProject TagProjectXAmzTargetEnum = "CodeStar_20170419.TagProject"
)

func (e TagProjectXAmzTargetEnum) ToPointer() *TagProjectXAmzTargetEnum {
	return &e
}

func (e *TagProjectXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeStar_20170419.TagProject":
		*e = TagProjectXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TagProjectXAmzTargetEnum: %v", v)
	}
}

type TagProjectRequest struct {
	TagProjectRequest shared.TagProjectRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        TagProjectXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type TagProjectResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// LimitExceededException
	LimitExceededException interface{}
	// ProjectNotFoundException
	ProjectNotFoundException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// Success
	TagProjectResult *shared.TagProjectResult
	// ValidationException
	ValidationException interface{}
}
