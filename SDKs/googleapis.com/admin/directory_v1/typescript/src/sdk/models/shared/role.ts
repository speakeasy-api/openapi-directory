/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class RoleRolePrivileges extends SpeakeasyBase {
  /**
   * The name of the privilege.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privilegeName" })
  privilegeName?: string;

  /**
   * The obfuscated ID of the service this privilege is for. This value is returned with [`Privileges.list()`](/admin-sdk/directory/v1/reference/privileges/list).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceId" })
  serviceId?: string;
}

/**
 * Successful response
 */
export class Role extends SpeakeasyBase {
  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Returns `true` if the role is a super admin role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSuperAdminRole" })
  isSuperAdminRole?: boolean;

  /**
   * Returns `true` if this is a pre-defined system role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSystemRole" })
  isSystemRole?: boolean;

  /**
   * The type of the API resource. This is always `admin#directory#role`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * A short description of the role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleDescription" })
  roleDescription?: string;

  /**
   * ID of the role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleId" })
  roleId?: string;

  /**
   * Name of the role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleName" })
  roleName?: string;

  /**
   * The set of privileges that are granted to this role.
   */
  @SpeakeasyMetadata({ elemType: RoleRolePrivileges })
  @Expose({ name: "rolePrivileges" })
  @Type(() => RoleRolePrivileges)
  rolePrivileges?: RoleRolePrivileges[];
}
