"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import date_ as shared_date_
from ..shared import integer as shared_integer
from ..shared import selection as shared_selection
from ..shared import selectionlist as shared_selectionlist
from ..shared import singleuser as shared_singleuser
from ..shared import text as shared_text
from ..shared import textlist as shared_textlist
from ..shared import userlist as shared_userlist
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FieldValue:
    r"""Contains a value of a Field."""
    
    date_: Optional[shared_date_.Date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'exclude': lambda f: f is None }})
    r"""Wrapper for Date Field value."""  
    integer: Optional[shared_integer.Integer] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integer'), 'exclude': lambda f: f is None }})
    r"""Wrapper for Integer Field value."""  
    selection: Optional[shared_selection.Selection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selection'), 'exclude': lambda f: f is None }})
    r"""Wrapper for Selection Field value as combined value/display_name pair for selected choice."""  
    selection_list: Optional[shared_selectionlist.SelectionList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selectionList'), 'exclude': lambda f: f is None }})
    r"""Wrapper for SelectionList Field value."""  
    text: Optional[shared_text.Text] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""Wrapper for Text Field value."""  
    text_list: Optional[shared_textlist.TextList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textList'), 'exclude': lambda f: f is None }})
    r"""Wrapper for Text List Field value."""  
    user: Optional[shared_singleuser.SingleUser] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})
    r"""Wrapper for User Field value."""  
    user_list: Optional[shared_userlist.UserList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userList'), 'exclude': lambda f: f is None }})
    r"""Wrapper for UserList Field value."""  
    