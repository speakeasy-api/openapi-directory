/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillTo } from "./billto";
import { LineItem } from "./lineitem";
import { OrderPricing } from "./orderpricing";
import { Payment } from "./payment";
import { Expose, Type } from "class-transformer";

/**
 * Request was successful
 */
export class Order extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "billTo" })
  @Type(() => BillTo)
  billTo: BillTo;

  /**
   * Date and time when the current order is created on
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt: string;

  /**
   * Currency in which the order has been placed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  @SpeakeasyMetadata({ elemType: LineItem })
  @Expose({ name: "items" })
  @Type(() => LineItem)
  items: LineItem[];

  /**
   * Unique identifier of current order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderId" })
  orderId: string;

  /**
   * Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.
   *
   * @remarks
   * The orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentOrderId" })
  parentOrderId?: string;

  @SpeakeasyMetadata({ elemType: Payment })
  @Expose({ name: "payments" })
  @Type(() => Payment)
  payments: Payment[];

  @SpeakeasyMetadata()
  @Expose({ name: "pricing" })
  @Type(() => OrderPricing)
  pricing: OrderPricing;
}
