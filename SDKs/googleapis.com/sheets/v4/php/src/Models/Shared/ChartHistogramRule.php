<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ChartHistogramRule - Allows you to organize numeric values in a source data column into buckets of constant size.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ChartHistogramRule
{
    /**
     * The size of the buckets that are created. Must be positive.
     * 
     * @var ?float $intervalSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('intervalSize')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $intervalSize = null;
    
    /**
     * The maximum value at which items are placed into buckets. Values greater than the maximum are grouped into a single bucket. If omitted, it is determined by the maximum item value.
     * 
     * @var ?float $maxValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maxValue = null;
    
    /**
     * The minimum value at which items are placed into buckets. Values that are less than the minimum are grouped into a single bucket. If omitted, it is determined by the minimum item value.
     * 
     * @var ?float $minValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('minValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $minValue = null;
    
	public function __construct()
	{
		$this->intervalSize = null;
		$this->maxValue = null;
		$this->minValue = null;
	}
}
