<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class QueryMssqlMountRequest
{
    /**
     * Sets the maximum number of a elements to include in the data array of the response.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Filters by the name of the mounted SQL Server database using infix search.
     * 
     * @var ?string $mountedDatabaseName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=mounted_database_name')]
    public ?string $mountedDatabaseName = null;
    
    /**
     * Returns the portion of the ordered list that starts after the element specified by the offset number.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Specifies the SQL Server Live Mount attribute to use in sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\QueryMssqlMountSortByEnum $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?QueryMssqlMountSortByEnum $sortBy = null;
    
    /**
     * Specifies the sort order, either ascending or descending. Default order is ascending.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\QueryMssqlMountSortOrderEnum $sortOrder
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_order')]
    public ?QueryMssqlMountSortOrderEnum $sortOrder = null;
    
    /**
     * Filters by the ID of the source SQL Server database.
     * 
     * @var ?string $sourceDatabaseId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=source_database_id')]
    public ?string $sourceDatabaseId = null;
    
    /**
     * Filters by the name of the source SQL Server database using infix search.
     * 
     * @var ?string $sourceDatabaseName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=source_database_name')]
    public ?string $sourceDatabaseName = null;
    
    /**
     * Filters by the ID of the target SQL Server instance.
     * 
     * @var ?string $targetInstanceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=target_instance_id')]
    public ?string $targetInstanceId = null;
    
	public function __construct()
	{
		$this->limit = null;
		$this->mountedDatabaseName = null;
		$this->offset = null;
		$this->sortBy = null;
		$this->sortOrder = null;
		$this->sourceDatabaseId = null;
		$this->sourceDatabaseName = null;
		$this->targetInstanceId = null;
	}
}
