// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateProfileRequestBodyAddress - A generic address associated with the customer that is not mailing, shipping, or billing.
type CreateProfileRequestBodyAddress struct {
	Address1   *string `json:"Address1,omitempty"`
	Address2   *string `json:"Address2,omitempty"`
	Address3   *string `json:"Address3,omitempty"`
	Address4   *string `json:"Address4,omitempty"`
	City       *string `json:"City,omitempty"`
	Country    *string `json:"Country,omitempty"`
	County     *string `json:"County,omitempty"`
	PostalCode *string `json:"PostalCode,omitempty"`
	Province   *string `json:"Province,omitempty"`
	State      *string `json:"State,omitempty"`
}

// CreateProfileRequestBodyBillingAddress - A generic address associated with the customer that is not mailing, shipping, or billing.
type CreateProfileRequestBodyBillingAddress struct {
	Address1   *string `json:"Address1,omitempty"`
	Address2   *string `json:"Address2,omitempty"`
	Address3   *string `json:"Address3,omitempty"`
	Address4   *string `json:"Address4,omitempty"`
	City       *string `json:"City,omitempty"`
	Country    *string `json:"Country,omitempty"`
	County     *string `json:"County,omitempty"`
	PostalCode *string `json:"PostalCode,omitempty"`
	Province   *string `json:"Province,omitempty"`
	State      *string `json:"State,omitempty"`
}

// CreateProfileRequestBodyGenderEnum - The gender with which the customer identifies.
type CreateProfileRequestBodyGenderEnum string

const (
	CreateProfileRequestBodyGenderEnumMale        CreateProfileRequestBodyGenderEnum = "MALE"
	CreateProfileRequestBodyGenderEnumFemale      CreateProfileRequestBodyGenderEnum = "FEMALE"
	CreateProfileRequestBodyGenderEnumUnspecified CreateProfileRequestBodyGenderEnum = "UNSPECIFIED"
)

func (e CreateProfileRequestBodyGenderEnum) ToPointer() *CreateProfileRequestBodyGenderEnum {
	return &e
}

func (e *CreateProfileRequestBodyGenderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MALE":
		fallthrough
	case "FEMALE":
		fallthrough
	case "UNSPECIFIED":
		*e = CreateProfileRequestBodyGenderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProfileRequestBodyGenderEnum: %v", v)
	}
}

// CreateProfileRequestBodyMailingAddress - A generic address associated with the customer that is not mailing, shipping, or billing.
type CreateProfileRequestBodyMailingAddress struct {
	Address1   *string `json:"Address1,omitempty"`
	Address2   *string `json:"Address2,omitempty"`
	Address3   *string `json:"Address3,omitempty"`
	Address4   *string `json:"Address4,omitempty"`
	City       *string `json:"City,omitempty"`
	Country    *string `json:"Country,omitempty"`
	County     *string `json:"County,omitempty"`
	PostalCode *string `json:"PostalCode,omitempty"`
	Province   *string `json:"Province,omitempty"`
	State      *string `json:"State,omitempty"`
}

// CreateProfileRequestBodyPartyTypeEnum - The type of profile used to describe the customer.
type CreateProfileRequestBodyPartyTypeEnum string

const (
	CreateProfileRequestBodyPartyTypeEnumIndividual CreateProfileRequestBodyPartyTypeEnum = "INDIVIDUAL"
	CreateProfileRequestBodyPartyTypeEnumBusiness   CreateProfileRequestBodyPartyTypeEnum = "BUSINESS"
	CreateProfileRequestBodyPartyTypeEnumOther      CreateProfileRequestBodyPartyTypeEnum = "OTHER"
)

func (e CreateProfileRequestBodyPartyTypeEnum) ToPointer() *CreateProfileRequestBodyPartyTypeEnum {
	return &e
}

func (e *CreateProfileRequestBodyPartyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INDIVIDUAL":
		fallthrough
	case "BUSINESS":
		fallthrough
	case "OTHER":
		*e = CreateProfileRequestBodyPartyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProfileRequestBodyPartyTypeEnum: %v", v)
	}
}

// CreateProfileRequestBodyShippingAddress - A generic address associated with the customer that is not mailing, shipping, or billing.
type CreateProfileRequestBodyShippingAddress struct {
	Address1   *string `json:"Address1,omitempty"`
	Address2   *string `json:"Address2,omitempty"`
	Address3   *string `json:"Address3,omitempty"`
	Address4   *string `json:"Address4,omitempty"`
	City       *string `json:"City,omitempty"`
	Country    *string `json:"Country,omitempty"`
	County     *string `json:"County,omitempty"`
	PostalCode *string `json:"PostalCode,omitempty"`
	Province   *string `json:"Province,omitempty"`
	State      *string `json:"State,omitempty"`
}

type CreateProfileRequestBody struct {
	// A unique account number that you have given to the customer.
	AccountNumber *string `json:"AccountNumber,omitempty"`
	// Any additional information relevant to the customer’s profile.
	AdditionalInformation *string `json:"AdditionalInformation,omitempty"`
	// A generic address associated with the customer that is not mailing, shipping, or billing.
	Address *CreateProfileRequestBodyAddress `json:"Address,omitempty"`
	// A key value pair of attributes of a customer profile.
	Attributes map[string]string `json:"Attributes,omitempty"`
	// A generic address associated with the customer that is not mailing, shipping, or billing.
	BillingAddress *CreateProfileRequestBodyBillingAddress `json:"BillingAddress,omitempty"`
	// The customer’s birth date.
	BirthDate *string `json:"BirthDate,omitempty"`
	// The customer’s business email address.
	BusinessEmailAddress *string `json:"BusinessEmailAddress,omitempty"`
	// The name of the customer’s business.
	BusinessName *string `json:"BusinessName,omitempty"`
	// The customer’s business phone number.
	BusinessPhoneNumber *string `json:"BusinessPhoneNumber,omitempty"`
	// The customer’s email address, which has not been specified as a personal or business address.
	EmailAddress *string `json:"EmailAddress,omitempty"`
	// The customer’s first name.
	FirstName *string `json:"FirstName,omitempty"`
	// The gender with which the customer identifies.
	Gender *CreateProfileRequestBodyGenderEnum `json:"Gender,omitempty"`
	// An alternative to <code>Gender</code> which accepts any string as input.
	GenderString *string `json:"GenderString,omitempty"`
	// The customer’s home phone number.
	HomePhoneNumber *string `json:"HomePhoneNumber,omitempty"`
	// The customer’s last name.
	LastName *string `json:"LastName,omitempty"`
	// A generic address associated with the customer that is not mailing, shipping, or billing.
	MailingAddress *CreateProfileRequestBodyMailingAddress `json:"MailingAddress,omitempty"`
	// The customer’s middle name.
	MiddleName *string `json:"MiddleName,omitempty"`
	// The customer’s mobile phone number.
	MobilePhoneNumber *string `json:"MobilePhoneNumber,omitempty"`
	// The type of profile used to describe the customer.
	PartyType *CreateProfileRequestBodyPartyTypeEnum `json:"PartyType,omitempty"`
	// An alternative to <code>PartyType</code> which accepts any string as input.
	PartyTypeString *string `json:"PartyTypeString,omitempty"`
	// The customer’s personal email address.
	PersonalEmailAddress *string `json:"PersonalEmailAddress,omitempty"`
	// The customer’s phone number, which has not been specified as a mobile, home, or business number.
	PhoneNumber *string `json:"PhoneNumber,omitempty"`
	// A generic address associated with the customer that is not mailing, shipping, or billing.
	ShippingAddress *CreateProfileRequestBodyShippingAddress `json:"ShippingAddress,omitempty"`
}

type CreateProfileRequest struct {
	// The unique name of the domain.
	DomainName        string                   `pathParam:"style=simple,explode=false,name=DomainName"`
	RequestBody       CreateProfileRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateProfileResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateProfileResponse *shared.CreateProfileResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
