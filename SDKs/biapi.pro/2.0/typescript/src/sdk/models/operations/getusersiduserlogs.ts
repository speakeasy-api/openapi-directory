/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetUsersIdUserLogsRequest extends SpeakeasyBase {
  /**
   * UUID of a connector
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=connector_uuid",
  })
  connectorUuid?: string;

  /**
   * connections log error filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=error" })
  error?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  /**
   * ID of a connection
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id_connection",
  })
  idConnection?: number;

  /**
   * ID of a connector
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id_connector",
  })
  idConnector?: number;

  /**
   * filter "id" of logs, maximum id to return
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id_max",
  })
  idMax?: number;

  /**
   * ID of a source
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id_source",
  })
  idSource?: number;

  /**
   * Hint: you can use 'me' or 'all'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_user",
  })
  idUserPathParameter: string;

  /**
   * ID of a user
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id_user",
  })
  idUserQueryParameter?: number;

  /**
   * limit number of results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * maximum date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_date;dateTimeFormat=YYYY-MM-DD",
  })
  maxDate?: Date;

  /**
   * minimal date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_date;dateTimeFormat=YYYY-MM-DD",
  })
  minDate?: Date;

  /**
   * offset of first result
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * period to group logs
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=period",
  })
  period?: string;
}

/**
 * connectionlogs
 */
export class GetUsersIdUserLogs200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.ConnectionLog })
  @Expose({ name: "connectionlogs" })
  @Type(() => shared.ConnectionLog)
  connectionlogs: shared.ConnectionLog[];

  /**
   * total number of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class GetUsersIdUserLogsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * connectionlogs
   */
  @SpeakeasyMetadata()
  getUsersIdUserLogs200ApplicationJSONObject?: GetUsersIdUserLogs200ApplicationJSON;
}
