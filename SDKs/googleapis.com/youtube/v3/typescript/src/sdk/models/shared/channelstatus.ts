/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information.
 */
export enum ChannelStatusLongUploadsStatusEnum {
  LongUploadsUnspecified = "longUploadsUnspecified",
  Allowed = "allowed",
  Eligible = "eligible",
  Disallowed = "disallowed",
}

/**
 * Privacy status of the channel.
 */
export enum ChannelStatusPrivacyStatusEnum {
  Public = "public",
  Unlisted = "unlisted",
  Private = "private",
}

/**
 * JSON template for the status part of a channel.
 */
export class ChannelStatus extends SpeakeasyBase {
  /**
   * If true, then the user is linked to either a YouTube username or G+ account. Otherwise, the user doesn't have a public YouTube identity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isLinked" })
  isLinked?: boolean;

  /**
   * The long uploads status of this channel. See https://support.google.com/youtube/answer/71673 for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longUploadsStatus" })
  longUploadsStatus?: ChannelStatusLongUploadsStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "madeForKids" })
  madeForKids?: boolean;

  /**
   * Privacy status of the channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privacyStatus" })
  privacyStatus?: ChannelStatusPrivacyStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "selfDeclaredMadeForKids" })
  selfDeclaredMadeForKids?: boolean;
}
