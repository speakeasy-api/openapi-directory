// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OrderStatusEnum string

const (
	OrderStatusEnumReceived   OrderStatusEnum = "RECEIVED"
	OrderStatusEnumPending    OrderStatusEnum = "PENDING"
	OrderStatusEnumProcessing OrderStatusEnum = "PROCESSING"
	OrderStatusEnumInstalling OrderStatusEnum = "INSTALLING"
	OrderStatusEnumFulfilled  OrderStatusEnum = "FULFILLED"
	OrderStatusEnumCancelled  OrderStatusEnum = "CANCELLED"
	OrderStatusEnumPreparing  OrderStatusEnum = "PREPARING"
	OrderStatusEnumInProgress OrderStatusEnum = "IN_PROGRESS"
	OrderStatusEnumCompleted  OrderStatusEnum = "COMPLETED"
	OrderStatusEnumError      OrderStatusEnum = "ERROR"
)

func (e *OrderStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RECEIVED":
		fallthrough
	case "PENDING":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "INSTALLING":
		fallthrough
	case "FULFILLED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "PREPARING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "ERROR":
		*e = OrderStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderStatusEnum: %s", s)
	}
}
