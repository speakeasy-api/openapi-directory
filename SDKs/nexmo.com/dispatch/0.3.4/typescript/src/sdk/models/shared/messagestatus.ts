/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FromProperty } from "./fromproperty";
import { ToProperty } from "./toproperty";
import { Expose, Type } from "class-transformer";

export class MessageStatusLinksWorkflow extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dispatch_uuid" })
  dispatchUuid?: string;

  /**
   * Please note GET is not currently supported
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class MessageStatusLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "workflow" })
  @Type(() => MessageStatusLinksWorkflow)
  workflow?: MessageStatusLinksWorkflow;
}

export class MessageStatusError extends SpeakeasyBase {
  /**
   * The error code. See [our errors list](/api-errors/messages-olympus) for a list of possible errors
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: number;

  /**
   * Text describing the error. See [our errors list](/api-errors/messages-olympus) for a list of possible errors
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

/**
 * The status of the message.
 */
export enum MessageStatusStatusEnum {
  Submitted = "submitted",
  Delivered = "delivered",
  Read = "read",
  Rejected = "rejected",
  Undeliverable = "undeliverable",
}

/**
 * The charge currency in ISO 4217 format.
 */
export enum MessageStatusUsageCurrencyEnum {
  Eur = "EUR",
}

export class MessageStatusUsage extends SpeakeasyBase {
  /**
   * The charge currency in ISO 4217 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: MessageStatusUsageCurrencyEnum;

  /**
   * The charge amount as a stringified number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;
}

/**
 * The callbacks for the message status are the same as defined in the Messaging API. The only difference will be that dispatch_uuid and link will be appended.
 */
export class MessageStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => MessageStatusLinks)
  links?: MessageStatusLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => MessageStatusError)
  error?: MessageStatusError;

  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Type(() => FromProperty)
  from?: FromProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "message_uuid" })
  messageUuid?: string;

  /**
   * The status of the message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: MessageStatusStatusEnum;

  /**
   * The datetime of when the event occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Type(() => ToProperty)
  to?: ToProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  @Type(() => MessageStatusUsage)
  usage?: MessageStatusUsage;
}
