/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class BatchGetDeploymentTargetsResponse {
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.BatchGetDeploymentTargetsOutput batchGetDeploymentTargetsOutput;

    public BatchGetDeploymentTargetsResponse withBatchGetDeploymentTargetsOutput(org.openapis.openapi.models.shared.BatchGetDeploymentTargetsOutput batchGetDeploymentTargetsOutput) {
        this.batchGetDeploymentTargetsOutput = batchGetDeploymentTargetsOutput;
        return this;
    }
    
    
    public String contentType;

    public BatchGetDeploymentTargetsResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DeploymentDoesNotExistException
     */
    
    public Object deploymentDoesNotExistException;

    public BatchGetDeploymentTargetsResponse withDeploymentDoesNotExistException(Object deploymentDoesNotExistException) {
        this.deploymentDoesNotExistException = deploymentDoesNotExistException;
        return this;
    }
    
    /**
     * DeploymentIdRequiredException
     */
    
    public Object deploymentIdRequiredException;

    public BatchGetDeploymentTargetsResponse withDeploymentIdRequiredException(Object deploymentIdRequiredException) {
        this.deploymentIdRequiredException = deploymentIdRequiredException;
        return this;
    }
    
    /**
     * DeploymentNotStartedException
     */
    
    public Object deploymentNotStartedException;

    public BatchGetDeploymentTargetsResponse withDeploymentNotStartedException(Object deploymentNotStartedException) {
        this.deploymentNotStartedException = deploymentNotStartedException;
        return this;
    }
    
    /**
     * DeploymentTargetDoesNotExistException
     */
    
    public Object deploymentTargetDoesNotExistException;

    public BatchGetDeploymentTargetsResponse withDeploymentTargetDoesNotExistException(Object deploymentTargetDoesNotExistException) {
        this.deploymentTargetDoesNotExistException = deploymentTargetDoesNotExistException;
        return this;
    }
    
    /**
     * DeploymentTargetIdRequiredException
     */
    
    public Object deploymentTargetIdRequiredException;

    public BatchGetDeploymentTargetsResponse withDeploymentTargetIdRequiredException(Object deploymentTargetIdRequiredException) {
        this.deploymentTargetIdRequiredException = deploymentTargetIdRequiredException;
        return this;
    }
    
    /**
     * DeploymentTargetListSizeExceededException
     */
    
    public Object deploymentTargetListSizeExceededException;

    public BatchGetDeploymentTargetsResponse withDeploymentTargetListSizeExceededException(Object deploymentTargetListSizeExceededException) {
        this.deploymentTargetListSizeExceededException = deploymentTargetListSizeExceededException;
        return this;
    }
    
    /**
     * InstanceDoesNotExistException
     */
    
    public Object instanceDoesNotExistException;

    public BatchGetDeploymentTargetsResponse withInstanceDoesNotExistException(Object instanceDoesNotExistException) {
        this.instanceDoesNotExistException = instanceDoesNotExistException;
        return this;
    }
    
    /**
     * InvalidDeploymentIdException
     */
    
    public Object invalidDeploymentIdException;

    public BatchGetDeploymentTargetsResponse withInvalidDeploymentIdException(Object invalidDeploymentIdException) {
        this.invalidDeploymentIdException = invalidDeploymentIdException;
        return this;
    }
    
    /**
     * InvalidDeploymentTargetIdException
     */
    
    public Object invalidDeploymentTargetIdException;

    public BatchGetDeploymentTargetsResponse withInvalidDeploymentTargetIdException(Object invalidDeploymentTargetIdException) {
        this.invalidDeploymentTargetIdException = invalidDeploymentTargetIdException;
        return this;
    }
    
    
    public Integer statusCode;

    public BatchGetDeploymentTargetsResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public BatchGetDeploymentTargetsResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public BatchGetDeploymentTargetsResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
