"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StepExecution = void 0;
var utils_1 = require("../../../internal/utils");
var alarmstateinformation_1 = require("./alarmstateinformation");
var automationexecutionstatusenum_1 = require("./automationexecutionstatusenum");
var failuredetails_1 = require("./failuredetails");
var target_1 = require("./target");
var targetlocation_1 = require("./targetlocation");
var class_transformer_1 = require("class-transformer");
/**
 * Detailed information about an the execution state of an Automation step.
 */
var StepExecution = /** @class */ (function (_super) {
    __extends(StepExecution, _super);
    function StepExecution() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Action" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ExecutionEndTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], StepExecution.prototype, "executionEndTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ExecutionStartTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], StepExecution.prototype, "executionStartTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FailureDetails" }),
        (0, class_transformer_1.Type)(function () { return failuredetails_1.FailureDetails; }),
        __metadata("design:type", failuredetails_1.FailureDetails)
    ], StepExecution.prototype, "failureDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FailureMessage" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "failureMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Inputs" }),
        __metadata("design:type", Object)
    ], StepExecution.prototype, "inputs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsCritical" }),
        __metadata("design:type", Boolean)
    ], StepExecution.prototype, "isCritical", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsEnd" }),
        __metadata("design:type", Boolean)
    ], StepExecution.prototype, "isEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaxAttempts" }),
        __metadata("design:type", Number)
    ], StepExecution.prototype, "maxAttempts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "NextStep" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "nextStep", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "OnFailure" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "onFailure", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Outputs" }),
        __metadata("design:type", Object)
    ], StepExecution.prototype, "outputs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "OverriddenParameters" }),
        __metadata("design:type", Object)
    ], StepExecution.prototype, "overriddenParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Response" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "response", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ResponseCode" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "responseCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StepExecutionId" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "stepExecutionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StepName" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "stepName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StepStatus" }),
        __metadata("design:type", String)
    ], StepExecution.prototype, "stepStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TargetLocation" }),
        (0, class_transformer_1.Type)(function () { return targetlocation_1.TargetLocation; }),
        __metadata("design:type", targetlocation_1.TargetLocation)
    ], StepExecution.prototype, "targetLocation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: target_1.Target }),
        (0, class_transformer_1.Expose)({ name: "Targets" }),
        (0, class_transformer_1.Type)(function () { return target_1.Target; }),
        __metadata("design:type", Array)
    ], StepExecution.prototype, "targets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TimeoutSeconds" }),
        __metadata("design:type", Number)
    ], StepExecution.prototype, "timeoutSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: alarmstateinformation_1.AlarmStateInformation }),
        (0, class_transformer_1.Expose)({ name: "TriggeredAlarms" }),
        (0, class_transformer_1.Type)(function () { return alarmstateinformation_1.AlarmStateInformation; }),
        __metadata("design:type", Array)
    ], StepExecution.prototype, "triggeredAlarms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ValidNextSteps" }),
        __metadata("design:type", Array)
    ], StepExecution.prototype, "validNextSteps", void 0);
    return StepExecution;
}(utils_1.SpeakeasyBase));
exports.StepExecution = StepExecution;
