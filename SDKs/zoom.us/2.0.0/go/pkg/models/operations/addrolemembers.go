// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type AddRoleMembersSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type AddRoleMembersPathParams struct {
	// The role ID
	RoleID string `pathParam:"style=simple,explode=false,name=roleId"`
}

type AddRoleMembersApplicationJSONMembers struct {
	// Email address of the user to whom you would like to assign the role. Provide either the userId in the ID field or the email address in the email field. If both fields are provided, only userId is used.
	Email *string `json:"email,omitempty"`
	// User ID of the user to whom you would like to assign the role.
	ID *string `json:"id,omitempty"`
}

// AddRoleMembersApplicationJSON - Role members
type AddRoleMembersApplicationJSON struct {
	// Array of userId/user email of users to whom you would like to assign this role. Upto 30 users can be assigned a role at once.
	Members []AddRoleMembersApplicationJSONMembers `json:"members,omitempty"`
}

type AddRoleMembersRequest struct {
	PathParams AddRoleMembersPathParams
	// Role members
	Request  AddRoleMembersApplicationJSON `request:"mediaType=application/json"`
	Security AddRoleMembersSecurity
}

// AddRoleMembers201ApplicationXML - **HTTP Status Code:** `201`<br>Members Added
type AddRoleMembers201ApplicationXML struct {
	// Date and time at which the members are assigned to the role.
	AddAt *time.Time
	// User ID
	Ids *string
}

// AddRoleMembers201ApplicationJSON - **HTTP Status Code:** `201`<br>Members Added
type AddRoleMembers201ApplicationJSON struct {
	// Date and time at which the members are assigned to the role.
	AddAt *time.Time `json:"add_at,omitempty"`
	// User ID
	Ids *string `json:"ids,omitempty"`
}

type AddRoleMembersResponse struct {
	// **HTTP Status Code:** `201`<br>Members Added
	AddRoleMembers201ApplicationJSONObject *AddRoleMembers201ApplicationJSON
	Body                                   []byte
	ContentType                            string
	Headers                                map[string][]string
	StatusCode                             int
	RawResponse                            *http.Response
}
