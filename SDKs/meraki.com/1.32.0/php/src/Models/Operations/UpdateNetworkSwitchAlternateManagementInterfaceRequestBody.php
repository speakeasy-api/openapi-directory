<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateNetworkSwitchAlternateManagementInterfaceRequestBody
{
    /**
     * Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * Can be one or more of the following values: 'radius', 'snmp' or 'syslog'
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum> $protocols
     */
	#[\JMS\Serializer\Annotation\SerializedName('protocols')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $protocols = null;
    
    /**
     * Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put 'switches' in the body when updating template networks. Also, an empty 'switches' array will remove all previous assignments
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAlternateManagementInterfaceRequestBodySwitches> $switches
     */
	#[\JMS\Serializer\Annotation\SerializedName('switches')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchAlternateManagementInterfaceRequestBodySwitches>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $switches = null;
    
    /**
     * Alternate management VLAN, must be between 1 and 4094
     * 
     * @var ?int $vlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vlanId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $vlanId = null;
    
	public function __construct()
	{
		$this->enabled = null;
		$this->protocols = null;
		$this->switches = null;
		$this->vlanId = null;
	}
}
