"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import employee as shared_employee
from typing import Optional


@dataclasses.dataclass
class GetSpacesSpaceIDEmployeesRequest:
    
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    employee_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'EmployeeNumber', 'style': 'form', 'explode': True }})
    r"""EmployeeNumber of the employee"""  
    ss_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'SSNumber', 'style': 'form', 'explode': True }})
    r"""SSNumber of the employee"""  
    with_contracting_partner: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'WithContractingPartner', 'style': 'form', 'explode': True }})
    r"""if present returns infos of the ContractingPartner too"""  
    

@dataclasses.dataclass
class GetSpacesSpaceIDEmployeesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_employees_200_application_json_all_ofs: Optional[list[shared_employee.Employee]] = dataclasses.field(default=None)
    r"""A list of employees folders"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    