// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AddApplicationVpcConfigurationXAmzTargetEnum
type AddApplicationVpcConfigurationXAmzTargetEnum string

const (
	AddApplicationVpcConfigurationXAmzTargetEnumKinesisAnalytics20180523AddApplicationVpcConfiguration AddApplicationVpcConfigurationXAmzTargetEnum = "KinesisAnalytics_20180523.AddApplicationVpcConfiguration"
)

func (e *AddApplicationVpcConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KinesisAnalytics_20180523.AddApplicationVpcConfiguration":
		*e = AddApplicationVpcConfigurationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddApplicationVpcConfigurationXAmzTargetEnum: %s", s)
	}
}

type AddApplicationVpcConfigurationRequest struct {
	AddApplicationVpcConfigurationRequest shared.AddApplicationVpcConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            AddApplicationVpcConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AddApplicationVpcConfigurationResponse struct {
	// Success
	AddApplicationVpcConfigurationResponse *shared.AddApplicationVpcConfigurationResponse
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidApplicationConfigurationException
	InvalidApplicationConfigurationException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
