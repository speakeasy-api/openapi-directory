"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import facetattributetype_enum as shared_facetattributetype_enum
from ..shared import rule as shared_rule
from ..shared import typedattributevalue as shared_typedattributevalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FacetAttributeDefinition:
    r"""A facet attribute definition. See <a href=\\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/cd_advanced.html#attributereferences\\">Attribute References</a> for more information."""
    
    type: shared_facetattributetype_enum.FacetAttributeTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    default_value: Optional[shared_typedattributevalue.TypedAttributeValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultValue'), 'exclude': lambda f: f is None }})  
    is_immutable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsImmutable'), 'exclude': lambda f: f is None }})  
    rules: Optional[dict[str, shared_rule.Rule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Rules'), 'exclude': lambda f: f is None }})  
    