"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class IbanBasicSecurity:
    
    user_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'user_key' }})  
    

@dataclasses.dataclass
class IbanBasicRequestBody:
    r"""IBAN number"""
    
    iban_number: str = dataclasses.field(metadata={'form': { 'field_name': 'ibanNumber' }})
    r"""IBAN number to validate"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IbanBasicDefaultApplicationJSON:
    r"""Detailed information about the error"""
    
    code: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    tag: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag') }})  
    fault: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fault'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IbanBasic200ApplicationJSON:
    r"""Denotes validity of checked IBAN"""
    
    valid: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valid') }})  
    

@dataclasses.dataclass
class IbanBasicResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    iban_basic_200_application_json_object: Optional[IbanBasic200ApplicationJSON] = dataclasses.field(default=None)
    r"""Denotes validity of checked IBAN"""  
    iban_basic_default_application_json_object: Optional[IbanBasicDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Detailed information about the error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    