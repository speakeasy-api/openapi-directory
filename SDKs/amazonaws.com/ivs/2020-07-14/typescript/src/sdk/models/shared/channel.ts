/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelLatencyModeEnum } from "./channellatencymodeenum";
import { ChannelTypeEnum } from "./channeltypeenum";
import { Expose } from "class-transformer";

/**
 * Object specifying a channel.
 */
export class Channel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "authorized" })
  authorized?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ingestEndpoint" })
  ingestEndpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "latencyMode" })
  latencyMode?: ChannelLatencyModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "playbackUrl" })
  playbackUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recordingConfigurationArn" })
  recordingConfigurationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ChannelTypeEnum;
}
