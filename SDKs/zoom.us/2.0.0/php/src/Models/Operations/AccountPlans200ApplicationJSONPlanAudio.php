<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * AccountPlans200ApplicationJSONPlanAudio - Additional audio conferencing <a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans">plan type.</a>
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class AccountPlans200ApplicationJSONPlanAudio
{
    /**
     * Call-out countries: multiple values should separated by  commas. For a list of allowed values, refer to the "ID" field in [this](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#tsp-call-out-countries) table.
     * 
     * @var ?string $calloutCountries
     */
	#[\JMS\Serializer\Annotation\SerializedName('callout_countries')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $calloutCountries = null;
    
    /**
     * Dedicated dial-In numbers.
     * 
     * @var ?int $ddiNumbers
     */
	#[\JMS\Serializer\Annotation\SerializedName('ddi_numbers')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ddiNumbers = null;
    
    /**
     * Next invoice date for the plan.
     * 
     * @var ?string $nextInvoiceDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('next_invoice_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextInvoiceDate = null;
    
    /**
     * Premium countries: multiple values should be separated by commas. For a list of allowed values, refer to the "ID" field in the [Premium Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#premium-countries) table.
     * 
     * @var ?string $premiumCountries
     */
	#[\JMS\Serializer\Annotation\SerializedName('premium_countries')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $premiumCountries = null;
    
    /**
     * Date at which the plan became effective on the account.
     * 
     * @var ?string $serviceEffectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('service_effective_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceEffectiveDate = null;
    
    /**
     * Status of the plan.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AccountPlans200ApplicationJSONPlanAudioStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\AccountPlans200ApplicationJSONPlanAudioStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountPlans200ApplicationJSONPlanAudioStatusEnum $status = null;
    
    /**
     * Toll-free countries: multiple values should separated by a comma. For a list of allowed values, refer to the "ID" field in the [Toll Free Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#toll-free-countries) table.
     * 
     * @var ?string $tollfreeCountries
     */
	#[\JMS\Serializer\Annotation\SerializedName('tollfree_countries')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tollfreeCountries = null;
    
    /**
     * Additional audio conferencing <a href="/api-reference/other-references/plans">plan type.</a>
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->calloutCountries = null;
		$this->ddiNumbers = null;
		$this->nextInvoiceDate = null;
		$this->premiumCountries = null;
		$this->serviceEffectiveDate = null;
		$this->status = null;
		$this->tollfreeCountries = null;
		$this->type = null;
	}
}
