"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tablerow as shared_tablerow
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListTableRowsResult:
    r"""Success"""
    
    column_ids: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnIds') }})  
    rows: list[shared_tablerow.TableRow] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rows') }})  
    workbook_cursor: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workbookCursor') }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextToken'), 'exclude': lambda f: f is None }})  
    row_ids_not_found: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowIdsNotFound'), 'exclude': lambda f: f is None }})  
    