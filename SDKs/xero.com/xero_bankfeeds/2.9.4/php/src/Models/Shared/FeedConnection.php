<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FeedConnection - success returns a FeedConnection object matching the id in response
 * 
 * https://developer.xero.com/documentation/bank-feeds-api/feed-connections
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 * @see https://developer.xero.com/documentation/bank-feeds-api/feed-connections
 */
class FeedConnection
{
    /**
     * Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found.
     * 
     * @var ?string $accountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountName = null;
    
    /**
     * String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified.
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     * This account identifier is generated by the financial institute (FI). This must be unique for your financial institute.
     * 
     * @var ?string $accountToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountToken = null;
    
    /**
     * High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FeedConnectionAccountTypeEnum $accountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FeedConnectionAccountTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FeedConnectionAccountTypeEnum $accountType = null;
    
    /**
     * ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CountryCodeEnum $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CountryCodeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CountryCodeEnum $country = null;
    
    /**
     * 3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CurrencyCodeEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CurrencyCodeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CurrencyCodeEnum $currency = null;
    
    /**
     * On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Error $error
     */
	#[\JMS\Serializer\Annotation\SerializedName('error')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Error')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Error $error = null;
    
    /**
     * GUID used to identify the Account.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * the current status of the feed connection
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FeedConnectionStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FeedConnectionStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FeedConnectionStatusEnum $status = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->accountName = null;
		$this->accountNumber = null;
		$this->accountToken = null;
		$this->accountType = null;
		$this->country = null;
		$this->currency = null;
		$this->error = null;
		$this->id = null;
		$this->status = null;
	}
}
