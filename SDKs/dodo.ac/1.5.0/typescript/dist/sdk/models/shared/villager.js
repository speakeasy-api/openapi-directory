"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Villager = exports.VillagerSpeciesEnum = exports.VillagerSignEnum = exports.VillagerPersonalityEnum = exports.VillagerNhDetails = exports.VillagerNhDetailsSubPersonalityEnum = exports.VillagerNhDetailsHobbyEnum = exports.VillagerGenderEnum = exports.VillagerDebutEnum = exports.VillagerAppearancesEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var VillagerAppearancesEnum;
(function (VillagerAppearancesEnum) {
    VillagerAppearancesEnum["Dnm"] = "DNM";
    VillagerAppearancesEnum["Ac"] = "AC";
    VillagerAppearancesEnum["EPlus"] = "E_PLUS";
    VillagerAppearancesEnum["Ww"] = "WW";
    VillagerAppearancesEnum["Cf"] = "CF";
    VillagerAppearancesEnum["Nl"] = "NL";
    VillagerAppearancesEnum["Wa"] = "WA";
    VillagerAppearancesEnum["Nh"] = "NH";
    VillagerAppearancesEnum["Film"] = "FILM";
    VillagerAppearancesEnum["Hhd"] = "HHD";
    VillagerAppearancesEnum["Pc"] = "PC";
})(VillagerAppearancesEnum = exports.VillagerAppearancesEnum || (exports.VillagerAppearancesEnum = {}));
/**
 * The first *Animal Crossing* game the villager appeared in. `DNM` is *Doubutsu no Mori* for the Nintendo 64 (Japan-exclusive); `AC` is *Animal Crossing* for GameCube; `E_PLUS` is *Doubutsu no Mori e+* for GameCube (expanded port of AC, Japan-exclusive); `WW` is *Wild World* for the DS; `CF` is *City Folk* for Wii; `NL` is *New Leaf* for 3DS; `WA` is *Welcome amiibo*, the *New Leaf* expansion; `NH` is *New Horizons* for Switch; `FILM` is the *Doubutsu no Mori* Japan-exclusive film; `HHD` is *Happy Home Designer* for the Wii; and `PC` is *Pocket Camp* for mobile.
 */
var VillagerDebutEnum;
(function (VillagerDebutEnum) {
    VillagerDebutEnum["Dnm"] = "DNM";
    VillagerDebutEnum["Ac"] = "AC";
    VillagerDebutEnum["EPlus"] = "E_PLUS";
    VillagerDebutEnum["Ww"] = "WW";
    VillagerDebutEnum["Cf"] = "CF";
    VillagerDebutEnum["Nl"] = "NL";
    VillagerDebutEnum["Wa"] = "WA";
    VillagerDebutEnum["Nh"] = "NH";
    VillagerDebutEnum["Film"] = "FILM";
    VillagerDebutEnum["Hhd"] = "HHD";
    VillagerDebutEnum["Pc"] = "PC";
})(VillagerDebutEnum = exports.VillagerDebutEnum || (exports.VillagerDebutEnum = {}));
/**
 * Gender of the villager. In *Animal Crossing*, only male and female are used.
 */
var VillagerGenderEnum;
(function (VillagerGenderEnum) {
    VillagerGenderEnum["Male"] = "Male";
    VillagerGenderEnum["Female"] = "Female";
})(VillagerGenderEnum = exports.VillagerGenderEnum || (exports.VillagerGenderEnum = {}));
/**
 * The villager's primary hobby, which determines most of the activities they will do around the island (e.g. education villagers will frequently read books and visit the museum). Learn more at https://nookipedia.com/wiki/Hobbies
 */
var VillagerNhDetailsHobbyEnum;
(function (VillagerNhDetailsHobbyEnum) {
    VillagerNhDetailsHobbyEnum["Education"] = "Education";
    VillagerNhDetailsHobbyEnum["Fashion"] = "Fashion";
    VillagerNhDetailsHobbyEnum["Fitness"] = "Fitness";
    VillagerNhDetailsHobbyEnum["Music"] = "Music";
    VillagerNhDetailsHobbyEnum["Nature"] = "Nature";
    VillagerNhDetailsHobbyEnum["Play"] = "Play";
})(VillagerNhDetailsHobbyEnum = exports.VillagerNhDetailsHobbyEnum || (exports.VillagerNhDetailsHobbyEnum = {}));
/**
 * Each personality in *New Horizons* has two sub-personalities, currently referred to as just A and B. The effect of a sub-personality is currently unknown.
 */
var VillagerNhDetailsSubPersonalityEnum;
(function (VillagerNhDetailsSubPersonalityEnum) {
    VillagerNhDetailsSubPersonalityEnum["A"] = "A";
    VillagerNhDetailsSubPersonalityEnum["B"] = "B";
})(VillagerNhDetailsSubPersonalityEnum = exports.VillagerNhDetailsSubPersonalityEnum || (exports.VillagerNhDetailsSubPersonalityEnum = {}));
/**
 * An object that holds villager data specific to *New Horizons*. If the villager does not appear in *New Horizons*, this field will be set to null.
 */
var VillagerNhDetails = /** @class */ (function (_super) {
    __extends(VillagerNhDetails, _super);
    function VillagerNhDetails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "catchphrase" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "catchphrase", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clothing" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "clothing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clothing_variation" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "clothingVariation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fav_colors" }),
        __metadata("design:type", Array)
    ], VillagerNhDetails.prototype, "favColors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fav_styles" }),
        __metadata("design:type", Array)
    ], VillagerNhDetails.prototype, "favStyles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hobby" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "hobby", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "house_exterior_url" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "houseExteriorUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "house_flooring" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "houseFlooring", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "house_interior_url" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "houseInteriorUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "house_music" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "houseMusic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "house_music_note" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "houseMusicNote", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "house_wallpaper" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "houseWallpaper", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "icon_url" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "iconUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image_url" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "imageUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "photo_url" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "photoUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quote" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "quote", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sub-personality" }),
        __metadata("design:type", String)
    ], VillagerNhDetails.prototype, "subPersonality", void 0);
    return VillagerNhDetails;
}(utils_1.SpeakeasyBase));
exports.VillagerNhDetails = VillagerNhDetails;
/**
 * The villager's personality. Note that there are no official in-game personality names; these are names that are commonly used by the community. In the case of 'sisterly', other common names include 'big sis' and 'uchi'.
 */
var VillagerPersonalityEnum;
(function (VillagerPersonalityEnum) {
    VillagerPersonalityEnum["Cranky"] = "Cranky";
    VillagerPersonalityEnum["Jock"] = "Jock";
    VillagerPersonalityEnum["Lazy"] = "Lazy";
    VillagerPersonalityEnum["Normal"] = "Normal";
    VillagerPersonalityEnum["Peppy"] = "Peppy";
    VillagerPersonalityEnum["Sisterly"] = "Sisterly";
    VillagerPersonalityEnum["Smug"] = "Smug";
    VillagerPersonalityEnum["Snooty"] = "Snooty";
})(VillagerPersonalityEnum = exports.VillagerPersonalityEnum || (exports.VillagerPersonalityEnum = {}));
/**
 * The villager's astrological star sign.
 */
var VillagerSignEnum;
(function (VillagerSignEnum) {
    VillagerSignEnum["Aries"] = "Aries";
    VillagerSignEnum["Taurus"] = "Taurus";
    VillagerSignEnum["Gemini"] = "Gemini";
    VillagerSignEnum["Cancer"] = "Cancer";
    VillagerSignEnum["Leo"] = "Leo";
    VillagerSignEnum["Virgo"] = "Virgo";
    VillagerSignEnum["Libra"] = "Libra";
    VillagerSignEnum["Scorpio"] = "Scorpio";
    VillagerSignEnum["Sagittarius"] = "Sagittarius";
    VillagerSignEnum["Capricorn"] = "Capricorn";
    VillagerSignEnum["Aquarius"] = "Aquarius";
    VillagerSignEnum["Pisces"] = "Pisces";
})(VillagerSignEnum = exports.VillagerSignEnum || (exports.VillagerSignEnum = {}));
/**
 * The villager's species.
 */
var VillagerSpeciesEnum;
(function (VillagerSpeciesEnum) {
    VillagerSpeciesEnum["Alligator"] = "Alligator";
    VillagerSpeciesEnum["Anteater"] = "Anteater";
    VillagerSpeciesEnum["Bear"] = "Bear";
    VillagerSpeciesEnum["Bird"] = "Bird";
    VillagerSpeciesEnum["Bull"] = "Bull";
    VillagerSpeciesEnum["Cat"] = "Cat";
    VillagerSpeciesEnum["Cub"] = "Cub";
    VillagerSpeciesEnum["Chicken"] = "Chicken";
    VillagerSpeciesEnum["Cow"] = "Cow";
    VillagerSpeciesEnum["Deer"] = "Deer";
    VillagerSpeciesEnum["Dog"] = "Dog";
    VillagerSpeciesEnum["Duck"] = "Duck";
    VillagerSpeciesEnum["Eagle"] = "Eagle";
    VillagerSpeciesEnum["Elephant"] = "Elephant";
    VillagerSpeciesEnum["Frog"] = "Frog";
    VillagerSpeciesEnum["Goat"] = "Goat";
    VillagerSpeciesEnum["Gorilla"] = "Gorilla";
    VillagerSpeciesEnum["Hamster"] = "Hamster";
    VillagerSpeciesEnum["Hippo"] = "Hippo";
    VillagerSpeciesEnum["Horse"] = "Horse";
    VillagerSpeciesEnum["Koala"] = "Koala";
    VillagerSpeciesEnum["Kangaroo"] = "Kangaroo";
    VillagerSpeciesEnum["Lion"] = "Lion";
    VillagerSpeciesEnum["Monkey"] = "Monkey";
    VillagerSpeciesEnum["Mouse"] = "Mouse";
    VillagerSpeciesEnum["Octopus"] = "Octopus";
    VillagerSpeciesEnum["Ostrich"] = "Ostrich";
    VillagerSpeciesEnum["Penguin"] = "Penguin";
    VillagerSpeciesEnum["Pig"] = "Pig";
    VillagerSpeciesEnum["Rabbit"] = "Rabbit";
    VillagerSpeciesEnum["Rhino"] = "Rhino";
    VillagerSpeciesEnum["Sheep"] = "Sheep";
    VillagerSpeciesEnum["Squirrel"] = "Squirrel";
    VillagerSpeciesEnum["Tiger"] = "Tiger";
    VillagerSpeciesEnum["Wolf"] = "Wolf";
})(VillagerSpeciesEnum = exports.VillagerSpeciesEnum || (exports.VillagerSpeciesEnum = {}));
var Villager = /** @class */ (function (_super) {
    __extends(Villager, _super);
    function Villager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alt_name" }),
        __metadata("design:type", String)
    ], Villager.prototype, "altName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "appearances" }),
        __metadata("design:type", Array)
    ], Villager.prototype, "appearances", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "birthday_day" }),
        __metadata("design:type", String)
    ], Villager.prototype, "birthdayDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "birthday_month" }),
        __metadata("design:type", String)
    ], Villager.prototype, "birthdayMonth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clothing" }),
        __metadata("design:type", String)
    ], Villager.prototype, "clothing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "debut" }),
        __metadata("design:type", String)
    ], Villager.prototype, "debut", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gender" }),
        __metadata("design:type", String)
    ], Villager.prototype, "gender", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Villager.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image_url" }),
        __metadata("design:type", String)
    ], Villager.prototype, "imageUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "islander" }),
        __metadata("design:type", Boolean)
    ], Villager.prototype, "islander", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Villager.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nh_details" }),
        (0, class_transformer_1.Type)(function () { return VillagerNhDetails; }),
        __metadata("design:type", VillagerNhDetails)
    ], Villager.prototype, "nhDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "personality" }),
        __metadata("design:type", String)
    ], Villager.prototype, "personality", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "phrase" }),
        __metadata("design:type", String)
    ], Villager.prototype, "phrase", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "prev_phrases" }),
        __metadata("design:type", Array)
    ], Villager.prototype, "prevPhrases", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quote" }),
        __metadata("design:type", String)
    ], Villager.prototype, "quote", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sign" }),
        __metadata("design:type", String)
    ], Villager.prototype, "sign", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "species" }),
        __metadata("design:type", String)
    ], Villager.prototype, "species", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "text_color" }),
        __metadata("design:type", String)
    ], Villager.prototype, "textColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title_color" }),
        __metadata("design:type", String)
    ], Villager.prototype, "titleColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], Villager.prototype, "url", void 0);
    return Villager;
}(utils_1.SpeakeasyBase));
exports.Villager = Villager;
