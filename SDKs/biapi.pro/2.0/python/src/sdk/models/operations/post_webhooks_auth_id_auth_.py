"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import authprovider as shared_authprovider
from typing import Optional


@dataclasses.dataclass
class PostWebhooksAuthIDAuthRequestBody:
    
    name: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'name' }})
    r"""The name of the authentication process to differentiate"""  
    type: int = dataclasses.field(metadata={'multipart_form': { 'field_name': 'type' }})
    r"""The type of the authentication process (oauth, certificate, token, etc...)"""  
    config: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'config' }})
    r"""The authentication process configuration. A dict containing either the certificate"""  
    

@dataclasses.dataclass
class PostWebhooksAuthIDAuthRequest:
    
    id_auth: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_auth', 'style': 'simple', 'explode': False }})  
    request_body: PostWebhooksAuthIDAuthRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class PostWebhooksAuthIDAuthResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    auth_provider: Optional[shared_authprovider.AuthProvider] = dataclasses.field(default=None)
    r"""Successful POST on AuthProvider resource"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    