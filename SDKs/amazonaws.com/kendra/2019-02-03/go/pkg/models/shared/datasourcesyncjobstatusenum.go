// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataSourceSyncJobStatusEnum string

const (
	DataSourceSyncJobStatusEnumFailed          DataSourceSyncJobStatusEnum = "FAILED"
	DataSourceSyncJobStatusEnumSucceeded       DataSourceSyncJobStatusEnum = "SUCCEEDED"
	DataSourceSyncJobStatusEnumSyncing         DataSourceSyncJobStatusEnum = "SYNCING"
	DataSourceSyncJobStatusEnumIncomplete      DataSourceSyncJobStatusEnum = "INCOMPLETE"
	DataSourceSyncJobStatusEnumStopping        DataSourceSyncJobStatusEnum = "STOPPING"
	DataSourceSyncJobStatusEnumAborted         DataSourceSyncJobStatusEnum = "ABORTED"
	DataSourceSyncJobStatusEnumSyncingIndexing DataSourceSyncJobStatusEnum = "SYNCING_INDEXING"
)

func (e DataSourceSyncJobStatusEnum) ToPointer() *DataSourceSyncJobStatusEnum {
	return &e
}

func (e *DataSourceSyncJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "SYNCING":
		fallthrough
	case "INCOMPLETE":
		fallthrough
	case "STOPPING":
		fallthrough
	case "ABORTED":
		fallthrough
	case "SYNCING_INDEXING":
		*e = DataSourceSyncJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataSourceSyncJobStatusEnum: %v", v)
	}
}
