<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Action - <p>Provides details about one of the following actions that affects or that was taken on a resource:</p> <ul> <li> <p>A remote IP address issued an Amazon Web Services API call</p> </li> <li> <p>A DNS request was received</p> </li> <li> <p>A remote IP address attempted to connect to an EC2 instance</p> </li> <li> <p>A remote IP address attempted a port probe on an EC2 instance</p> </li> </ul>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Action
{
	#[\JMS\Serializer\Annotation\SerializedName('ActionType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $actionType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('AwsApiCallAction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AwsApiCallAction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AwsApiCallAction $awsApiCallAction = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DnsRequestAction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DnsRequestAction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DnsRequestAction $dnsRequestAction = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NetworkConnectionAction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NetworkConnectionAction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkConnectionAction $networkConnectionAction = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('PortProbeAction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PortProbeAction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PortProbeAction $portProbeAction = null;
    
	public function __construct()
	{
		$this->actionType = null;
		$this->awsApiCallAction = null;
		$this->dnsRequestAction = null;
		$this->networkConnectionAction = null;
		$this->portProbeAction = null;
	}
}
