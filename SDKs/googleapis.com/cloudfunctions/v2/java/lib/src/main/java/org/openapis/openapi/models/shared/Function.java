/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Function - Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations.
 */
public class Function {
    /**
     * Describes the Build step of the function that builds a container from the given source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildConfig")
    public BuildConfig buildConfig;

    public Function withBuildConfig(BuildConfig buildConfig) {
        this.buildConfig = buildConfig;
        return this;
    }
    
    /**
     * User-provided description of a function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Function withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Describe whether the function is 1st Gen or 2nd Gen.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment")
    public FunctionEnvironmentEnum environment;

    public Function withEnvironment(FunctionEnvironmentEnum environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * Describes EventTrigger, used to request events to be sent from another service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTrigger")
    public EventTrigger eventTrigger;

    public Function withEventTrigger(EventTrigger eventTrigger) {
        this.eventTrigger = eventTrigger;
        return this;
    }
    
    /**
     * [Preview] Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources. It must match the pattern `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyName")
    public String kmsKeyName;

    public Function withKmsKeyName(String kmsKeyName) {
        this.kmsKeyName = kmsKeyName;
        return this;
    }
    
    /**
     * Labels associated with this Cloud Function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Function withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * A user-defined name of the function. Function names must be unique globally and match pattern `projects/* /locations/* /functions/*`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Function withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Describes the Service being deployed. Currently Supported : Cloud Run (fully managed).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceConfig")
    public ServiceConfig serviceConfig;

    public Function withServiceConfig(ServiceConfig serviceConfig) {
        this.serviceConfig = serviceConfig;
        return this;
    }
    
    /**
     * Output only. State of the function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public FunctionStateEnum state;

    public Function withState(FunctionStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. State Messages for this Cloud Function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateMessages")
    public GoogleCloudFunctionsV2StateMessage[] stateMessages;

    public Function withStateMessages(GoogleCloudFunctionsV2StateMessage[] stateMessages) {
        this.stateMessages = stateMessages;
        return this;
    }
    
    /**
     * Output only. The last update timestamp of a Cloud Function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Function withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Function(){}
}
