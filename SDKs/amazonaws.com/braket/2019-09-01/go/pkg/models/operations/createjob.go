// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateJobHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateJobRequestBodyAlgorithmSpecification - Defines the Amazon Braket job to be created. Specifies the container image the job uses and the paths to the Python scripts used for entry and training.
type CreateJobRequestBodyAlgorithmSpecification struct {
	ContainerImage   *shared.ContainerImage   `json:"containerImage,omitempty"`
	ScriptModeConfig *shared.ScriptModeConfig `json:"scriptModeConfig,omitempty"`
}

// CreateJobRequestBodyCheckpointConfig - Contains information about the output locations for job checkpoint data.
type CreateJobRequestBodyCheckpointConfig struct {
	LocalPath *string `json:"localPath,omitempty"`
	S3URI     *string `json:"s3Uri,omitempty"`
}

// CreateJobRequestBodyDeviceConfig - Configures the quantum processing units (QPUs) or simulator used to create and run an Amazon Braket job.
type CreateJobRequestBodyDeviceConfig struct {
	Device *string `json:"device,omitempty"`
}

// CreateJobRequestBodyInstanceConfig - Configures the resource instances to use while running the Amazon Braket hybrid job on Amazon Braket.
type CreateJobRequestBodyInstanceConfig struct {
	InstanceCount  *int64                   `json:"instanceCount,omitempty"`
	InstanceType   *shared.InstanceTypeEnum `json:"instanceType,omitempty"`
	VolumeSizeInGb *int64                   `json:"volumeSizeInGb,omitempty"`
}

// CreateJobRequestBodyOutputDataConfig - Specifies the path to the S3 location where you want to store job artifacts and the encryption key used to store them.
type CreateJobRequestBodyOutputDataConfig struct {
	KmsKeyID *string `json:"kmsKeyId,omitempty"`
	S3Path   *string `json:"s3Path,omitempty"`
}

// CreateJobRequestBodyStoppingCondition - Specifies limits for how long an Amazon Braket job can run.
type CreateJobRequestBodyStoppingCondition struct {
	MaxRuntimeInSeconds *int64 `json:"maxRuntimeInSeconds,omitempty"`
}

type CreateJobRequestBody struct {
	// Defines the Amazon Braket job to be created. Specifies the container image the job uses and the paths to the Python scripts used for entry and training.
	AlgorithmSpecification CreateJobRequestBodyAlgorithmSpecification `json:"algorithmSpecification"`
	// Contains information about the output locations for job checkpoint data.
	CheckpointConfig *CreateJobRequestBodyCheckpointConfig `json:"checkpointConfig,omitempty"`
	// A unique token that guarantees that the call to this API is idempotent.
	ClientToken string `json:"clientToken"`
	// Configures the quantum processing units (QPUs) or simulator used to create and run an Amazon Braket job.
	DeviceConfig CreateJobRequestBodyDeviceConfig `json:"deviceConfig"`
	// Algorithm-specific parameters used by an Amazon Braket job that influence the quality of the training job. The values are set with a string of JSON key:value pairs, where the key is the name of the hyperparameter and the value is the value of th hyperparameter.
	HyperParameters map[string]string `json:"hyperParameters,omitempty"`
	// A list of parameters that specify the name and type of input data and where it is located.
	InputDataConfig []shared.InputFileConfig `json:"inputDataConfig,omitempty"`
	// Configures the resource instances to use while running the Amazon Braket hybrid job on Amazon Braket.
	InstanceConfig CreateJobRequestBodyInstanceConfig `json:"instanceConfig"`
	// The name of the Amazon Braket job.
	JobName string `json:"jobName"`
	// Specifies the path to the S3 location where you want to store job artifacts and the encryption key used to store them.
	OutputDataConfig CreateJobRequestBodyOutputDataConfig `json:"outputDataConfig"`
	// The Amazon Resource Name (ARN) of an IAM role that Amazon Braket can assume to perform tasks on behalf of a user. It can access user resources, run an Amazon Braket job container on behalf of user, and output resources to the users' s3 buckets.
	RoleArn string `json:"roleArn"`
	// Specifies limits for how long an Amazon Braket job can run.
	StoppingCondition *CreateJobRequestBodyStoppingCondition `json:"stoppingCondition,omitempty"`
	// A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateJobRequest struct {
	Headers CreateJobHeaders
	Request CreateJobRequestBody `request:"mediaType=application/json"`
}

type CreateJobResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateJobResponse *shared.CreateJobResponse
	// DeviceRetiredException
	DeviceRetiredException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
