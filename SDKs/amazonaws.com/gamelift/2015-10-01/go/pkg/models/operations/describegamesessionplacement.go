// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeGameSessionPlacementXAmzTargetEnum
type DescribeGameSessionPlacementXAmzTargetEnum string

const (
	DescribeGameSessionPlacementXAmzTargetEnumGameLiftDescribeGameSessionPlacement DescribeGameSessionPlacementXAmzTargetEnum = "GameLift.DescribeGameSessionPlacement"
)

func (e DescribeGameSessionPlacementXAmzTargetEnum) ToPointer() *DescribeGameSessionPlacementXAmzTargetEnum {
	return &e
}

func (e *DescribeGameSessionPlacementXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GameLift.DescribeGameSessionPlacement":
		*e = DescribeGameSessionPlacementXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeGameSessionPlacementXAmzTargetEnum: %v", v)
	}
}

type DescribeGameSessionPlacementRequest struct {
	DescribeGameSessionPlacementInput shared.DescribeGameSessionPlacementInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        DescribeGameSessionPlacementXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeGameSessionPlacementResponse struct {
	ContentType string
	// Success
	DescribeGameSessionPlacementOutput *shared.DescribeGameSessionPlacementOutput
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
}
