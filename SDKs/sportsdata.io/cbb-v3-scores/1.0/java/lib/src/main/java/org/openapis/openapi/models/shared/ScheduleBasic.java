/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ScheduleBasic {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeam")
    public String awayTeam;

    public ScheduleBasic withAwayTeam(String awayTeam) {
        this.awayTeam = awayTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamID")
    public Long awayTeamID;

    public ScheduleBasic withAwayTeamID(Long awayTeamID) {
        this.awayTeamID = awayTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamScore")
    public Long awayTeamScore;

    public ScheduleBasic withAwayTeamScore(Long awayTeamScore) {
        this.awayTeamScore = awayTeamScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamSeed")
    public Long awayTeamSeed;

    public ScheduleBasic withAwayTeamSeed(Long awayTeamSeed) {
        this.awayTeamSeed = awayTeamSeed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Bracket")
    public String bracket;

    public ScheduleBasic withBracket(String bracket) {
        this.bracket = bracket;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;

    public ScheduleBasic withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTimeUTC")
    public String dateTimeUTC;

    public ScheduleBasic withDateTimeUTC(String dateTimeUTC) {
        this.dateTimeUTC = dateTimeUTC;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;

    public ScheduleBasic withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameEndDateTime")
    public String gameEndDateTime;

    public ScheduleBasic withGameEndDateTime(String gameEndDateTime) {
        this.gameEndDateTime = gameEndDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameID")
    public Long gameID;

    public ScheduleBasic withGameID(Long gameID) {
        this.gameID = gameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameID")
    public Long globalGameID;

    public ScheduleBasic withGlobalGameID(Long globalGameID) {
        this.globalGameID = globalGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeam")
    public String homeTeam;

    public ScheduleBasic withHomeTeam(String homeTeam) {
        this.homeTeam = homeTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamID")
    public Long homeTeamID;

    public ScheduleBasic withHomeTeamID(Long homeTeamID) {
        this.homeTeamID = homeTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamScore")
    public Long homeTeamScore;

    public ScheduleBasic withHomeTeamScore(Long homeTeamScore) {
        this.homeTeamScore = homeTeamScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamSeed")
    public Long homeTeamSeed;

    public ScheduleBasic withHomeTeamSeed(Long homeTeamSeed) {
        this.homeTeamSeed = homeTeamSeed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsClosed")
    public Boolean isClosed;

    public ScheduleBasic withIsClosed(Boolean isClosed) {
        this.isClosed = isClosed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NeutralVenue")
    public Boolean neutralVenue;

    public ScheduleBasic withNeutralVenue(Boolean neutralVenue) {
        this.neutralVenue = neutralVenue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Round")
    public Long round;

    public ScheduleBasic withRound(Long round) {
        this.round = round;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;

    public ScheduleBasic withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;

    public ScheduleBasic withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;

    public ScheduleBasic withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TournamentID")
    public Long tournamentID;

    public ScheduleBasic withTournamentID(Long tournamentID) {
        this.tournamentID = tournamentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public ScheduleBasic withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    public ScheduleBasic(){}
}
