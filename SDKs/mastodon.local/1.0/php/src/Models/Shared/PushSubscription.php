<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PushSubscription - Represents a subscription to the push streaming server.
 * 
 * https://docs.joinmastodon.org/entities/pushsubscription/
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 * @see https://docs.joinmastodon.org/entities/pushsubscription/
 */
class PushSubscription
{
    /**
     * Which alerts should be delivered to the `endpoint`.
     * 
     * @var array<string, mixed> $alerts
     */
	#[\JMS\Serializer\Annotation\SerializedName('alerts')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $alerts;
    
    /**
     * Where push alerts will be sent to.
     * 
     * @var string $endpoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('endpoint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $endpoint;
    
    /**
     * The ID of the push subscription in the database. Cast from an integer, but not guaranteed to be a number.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The streaming server's VAPID key.
     * 
     * @var string $serverKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('server_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverKey;
    
	public function __construct()
	{
		$this->alerts = [];
		$this->endpoint = "";
		$this->id = "";
		$this->serverKey = "";
	}
}
