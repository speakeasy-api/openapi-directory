"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accesscontrollistconfiguration as shared_accesscontrollistconfiguration
from ..shared import documentsmetadataconfiguration as shared_documentsmetadataconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class S3DataSourceConfiguration:
    r"""Provides the configuration information to connect to an Amazon S3 bucket."""
    
    bucket_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BucketName') }})  
    access_control_list_configuration: Optional[shared_accesscontrollistconfiguration.AccessControlListConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessControlListConfiguration'), 'exclude': lambda f: f is None }})  
    documents_metadata_configuration: Optional[shared_documentsmetadataconfiguration.DocumentsMetadataConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentsMetadataConfiguration'), 'exclude': lambda f: f is None }})
    r"""Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document."""  
    exclusion_patterns: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExclusionPatterns'), 'exclude': lambda f: f is None }})  
    inclusion_patterns: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InclusionPatterns'), 'exclude': lambda f: f is None }})  
    inclusion_prefixes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InclusionPrefixes'), 'exclude': lambda f: f is None }})  
    