"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .eventticketclass import Eventticketclass
from .eventticketobject import Eventticketobject
from .flightclass import Flightclass
from .flightobject import Flightobject
from .genericclass import Genericclass
from .genericobject import Genericobject
from .giftcardclass import Giftcardclass
from .giftcardobject import Giftcardobject
from .issuer import Issuer
from .jwt import Jwt
from .loyaltyclass import Loyaltyclass
from .loyaltyobject import Loyaltyobject
from .media import Media
from .offerclass import Offerclass
from .offerobject import Offerobject
from .permissions import Permissions
from .smarttap import Smarttap
from .transitclass import Transitclass
from .transitobject import Transitobject
from .walletobjects import Walletobjects

SERVERS = [
    "https://walletobjects.googleapis.com/",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""API for issuers to save and manage Google Wallet Objects.
    https://developers.google.com/pay/passes
    """
    eventticketclass: Eventticketclass
    eventticketobject: Eventticketobject
    flightclass: Flightclass
    flightobject: Flightobject
    genericclass: Genericclass
    genericobject: Genericobject
    giftcardclass: Giftcardclass
    giftcardobject: Giftcardobject
    issuer: Issuer
    jwt: Jwt
    loyaltyclass: Loyaltyclass
    loyaltyobject: Loyaltyobject
    media: Media
    offerclass: Offerclass
    offerobject: Offerobject
    permissions: Permissions
    smarttap: Smarttap
    transitclass: Transitclass
    transitobject: Transitobject
    walletobjects: Walletobjects

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.eventticketclass = Eventticketclass(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.eventticketobject = Eventticketobject(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.flightclass = Flightclass(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.flightobject = Flightobject(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.genericclass = Genericclass(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.genericobject = Genericobject(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.giftcardclass = Giftcardclass(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.giftcardobject = Giftcardobject(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.issuer = Issuer(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.jwt = Jwt(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.loyaltyclass = Loyaltyclass(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.loyaltyobject = Loyaltyobject(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.media = Media(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.offerclass = Offerclass(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.offerobject = Offerobject(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.permissions = Permissions(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.smarttap = Smarttap(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.transitclass = Transitclass(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.transitobject = Transitobject(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.walletobjects = Walletobjects(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    