"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatacatalogV1CloudSQLBigQueryConnectionSpecTypeEnum(str, Enum):
    r"""Type of the Cloud SQL database."""
    DATABASE_TYPE_UNSPECIFIED = 'DATABASE_TYPE_UNSPECIFIED'
    POSTGRES = 'POSTGRES'
    MYSQL = 'MYSQL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1CloudSQLBigQueryConnectionSpec:
    r"""Specification for the BigQuery connection to a Cloud SQL instance."""
    
    database: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('database'), 'exclude': lambda f: f is None }})
    r"""Database name."""  
    instance_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceId'), 'exclude': lambda f: f is None }})
    r"""Cloud SQL instance ID in the format of `project:location:instance`."""  
    type: Optional[GoogleCloudDatacatalogV1CloudSQLBigQueryConnectionSpecTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the Cloud SQL database."""  
    