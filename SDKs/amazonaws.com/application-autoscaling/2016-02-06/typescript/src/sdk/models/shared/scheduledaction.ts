/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ScalableDimensionEnum } from "./scalabledimensionenum";
import { ScalableTargetAction } from "./scalabletargetaction";
import { ServiceNamespaceEnum } from "./servicenamespaceenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a scheduled action.
 */
export class ScheduledAction extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceId" })
  resourceId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScalableDimension" })
  scalableDimension?: ScalableDimensionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ScalableTargetAction" })
  @Type(() => ScalableTargetAction)
  scalableTargetAction?: ScalableTargetAction;

  @SpeakeasyMetadata()
  @Expose({ name: "Schedule" })
  schedule: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduledActionARN" })
  scheduledActionARN: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduledActionName" })
  scheduledActionName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceNamespace" })
  serviceNamespace: ServiceNamespaceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Timezone" })
  timezone?: string;
}
