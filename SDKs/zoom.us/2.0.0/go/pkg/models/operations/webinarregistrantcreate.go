// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type WebinarRegistrantCreateSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// WebinarRegistrantCreateApplicationJSONCustomQuestions - Custom Question.
type WebinarRegistrantCreateApplicationJSONCustomQuestions struct {
	Title *string `json:"title,omitempty"`
	Value *string `json:"value,omitempty"`
}

// WebinarRegistrantCreateApplicationJSON - Registrant base object.
type WebinarRegistrantCreateApplicationJSON struct {
	// Registrant's address.
	Address *string `json:"address,omitempty"`
	// Registrant's city.
	City *string `json:"city,omitempty"`
	// A field that allows registrants to provide any questions or comments that they might have.
	Comments *string `json:"comments,omitempty"`
	// Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
	Country *string `json:"country,omitempty"`
	// Custom questions.
	CustomQuestions []WebinarRegistrantCreateApplicationJSONCustomQuestions `json:"custom_questions,omitempty"`
	// A valid email address of the registrant.
	Email string `json:"email"`
	// Registrant's first name.
	FirstName string `json:"first_name"`
	// Registrant's Industry.
	Industry *string `json:"industry,omitempty"`
	// Registrant's job title.
	JobTitle *string `json:"job_title,omitempty"`
	// Registrant's last name.
	LastName *string `json:"last_name,omitempty"`
	// Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
	NoOfEmployees *string `json:"no_of_employees,omitempty"`
	// Registrant's Organization.
	Org *string `json:"org,omitempty"`
	// Registrant's Phone number.
	Phone *string `json:"phone,omitempty"`
	// This field can be included to gauge interest of webinar attendees towards buying your product or service.
	//
	// Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
	PurchasingTimeFrame *string `json:"purchasing_time_frame,omitempty"`
	// Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
	RoleInPurchaseProcess *string `json:"role_in_purchase_process,omitempty"`
	// Registrant's State/Province.
	State *string `json:"state,omitempty"`
	// Registrant's Zip/Postal Code.
	Zip *string `json:"zip,omitempty"`
}

type WebinarRegistrantCreateRequest struct {
	RequestBody WebinarRegistrantCreateApplicationJSON `request:"mediaType=application/json"`
	// Occurrence ID. Get this value from the webinar get API. Multiple values separated by a comma.
	OccurrenceIds *string `queryParam:"style=form,explode=true,name=occurrence_ids"`
	// The webinar ID in "**long**" format(represented as int64 data type in JSON).
	WebinarID int64 `pathParam:"style=simple,explode=false,name=webinarId"`
}

// WebinarRegistrantCreate201ApplicationXML - **HTTP Status Code:** `201`<br>
// Registration created.
type WebinarRegistrantCreate201ApplicationXML struct {
	// Webinar ID
	ID *string
	// Unique URL for this registrant to join the Webinar. This URL should only be shared with the registrant for whom the API request was made.
	JoinURL *string
	// Registrant ID
	RegistrantID *string
	// Start time
	StartTime *time.Time
	// Topic
	Topic *string
}

// WebinarRegistrantCreate201ApplicationJSON - **HTTP Status Code:** `201`<br>
// Registration created.
type WebinarRegistrantCreate201ApplicationJSON struct {
	// Webinar ID
	ID *string `json:"id,omitempty"`
	// Unique URL for this registrant to join the Webinar. This URL should only be shared with the registrant for whom the API request was made.
	JoinURL *string `json:"join_url,omitempty"`
	// Registrant ID
	RegistrantID *string `json:"registrant_id,omitempty"`
	// Start time
	StartTime *time.Time `json:"start_time,omitempty"`
	// Topic
	Topic *string `json:"topic,omitempty"`
}

type WebinarRegistrantCreateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `201`<br>
	// Registration created.
	WebinarRegistrantCreate201ApplicationJSONObject *WebinarRegistrantCreate201ApplicationJSON
}
