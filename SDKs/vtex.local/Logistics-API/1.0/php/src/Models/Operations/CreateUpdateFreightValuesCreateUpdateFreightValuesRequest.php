<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateUpdateFreightValuesCreateUpdateFreightValuesRequest
{
    /**
     * Fixed shipping cost to be charged in a decimal number.
     * 
     * @var string $absoluteMoneyCost
     */
	#[\JMS\Serializer\Annotation\SerializedName('absoluteMoneyCost')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $absoluteMoneyCost;
    
    /**
     * Three letter ISO code for the country where the delivery will take place.
     * 
     * @var string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $country;
    
    /**
     * Maximum volume that can be transported by the carrier in cmÂ³.
     * 
     * @var int $maxVolume
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxVolume')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $maxVolume;
    
    /**
     * Indicates desired action for the object. Possible values are `1` (Insert), `2` (Update) or `3`(Delete).
     * 
     * @var int $operationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('operationType')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $operationType;
    
    /**
     * Polygon ID, according to the [geolocation](https://help.vtex.com/en/tutorial/registering-geolocation/) feature.
     * 
     * @var string $polygon
     */
	#[\JMS\Serializer\Annotation\SerializedName('polygon')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $polygon;
    
    /**
     * [Price-based additional shipping charge](https://help.vtex.com/en/tutorial/additional-shipping-costs--2vqGwMn0LabkOHY6zSHYNV), calculated based on the total price of the order, in decimal number. You must fill in this field with a percentage value. For example, for an additional charge of 10%, fill in the table with 10.
     * 
     * @var int $pricePercent
     */
	#[\JMS\Serializer\Annotation\SerializedName('pricePercent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $pricePercent;
    
    /**
     * [Weight-based additional shipping charge](https://help.vtex.com/en/tutorial/additional-shipping-costs--2vqGwMn0LabkOHY6zSHYNV), calculated based on the total weight of the order.
     * 
     * @var int $pricePercentByWeight
     */
	#[\JMS\Serializer\Annotation\SerializedName('pricePercentByWeight')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $pricePercentByWeight;
    
    /**
     * Delivery time frame informed by the carrier, in the format DD.HH:MM:SS.
     * 
     * @var string $timeCost
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeCost')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $timeCost;
    
    /**
     * Maximum weight allowed.
     * 
     * @var int $weightEnd
     */
	#[\JMS\Serializer\Annotation\SerializedName('weightEnd')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $weightEnd;
    
    /**
     * Minimum weight allowed
     * 
     * @var int $weightStart
     */
	#[\JMS\Serializer\Annotation\SerializedName('weightStart')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $weightStart;
    
    /**
     * End of postal code interval.
     * 
     * @var string $zipCodeEnd
     */
	#[\JMS\Serializer\Annotation\SerializedName('zipCodeEnd')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $zipCodeEnd;
    
    /**
     * Start of postal code interval.
     * 
     * @var string $zipCodeStart
     */
	#[\JMS\Serializer\Annotation\SerializedName('zipCodeStart')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $zipCodeStart;
    
	public function __construct()
	{
		$this->absoluteMoneyCost = "";
		$this->country = "";
		$this->maxVolume = 0;
		$this->operationType = 0;
		$this->polygon = "";
		$this->pricePercent = 0;
		$this->pricePercentByWeight = 0;
		$this->timeCost = "";
		$this->weightEnd = 0;
		$this->weightStart = 0;
		$this->zipCodeEnd = "";
		$this->zipCodeStart = "";
	}
}
