"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Coverage = exports.CoverageRequestServiceTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 *
 * @remarks
 * Value | Description
 * --- | ----
 * `'1'` | Medical Care
 * `'2'` | Surgical
 * `'3'` | Consultation
 * `'4'` | Diagnostic X-Ray
 * `'5'` | Diagnostic Lab
 * `'6'` | Radiation Therapy
 * `'7'` | Anesthesia
 * `'8'` | Surgical Assistance
 * `'9'` | Other Medical
 * `'10'` | Blood Charges
 * `'11'` | Used Durable Medical Equipment
 * `'12'` | Durable Medical Equipment Purchase
 * `'13'` | Ambulatory Service Center Facility
 * `'14'` | Renal Supplies in the Home
 * `'15'` | Alternate Method Dialysis
 * `'16'` | Chronic Renal Disease (CRD) Equipment
 * `'17'` | Pre-Admission Testing
 * `'18'` | Durable Medical Equipment Rental
 * `'19'` | Pneumonia Vaccine
 * `'20'` | Second Surgical Opinion
 * `'21'` | Third Surgical Opinion
 * `'22'` | Social Work
 * `'23'` | Diagnostic Dental
 * `'24'` | Periodontics
 * `'25'` | Restorative
 * `'26'` | Endodontics
 * `'27'` | Maxillofacial Prosthetics
 * `'28'` | Adjunctive Dental Services
 * `'30'` | Health Benefit Plan Coverage
 * `'32'` | Plan Waiting Period
 * `'33'` | Chiropractic
 * `'34'` | Chiropractic Office Visits
 * `'35'` | Dental Care
 * `'36'` | Dental Crowns
 * `'37'` | Dental Accident
 * `'38'` | Orthodontics
 * `'39'` | Prosthodontics
 * `'40'` | Oral Surgery
 * `'41'` | Routine (Preventive) Dental
 * `'42'` | Home Health Care
 * `'43'` | Home Health Prescriptions
 * `'44'` | Home Health Visits
 * `'45'` | Hospice
 * `'46'` | Respite Care
 * `'47'` | Hospital
 * `'48'` | Hospital - Inpatient
 * `'49'` | Hospital - Room and Board
 * `'50'` | Hospital - Outpatient
 * `'51'` | Hospital - Emergency Accident
 * `'52'` | Hospital - Emergency Medical
 * `'53'` | Hospital - Ambulatory Surgical
 * `'54'` | Long Term Care
 * `'55'` | Major Medical
 * `'56'` | Medically Related Transportation
 * `'57'` | Air Transportation
 * `'58'` | Cabulance
 * `'59'` | Licensed Ambulance
 * `'60'` | General Benefits
 * `'61'` | In-vitro Fertilization
 * `'62'` | MRI/CAT Scan
 * `'63'` | Donor Procedures
 * `'64'` | Acupuncture
 * `'65'` | Newborn Care
 * `'66'` | Pathology
 * `'67'` | Smoking Cessation
 * `'68'` | Well Baby Care
 * `'69'` | Maternity
 * `'70'` | Transplants
 * `'71'` | Audiology Exam
 * `'72'` | Inhalation Therapy
 * `'73'` | Diagnostic Medical
 * `'74'` | Private Duty Nursing
 * `'75'` | Prosthetic Device
 * `'76'` | Dialysis
 * `'77'` | Otological Exam
 * `'78'` | Chemotherapy
 * `'79'` | Allergy Testing
 * `'80'` | Immunizations
 * `'81'` | Routine Physical
 * `'82'` | Family Planning
 * `'83'` | Infertility
 * `'84'` | Abortion
 * `'85'` | AIDS
 * `'86'` | Emergency Services
 * `'87'` | Cancer
 * `'88'` | Pharmacy
 * `'89'` | Free Standing Prescription Drug
 * `'90'` | Mail Order Prescription Drug
 * `'91'` | Brand Name Prescription Drug
 * `'92'` | Generic Prescription Drug
 * `'93'` | Podiatry
 * `'94'` | Podiatry - Office Visits
 * `'95'` | Podiatry - Nursing Home Visits
 * `'96'` | Professional (Physician)
 * `'97'` | Anesthesiologist
 * `'98'` | Professional (Physician) Visit - Office
 * `'99'` | Professional (Physician) Visit - Inpatient
 * `'A0'` | Professional (Physician) Visit - Outpatient
 * `'A1'` | Professional (Physician) Visit - Nursing Home
 * `'A2'` | Professional (Physician) Visit - Skilled Nursing Facility
 * `'A3'` | Professional (Physician) Visit - Home
 * `'A4'` | Psychiatric
 * `'A5'` | Psychiatric - Room and Board
 * `'A6'` | Psychotherapy
 * `'A7'` | Psychiatric - Inpatient
 * `'A8'` | Psychiatric - Outpatient
 * `'A9'` | Rehabilitation
 * `'AA'` | Rehabilitation - Room and Board
 * `'AB'` | Rehabilitation - Inpatient
 * `'AC'` | Rehabilitation - Outpatient
 * `'AD'` | Occupational Therapy
 * `'AE'` | Physical Medicine
 * `'AF'` | Speech Therapy
 * `'AG'` | Skilled Nursing Care
 * `'AH'` | Skilled Nursing Care - Room and Board
 * `'AI'` | Substance Abuse
 * `'AJ'` | Alcoholism
 * `'AK'` | Drug Addiction
 * `'AL'` | Vision (Optometry)
 * `'AM'` | Frames
 * `'AN'` | Routine Exam
 * `'AO'` | Lenses
 * `'AQ'` | Nonmedically Necessary Physical
 * `'AR'` | Experimental Drug Therapy
 * `'B1'` | Burn Care
 * `'B2'` | Brand Name Prescription Drug - Formulary
 * `'B3'` | Brand Name Prescription Drug - Non-Formulary
 * `'BA'` | Independent Medical Evaluation
 * `'BB'` | Partial Hospitalization (Psychiatric)
 * `'BC'` | Day Care (Psychiatric)
 * `'BD'` | Cognitive Therapy
 * `'BE'` | Massage Therapy
 * `'BF'` | Pulmonary Rehabilitation
 * `'BG'` | Cardiac Rehabilitation
 * `'BH'` | Pediatric
 * `'BI'` | Nursery
 * `'BJ'` | Skin
 * `'BK'` | Orthopedic
 * `'BL'` | Cardiac
 * `'BM'` | Lymphatic
 * `'BN'` | Gastrointestinal
 * `'BP'` | Endocrine
 * `'BQ'` | Neurology
 * `'BR'` | Eye
 * `'BS'` | Invasive Procedures
 * `'BT'` | Gynecological
 * `'BU'` | Obstetrical
 * `'BV'` | Obstetrical/Gynecological
 * `'BW'` | Mail Order Prescription Drug: Brand Name
 * `'BX'` | Mail Order Prescription Drug: Generic
 * `'BY'` | Physician Visit - Office: Sick
 * `'BZ'` | Physician Visit - Office: Well
 * `'C1'` | Coronary Care
 * `'CA'` | Private Duty Nursing - Inpatient
 * `'CB'` | Private Duty Nursing - Home
 * `'CC'` | Surgical Benefits - Professional (Physician)
 * `'CD'` | Surgical Benefits - Facility
 * `'CE'` | Mental Health Provider - Inpatient
 * `'CF'` | Mental Health Provider - Outpatient
 * `'CG'` | Mental Health Facility - Inpatient
 * `'CH'` | Mental Health Facility - Outpatient
 * `'CI'` | Substance Abuse Facility - Inpatient
 * `'CJ'` | Substance Abuse Facility - Outpatient
 * `'CK'` | Screening X-ray
 * `'CL'` | Screening laboratory
 * `'CM'` | Mammogram, High Risk Patient
 * `'CN'` | Mammogram, Low Risk Patient
 * `'CO'` | Flu Vaccination
 * `'CP'` | Eyewear and Eyewear Accessories
 * `'CQ'` | Case Management
 * `'DG'` | Dermatology
 * `'DM'` | Durable Medical Equipment
 * `'DS'` | Diabetic Supplies
 * `'GF'` | Generic Prescription Drug - Formulary
 * `'GN'` | Generic Prescription Drug - Non-Formulary
 * `'GY'` | Allergy
 * `'IC'` | Intensive Care
 * `'MH'` | Mental Health
 * `'NI'` | Neonatal Intensive Care
 * `'ON'` | Oncology
 * `'PT'` | Physical Therapy
 * `'PU'` | Pulmonary
 * `'RN'` | Renal
 * `'RT'` | Residential Psychiatric Treatment
 * `'TC'` | Transitional Care
 * `'TN'` | Transitional Nursery Care
 * `'UC'` | Urgent Care
 *
 */
var CoverageRequestServiceTypeEnum;
(function (CoverageRequestServiceTypeEnum) {
    CoverageRequestServiceTypeEnum["One"] = "1";
    CoverageRequestServiceTypeEnum["Two"] = "2";
    CoverageRequestServiceTypeEnum["Three"] = "3";
    CoverageRequestServiceTypeEnum["Four"] = "4";
    CoverageRequestServiceTypeEnum["Five"] = "5";
    CoverageRequestServiceTypeEnum["Six"] = "6";
    CoverageRequestServiceTypeEnum["Seven"] = "7";
    CoverageRequestServiceTypeEnum["Eight"] = "8";
    CoverageRequestServiceTypeEnum["Nine"] = "9";
    CoverageRequestServiceTypeEnum["Ten"] = "10";
    CoverageRequestServiceTypeEnum["Eleven"] = "11";
    CoverageRequestServiceTypeEnum["Twelve"] = "12";
    CoverageRequestServiceTypeEnum["Thirteen"] = "13";
    CoverageRequestServiceTypeEnum["Fourteen"] = "14";
    CoverageRequestServiceTypeEnum["Fifteen"] = "15";
    CoverageRequestServiceTypeEnum["Sixteen"] = "16";
    CoverageRequestServiceTypeEnum["Seventeen"] = "17";
    CoverageRequestServiceTypeEnum["Eighteen"] = "18";
    CoverageRequestServiceTypeEnum["Nineteen"] = "19";
    CoverageRequestServiceTypeEnum["Twenty"] = "20";
    CoverageRequestServiceTypeEnum["TwentyOne"] = "21";
    CoverageRequestServiceTypeEnum["TwentyTwo"] = "22";
    CoverageRequestServiceTypeEnum["TwentyThree"] = "23";
    CoverageRequestServiceTypeEnum["TwentyFour"] = "24";
    CoverageRequestServiceTypeEnum["TwentyFive"] = "25";
    CoverageRequestServiceTypeEnum["TwentySix"] = "26";
    CoverageRequestServiceTypeEnum["TwentySeven"] = "27";
    CoverageRequestServiceTypeEnum["TwentyEight"] = "28";
    CoverageRequestServiceTypeEnum["Thirty"] = "30";
    CoverageRequestServiceTypeEnum["ThirtyTwo"] = "32";
    CoverageRequestServiceTypeEnum["ThirtyThree"] = "33";
    CoverageRequestServiceTypeEnum["ThirtyFour"] = "34";
    CoverageRequestServiceTypeEnum["ThirtyFive"] = "35";
    CoverageRequestServiceTypeEnum["ThirtySix"] = "36";
    CoverageRequestServiceTypeEnum["ThirtySeven"] = "37";
    CoverageRequestServiceTypeEnum["ThirtyEight"] = "38";
    CoverageRequestServiceTypeEnum["ThirtyNine"] = "39";
    CoverageRequestServiceTypeEnum["Forty"] = "40";
    CoverageRequestServiceTypeEnum["FortyOne"] = "41";
    CoverageRequestServiceTypeEnum["FortyTwo"] = "42";
    CoverageRequestServiceTypeEnum["FortyThree"] = "43";
    CoverageRequestServiceTypeEnum["FortyFour"] = "44";
    CoverageRequestServiceTypeEnum["FortyFive"] = "45";
    CoverageRequestServiceTypeEnum["FortySix"] = "46";
    CoverageRequestServiceTypeEnum["FortySeven"] = "47";
    CoverageRequestServiceTypeEnum["FortyEight"] = "48";
    CoverageRequestServiceTypeEnum["FortyNine"] = "49";
    CoverageRequestServiceTypeEnum["Fifty"] = "50";
    CoverageRequestServiceTypeEnum["FiftyOne"] = "51";
    CoverageRequestServiceTypeEnum["FiftyTwo"] = "52";
    CoverageRequestServiceTypeEnum["FiftyThree"] = "53";
    CoverageRequestServiceTypeEnum["FiftyFour"] = "54";
    CoverageRequestServiceTypeEnum["FiftyFive"] = "55";
    CoverageRequestServiceTypeEnum["FiftySix"] = "56";
    CoverageRequestServiceTypeEnum["FiftySeven"] = "57";
    CoverageRequestServiceTypeEnum["FiftyEight"] = "58";
    CoverageRequestServiceTypeEnum["FiftyNine"] = "59";
    CoverageRequestServiceTypeEnum["Sixty"] = "60";
    CoverageRequestServiceTypeEnum["SixtyOne"] = "61";
    CoverageRequestServiceTypeEnum["SixtyTwo"] = "62";
    CoverageRequestServiceTypeEnum["SixtyThree"] = "63";
    CoverageRequestServiceTypeEnum["SixtyFour"] = "64";
    CoverageRequestServiceTypeEnum["SixtyFive"] = "65";
    CoverageRequestServiceTypeEnum["SixtySix"] = "66";
    CoverageRequestServiceTypeEnum["SixtySeven"] = "67";
    CoverageRequestServiceTypeEnum["SixtyEight"] = "68";
    CoverageRequestServiceTypeEnum["SixtyNine"] = "69";
    CoverageRequestServiceTypeEnum["Seventy"] = "70";
    CoverageRequestServiceTypeEnum["SeventyOne"] = "71";
    CoverageRequestServiceTypeEnum["SeventyTwo"] = "72";
    CoverageRequestServiceTypeEnum["SeventyThree"] = "73";
    CoverageRequestServiceTypeEnum["SeventyFour"] = "74";
    CoverageRequestServiceTypeEnum["SeventyFive"] = "75";
    CoverageRequestServiceTypeEnum["SeventySix"] = "76";
    CoverageRequestServiceTypeEnum["SeventySeven"] = "77";
    CoverageRequestServiceTypeEnum["SeventyEight"] = "78";
    CoverageRequestServiceTypeEnum["SeventyNine"] = "79";
    CoverageRequestServiceTypeEnum["Eighty"] = "80";
    CoverageRequestServiceTypeEnum["EightyOne"] = "81";
    CoverageRequestServiceTypeEnum["EightyTwo"] = "82";
    CoverageRequestServiceTypeEnum["EightyThree"] = "83";
    CoverageRequestServiceTypeEnum["EightyFour"] = "84";
    CoverageRequestServiceTypeEnum["EightyFive"] = "85";
    CoverageRequestServiceTypeEnum["EightySix"] = "86";
    CoverageRequestServiceTypeEnum["EightySeven"] = "87";
    CoverageRequestServiceTypeEnum["EightyEight"] = "88";
    CoverageRequestServiceTypeEnum["EightyNine"] = "89";
    CoverageRequestServiceTypeEnum["Ninety"] = "90";
    CoverageRequestServiceTypeEnum["NinetyOne"] = "91";
    CoverageRequestServiceTypeEnum["NinetyTwo"] = "92";
    CoverageRequestServiceTypeEnum["NinetyThree"] = "93";
    CoverageRequestServiceTypeEnum["NinetyFour"] = "94";
    CoverageRequestServiceTypeEnum["NinetyFive"] = "95";
    CoverageRequestServiceTypeEnum["NinetySix"] = "96";
    CoverageRequestServiceTypeEnum["NinetySeven"] = "97";
    CoverageRequestServiceTypeEnum["NinetyEight"] = "98";
    CoverageRequestServiceTypeEnum["NinetyNine"] = "99";
    CoverageRequestServiceTypeEnum["A0"] = "A0";
    CoverageRequestServiceTypeEnum["A1"] = "A1";
    CoverageRequestServiceTypeEnum["A2"] = "A2";
    CoverageRequestServiceTypeEnum["A3"] = "A3";
    CoverageRequestServiceTypeEnum["A4"] = "A4";
    CoverageRequestServiceTypeEnum["A5"] = "A5";
    CoverageRequestServiceTypeEnum["A6"] = "A6";
    CoverageRequestServiceTypeEnum["A7"] = "A7";
    CoverageRequestServiceTypeEnum["A8"] = "A8";
    CoverageRequestServiceTypeEnum["A9"] = "A9";
    CoverageRequestServiceTypeEnum["Aa"] = "AA";
    CoverageRequestServiceTypeEnum["Ab"] = "AB";
    CoverageRequestServiceTypeEnum["Ac"] = "AC";
    CoverageRequestServiceTypeEnum["Ad"] = "AD";
    CoverageRequestServiceTypeEnum["Ae"] = "AE";
    CoverageRequestServiceTypeEnum["Af"] = "AF";
    CoverageRequestServiceTypeEnum["Ag"] = "AG";
    CoverageRequestServiceTypeEnum["Ah"] = "AH";
    CoverageRequestServiceTypeEnum["Ai"] = "AI";
    CoverageRequestServiceTypeEnum["Aj"] = "AJ";
    CoverageRequestServiceTypeEnum["Ak"] = "AK";
    CoverageRequestServiceTypeEnum["Al"] = "AL";
    CoverageRequestServiceTypeEnum["Am"] = "AM";
    CoverageRequestServiceTypeEnum["An"] = "AN";
    CoverageRequestServiceTypeEnum["Ao"] = "AO";
    CoverageRequestServiceTypeEnum["Aq"] = "AQ";
    CoverageRequestServiceTypeEnum["Ar"] = "AR";
    CoverageRequestServiceTypeEnum["B1"] = "B1";
    CoverageRequestServiceTypeEnum["B2"] = "B2";
    CoverageRequestServiceTypeEnum["B3"] = "B3";
    CoverageRequestServiceTypeEnum["Ba"] = "BA";
    CoverageRequestServiceTypeEnum["Bb"] = "BB";
    CoverageRequestServiceTypeEnum["Bc"] = "BC";
    CoverageRequestServiceTypeEnum["Bd"] = "BD";
    CoverageRequestServiceTypeEnum["Be"] = "BE";
    CoverageRequestServiceTypeEnum["Bf"] = "BF";
    CoverageRequestServiceTypeEnum["Bg"] = "BG";
    CoverageRequestServiceTypeEnum["Bh"] = "BH";
    CoverageRequestServiceTypeEnum["Bi"] = "BI";
    CoverageRequestServiceTypeEnum["Bj"] = "BJ";
    CoverageRequestServiceTypeEnum["Bk"] = "BK";
    CoverageRequestServiceTypeEnum["Bl"] = "BL";
    CoverageRequestServiceTypeEnum["Bm"] = "BM";
    CoverageRequestServiceTypeEnum["Bn"] = "BN";
    CoverageRequestServiceTypeEnum["Bp"] = "BP";
    CoverageRequestServiceTypeEnum["Bq"] = "BQ";
    CoverageRequestServiceTypeEnum["Br"] = "BR";
    CoverageRequestServiceTypeEnum["Bs"] = "BS";
    CoverageRequestServiceTypeEnum["Bt"] = "BT";
    CoverageRequestServiceTypeEnum["Bu"] = "BU";
    CoverageRequestServiceTypeEnum["Bv"] = "BV";
    CoverageRequestServiceTypeEnum["Bw"] = "BW";
    CoverageRequestServiceTypeEnum["Bx"] = "BX";
    CoverageRequestServiceTypeEnum["By"] = "BY";
    CoverageRequestServiceTypeEnum["Bz"] = "BZ";
    CoverageRequestServiceTypeEnum["C1"] = "C1";
    CoverageRequestServiceTypeEnum["Ca"] = "CA";
    CoverageRequestServiceTypeEnum["Cb"] = "CB";
    CoverageRequestServiceTypeEnum["Cc"] = "CC";
    CoverageRequestServiceTypeEnum["Cd"] = "CD";
    CoverageRequestServiceTypeEnum["Ce"] = "CE";
    CoverageRequestServiceTypeEnum["Cf"] = "CF";
    CoverageRequestServiceTypeEnum["Cg"] = "CG";
    CoverageRequestServiceTypeEnum["Ch"] = "CH";
    CoverageRequestServiceTypeEnum["Ci"] = "CI";
    CoverageRequestServiceTypeEnum["Cj"] = "CJ";
    CoverageRequestServiceTypeEnum["Ck"] = "CK";
    CoverageRequestServiceTypeEnum["Cl"] = "CL";
    CoverageRequestServiceTypeEnum["Cm"] = "CM";
    CoverageRequestServiceTypeEnum["Cn"] = "CN";
    CoverageRequestServiceTypeEnum["Co"] = "CO";
    CoverageRequestServiceTypeEnum["Cp"] = "CP";
    CoverageRequestServiceTypeEnum["Cq"] = "CQ";
    CoverageRequestServiceTypeEnum["Dg"] = "DG";
    CoverageRequestServiceTypeEnum["Dm"] = "DM";
    CoverageRequestServiceTypeEnum["Ds"] = "DS";
    CoverageRequestServiceTypeEnum["Gf"] = "GF";
    CoverageRequestServiceTypeEnum["Gn"] = "GN";
    CoverageRequestServiceTypeEnum["Gy"] = "GY";
    CoverageRequestServiceTypeEnum["Ic"] = "IC";
    CoverageRequestServiceTypeEnum["Mh"] = "MH";
    CoverageRequestServiceTypeEnum["Ni"] = "NI";
    CoverageRequestServiceTypeEnum["On"] = "ON";
    CoverageRequestServiceTypeEnum["Pt"] = "PT";
    CoverageRequestServiceTypeEnum["Pu"] = "PU";
    CoverageRequestServiceTypeEnum["Rn"] = "RN";
    CoverageRequestServiceTypeEnum["Rt"] = "RT";
    CoverageRequestServiceTypeEnum["Tc"] = "TC";
    CoverageRequestServiceTypeEnum["Tn"] = "TN";
    CoverageRequestServiceTypeEnum["Uc"] = "UC";
})(CoverageRequestServiceTypeEnum = exports.CoverageRequestServiceTypeEnum || (exports.CoverageRequestServiceTypeEnum = {}));
/**
 * OK
 */
var Coverage = /** @class */ (function (_super) {
    __extends(Coverage, _super);
    function Coverage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "appointment" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "appointment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cob_level" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "cobLevel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "coverage_details" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "coverageDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "coverage_subscriber" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "coverageSubscriber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "eligibility" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "eligibility", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "patient" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "patient", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payer_name" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "payerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "query_date" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "queryDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "request_service_type" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "requestServiceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "service_type_description" }),
        __metadata("design:type", String)
    ], Coverage.prototype, "serviceTypeDescription", void 0);
    return Coverage;
}(utils_1.SpeakeasyBase));
exports.Coverage = Coverage;
