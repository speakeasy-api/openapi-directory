// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GroupsExportOptionsExportFormatEnum - The file format for exported messages.
type GroupsExportOptionsExportFormatEnum string

const (
	GroupsExportOptionsExportFormatEnumExportFormatUnspecified GroupsExportOptionsExportFormatEnum = "EXPORT_FORMAT_UNSPECIFIED"
	GroupsExportOptionsExportFormatEnumMbox                    GroupsExportOptionsExportFormatEnum = "MBOX"
	GroupsExportOptionsExportFormatEnumPst                     GroupsExportOptionsExportFormatEnum = "PST"
)

func (e GroupsExportOptionsExportFormatEnum) ToPointer() *GroupsExportOptionsExportFormatEnum {
	return &e
}

func (e *GroupsExportOptionsExportFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXPORT_FORMAT_UNSPECIFIED":
		fallthrough
	case "MBOX":
		fallthrough
	case "PST":
		*e = GroupsExportOptionsExportFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupsExportOptionsExportFormatEnum: %v", v)
	}
}

// GroupsExportOptions - Options for Groups exports.
type GroupsExportOptions struct {
	// The file format for exported messages.
	ExportFormat *GroupsExportOptionsExportFormatEnum `json:"exportFormat,omitempty"`
}
