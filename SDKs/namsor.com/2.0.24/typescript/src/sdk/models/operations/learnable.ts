/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class LearnableRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=learnable",
  })
  learnable: boolean;

  /**
   * The API Key to set as learnable/non learnable.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=source",
  })
  source: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=token",
  })
  token: string;
}

export class LearnableResponse extends SpeakeasyBase {
  /**
   * Set learning from source.
   */
  @SpeakeasyMetadata()
  apiKeyOut?: shared.APIKeyOut;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
