// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDDocumentsDocumentIDPathParams struct {
	// Id of the document
	DocumentID string `pathParam:"style=simple,explode=false,name=documentId"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum string

const (
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumCustomer    PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "customer"
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumProvider    PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "provider"
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumBank        PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "bank"
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumCashWoucher PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "cashWoucher"
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumFiscal      PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "fiscal"
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumInsurance   PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "insurance"
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumSocial      PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "social"
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumOther       PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "other"
	PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnumPermanent   PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum = "permanent"
)

func (e *PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum: %s", s)
	}
}

type PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccounting struct {
	AccountedOn *string                                                                 `json:"AccountedOn,omitempty"`
	Workbook    *PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccountingWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth   *string                                                                 `json:"YearMonth,omitempty"`
}

// PatchSpacesSpaceIDDocumentsDocumentIDRequestBody - document to modify (except name, class and archivaldate)
type PatchSpacesSpaceIDDocumentsDocumentIDRequestBody struct {
	Accounting *PatchSpacesSpaceIDDocumentsDocumentIDRequestBodyAccounting `json:"Accounting,omitempty"`
	Author     *string                                                     `json:"Author,omitempty"`
	Code       *string                                                     `json:"Code,omitempty"`
	Comment    *string                                                     `json:"Comment,omitempty"`
	Date       *string                                                     `json:"Date,omitempty"`
	Title      *string                                                     `json:"Title,omitempty"`
}

type PatchSpacesSpaceIDDocumentsDocumentIDRequest struct {
	PathParams PatchSpacesSpaceIDDocumentsDocumentIDPathParams
	// document to modify (except name, class and archivaldate)
	Request PatchSpacesSpaceIDDocumentsDocumentIDRequestBody `request:"mediaType=application/json"`
}

type PatchSpacesSpaceIDDocumentsDocumentIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
