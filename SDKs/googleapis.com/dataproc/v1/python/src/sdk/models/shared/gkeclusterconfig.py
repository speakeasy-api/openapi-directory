"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gkenodepooltarget as shared_gkenodepooltarget
from ..shared import namespacedgkedeploymenttarget as shared_namespacedgkedeploymenttarget
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GkeClusterConfig:
    r"""The cluster's GKE config."""
    
    gke_cluster_target: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gkeClusterTarget'), 'exclude': lambda f: f is None }})
    r"""Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'"""  
    namespaced_gke_deployment_target: Optional[shared_namespacedgkedeploymenttarget.NamespacedGkeDeploymentTarget] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namespacedGkeDeploymentTarget'), 'exclude': lambda f: f is None }})
    r"""Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster."""  
    node_pool_target: Optional[list[shared_gkenodepooltarget.GkeNodePoolTarget]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodePoolTarget'), 'exclude': lambda f: f is None }})
    r"""Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings."""  
    