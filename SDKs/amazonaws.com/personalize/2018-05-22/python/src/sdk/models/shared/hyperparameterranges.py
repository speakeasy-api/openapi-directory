"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import categoricalhyperparameterrange as shared_categoricalhyperparameterrange
from ..shared import continuoushyperparameterrange as shared_continuoushyperparameterrange
from ..shared import integerhyperparameterrange as shared_integerhyperparameterrange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HyperParameterRanges:
    r"""Specifies the hyperparameters and their ranges. Hyperparameters can be categorical, continuous, or integer-valued."""
    
    categorical_hyper_parameter_ranges: Optional[list[shared_categoricalhyperparameterrange.CategoricalHyperParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categoricalHyperParameterRanges'), 'exclude': lambda f: f is None }})  
    continuous_hyper_parameter_ranges: Optional[list[shared_continuoushyperparameterrange.ContinuousHyperParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('continuousHyperParameterRanges'), 'exclude': lambda f: f is None }})  
    integer_hyper_parameter_ranges: Optional[list[shared_integerhyperparameterrange.IntegerHyperParameterRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integerHyperParameterRanges'), 'exclude': lambda f: f is None }})  
    