/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { VideoAbuseReportReason } from "./videoabusereportreason";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class VideoAbuseReportReasonListResponse extends SpeakeasyBase {
  /**
   * Etag of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Serialized EventId of the request which produced this response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventId" })
  eventId?: string;

  /**
   * A list of valid abuse reasons that are used with `video.ReportAbuse`.
   */
  @SpeakeasyMetadata({ elemType: VideoAbuseReportReason })
  @Expose({ name: "items" })
  @Type(() => VideoAbuseReportReason)
  items?: VideoAbuseReportReason[];

  /**
   * Identifies what kind of resource this is. Value: the fixed string `"youtube#videoAbuseReportReasonListResponse"`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The `visitorId` identifies the visitor.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visitorId" })
  visitorId?: string;
}
