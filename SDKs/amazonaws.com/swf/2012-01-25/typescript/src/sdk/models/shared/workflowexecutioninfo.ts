/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloseStatusEnum } from "./closestatusenum";
import { ExecutionStatusEnum } from "./executionstatusenum";
import { WorkflowExecution } from "./workflowexecution";
import { WorkflowType } from "./workflowtype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about a workflow execution.
 */
export class WorkflowExecutionInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cancelRequested" })
  cancelRequested?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "closeStatus" })
  closeStatus?: CloseStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "closeTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  closeTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "execution" })
  @Type(() => WorkflowExecution)
  execution: WorkflowExecution;

  @SpeakeasyMetadata()
  @Expose({ name: "executionStatus" })
  executionStatus: ExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  @Type(() => WorkflowExecution)
  parent?: WorkflowExecution;

  @SpeakeasyMetadata()
  @Expose({ name: "startTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTimestamp: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "tagList" })
  tagList?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "workflowType" })
  @Type(() => WorkflowType)
  workflowType: WorkflowType;
}
