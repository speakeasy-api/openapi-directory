// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteIpamScopeActionEnum
type GETDeleteIpamScopeActionEnum string

const (
	GETDeleteIpamScopeActionEnumDeleteIpamScope GETDeleteIpamScopeActionEnum = "DeleteIpamScope"
)

func (e GETDeleteIpamScopeActionEnum) ToPointer() *GETDeleteIpamScopeActionEnum {
	return &e
}

func (e *GETDeleteIpamScopeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteIpamScope":
		*e = GETDeleteIpamScopeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteIpamScopeActionEnum: %v", v)
	}
}

// GETDeleteIpamScopeVersionEnum
type GETDeleteIpamScopeVersionEnum string

const (
	GETDeleteIpamScopeVersionEnumTwoThousandAndSixteen1115 GETDeleteIpamScopeVersionEnum = "2016-11-15"
)

func (e GETDeleteIpamScopeVersionEnum) ToPointer() *GETDeleteIpamScopeVersionEnum {
	return &e
}

func (e *GETDeleteIpamScopeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteIpamScopeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteIpamScopeVersionEnum: %v", v)
	}
}

type GETDeleteIpamScopeRequest struct {
	Action GETDeleteIpamScopeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the scope to delete.
	IpamScopeID       string                        `queryParam:"style=form,explode=true,name=IpamScopeId"`
	Version           GETDeleteIpamScopeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteIpamScopeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
