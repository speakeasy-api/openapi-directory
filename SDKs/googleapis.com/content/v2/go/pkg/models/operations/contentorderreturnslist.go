// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ContentOrderreturnsListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ContentOrderreturnsListPathParams struct {
	// The ID of the account that manages the order. This cannot be a multi-client account.
	MerchantID string `pathParam:"style=simple,explode=false,name=merchantId"`
}

// ContentOrderreturnsListOrderByEnum - Return the results in the specified order.
type ContentOrderreturnsListOrderByEnum string

const (
	ContentOrderreturnsListOrderByEnumReturnCreationTimeDesc ContentOrderreturnsListOrderByEnum = "RETURN_CREATION_TIME_DESC"
	ContentOrderreturnsListOrderByEnumReturnCreationTimeAsc  ContentOrderreturnsListOrderByEnum = "RETURN_CREATION_TIME_ASC"
)

func (e *ContentOrderreturnsListOrderByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RETURN_CREATION_TIME_DESC":
		fallthrough
	case "RETURN_CREATION_TIME_ASC":
		*e = ContentOrderreturnsListOrderByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentOrderreturnsListOrderByEnum: %s", s)
	}
}

type ContentOrderreturnsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Obtains order returns created before this date (inclusively), in ISO 8601 format.
	CreatedEndDate *string `queryParam:"style=form,explode=true,name=createdEndDate"`
	// Obtains order returns created after this date (inclusively), in ISO 8601 format.
	CreatedStartDate *string `queryParam:"style=form,explode=true,name=createdStartDate"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Return the results in the specified order.
	OrderBy *ContentOrderreturnsListOrderByEnum `queryParam:"style=form,explode=true,name=orderBy"`
	// The token returned by the previous request.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type ContentOrderreturnsListRequest struct {
	PathParams  ContentOrderreturnsListPathParams
	QueryParams ContentOrderreturnsListQueryParams
	Security    ContentOrderreturnsListSecurity
}

type ContentOrderreturnsListResponse struct {
	ContentType string
	// Successful response
	OrderreturnsListResponse *shared.OrderreturnsListResponse
	StatusCode               int
	RawResponse              *http.Response
}
