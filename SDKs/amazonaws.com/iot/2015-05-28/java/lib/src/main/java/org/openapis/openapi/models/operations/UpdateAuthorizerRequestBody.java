/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateAuthorizerRequestBody {
    /**
     * The ARN of the authorizer's Lambda function.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizerFunctionArn")
    public String authorizerFunctionArn;

    public UpdateAuthorizerRequestBody withAuthorizerFunctionArn(String authorizerFunctionArn) {
        this.authorizerFunctionArn = authorizerFunctionArn;
        return this;
    }
    
    /**
     * When &lt;code&gt;true&lt;/code&gt;, the result from the authorizer\u2019s Lambda function is cached for the time specified in &lt;code&gt;refreshAfterInSeconds&lt;/code&gt;. The cached result is used while the device reuses the same HTTP connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableCachingForHttp")
    public Boolean enableCachingForHttp;

    public UpdateAuthorizerRequestBody withEnableCachingForHttp(Boolean enableCachingForHttp) {
        this.enableCachingForHttp = enableCachingForHttp;
        return this;
    }
    
    /**
     * The status of the update authorizer request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public UpdateAuthorizerRequestBodyStatusEnum status;

    public UpdateAuthorizerRequestBody withStatus(UpdateAuthorizerRequestBodyStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The key used to extract the token from the HTTP headers. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tokenKeyName")
    public String tokenKeyName;

    public UpdateAuthorizerRequestBody withTokenKeyName(String tokenKeyName) {
        this.tokenKeyName = tokenKeyName;
        return this;
    }
    
    /**
     * The public keys used to verify the token signature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tokenSigningPublicKeys")
    public java.util.Map<String, String> tokenSigningPublicKeys;

    public UpdateAuthorizerRequestBody withTokenSigningPublicKeys(java.util.Map<String, String> tokenSigningPublicKeys) {
        this.tokenSigningPublicKeys = tokenSigningPublicKeys;
        return this;
    }
    
    public UpdateAuthorizerRequestBody(){}
}
