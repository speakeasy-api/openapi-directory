"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import list_ as shared_list_
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostAPIV1ListsSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class PostAPIV1ListsRequestBodyRepliesPolicyEnum(str, Enum):
    r"""Enumerable oneOf followed list none. Defaults to list."""
    FOLLOWED = 'followed'
    LIST = 'list'
    NONE = 'none'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPIV1ListsRequestBody:
    
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""The title of the list to be created."""  
    replies_policy: Optional[PostAPIV1ListsRequestBodyRepliesPolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replies_policy'), 'exclude': lambda f: f is None }})
    r"""Enumerable oneOf followed list none. Defaults to list."""  
    

@dataclasses.dataclass
class PostAPIV1ListsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Invalid or missing Authorization header"""  
    list_: Optional[shared_list_.List] = dataclasses.field(default=None)
    r"""A list was created successfully"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    