/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BatchGetReviewsRequest - Request message for Reviews.BatchGetReviews.
 */
public class BatchGetReviewsRequest {
    /**
     * Whether to ignore rating-only reviews.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ignoreRatingOnlyReviews")
    public Boolean ignoreRatingOnlyReviews;

    public BatchGetReviewsRequest withIgnoreRatingOnlyReviews(Boolean ignoreRatingOnlyReviews) {
        this.ignoreRatingOnlyReviews = ignoreRatingOnlyReviews;
        return this;
    }
    
    /**
     * A collection of locations to fetch reviews for, specified by their names.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationNames")
    public String[] locationNames;

    public BatchGetReviewsRequest withLocationNames(String[] locationNames) {
        this.locationNames = locationNames;
        return this;
    }
    
    /**
     * Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderBy")
    public String orderBy;

    public BatchGetReviewsRequest withOrderBy(String orderBy) {
        this.orderBy = orderBy;
        return this;
    }
    
    /**
     * How many reviews to fetch per page. The default value is 200.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageSize")
    public Integer pageSize;

    public BatchGetReviewsRequest withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * If specified, it fetches the next page of reviews.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageToken")
    public String pageToken;

    public BatchGetReviewsRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    public BatchGetReviewsRequest(){}
}
