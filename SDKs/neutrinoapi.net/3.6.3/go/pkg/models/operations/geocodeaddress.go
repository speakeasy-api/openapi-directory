// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GeocodeAddressQueryParams struct {
	// The full address, partial address or name of a place to try and locate. Comma separated address components are preferred.
	Address *string `queryParam:"style=form,explode=true,name=address"`
	// The city/town name to locate
	City *string `queryParam:"style=form,explode=true,name=city"`
	// Limit result to this country (the default is no country bias)
	CountryCode *string `queryParam:"style=form,explode=true,name=country-code"`
	// The county/region name to locate
	County *string `queryParam:"style=form,explode=true,name=county"`
	// If no matches are found for the given address, start performing a recursive fuzzy search until a geolocation is found. This option is recommended for processing user input or implementing auto-complete. We use a combination of approximate string matching and data cleansing to find possible location matches
	FuzzySearch *bool `queryParam:"style=form,explode=true,name=fuzzy-search"`
	// The house/building number to locate
	HouseNumber *string `queryParam:"style=form,explode=true,name=house-number"`
	// The language to display results in, available languages are: <ul> <li>de, en, es, fr, it, pt, ru, zh</li> </ul>
	LanguageCode *string `queryParam:"style=form,explode=true,name=language-code"`
	// The postal code to locate
	PostalCode *string `queryParam:"style=form,explode=true,name=postal-code"`
	// The state name to locate
	State *string `queryParam:"style=form,explode=true,name=state"`
	// The street/road name to locate
	Street *string `queryParam:"style=form,explode=true,name=street"`
}

type GeocodeAddressRequest struct {
	QueryParams GeocodeAddressQueryParams
}

type GeocodeAddressResponse struct {
	// Your API request has been rejected. Check error code for details
	APIError               *shared.APIError
	ContentType            string
	GeocodeAddressResponse *shared.GeocodeAddressResponse
	StatusCode             int
	RawResponse            *http.Response
}
