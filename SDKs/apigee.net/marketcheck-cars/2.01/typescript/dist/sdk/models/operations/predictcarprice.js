"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PredictCarPriceResponse = exports.PredictCarPriceRequest = exports.PredictCarPriceTransmissionEnum = exports.PredictCarPriceEngineBlockEnum = exports.PredictCarPriceDrivetrainEnum = exports.PredictCarPriceCountryEnum = exports.PredictCarPriceCarTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
/**
 * Car condition
 */
var PredictCarPriceCarTypeEnum;
(function (PredictCarPriceCarTypeEnum) {
    PredictCarPriceCarTypeEnum["Used"] = "used";
    PredictCarPriceCarTypeEnum["New"] = "new";
})(PredictCarPriceCarTypeEnum = exports.PredictCarPriceCarTypeEnum || (exports.PredictCarPriceCarTypeEnum = {}));
/**
 * Country for which car price will be predicted
 */
var PredictCarPriceCountryEnum;
(function (PredictCarPriceCountryEnum) {
    PredictCarPriceCountryEnum["Us"] = "us";
    PredictCarPriceCountryEnum["Ca"] = "ca";
})(PredictCarPriceCountryEnum = exports.PredictCarPriceCountryEnum || (exports.PredictCarPriceCountryEnum = {}));
/**
 * Drivetrain on the car
 */
var PredictCarPriceDrivetrainEnum;
(function (PredictCarPriceDrivetrainEnum) {
    PredictCarPriceDrivetrainEnum["FourWD"] = "4WD";
    PredictCarPriceDrivetrainEnum["Awd"] = "AWD";
    PredictCarPriceDrivetrainEnum["Fwd"] = "FWD";
    PredictCarPriceDrivetrainEnum["Rwd"] = "RWD";
})(PredictCarPriceDrivetrainEnum = exports.PredictCarPriceDrivetrainEnum || (exports.PredictCarPriceDrivetrainEnum = {}));
/**
 * Engine Block of the car
 */
var PredictCarPriceEngineBlockEnum;
(function (PredictCarPriceEngineBlockEnum) {
    PredictCarPriceEngineBlockEnum["I"] = "I";
    PredictCarPriceEngineBlockEnum["V"] = "V";
    PredictCarPriceEngineBlockEnum["H"] = "H";
})(PredictCarPriceEngineBlockEnum = exports.PredictCarPriceEngineBlockEnum || (exports.PredictCarPriceEngineBlockEnum = {}));
/**
 * Transmission on the car
 */
var PredictCarPriceTransmissionEnum;
(function (PredictCarPriceTransmissionEnum) {
    PredictCarPriceTransmissionEnum["Manual"] = "Manual";
    PredictCarPriceTransmissionEnum["Automatic"] = "Automatic";
})(PredictCarPriceTransmissionEnum = exports.PredictCarPriceTransmissionEnum || (exports.PredictCarPriceTransmissionEnum = {}));
var PredictCarPriceRequest = /** @class */ (function (_super) {
    __extends(PredictCarPriceRequest, _super);
    function PredictCarPriceRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=api_key",
        }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "apiKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=base_exterior_color",
        }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "baseExteriorColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=base_interior_color",
        }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "baseInteriorColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=car_type",
        }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "carType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=carfax_1_owner",
        }),
        __metadata("design:type", Boolean)
    ], PredictCarPriceRequest.prototype, "carfax1Owner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=carfax_clean_title",
        }),
        __metadata("design:type", Boolean)
    ], PredictCarPriceRequest.prototype, "carfaxCleanTitle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=city_mpg",
        }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "cityMpg", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=country",
        }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=cylinders",
        }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "cylinders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=doors" }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "doors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=drivetrain",
        }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "drivetrain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=engine_block",
        }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "engineBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=engine_size",
        }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "engineSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=highway_mpg",
        }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "highwayMpg", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=is_certified",
        }),
        __metadata("design:type", Boolean)
    ], PredictCarPriceRequest.prototype, "isCertified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=latitude",
        }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "latitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=longitude",
        }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "longitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=make" }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "make", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=miles" }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "miles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=model" }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "model", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=transmission",
        }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "transmission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=trim" }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "trim", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=vin" }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "vin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=year" }),
        __metadata("design:type", Number)
    ], PredictCarPriceRequest.prototype, "year", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=zip" }),
        __metadata("design:type", String)
    ], PredictCarPriceRequest.prototype, "zip", void 0);
    return PredictCarPriceRequest;
}(utils_1.SpeakeasyBase));
exports.PredictCarPriceRequest = PredictCarPriceRequest;
var PredictCarPriceResponse = /** @class */ (function (_super) {
    __extends(PredictCarPriceResponse, _super);
    function PredictCarPriceResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PredictCarPriceResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.ErrorT)
    ], PredictCarPriceResponse.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.PricePrediction)
    ], PredictCarPriceResponse.prototype, "pricePrediction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], PredictCarPriceResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], PredictCarPriceResponse.prototype, "rawResponse", void 0);
    return PredictCarPriceResponse;
}(utils_1.SpeakeasyBase));
exports.PredictCarPriceResponse = PredictCarPriceResponse;
