// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostAPIV1FiltersSecurity struct {
	BearerAuth string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

type PostAPIV1FiltersRequestBodyContextEnum string

const (
	PostAPIV1FiltersRequestBodyContextEnumHome          PostAPIV1FiltersRequestBodyContextEnum = "home"
	PostAPIV1FiltersRequestBodyContextEnumNotifications PostAPIV1FiltersRequestBodyContextEnum = "notifications"
	PostAPIV1FiltersRequestBodyContextEnumPublic        PostAPIV1FiltersRequestBodyContextEnum = "public"
	PostAPIV1FiltersRequestBodyContextEnumThread        PostAPIV1FiltersRequestBodyContextEnum = "thread"
)

func (e *PostAPIV1FiltersRequestBodyContextEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "home":
		fallthrough
	case "notifications":
		fallthrough
	case "public":
		fallthrough
	case "thread":
		*e = PostAPIV1FiltersRequestBodyContextEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAPIV1FiltersRequestBodyContextEnum: %s", s)
	}
}

type PostAPIV1FiltersRequestBody struct {
	// Array of enumerable strings `home`, `notifications`, `public`, `thread`. At least one context must be specified.
	Context []PostAPIV1FiltersRequestBodyContextEnum
	// Number of seconds from now the filter should expire. Otherwise, null for a filter that doesn't expire.
	ExpiresIn *int64
	// Should the server irreversibly drop matching entities from home and notifications?
	Irreversible *bool
	// Text to be filtered.
	Phrase string
	// Consider word boundaries?
	WholeWord *bool
}

type PostAPIV1FiltersResponse struct {
	ContentType string
	// Invalid or missing Authorization header
	Error *shared.Error
	// The newly-created filter will be returned.
	Filter      *shared.Filter
	StatusCode  int
	RawResponse *http.Response
}
