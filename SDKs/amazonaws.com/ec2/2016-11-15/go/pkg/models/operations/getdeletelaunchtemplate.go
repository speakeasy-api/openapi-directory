// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteLaunchTemplateActionEnum
type GETDeleteLaunchTemplateActionEnum string

const (
	GETDeleteLaunchTemplateActionEnumDeleteLaunchTemplate GETDeleteLaunchTemplateActionEnum = "DeleteLaunchTemplate"
)

func (e *GETDeleteLaunchTemplateActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteLaunchTemplate":
		*e = GETDeleteLaunchTemplateActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteLaunchTemplateActionEnum: %s", s)
	}
}

// GETDeleteLaunchTemplateVersionEnum
type GETDeleteLaunchTemplateVersionEnum string

const (
	GETDeleteLaunchTemplateVersionEnumTwoThousandAndSixteen1115 GETDeleteLaunchTemplateVersionEnum = "2016-11-15"
)

func (e *GETDeleteLaunchTemplateVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteLaunchTemplateVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteLaunchTemplateVersionEnum: %s", s)
	}
}

type GETDeleteLaunchTemplateQueryParams struct {
	Action GETDeleteLaunchTemplateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// <p>The ID of the launch template.</p> <p>You must specify either the <code>LaunchTemplateId</code> or the <code>LaunchTemplateName</code>, but not both.</p>
	LaunchTemplateID *string `queryParam:"style=form,explode=true,name=LaunchTemplateId"`
	// <p>The name of the launch template.</p> <p>You must specify either the <code>LaunchTemplateName</code> or the <code>LaunchTemplateId</code>, but not both.</p>
	LaunchTemplateName *string                            `queryParam:"style=form,explode=true,name=LaunchTemplateName"`
	Version            GETDeleteLaunchTemplateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteLaunchTemplateHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteLaunchTemplateRequest struct {
	QueryParams GETDeleteLaunchTemplateQueryParams
	Headers     GETDeleteLaunchTemplateHeaders
}

type GETDeleteLaunchTemplateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
