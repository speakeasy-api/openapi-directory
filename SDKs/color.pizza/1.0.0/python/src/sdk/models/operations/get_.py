"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import color as shared_color
from ..shared import error as shared_error
from ..shared import possiblelists_enum as shared_possiblelists_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetRequest:
    
    list_: Optional[shared_possiblelists_enum.PossibleListsEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'list', 'style': 'form', 'explode': False }})
    r"""The name of the color name list to use"""  
    noduplicates: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'noduplicates', 'style': 'form', 'explode': True }})
    r"""Allow duplicate names or not"""  
    values: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'values', 'style': 'form', 'explode': True }})
    r"""The hex values of the colors to retrieve without '#'"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Get200ApplicationJSON:
    r"""OK"""
    
    colors: Optional[list[shared_color.Color]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('colors'), 'exclude': lambda f: f is None }})  
    palette_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paletteTitle'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""NOT FOUND"""  
    get_200_application_json_object: Optional[Get200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    