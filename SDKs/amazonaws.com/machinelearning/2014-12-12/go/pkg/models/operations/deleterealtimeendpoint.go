// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteRealtimeEndpointXAmzTargetEnum
type DeleteRealtimeEndpointXAmzTargetEnum string

const (
	DeleteRealtimeEndpointXAmzTargetEnumAmazonMl20141212DeleteRealtimeEndpoint DeleteRealtimeEndpointXAmzTargetEnum = "AmazonML_20141212.DeleteRealtimeEndpoint"
)

func (e *DeleteRealtimeEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonML_20141212.DeleteRealtimeEndpoint":
		*e = DeleteRealtimeEndpointXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteRealtimeEndpointXAmzTargetEnum: %s", s)
	}
}

type DeleteRealtimeEndpointRequest struct {
	DeleteRealtimeEndpointInput shared.DeleteRealtimeEndpointInput   `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DeleteRealtimeEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteRealtimeEndpointResponse struct {
	ContentType string
	// Success
	DeleteRealtimeEndpointOutput *shared.DeleteRealtimeEndpointOutput
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
