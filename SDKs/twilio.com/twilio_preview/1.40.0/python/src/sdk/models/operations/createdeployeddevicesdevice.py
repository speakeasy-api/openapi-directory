"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import preview_deployed_devices_fleet_device as shared_preview_deployed_devices_fleet_device
from typing import Optional

CREATE_DEPLOYED_DEVICES_DEVICE_SERVERS = [
	"https://preview.twilio.com",
]


@dataclasses.dataclass
class CreateDeployedDevicesDeviceSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateDeployedDevicesDeviceCreateDeployedDevicesDeviceRequest:
    
    deployment_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DeploymentSid' }})
    r"""Specifies the unique string identifier of the Deployment group that this Device is going to be associated with."""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Enabled' }})  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""Provides a human readable descriptive text to be assigned to this Device, up to 256 characters long."""  
    identity: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Identity' }})
    r"""Provides an arbitrary string identifier representing a human user to be associated with this Device, up to 256 characters long."""  
    unique_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'UniqueName' }})
    r"""Provides a unique and addressable name to be assigned to this Device, to be used in addition to SID, up to 128 characters long."""  
    

@dataclasses.dataclass
class CreateDeployedDevicesDeviceRequest:
    
    fleet_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'FleetSid', 'style': 'simple', 'explode': False }})  
    request_body: Optional[CreateDeployedDevicesDeviceCreateDeployedDevicesDeviceRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateDeployedDevicesDeviceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    preview_deployed_devices_fleet_device: Optional[shared_preview_deployed_devices_fleet_device.PreviewDeployedDevicesFleetDevice] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    