/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchRecord - A single resource returned as part of the &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Search.html"&gt;Search&lt;/a&gt; API response.
 */
public class SearchRecord {
    /**
     * A hosted endpoint for real-time inference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Endpoint")
    public Endpoint endpoint;

    public SearchRecord withEndpoint(Endpoint endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Experiment")
    public Experiment experiment;

    public SearchRecord withExperiment(Experiment experiment) {
        this.experiment = experiment;
        return this;
    }
    
    /**
     * Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeatureGroup")
    public FeatureGroup featureGroup;

    public SearchRecord withFeatureGroup(FeatureGroup featureGroup) {
        this.featureGroup = featureGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeatureMetadata")
    public FeatureMetadata featureMetadata;

    public SearchRecord withFeatureMetadata(FeatureMetadata featureMetadata) {
        this.featureMetadata = featureMetadata;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HyperParameterTuningJob")
    public HyperParameterTuningJobSearchEntity hyperParameterTuningJob;

    public SearchRecord withHyperParameterTuningJob(HyperParameterTuningJobSearchEntity hyperParameterTuningJob) {
        this.hyperParameterTuningJob = hyperParameterTuningJob;
        return this;
    }
    
    /**
     * A model displayed in the Amazon SageMaker Model Dashboard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Model")
    public ModelDashboardModel model;

    public SearchRecord withModel(ModelDashboardModel model) {
        this.model = model;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModelCard")
    public ModelCard modelCard;

    public SearchRecord withModelCard(ModelCard modelCard) {
        this.modelCard = modelCard;
        return this;
    }
    
    /**
     * A versioned model that can be deployed for SageMaker inference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModelPackage")
    public ModelPackage modelPackage;

    public SearchRecord withModelPackage(ModelPackage modelPackage) {
        this.modelPackage = modelPackage;
        return this;
    }
    
    /**
     * A group of versioned models in the model registry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModelPackageGroup")
    public ModelPackageGroup modelPackageGroup;

    public SearchRecord withModelPackageGroup(ModelPackageGroup modelPackageGroup) {
        this.modelPackageGroup = modelPackageGroup;
        return this;
    }
    
    /**
     * A SageMaker Model Building Pipeline instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Pipeline")
    public Pipeline pipeline;

    public SearchRecord withPipeline(Pipeline pipeline) {
        this.pipeline = pipeline;
        return this;
    }
    
    /**
     * An execution of a pipeline.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PipelineExecution")
    public PipelineExecution pipelineExecution;

    public SearchRecord withPipelineExecution(PipelineExecution pipelineExecution) {
        this.pipelineExecution = pipelineExecution;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Project")
    public Project project;

    public SearchRecord withProject(Project project) {
        this.project = project;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrainingJob")
    public TrainingJob trainingJob;

    public SearchRecord withTrainingJob(TrainingJob trainingJob) {
        this.trainingJob = trainingJob;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Trial")
    public Trial trial;

    public SearchRecord withTrial(Trial trial) {
        this.trial = trial;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrialComponent")
    public TrialComponent trialComponent;

    public SearchRecord withTrialComponent(TrialComponent trialComponent) {
        this.trialComponent = trialComponent;
        return this;
    }
    
    public SearchRecord(){}
}
