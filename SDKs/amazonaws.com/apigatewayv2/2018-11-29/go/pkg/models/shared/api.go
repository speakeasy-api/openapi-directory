// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// APICorsConfiguration - A CORS configuration. Supported only for HTTP APIs.
type APICorsConfiguration struct {
	AllowCredentials *bool    `json:"AllowCredentials,omitempty"`
	AllowHeaders     []string `json:"AllowHeaders,omitempty"`
	AllowMethods     []string `json:"AllowMethods,omitempty"`
	AllowOrigins     []string `json:"AllowOrigins,omitempty"`
	ExposeHeaders    []string `json:"ExposeHeaders,omitempty"`
	MaxAge           *int64   `json:"MaxAge,omitempty"`
}

// APIProtocolTypeEnum - The API protocol.
type APIProtocolTypeEnum string

const (
	APIProtocolTypeEnumWebsocket APIProtocolTypeEnum = "WEBSOCKET"
	APIProtocolTypeEnumHTTP      APIProtocolTypeEnum = "HTTP"
)

func (e APIProtocolTypeEnum) ToPointer() *APIProtocolTypeEnum {
	return &e
}

func (e *APIProtocolTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WEBSOCKET":
		fallthrough
	case "HTTP":
		*e = APIProtocolTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for APIProtocolTypeEnum: %v", v)
	}
}

// API - Represents an API.
type API struct {
	APIEndpoint               *string               `json:"ApiEndpoint,omitempty"`
	APIGatewayManaged         *bool                 `json:"ApiGatewayManaged,omitempty"`
	APIID                     *string               `json:"ApiId,omitempty"`
	APIKeySelectionExpression *string               `json:"ApiKeySelectionExpression,omitempty"`
	CorsConfiguration         *APICorsConfiguration `json:"CorsConfiguration,omitempty"`
	CreatedDate               *time.Time            `json:"CreatedDate,omitempty"`
	Description               *string               `json:"Description,omitempty"`
	DisableExecuteAPIEndpoint *bool                 `json:"DisableExecuteApiEndpoint,omitempty"`
	DisableSchemaValidation   *bool                 `json:"DisableSchemaValidation,omitempty"`
	ImportInfo                []string              `json:"ImportInfo,omitempty"`
	Name                      string                `json:"Name"`
	ProtocolType              APIProtocolTypeEnum   `json:"ProtocolType"`
	RouteSelectionExpression  string                `json:"RouteSelectionExpression"`
	Tags                      map[string]string     `json:"Tags,omitempty"`
	Version                   *string               `json:"Version,omitempty"`
	Warnings                  []string              `json:"Warnings,omitempty"`
}
