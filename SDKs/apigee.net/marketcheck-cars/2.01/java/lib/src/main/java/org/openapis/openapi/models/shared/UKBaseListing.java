/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UKBaseListing - Minimal set of attributes describing a listing
 */
public class UKBaseListing {
    /**
     * Base exterior color of the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("base_ext_color")
    public String baseExtColor;
    public UKBaseListing withBaseExtColor(String baseExtColor) {
        this.baseExtColor = baseExtColor;
        return this;
    }
    
    /**
     * Base interior color of the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("base_int_color")
    public String baseIntColor;
    public UKBaseListing withBaseIntColor(String baseIntColor) {
        this.baseIntColor = baseIntColor;
        return this;
    }
    
    /**
     * Describes the Car specification
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("build")
    public Build build;
    public UKBaseListing withBuild(Build build) {
        this.build = build;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("car_location")
    public CarLocation carLocation;
    public UKBaseListing withCarLocation(CarLocation carLocation) {
        this.carLocation = carLocation;
        return this;
    }
    
    /**
     * Flag to indicate whether listing is carfax_1_owner
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carfax_1_owner")
    public Boolean carfax1Owner;
    public UKBaseListing withCarfax1Owner(Boolean carfax1Owner) {
        this.carfax1Owner = carfax1Owner;
        return this;
    }
    
    /**
     * Flag to indicate whether listing is carfax_clean_title
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carfax_clean_title")
    public Boolean carfaxCleanTitle;
    public UKBaseListing withCarfaxCleanTitle(Boolean carfaxCleanTitle) {
        this.carfaxCleanTitle = carfaxCleanTitle;
        return this;
    }
    
    /**
     * CO2 emissions by car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("co2_emissions")
    public String co2Emissions;
    public UKBaseListing withCo2Emissions(String co2Emissions) {
        this.co2Emissions = co2Emissions;
        return this;
    }
    
    /**
     * Data source of the listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_source")
    public String dataSource;
    public UKBaseListing withDataSource(String dataSource) {
        this.dataSource = dataSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealer")
    public NestDealer dealer;
    public UKBaseListing withDealer(NestDealer dealer) {
        this.dealer = dealer;
        return this;
    }
    
    /**
     * Distance of the car's location from the specified user lcoation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dist")
    public Double dist;
    public UKBaseListing withDist(Double dist) {
        this.dist = dist;
        return this;
    }
    
    /**
     * Days on Market value for the car based on current and historical listings found in the Marketcheck database for this car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dom")
    public Long dom;
    public UKBaseListing withDom(Long dom) {
        this.dom = dom;
        return this;
    }
    
    /**
     * Days on Market value for the car based on current and last 6 month listings found in the Marketcheck database for this car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dom_180")
    public Long dom180;
    public UKBaseListing withDom180(Long dom180) {
        this.dom180 = dom180;
        return this;
    }
    
    /**
     * Days on Market value for the car based on current and last 30 days listings found in the Marketcheck database for this car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dom_active")
    public Long domActive;
    public UKBaseListing withDomActive(Long domActive) {
        this.domActive = domActive;
        return this;
    }
    
    /**
     * Exterior color of the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exterior_color")
    public String exteriorColor;
    public UKBaseListing withExteriorColor(String exteriorColor) {
        this.exteriorColor = exteriorColor;
        return this;
    }
    
    /**
     * Array of all finance offers for this listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("financing_options")
    public ListingFinance[] financingOptions;
    public UKBaseListing withFinancingOptions(ListingFinance[] financingOptions) {
        this.financingOptions = financingOptions;
        return this;
    }
    
    /**
     * Listing first seen at first scraped timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_seen_at")
    public Long firstSeenAt;
    public UKBaseListing withFirstSeenAt(Long firstSeenAt) {
        this.firstSeenAt = firstSeenAt;
        return this;
    }
    
    /**
     * Listing first seen at first scraped date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_seen_at_date")
    public String firstSeenAtDate;
    public UKBaseListing withFirstSeenAtDate(String firstSeenAtDate) {
        this.firstSeenAtDate = firstSeenAtDate;
        return this;
    }
    
    /**
     * Listing title as displayed on the source website
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("heading")
    public String heading;
    public UKBaseListing withHeading(String heading) {
        this.heading = heading;
        return this;
    }
    
    /**
     * Unique identifier representing a specific listing from the Marketcheck database
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public UKBaseListing withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * in_transit of the listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("in_transit")
    public Boolean inTransit;
    public UKBaseListing withInTransit(Boolean inTransit) {
        this.inTransit = inTransit;
        return this;
    }
    
    /**
     * Insurance Group of car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insurance_group")
    public String insuranceGroup;
    public UKBaseListing withInsuranceGroup(String insuranceGroup) {
        this.insuranceGroup = insuranceGroup;
        return this;
    }
    
    /**
     * Interior color of the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interior_color")
    public String interiorColor;
    public UKBaseListing withInteriorColor(String interiorColor) {
        this.interiorColor = interiorColor;
        return this;
    }
    
    /**
     * Inventory type of car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventory_type")
    public String inventoryType;
    public UKBaseListing withInventoryType(String inventoryType) {
        this.inventoryType = inventoryType;
        return this;
    }
    
    /**
     * Certified car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_certified")
    public Long isCertified;
    public UKBaseListing withIsCertified(Long isCertified) {
        this.isCertified = isCertified;
        return this;
    }
    
    /**
     * is_translated of the listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_translated")
    public Boolean isTranslated;
    public UKBaseListing withIsTranslated(Boolean isTranslated) {
        this.isTranslated = isTranslated;
        return this;
    }
    
    /**
     * Listing last seen at (most recent) timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_seen_at")
    public Long lastSeenAt;
    public UKBaseListing withLastSeenAt(Long lastSeenAt) {
        this.lastSeenAt = lastSeenAt;
        return this;
    }
    
    /**
     * Listing last seen at (most recent) date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_seen_at_date")
    public String lastSeenAtDate;
    public UKBaseListing withLastSeenAtDate(String lastSeenAtDate) {
        this.lastSeenAtDate = lastSeenAtDate;
        return this;
    }
    
    /**
     * Array of all finance offers for this listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leasing_options")
    public ListingLease[] leasingOptions;
    public UKBaseListing withLeasingOptions(ListingLease[] leasingOptions) {
        this.leasingOptions = leasingOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media")
    public ListingNestMedia media;
    public UKBaseListing withMedia(ListingNestMedia media) {
        this.media = media;
        return this;
    }
    
    /**
     * Odometer reading / reported miles usage for the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("miles")
    public Long miles;
    public UKBaseListing withMiles(Long miles) {
        this.miles = miles;
        return this;
    }
    
    /**
     * model_code of the listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model_code")
    public String modelCode;
    public UKBaseListing withModelCode(String modelCode) {
        this.modelCode = modelCode;
        return this;
    }
    
    /**
     * MSRP for the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("msrp")
    public Long msrp;
    public UKBaseListing withMsrp(Long msrp) {
        this.msrp = msrp;
        return this;
    }
    
    /**
     * Number of owners
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_owners")
    public String numOwners;
    public UKBaseListing withNumOwners(String numOwners) {
        this.numOwners = numOwners;
        return this;
    }
    
    /**
     * Asking price for the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Long price;
    public UKBaseListing withPrice(Long price) {
        this.price = price;
        return this;
    }
    
    /**
     * Percentage difference between the cars's current price and ref_price i.e. last reported price
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price_change_percent")
    public Double priceChangePercent;
    public UKBaseListing withPriceChangePercent(Double priceChangePercent) {
        this.priceChangePercent = priceChangePercent;
        return this;
    }
    
    /**
     * Last Odometer reading / reported miles usage for the car. If the asking miles value is not or is available then the last_miles could perhaps be used. last_miles is the miles for the car listed on the source website as of last_miles_dt date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ref_miles")
    public String refMiles;
    public UKBaseListing withRefMiles(String refMiles) {
        this.refMiles = refMiles;
        return this;
    }
    
    /**
     * The date at which the last miles was reported online. This is earlier to last_seen_date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ref_miles_dt")
    public Long refMilesDt;
    public UKBaseListing withRefMilesDt(Long refMilesDt) {
        this.refMilesDt = refMilesDt;
        return this;
    }
    
    /**
     * Last reported price for the car. If the asking price value is not or is available then the last_price could perhaps be used. last_price is the price for the car listed on the source website as of last_price_dt date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ref_price")
    public String refPrice;
    public UKBaseListing withRefPrice(String refPrice) {
        this.refPrice = refPrice;
        return this;
    }
    
    /**
     * The date at which the last price was reported online. This is earlier to last_seen_date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ref_price_dt")
    public Long refPriceDt;
    public UKBaseListing withRefPriceDt(Long refPriceDt) {
        this.refPriceDt = refPriceDt;
        return this;
    }
    
    /**
     * Listing last seen at date timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scraped_at")
    public Double scrapedAt;
    public UKBaseListing withScrapedAt(Double scrapedAt) {
        this.scrapedAt = scrapedAt;
        return this;
    }
    
    /**
     * Listing last seen at date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scraped_at_date")
    public String scrapedAtDate;
    public UKBaseListing withScrapedAtDate(String scrapedAtDate) {
        this.scrapedAtDate = scrapedAtDate;
        return this;
    }
    
    /**
     * Seller type for the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seller_type")
    public String sellerType;
    public UKBaseListing withSellerType(String sellerType) {
        this.sellerType = sellerType;
        return this;
    }
    
    /**
     * Source domain of the listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;
    public UKBaseListing withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * Stock number of car in dealers inventory
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stock_no")
    public String stockNo;
    public UKBaseListing withStockNo(String stockNo) {
        this.stockNo = stockNo;
        return this;
    }
    
    /**
     * title_type of the listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title_type")
    public String titleType;
    public UKBaseListing withTitleType(String titleType) {
        this.titleType = titleType;
        return this;
    }
    
    /**
     * UVC ID of the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uvc_id")
    public String uvcId;
    public UKBaseListing withUvcId(String uvcId) {
        this.uvcId = uvcId;
        return this;
    }
    
    /**
     * Vehicle Details Page url of the specific car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vdp_url")
    public String vdpUrl;
    public UKBaseListing withVdpUrl(String vdpUrl) {
        this.vdpUrl = vdpUrl;
        return this;
    }
    
    /**
     *  Vehicle Registration Mark of the car
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vehicle_registration_mark")
    public String vehicleRegistrationMark;
    public UKBaseListing withVehicleRegistrationMark(String vehicleRegistrationMark) {
        this.vehicleRegistrationMark = vehicleRegistrationMark;
        return this;
    }
    
}
