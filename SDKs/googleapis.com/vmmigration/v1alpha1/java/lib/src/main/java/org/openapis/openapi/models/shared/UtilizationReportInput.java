/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UtilizationReportInput - Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.
 */
public class UtilizationReportInput {
    /**
     * The report display name, as assigned by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public UtilizationReportInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;
    public UtilizationReportInput withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * Time frame of the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeFrame")
    public UtilizationReportTimeFrameEnum timeFrame;
    public UtilizationReportInput withTimeFrame(UtilizationReportTimeFrameEnum timeFrame) {
        this.timeFrame = timeFrame;
        return this;
    }
    
    /**
     * List of utilization information per VM. When sent as part of the request, the "vm_id" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vms")
    public VmUtilizationInfoInput[] vms;
    public UtilizationReportInput withVms(VmUtilizationInfoInput[] vms) {
        this.vms = vms;
        return this;
    }
    
}
