/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The financial commitment the customer has in the product
 */
export enum SubscriptionBillingCommitmentEnum {
  Paid = "PAID",
  Free = "FREE",
  Trial = "TRIAL",
}

export enum SubscriptionBillingPastDueTypesEnum {
  Addon = "ADDON",
  Burst = "BURST",
  Subscription = "SUBSCRIPTION",
}

/**
 * Whether payments are past due
 */
export enum SubscriptionBillingStatusEnum {
  Current = "CURRENT",
  PastDue = "PAST_DUE",
}

export class SubscriptionBilling extends SpeakeasyBase {
  /**
   * The financial commitment the customer has in the product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commitment" })
  commitment: SubscriptionBillingCommitmentEnum;

  /**
   * The types of charges that are past due when `status` is PAST_DUE
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pastDueTypes" })
  pastDueTypes?: SubscriptionBillingPastDueTypesEnum[];

  /**
   * The point in time after which the Subscription will bill for automatic renewal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renewAt" })
  renewAt: string;

  /**
   * Whether payments are past due
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: SubscriptionBillingStatusEnum;
}
