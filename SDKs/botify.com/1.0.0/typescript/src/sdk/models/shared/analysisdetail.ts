/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { User } from "./user";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Successful operation
 */
export class AnalysisDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  config?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "date_finished" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateFinished?: Date;

  /**
   * Date of last modified analysis
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_last_modified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateLastModified?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "date_launched" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateLaunched?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "failures" })
  failures?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "features" })
  features?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "red_button_domain" })
  redButtonDomain?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "urls_done" })
  urlsDone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "urls_in_queue" })
  urlsInQueue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => User)
  user: User;
}
