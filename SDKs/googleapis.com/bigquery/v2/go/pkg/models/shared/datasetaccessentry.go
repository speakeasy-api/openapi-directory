// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DatasetAccessEntryTargetTypesEnum string

const (
	DatasetAccessEntryTargetTypesEnumTargetTypeUnspecified DatasetAccessEntryTargetTypesEnum = "TARGET_TYPE_UNSPECIFIED"
	DatasetAccessEntryTargetTypesEnumViews                 DatasetAccessEntryTargetTypesEnum = "VIEWS"
	DatasetAccessEntryTargetTypesEnumRoutines              DatasetAccessEntryTargetTypesEnum = "ROUTINES"
)

func (e *DatasetAccessEntryTargetTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TARGET_TYPE_UNSPECIFIED":
		fallthrough
	case "VIEWS":
		fallthrough
	case "ROUTINES":
		*e = DatasetAccessEntryTargetTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DatasetAccessEntryTargetTypesEnum: %s", s)
	}
}

type DatasetAccessEntry struct {
	Dataset     *DatasetReference                   `json:"dataset,omitempty"`
	TargetTypes []DatasetAccessEntryTargetTypesEnum `json:"targetTypes,omitempty"`
}
