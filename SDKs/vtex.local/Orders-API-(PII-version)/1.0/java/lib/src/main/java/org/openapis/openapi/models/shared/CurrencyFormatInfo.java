/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class CurrencyFormatInfo {
    /**
     * Currency decimal digits.
     */
    @JsonProperty("CurrencyDecimalDigits")
    public Integer currencyDecimalDigits;
    public CurrencyFormatInfo withCurrencyDecimalDigits(Integer currencyDecimalDigits) {
        this.currencyDecimalDigits = currencyDecimalDigits;
        return this;
    }
    
    /**
     * Currency decimal separator.
     */
    @JsonProperty("CurrencyDecimalSeparator")
    public String currencyDecimalSeparator;
    public CurrencyFormatInfo withCurrencyDecimalSeparator(String currencyDecimalSeparator) {
        this.currencyDecimalSeparator = currencyDecimalSeparator;
        return this;
    }
    
    /**
     * Currency group separator.
     */
    @JsonProperty("CurrencyGroupSeparator")
    public String currencyGroupSeparator;
    public CurrencyFormatInfo withCurrencyGroupSeparator(String currencyGroupSeparator) {
        this.currencyGroupSeparator = currencyGroupSeparator;
        return this;
    }
    
    /**
     * Currency group size.
     */
    @JsonProperty("CurrencyGroupSize")
    public Integer currencyGroupSize;
    public CurrencyFormatInfo withCurrencyGroupSize(Integer currencyGroupSize) {
        this.currencyGroupSize = currencyGroupSize;
        return this;
    }
    
    /**
     * Indicates whether value representations start with currency symbol.
     */
    @JsonProperty("StartsWithCurrencySymbol")
    public Boolean startsWithCurrencySymbol;
    public CurrencyFormatInfo withStartsWithCurrencySymbol(Boolean startsWithCurrencySymbol) {
        this.startsWithCurrencySymbol = startsWithCurrencySymbol;
        return this;
    }
    
}
