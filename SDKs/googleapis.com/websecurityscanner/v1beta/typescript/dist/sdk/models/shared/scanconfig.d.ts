import { SpeakeasyBase } from "../../../internal/utils";
import { Authentication } from "./authentication";
import { ScanRun } from "./scanrun";
import { Schedule } from "./schedule";
/**
 * Controls export of scan configurations and results to Security Command Center.
 */
export declare enum ScanConfigExportToSecurityCommandCenterEnum {
    ExportToSecurityCommandCenterUnspecified = "EXPORT_TO_SECURITY_COMMAND_CENTER_UNSPECIFIED",
    Enabled = "ENABLED",
    Disabled = "DISABLED"
}
/**
 * The risk level selected for the scan
 */
export declare enum ScanConfigRiskLevelEnum {
    RiskLevelUnspecified = "RISK_LEVEL_UNSPECIFIED",
    Normal = "NORMAL",
    Low = "LOW"
}
export declare enum ScanConfigTargetPlatformsEnum {
    TargetPlatformUnspecified = "TARGET_PLATFORM_UNSPECIFIED",
    AppEngine = "APP_ENGINE",
    Compute = "COMPUTE",
    CloudRun = "CLOUD_RUN",
    CloudFunctions = "CLOUD_FUNCTIONS"
}
/**
 * The user agent used during scanning.
 */
export declare enum ScanConfigUserAgentEnum {
    UserAgentUnspecified = "USER_AGENT_UNSPECIFIED",
    ChromeLinux = "CHROME_LINUX",
    ChromeAndroid = "CHROME_ANDROID",
    SafariIphone = "SAFARI_IPHONE"
}
/**
 * A ScanConfig resource contains the configurations to launch a scan.
 */
export declare class ScanConfig extends SpeakeasyBase {
    /**
     * Scan authentication configuration.
     */
    authentication?: Authentication;
    /**
     * The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
     */
    blacklistPatterns?: string[];
    /**
     * Required. The user provided display name of the ScanConfig.
     */
    displayName?: string;
    /**
     * Controls export of scan configurations and results to Security Command Center.
     */
    exportToSecurityCommandCenter?: ScanConfigExportToSecurityCommandCenterEnum;
    /**
     * Whether to keep scanning even if most requests return HTTP error codes.
     */
    ignoreHttpStatusErrors?: boolean;
    /**
     * A ScanRun is a output-only resource representing an actual run of the scan. Next id: 12
     */
    latestRun?: ScanRun;
    /**
     * Whether the scan config is managed by Web Security Scanner, output only.
     */
    managedScan?: boolean;
    /**
     * The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
     */
    maxQps?: number;
    /**
     * The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system.
     */
    name?: string;
    /**
     * The risk level selected for the scan
     */
    riskLevel?: ScanConfigRiskLevelEnum;
    /**
     * Scan schedule configuration.
     */
    schedule?: Schedule;
    /**
     * Required. The starting URLs from which the scanner finds site pages.
     */
    startingUrls?: string[];
    /**
     * Whether the scan configuration has enabled static IP address scan feature. If enabled, the scanner will access applications from static IP addresses.
     */
    staticIpScan?: boolean;
    /**
     * Set of Google Cloud platforms targeted by the scan. If empty, APP_ENGINE will be used as a default.
     */
    targetPlatforms?: ScanConfigTargetPlatformsEnum[];
    /**
     * The user agent used during scanning.
     */
    userAgent?: ScanConfigUserAgentEnum;
}
