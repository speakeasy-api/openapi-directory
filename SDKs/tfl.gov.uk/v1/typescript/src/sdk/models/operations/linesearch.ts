/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum LineSearchServiceTypesEnum {
  Regular = "Regular",
  Night = "Night",
}

export class LineSearchRequest extends SpeakeasyBase {
  /**
   * Optionally filter by the specified modes
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=modes" })
  modes?: string[];

  /**
   * Search term e.g victoria
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=query",
  })
  query: string;

  /**
   * A comma seperated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=serviceTypes",
  })
  serviceTypes?: LineSearchServiceTypesEnum[];
}

export class LineSearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  tflApiPresentationEntitiesRouteSearchResponse?: shared.TflApiPresentationEntitiesRouteSearchResponse;
}
