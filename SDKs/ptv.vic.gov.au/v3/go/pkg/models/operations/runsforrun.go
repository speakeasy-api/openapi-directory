// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type RunsForRunPathParams struct {
	// The run_ref is the identifier of a run as returned by the departures/* and runs/* endpoints. WARNING, run_id is deprecated. Use run_ref instead.
	RunRef string `pathParam:"style=simple,explode=false,name=run_ref"`
}

type RunsForRunExpandEnum string

const (
	RunsForRunExpandEnumAll               RunsForRunExpandEnum = "All"
	RunsForRunExpandEnumVehicleDescriptor RunsForRunExpandEnum = "VehicleDescriptor"
	RunsForRunExpandEnumVehiclePosition   RunsForRunExpandEnum = "VehiclePosition"
	RunsForRunExpandEnumNone              RunsForRunExpandEnum = "None"
)

func (e *RunsForRunExpandEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "All":
		fallthrough
	case "VehicleDescriptor":
		fallthrough
	case "VehiclePosition":
		fallthrough
	case "None":
		*e = RunsForRunExpandEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RunsForRunExpandEnum: %s", s)
	}
}

type RunsForRunQueryParams struct {
	// Date of the request. (optional - defaults to now)
	DateUtc *time.Time `queryParam:"style=form,explode=true,name=date_utc"`
	// Your developer id
	Devid *string `queryParam:"style=form,explode=true,name=devid"`
	// List of objects to be returned in full (i.e. expanded) - options include: All, VehiclePosition, VehicleDescriptor, or None. Default is None.
	Expand []RunsForRunExpandEnum `queryParam:"style=form,explode=true,name=expand"`
	// Indicates if geopath data will be returned (default = false)
	IncludeGeopath *bool `queryParam:"style=form,explode=true,name=include_geopath"`
	// Authentication signature for request
	Signature *string `queryParam:"style=form,explode=true,name=signature"`
	// Please ignore
	Token *string `queryParam:"style=form,explode=true,name=token"`
}

type RunsForRunRequest struct {
	PathParams  RunsForRunPathParams
	QueryParams RunsForRunQueryParams
}

type RunsForRunResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Invalid Request
	V3ErrorResponse *shared.V3ErrorResponse
	// All trip/service run details for the specified run_ref.
	V3RunsResponse *shared.V3RunsResponse
}
