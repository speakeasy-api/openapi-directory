// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutLoggingConfigurationXAmzTargetEnum
type PutLoggingConfigurationXAmzTargetEnum string

const (
	PutLoggingConfigurationXAmzTargetEnumAwswaf20150824PutLoggingConfiguration PutLoggingConfigurationXAmzTargetEnum = "AWSWAF_20150824.PutLoggingConfiguration"
)

func (e PutLoggingConfigurationXAmzTargetEnum) ToPointer() *PutLoggingConfigurationXAmzTargetEnum {
	return &e
}

func (e *PutLoggingConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_20150824.PutLoggingConfiguration":
		*e = PutLoggingConfigurationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutLoggingConfigurationXAmzTargetEnum: %v", v)
	}
}

type PutLoggingConfigurationRequest struct {
	PutLoggingConfigurationRequest shared.PutLoggingConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     PutLoggingConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutLoggingConfigurationResponse struct {
	ContentType string
	// Success
	PutLoggingConfigurationResponse *shared.PutLoggingConfigurationResponse
	StatusCode                      int
	RawResponse                     *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
	// WAFServiceLinkedRoleErrorException
	WAFServiceLinkedRoleErrorException interface{}
	// WAFStaleDataException
	WAFStaleDataException interface{}
}
