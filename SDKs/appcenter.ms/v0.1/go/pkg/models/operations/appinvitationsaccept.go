// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AppInvitationsAcceptSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type AppInvitationsAcceptPathParams struct {
	// The app invitation token that was sent to the user
	InvitationToken string `pathParam:"style=simple,explode=false,name=invitation_token"`
}

type AppInvitationsAcceptRequest struct {
	PathParams AppInvitationsAcceptPathParams
	// allow empty body for custom http-client lib
	Request  map[string]interface{} `request:"mediaType=application/json"`
	Security AppInvitationsAcceptSecurity
}

type AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum string

const (
	AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnumBadRequest          AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnumConflict            AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnumNotAcceptable       AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnumNotFound            AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnumInternalServerError AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnumUnauthorized        AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnumTooManyRequests     AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppInvitationsAcceptDefaultApplicationJSONError struct {
	Code    AppInvitationsAcceptDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                  `json:"message"`
}

// AppInvitationsAcceptDefaultApplicationJSON - Error
type AppInvitationsAcceptDefaultApplicationJSON struct {
	Error AppInvitationsAcceptDefaultApplicationJSONError `json:"error"`
}

type AppInvitationsAcceptResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	AppInvitationsAcceptDefaultApplicationJSONObject *AppInvitationsAcceptDefaultApplicationJSON
}
