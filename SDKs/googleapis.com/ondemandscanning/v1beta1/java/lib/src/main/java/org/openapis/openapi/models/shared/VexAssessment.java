/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VexAssessment - VexAssessment provides all publisher provided Vex information that is related to this vulnerability.
 */
public class VexAssessment {
    /**
     * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE) tracking number for the vulnerability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cve")
    public String cve;

    public VexAssessment withCve(String cve) {
        this.cve = cve;
        return this;
    }
    
    /**
     * Contains information about the impact of this vulnerability, this will change with time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("impacts")
    public String[] impacts;

    public VexAssessment withImpacts(String[] impacts) {
        this.impacts = impacts;
        return this;
    }
    
    /**
     * Justification provides the justification when the state of the assessment if NOT_AFFECTED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("justification")
    public Justification justification;

    public VexAssessment withJustification(Justification justification) {
        this.justification = justification;
        return this;
    }
    
    /**
     * The VulnerabilityAssessment note from which this VexAssessment was generated. This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noteName")
    public String noteName;

    public VexAssessment withNoteName(String noteName) {
        this.noteName = noteName;
        return this;
    }
    
    /**
     * Holds a list of references associated with this vulnerability item and assessment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedUris")
    public RelatedUrl[] relatedUris;

    public VexAssessment withRelatedUris(RelatedUrl[] relatedUris) {
        this.relatedUris = relatedUris;
        return this;
    }
    
    /**
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remediations")
    public Remediation[] remediations;

    public VexAssessment withRemediations(Remediation[] remediations) {
        this.remediations = remediations;
        return this;
    }
    
    /**
     * Provides the state of this Vulnerability assessment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public VexAssessmentStateEnum state;

    public VexAssessment withState(VexAssessmentStateEnum state) {
        this.state = state;
        return this;
    }
    
    public VexAssessment(){}
}
