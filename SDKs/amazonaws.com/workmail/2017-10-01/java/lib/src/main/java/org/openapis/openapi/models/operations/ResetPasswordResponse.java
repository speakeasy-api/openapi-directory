/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class ResetPasswordResponse {
    
    public String contentType;

    public ResetPasswordResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DirectoryServiceAuthenticationFailedException
     */
    
    public Object directoryServiceAuthenticationFailedException;

    public ResetPasswordResponse withDirectoryServiceAuthenticationFailedException(Object directoryServiceAuthenticationFailedException) {
        this.directoryServiceAuthenticationFailedException = directoryServiceAuthenticationFailedException;
        return this;
    }
    
    /**
     * DirectoryUnavailableException
     */
    
    public Object directoryUnavailableException;

    public ResetPasswordResponse withDirectoryUnavailableException(Object directoryUnavailableException) {
        this.directoryUnavailableException = directoryUnavailableException;
        return this;
    }
    
    /**
     * EntityNotFoundException
     */
    
    public Object entityNotFoundException;

    public ResetPasswordResponse withEntityNotFoundException(Object entityNotFoundException) {
        this.entityNotFoundException = entityNotFoundException;
        return this;
    }
    
    /**
     * EntityStateException
     */
    
    public Object entityStateException;

    public ResetPasswordResponse withEntityStateException(Object entityStateException) {
        this.entityStateException = entityStateException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public ResetPasswordResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidPasswordException
     */
    
    public Object invalidPasswordException;

    public ResetPasswordResponse withInvalidPasswordException(Object invalidPasswordException) {
        this.invalidPasswordException = invalidPasswordException;
        return this;
    }
    
    /**
     * OrganizationNotFoundException
     */
    
    public Object organizationNotFoundException;

    public ResetPasswordResponse withOrganizationNotFoundException(Object organizationNotFoundException) {
        this.organizationNotFoundException = organizationNotFoundException;
        return this;
    }
    
    /**
     * OrganizationStateException
     */
    
    public Object organizationStateException;

    public ResetPasswordResponse withOrganizationStateException(Object organizationStateException) {
        this.organizationStateException = organizationStateException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> resetPasswordResponse;

    public ResetPasswordResponse withResetPasswordResponse(java.util.Map<String, Object> resetPasswordResponse) {
        this.resetPasswordResponse = resetPasswordResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public ResetPasswordResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public ResetPasswordResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public ResetPasswordResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    public ResetPasswordResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
