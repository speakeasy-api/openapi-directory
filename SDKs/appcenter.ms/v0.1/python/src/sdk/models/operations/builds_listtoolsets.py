"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class BuildsListToolsetsSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    
class BuildsListToolsetsToolsEnum(str, Enum):
    r"""Toolset name"""
    XAMARIN = 'xamarin'
    XCODE = 'xcode'
    NODE = 'node'


@dataclasses.dataclass
class BuildsListToolsetsRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    tools: Optional[BuildsListToolsetsToolsEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tools', 'style': 'form', 'explode': True }})
    r"""Toolset name"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BuildsListToolsetsDefaultApplicationJSON:
    r"""Bad Request"""
    
    code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BuildsListToolsets200ApplicationJSONNode:
    r"""The Node version"""
    
    current: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('current'), 'exclude': lambda f: f is None }})
    r"""If the Node version is default for AppCenter"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The version name"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BuildsListToolsets200ApplicationJSONXamarin:
    r"""The Xamarin SDK bundle"""
    
    current: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('current'), 'exclude': lambda f: f is None }})
    r"""If the SDK is latest stable"""  
    mono_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monoVersion'), 'exclude': lambda f: f is None }})
    r"""The Mono version"""  
    sdk_bundle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sdkBundle'), 'exclude': lambda f: f is None }})
    r"""The Xamarin SDK version"""  
    stable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stable'), 'exclude': lambda f: f is None }})
    r"""If the SDK is stable"""  
    xcode_versions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('xcodeVersions'), 'exclude': lambda f: f is None }})
    r"""Specific for iOS SDK. A list of Xcode versions supported by current SDK version"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BuildsListToolsets200ApplicationJSONXcode:
    r"""The Xcode version"""
    
    current: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('current'), 'exclude': lambda f: f is None }})
    r"""If the Xcode is latest stable"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The version name"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BuildsListToolsets200ApplicationJSON:
    r"""Set of toolsets available for app"""
    
    node: Optional[list[BuildsListToolsets200ApplicationJSONNode]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('node'), 'exclude': lambda f: f is None }})
    r"""A list of Node versions"""  
    xamarin: Optional[list[BuildsListToolsets200ApplicationJSONXamarin]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('xamarin'), 'exclude': lambda f: f is None }})
    r"""A list of Xamarin SDK bundles"""  
    xcode: Optional[list[BuildsListToolsets200ApplicationJSONXcode]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('xcode'), 'exclude': lambda f: f is None }})
    r"""A list of Xcode versions"""  
    

@dataclasses.dataclass
class BuildsListToolsetsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    builds_list_toolsets_200_application_json_object: Optional[BuildsListToolsets200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    builds_list_toolsets_default_application_json_object: Optional[BuildsListToolsetsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Bad Request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    