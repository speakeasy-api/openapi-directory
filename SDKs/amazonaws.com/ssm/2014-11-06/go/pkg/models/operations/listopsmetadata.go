// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListOpsMetadataQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListOpsMetadataXAmzTargetEnum
type ListOpsMetadataXAmzTargetEnum string

const (
	ListOpsMetadataXAmzTargetEnumAmazonSsmListOpsMetadata ListOpsMetadataXAmzTargetEnum = "AmazonSSM.ListOpsMetadata"
)

func (e *ListOpsMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.ListOpsMetadata":
		*e = ListOpsMetadataXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListOpsMetadataXAmzTargetEnum: %s", s)
	}
}

type ListOpsMetadataHeaders struct {
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListOpsMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListOpsMetadataRequest struct {
	QueryParams ListOpsMetadataQueryParams
	Headers     ListOpsMetadataHeaders
	Request     shared.ListOpsMetadataRequest `request:"mediaType=application/json"`
}

type ListOpsMetadataResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// Success
	ListOpsMetadataResult *shared.ListOpsMetadataResult
	// OpsMetadataInvalidArgumentException
	OpsMetadataInvalidArgumentException interface{}
	StatusCode                          int
	RawResponse                         *http.Response
}
