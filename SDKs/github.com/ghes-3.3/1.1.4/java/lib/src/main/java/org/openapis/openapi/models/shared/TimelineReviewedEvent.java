/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TimelineReviewedEvent - Timeline Reviewed Event
 */
public class TimelineReviewedEvent {
    @JsonProperty("_links")
    public TimelineReviewedEventLinks links;

    public TimelineReviewedEvent withLinks(TimelineReviewedEventLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * How the author is associated with the repository.
     */
    @JsonProperty("author_association")
    public AuthorAssociationEnum authorAssociation;

    public TimelineReviewedEvent withAuthorAssociation(AuthorAssociationEnum authorAssociation) {
        this.authorAssociation = authorAssociation;
        return this;
    }
    
    /**
     * The text of the review.
     */
    @JsonProperty("body")
    public String body;

    public TimelineReviewedEvent withBody(String body) {
        this.body = body;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body_html")
    public String bodyHtml;

    public TimelineReviewedEvent withBodyHtml(String bodyHtml) {
        this.bodyHtml = bodyHtml;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body_text")
    public String bodyText;

    public TimelineReviewedEvent withBodyText(String bodyText) {
        this.bodyText = bodyText;
        return this;
    }
    
    /**
     * A commit SHA for the review.
     */
    @JsonProperty("commit_id")
    public String commitId;

    public TimelineReviewedEvent withCommitId(String commitId) {
        this.commitId = commitId;
        return this;
    }
    
    @JsonProperty("event")
    public String event;

    public TimelineReviewedEvent withEvent(String event) {
        this.event = event;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;

    public TimelineReviewedEvent withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    /**
     * Unique identifier of the review
     */
    @JsonProperty("id")
    public Long id;

    public TimelineReviewedEvent withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;

    public TimelineReviewedEvent withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    @JsonProperty("pull_request_url")
    public String pullRequestUrl;

    public TimelineReviewedEvent withPullRequestUrl(String pullRequestUrl) {
        this.pullRequestUrl = pullRequestUrl;
        return this;
    }
    
    @JsonProperty("state")
    public String state;

    public TimelineReviewedEvent withState(String state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("submitted_at")
    public OffsetDateTime submittedAt;

    public TimelineReviewedEvent withSubmittedAt(OffsetDateTime submittedAt) {
        this.submittedAt = submittedAt;
        return this;
    }
    
    /**
     * A GitHub user.
     */
    @JsonProperty("user")
    public SimpleUser user;

    public TimelineReviewedEvent withUser(SimpleUser user) {
        this.user = user;
        return this;
    }
    
    public TimelineReviewedEvent(@JsonProperty("_links") TimelineReviewedEventLinks links, @JsonProperty("author_association") AuthorAssociationEnum authorAssociation, @JsonProperty("body") String body, @JsonProperty("commit_id") String commitId, @JsonProperty("event") String event, @JsonProperty("html_url") String htmlUrl, @JsonProperty("id") Long id, @JsonProperty("node_id") String nodeId, @JsonProperty("pull_request_url") String pullRequestUrl, @JsonProperty("state") String state, @JsonProperty("user") SimpleUser user) {
        this.links = links;
        this.authorAssociation = authorAssociation;
        this.body = body;
        this.commitId = commitId;
        this.event = event;
        this.htmlUrl = htmlUrl;
        this.id = id;
        this.nodeId = nodeId;
        this.pullRequestUrl = pullRequestUrl;
        this.state = state;
        this.user = user;
  }
}
