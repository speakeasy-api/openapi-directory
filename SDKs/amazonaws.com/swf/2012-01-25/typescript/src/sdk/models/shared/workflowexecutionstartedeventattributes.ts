/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChildPolicyEnum } from "./childpolicyenum";
import { TaskList } from "./tasklist";
import { WorkflowExecution } from "./workflowexecution";
import { WorkflowType } from "./workflowtype";
import { Expose, Type } from "class-transformer";

/**
 * Provides details of <code>WorkflowExecutionStarted</code> event.
 */
export class WorkflowExecutionStartedEventAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "childPolicy" })
  childPolicy: ChildPolicyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "continuedExecutionRunId" })
  continuedExecutionRunId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "executionStartToCloseTimeout" })
  executionStartToCloseTimeout?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "input" })
  input?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lambdaRole" })
  lambdaRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parentInitiatedEventId" })
  parentInitiatedEventId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "parentWorkflowExecution" })
  @Type(() => WorkflowExecution)
  parentWorkflowExecution?: WorkflowExecution;

  @SpeakeasyMetadata()
  @Expose({ name: "tagList" })
  tagList?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "taskList" })
  @Type(() => TaskList)
  taskList: TaskList;

  @SpeakeasyMetadata()
  @Expose({ name: "taskPriority" })
  taskPriority?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taskStartToCloseTimeout" })
  taskStartToCloseTimeout?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowType" })
  @Type(() => WorkflowType)
  workflowType: WorkflowType;
}
