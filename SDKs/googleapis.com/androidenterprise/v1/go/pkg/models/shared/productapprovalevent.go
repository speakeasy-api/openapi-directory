// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProductApprovalEventApprovedEnum - Whether the product was approved or unapproved. This field will always be present.
type ProductApprovalEventApprovedEnum string

const (
	ProductApprovalEventApprovedEnumUnknown    ProductApprovalEventApprovedEnum = "unknown"
	ProductApprovalEventApprovedEnumApproved   ProductApprovalEventApprovedEnum = "approved"
	ProductApprovalEventApprovedEnumUnapproved ProductApprovalEventApprovedEnum = "unapproved"
)

func (e *ProductApprovalEventApprovedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "unknown":
		fallthrough
	case "approved":
		fallthrough
	case "unapproved":
		*e = ProductApprovalEventApprovedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductApprovalEventApprovedEnum: %s", s)
	}
}

// ProductApprovalEvent - An event generated when a product's approval status is changed.
type ProductApprovalEvent struct {
	// Whether the product was approved or unapproved. This field will always be present.
	Approved *ProductApprovalEventApprovedEnum `json:"approved,omitempty"`
	// The id of the product (e.g. "app:com.google.android.gm") for which the approval status has changed. This field will always be present.
	ProductID *string `json:"productId,omitempty"`
}
