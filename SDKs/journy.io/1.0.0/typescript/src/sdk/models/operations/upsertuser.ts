/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * User identification requires a userId, email or both
 */
export class UpsertUserRequestBodyIdentification extends SpeakeasyBase {
  /**
   * Email address of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Unique identifier for the user in your database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}

/**
 * Update properties of a user
 */
export class UpsertUserRequestBody extends SpeakeasyBase {
  /**
   * User identification requires a userId, email or both
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identification" })
  @Type(() => UpsertUserRequestBodyIdentification)
  identification: UpsertUserRequestBodyIdentification;

  /**
   * The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: Record<string, any>;
}

export class UpsertUser500ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertUser500ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertUser500ApplicationJSONMeta)
  meta: UpsertUser500ApplicationJSONMeta;
}

export class UpsertUser429ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertUser429ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertUser429ApplicationJSONMeta)
  meta: UpsertUser429ApplicationJSONMeta;
}

export class UpsertUser403ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertUser403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertUser403ApplicationJSONMeta)
  meta: UpsertUser403ApplicationJSONMeta;
}

export class UpsertUser401ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertUser401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertUser401ApplicationJSONMeta)
  meta: UpsertUser401ApplicationJSONMeta;
}

/**
 * All query-, header- and path- parameters that seemed incorrect
 */
export class UpsertUser400ApplicationJSONErrorsParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "header" })
  header?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  query?: Record<string, string>;
}

/**
 * Map that sums up all received values that seemed incorrect
 */
export class UpsertUser400ApplicationJSONErrors extends SpeakeasyBase {
  /**
   * All input fields that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields?: Record<string, string>;

  /**
   * All query-, header- and path- parameters that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  @Type(() => UpsertUser400ApplicationJSONErrorsParameters)
  parameters?: UpsertUser400ApplicationJSONErrorsParameters;
}

export class UpsertUser400ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertUser400ApplicationJSON extends SpeakeasyBase {
  /**
   * Map that sums up all received values that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  @Type(() => UpsertUser400ApplicationJSONErrors)
  errors: UpsertUser400ApplicationJSONErrors;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertUser400ApplicationJSONMeta)
  meta: UpsertUser400ApplicationJSONMeta;
}

export class UpsertUser201ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * Specifies if any warnings occurred when validating the properties
 */
export class UpsertUser201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertUser201ApplicationJSONMeta)
  meta: UpsertUser201ApplicationJSONMeta;

  /**
   * If validation fails, specifies property name and error description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rejected" })
  rejected?: Record<string, string>;
}

export class UpsertUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * User will be created
   */
  @SpeakeasyMetadata()
  upsertUser201ApplicationJSONObject?: UpsertUser201ApplicationJSON;

  /**
   * Bad request, some fields or parameters are incorrect
   */
  @SpeakeasyMetadata()
  upsertUser400ApplicationJSONObject?: UpsertUser400ApplicationJSON;

  /**
   * No API Key was provided or the key is not authorised to perform the action
   */
  @SpeakeasyMetadata()
  upsertUser401ApplicationJSONObject?: UpsertUser401ApplicationJSON;

  /**
   * The API Key provided is currently not enabled
   */
  @SpeakeasyMetadata()
  upsertUser403ApplicationJSONObject?: UpsertUser403ApplicationJSON;

  /**
   * Too many API requests were send
   */
  @SpeakeasyMetadata()
  upsertUser429ApplicationJSONObject?: UpsertUser429ApplicationJSON;

  /**
   * An unexpected error occurred
   */
  @SpeakeasyMetadata()
  upsertUser500ApplicationJSONObject?: UpsertUser500ApplicationJSON;
}
