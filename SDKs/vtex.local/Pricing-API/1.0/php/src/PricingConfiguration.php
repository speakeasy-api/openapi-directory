<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class PricingConfiguration 
{
	
	public const GET_PRICING_CONFIG_SERVERS = [
		'https://api.vtex.com/{account}/pricing',
	];
	
	public const GET_PRICINGV2_STATUS_SERVERS = [
		'https://api.vtex.com/{account}/pricing',
	];

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Get Pricing Configuration
     * 
     * Retrieves Pricing Configuration.
     * ## Response body example
     * 
     * ```json
     * {
     *     "hasMigrated": true,
     *     "migrationStatus": "Completed",
     *     "defaultMarkup": 100,
     *     "priceVariation": {
     *         "upperLimit": null,
     *         "lowerLimit": null
     *     },
     *     "minimumMarkups": {
     *         "1": 100,
     *         "2": 90
     *     },
     *     "tradePolicyConfigs": [],
     *     "sellersToOverride": [],
     *     "hasPriceInheritance": false,
     *     "priceInheritance": "never",
     *     "hasOptionalBasePrice": false,
     *     "blockAccount": false,
     *     "blockedRoutes": null,
     *     "priceTableSelectionStrategy": "first",
     *     "priceTableLimit": null
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPricingConfigRequest $request
     * @param string $serverURL
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPricingConfigResponse
     */
	public function getPricingConfig(
        \OpenAPI\OpenAPI\Models\Operations\GetPricingConfigRequest $request,
        ?string $serverURL = null,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPricingConfigResponse
    {
        $baseUrl = PricingConfiguration::GET_PRICING_CONFIG_SERVERS[0];
        if (!empty($serverURL)) {
            $baseUrl = $serverURL;
        }
        
        $url = Utils\Utils::generateUrl($baseUrl, '/pricing/config');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPricingConfigResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->pricingConfiguration = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\PricingConfiguration', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get Pricing v2 Status
     * 
     * Retrieves Pricing v2 Status. 
     * ## Response body example
     * 
     * ```json
     * {
     *     "isActive": true,
     *     "hasMigrated": true
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPricingv2StatusRequest $request
     * @param string $serverURL
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPricingv2StatusResponse
     */
	public function getPricingv2Status(
        \OpenAPI\OpenAPI\Models\Operations\GetPricingv2StatusRequest $request,
        ?string $serverURL = null,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPricingv2StatusResponse
    {
        $baseUrl = PricingConfiguration::GET_PRICINGV2_STATUS_SERVERS[0];
        if (!empty($serverURL)) {
            $baseUrl = $serverURL;
        }
        
        $url = Utils\Utils::generateUrl($baseUrl, '/pricing/migration');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPricingv2StatusResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getPricingv2Status200ApplicationJSONObject = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Operations\GetPricingv2Status200ApplicationJSON', 'json');
            }
        }

        return $response;
    }
}