// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCallAnalyticsCategoryXAmzTargetEnum
type GetCallAnalyticsCategoryXAmzTargetEnum string

const (
	GetCallAnalyticsCategoryXAmzTargetEnumTranscribeGetCallAnalyticsCategory GetCallAnalyticsCategoryXAmzTargetEnum = "Transcribe.GetCallAnalyticsCategory"
)

func (e GetCallAnalyticsCategoryXAmzTargetEnum) ToPointer() *GetCallAnalyticsCategoryXAmzTargetEnum {
	return &e
}

func (e *GetCallAnalyticsCategoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Transcribe.GetCallAnalyticsCategory":
		*e = GetCallAnalyticsCategoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCallAnalyticsCategoryXAmzTargetEnum: %v", v)
	}
}

type GetCallAnalyticsCategoryRequest struct {
	GetCallAnalyticsCategoryRequest shared.GetCallAnalyticsCategoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      GetCallAnalyticsCategoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetCallAnalyticsCategoryResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	GetCallAnalyticsCategoryResponse *shared.GetCallAnalyticsCategoryResponse
	// InternalFailureException
	InternalFailureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
