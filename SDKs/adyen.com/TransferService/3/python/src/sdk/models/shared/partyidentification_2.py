"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import address_2 as shared_address_2
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PartyIdentification2TypeEnum(str, Enum):
    r"""The type of entity that owns the bank account.
    
     Possible values: **individual**, **organization**, or **unknown**.
    """
    INDIVIDUAL = 'individual'
    ORGANIZATION = 'organization'
    UNKNOWN = 'unknown'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PartyIdentification2:
    
    full_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullName') }})
    r"""The name of the entity."""  
    address: Optional[shared_address_2.Address2] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName'), 'exclude': lambda f: f is None }})
    r"""First name of the individual. Required when `type` is **individual**."""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName'), 'exclude': lambda f: f is None }})
    r"""Last name of the individual. Required when `type` is **individual**."""  
    type: Optional[PartyIdentification2TypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of entity that owns the bank account.
    
     Possible values: **individual**, **organization**, or **unknown**.
    """  
    