"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import money as shared_money
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogDiscount:
    r"""A discount applicable to items."""
    
    amount_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    discount_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discount_type'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale."""  
    label_color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label_color'), 'exclude': lambda f: f is None }})
    r"""The color of the discount display label in the Square Point of Sale app. This must be a valid hex color code."""  
    modify_tax_basis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modify_tax_basis'), 'exclude': lambda f: f is None }})
    r"""Indicates whether this discount should reduce the price used to calculate tax.
    
    Most discounts should use `MODIFY_TAX_BASIS`. However, in some circumstances taxes must
    be calculated based on an item's price, ignoring a particular discount. For example,
    in many US jurisdictions, a manufacturer coupon or instant rebate reduces the price a
    customer pays but does not reduce the sale price used to calculate how much sales tax is
    due. In this case, the discount representing that manufacturer coupon should have
    `DO_NOT_MODIFY_TAX_BASIS` for this field.
    
    If you are unsure whether you need to use this field, consult your tax professional.
    """  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The discount name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."""  
    percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentage'), 'exclude': lambda f: f is None }})
    r"""The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal
    separator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`
    is `VARIABLE_PERCENTAGE`.
    
    Do not use this field for amount-based or variable discounts.
    """  
    pin_required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pin_required'), 'exclude': lambda f: f is None }})
    r"""Indicates whether a mobile staff member needs to enter their PIN to apply the
    discount to a payment in the Square Point of Sale app.
    """  
    