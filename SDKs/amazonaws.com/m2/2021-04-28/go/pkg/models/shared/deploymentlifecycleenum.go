// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeploymentLifecycleEnum string

const (
	DeploymentLifecycleEnumDeploying DeploymentLifecycleEnum = "Deploying"
	DeploymentLifecycleEnumSucceeded DeploymentLifecycleEnum = "Succeeded"
	DeploymentLifecycleEnumFailed    DeploymentLifecycleEnum = "Failed"
)

func (e DeploymentLifecycleEnum) ToPointer() *DeploymentLifecycleEnum {
	return &e
}

func (e *DeploymentLifecycleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Deploying":
		fallthrough
	case "Succeeded":
		fallthrough
	case "Failed":
		*e = DeploymentLifecycleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeploymentLifecycleEnum: %v", v)
	}
}
