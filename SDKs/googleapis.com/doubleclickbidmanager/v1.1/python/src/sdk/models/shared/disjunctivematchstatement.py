"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventfilter as shared_eventfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DisjunctiveMatchStatement:
    r"""DisjunctiveMatchStatement that OR's all contained filters."""
    
    event_filters: Optional[list[shared_eventfilter.EventFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventFilters'), 'exclude': lambda f: f is None }})
    r"""Filters. There is a limit of 100 filters that can be set per disjunctive match statement."""  
    