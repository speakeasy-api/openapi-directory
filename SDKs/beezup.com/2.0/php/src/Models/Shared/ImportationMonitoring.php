<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ImportationMonitoring - Describe the reporting of the catalog importation
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ImportationMonitoring
{
    /**
     * The start date of the importation
     * 
     * @var \DateTime $beginUtcDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('beginUtcDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $beginUtcDate;
    
    /**
     * In case of error a description will be indicated
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BeezUPCommonUserErrorMessage> $errors
     */
	#[\JMS\Serializer\Annotation\SerializedName('errors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BeezUPCommonUserErrorMessage>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $errors = null;
    
    /**
     * The execution identifier of the catalog importation
     * 
     * @var string $executionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('executionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $executionId;
    
    /**
     * The last update of the reporting
     * 
     * @var \DateTime $lastUpdateUtcDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastUpdateUtcDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $lastUpdateUtcDate;
    
    /**
     * Applicable operations considering the state of the importation
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ImportationMonitoringLinks $links
     */
	#[\JMS\Serializer\Annotation\SerializedName('links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ImportationMonitoringLinks')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImportationMonitoringLinks $links = null;
    
    /**
     * Contains all steps of the importation process with a boolean. If true the step has been passed, false the step is not complete
     * 
     * @var array<string, bool> $steps
     */
	#[\JMS\Serializer\Annotation\SerializedName('steps')]
    #[\JMS\Serializer\Annotation\Type('array<string, bool>')]
    public array $steps;
    
    /**
     * Indicates if the importation was successfully completed or not
     * 
     * @var bool $success
     */
	#[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $success;
    
    /**
     * The user identifier
     * 
     * @var ?string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('userId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
	public function __construct()
	{
		$this->beginUtcDate = new \DateTime();
		$this->errors = null;
		$this->executionId = "";
		$this->lastUpdateUtcDate = new \DateTime();
		$this->links = null;
		$this->steps = [];
		$this->success = false;
		$this->userId = null;
	}
}
