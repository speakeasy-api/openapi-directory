// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RoutesOneOrMoreRoutesRouteTypesEnum string

const (
	RoutesOneOrMoreRoutesRouteTypesEnumZero  RoutesOneOrMoreRoutesRouteTypesEnum = "0"
	RoutesOneOrMoreRoutesRouteTypesEnumOne   RoutesOneOrMoreRoutesRouteTypesEnum = "1"
	RoutesOneOrMoreRoutesRouteTypesEnumTwo   RoutesOneOrMoreRoutesRouteTypesEnum = "2"
	RoutesOneOrMoreRoutesRouteTypesEnumThree RoutesOneOrMoreRoutesRouteTypesEnum = "3"
	RoutesOneOrMoreRoutesRouteTypesEnumFour  RoutesOneOrMoreRoutesRouteTypesEnum = "4"
)

func (e *RoutesOneOrMoreRoutesRouteTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		*e = RoutesOneOrMoreRoutesRouteTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RoutesOneOrMoreRoutesRouteTypesEnum: %s", s)
	}
}

type RoutesOneOrMoreRoutesRequest struct {
	// Your developer id
	Devid *string `queryParam:"style=form,explode=true,name=devid"`
	// Filter by name  of route (accepts partial route name matches)
	RouteName *string `queryParam:"style=form,explode=true,name=route_name"`
	// Filter by route_type; values returned via RouteTypes API
	RouteTypes []RoutesOneOrMoreRoutesRouteTypesEnum `queryParam:"style=form,explode=true,name=route_types"`
	// Authentication signature for request
	Signature *string `queryParam:"style=form,explode=true,name=signature"`
	// Please ignore
	Token *string `queryParam:"style=form,explode=true,name=token"`
}

type RoutesOneOrMoreRoutesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Invalid Request
	V3ErrorResponse *shared.V3ErrorResponse
	// Route names and numbers for all routes of all route types.
	V3RouteResponse *shared.V3RouteResponse
}
