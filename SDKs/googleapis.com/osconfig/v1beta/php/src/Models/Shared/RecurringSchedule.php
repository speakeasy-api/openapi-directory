<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RecurringSchedule - Sets the time for recurring patch deployments.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RecurringSchedule
{
    /**
     * Optional. The end time at which a recurring patch deployment schedule is no longer active.
     * 
     * @var ?string $endTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('endTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endTime = null;
    
    /**
     * Required. The frequency unit of this recurring schedule.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecurringScheduleFrequencyEnum $frequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('frequency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RecurringScheduleFrequencyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringScheduleFrequencyEnum $frequency = null;
    
    /**
     * Output only. The time the last patch job ran successfully.
     * 
     * @var ?string $lastExecuteTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastExecuteTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastExecuteTime = null;
    
    /**
     * Represents a monthly schedule. An example of a valid monthly schedule is "on the third Tuesday of the month" or "on the 15th of the month".
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MonthlySchedule $monthly
     */
	#[\JMS\Serializer\Annotation\SerializedName('monthly')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MonthlySchedule')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MonthlySchedule $monthly = null;
    
    /**
     * Output only. The time the next patch job is scheduled to run.
     * 
     * @var ?string $nextExecuteTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextExecuteTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextExecuteTime = null;
    
    /**
     * Optional. The time that the recurring schedule becomes effective. Defaults to `create_time` of the patch deployment.
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
    /**
     * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TimeOfDay $timeOfDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeOfDay')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TimeOfDay')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TimeOfDay $timeOfDay = null;
    
    /**
     * Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TimeZone $timeZone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeZone')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TimeZone')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TimeZone $timeZone = null;
    
    /**
     * Represents a weekly schedule.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WeeklySchedule $weekly
     */
	#[\JMS\Serializer\Annotation\SerializedName('weekly')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WeeklySchedule')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WeeklySchedule $weekly = null;
    
	public function __construct()
	{
		$this->endTime = null;
		$this->frequency = null;
		$this->lastExecuteTime = null;
		$this->monthly = null;
		$this->nextExecuteTime = null;
		$this->startTime = null;
		$this->timeOfDay = null;
		$this->timeZone = null;
		$this->weekly = null;
	}
}
