/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedCluster } from "./nestedcluster";
import { NestedDevice } from "./nesteddevice";
import { NestedDeviceRole } from "./nesteddevicerole";
import { NestedDeviceType } from "./nesteddevicetype";
import { NestedIPAddress } from "./nestedipaddress";
import { NestedPlatform } from "./nestedplatform";
import { NestedRack } from "./nestedrack";
import { NestedSite } from "./nestedsite";
import { NestedTenant } from "./nestedtenant";
import { NestedVirtualChassis } from "./nestedvirtualchassis";
import { Expose, Transform, Type } from "class-transformer";

export enum DeviceFaceLabelEnum {
  Front = "Front",
  Rear = "Rear",
}

export enum DeviceFaceValueEnum {
  Front = "front",
  Rear = "rear",
}

export class DeviceFace extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: DeviceFaceLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: DeviceFaceValueEnum;
}

export enum DeviceStatusLabelEnum {
  Offline = "Offline",
  Active = "Active",
  Planned = "Planned",
  Staged = "Staged",
  Failed = "Failed",
  Inventory = "Inventory",
  Decommissioning = "Decommissioning",
}

export enum DeviceStatusValueEnum {
  Offline = "offline",
  Active = "active",
  Planned = "planned",
  Staged = "staged",
  Failed = "failed",
  Inventory = "inventory",
  Decommissioning = "decommissioning",
}

export class DeviceStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: DeviceStatusLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: DeviceStatusValueEnum;
}

export class Device extends SpeakeasyBase {
  /**
   * A unique tag used to identify this device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "asset_tag" })
  assetTag?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cluster" })
  @Type(() => NestedCluster)
  cluster?: NestedCluster;

  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "device_role" })
  @Type(() => NestedDeviceRole)
  deviceRole: NestedDeviceRole;

  @SpeakeasyMetadata()
  @Expose({ name: "device_type" })
  @Type(() => NestedDeviceType)
  deviceType: NestedDeviceType;

  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "face" })
  @Type(() => DeviceFace)
  face?: DeviceFace;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "local_context_data" })
  localContextData?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parent_device" })
  @Type(() => NestedDevice)
  parentDevice?: NestedDevice;

  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  @Type(() => NestedPlatform)
  platform?: NestedPlatform;

  /**
   * The lowest-numbered unit occupied by the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_ip" })
  @Type(() => NestedIPAddress)
  primaryIp?: NestedIPAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_ip4" })
  @Type(() => NestedIPAddress)
  primaryIp4?: NestedIPAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_ip6" })
  @Type(() => NestedIPAddress)
  primaryIp6?: NestedIPAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "rack" })
  @Type(() => NestedRack)
  rack?: NestedRack;

  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => NestedSite)
  site: NestedSite;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => DeviceStatus)
  status?: DeviceStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  @Type(() => NestedTenant)
  tenant?: NestedTenant;

  @SpeakeasyMetadata()
  @Expose({ name: "vc_position" })
  vcPosition?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "vc_priority" })
  vcPriority?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "virtual_chassis" })
  @Type(() => NestedVirtualChassis)
  virtualChassis?: NestedVirtualChassis;
}
