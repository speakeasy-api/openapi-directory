"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import money as shared_money
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PricePricingTypeEnum(str, Enum):
    r"""The pricing type for the deal/product. (default: CPM)"""
    PRICING_TYPE_UNSPECIFIED = 'PRICING_TYPE_UNSPECIFIED'
    COST_PER_MILLE = 'COST_PER_MILLE'
    COST_PER_DAY = 'COST_PER_DAY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Price:
    r"""Represents a price and a pricing type for a product / deal."""
    
    amount: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money with its currency type."""  
    pricing_type: Optional[PricePricingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pricingType'), 'exclude': lambda f: f is None }})
    r"""The pricing type for the deal/product. (default: CPM)"""  
    