// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReactionsListForTeamDiscussionContentEnum - Returns a single [reaction type](https://docs.github.com/enterprise-server@2.19/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion.
type ReactionsListForTeamDiscussionContentEnum string

const (
	ReactionsListForTeamDiscussionContentEnumPlus1    ReactionsListForTeamDiscussionContentEnum = "+1"
	ReactionsListForTeamDiscussionContentEnumMinus1   ReactionsListForTeamDiscussionContentEnum = "-1"
	ReactionsListForTeamDiscussionContentEnumLaugh    ReactionsListForTeamDiscussionContentEnum = "laugh"
	ReactionsListForTeamDiscussionContentEnumConfused ReactionsListForTeamDiscussionContentEnum = "confused"
	ReactionsListForTeamDiscussionContentEnumHeart    ReactionsListForTeamDiscussionContentEnum = "heart"
	ReactionsListForTeamDiscussionContentEnumHooray   ReactionsListForTeamDiscussionContentEnum = "hooray"
	ReactionsListForTeamDiscussionContentEnumRocket   ReactionsListForTeamDiscussionContentEnum = "rocket"
	ReactionsListForTeamDiscussionContentEnumEyes     ReactionsListForTeamDiscussionContentEnum = "eyes"
)

func (e ReactionsListForTeamDiscussionContentEnum) ToPointer() *ReactionsListForTeamDiscussionContentEnum {
	return &e
}

func (e *ReactionsListForTeamDiscussionContentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "+1":
		fallthrough
	case "-1":
		fallthrough
	case "laugh":
		fallthrough
	case "confused":
		fallthrough
	case "heart":
		fallthrough
	case "hooray":
		fallthrough
	case "rocket":
		fallthrough
	case "eyes":
		*e = ReactionsListForTeamDiscussionContentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReactionsListForTeamDiscussionContentEnum: %v", v)
	}
}

type ReactionsListForTeamDiscussionRequest struct {
	// This API is under preview and subject to change.
	Accept string `header:"style=simple,explode=false,name=accept"`
	// Returns a single [reaction type](https://docs.github.com/enterprise-server@2.19/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion.
	Content          *ReactionsListForTeamDiscussionContentEnum `queryParam:"style=form,explode=true,name=content"`
	DiscussionNumber int64                                      `pathParam:"style=simple,explode=false,name=discussion_number"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page (max 100)
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	TeamID  int64  `pathParam:"style=simple,explode=false,name=team_id"`
}

type ReactionsListForTeamDiscussionResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Reactions []shared.Reaction
}
