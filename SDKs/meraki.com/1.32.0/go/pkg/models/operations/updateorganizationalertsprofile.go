// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum - The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular
type UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum string

const (
	UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnumCellular UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum = "cellular"
	UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnumWan1     UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum = "wan1"
	UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnumWan2     UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum = "wan2"
)

func (e UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum) ToPointer() *UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum {
	return &e
}

func (e *UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cellular":
		fallthrough
	case "wan1":
		fallthrough
	case "wan2":
		*e = UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum: %v", v)
	}
}

// UpdateOrganizationAlertsProfileRequestBodyAlertCondition - The conditions that determine if the alert triggers
type UpdateOrganizationAlertsProfileRequestBodyAlertCondition struct {
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
	BitRateBps *int64 `json:"bit_rate_bps,omitempty"`
	// The total duration in seconds that the threshold should be crossed before alerting
	Duration *int64 `json:"duration,omitempty"`
	// The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular
	Interface *UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum `json:"interface,omitempty"`
	// The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
	JitterMs *int64 `json:"jitter_ms,omitempty"`
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
	LatencyMs *int64 `json:"latency_ms,omitempty"`
	// The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
	LossRatio *float32 `json:"loss_ratio,omitempty"`
	// The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
	Mos *float32 `json:"mos,omitempty"`
	// The look back period in seconds for sensing the alert
	Window *int64 `json:"window,omitempty"`
}

// UpdateOrganizationAlertsProfileRequestBodyRecipients - List of recipients that will recieve the alert.
type UpdateOrganizationAlertsProfileRequestBodyRecipients struct {
	// A list of emails that will receive information about the alert
	Emails []string `json:"emails,omitempty"`
	// A list base64 encoded urls of webhook endpoints that will receive information about the alert
	HTTPServerIds []string `json:"httpServerIds,omitempty"`
}

// UpdateOrganizationAlertsProfileRequestBodyTypeEnum - The alert type
type UpdateOrganizationAlertsProfileRequestBodyTypeEnum string

const (
	UpdateOrganizationAlertsProfileRequestBodyTypeEnumAppOutage      UpdateOrganizationAlertsProfileRequestBodyTypeEnum = "appOutage"
	UpdateOrganizationAlertsProfileRequestBodyTypeEnumVoipJitter     UpdateOrganizationAlertsProfileRequestBodyTypeEnum = "voipJitter"
	UpdateOrganizationAlertsProfileRequestBodyTypeEnumVoipMos        UpdateOrganizationAlertsProfileRequestBodyTypeEnum = "voipMos"
	UpdateOrganizationAlertsProfileRequestBodyTypeEnumVoipPacketLoss UpdateOrganizationAlertsProfileRequestBodyTypeEnum = "voipPacketLoss"
	UpdateOrganizationAlertsProfileRequestBodyTypeEnumWanLatency     UpdateOrganizationAlertsProfileRequestBodyTypeEnum = "wanLatency"
	UpdateOrganizationAlertsProfileRequestBodyTypeEnumWanPacketLoss  UpdateOrganizationAlertsProfileRequestBodyTypeEnum = "wanPacketLoss"
	UpdateOrganizationAlertsProfileRequestBodyTypeEnumWanStatus      UpdateOrganizationAlertsProfileRequestBodyTypeEnum = "wanStatus"
	UpdateOrganizationAlertsProfileRequestBodyTypeEnumWanUtilization UpdateOrganizationAlertsProfileRequestBodyTypeEnum = "wanUtilization"
)

func (e UpdateOrganizationAlertsProfileRequestBodyTypeEnum) ToPointer() *UpdateOrganizationAlertsProfileRequestBodyTypeEnum {
	return &e
}

func (e *UpdateOrganizationAlertsProfileRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "appOutage":
		fallthrough
	case "voipJitter":
		fallthrough
	case "voipMos":
		fallthrough
	case "voipPacketLoss":
		fallthrough
	case "wanLatency":
		fallthrough
	case "wanPacketLoss":
		fallthrough
	case "wanStatus":
		fallthrough
	case "wanUtilization":
		*e = UpdateOrganizationAlertsProfileRequestBodyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateOrganizationAlertsProfileRequestBodyTypeEnum: %v", v)
	}
}

type UpdateOrganizationAlertsProfileRequestBody struct {
	// The conditions that determine if the alert triggers
	AlertCondition *UpdateOrganizationAlertsProfileRequestBodyAlertCondition `json:"alertCondition,omitempty"`
	// User supplied description of the alert
	Description *string `json:"description,omitempty"`
	// Is the alert config enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Networks with these tags will be monitored for the alert
	NetworkTags []string `json:"networkTags,omitempty"`
	// List of recipients that will recieve the alert.
	Recipients *UpdateOrganizationAlertsProfileRequestBodyRecipients `json:"recipients,omitempty"`
	// The alert type
	Type *UpdateOrganizationAlertsProfileRequestBodyTypeEnum `json:"type,omitempty"`
}

type UpdateOrganizationAlertsProfileRequest struct {
	RequestBody    *UpdateOrganizationAlertsProfileRequestBody `request:"mediaType=application/json"`
	AlertConfigID  string                                      `pathParam:"style=simple,explode=false,name=alertConfigId"`
	OrganizationID string                                      `pathParam:"style=simple,explode=false,name=organizationId"`
}

type UpdateOrganizationAlertsProfileResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateOrganizationAlertsProfile200ApplicationJSONObject map[string]interface{}
}
