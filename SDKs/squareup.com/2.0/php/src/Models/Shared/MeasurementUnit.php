<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MeasurementUnit - Represents a unit of measurement to use with a quantity, such as ounces
 * 
 * or inches. Exactly one of the following fields are required: `custom_unit`,
 * `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MeasurementUnit
{
    /**
     * Represents a standard area unit.
     * 
     * @var ?string $areaUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('area_unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $areaUnit = null;
    
    /**
     * The information needed to define a custom unit, provided by the seller.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MeasurementUnitCustom $customUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_unit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MeasurementUnitCustom')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MeasurementUnitCustom $customUnit = null;
    
    /**
     * Reserved for API integrations that lack the ability to specify a real measurement unit
     * 
     * @var ?string $genericUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('generic_unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $genericUnit = null;
    
    /**
     * Represents a standard length unit.
     * 
     * @var ?string $lengthUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('length_unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lengthUnit = null;
    
    /**
     * Represents a standard unit of time.
     * 
     * @var ?string $timeUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('time_unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timeUnit = null;
    
    /**
     * Represents the type of the measurement unit.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Represents a standard volume unit.
     * 
     * @var ?string $volumeUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('volume_unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $volumeUnit = null;
    
    /**
     * Represents a standard unit of weight or mass.
     * 
     * @var ?string $weightUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('weight_unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $weightUnit = null;
    
	public function __construct()
	{
		$this->areaUnit = null;
		$this->customUnit = null;
		$this->genericUnit = null;
		$this->lengthUnit = null;
		$this->timeUnit = null;
		$this->type = null;
		$this->volumeUnit = null;
		$this->weightUnit = null;
	}
}
