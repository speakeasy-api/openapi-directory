/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Duration } from "./duration";
import { Expose, Type } from "class-transformer";

export class FutureReservationTimeWindow extends SpeakeasyBase {
  /**
   * A Duration represents a fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". Range is approximately 10,000 years.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  @Type(() => Duration)
  duration?: Duration;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * Start time of the Future Reservation. The start_time is an RFC3339 string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;
}
