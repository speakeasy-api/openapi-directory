<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GetPaymentsForPayoutResponseV3Summary
{
    /**
     * The count of payments within the payout which have been confirmed.
     * 
     * @var ?int $confirmedPayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('confirmedPayments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $confirmedPayments = null;
    
    /**
     * The count of payments within the payout which have failed or been returned.
     * 
     * @var ?int $failedPayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('failedPayments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $failedPayments = null;
    
    /**
     * The count of payments within the payout which are incomplete.
     * 
     * @var ?int $incompletePayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('incompletePayments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $incompletePayments = null;
    
    /**
     * The date/time at which the payout was instructed.
     * 
     * @var ?\DateTime $instructedDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('instructedDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $instructedDateTime = null;
    
    /**
     * The memo attached to the payout.
     * 
     * @var ?string $payoutMemo
     */
	#[\JMS\Serializer\Annotation\SerializedName('payoutMemo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payoutMemo = null;
    
    /**
     * The current status of the payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN
     * 
     * @var ?string $payoutStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('payoutStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payoutStatus = null;
    
    /**
     * The count of payments within the payout which have been released.
     * 
     * @var ?int $releasedPayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('releasedPayments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $releasedPayments = null;
    
    /**
     * The date/time at which the payout was submitted.
     * 
     * @var ?\DateTime $submittedDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('submittedDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $submittedDateTime = null;
    
    /**
     * The count of payments within the payout.
     * 
     * @var ?int $totalPayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalPayments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalPayments = null;
    
    /**
     * The date/time at which the payout was withdrawn.
     * 
     * @var ?\DateTime $withdrawnDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('withdrawnDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $withdrawnDateTime = null;
    
	public function __construct()
	{
		$this->confirmedPayments = null;
		$this->failedPayments = null;
		$this->incompletePayments = null;
		$this->instructedDateTime = null;
		$this->payoutMemo = null;
		$this->payoutStatus = null;
		$this->releasedPayments = null;
		$this->submittedDateTime = null;
		$this->totalPayments = null;
		$this->withdrawnDateTime = null;
	}
}
