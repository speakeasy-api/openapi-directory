"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudresourcesettingsv1valueenumvalue as shared_googlecloudresourcesettingsv1valueenumvalue
from ..shared import googlecloudresourcesettingsv1valuestringmap as shared_googlecloudresourcesettingsv1valuestringmap
from ..shared import googlecloudresourcesettingsv1valuestringset as shared_googlecloudresourcesettingsv1valuestringset
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudResourcesettingsV1Value:
    r"""The data in a setting value."""
    
    boolean_value: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('booleanValue'), 'exclude': lambda f: f is None }})
    r"""Defines this value as being a boolean value."""  
    duration_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationValue'), 'exclude': lambda f: f is None }})
    r"""Defines this value as being a Duration."""  
    enum_value: Optional[shared_googlecloudresourcesettingsv1valueenumvalue.GoogleCloudResourcesettingsV1ValueEnumValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enumValue'), 'exclude': lambda f: f is None }})
    r"""A enum value that can hold any enum type setting values. Each enum type is represented by a number, this representation is stored in the definitions."""  
    string_map_value: Optional[shared_googlecloudresourcesettingsv1valuestringmap.GoogleCloudResourcesettingsV1ValueStringMap] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringMapValue'), 'exclude': lambda f: f is None }})
    r"""A string->string map value that can hold a map of string keys to string values. The maximum length of each string is 200 characters and there can be a maximum of 50 key-value pairs in the map."""  
    string_set_value: Optional[shared_googlecloudresourcesettingsv1valuestringset.GoogleCloudResourcesettingsV1ValueStringSet] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringSetValue'), 'exclude': lambda f: f is None }})
    r"""A string set value that can hold a set of strings. The maximum length of each string is 200 characters and there can be a maximum of 50 strings in the string set."""  
    string_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringValue'), 'exclude': lambda f: f is None }})
    r"""Defines this value as being a string value."""  
    