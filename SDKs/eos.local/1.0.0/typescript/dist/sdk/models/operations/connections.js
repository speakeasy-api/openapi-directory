"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectionsResponse = exports.Connections200ApplicationJSON = exports.Connections200ApplicationJSONLastHandshake = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Structure holding detailed information about the connection
 */
var Connections200ApplicationJSONLastHandshake = /** @class */ (function (_super) {
    __extends(Connections200ApplicationJSONLastHandshake, _super);
    function Connections200ApplicationJSONLastHandshake() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "agent" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "agent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "chain_id" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "chainId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "generation" }),
        __metadata("design:type", Number)
    ], Connections200ApplicationJSONLastHandshake.prototype, "generation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "head_id" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "headId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "head_num" }),
        __metadata("design:type", Number)
    ], Connections200ApplicationJSONLastHandshake.prototype, "headNum", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last_irreversible_block_id" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "lastIrreversibleBlockId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last_irreversible_block_num" }),
        __metadata("design:type", Number)
    ], Connections200ApplicationJSONLastHandshake.prototype, "lastIrreversibleBlockNum", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network_version" }),
        __metadata("design:type", Number)
    ], Connections200ApplicationJSONLastHandshake.prototype, "networkVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "node_id" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "nodeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "os" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "os", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p2p_address" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "p2pAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sig" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "sig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "time" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "time", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "token" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSONLastHandshake.prototype, "token", void 0);
    return Connections200ApplicationJSONLastHandshake;
}(utils_1.SpeakeasyBase));
exports.Connections200ApplicationJSONLastHandshake = Connections200ApplicationJSONLastHandshake;
var Connections200ApplicationJSON = /** @class */ (function (_super) {
    __extends(Connections200ApplicationJSON, _super);
    function Connections200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connecting" }),
        __metadata("design:type", Boolean)
    ], Connections200ApplicationJSON.prototype, "connecting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last_handshake" }),
        (0, class_transformer_1.Type)(function () { return Connections200ApplicationJSONLastHandshake; }),
        __metadata("design:type", Connections200ApplicationJSONLastHandshake)
    ], Connections200ApplicationJSON.prototype, "lastHandshake", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peer" }),
        __metadata("design:type", String)
    ], Connections200ApplicationJSON.prototype, "peer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "syncing" }),
        __metadata("design:type", Boolean)
    ], Connections200ApplicationJSON.prototype, "syncing", void 0);
    return Connections200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Connections200ApplicationJSON = Connections200ApplicationJSON;
var ConnectionsResponse = /** @class */ (function (_super) {
    __extends(ConnectionsResponse, _super);
    function ConnectionsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ConnectionsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ConnectionsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ConnectionsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Connections200ApplicationJSON }),
        __metadata("design:type", Array)
    ], ConnectionsResponse.prototype, "connections200ApplicationJSONObjects", void 0);
    return ConnectionsResponse;
}(utils_1.SpeakeasyBase));
exports.ConnectionsResponse = ConnectionsResponse;
