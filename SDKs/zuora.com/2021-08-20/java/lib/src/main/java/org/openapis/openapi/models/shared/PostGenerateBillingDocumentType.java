/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class PostGenerateBillingDocumentType {
    /**
     * Whether to automatically post the billing documents after the draft billing documents are generated. 
     * 
     * If an error occurs during posting billing documents, the draft billing documents are not generated too.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPost")
    public PostGenerateBillingDocumentTypeAutoPostEnum autoPost;
    public PostGenerateBillingDocumentType withAutoPost(PostGenerateBillingDocumentTypeAutoPostEnum autoPost) {
        this.autoPost = autoPost;
        return this;
    }
    
    /**
     * Whether to automatically renew the subscriptions with **Auto Renew** set to **Yes**. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRenew")
    public PostGenerateBillingDocumentTypeAutoRenewEnum autoRenew;
    public PostGenerateBillingDocumentType withAutoRenew(PostGenerateBillingDocumentTypeAutoRenewEnum autoRenew) {
        this.autoRenew = autoRenew;
        return this;
    }
    
    /**
     * The types of the charges to be excluded from the generation of billing documents. The field values are case insensitive. Supported values include `onetime`, `recurring`, and `usage`. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeTypeToExclude")
    public String[] chargeTypeToExclude;
    public PostGenerateBillingDocumentType withChargeTypeToExclude(String[] chargeTypeToExclude) {
        this.chargeTypeToExclude = chargeTypeToExclude;
        return this;
    }
    
    /**
     * The date on which to generate the billing documents, in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("effectiveDate")
    public LocalDate effectiveDate;
    public PostGenerateBillingDocumentType withEffectiveDate(LocalDate effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }
    
    /**
     * The IDs of the subscriptions that you want to create the billing documents for. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionIds")
    public String[] subscriptionIds;
    public PostGenerateBillingDocumentType withSubscriptionIds(String[] subscriptionIds) {
        this.subscriptionIds = subscriptionIds;
        return this;
    }
    
    /**
     * The date used to determine which charges are to be billed, in `yyyy-mm-dd` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("targetDate")
    public LocalDate targetDate;
    public PostGenerateBillingDocumentType withTargetDate(LocalDate targetDate) {
        this.targetDate = targetDate;
        return this;
    }
    
}
