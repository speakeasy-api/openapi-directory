<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleChromeManagementV1CpuInfo - CPU specifications for the device * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleChromeManagementV1CpuInfo
{
    /**
     * Output only. Architecture type for the CPU. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1CpuInfoArchitectureEnum $architecture
     */
	#[\JMS\Serializer\Annotation\SerializedName('architecture')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1CpuInfoArchitectureEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1CpuInfoArchitectureEnum $architecture = null;
    
    /**
     * Output only. Whether keylocker is configured.`TRUE` = Enabled; `FALSE` = disabled. Only reported if keylockerSupported = `TRUE`.
     * 
     * @var ?bool $keylockerConfigured
     */
	#[\JMS\Serializer\Annotation\SerializedName('keylockerConfigured')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $keylockerConfigured = null;
    
    /**
     * Output only. Whether keylocker is supported.
     * 
     * @var ?bool $keylockerSupported
     */
	#[\JMS\Serializer\Annotation\SerializedName('keylockerSupported')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $keylockerSupported = null;
    
    /**
     * Output only. The max CPU clock speed in kHz.
     * 
     * @var ?int $maxClockSpeed
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxClockSpeed')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxClockSpeed = null;
    
    /**
     * Output only. The CPU model name. Example: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz
     * 
     * @var ?string $model
     */
	#[\JMS\Serializer\Annotation\SerializedName('model')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $model = null;
    
	public function __construct()
	{
		$this->architecture = null;
		$this->keylockerConfigured = null;
		$this->keylockerSupported = null;
		$this->maxClockSpeed = null;
		$this->model = null;
	}
}
