/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BankFeedAccount - The target bank account in a supported accounting package for ingestion into a bank feed.
 */
public class BankFeedAccount {
    /**
     * The bank account name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountName")
    public String accountName;

    public BankFeedAccount withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }
    
    /**
     * The account number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;

    public BankFeedAccount withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * The type of bank account e.g. Credit
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountType")
    public String accountType;

    public BankFeedAccount withAccountType(String accountType) {
        this.accountType = accountType;
        return this;
    }
    
    /**
     * The latest balance for the bank account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balance")
    public Double balance;

    public BankFeedAccount withBalance(Double balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * The currency e.g. USD
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;

    public BankFeedAccount withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * In Codat's data model, dates and times are represented using the &lt;a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * &gt; Time zones
     * &gt; 
     * &gt; Not all dates from Codat will contain information about time zones.  
     * &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("feedStartDate")
    public String feedStartDate;

    public BankFeedAccount withFeedStartDate(String feedStartDate) {
        this.feedStartDate = feedStartDate;
        return this;
    }
    
    /**
     * Unique ID for the bank feed account
     */
    @JsonProperty("id")
    public String id;

    public BankFeedAccount withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * In Codat's data model, dates and times are represented using the &lt;a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * &gt; Time zones
     * &gt; 
     * &gt; Not all dates from Codat will contain information about time zones.  
     * &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifiedDate")
    public String modifiedDate;

    public BankFeedAccount withModifiedDate(String modifiedDate) {
        this.modifiedDate = modifiedDate;
        return this;
    }
    
    /**
     * The sort code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortCode")
    public String sortCode;

    public BankFeedAccount withSortCode(String sortCode) {
        this.sortCode = sortCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public BankFeedAccount withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public BankFeedAccount(@JsonProperty("id") String id) {
        this.id = id;
  }
}
