// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetStoriesSecurity struct {
	APIKey         *shared.SchemeAPIKey         `security:"scheme,type=apiKey,subtype=query"`
	Oauth2Code     *shared.SchemeOauth2Code     `security:"scheme,type=oauth2"`
	Oauth2Implicit *shared.SchemeOauth2Implicit `security:"scheme,type=oauth2"`
}

type GetStoriesQueryParams struct {
	// Client device pixel ratio used to determine thumbnail size (default 1.0).
	DevicePixelRatio *float64 `queryParam:"style=form,explode=true,name=device_pixel_ratio"`
	// Find groups near the given latitude and longitude.
	Latitude *float64 `queryParam:"style=form,explode=true,name=latitude"`
	// Find groups near the given latitude and longitude.
	Longitude *float64 `queryParam:"style=form,explode=true,name=longitude"`
	// The page of stories to return.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of stories to return per page (must be >= 1 and <= 50).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// How to sort the stories that are returned.  One of: date, distance, likes, views <br /><br /> Setting sort_by to date will sort posts from newest to oldest.  Setting sort_by to distance will sort posts from nearest to farthest.  Setting sort_by to likes will sort posts with the most likes first.  Setting sort_by to views will show the posts with the most views first.
	//
	SortBy *string `queryParam:"style=form,explode=true,name=sort_by"`
}

type GetStoriesRequest struct {
	QueryParams GetStoriesQueryParams
	Security    GetStoriesSecurity
}

// GetStories200ApplicationJSON - The stories and paging data.
type GetStories200ApplicationJSON struct {
	Stories []shared.Story `json:"stories,omitempty"`
}

type GetStoriesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The stories and paging data.
	GetStories200ApplicationJSONObject *GetStories200ApplicationJSON
}
