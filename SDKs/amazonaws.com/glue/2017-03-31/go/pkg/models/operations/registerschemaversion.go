// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterSchemaVersionXAmzTargetEnum
type RegisterSchemaVersionXAmzTargetEnum string

const (
	RegisterSchemaVersionXAmzTargetEnumAwsGlueRegisterSchemaVersion RegisterSchemaVersionXAmzTargetEnum = "AWSGlue.RegisterSchemaVersion"
)

func (e *RegisterSchemaVersionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.RegisterSchemaVersion":
		*e = RegisterSchemaVersionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterSchemaVersionXAmzTargetEnum: %s", s)
	}
}

type RegisterSchemaVersionHeaders struct {
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        RegisterSchemaVersionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterSchemaVersionRequest struct {
	Headers RegisterSchemaVersionHeaders
	Request shared.RegisterSchemaVersionInput `request:"mediaType=application/json"`
}

type RegisterSchemaVersionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	RegisterSchemaVersionResponse *shared.RegisterSchemaVersionResponse
	// ResourceNumberLimitExceededException
	ResourceNumberLimitExceededException interface{}
	StatusCode                           int
	RawResponse                          *http.Response
}
