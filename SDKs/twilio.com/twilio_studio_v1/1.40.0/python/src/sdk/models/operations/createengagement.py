"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import studio_v1_flow_engagement as shared_studio_v1_flow_engagement
from typing import Any, Optional

CREATE_ENGAGEMENT_SERVERS = [
	"https://studio.twilio.com",
]


@dataclasses.dataclass
class CreateEngagementSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateEngagementCreateEngagementRequest:
    
    from_: str = dataclasses.field(metadata={'form': { 'field_name': 'From' }})
    r"""The Twilio phone number to send messages or initiate calls from during the Flow Engagement. Available as variable `{{flow.channel.address}}`"""  
    to: str = dataclasses.field(metadata={'form': { 'field_name': 'To' }})
    r"""The Contact phone number to start a Studio Flow Engagement, available as variable `{{contact.channel.address}}`."""  
    parameters: Optional[Any] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Parameters' }})
    r"""A JSON string we will add to your flow's context and that you can access as variables inside your flow. For example, if you pass in `Parameters={'name':'Zeke'}` then inside a widget you can reference the variable `{{flow.data.name}}` which will return the string 'Zeke'. Note: the JSON value must explicitly be passed as a string, not as a hash object. Depending on your particular HTTP library, you may need to add quotes or URL encode your JSON string."""  
    

@dataclasses.dataclass
class CreateEngagementRequest:
    
    flow_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'FlowSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Flow."""  
    request_body: Optional[CreateEngagementCreateEngagementRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateEngagementResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    studio_v1_flow_engagement: Optional[shared_studio_v1_flow_engagement.StudioV1FlowEngagement] = dataclasses.field(default=None)
    r"""Created"""  
    