/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ReportResponse {
    /**
     * The Date when the project was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public ReportResponse withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * Id of the file on which the process was applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file_id")
    public String fileId;

    public ReportResponse withFileId(String fileId) {
        this.fileId = fileId;
        return this;
    }
    
    /**
     * Process which was applied. Processes are "color-classification".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processing_algorithm")
    public String processingAlgorithm;

    public ReportResponse withProcessingAlgorithm(String processingAlgorithm) {
        this.processingAlgorithm = processingAlgorithm;
        return this;
    }
    
    /**
     * Number of the report which was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("report_number")
    public Long reportNumber;

    public ReportResponse withReportNumber(Long reportNumber) {
        this.reportNumber = reportNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public Result result;

    public ReportResponse withResult(Result result) {
        this.result = result;
        return this;
    }
    
    public ReportResponse(){}
}
