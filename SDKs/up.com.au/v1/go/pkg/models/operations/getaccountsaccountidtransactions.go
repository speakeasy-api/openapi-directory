// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetAccountsAccountIDTransactionsRequest struct {
	// The unique identifier for the account.
	//
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// The category identifier for which to filter transactions.
	// Both parent and child categories can be filtered through
	// this parameter. Providing an invalid category identifier
	// results in a `404` response.
	//
	FilterCategory *string `queryParam:"style=form,explode=true,name=filter[category]"`
	// The start date-time from which to return records,
	// formatted according to rfc-3339. Not to be used for
	// pagination purposes.
	//
	FilterSince *time.Time `queryParam:"style=form,explode=true,name=filter[since]"`
	// The transaction status for which to return records. This
	// can be used to filter `HELD` transactions from those
	// that are `SETTLED`.
	//
	FilterStatus *shared.TransactionStatusEnumEnum `queryParam:"style=form,explode=true,name=filter[status]"`
	// A transaction tag to filter for which to return records.
	// If the tag does not exist, zero records are returned and
	// a success response is given.
	//
	FilterTag *string `queryParam:"style=form,explode=true,name=filter[tag]"`
	// The end date-time up to which to return records,
	// formatted according to rfc-3339. Not to be used for
	// pagination purposes.
	//
	FilterUntil *time.Time `queryParam:"style=form,explode=true,name=filter[until]"`
	// The number of records to return in each page.
	//
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
}

type GetAccountsAccountIDTransactionsResponse struct {
	ContentType string
	// Successful Response
	ListTransactionsResponse *shared.ListTransactionsResponse
	StatusCode               int
	RawResponse              *http.Response
}
