/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class DashboardIssueDetailZoomRoomSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class DashboardIssueDetailZoomRoomRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;

  /**
   * The Zoom room ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=zoomroomId",
  })
  zoomroomId: string;
}

export class DashboardIssueDetailZoomRoom200ApplicationXMLIssueDetails extends SpeakeasyBase {
  /**
   * Zoom Room Issue Detail.<br> The value of the this field could be one of the following:<br>
   *
   * @remarks
   * * `Room Controller disconnected`<br>
   * * `Room Controller connected`
   * * `Selected camera has disconnected`
   * * `Selected camera is reconnected`
   * * `Selected microphone has disconnected`
   * * `Selected microphone is reconnected`
   * * `Selected speaker has disconnected`
   * * `Selected speaker is reconnected`
   * * `Zoom room is offline`
   * * `Zoom room is online`
   * * `High CPU usage is detected`
   * * `Low bandwidth network is detected`
   * * `{name} battery is low`
   * * `{name} battery is normal`
   * * `{name} disconnected`
   * * `{name} connected`
   * * `{name} is not charging`
   *
   * Possible values for {name}: <br>
   * * Zoom Rooms Computer
   * * Controller
   * * Scheduling Display
   */
  @SpeakeasyMetadata()
  issue?: string;

  /**
   * Time at which the issue was encountered.
   */
  @SpeakeasyMetadata()
  time?: Date;
}

/**
 * Pagination object.
 */
export class DashboardIssueDetailZoomRoom200ApplicationXML extends SpeakeasyBase {
  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  from?: Date;

  @SpeakeasyMetadata({
    elemType: DashboardIssueDetailZoomRoom200ApplicationXMLIssueDetails,
  })
  issueDetails?: DashboardIssueDetailZoomRoom200ApplicationXMLIssueDetails[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  pageCount?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  to?: Date;

  /**
   * The number of all records available across pages.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

export class DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails extends SpeakeasyBase {
  /**
   * Zoom Room Issue Detail.<br> The value of the this field could be one of the following:<br>
   *
   * @remarks
   * * `Room Controller disconnected`<br>
   * * `Room Controller connected`
   * * `Selected camera has disconnected`
   * * `Selected camera is reconnected`
   * * `Selected microphone has disconnected`
   * * `Selected microphone is reconnected`
   * * `Selected speaker has disconnected`
   * * `Selected speaker is reconnected`
   * * `Zoom room is offline`
   * * `Zoom room is online`
   * * `High CPU usage is detected`
   * * `Low bandwidth network is detected`
   * * `{name} battery is low`
   * * `{name} battery is normal`
   * * `{name} disconnected`
   * * `{name} connected`
   * * `{name} is not charging`
   *
   * Possible values for {name}: <br>
   * * Zoom Rooms Computer
   * * Controller
   * * Scheduling Display
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issue" })
  issue?: string;

  /**
   * Time at which the issue was encountered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;
}

/**
 * Pagination object.
 */
export class DashboardIssueDetailZoomRoom200ApplicationJSON extends SpeakeasyBase {
  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  @SpeakeasyMetadata({
    elemType: DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails,
  })
  @Expose({ name: "issue_details" })
  @Type(() => DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails)
  issueDetails?: DashboardIssueDetailZoomRoom200ApplicationJSONIssueDetails[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;

  /**
   * The number of all records available across pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class DashboardIssueDetailZoomRoomResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Zoom Room with issue details returned
   */
  @SpeakeasyMetadata()
  dashboardIssueDetailZoomRoom200ApplicationJSONObject?: DashboardIssueDetailZoomRoom200ApplicationJSON;
}
