// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ConnectionsAllSecurity struct {
	APIKey shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
}

type ConnectionsAllQueryParams struct {
	// Scope results to Unified API
	API *string `queryParam:"style=form,explode=true,name=api"`
	// Scopes results to connections that have been configured or not
	Configured *bool `queryParam:"style=form,explode=true,name=configured"`
}

type ConnectionsAllHeaders struct {
	// The ID of your Unify application
	XApideckAppID string `header:"style=simple,explode=false,name=x-apideck-app-id"`
	// ID of the consumer which you want to get or push data from
	XApideckConsumerID string `header:"style=simple,explode=false,name=x-apideck-consumer-id"`
}

type ConnectionsAllRequest struct {
	QueryParams ConnectionsAllQueryParams
	Headers     ConnectionsAllHeaders
	Security    ConnectionsAllSecurity
}

type ConnectionsAllResponse struct {
	// Bad Request
	BadRequestResponse *shared.BadRequestResponse
	ContentType        string
	// Connections
	GetConnectionsResponse *shared.GetConnectionsResponse
	// The specified resource was not found
	NotFoundResponse *shared.NotFoundResponse
	// Payment Required
	PaymentRequiredResponse *shared.PaymentRequiredResponse
	StatusCode              int
	RawResponse             *http.Response
	// Unauthorized
	UnauthorizedResponse *shared.UnauthorizedResponse
	// Unexpected error
	UnexpectedErrorResponse *shared.UnexpectedErrorResponse
	// Unprocessable
	UnprocessableResponse *shared.UnprocessableResponse
}
