<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InvoicePaymentReminder - Describes a payment request reminder (automatic notification) that Square sends
 * 
 * to the customer. You configure a reminder relative to the payment request
 * `due_date`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InvoicePaymentReminder
{
    /**
     * The reminder message.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * The number of days before (a negative number) or after (a positive number)
     * 
     * the payment request `due_date` when the reminder is sent. For example, -3 indicates that
     * the reminder should be sent 3 days before the payment request `due_date`.
     * 
     * @var ?int $relativeScheduledDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('relative_scheduled_days')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $relativeScheduledDays = null;
    
    /**
     * If sent, the timestamp when the reminder was sent, in RFC 3339 format.
     * 
     * @var ?string $sentAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('sent_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sentAt = null;
    
    /**
     * The status of the reminder.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * A Square-assigned ID that uniquely identifies the reminder within the
     * 
     * `InvoicePaymentRequest`.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
	public function __construct()
	{
		$this->message = null;
		$this->relativeScheduledDays = null;
		$this->sentAt = null;
		$this->status = null;
		$this->uid = null;
	}
}
