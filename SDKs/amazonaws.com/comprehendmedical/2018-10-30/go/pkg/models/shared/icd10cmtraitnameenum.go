// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Icd10CMTraitNameEnum string

const (
	Icd10CMTraitNameEnumNegation         Icd10CMTraitNameEnum = "NEGATION"
	Icd10CMTraitNameEnumDiagnosis        Icd10CMTraitNameEnum = "DIAGNOSIS"
	Icd10CMTraitNameEnumSign             Icd10CMTraitNameEnum = "SIGN"
	Icd10CMTraitNameEnumSymptom          Icd10CMTraitNameEnum = "SYMPTOM"
	Icd10CMTraitNameEnumPertainsToFamily Icd10CMTraitNameEnum = "PERTAINS_TO_FAMILY"
	Icd10CMTraitNameEnumHypothetical     Icd10CMTraitNameEnum = "HYPOTHETICAL"
	Icd10CMTraitNameEnumLowConfidence    Icd10CMTraitNameEnum = "LOW_CONFIDENCE"
)

func (e Icd10CMTraitNameEnum) ToPointer() *Icd10CMTraitNameEnum {
	return &e
}

func (e *Icd10CMTraitNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEGATION":
		fallthrough
	case "DIAGNOSIS":
		fallthrough
	case "SIGN":
		fallthrough
	case "SYMPTOM":
		fallthrough
	case "PERTAINS_TO_FAMILY":
		fallthrough
	case "HYPOTHETICAL":
		fallthrough
	case "LOW_CONFIDENCE":
		*e = Icd10CMTraitNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Icd10CMTraitNameEnum: %v", v)
	}
}
