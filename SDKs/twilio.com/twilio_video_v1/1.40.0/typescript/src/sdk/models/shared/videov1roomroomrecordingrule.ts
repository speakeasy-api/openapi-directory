/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class VideoV1RoomRoomRecordingRuleRules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "all" })
  all?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publisher" })
  publisher?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "track" })
  track?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * OK
 */
export class VideoV1RoomRoomRecordingRule extends SpeakeasyBase {
  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * The SID of the Room resource for the Recording Rules
   */
  @SpeakeasyMetadata()
  @Expose({ name: "room_sid" })
  roomSid?: string;

  /**
   * A collection of Recording Rules that describe how to include or exclude matching tracks for recording
   */
  @SpeakeasyMetadata({ elemType: VideoV1RoomRoomRecordingRuleRules })
  @Expose({ name: "rules" })
  @Type(() => VideoV1RoomRoomRecordingRuleRules)
  rules?: VideoV1RoomRoomRecordingRuleRules[];
}
