// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateEmailTemplateRequestBodyEmailTemplateRequest - Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.
type CreateEmailTemplateRequestBodyEmailTemplateRequest struct {
	DefaultSubstitutions *string           `json:"DefaultSubstitutions,omitempty"`
	HTMLPart             *string           `json:"HtmlPart,omitempty"`
	RecommenderID        *string           `json:"RecommenderId,omitempty"`
	Subject              *string           `json:"Subject,omitempty"`
	TemplateDescription  *string           `json:"TemplateDescription,omitempty"`
	TextPart             *string           `json:"TextPart,omitempty"`
	Tags                 map[string]string `json:"tags,omitempty"`
}

type CreateEmailTemplateRequestBody struct {
	// Specifies the content and settings for a message template that can be used in messages that are sent through the email channel.
	EmailTemplateRequest CreateEmailTemplateRequestBodyEmailTemplateRequest `json:"EmailTemplateRequest"`
}

type CreateEmailTemplateRequest struct {
	RequestBody       CreateEmailTemplateRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The name of the message template. A template name must start with an alphanumeric character and can contain a maximum of 128 characters. The characters can be alphanumeric characters, underscores (_), or hyphens (-). Template names are case sensitive.
	TemplateName string `pathParam:"style=simple,explode=false,name=template-name"`
}

type CreateEmailTemplateResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateEmailTemplateResponse *shared.CreateEmailTemplateResponse
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// MethodNotAllowedException
	MethodNotAllowedException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
