// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListDeliveryStreamsXAmzTargetEnum
type ListDeliveryStreamsXAmzTargetEnum string

const (
	ListDeliveryStreamsXAmzTargetEnumFirehose20150804ListDeliveryStreams ListDeliveryStreamsXAmzTargetEnum = "Firehose_20150804.ListDeliveryStreams"
)

func (e ListDeliveryStreamsXAmzTargetEnum) ToPointer() *ListDeliveryStreamsXAmzTargetEnum {
	return &e
}

func (e *ListDeliveryStreamsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Firehose_20150804.ListDeliveryStreams":
		*e = ListDeliveryStreamsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDeliveryStreamsXAmzTargetEnum: %v", v)
	}
}

type ListDeliveryStreamsRequest struct {
	ListDeliveryStreamsInput shared.ListDeliveryStreamsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               ListDeliveryStreamsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListDeliveryStreamsResponse struct {
	ContentType string
	// Success
	ListDeliveryStreamsOutput *shared.ListDeliveryStreamsOutput
	StatusCode                int
	RawResponse               *http.Response
}
