<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EmployeeStatus - Add or update employee status, change reason, effective date, and adjusted seniority date. Note that companies that are still in Implementation cannot hire future employees.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EmployeeStatus
{
    /**
     * Adjusted seniority date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     * 
     * @var ?string $adjustedSeniorityDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('adjustedSeniorityDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $adjustedSeniorityDate = null;
    
    /**
     * Employee status change reason. Must match Company setup.<br  /> Max length: 15
     * 
     * @var ?string $changeReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('changeReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $changeReason = null;
    
    /**
     * Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     * 
     * @var ?string $effectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveDate = null;
    
    /**
     * Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20
     * 
     * @var ?string $employeeStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('employeeStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $employeeStatus = null;
    
    /**
     * Employee hired date. Updates to hire date are not allowed and will be ignored. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     * 
     * @var ?string $hireDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('hireDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hireDate = null;
    
    /**
     * Indicates if employee eligible for rehire.
     * 
     * @var ?bool $isEligibleForRehire
     */
	#[\JMS\Serializer\Annotation\SerializedName('isEligibleForRehire')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isEligibleForRehire = null;
    
    /**
     * Rehire date if employee is rehired.  Updates to re-hire date are not allowed and will be ignored. Common formats are *MM-DD-CCYY, CCYY-MM-DD*.
     * 
     * @var ?string $reHireDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('reHireDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reHireDate = null;
    
    /**
     * The Status Type associated with the Employee Status code. Each Employee Status  code for a company is assigned to one of the Status Type values of  A (Active), L (Leave of Absence), T (Terminated).
     * 
     * @var ?string $statusType
     */
	#[\JMS\Serializer\Annotation\SerializedName('statusType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusType = null;
    
    /**
     * Employee termination date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     * 
     * @var ?string $terminationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('terminationDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $terminationDate = null;
    
	public function __construct()
	{
		$this->adjustedSeniorityDate = null;
		$this->changeReason = null;
		$this->effectiveDate = null;
		$this->employeeStatus = null;
		$this->hireDate = null;
		$this->isEligibleForRehire = null;
		$this->reHireDate = null;
		$this->statusType = null;
		$this->terminationDate = null;
	}
}
