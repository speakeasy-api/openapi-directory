/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Activity {
    /**
     * Type of change:
     *   * created - First time the issue is found
     *   * comment - User left a comment in the timeline
     *   * found - Found again in a later scan
     *   * changed - One of the parameters of the finding was changed
     *    (e.g. severity)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("change")
    public ActivityChangeEnum change;
    public Activity withChange(ActivityChangeEnum change) {
        this.change = change;
        return this;
    }
    
    /**
     * Date time of the last change
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("changed")
    public OffsetDateTime changed;
    public Activity withChanged(OffsetDateTime changed) {
        this.changed = changed;
        return this;
    }
    
    /**
     * User that last modified the object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("changed_by")
    public ChangedBy changedBy;
    public Activity withChangedBy(ChangedBy changedBy) {
        this.changedBy = changedBy;
        return this;
    }
    
    /**
     * Field that was changed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("field")
    public String field;
    public Activity withField(String field) {
        this.field = field;
        return this;
    }
    
    /**
     * Previous value
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("old_value")
    public String oldValue;
    public Activity withOldValue(String oldValue) {
        this.oldValue = oldValue;
        return this;
    }
    
    /**
     * New value
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;
    public Activity withValue(String value) {
        this.value = value;
        return this;
    }
    
}
