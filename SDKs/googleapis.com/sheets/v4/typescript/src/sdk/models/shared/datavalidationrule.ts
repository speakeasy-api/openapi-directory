/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BooleanCondition } from "./booleancondition";
import { Expose, Type } from "class-transformer";

/**
 * A data validation rule.
 */
export class DataValidationRule extends SpeakeasyBase {
  /**
   * A condition that can evaluate to true or false. BooleanConditions are used by conditional formatting, data validation, and the criteria in filters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  @Type(() => BooleanCondition)
  condition?: BooleanCondition;

  /**
   * A message to show the user when adding data to the cell.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inputMessage" })
  inputMessage?: string;

  /**
   * True if the UI should be customized based on the kind of condition. If true, "List" conditions will show a dropdown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "showCustomUi" })
  showCustomUi?: boolean;

  /**
   * True if invalid data should be rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "strict" })
  strict?: boolean;
}
