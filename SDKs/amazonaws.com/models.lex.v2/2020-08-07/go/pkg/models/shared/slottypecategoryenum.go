// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SlotTypeCategoryEnum string

const (
	SlotTypeCategoryEnumCustom          SlotTypeCategoryEnum = "Custom"
	SlotTypeCategoryEnumExtended        SlotTypeCategoryEnum = "Extended"
	SlotTypeCategoryEnumExternalGrammar SlotTypeCategoryEnum = "ExternalGrammar"
	SlotTypeCategoryEnumComposite       SlotTypeCategoryEnum = "Composite"
)

func (e SlotTypeCategoryEnum) ToPointer() *SlotTypeCategoryEnum {
	return &e
}

func (e *SlotTypeCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Custom":
		fallthrough
	case "Extended":
		fallthrough
	case "ExternalGrammar":
		fallthrough
	case "Composite":
		*e = SlotTypeCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SlotTypeCategoryEnum: %v", v)
	}
}
