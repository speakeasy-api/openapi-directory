/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClassificationAnnotation } from "./classificationannotation";
import { ImageObjectDetectionAnnotation } from "./imageobjectdetectionannotation";
import { TablesAnnotation } from "./tablesannotation";
import { TextExtractionAnnotation } from "./textextractionannotation";
import { TextSentimentAnnotation } from "./textsentimentannotation";
import { TranslationAnnotation } from "./translationannotation";
import { VideoClassificationAnnotation } from "./videoclassificationannotation";
import { VideoObjectTrackingAnnotation } from "./videoobjecttrackingannotation";
import { Expose, Type } from "class-transformer";

/**
 * Contains annotation information that is relevant to AutoML.
 */
export class AnnotationPayload extends SpeakeasyBase {
  /**
   * Output only . The resource ID of the annotation spec that this annotation pertains to. The annotation spec comes from either an ancestor dataset, or the dataset that was used to train the model in use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotationSpecId" })
  annotationSpecId?: string;

  /**
   * Contains annotation details specific to classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  @Type(() => ClassificationAnnotation)
  classification?: ClassificationAnnotation;

  /**
   * Output only. The value of display_name when the model was trained. Because this field returns a value at model training time, for different models trained using the same dataset, the returned value could be different as model owner could update the `display_name` between any two model training.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Annotation details for image object detection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageObjectDetection" })
  @Type(() => ImageObjectDetectionAnnotation)
  imageObjectDetection?: ImageObjectDetectionAnnotation;

  /**
   * Contains annotation details specific to Tables.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tables" })
  @Type(() => TablesAnnotation)
  tables?: TablesAnnotation;

  /**
   * Annotation for identifying spans of text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textExtraction" })
  @Type(() => TextExtractionAnnotation)
  textExtraction?: TextExtractionAnnotation;

  /**
   * Contains annotation details specific to text sentiment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textSentiment" })
  @Type(() => TextSentimentAnnotation)
  textSentiment?: TextSentimentAnnotation;

  /**
   * Annotation details specific to translation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "translation" })
  @Type(() => TranslationAnnotation)
  translation?: TranslationAnnotation;

  /**
   * Contains annotation details specific to video classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoClassification" })
  @Type(() => VideoClassificationAnnotation)
  videoClassification?: VideoClassificationAnnotation;

  /**
   * Annotation details for video object tracking.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoObjectTracking" })
  @Type(() => VideoObjectTrackingAnnotation)
  videoObjectTracking?: VideoObjectTrackingAnnotation;
}
