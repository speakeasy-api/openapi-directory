// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type EcommerceCustomerAddressesTypeEnum string

const (
	EcommerceCustomerAddressesTypeEnumBilling  EcommerceCustomerAddressesTypeEnum = "billing"
	EcommerceCustomerAddressesTypeEnumShipping EcommerceCustomerAddressesTypeEnum = "shipping"
	EcommerceCustomerAddressesTypeEnumOther    EcommerceCustomerAddressesTypeEnum = "other"
)

func (e *EcommerceCustomerAddressesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "billing":
		fallthrough
	case "shipping":
		fallthrough
	case "other":
		*e = EcommerceCustomerAddressesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EcommerceCustomerAddressesTypeEnum: %s", s)
	}
}

type EcommerceCustomerAddresses struct {
	// City of the customer
	City *string `json:"city,omitempty"`
	// Country of the customer
	Country *string `json:"country,omitempty"`
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// First line of the street address of the customer
	Line1 *string `json:"line1,omitempty"`
	// Second line of the street address of the customer
	Line2 *string `json:"line2,omitempty"`
	// Postal code of the customer
	PostalCode *string `json:"postal_code,omitempty"`
	// State of the customer
	State *string                             `json:"state,omitempty"`
	Type  *EcommerceCustomerAddressesTypeEnum `json:"type,omitempty"`
}

// EcommerceCustomerCustomerStatusEnum - The current status of the customer
type EcommerceCustomerCustomerStatusEnum string

const (
	EcommerceCustomerCustomerStatusEnumActive   EcommerceCustomerCustomerStatusEnum = "active"
	EcommerceCustomerCustomerStatusEnumArchived EcommerceCustomerCustomerStatusEnum = "archived"
)

func (e *EcommerceCustomerCustomerStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "archived":
		*e = EcommerceCustomerCustomerStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EcommerceCustomerCustomerStatusEnum: %s", s)
	}
}

type EcommerceCustomer struct {
	// An array of addresses for the customer.
	Addresses []EcommerceCustomerAddresses `json:"addresses,omitempty"`
	// Company name of the customer
	CompanyName *string `json:"company_name,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *CurrencyEnum `json:"currency,omitempty"`
	// An array of email addresses for the customer.
	Emails []Email `json:"emails,omitempty"`
	// First name of the customer
	FirstName *string `json:"first_name,omitempty"`
	// A unique identifier for an object.
	ID string `json:"id"`
	// Last name of the customer
	LastName *string `json:"last_name,omitempty"`
	// Full name of the customer
	Name   *string                `json:"name,omitempty"`
	Orders []LinkedEcommerceOrder `json:"orders,omitempty"`
	// An array of phone numbers for the customer.
	PhoneNumbers []PhoneNumber `json:"phone_numbers,omitempty"`
	// The current status of the customer
	Status *EcommerceCustomerCustomerStatusEnum `json:"status,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}
