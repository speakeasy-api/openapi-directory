/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderTaxes {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Long amount;
    public OrderTaxes withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Square-only: Determines whether the tax was automatically applied to the order based on the catalog configuration. For an example, see Automatically Apply Taxes to an Order. [https://developer.squareup.com/docs/orders-api/apply-taxes-and-discounts/auto-apply-taxes]()
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auto_applied")
    public Boolean autoApplied;
    public OrderTaxes withAutoApplied(Boolean autoApplied) {
        this.autoApplied = autoApplied;
        return this;
    }
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public CurrencyEnum currency;
    public OrderTaxes withCurrency(CurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public OrderTaxes withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The tax's name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public OrderTaxes withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentage")
    public Double percentage;
    public OrderTaxes withPercentage(Double percentage) {
        this.percentage = percentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public OrderTaxesScopeEnum scope;
    public OrderTaxes withScope(OrderTaxesScopeEnum scope) {
        this.scope = scope;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public OrderTaxesTypeEnum type;
    public OrderTaxes withType(OrderTaxesTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
