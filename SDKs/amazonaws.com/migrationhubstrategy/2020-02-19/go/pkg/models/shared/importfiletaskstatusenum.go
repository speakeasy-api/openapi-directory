// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImportFileTaskStatusEnum string

const (
	ImportFileTaskStatusEnumImportInProgress     ImportFileTaskStatusEnum = "ImportInProgress"
	ImportFileTaskStatusEnumImportFailed         ImportFileTaskStatusEnum = "ImportFailed"
	ImportFileTaskStatusEnumImportPartialSuccess ImportFileTaskStatusEnum = "ImportPartialSuccess"
	ImportFileTaskStatusEnumImportSuccess        ImportFileTaskStatusEnum = "ImportSuccess"
	ImportFileTaskStatusEnumDeleteInProgress     ImportFileTaskStatusEnum = "DeleteInProgress"
	ImportFileTaskStatusEnumDeleteFailed         ImportFileTaskStatusEnum = "DeleteFailed"
	ImportFileTaskStatusEnumDeletePartialSuccess ImportFileTaskStatusEnum = "DeletePartialSuccess"
	ImportFileTaskStatusEnumDeleteSuccess        ImportFileTaskStatusEnum = "DeleteSuccess"
)

func (e ImportFileTaskStatusEnum) ToPointer() *ImportFileTaskStatusEnum {
	return &e
}

func (e *ImportFileTaskStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ImportInProgress":
		fallthrough
	case "ImportFailed":
		fallthrough
	case "ImportPartialSuccess":
		fallthrough
	case "ImportSuccess":
		fallthrough
	case "DeleteInProgress":
		fallthrough
	case "DeleteFailed":
		fallthrough
	case "DeletePartialSuccess":
		fallthrough
	case "DeleteSuccess":
		*e = ImportFileTaskStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImportFileTaskStatusEnum: %v", v)
	}
}
