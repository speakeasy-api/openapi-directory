// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateCarrierGatewayResultCarrierGatewayStateEnum - The state of the carrier gateway.
type CreateCarrierGatewayResultCarrierGatewayStateEnum string

const (
	CreateCarrierGatewayResultCarrierGatewayStateEnumPending   CreateCarrierGatewayResultCarrierGatewayStateEnum = "pending"
	CreateCarrierGatewayResultCarrierGatewayStateEnumAvailable CreateCarrierGatewayResultCarrierGatewayStateEnum = "available"
	CreateCarrierGatewayResultCarrierGatewayStateEnumDeleting  CreateCarrierGatewayResultCarrierGatewayStateEnum = "deleting"
	CreateCarrierGatewayResultCarrierGatewayStateEnumDeleted   CreateCarrierGatewayResultCarrierGatewayStateEnum = "deleted"
)

func (e CreateCarrierGatewayResultCarrierGatewayStateEnum) ToPointer() *CreateCarrierGatewayResultCarrierGatewayStateEnum {
	return &e
}

func (e *CreateCarrierGatewayResultCarrierGatewayStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = CreateCarrierGatewayResultCarrierGatewayStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCarrierGatewayResultCarrierGatewayStateEnum: %v", v)
	}
}

// CreateCarrierGatewayResultCarrierGatewayTags - Describes a tag.
type CreateCarrierGatewayResultCarrierGatewayTags struct {
	Key   *string
	Value *string
}

// CreateCarrierGatewayResultCarrierGateway - Information about the carrier gateway.
type CreateCarrierGatewayResultCarrierGateway struct {
	CarrierGatewayID *string
	OwnerID          *string
	State            *CreateCarrierGatewayResultCarrierGatewayStateEnum
	Tags             []CreateCarrierGatewayResultCarrierGatewayTags
	VpcID            *string
}

// CreateCarrierGatewayResult - Success
type CreateCarrierGatewayResult struct {
	CarrierGateway *CreateCarrierGatewayResultCarrierGateway
}
