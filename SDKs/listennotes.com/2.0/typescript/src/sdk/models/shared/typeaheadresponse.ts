/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Genre } from "./genre";
import { PodcastTypeaheadResult } from "./podcasttypeaheadresult";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class TypeaheadResponse extends SpeakeasyBase {
  /**
   * Genre suggestions. It'll show up when the **show_genres** parameter is *1*.
   */
  @SpeakeasyMetadata({ elemType: Genre })
  @Expose({ name: "genres" })
  @Type(() => Genre)
  genres?: Genre[];

  /**
   * Podcast suggestions. It'll show up when the **show_podcasts** parameter is 1.
   */
  @SpeakeasyMetadata({ elemType: PodcastTypeaheadResult })
  @Expose({ name: "podcasts" })
  @Type(() => PodcastTypeaheadResult)
  podcasts?: PodcastTypeaheadResult[];

  /**
   * Search term suggestions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "terms" })
  terms: string[];
}
