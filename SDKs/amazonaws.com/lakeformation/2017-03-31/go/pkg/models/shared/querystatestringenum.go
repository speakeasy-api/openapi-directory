// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QueryStateStringEnum string

const (
	QueryStateStringEnumPending            QueryStateStringEnum = "PENDING"
	QueryStateStringEnumWorkunitsAvailable QueryStateStringEnum = "WORKUNITS_AVAILABLE"
	QueryStateStringEnumError              QueryStateStringEnum = "ERROR"
	QueryStateStringEnumFinished           QueryStateStringEnum = "FINISHED"
	QueryStateStringEnumExpired            QueryStateStringEnum = "EXPIRED"
)

func (e *QueryStateStringEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "WORKUNITS_AVAILABLE":
		fallthrough
	case "ERROR":
		fallthrough
	case "FINISHED":
		fallthrough
	case "EXPIRED":
		*e = QueryStateStringEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryStateStringEnum: %s", s)
	}
}
