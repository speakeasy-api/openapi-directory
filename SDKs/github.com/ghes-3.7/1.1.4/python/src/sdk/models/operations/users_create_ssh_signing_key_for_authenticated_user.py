"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import ssh_signing_key as shared_ssh_signing_key
from ..shared import validation_error as shared_validation_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsersCreateSSHSigningKeyForAuthenticatedUserRequestBody:
    
    key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key') }})
    r"""The public SSH key to add to your GitHub account. For more information, see \\"[Checking for existing SSH keys](https://docs.github.com/enterprise-server@3.7/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys).\\" """  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""A descriptive name for the new key."""  
    

@dataclasses.dataclass
class UsersCreateSSHSigningKeyForAuthenticatedUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Requires authentication"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    ssh_signing_key: Optional[shared_ssh_signing_key.SSHSigningKey] = dataclasses.field(default=None)
    r"""Response"""  
    validation_error: Optional[shared_validation_error.ValidationError] = dataclasses.field(default=None)
    r"""Validation failed, or the endpoint has been spammed."""  
    