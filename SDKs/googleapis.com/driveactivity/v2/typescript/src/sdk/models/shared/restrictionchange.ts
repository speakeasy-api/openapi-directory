/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The feature which had a change in restriction policy.
 */
export enum RestrictionChangeFeatureEnum {
  FeatureUnspecified = "FEATURE_UNSPECIFIED",
  SharingOutsideDomain = "SHARING_OUTSIDE_DOMAIN",
  DirectSharing = "DIRECT_SHARING",
  ItemDuplication = "ITEM_DUPLICATION",
  DriveFileStream = "DRIVE_FILE_STREAM",
  FileOrganizerCanShareFolders = "FILE_ORGANIZER_CAN_SHARE_FOLDERS",
}

/**
 * The restriction in place after the change.
 */
export enum RestrictionChangeNewRestrictionEnum {
  RestrictionUnspecified = "RESTRICTION_UNSPECIFIED",
  Unrestricted = "UNRESTRICTED",
  FullyRestricted = "FULLY_RESTRICTED",
}

/**
 * Information about restriction policy changes to a feature.
 */
export class RestrictionChange extends SpeakeasyBase {
  /**
   * The feature which had a change in restriction policy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feature" })
  feature?: RestrictionChangeFeatureEnum;

  /**
   * The restriction in place after the change.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newRestriction" })
  newRestriction?: RestrictionChangeNewRestrictionEnum;
}
