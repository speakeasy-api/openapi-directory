// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Channel - An notification channel used to watch for resource changes.
type Channel struct {
	// The address where notifications are delivered for this channel.
	Address *string `json:"address,omitempty"`
	// Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
	Expiration *string `json:"expiration,omitempty"`
	// A UUID or similar unique string that identifies this channel.
	ID *string `json:"id,omitempty"`
	// Identifies this as a notification channel used to watch for changes to a resource, which is `api#channel`.
	Kind *string `json:"kind,omitempty"`
	// Additional parameters controlling delivery channel behavior. Optional. For example, `params.ttl` specifies the time-to-live in seconds for the notification channel, where the default is 2 hours and the maximum TTL is 2 days.
	Params map[string]string `json:"params,omitempty"`
	// A Boolean value to indicate whether payload is wanted. Optional.
	Payload *bool `json:"payload,omitempty"`
	// An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
	ResourceID *string `json:"resourceId,omitempty"`
	// A version-specific identifier for the watched resource.
	ResourceURI *string `json:"resourceUri,omitempty"`
	// An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
	Token *string `json:"token,omitempty"`
	// The type of delivery mechanism used for this channel.
	Type *string `json:"type,omitempty"`
}
