/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class JobListJobs {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuration")
    public JobConfiguration configuration;

    public JobListJobs withConfiguration(JobConfiguration configuration) {
        this.configuration = configuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorResult")
    public ErrorProto errorResult;

    public JobListJobs withErrorResult(ErrorProto errorResult) {
        this.errorResult = errorResult;
        return this;
    }
    
    /**
     * Unique opaque ID of the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public JobListJobs withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobReference")
    public JobReference jobReference;

    public JobListJobs withJobReference(JobReference jobReference) {
        this.jobReference = jobReference;
        return this;
    }
    
    /**
     * The resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public JobListJobs withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Running state of the job. When the state is DONE, errorResult can be checked to determine whether the job succeeded or failed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public JobListJobs withState(String state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statistics")
    public JobStatistics statistics;

    public JobListJobs withStatistics(JobStatistics statistics) {
        this.statistics = statistics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public JobStatus status;

    public JobListJobs withStatus(JobStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * [Full-projection-only] Email address of the user who ran the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_email")
    public String userEmail;

    public JobListJobs withUserEmail(String userEmail) {
        this.userEmail = userEmail;
        return this;
    }
    
    public JobListJobs(){}
}
