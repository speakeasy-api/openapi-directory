// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeInstanceAttributeActionEnum
type GETDescribeInstanceAttributeActionEnum string

const (
	GETDescribeInstanceAttributeActionEnumDescribeInstanceAttribute GETDescribeInstanceAttributeActionEnum = "DescribeInstanceAttribute"
)

func (e *GETDescribeInstanceAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeInstanceAttribute":
		*e = GETDescribeInstanceAttributeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeInstanceAttributeActionEnum: %s", s)
	}
}

// GETDescribeInstanceAttributeAttributeEnum - <p>The instance attribute.</p> <p>Note: The <code>enaSupport</code> attribute is not supported at this time.</p>
type GETDescribeInstanceAttributeAttributeEnum string

const (
	GETDescribeInstanceAttributeAttributeEnumInstanceType                      GETDescribeInstanceAttributeAttributeEnum = "instanceType"
	GETDescribeInstanceAttributeAttributeEnumKernel                            GETDescribeInstanceAttributeAttributeEnum = "kernel"
	GETDescribeInstanceAttributeAttributeEnumRamdisk                           GETDescribeInstanceAttributeAttributeEnum = "ramdisk"
	GETDescribeInstanceAttributeAttributeEnumUserData                          GETDescribeInstanceAttributeAttributeEnum = "userData"
	GETDescribeInstanceAttributeAttributeEnumDisableAPITermination             GETDescribeInstanceAttributeAttributeEnum = "disableApiTermination"
	GETDescribeInstanceAttributeAttributeEnumInstanceInitiatedShutdownBehavior GETDescribeInstanceAttributeAttributeEnum = "instanceInitiatedShutdownBehavior"
	GETDescribeInstanceAttributeAttributeEnumRootDeviceName                    GETDescribeInstanceAttributeAttributeEnum = "rootDeviceName"
	GETDescribeInstanceAttributeAttributeEnumBlockDeviceMapping                GETDescribeInstanceAttributeAttributeEnum = "blockDeviceMapping"
	GETDescribeInstanceAttributeAttributeEnumProductCodes                      GETDescribeInstanceAttributeAttributeEnum = "productCodes"
	GETDescribeInstanceAttributeAttributeEnumSourceDestCheck                   GETDescribeInstanceAttributeAttributeEnum = "sourceDestCheck"
	GETDescribeInstanceAttributeAttributeEnumGroupSet                          GETDescribeInstanceAttributeAttributeEnum = "groupSet"
	GETDescribeInstanceAttributeAttributeEnumEbsOptimized                      GETDescribeInstanceAttributeAttributeEnum = "ebsOptimized"
	GETDescribeInstanceAttributeAttributeEnumSriovNetSupport                   GETDescribeInstanceAttributeAttributeEnum = "sriovNetSupport"
	GETDescribeInstanceAttributeAttributeEnumEnaSupport                        GETDescribeInstanceAttributeAttributeEnum = "enaSupport"
	GETDescribeInstanceAttributeAttributeEnumEnclaveOptions                    GETDescribeInstanceAttributeAttributeEnum = "enclaveOptions"
	GETDescribeInstanceAttributeAttributeEnumDisableAPIStop                    GETDescribeInstanceAttributeAttributeEnum = "disableApiStop"
)

func (e *GETDescribeInstanceAttributeAttributeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "instanceType":
		fallthrough
	case "kernel":
		fallthrough
	case "ramdisk":
		fallthrough
	case "userData":
		fallthrough
	case "disableApiTermination":
		fallthrough
	case "instanceInitiatedShutdownBehavior":
		fallthrough
	case "rootDeviceName":
		fallthrough
	case "blockDeviceMapping":
		fallthrough
	case "productCodes":
		fallthrough
	case "sourceDestCheck":
		fallthrough
	case "groupSet":
		fallthrough
	case "ebsOptimized":
		fallthrough
	case "sriovNetSupport":
		fallthrough
	case "enaSupport":
		fallthrough
	case "enclaveOptions":
		fallthrough
	case "disableApiStop":
		*e = GETDescribeInstanceAttributeAttributeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeInstanceAttributeAttributeEnum: %s", s)
	}
}

// GETDescribeInstanceAttributeVersionEnum
type GETDescribeInstanceAttributeVersionEnum string

const (
	GETDescribeInstanceAttributeVersionEnumTwoThousandAndSixteen1115 GETDescribeInstanceAttributeVersionEnum = "2016-11-15"
)

func (e *GETDescribeInstanceAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDescribeInstanceAttributeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeInstanceAttributeVersionEnum: %s", s)
	}
}

type GETDescribeInstanceAttributeQueryParams struct {
	Action GETDescribeInstanceAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The instance attribute.</p> <p>Note: The <code>enaSupport</code> attribute is not supported at this time.</p>
	Attribute GETDescribeInstanceAttributeAttributeEnum `queryParam:"style=form,explode=true,name=Attribute"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the instance.
	InstanceID string                                  `queryParam:"style=form,explode=true,name=InstanceId"`
	Version    GETDescribeInstanceAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeInstanceAttributeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeInstanceAttributeRequest struct {
	QueryParams GETDescribeInstanceAttributeQueryParams
	Headers     GETDescribeInstanceAttributeHeaders
}

type GETDescribeInstanceAttributeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
