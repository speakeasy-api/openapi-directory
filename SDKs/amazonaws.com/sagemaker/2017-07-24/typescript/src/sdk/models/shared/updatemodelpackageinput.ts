/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdditionalInferenceSpecificationDefinition } from "./additionalinferencespecificationdefinition";
import { ModelApprovalStatusEnum } from "./modelapprovalstatusenum";
import { Expose, Type } from "class-transformer";

export class UpdateModelPackageInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AdditionalInferenceSpecificationDefinition })
  @Expose({ name: "AdditionalInferenceSpecificationsToAdd" })
  @Type(() => AdditionalInferenceSpecificationDefinition)
  additionalInferenceSpecificationsToAdd?: AdditionalInferenceSpecificationDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "ApprovalDescription" })
  approvalDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomerMetadataProperties" })
  customerMetadataProperties?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomerMetadataPropertiesToRemove" })
  customerMetadataPropertiesToRemove?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ModelApprovalStatus" })
  modelApprovalStatus?: ModelApprovalStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageArn" })
  modelPackageArn: string;
}
