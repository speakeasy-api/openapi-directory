"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import orderfulfillmentpickupdetailscurbsidepickupdetails as shared_orderfulfillmentpickupdetailscurbsidepickupdetails
from ..shared import orderfulfillmentrecipient as shared_orderfulfillmentrecipient
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderFulfillmentPickupDetails:
    r"""Contains details necessary to fulfill a pickup order."""
    
    accepted_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accepted_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    indicating when the fulfillment was accepted. The timestamp must be in RFC 3339 format
    (for example, \"2016-09-04T23:59:33.123Z\").
    """  
    auto_complete_duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_complete_duration'), 'exclude': lambda f: f is None }})
    r"""The duration of time after which an open and accepted pickup fulfillment
    is automatically moved to the `COMPLETED` state. The duration must be in RFC 3339
    format (for example, \"P1W3D\").
    
    If not set, this pickup fulfillment remains accepted until it is canceled or completed.
    """  
    cancel_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancel_reason'), 'exclude': lambda f: f is None }})
    r"""A description of why the pickup was canceled. The maximum length: 100 characters."""  
    canceled_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canceled_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    indicating when the fulfillment was canceled. The timestamp must be in RFC 3339 format
    (for example, \"2016-09-04T23:59:33.123Z\").
    """  
    curbside_pickup_details: Optional[shared_orderfulfillmentpickupdetailscurbsidepickupdetails.OrderFulfillmentPickupDetailsCurbsidePickupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('curbside_pickup_details'), 'exclude': lambda f: f is None }})
    r"""Specific details for curbside pickup."""  
    expired_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expired_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    indicating when the fulfillment expired. The timestamp must be in RFC 3339 format
    (for example, \"2016-09-04T23:59:33.123Z\").
    """  
    expires_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    indicating when this fulfillment expires if it is not accepted. The timestamp must be in RFC 3339 format
    (for example, \"2016-09-04T23:59:33.123Z\"). The expiration time can only be set up to 7 days in the future.
    If `expires_at` is not set, this pickup fulfillment is automatically accepted when 
    placed.
    """  
    is_curbside_pickup: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_curbside_pickup'), 'exclude': lambda f: f is None }})
    r"""If set to `true`, indicates that this pickup order is for curbside pickup, not in-store pickup."""  
    note: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('note'), 'exclude': lambda f: f is None }})
    r"""A note meant to provide additional instructions about the pickup
    fulfillment displayed in the Square Point of Sale application and set by the API.
    """  
    picked_up_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('picked_up_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    indicating when the fulfillment was picked up by the recipient. The timestamp must be in RFC 3339 format
    (for example, \"2016-09-04T23:59:33.123Z\").
    """  
    pickup_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickup_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    that represents the start of the pickup window. Must be in RFC 3339 timestamp format, e.g., 
    \"2016-09-04T23:59:33.123Z\".
    
    For fulfillments with the schedule type `ASAP`, this is automatically set
    to the current time plus the expected duration to prepare the fulfillment.
    """  
    pickup_window_duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickup_window_duration'), 'exclude': lambda f: f is None }})
    r"""The window of time in which the order should be picked up after the `pickup_at` timestamp.
    Must be in RFC 3339 duration format, e.g., \"P1W3D\". Can be used as an
    informational guideline for merchants.
    """  
    placed_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('placed_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    indicating when the fulfillment was placed. The timestamp must be in RFC 3339 format
    (for example, \"2016-09-04T23:59:33.123Z\").
    """  
    prep_time_duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prep_time_duration'), 'exclude': lambda f: f is None }})
    r"""The duration of time it takes to prepare this fulfillment.
    The duration must be in RFC 3339 format (for example, \"P1W3D\").
    """  
    ready_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ready_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    indicating when the fulfillment is marked as ready for pickup. The timestamp must be in RFC 3339 format
    (for example, \"2016-09-04T23:59:33.123Z\").
    """  
    recipient: Optional[shared_orderfulfillmentrecipient.OrderFulfillmentRecipient] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipient'), 'exclude': lambda f: f is None }})
    r"""Contains information about the recipient of a fulfillment."""  
    rejected_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rejected_at'), 'exclude': lambda f: f is None }})
    r"""The [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates)
    indicating when the fulfillment was rejected. The timestamp must be in RFC 3339 format
    (for example, \"2016-09-04T23:59:33.123Z\").
    """  
    schedule_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schedule_type'), 'exclude': lambda f: f is None }})
    r"""The schedule type of the pickup fulfillment. Defaults to `SCHEDULED`."""  
    