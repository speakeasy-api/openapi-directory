<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CalendarEventsGetRequest
{
    /**
     * Data format for the response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alt')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt = null;
    
    /**
     * Deprecated and ignored. A value will always be returned in the email field for the organizer, creator and attendees, even if no real email address is available (i.e. a generated, non-working value will be provided).
     * 
     * @var ?bool $alwaysIncludeEmail
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alwaysIncludeEmail')]
    public ?bool $alwaysIncludeEmail = null;
    
    /**
     * Calendar identifier. To retrieve calendar IDs call the calendarList.list method. If you want to access the primary calendar of the currently logged in user, use the "primary" keyword.
     * 
     * @var string $calendarId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=calendarId')]
    public string $calendarId;
    
    /**
     * Event identifier.
     * 
     * @var string $eventId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=eventId')]
    public string $eventId;
    
    /**
     * Selector specifying which fields to include in a partial response.
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * 
     * @var ?string $key
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=key')]
    public ?string $key = null;
    
    /**
     * The maximum number of attendees to include in the response. If there are more than the specified number of attendees, only the participant is returned. Optional.
     * 
     * @var ?int $maxAttendees
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxAttendees')]
    public ?int $maxAttendees = null;
    
    /**
     * OAuth 2.0 token for the current user.
     * 
     * @var ?string $oauthToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=oauth_token')]
    public ?string $oauthToken = null;
    
    /**
     * Returns response with indentations and line breaks.
     * 
     * @var ?bool $prettyPrint
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=prettyPrint')]
    public ?bool $prettyPrint = null;
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * 
     * @var ?string $quotaUser
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=quotaUser')]
    public ?string $quotaUser = null;
    
    /**
     * Time zone used in the response. Optional. The default is the time zone of the calendar.
     * 
     * @var ?string $timeZone
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=timeZone')]
    public ?string $timeZone = null;
    
    /**
     * Deprecated. Please use quotaUser instead.
     * 
     * @var ?string $userIp
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=userIp')]
    public ?string $userIp = null;
    
	public function __construct()
	{
		$this->alt = null;
		$this->alwaysIncludeEmail = null;
		$this->calendarId = "";
		$this->eventId = "";
		$this->fields = null;
		$this->key = null;
		$this->maxAttendees = null;
		$this->oauthToken = null;
		$this->prettyPrint = null;
		$this->quotaUser = null;
		$this->timeZone = null;
		$this->userIp = null;
	}
}
