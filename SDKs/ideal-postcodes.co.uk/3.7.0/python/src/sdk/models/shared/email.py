"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class EmailResultEnum(str, Enum):
    DELIVERABLE = 'deliverable'
    NOT_DELIVERABLE = 'not_deliverable'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Email:
    
    catchall: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catchall') }})
    r"""Returns `true` if this domain accepts all emails regardless of username"""  
    deliverable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliverable') }})
    r"""Returns `true` if the email can be delivered"""  
    disposable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disposable') }})
    r"""Returns `true` if email comes from a disposable email service like temp-mail"""  
    free: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('free') }})
    r"""Returns `true` if the email originates from a free service like Outlook or Gmail."""  
    result: EmailResultEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result') }})  
    role: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role') }})
    r"""Returns `true` if email address represents an organisational role like `admin`, `support`, `postmaster` etc"""  
    