// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetMedicalTranscriptionJobXAmzTargetEnum
type GetMedicalTranscriptionJobXAmzTargetEnum string

const (
	GetMedicalTranscriptionJobXAmzTargetEnumTranscribeGetMedicalTranscriptionJob GetMedicalTranscriptionJobXAmzTargetEnum = "Transcribe.GetMedicalTranscriptionJob"
)

func (e GetMedicalTranscriptionJobXAmzTargetEnum) ToPointer() *GetMedicalTranscriptionJobXAmzTargetEnum {
	return &e
}

func (e *GetMedicalTranscriptionJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Transcribe.GetMedicalTranscriptionJob":
		*e = GetMedicalTranscriptionJobXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMedicalTranscriptionJobXAmzTargetEnum: %v", v)
	}
}

type GetMedicalTranscriptionJobRequest struct {
	GetMedicalTranscriptionJobRequest shared.GetMedicalTranscriptionJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        GetMedicalTranscriptionJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetMedicalTranscriptionJobResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	GetMedicalTranscriptionJobResponse *shared.GetMedicalTranscriptionJobResponse
	// InternalFailureException
	InternalFailureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
