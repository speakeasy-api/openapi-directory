// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AppAPITokensNewSecurity struct {
	Basic shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
}

type AppAPITokensNewPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AppAPITokensNewRequestBodyScopeEnum string

const (
	AppAPITokensNewRequestBodyScopeEnumAll    AppAPITokensNewRequestBodyScopeEnum = "all"
	AppAPITokensNewRequestBodyScopeEnumViewer AppAPITokensNewRequestBodyScopeEnum = "viewer"
)

func (e *AppAPITokensNewRequestBodyScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "viewer":
		*e = AppAPITokensNewRequestBodyScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppAPITokensNewRequestBodyScopeEnum: %s", s)
	}
}

// AppAPITokensNewRequestBody - Description of the token
type AppAPITokensNewRequestBody struct {
	// The description of the token
	Description *string `json:"description,omitempty"`
	// The scope for this token.
	Scope []AppAPITokensNewRequestBodyScopeEnum `json:"scope,omitempty"`
}

type AppAPITokensNewRequest struct {
	PathParams AppAPITokensNewPathParams
	// Description of the token
	Request  *AppAPITokensNewRequestBody `request:"mediaType=application/json"`
	Security AppAPITokensNewSecurity
}

type AppAPITokensNew401ApplicationJSONErrorCodeEnum string

const (
	AppAPITokensNew401ApplicationJSONErrorCodeEnumBadRequest          AppAPITokensNew401ApplicationJSONErrorCodeEnum = "BadRequest"
	AppAPITokensNew401ApplicationJSONErrorCodeEnumConflict            AppAPITokensNew401ApplicationJSONErrorCodeEnum = "Conflict"
	AppAPITokensNew401ApplicationJSONErrorCodeEnumNotAcceptable       AppAPITokensNew401ApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppAPITokensNew401ApplicationJSONErrorCodeEnumNotFound            AppAPITokensNew401ApplicationJSONErrorCodeEnum = "NotFound"
	AppAPITokensNew401ApplicationJSONErrorCodeEnumInternalServerError AppAPITokensNew401ApplicationJSONErrorCodeEnum = "InternalServerError"
	AppAPITokensNew401ApplicationJSONErrorCodeEnumUnauthorized        AppAPITokensNew401ApplicationJSONErrorCodeEnum = "Unauthorized"
	AppAPITokensNew401ApplicationJSONErrorCodeEnumTooManyRequests     AppAPITokensNew401ApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppAPITokensNew401ApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppAPITokensNew401ApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppAPITokensNew401ApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppAPITokensNew401ApplicationJSONError struct {
	Code    AppAPITokensNew401ApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                         `json:"message"`
}

// AppAPITokensNew401ApplicationJSON - Unauthorized
type AppAPITokensNew401ApplicationJSON struct {
	Error AppAPITokensNew401ApplicationJSONError `json:"error"`
}

type AppAPITokensNew400ApplicationJSONErrorCodeEnum string

const (
	AppAPITokensNew400ApplicationJSONErrorCodeEnumBadRequest          AppAPITokensNew400ApplicationJSONErrorCodeEnum = "BadRequest"
	AppAPITokensNew400ApplicationJSONErrorCodeEnumConflict            AppAPITokensNew400ApplicationJSONErrorCodeEnum = "Conflict"
	AppAPITokensNew400ApplicationJSONErrorCodeEnumNotAcceptable       AppAPITokensNew400ApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppAPITokensNew400ApplicationJSONErrorCodeEnumNotFound            AppAPITokensNew400ApplicationJSONErrorCodeEnum = "NotFound"
	AppAPITokensNew400ApplicationJSONErrorCodeEnumInternalServerError AppAPITokensNew400ApplicationJSONErrorCodeEnum = "InternalServerError"
	AppAPITokensNew400ApplicationJSONErrorCodeEnumUnauthorized        AppAPITokensNew400ApplicationJSONErrorCodeEnum = "Unauthorized"
	AppAPITokensNew400ApplicationJSONErrorCodeEnumTooManyRequests     AppAPITokensNew400ApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppAPITokensNew400ApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppAPITokensNew400ApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppAPITokensNew400ApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppAPITokensNew400ApplicationJSONError struct {
	Code    AppAPITokensNew400ApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                         `json:"message"`
}

// AppAPITokensNew400ApplicationJSON - Error
type AppAPITokensNew400ApplicationJSON struct {
	Error AppAPITokensNew400ApplicationJSONError `json:"error"`
}

type AppAPITokensNew201ApplicationJSONScopeEnum string

const (
	AppAPITokensNew201ApplicationJSONScopeEnumAll    AppAPITokensNew201ApplicationJSONScopeEnum = "all"
	AppAPITokensNew201ApplicationJSONScopeEnumViewer AppAPITokensNew201ApplicationJSONScopeEnum = "viewer"
)

func (e *AppAPITokensNew201ApplicationJSONScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "viewer":
		*e = AppAPITokensNew201ApplicationJSONScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppAPITokensNew201ApplicationJSONScopeEnum: %s", s)
	}
}

// AppAPITokensNew201ApplicationJSON - Success
type AppAPITokensNew201ApplicationJSON struct {
	// The api token generated will not be accessible again
	APIToken string `json:"api_token"`
	// The creation time
	CreatedAt string `json:"created_at"`
	// The description of the token
	Description *string `json:"description,omitempty"`
	// The unique id (UUID) of the api token
	ID string `json:"id"`
	// The scope for this token.
	Scope []AppAPITokensNew201ApplicationJSONScopeEnum `json:"scope,omitempty"`
}

type AppAPITokensNewResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	AppAPITokensNew201ApplicationJSONObject *AppAPITokensNew201ApplicationJSON
	// Error
	AppAPITokensNew400ApplicationJSONObject *AppAPITokensNew400ApplicationJSON
	// Unauthorized
	AppAPITokensNew401ApplicationJSONObject *AppAPITokensNew401ApplicationJSON
}
