// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ClosestEnum - The direction specifies whether to match archived timestamps that are before the provided one, after, or the default either (closest in either direction). Must be before, after, or either. May be overidden by individual requests.
type ClosestEnum string

const (
	ClosestEnumEither ClosestEnum = "either"
	ClosestEnumBefore ClosestEnum = "before"
	ClosestEnumAfter  ClosestEnum = "after"
)

func (e ClosestEnum) ToPointer() *ClosestEnum {
	return &e
}

func (e *ClosestEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "either":
		fallthrough
	case "before":
		fallthrough
	case "after":
		*e = ClosestEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ClosestEnum: %v", v)
	}
}
