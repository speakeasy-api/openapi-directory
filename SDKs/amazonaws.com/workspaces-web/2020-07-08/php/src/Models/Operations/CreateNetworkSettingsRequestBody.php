<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateNetworkSettingsRequestBody
{
    /**
     * <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
     * 
     * @var ?string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientToken = null;
    
    /**
     * One or more security groups used to control access from streaming instances to your VPC.
     * 
     * @var array<string> $securityGroupIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('securityGroupIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $securityGroupIds;
    
    /**
     * The subnets in which network interfaces are created to connect streaming instances to your VPC. At least two of these subnets must be in different availability zones.
     * 
     * @var array<string> $subnetIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnetIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $subnetIds;
    
    /**
     * The tags to add to the network settings resource. A tag is a key-value pair.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Tag> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tag>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * The VPC that streaming instances will connect to.
     * 
     * @var string $vpcId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vpcId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $vpcId;
    
	public function __construct()
	{
		$this->clientToken = null;
		$this->securityGroupIds = [];
		$this->subnetIds = [];
		$this->tags = null;
		$this->vpcId = "";
	}
}
