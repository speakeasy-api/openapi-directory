"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutImageRequest:
    
    image_manifest: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageManifest') }})  
    repository_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repositoryName') }})  
    image_digest: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageDigest'), 'exclude': lambda f: f is None }})  
    image_manifest_media_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageManifestMediaType'), 'exclude': lambda f: f is None }})  
    image_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageTag'), 'exclude': lambda f: f is None }})  
    registry_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registryId'), 'exclude': lambda f: f is None }})  
    