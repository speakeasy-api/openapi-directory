// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PlayerStreamerEnumEndedReasonEnum string

const (
	PlayerStreamerEnumEndedReasonEnumEndedViaAPI                PlayerStreamerEnumEndedReasonEnum = "ended-via-api"
	PlayerStreamerEnumEndedReasonEnumMaxDurationExceeded        PlayerStreamerEnumEndedReasonEnum = "max-duration-exceeded"
	PlayerStreamerEnumEndedReasonEnumStreamDisconnectedBySource PlayerStreamerEnumEndedReasonEnum = "stream-disconnected-by-source"
	PlayerStreamerEnumEndedReasonEnumUnexpectedFailure          PlayerStreamerEnumEndedReasonEnum = "unexpected-failure"
)

func (e *PlayerStreamerEnumEndedReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ended-via-api":
		fallthrough
	case "max-duration-exceeded":
		fallthrough
	case "stream-disconnected-by-source":
		fallthrough
	case "unexpected-failure":
		*e = PlayerStreamerEnumEndedReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerStreamerEnumEndedReasonEnum: %s", s)
	}
}
