"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostOauthTokenRequestBody:
    
    client_id: str = dataclasses.field()
    r"""Client ID, obtained during app registration"""  
    client_secret: str = dataclasses.field()
    r"""Client secret, obtained during app registration"""  
    grant_type: str = dataclasses.field()
    r"""Set equal to authorization_code if code is provided in order to gain user-level access. Otherwise, set equal to client_credentials to obtain app-level access only."""  
    redirect_uri: str = dataclasses.field()
    r"""Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the token will be shown instead. Must match one of the redirect URIs declared during app registration."""  
    code: Optional[str] = dataclasses.field(default=None)
    r"""A user authorization code, obtained via /oauth/authorize"""  
    scopes: Optional[str] = dataclasses.field(default=None)
    r"""List of requested OAuth scopes, separated by spaces. Must be a subset of scopes declared during app registration. If not provided, defaults to read."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostOauthToken200ApplicationJSON:
    r"""Store this access_token for later use with auth-required methods. The token should be passed as an HTTP Authorization header when making API calls, with the value Bearer access_token"""
    
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token'), 'exclude': lambda f: f is None }})  
    created_at: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""UNIX timestamp"""  
    scope: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope'), 'exclude': lambda f: f is None }})  
    token_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_type'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostOauthTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""If you try to request a scope that was not included when registering the app, the request will fail."""  
    post_oauth_token_200_application_json_object: Optional[PostOauthToken200ApplicationJSON] = dataclasses.field(default=None)
    r"""Store this access_token for later use with auth-required methods. The token should be passed as an HTTP Authorization header when making API calls, with the value Bearer access_token"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    