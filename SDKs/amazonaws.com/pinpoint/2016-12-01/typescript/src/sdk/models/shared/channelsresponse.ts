/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ChannelResponse } from "./channelresponse";
import { Expose, Transform } from "class-transformer";

/**
 * Provides information about the general settings and status of all channels for an application, including channels that aren't enabled for the application.
 */
export class ChannelsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ChannelResponse })
  @Expose({ name: "Channels" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ChannelResponse> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ChannelResponse);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  channels: Record<string, ChannelResponse>;
}
