// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListUsersRequest struct {
	// Email to search for. Ignored if `username` is provided. Supports wildcard searches
	Email *string `queryParam:"style=form,explode=true,name=email"`
	// Access token required to make the API call.
	EvAccessToken string `header:"style=simple,explode=false,name=ev-access-token"`
	// API key required to make the API call.
	EvAPIKey string `header:"style=simple,explode=false,name=ev-api-key"`
	// Resource identifier for user's home directory. Does not support wildcard searches.
	HomeResource *string `queryParam:"style=form,explode=true,name=homeResource"`
	// Comma separated list of relationships to include in response. Valid options are **homeResource** and **ownerAccount**.
	Include *string `queryParam:"style=form,explode=true,name=include"`
	// Number of users to return. Can be used for pagination.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Nickname to search for. Ignored if `username` is provided. Supports wildcard searches.
	Nickname *string `queryParam:"style=form,explode=true,name=nickname"`
	// Starting user record in the result set. Can be used for pagination.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Types of users to include the list. Ignored if `username` is provided. Valid options are **admin**, **master** and **user**
	Role *string `queryParam:"style=form,explode=true,name=role"`
	// Searches the nickname, email, role and homeDir fields for the provided value. Ignored if `username` is provided. Supports wildcard searches.
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Sort order or matching users. You can sort by multiple columns by separating sort options with a comma; the sort will be applied in the order specified. The sort order for each sort field is ascending unless it is prefixed with a minus (“-“), in which case it will be descending.
	//
	// Valid sort fields are: **nickname**, **username**, **email**, **homeDir** and **modified**
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Whether a user is locked. Ignored if `username` is provided. **0** means user is locked, **1** means user is not locked.
	Status *int64 `queryParam:"style=form,explode=true,name=status"`
	// The username of the user you are looking for. Only entries with the same username as this will be in the list of results. Does not support wildcard searches.
	Username *string `queryParam:"style=form,explode=true,name=username"`
}

type ListUsersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful Operation
	UserCollectionResponse *shared.UserCollectionResponse
}
