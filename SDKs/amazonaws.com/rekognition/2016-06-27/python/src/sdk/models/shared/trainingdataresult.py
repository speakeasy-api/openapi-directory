"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import trainingdata as shared_trainingdata
from ..shared import validationdata as shared_validationdata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrainingDataResult:
    r"""Sagemaker Groundtruth format manifest files for the input, output and validation datasets that are used and created during testing."""
    
    input: Optional[shared_trainingdata.TrainingData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Input'), 'exclude': lambda f: f is None }})  
    output: Optional[shared_trainingdata.TrainingData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Output'), 'exclude': lambda f: f is None }})  
    validation: Optional[shared_validationdata.ValidationData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Validation'), 'exclude': lambda f: f is None }})  
    