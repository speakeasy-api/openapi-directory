/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AnalyzedResource - Contains details about the analyzed resource.
 */
public class AnalyzedResource {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actions")
    public String[] actions;

    public AnalyzedResource withActions(String[] actions) {
        this.actions = actions;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("analyzedAt")
    public OffsetDateTime analyzedAt;

    public AnalyzedResource withAnalyzedAt(OffsetDateTime analyzedAt) {
        this.analyzedAt = analyzedAt;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public AnalyzedResource withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public String error;

    public AnalyzedResource withError(String error) {
        this.error = error;
        return this;
    }
    
    @JsonProperty("isPublic")
    public Boolean isPublic;

    public AnalyzedResource withIsPublic(Boolean isPublic) {
        this.isPublic = isPublic;
        return this;
    }
    
    @JsonProperty("resourceArn")
    public String resourceArn;

    public AnalyzedResource withResourceArn(String resourceArn) {
        this.resourceArn = resourceArn;
        return this;
    }
    
    @JsonProperty("resourceOwnerAccount")
    public String resourceOwnerAccount;

    public AnalyzedResource withResourceOwnerAccount(String resourceOwnerAccount) {
        this.resourceOwnerAccount = resourceOwnerAccount;
        return this;
    }
    
    @JsonProperty("resourceType")
    public ResourceTypeEnum resourceType;

    public AnalyzedResource withResourceType(ResourceTypeEnum resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sharedVia")
    public String[] sharedVia;

    public AnalyzedResource withSharedVia(String[] sharedVia) {
        this.sharedVia = sharedVia;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public FindingStatusEnum status;

    public AnalyzedResource withStatus(FindingStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;

    public AnalyzedResource withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public AnalyzedResource(@JsonProperty("analyzedAt") OffsetDateTime analyzedAt, @JsonProperty("createdAt") OffsetDateTime createdAt, @JsonProperty("isPublic") Boolean isPublic, @JsonProperty("resourceArn") String resourceArn, @JsonProperty("resourceOwnerAccount") String resourceOwnerAccount, @JsonProperty("resourceType") ResourceTypeEnum resourceType, @JsonProperty("updatedAt") OffsetDateTime updatedAt) {
        this.analyzedAt = analyzedAt;
        this.createdAt = createdAt;
        this.isPublic = isPublic;
        this.resourceArn = resourceArn;
        this.resourceOwnerAccount = resourceOwnerAccount;
        this.resourceType = resourceType;
        this.updatedAt = updatedAt;
  }
}
