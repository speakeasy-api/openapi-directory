<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EntryPoint
{
    /**
     * The access code to access the conference. The maximum length is 128 characters.
     * 
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * Optional.
     * 
     * @var ?string $accessCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accessCode = null;
    
    /**
     * Features of the entry point, such as being toll or toll-free. One entry point can have multiple features. However, toll and toll-free cannot be both set on the same entry point.
     * 
     * @var ?array<string> $entryPointFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('entryPointFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $entryPointFeatures = null;
    
    /**
     * The type of the conference entry point.
     * 
     * Possible values are:  
     * - "video" - joining a conference over HTTP. A conference can have zero or one video entry point.
     * - "phone" - joining a conference by dialing a phone number. A conference can have zero or more phone entry points.
     * - "sip" - joining a conference over SIP. A conference can have zero or one sip entry point.
     * - "more" - further conference joining instructions, for example additional phone numbers. A conference can have zero or one more entry point. A conference with only a more entry point is not a valid conference.
     * 
     * @var ?string $entryPointType
     */
	#[\JMS\Serializer\Annotation\SerializedName('entryPointType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $entryPointType = null;
    
    /**
     * The label for the URI. Visible to end users. Not localized. The maximum length is 512 characters.
     * 
     * Examples:  
     * - for video: meet.google.com/aaa-bbbb-ccc
     * - for phone: +1 123 268 2601
     * - for sip: 12345678@altostrat.com
     * - for more: should not be filled  
     * Optional.
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * The meeting code to access the conference. The maximum length is 128 characters.
     * 
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * Optional.
     * 
     * @var ?string $meetingCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('meetingCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $meetingCode = null;
    
    /**
     * The passcode to access the conference. The maximum length is 128 characters.
     * 
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * 
     * @var ?string $passcode
     */
	#[\JMS\Serializer\Annotation\SerializedName('passcode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $passcode = null;
    
    /**
     * The password to access the conference. The maximum length is 128 characters.
     * 
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * Optional.
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
    /**
     * The PIN to access the conference. The maximum length is 128 characters.
     * 
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * Optional.
     * 
     * @var ?string $pin
     */
	#[\JMS\Serializer\Annotation\SerializedName('pin')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pin = null;
    
    /**
     * The CLDR/ISO 3166 region code for the country associated with this phone access. Example: "SE" for Sweden.
     * 
     * Calendar backend will populate this field only for EntryPointType.PHONE.
     * 
     * @var ?string $regionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('regionCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $regionCode = null;
    
    /**
     * The URI of the entry point. The maximum length is 1300 characters.
     * 
     * Format:  
     * - for video, http: or https: schema is required.
     * - for phone, tel: schema is required. The URI should include the entire dial sequence (e.g., tel:+12345678900,,,123456789;1234).
     * - for sip, sip: schema is required, e.g., sip:12345678@myprovider.com.
     * - for more, http: or https: schema is required.
     * 
     * @var ?string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uri = null;
    
	public function __construct()
	{
		$this->accessCode = null;
		$this->entryPointFeatures = null;
		$this->entryPointType = null;
		$this->label = null;
		$this->meetingCode = null;
		$this->passcode = null;
		$this->password = null;
		$this->pin = null;
		$this->regionCode = null;
		$this->uri = null;
	}
}
