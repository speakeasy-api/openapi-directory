"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import fetcherrorresponse as shared_fetcherrorresponse
from ..shared import fetchpatientsresponse as shared_fetchpatientsresponse
from typing import Optional


@dataclasses.dataclass
class FetchPatientsRequest:
    
    filter_archived: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[archived]', 'style': 'form', 'explode': True }})
    r"""If not specified, return all patients. If set to 'true' return only archived patients, if set to 'false', return only patients who are not archived."""  
    filter_created_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[created_at]', 'style': 'form', 'explode': True }})
    r"""The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`"""  
    filter_groups: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[groups]', 'style': 'form', 'explode': True }})
    r"""Comma-separated list of group ids. Note that either `filter[group]` or `filter[organization]` must be specified."""  
    filter_identifier_system: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[identifier][system]', 'style': 'form', 'explode': True }})
    r"""Identifier system (example: \\"MyEHR\\") - requires a \\"filter[identifier][value]\\" parameter"""  
    filter_identifier_value: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[identifier][value]', 'style': 'form', 'explode': True }})
    r"""Identifier value (example: \\"12345\\") - requires a \\"filter[identifier][system]\\" parameter"""  
    filter_organization: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[organization]', 'style': 'form', 'explode': True }})
    r"""Fitbit Plus organization id. Note that either `filter[group]` or `filter[organization]` must be specified."""  
    filter_updated_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[updated_at]', 'style': 'form', 'explode': True }})
    r"""The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for patients updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`"""  
    page_cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[cursor]', 'style': 'form', 'explode': True }})
    r"""Page cursor"""  
    page_limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[limit]', 'style': 'form', 'explode': True }})
    r"""Page limit"""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[number]', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[size]', 'style': 'form', 'explode': True }})
    r"""Page size"""  
    

@dataclasses.dataclass
class FetchPatientsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    fetch_error_response: Optional[shared_fetcherrorresponse.FetchErrorResponse] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    fetch_patients_response: Optional[shared_fetchpatientsresponse.FetchPatientsResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    