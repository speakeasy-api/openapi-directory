"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import playlistsresponse as shared_playlistsresponse
from enum import Enum
from typing import Optional

class GetPlaylistsSortEnum(str, Enum):
    r"""How do you want to sort playlists?"""
    RECENT_ADDED_FIRST = 'recent_added_first'
    OLDEST_ADDED_FIRST = 'oldest_added_first'
    NAME_A_TO_Z = 'name_a_to_z'
    NAME_Z_TO_A = 'name_z_to_a'


@dataclasses.dataclass
class GetPlaylistsRequest:
    
    x_listen_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'X-ListenAPI-Key', 'style': 'simple', 'explode': False }})
    r"""Get API Key on listennotes.com/api"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number of playlists."""  
    sort: Optional[GetPlaylistsSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""How do you want to sort playlists?"""  
    

@dataclasses.dataclass
class GetPlaylistsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    playlists_response: Optional[shared_playlistsresponse.PlaylistsResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    