// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type InitiateVaultLockPathParams struct {
	// The <code>AccountId</code> value is the AWS account ID. This value must match the AWS account ID associated with the credentials used to sign the request. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon Glacier uses the AWS account ID associated with the credentials used to sign the request. If you specify your account ID, do not include any hyphens ('-') in the ID.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// The name of the vault.
	VaultName string `pathParam:"style=simple,explode=false,name=vaultName"`
}

type InitiateVaultLockHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// InitiateVaultLockRequestBodyPolicy - Contains the vault lock policy.
type InitiateVaultLockRequestBodyPolicy struct {
	Policy *string `json:"Policy,omitempty"`
}

type InitiateVaultLockRequestBody struct {
	// Contains the vault lock policy.
	Policy *InitiateVaultLockRequestBodyPolicy `json:"policy,omitempty"`
}

type InitiateVaultLockRequest struct {
	PathParams InitiateVaultLockPathParams
	Headers    InitiateVaultLockHeaders
	Request    InitiateVaultLockRequestBody `request:"mediaType=application/json"`
}

type InitiateVaultLockResponse struct {
	ContentType string
	// Success
	InitiateVaultLockOutput map[string]interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// MissingParameterValueException
	MissingParameterValueException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
