// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExecutionStatusEnum string

const (
	ExecutionStatusEnumRunning   ExecutionStatusEnum = "RUNNING"
	ExecutionStatusEnumSucceeded ExecutionStatusEnum = "SUCCEEDED"
	ExecutionStatusEnumFailed    ExecutionStatusEnum = "FAILED"
	ExecutionStatusEnumTimedOut  ExecutionStatusEnum = "TIMED_OUT"
	ExecutionStatusEnumAborted   ExecutionStatusEnum = "ABORTED"
)

func (e *ExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "ABORTED":
		*e = ExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionStatusEnum: %s", s)
	}
}
