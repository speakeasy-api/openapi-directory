/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateChannelResponse {
    /**
     * ChannelAlreadyExistsException
     */
    
    public Object channelAlreadyExistsException;

    public CreateChannelResponse withChannelAlreadyExistsException(Object channelAlreadyExistsException) {
        this.channelAlreadyExistsException = channelAlreadyExistsException;
        return this;
    }
    
    /**
     * ChannelMaxLimitExceededException
     */
    
    public Object channelMaxLimitExceededException;

    public CreateChannelResponse withChannelMaxLimitExceededException(Object channelMaxLimitExceededException) {
        this.channelMaxLimitExceededException = channelMaxLimitExceededException;
        return this;
    }
    
    
    public String contentType;

    public CreateChannelResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateChannelResponse createChannelResponse;

    public CreateChannelResponse withCreateChannelResponse(org.openapis.openapi.models.shared.CreateChannelResponse createChannelResponse) {
        this.createChannelResponse = createChannelResponse;
        return this;
    }
    
    /**
     * EventDataStoreARNInvalidException
     */
    
    public Object eventDataStoreARNInvalidException;

    public CreateChannelResponse withEventDataStoreARNInvalidException(Object eventDataStoreARNInvalidException) {
        this.eventDataStoreARNInvalidException = eventDataStoreARNInvalidException;
        return this;
    }
    
    /**
     * EventDataStoreNotFoundException
     */
    
    public Object eventDataStoreNotFoundException;

    public CreateChannelResponse withEventDataStoreNotFoundException(Object eventDataStoreNotFoundException) {
        this.eventDataStoreNotFoundException = eventDataStoreNotFoundException;
        return this;
    }
    
    /**
     * InactiveEventDataStoreException
     */
    
    public Object inactiveEventDataStoreException;

    public CreateChannelResponse withInactiveEventDataStoreException(Object inactiveEventDataStoreException) {
        this.inactiveEventDataStoreException = inactiveEventDataStoreException;
        return this;
    }
    
    /**
     * InvalidEventDataStoreCategoryException
     */
    
    public Object invalidEventDataStoreCategoryException;

    public CreateChannelResponse withInvalidEventDataStoreCategoryException(Object invalidEventDataStoreCategoryException) {
        this.invalidEventDataStoreCategoryException = invalidEventDataStoreCategoryException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public CreateChannelResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidSourceException
     */
    
    public Object invalidSourceException;

    public CreateChannelResponse withInvalidSourceException(Object invalidSourceException) {
        this.invalidSourceException = invalidSourceException;
        return this;
    }
    
    /**
     * InvalidTagParameterException
     */
    
    public Object invalidTagParameterException;

    public CreateChannelResponse withInvalidTagParameterException(Object invalidTagParameterException) {
        this.invalidTagParameterException = invalidTagParameterException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;

    public CreateChannelResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateChannelResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateChannelResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TagsLimitExceededException
     */
    
    public Object tagsLimitExceededException;

    public CreateChannelResponse withTagsLimitExceededException(Object tagsLimitExceededException) {
        this.tagsLimitExceededException = tagsLimitExceededException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public CreateChannelResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    public CreateChannelResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
