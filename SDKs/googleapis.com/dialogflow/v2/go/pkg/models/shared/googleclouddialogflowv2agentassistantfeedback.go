// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum - Optional. Whether or not the suggested answer is relevant. For example: * Query: "Can I change my mailing address?" * Suggested document says: "Items must be returned/exchanged within 60 days of the purchase date." * answer_relevance: AnswerRelevance.IRRELEVANT
type GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum string

const (
	GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnumAnswerRelevanceUnspecified GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum = "ANSWER_RELEVANCE_UNSPECIFIED"
	GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnumIrrelevant                 GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum = "IRRELEVANT"
	GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnumRelevant                   GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum = "RELEVANT"
)

func (e GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum) ToPointer() *GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum {
	return &e
}

func (e *GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANSWER_RELEVANCE_UNSPECIFIED":
		fallthrough
	case "IRRELEVANT":
		fallthrough
	case "RELEVANT":
		*e = GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum: %v", v)
	}
}

// GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum - Optional. Whether or not the information in the document is correct. For example: * Query: "Can I return the package in 2 days once received?" * Suggested document says: "Items must be returned/exchanged within 60 days of the purchase date." * Ground truth: "No return or exchange is allowed." * [document_correctness]: INCORRECT
type GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum string

const (
	GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnumDocumentCorrectnessUnspecified GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum = "DOCUMENT_CORRECTNESS_UNSPECIFIED"
	GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnumIncorrect                      GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum = "INCORRECT"
	GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnumCorrect                        GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum = "CORRECT"
)

func (e GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum) ToPointer() *GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum {
	return &e
}

func (e *GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DOCUMENT_CORRECTNESS_UNSPECIFIED":
		fallthrough
	case "INCORRECT":
		fallthrough
	case "CORRECT":
		*e = GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum: %v", v)
	}
}

// GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum - Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT.
type GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum string

const (
	GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnumDocumentEfficiencyUnspecified GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum = "DOCUMENT_EFFICIENCY_UNSPECIFIED"
	GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnumInefficient                   GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum = "INEFFICIENT"
	GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnumEfficient                     GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum = "EFFICIENT"
)

func (e GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum) ToPointer() *GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum {
	return &e
}

func (e *GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DOCUMENT_EFFICIENCY_UNSPECIFIED":
		fallthrough
	case "INEFFICIENT":
		fallthrough
	case "EFFICIENT":
		*e = GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum: %v", v)
	}
}

// GoogleCloudDialogflowV2AgentAssistantFeedback - Detail feedback of Agent Assist result.
type GoogleCloudDialogflowV2AgentAssistantFeedback struct {
	// Optional. Whether or not the suggested answer is relevant. For example: * Query: "Can I change my mailing address?" * Suggested document says: "Items must be returned/exchanged within 60 days of the purchase date." * answer_relevance: AnswerRelevance.IRRELEVANT
	AnswerRelevance *GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum `json:"answerRelevance,omitempty"`
	// Optional. Whether or not the information in the document is correct. For example: * Query: "Can I return the package in 2 days once received?" * Suggested document says: "Items must be returned/exchanged within 60 days of the purchase date." * Ground truth: "No return or exchange is allowed." * [document_correctness]: INCORRECT
	DocumentCorrectness *GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum `json:"documentCorrectness,omitempty"`
	// Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT.
	DocumentEfficiency *GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum `json:"documentEfficiency,omitempty"`
	// Feedback for conversation summarization.
	SummarizationFeedback *GoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback `json:"summarizationFeedback,omitempty"`
}
