<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class HostVolumeSummary
{
    /**
     * The type of the file system on this Volume.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FileSystemTypeEnum $fileSystemType
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileSystemType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FileSystemTypeEnum>')]
    public FileSystemTypeEnum $fileSystemType;
    
    /**
     * The unique ID of the snapshot volume summary.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Indicates whether a volume is present on the host. When 'true', the volume is present. When 'false', the volume is not present. Volumes that are not present on the host are still included in snapshots and trigger warnings until the missing volumes are excluded from snapshots.
     * 
     * @var bool $isCurrentlyPresentOnSystem
     */
	#[\JMS\Serializer\Annotation\SerializedName('isCurrentlyPresentOnSystem')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isCurrentlyPresentOnSystem;
    
    /**
     * The mount points of the volume on the host.
     * 
     * @var array<string> $mountPoints
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountPoints')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $mountPoints;
    
    /**
     * The unique ID of the volume on the Windows host.
     * 
     * @var string $naturalId
     */
	#[\JMS\Serializer\Annotation\SerializedName('naturalId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $naturalId;
    
    /**
     * The size of the volume in bytes.
     * 
     * @var int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $size;
    
    /**
     * The unique ID of the Volume Group.
     * 
     * @var ?string $volumeGroupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumeGroupId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $volumeGroupId = null;
    
	public function __construct()
	{
		$this->fileSystemType = \OpenAPI\OpenAPI\Models\Shared\FileSystemTypeEnum::NTFS;
		$this->id = "";
		$this->isCurrentlyPresentOnSystem = false;
		$this->mountPoints = [];
		$this->naturalId = "";
		$this->size = 0;
		$this->volumeGroupId = null;
	}
}
