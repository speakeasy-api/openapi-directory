"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatacatalogv1columnschemalookercolumnspec as shared_googleclouddatacatalogv1columnschemalookercolumnspec
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingTypeEnum(str, Enum):
    r"""Optional. Most important inclusion of this column."""
    INDEXING_TYPE_UNSPECIFIED = 'INDEXING_TYPE_UNSPECIFIED'
    INDEXING_TYPE_NONE = 'INDEXING_TYPE_NONE'
    INDEXING_TYPE_NON_UNIQUE = 'INDEXING_TYPE_NON_UNIQUE'
    INDEXING_TYPE_UNIQUE = 'INDEXING_TYPE_UNIQUE'
    INDEXING_TYPE_PRIMARY_KEY = 'INDEXING_TYPE_PRIMARY_KEY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1ColumnSchema:
    r"""A column within a schema. Columns can be nested inside other columns."""
    
    column: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('column'), 'exclude': lambda f: f is None }})
    r"""Required. Name of the column. Must be a UTF-8 string without dots (.). The maximum size is 64 bytes."""  
    default_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultValue'), 'exclude': lambda f: f is None }})
    r"""Optional. Default value for the column."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. Description of the column. Default value is an empty string. The description must be a UTF-8 string with the maximum size of 2000 bytes."""  
    gc_rule: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcRule'), 'exclude': lambda f: f is None }})
    r"""Optional. Garbage collection policy for the column or column family. Applies to systems like Cloud Bigtable."""  
    highest_indexing_type: Optional[GoogleCloudDatacatalogV1ColumnSchemaHighestIndexingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('highestIndexingType'), 'exclude': lambda f: f is None }})
    r"""Optional. Most important inclusion of this column."""  
    looker_column_spec: Optional[shared_googleclouddatacatalogv1columnschemalookercolumnspec.GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lookerColumnSpec'), 'exclude': lambda f: f is None }})
    r"""Column info specific to Looker System."""  
    mode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mode'), 'exclude': lambda f: f is None }})
    r"""Optional. A column's mode indicates whether values in this column are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED` values are supported. Default mode is `NULLABLE`."""  
    ordinal_position: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ordinalPosition'), 'exclude': lambda f: f is None }})
    r"""Optional. Ordinal position"""  
    subcolumns: Optional[list[GoogleCloudDatacatalogV1ColumnSchema]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subcolumns'), 'exclude': lambda f: f is None }})
    r"""Optional. Schema of sub-columns. A column can have zero or more sub-columns."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Required. Type of the column. Must be a UTF-8 string with the maximum size of 128 bytes."""  
    