"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SuffixOptionEnum(str, Enum):
    r"""Suffix option."""
    OPTION_UNSPECIFIED = 'OPTION_UNSPECIFIED'
    UNGUESSABLE = 'UNGUESSABLE'
    SHORT = 'SHORT'
    CUSTOM = 'CUSTOM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Suffix:
    r"""Short Dynamic Link suffix."""
    
    custom_suffix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customSuffix'), 'exclude': lambda f: f is None }})
    r"""Only applies to Option.CUSTOM."""  
    option: Optional[SuffixOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('option'), 'exclude': lambda f: f is None }})
    r"""Suffix option."""  
    