"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContributionDetails = exports.ContributionDetailsContributionTargetEnum = exports.ContributionDetailsContributionSourceEnum = exports.ContributionDetailsContributionRuleTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The type of contribution rule
 */
var ContributionDetailsContributionRuleTypeEnum;
(function (ContributionDetailsContributionRuleTypeEnum) {
    ContributionDetailsContributionRuleTypeEnum["FixedDollar"] = "fixed_dollar";
    ContributionDetailsContributionRuleTypeEnum["Percent"] = "percent";
})(ContributionDetailsContributionRuleTypeEnum = exports.ContributionDetailsContributionRuleTypeEnum || (exports.ContributionDetailsContributionRuleTypeEnum = {}));
/**
 * The source of the contribution, either employee_amount or employer_amount
 */
var ContributionDetailsContributionSourceEnum;
(function (ContributionDetailsContributionSourceEnum) {
    ContributionDetailsContributionSourceEnum["EmployeeAmount"] = "employee_amount";
    ContributionDetailsContributionSourceEnum["EmployerAmount"] = "employer_amount";
})(ContributionDetailsContributionSourceEnum = exports.ContributionDetailsContributionSourceEnum || (exports.ContributionDetailsContributionSourceEnum = {}));
/**
 * Where this particular contribution rule is applied, either employee or dependents
 */
var ContributionDetailsContributionTargetEnum;
(function (ContributionDetailsContributionTargetEnum) {
    ContributionDetailsContributionTargetEnum["Dependents"] = "dependents";
    ContributionDetailsContributionTargetEnum["Employee"] = "employee";
})(ContributionDetailsContributionTargetEnum = exports.ContributionDetailsContributionTargetEnum || (exports.ContributionDetailsContributionTargetEnum = {}));
var ContributionDetails = /** @class */ (function (_super) {
    __extends(ContributionDetails, _super);
    function ContributionDetails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contribution_rule" }),
        __metadata("design:type", String)
    ], ContributionDetails.prototype, "contributionRule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contribution_rule_type" }),
        __metadata("design:type", String)
    ], ContributionDetails.prototype, "contributionRuleType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contribution_source" }),
        __metadata("design:type", String)
    ], ContributionDetails.prototype, "contributionSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contribution_target" }),
        __metadata("design:type", String)
    ], ContributionDetails.prototype, "contributionTarget", void 0);
    return ContributionDetails;
}(utils_1.SpeakeasyBase));
exports.ContributionDetails = ContributionDetails;
