// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAuthorizeEndpointAccessActionEnum
type GETAuthorizeEndpointAccessActionEnum string

const (
	GETAuthorizeEndpointAccessActionEnumAuthorizeEndpointAccess GETAuthorizeEndpointAccessActionEnum = "AuthorizeEndpointAccess"
)

func (e *GETAuthorizeEndpointAccessActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AuthorizeEndpointAccess":
		*e = GETAuthorizeEndpointAccessActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAuthorizeEndpointAccessActionEnum: %s", s)
	}
}

// GETAuthorizeEndpointAccessVersionEnum
type GETAuthorizeEndpointAccessVersionEnum string

const (
	GETAuthorizeEndpointAccessVersionEnumTwoThousandAndTwelve1201 GETAuthorizeEndpointAccessVersionEnum = "2012-12-01"
)

func (e *GETAuthorizeEndpointAccessVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETAuthorizeEndpointAccessVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAuthorizeEndpointAccessVersionEnum: %s", s)
	}
}

type GETAuthorizeEndpointAccessRequest struct {
	// The Amazon Web Services account ID to grant access to.
	Account string                               `queryParam:"style=form,explode=true,name=Account"`
	Action  GETAuthorizeEndpointAccessActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The cluster identifier of the cluster to grant access to.
	ClusterIdentifier *string                               `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	Version           GETAuthorizeEndpointAccessVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The virtual private cloud (VPC) identifiers to grant access to.
	VpcIds            []string `queryParam:"style=form,explode=true,name=VpcIds"`
	XAmzAlgorithm     *string  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAuthorizeEndpointAccessResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
