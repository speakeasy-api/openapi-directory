// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateTaskStatusEnum - The status of the task instance.
type UpdateTaskStatusEnum string

const (
	UpdateTaskStatusEnumQueued     UpdateTaskStatusEnum = "Queued"
	UpdateTaskStatusEnumProcessing UpdateTaskStatusEnum = "Processing"
	UpdateTaskStatusEnumPending    UpdateTaskStatusEnum = "Pending"
	UpdateTaskStatusEnumSuccess    UpdateTaskStatusEnum = "Success"
	UpdateTaskStatusEnumStopped    UpdateTaskStatusEnum = "Stopped"
	UpdateTaskStatusEnumError      UpdateTaskStatusEnum = "Error"
)

func (e *UpdateTaskStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Queued":
		fallthrough
	case "Processing":
		fallthrough
	case "Pending":
		fallthrough
	case "Success":
		fallthrough
	case "Stopped":
		fallthrough
	case "Error":
		*e = UpdateTaskStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateTaskStatusEnum: %s", s)
	}
}

// UpdateTask - A task.
type UpdateTask struct {
	// The type of task.
	//
	ActionType *string `json:"action_type,omitempty"`
	// The type of the API used.
	//
	CallType *string `json:"call_type,omitempty"`
	// The maximum number of this task that can run concurrently.
	//
	ConcurrentLimit *int64 `json:"concurrent_limit,omitempty"`
	// The unique ID of the task.
	//
	ID int64 `json:"id"`
	// The name of the task.
	//
	Name *string `json:"name,omitempty"`
	// The selected object for the task.
	//
	Object *string `json:"object,omitempty"`
	// The ID of the selected object of the task.
	//
	ObjectID *string `json:"object_id,omitempty"`
	// The status of the task instance.
	//
	Status *UpdateTaskStatusEnum `json:"status,omitempty"`
	// The array of filter tags.
	//
	Tags []string `json:"tags,omitempty"`
	// The ID of the workflow the task belongs too.
	//
	WorkflowID *int64 `json:"workflow_id,omitempty"`
}
