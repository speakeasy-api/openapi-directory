"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2exclusionrule as shared_googleprivacydlpv2exclusionrule
from ..shared import googleprivacydlpv2hotwordrule as shared_googleprivacydlpv2hotwordrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2InspectionRule:
    r"""A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`."""
    
    exclusion_rule: Optional[shared_googleprivacydlpv2exclusionrule.GooglePrivacyDlpV2ExclusionRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exclusionRule'), 'exclude': lambda f: f is None }})
    r"""The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results."""  
    hotword_rule: Optional[shared_googleprivacydlpv2hotwordrule.GooglePrivacyDlpV2HotwordRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hotwordRule'), 'exclude': lambda f: f is None }})
    r"""The rule that adjusts the likelihood of findings within a certain proximity of hotwords."""  
    