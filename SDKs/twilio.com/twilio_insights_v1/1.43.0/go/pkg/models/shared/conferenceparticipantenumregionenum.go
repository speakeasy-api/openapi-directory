// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConferenceParticipantEnumRegionEnum string

const (
	ConferenceParticipantEnumRegionEnumUs1 ConferenceParticipantEnumRegionEnum = "us1"
	ConferenceParticipantEnumRegionEnumUs2 ConferenceParticipantEnumRegionEnum = "us2"
	ConferenceParticipantEnumRegionEnumAu1 ConferenceParticipantEnumRegionEnum = "au1"
	ConferenceParticipantEnumRegionEnumBr1 ConferenceParticipantEnumRegionEnum = "br1"
	ConferenceParticipantEnumRegionEnumIe1 ConferenceParticipantEnumRegionEnum = "ie1"
	ConferenceParticipantEnumRegionEnumJp1 ConferenceParticipantEnumRegionEnum = "jp1"
	ConferenceParticipantEnumRegionEnumSg1 ConferenceParticipantEnumRegionEnum = "sg1"
	ConferenceParticipantEnumRegionEnumDe1 ConferenceParticipantEnumRegionEnum = "de1"
)

func (e ConferenceParticipantEnumRegionEnum) ToPointer() *ConferenceParticipantEnumRegionEnum {
	return &e
}

func (e *ConferenceParticipantEnumRegionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "us1":
		fallthrough
	case "us2":
		fallthrough
	case "au1":
		fallthrough
	case "br1":
		fallthrough
	case "ie1":
		fallthrough
	case "jp1":
		fallthrough
	case "sg1":
		fallthrough
	case "de1":
		*e = ConferenceParticipantEnumRegionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConferenceParticipantEnumRegionEnum: %v", v)
	}
}
