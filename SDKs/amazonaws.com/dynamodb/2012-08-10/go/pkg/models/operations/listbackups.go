// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListBackupsXAmzTargetEnum
type ListBackupsXAmzTargetEnum string

const (
	ListBackupsXAmzTargetEnumDynamoDb20120810ListBackups ListBackupsXAmzTargetEnum = "DynamoDB_20120810.ListBackups"
)

func (e ListBackupsXAmzTargetEnum) ToPointer() *ListBackupsXAmzTargetEnum {
	return &e
}

func (e *ListBackupsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DynamoDB_20120810.ListBackups":
		*e = ListBackupsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBackupsXAmzTargetEnum: %v", v)
	}
}

type ListBackupsRequest struct {
	ListBackupsInput  shared.ListBackupsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListBackupsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListBackupsResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// Success
	ListBackupsOutput *shared.ListBackupsOutput
	StatusCode        int
	RawResponse       *http.Response
}
