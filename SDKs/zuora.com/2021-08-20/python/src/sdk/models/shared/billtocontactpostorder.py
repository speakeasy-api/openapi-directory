"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BillToContactPostOrderOtherPhoneTypeEnum(str, Enum):
    r"""Specifies the type of phone number in the `otherPhone` field."""
    WORK = 'Work'
    MOBILE = 'Mobile'
    HOME = 'Home'
    OTHER = 'Other'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillToContactPostOrder:
    r"""Container for custom fields of a Contact object."""
    
    first_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName') }})
    r"""First name of the contact."""  
    last_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName') }})
    r"""Last name of the contact."""  
    address1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address1'), 'exclude': lambda f: f is None }})
    r"""First line of the contact's address. This is often a street address or a business name."""  
    address2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address2'), 'exclude': lambda f: f is None }})
    r"""Second line of the contact's address."""  
    city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city'), 'exclude': lambda f: f is None }})
    r"""City of the contact's address."""  
    contact_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactDescription'), 'exclude': lambda f: f is None }})
    r"""A description for the contact."""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""Country; must be a valid country name or abbreviation. If using Zuora Tax, you must specify a country in the bill-to contact to calculate tax."""  
    county: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('county'), 'exclude': lambda f: f is None }})
    r"""County of the contact's address."""  
    fax: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fax'), 'exclude': lambda f: f is None }})
    r"""Fax number of the contact."""  
    home_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('homePhone'), 'exclude': lambda f: f is None }})
    r"""Home phone number of the contact."""  
    mobile_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobilePhone'), 'exclude': lambda f: f is None }})
    r"""Mobile phone number of the contact."""  
    nickname: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nickname'), 'exclude': lambda f: f is None }})
    r"""Nickname of the contact."""  
    other_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('otherPhone'), 'exclude': lambda f: f is None }})
    r"""Additional phone number of the contact. Use the `otherPhoneType` field to specify the type of phone number."""  
    other_phone_type: Optional[BillToContactPostOrderOtherPhoneTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('otherPhoneType'), 'exclude': lambda f: f is None }})
    r"""Specifies the type of phone number in the `otherPhone` field."""  
    personal_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personalEmail'), 'exclude': lambda f: f is None }})
    r"""Personal email address of the contact."""  
    postal_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postalCode'), 'exclude': lambda f: f is None }})
    r"""ZIP code or other postal code of the contact's address."""  
    state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""State or province of the contact's address."""  
    tax_region: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxRegion'), 'exclude': lambda f: f is None }})
    r"""Region defined in your taxation rules. Only applicable if you use Zuora Tax."""  
    work_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workEmail'), 'exclude': lambda f: f is None }})
    r"""Business email address of the contact."""  
    work_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workPhone'), 'exclude': lambda f: f is None }})
    r"""Business phone number of the contact."""  
    