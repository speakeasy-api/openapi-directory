"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import picture as shared_picture
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class EditVideoThumbnailSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EditVideoThumbnailRequestBody:
    
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""Whether this thumbnail is the default."""  
    

@dataclasses.dataclass
class EditVideoThumbnailRequest:
    
    picture_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'picture_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the picture."""  
    video_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'video_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the video."""  
    request_body: Optional[EditVideoThumbnailRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/vnd.vimeo.picture+json' }})  
    

@dataclasses.dataclass
class EditVideoThumbnailResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    picture: Optional[shared_picture.Picture] = dataclasses.field(default=None)
    r"""The thumbnail was edited."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    