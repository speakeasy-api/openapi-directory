// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// PutAccountDetailsRequestBodyContactLanguageEnum - The language you would prefer to be contacted with.
type PutAccountDetailsRequestBodyContactLanguageEnum string

const (
	PutAccountDetailsRequestBodyContactLanguageEnumEn PutAccountDetailsRequestBodyContactLanguageEnum = "EN"
	PutAccountDetailsRequestBodyContactLanguageEnumJa PutAccountDetailsRequestBodyContactLanguageEnum = "JA"
)

func (e PutAccountDetailsRequestBodyContactLanguageEnum) ToPointer() *PutAccountDetailsRequestBodyContactLanguageEnum {
	return &e
}

func (e *PutAccountDetailsRequestBodyContactLanguageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EN":
		fallthrough
	case "JA":
		*e = PutAccountDetailsRequestBodyContactLanguageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAccountDetailsRequestBodyContactLanguageEnum: %v", v)
	}
}

// PutAccountDetailsRequestBodyMailTypeEnum - The type of email your account will send.
type PutAccountDetailsRequestBodyMailTypeEnum string

const (
	PutAccountDetailsRequestBodyMailTypeEnumMarketing     PutAccountDetailsRequestBodyMailTypeEnum = "MARKETING"
	PutAccountDetailsRequestBodyMailTypeEnumTransactional PutAccountDetailsRequestBodyMailTypeEnum = "TRANSACTIONAL"
)

func (e PutAccountDetailsRequestBodyMailTypeEnum) ToPointer() *PutAccountDetailsRequestBodyMailTypeEnum {
	return &e
}

func (e *PutAccountDetailsRequestBodyMailTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MARKETING":
		fallthrough
	case "TRANSACTIONAL":
		*e = PutAccountDetailsRequestBodyMailTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAccountDetailsRequestBodyMailTypeEnum: %v", v)
	}
}

type PutAccountDetailsRequestBody struct {
	// Additional email addresses that you would like to be notified regarding Amazon SES matters.
	AdditionalContactEmailAddresses []string `json:"AdditionalContactEmailAddresses,omitempty"`
	// The language you would prefer to be contacted with.
	ContactLanguage *PutAccountDetailsRequestBodyContactLanguageEnum `json:"ContactLanguage,omitempty"`
	// The type of email your account will send.
	MailType PutAccountDetailsRequestBodyMailTypeEnum `json:"MailType"`
	// <p>Indicates whether or not your account should have production access in the current Amazon Web Services Region.</p> <p>If the value is <code>false</code>, then your account is in the <i>sandbox</i>. When your account is in the sandbox, you can only send email to verified identities. Additionally, the maximum number of emails you can send in a 24-hour period (your sending quota) is 200, and the maximum number of emails you can send per second (your maximum sending rate) is 1.</p> <p>If the value is <code>true</code>, then your account has production access. When your account has production access, you can send email to any address. The sending quota and maximum sending rate for your account vary based on your specific use case.</p>
	ProductionAccessEnabled *bool `json:"ProductionAccessEnabled,omitempty"`
	// A description of the types of email that you plan to send.
	UseCaseDescription string `json:"UseCaseDescription"`
	// The URL of your website. This information helps us better understand the type of content that you plan to send.
	WebsiteURL string `json:"WebsiteURL"`
}

type PutAccountDetailsRequest struct {
	RequestBody       PutAccountDetailsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutAccountDetailsResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	PutAccountDetailsResponse map[string]interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
