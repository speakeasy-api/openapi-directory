// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// LicenseLicenseTypeEnum - The license type.
type LicenseLicenseTypeEnum string

const (
	LicenseLicenseTypeEnumAustralianFinancialServicesLicense LicenseLicenseTypeEnum = "Australian Financial Services License"
	LicenseLicenseTypeEnumLicense2B                          LicenseLicenseTypeEnum = "License 2B"
)

func (e *LicenseLicenseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Australian Financial Services License":
		fallthrough
	case "License 2B":
		*e = LicenseLicenseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseLicenseTypeEnum: %s", s)
	}
}

// LicenseLifecycleStateEnum - The business name's lifecycle state.
type LicenseLifecycleStateEnum string

const (
	LicenseLifecycleStateEnumApproved        LicenseLifecycleStateEnum = "Approved"
	LicenseLifecycleStateEnumExpired         LicenseLifecycleStateEnum = "Expired"
	LicenseLifecycleStateEnumIssued          LicenseLifecycleStateEnum = "Issued"
	LicenseLifecycleStateEnumPendingApproval LicenseLifecycleStateEnum = "Pending Approval"
	LicenseLifecycleStateEnumSuspended       LicenseLifecycleStateEnum = "Suspended"
)

func (e *LicenseLifecycleStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Approved":
		fallthrough
	case "Expired":
		fallthrough
	case "Issued":
		fallthrough
	case "Pending Approval":
		fallthrough
	case "Suspended":
		*e = LicenseLifecycleStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseLifecycleStateEnum: %s", s)
	}
}

// LicenseInput - The License resource.
type LicenseInput struct {
	// The license type.
	LicenseType *LicenseLicenseTypeEnum `json:"licenseType,omitempty"`
	// The business name's lifecycle state.
	LifecycleState *LicenseLifecycleStateEnum `json:"lifecycleState,omitempty"`
}

// License - The License resource.
type License struct {
	// The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
	FromDate *time.Time `json:"fromDate,omitempty"`
	// The resource's unique identifier.
	ID *string `json:"id,omitempty"`
	// The license type.
	LicenseType *LicenseLicenseTypeEnum `json:"licenseType,omitempty"`
	// The business name's lifecycle state.
	LifecycleState *LicenseLifecycleStateEnum `json:"lifecycleState,omitempty"`
	// The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
	ToDate *time.Time `json:"toDate,omitempty"`
}
