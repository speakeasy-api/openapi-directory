/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * As2PartnerEntity - Create As2 Partner
 */
public class As2PartnerEntity {
    /**
     * Id of the AS2 Station associated with this partner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("as2_station_id")
    public Integer as2StationId;
    public As2PartnerEntity withAs2StationId(Integer as2StationId) {
        this.as2StationId = as2StationId;
        return this;
    }
    
    /**
     * Serial of public certificate used for message security in hex format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hex_public_certificate_serial")
    public String hexPublicCertificateSerial;
    public As2PartnerEntity withHexPublicCertificateSerial(String hexPublicCertificateSerial) {
        this.hexPublicCertificateSerial = hexPublicCertificateSerial;
        return this;
    }
    
    /**
     * Id of the AS2 Partner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;
    public As2PartnerEntity withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * The partner's formal AS2 name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public As2PartnerEntity withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Issuer of public certificate used for message security.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_certificate_issuer")
    public String publicCertificateIssuer;
    public As2PartnerEntity withPublicCertificateIssuer(String publicCertificateIssuer) {
        this.publicCertificateIssuer = publicCertificateIssuer;
        return this;
    }
    
    /**
     * MD5 hash of public certificate used for message security.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_certificate_md5")
    public String publicCertificateMd5;
    public As2PartnerEntity withPublicCertificateMd5(String publicCertificateMd5) {
        this.publicCertificateMd5 = publicCertificateMd5;
        return this;
    }
    
    /**
     * Not after value of public certificate used for message security.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_certificate_not_after")
    public String publicCertificateNotAfter;
    public As2PartnerEntity withPublicCertificateNotAfter(String publicCertificateNotAfter) {
        this.publicCertificateNotAfter = publicCertificateNotAfter;
        return this;
    }
    
    /**
     * Not before value of public certificate used for message security.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_certificate_not_before")
    public String publicCertificateNotBefore;
    public As2PartnerEntity withPublicCertificateNotBefore(String publicCertificateNotBefore) {
        this.publicCertificateNotBefore = publicCertificateNotBefore;
        return this;
    }
    
    /**
     * Serial of public certificate used for message security.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_certificate_serial")
    public String publicCertificateSerial;
    public As2PartnerEntity withPublicCertificateSerial(String publicCertificateSerial) {
        this.publicCertificateSerial = publicCertificateSerial;
        return this;
    }
    
    /**
     * Subject of public certificate used for message security.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_certificate_subject")
    public String publicCertificateSubject;
    public As2PartnerEntity withPublicCertificateSubject(String publicCertificateSubject) {
        this.publicCertificateSubject = publicCertificateSubject;
        return this;
    }
    
    /**
     * Remote server certificate security setting
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("server_certificate")
    public As2PartnerEntityServerCertificateEnum serverCertificate;
    public As2PartnerEntity withServerCertificate(As2PartnerEntityServerCertificateEnum serverCertificate) {
        this.serverCertificate = serverCertificate;
        return this;
    }
    
    /**
     * Public URI for sending AS2 message to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;
    public As2PartnerEntity withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
}
