"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import certificatetype_enum as shared_certificatetype_enum
from ..shared import clientcertauthsettings as shared_clientcertauthsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RegisterCertificateRequest:
    
    certificate_data: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CertificateData') }})  
    directory_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DirectoryId') }})  
    client_cert_auth_settings: Optional[shared_clientcertauthsettings.ClientCertAuthSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientCertAuthSettings'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_certificatetype_enum.CertificateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    