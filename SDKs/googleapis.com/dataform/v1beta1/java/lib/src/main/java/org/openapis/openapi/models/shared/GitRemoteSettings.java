/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GitRemoteSettings - Controls Git remote configuration for a repository.
 */
public class GitRemoteSettings {
    /**
     * Required. The name of the Secret Manager secret version to use as an authentication token for Git operations. Must be in the format `projects/* /secrets/* /versions/*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticationTokenSecretVersion")
    public String authenticationTokenSecretVersion;

    public GitRemoteSettings withAuthenticationTokenSecretVersion(String authenticationTokenSecretVersion) {
        this.authenticationTokenSecretVersion = authenticationTokenSecretVersion;
        return this;
    }
    
    /**
     * Required. The Git remote's default branch name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultBranch")
    public String defaultBranch;

    public GitRemoteSettings withDefaultBranch(String defaultBranch) {
        this.defaultBranch = defaultBranch;
        return this;
    }
    
    /**
     * Output only. Indicates the status of the Git access token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tokenStatus")
    public GitRemoteSettingsTokenStatusEnum tokenStatus;

    public GitRemoteSettings withTokenStatus(GitRemoteSettingsTokenStatusEnum tokenStatus) {
        this.tokenStatus = tokenStatus;
        return this;
    }
    
    /**
     * Required. The Git remote's URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public GitRemoteSettings withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public GitRemoteSettings(){}
}
