"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import reaction as shared_reaction
from enum import Enum
from typing import Optional

class ReactionsListForTeamDiscussionLegacyContentEnum(str, Enum):
    r"""Returns a single [reaction type](https://docs.github.com/enterprise-server@3.7/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion."""
    PLUS_1 = '+1'
    MINUS_1 = '-1'
    LAUGH = 'laugh'
    CONFUSED = 'confused'
    HEART = 'heart'
    HOORAY = 'hooray'
    ROCKET = 'rocket'
    EYES = 'eyes'


@dataclasses.dataclass
class ReactionsListForTeamDiscussionLegacyRequest:
    
    discussion_number: int = dataclasses.field(metadata={'path_param': { 'field_name': 'discussion_number', 'style': 'simple', 'explode': False }})
    r"""The number that identifies the discussion."""  
    team_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'team_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the team."""  
    content: Optional[ReactionsListForTeamDiscussionLegacyContentEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'content', 'style': 'form', 'explode': True }})
    r"""Returns a single [reaction type](https://docs.github.com/enterprise-server@3.7/rest/reference/reactions#reaction-types). Omit this parameter to list all reactions to a team discussion."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number of the results to fetch."""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""The number of results per page (max 100)."""  
    

@dataclasses.dataclass
class ReactionsListForTeamDiscussionLegacyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    reactions: Optional[list[shared_reaction.Reaction]] = dataclasses.field(default=None)
    r"""Response"""  
    