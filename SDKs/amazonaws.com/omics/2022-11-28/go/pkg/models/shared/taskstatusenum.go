// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskStatusEnum string

const (
	TaskStatusEnumPending   TaskStatusEnum = "PENDING"
	TaskStatusEnumStarting  TaskStatusEnum = "STARTING"
	TaskStatusEnumRunning   TaskStatusEnum = "RUNNING"
	TaskStatusEnumStopping  TaskStatusEnum = "STOPPING"
	TaskStatusEnumCompleted TaskStatusEnum = "COMPLETED"
	TaskStatusEnumCancelled TaskStatusEnum = "CANCELLED"
	TaskStatusEnumFailed    TaskStatusEnum = "FAILED"
)

func (e TaskStatusEnum) ToPointer() *TaskStatusEnum {
	return &e
}

func (e *TaskStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "STARTING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		*e = TaskStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskStatusEnum: %v", v)
	}
}
