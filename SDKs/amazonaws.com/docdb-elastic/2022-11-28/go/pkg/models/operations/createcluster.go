// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateClusterHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateClusterRequestBodyAuthTypeEnum - The authentication type for the Elastic DocumentDB cluster.
type CreateClusterRequestBodyAuthTypeEnum string

const (
	CreateClusterRequestBodyAuthTypeEnumPlainText CreateClusterRequestBodyAuthTypeEnum = "PLAIN_TEXT"
	CreateClusterRequestBodyAuthTypeEnumSecretArn CreateClusterRequestBodyAuthTypeEnum = "SECRET_ARN"
)

func (e *CreateClusterRequestBodyAuthTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PLAIN_TEXT":
		fallthrough
	case "SECRET_ARN":
		*e = CreateClusterRequestBodyAuthTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateClusterRequestBodyAuthTypeEnum: %s", s)
	}
}

type CreateClusterRequestBody struct {
	// <p>The name of the Elastic DocumentDB cluster administrator.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must be from 1 to 63 letters or numbers.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot be a reserved word.</p> </li> </ul>
	AdminUserName string `json:"adminUserName"`
	// <p>The password for the Elastic DocumentDB cluster administrator and can contain any printable ASCII characters.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must contain from 8 to 100 characters.</p> </li> <li> <p>Cannot contain a forward slash (/), double quote ("), or the "at" symbol (@).</p> </li> </ul>
	AdminUserPassword string `json:"adminUserPassword"`
	// The authentication type for the Elastic DocumentDB cluster.
	AuthType CreateClusterRequestBodyAuthTypeEnum `json:"authType"`
	// The client token for the Elastic DocumentDB cluster.
	ClientToken *string `json:"clientToken,omitempty"`
	// <p>The name of the new Elastic DocumentDB cluster. This parameter is stored as a lowercase string.</p> <p> <i>Constraints</i>:</p> <ul> <li> <p>Must contain from 1 to 63 letters, numbers, or hyphens.</p> </li> <li> <p>The first character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p> <i>Example</i>: <code>my-cluster</code> </p>
	ClusterName string `json:"clusterName"`
	// <p>The KMS key identifier to use to encrypt the new Elastic DocumentDB cluster.</p> <p>The KMS key identifier is the Amazon Resource Name (ARN) for the KMS encryption key. If you are creating a cluster using the same Amazon account that owns this KMS encryption key, you can use the KMS key alias instead of the ARN as the KMS encryption key.</p> <p>If an encryption key is not specified, Elastic DocumentDB uses the default encryption key that KMS creates for your account. Your account has a different default encryption key for each Amazon Region.</p>
	KmsKeyID *string `json:"kmsKeyId,omitempty"`
	// <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> <i>Format</i>: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> <i>Default</i>: a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.</p> <p> <i>Valid days</i>: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p> <i>Constraints</i>: Minimum 30-minute window.</p>
	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`
	// The capacity of each shard in the new Elastic DocumentDB cluster.
	ShardCapacity int64 `json:"shardCapacity"`
	// The number of shards to create in the new Elastic DocumentDB cluster.
	ShardCount int64 `json:"shardCount"`
	// The Amazon EC2 subnet IDs for the new Elastic DocumentDB cluster.
	SubnetIds []string `json:"subnetIds,omitempty"`
	// The tags to be assigned to the new Elastic DocumentDB cluster.
	Tags map[string]string `json:"tags,omitempty"`
	// A list of EC2 VPC security groups to associate with the new Elastic DocumentDB cluster.
	VpcSecurityGroupIds []string `json:"vpcSecurityGroupIds,omitempty"`
}

type CreateClusterRequest struct {
	Headers CreateClusterHeaders
	Request CreateClusterRequestBody `request:"mediaType=application/json"`
}

type CreateClusterResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateClusterOutput *shared.CreateClusterOutput
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
