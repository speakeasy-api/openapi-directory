// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type GetCarrierSettingsResponseBodyType string

const (
	GetCarrierSettingsResponseBodyTypeDhlExpressSettingsResponseBody GetCarrierSettingsResponseBodyType = "dhl_express_settings_response_body"
	GetCarrierSettingsResponseBodyTypeFedexSettingsResponseBody      GetCarrierSettingsResponseBodyType = "fedex_settings_response_body"
	GetCarrierSettingsResponseBodyTypeUpsSettingsResponseBody        GetCarrierSettingsResponseBodyType = "ups_settings_response_body"
)

type GetCarrierSettingsResponseBody struct {
	DhlExpressSettingsResponseBody *DhlExpressSettingsResponseBody
	FedexSettingsResponseBody      *FedexSettingsResponseBody
	UpsSettingsResponseBody        *UpsSettingsResponseBody

	Type GetCarrierSettingsResponseBodyType
}

func CreateGetCarrierSettingsResponseBodyDhlExpressSettingsResponseBody(dhlExpressSettingsResponseBody DhlExpressSettingsResponseBody) GetCarrierSettingsResponseBody {
	typ := GetCarrierSettingsResponseBodyTypeDhlExpressSettingsResponseBody

	return GetCarrierSettingsResponseBody{
		DhlExpressSettingsResponseBody: &dhlExpressSettingsResponseBody,
		Type:                           typ,
	}
}

func CreateGetCarrierSettingsResponseBodyFedexSettingsResponseBody(fedexSettingsResponseBody FedexSettingsResponseBody) GetCarrierSettingsResponseBody {
	typ := GetCarrierSettingsResponseBodyTypeFedexSettingsResponseBody

	return GetCarrierSettingsResponseBody{
		FedexSettingsResponseBody: &fedexSettingsResponseBody,
		Type:                      typ,
	}
}

func CreateGetCarrierSettingsResponseBodyUpsSettingsResponseBody(upsSettingsResponseBody UpsSettingsResponseBody) GetCarrierSettingsResponseBody {
	typ := GetCarrierSettingsResponseBodyTypeUpsSettingsResponseBody

	return GetCarrierSettingsResponseBody{
		UpsSettingsResponseBody: &upsSettingsResponseBody,
		Type:                    typ,
	}
}

func (u *GetCarrierSettingsResponseBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	dhlExpressSettingsResponseBody := new(DhlExpressSettingsResponseBody)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&dhlExpressSettingsResponseBody); err == nil {
		u.DhlExpressSettingsResponseBody = dhlExpressSettingsResponseBody
		u.Type = GetCarrierSettingsResponseBodyTypeDhlExpressSettingsResponseBody
		return nil
	}

	fedexSettingsResponseBody := new(FedexSettingsResponseBody)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&fedexSettingsResponseBody); err == nil {
		u.FedexSettingsResponseBody = fedexSettingsResponseBody
		u.Type = GetCarrierSettingsResponseBodyTypeFedexSettingsResponseBody
		return nil
	}

	upsSettingsResponseBody := new(UpsSettingsResponseBody)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&upsSettingsResponseBody); err == nil {
		u.UpsSettingsResponseBody = upsSettingsResponseBody
		u.Type = GetCarrierSettingsResponseBodyTypeUpsSettingsResponseBody
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u GetCarrierSettingsResponseBody) MarshalJSON() ([]byte, error) {
	if u.DhlExpressSettingsResponseBody != nil {
		return json.Marshal(u.DhlExpressSettingsResponseBody)
	}

	if u.FedexSettingsResponseBody != nil {
		return json.Marshal(u.FedexSettingsResponseBody)
	}

	if u.UpsSettingsResponseBody != nil {
		return json.Marshal(u.UpsSettingsResponseBody)
	}

	return nil, nil
}
