/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The functional role of this IP
 */
export enum WritableIPAddressRoleEnum {
  Loopback = "loopback",
  Secondary = "secondary",
  Anycast = "anycast",
  Vip = "vip",
  Vrrp = "vrrp",
  Hsrp = "hsrp",
  Glbp = "glbp",
  Carp = "carp",
}

/**
 * The operational status of this IP
 */
export enum WritableIPAddressStatusEnum {
  Active = "active",
  Reserved = "reserved",
  Deprecated = "deprecated",
  Dhcp = "dhcp",
}

export class WritableIPAddressInput extends SpeakeasyBase {
  /**
   * IPv4 or IPv6 address (with mask)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Hostname or FQDN (not case-sensitive)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dns_name" })
  dnsName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "interface" })
  interface?: number;

  /**
   * The IP for which this address is the "outside" IP
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nat_inside" })
  natInside?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "nat_outside" })
  natOutside: number;

  /**
   * The functional role of this IP
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: WritableIPAddressRoleEnum;

  /**
   * The operational status of this IP
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: WritableIPAddressStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  tenant?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "vrf" })
  vrf?: number;
}
