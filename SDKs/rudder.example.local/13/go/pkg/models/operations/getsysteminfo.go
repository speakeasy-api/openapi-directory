// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/types"
)

// GetSystemInfo200ApplicationJSONActionEnum - The id of the action
type GetSystemInfo200ApplicationJSONActionEnum string

const (
	GetSystemInfo200ApplicationJSONActionEnumGetSystemInfo GetSystemInfo200ApplicationJSONActionEnum = "getSystemInfo"
)

func (e *GetSystemInfo200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "getSystemInfo":
		*e = GetSystemInfo200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSystemInfo200ApplicationJSONActionEnum: %s", s)
	}
}

type GetSystemInfo200ApplicationJSONDataRudder struct {
	BuildTime    types.Date `json:"build-time"`
	FullVersion  string     `json:"full-version"`
	MajorVersion string     `json:"major-version"`
}

// GetSystemInfo200ApplicationJSONData - Information about the service
type GetSystemInfo200ApplicationJSONData struct {
	Rudder GetSystemInfo200ApplicationJSONDataRudder `json:"rudder"`
}

// GetSystemInfo200ApplicationJSONResultEnum - Result of the request
type GetSystemInfo200ApplicationJSONResultEnum string

const (
	GetSystemInfo200ApplicationJSONResultEnumSuccess GetSystemInfo200ApplicationJSONResultEnum = "success"
	GetSystemInfo200ApplicationJSONResultEnumError   GetSystemInfo200ApplicationJSONResultEnum = "error"
)

func (e *GetSystemInfo200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = GetSystemInfo200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSystemInfo200ApplicationJSONResultEnum: %s", s)
	}
}

// GetSystemInfo200ApplicationJSON - Service information
type GetSystemInfo200ApplicationJSON struct {
	// The id of the action
	Action GetSystemInfo200ApplicationJSONActionEnum `json:"action"`
	// Information about the service
	Data GetSystemInfo200ApplicationJSONData `json:"data"`
	// Result of the request
	Result GetSystemInfo200ApplicationJSONResultEnum `json:"result"`
}

type GetSystemInfoResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Service information
	GetSystemInfo200ApplicationJSONObject *GetSystemInfo200ApplicationJSON
}
