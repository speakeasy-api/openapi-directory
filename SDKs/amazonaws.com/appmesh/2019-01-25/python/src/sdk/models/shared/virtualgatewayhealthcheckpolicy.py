"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import virtualgatewayportprotocol_enum as shared_virtualgatewayportprotocol_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VirtualGatewayHealthCheckPolicy:
    r"""An object that represents the health check policy for a virtual gateway's listener."""
    
    healthy_threshold: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('healthyThreshold') }})  
    interval_millis: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intervalMillis') }})  
    protocol: shared_virtualgatewayportprotocol_enum.VirtualGatewayPortProtocolEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol') }})  
    timeout_millis: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeoutMillis') }})  
    unhealthy_threshold: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unhealthyThreshold') }})  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})  
    port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('port'), 'exclude': lambda f: f is None }})  
    