/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ArtifactFormat {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentType")
    public String contentType;

    public ArtifactFormat withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileExtension")
    public String fileExtension;

    public ArtifactFormat withFileExtension(String fileExtension) {
        this.fileExtension = fileExtension;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forContentType")
    public String forContentType;

    public ArtifactFormat withForContentType(String forContentType) {
        this.forContentType = forContentType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;

    public ArtifactFormat withLabel(String label) {
        this.label = label;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preserveAspectRatio")
    public Boolean preserveAspectRatio;

    public ArtifactFormat withPreserveAspectRatio(Boolean preserveAspectRatio) {
        this.preserveAspectRatio = preserveAspectRatio;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public")
    public Boolean public_;

    public ArtifactFormat withPublic(Boolean public_) {
        this.public_ = public_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upscaleAllowed")
    public Boolean upscaleAllowed;

    public ArtifactFormat withUpscaleAllowed(Boolean upscaleAllowed) {
        this.upscaleAllowed = upscaleAllowed;
        return this;
    }
    
    public ArtifactFormat(){}
}
