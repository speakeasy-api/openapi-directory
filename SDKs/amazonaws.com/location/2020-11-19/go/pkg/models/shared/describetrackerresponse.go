// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeTrackerResponsePricingPlanEnum - Always returns <code>RequestBasedUsage</code>.Deprecated. Always returns RequestBasedUsage.
type DescribeTrackerResponsePricingPlanEnum string

const (
	DescribeTrackerResponsePricingPlanEnumRequestBasedUsage     DescribeTrackerResponsePricingPlanEnum = "RequestBasedUsage"
	DescribeTrackerResponsePricingPlanEnumMobileAssetTracking   DescribeTrackerResponsePricingPlanEnum = "MobileAssetTracking"
	DescribeTrackerResponsePricingPlanEnumMobileAssetManagement DescribeTrackerResponsePricingPlanEnum = "MobileAssetManagement"
)

func (e DescribeTrackerResponsePricingPlanEnum) ToPointer() *DescribeTrackerResponsePricingPlanEnum {
	return &e
}

func (e *DescribeTrackerResponsePricingPlanEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = DescribeTrackerResponsePricingPlanEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTrackerResponsePricingPlanEnum: %v", v)
	}
}

// DescribeTrackerResponse - Success
type DescribeTrackerResponse struct {
	CreateTime            time.Time                               `json:"CreateTime"`
	Description           string                                  `json:"Description"`
	KmsKeyID              *string                                 `json:"KmsKeyId,omitempty"`
	PositionFiltering     *PositionFilteringEnum                  `json:"PositionFiltering,omitempty"`
	PricingPlan           *DescribeTrackerResponsePricingPlanEnum `json:"PricingPlan,omitempty"`
	PricingPlanDataSource *string                                 `json:"PricingPlanDataSource,omitempty"`
	Tags                  map[string]string                       `json:"Tags,omitempty"`
	TrackerArn            string                                  `json:"TrackerArn"`
	TrackerName           string                                  `json:"TrackerName"`
	UpdateTime            time.Time                               `json:"UpdateTime"`
}
