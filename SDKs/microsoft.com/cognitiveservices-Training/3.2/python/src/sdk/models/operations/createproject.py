"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import customvisionerror as shared_customvisionerror
from ..shared import project as shared_project
from enum import Enum
from typing import Optional

class CreateProjectClassificationTypeEnum(str, Enum):
    r"""The type of classifier to create for this project."""
    MULTICLASS = 'Multiclass'
    MULTILABEL = 'Multilabel'

class CreateProjectTargetExportPlatformsEnum(str, Enum):
    CORE_ML = 'CoreML'
    TENSOR_FLOW = 'TensorFlow'
    DOCKER_FILE = 'DockerFile'
    ONNX = 'ONNX'
    VAIDK = 'VAIDK'


@dataclasses.dataclass
class CreateProjectRequest:
    
    name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""Name of the project."""  
    classification_type: Optional[CreateProjectClassificationTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'classificationType', 'style': 'form', 'explode': True }})
    r"""The type of classifier to create for this project."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'description', 'style': 'form', 'explode': True }})
    r"""The description of the project."""  
    domain_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'domainId', 'style': 'form', 'explode': True }})
    r"""The id of the domain to use for this project. Defaults to General."""  
    target_export_platforms: Optional[list[CreateProjectTargetExportPlatformsEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'targetExportPlatforms', 'style': 'form', 'explode': False }})
    r"""List of platforms the trained model is intending exporting to."""  
    

@dataclasses.dataclass
class CreateProjectResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    custom_vision_error: Optional[shared_customvisionerror.CustomVisionError] = dataclasses.field(default=None)
    r"""Error response"""  
    project: Optional[shared_project.Project] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    