// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesIDPersonsMemberIDPlayerPathParams struct {
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// memberId of the person
	MemberID string `pathParam:"style=simple,explode=false,name=memberId"`
}

type PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnum string

const (
	PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnumNo      PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnum = "no"
	PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnumManager PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnum = "manager"
	PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnumAdn     PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnum = "adn"
)

func (e *PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "no":
		fallthrough
	case "manager":
		fallthrough
	case "adn":
		*e = PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnum: %s", s)
	}
}

type PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum string

const (
	PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnumGuest        PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum = "guest"
	PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnumOwner        PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum = "owner"
	PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnumManager      PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum = "manager"
	PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnumAssistant    PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum = "assistant"
	PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnumCollaborator PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum = "collaborator"
)

func (e *PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "guest":
		fallthrough
	case "owner":
		fallthrough
	case "manager":
		fallthrough
	case "assistant":
		fallthrough
	case "collaborator":
		*e = PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum: %s", s)
	}
}

// PatchSpacesIDPersonsMemberIDPlayerRequestBody - Person to modify
type PatchSpacesIDPersonsMemberIDPlayerRequestBody struct {
	ClientManagement *PatchSpacesIDPersonsMemberIDPlayerRequestBodyClientManagementEnum `json:"ClientManagement,omitempty"`
	IsAdmin          *bool                                                              `json:"IsAdmin,omitempty"`
	Player           PatchSpacesIDPersonsMemberIDPlayerRequestBodyPlayerEnum            `json:"Player"`
	PlayerEnd        *string                                                            `json:"PlayerEnd,omitempty"`
}

type PatchSpacesIDPersonsMemberIDPlayerRequest struct {
	PathParams PatchSpacesIDPersonsMemberIDPlayerPathParams
	// Person to modify
	Request PatchSpacesIDPersonsMemberIDPlayerRequestBody `request:"mediaType=application/json"`
}

type PatchSpacesIDPersonsMemberIDPlayerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
