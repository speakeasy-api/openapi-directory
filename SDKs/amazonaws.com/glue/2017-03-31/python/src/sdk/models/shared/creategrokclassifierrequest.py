"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateGrokClassifierRequest:
    r"""Specifies a <code>grok</code> classifier for <code>CreateClassifier</code> to create."""
    
    classification: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Classification') }})  
    grok_pattern: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GrokPattern') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    custom_patterns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomPatterns'), 'exclude': lambda f: f is None }})  
    