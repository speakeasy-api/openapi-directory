/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AwsVmDetails - AwsVmDetails describes a VM in AWS.
 */
public class AwsVmDetails {
    /**
     * The CPU architecture.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("architecture")
    public AwsVmDetailsArchitectureEnum architecture;

    public AwsVmDetails withArchitecture(AwsVmDetailsArchitectureEnum architecture) {
        this.architecture = architecture;
        return this;
    }
    
    /**
     * The VM Boot Option.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bootOption")
    public AwsVmDetailsBootOptionEnum bootOption;

    public AwsVmDetails withBootOption(AwsVmDetailsBootOptionEnum bootOption) {
        this.bootOption = bootOption;
        return this;
    }
    
    /**
     * The total size of the storage allocated to the VM in MB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committedStorageMb")
    public String committedStorageMb;

    public AwsVmDetails withCommittedStorageMb(String committedStorageMb) {
        this.committedStorageMb = committedStorageMb;
        return this;
    }
    
    /**
     * The number of cpus the VM has.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuCount")
    public Integer cpuCount;

    public AwsVmDetails withCpuCount(Integer cpuCount) {
        this.cpuCount = cpuCount;
        return this;
    }
    
    /**
     * The number of disks the VM has.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskCount")
    public Integer diskCount;

    public AwsVmDetails withDiskCount(Integer diskCount) {
        this.diskCount = diskCount;
        return this;
    }
    
    /**
     * The display name of the VM. Note that this value is not necessarily unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public AwsVmDetails withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The instance type of the VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceType")
    public String instanceType;

    public AwsVmDetails withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    /**
     * The memory size of the VM in MB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryMb")
    public Integer memoryMb;

    public AwsVmDetails withMemoryMb(Integer memoryMb) {
        this.memoryMb = memoryMb;
        return this;
    }
    
    /**
     * The VM's OS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osDescription")
    public String osDescription;

    public AwsVmDetails withOsDescription(String osDescription) {
        this.osDescription = osDescription;
        return this;
    }
    
    /**
     * Output only. The power state of the VM at the moment list was taken.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("powerState")
    public AwsVmDetailsPowerStateEnum powerState;

    public AwsVmDetails withPowerState(AwsVmDetailsPowerStateEnum powerState) {
        this.powerState = powerState;
        return this;
    }
    
    /**
     * The security groups the VM belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityGroups")
    public AwsSecurityGroup[] securityGroups;

    public AwsVmDetails withSecurityGroups(AwsSecurityGroup[] securityGroups) {
        this.securityGroups = securityGroups;
        return this;
    }
    
    /**
     * The descriptive name of the AWS's source this VM is connected to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceDescription")
    public String sourceDescription;

    public AwsVmDetails withSourceDescription(String sourceDescription) {
        this.sourceDescription = sourceDescription;
        return this;
    }
    
    /**
     * The id of the AWS's source this VM is connected to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceId")
    public String sourceId;

    public AwsVmDetails withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    /**
     * The tags of the VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public AwsVmDetails withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The virtualization type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("virtualizationType")
    public AwsVmDetailsVirtualizationTypeEnum virtualizationType;

    public AwsVmDetails withVirtualizationType(AwsVmDetailsVirtualizationTypeEnum virtualizationType) {
        this.virtualizationType = virtualizationType;
        return this;
    }
    
    /**
     * The VM ID in AWS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmId")
    public String vmId;

    public AwsVmDetails withVmId(String vmId) {
        this.vmId = vmId;
        return this;
    }
    
    /**
     * The VPC ID the VM belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcId")
    public String vpcId;

    public AwsVmDetails withVpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }
    
    /**
     * The AWS zone of the VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;

    public AwsVmDetails withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
    public AwsVmDetails(){}
}
