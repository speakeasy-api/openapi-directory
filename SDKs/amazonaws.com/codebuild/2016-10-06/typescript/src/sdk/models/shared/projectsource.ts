/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BuildStatusConfig } from "./buildstatusconfig";
import { GitSubmodulesConfig } from "./gitsubmodulesconfig";
import { SourceAuth } from "./sourceauth";
import { SourceTypeEnum } from "./sourcetypeenum";
import { Expose, Type } from "class-transformer";

/**
 * Information about the build input source code for the build project.
 */
export class ProjectSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "auth" })
  @Type(() => SourceAuth)
  auth?: SourceAuth;

  @SpeakeasyMetadata()
  @Expose({ name: "buildStatusConfig" })
  @Type(() => BuildStatusConfig)
  buildStatusConfig?: BuildStatusConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "buildspec" })
  buildspec?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gitCloneDepth" })
  gitCloneDepth?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "gitSubmodulesConfig" })
  @Type(() => GitSubmodulesConfig)
  gitSubmodulesConfig?: GitSubmodulesConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "insecureSsl" })
  insecureSsl?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reportBuildStatus" })
  reportBuildStatus?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceIdentifier" })
  sourceIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: SourceTypeEnum;
}
