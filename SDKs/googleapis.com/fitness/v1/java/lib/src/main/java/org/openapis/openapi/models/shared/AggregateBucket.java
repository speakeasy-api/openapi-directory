/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AggregateBucket {
    /**
     * Available for Bucket.Type.ACTIVITY_TYPE, Bucket.Type.ACTIVITY_SEGMENT
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activity")
    public Integer activity;

    public AggregateBucket withActivity(Integer activity) {
        this.activity = activity;
        return this;
    }
    
    /**
     * There will be one dataset per AggregateBy in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataset")
    public Dataset[] dataset;

    public AggregateBucket withDataset(Dataset[] dataset) {
        this.dataset = dataset;
        return this;
    }
    
    /**
     * The end time for the aggregated data, in milliseconds since epoch, inclusive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTimeMillis")
    public String endTimeMillis;

    public AggregateBucket withEndTimeMillis(String endTimeMillis) {
        this.endTimeMillis = endTimeMillis;
        return this;
    }
    
    /**
     * Sessions contain metadata, such as a user-friendly name and time interval information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("session")
    public Session session;

    public AggregateBucket withSession(Session session) {
        this.session = session;
        return this;
    }
    
    /**
     * The start time for the aggregated data, in milliseconds since epoch, inclusive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTimeMillis")
    public String startTimeMillis;

    public AggregateBucket withStartTimeMillis(String startTimeMillis) {
        this.startTimeMillis = startTimeMillis;
        return this;
    }
    
    /**
     * The type of a bucket signifies how the data aggregation is performed in the bucket.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public AggregateBucketTypeEnum type;

    public AggregateBucket withType(AggregateBucketTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public AggregateBucket(){}
}
