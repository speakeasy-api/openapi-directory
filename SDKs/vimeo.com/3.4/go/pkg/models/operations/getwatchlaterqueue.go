// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetWatchLaterQueueSecurity struct {
	Oauth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// GetWatchLaterQueueDirectionEnum - The sort direction of the results.
type GetWatchLaterQueueDirectionEnum string

const (
	GetWatchLaterQueueDirectionEnumAsc  GetWatchLaterQueueDirectionEnum = "asc"
	GetWatchLaterQueueDirectionEnumDesc GetWatchLaterQueueDirectionEnum = "desc"
)

func (e *GetWatchLaterQueueDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetWatchLaterQueueDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWatchLaterQueueDirectionEnum: %s", s)
	}
}

// GetWatchLaterQueueFilterEnum - The attribute by which to filter the results.
type GetWatchLaterQueueFilterEnum string

const (
	GetWatchLaterQueueFilterEnumEmbeddable GetWatchLaterQueueFilterEnum = "embeddable"
)

func (e *GetWatchLaterQueueFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "embeddable":
		*e = GetWatchLaterQueueFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWatchLaterQueueFilterEnum: %s", s)
	}
}

// GetWatchLaterQueueSortEnum - The way to sort the results.
type GetWatchLaterQueueSortEnum string

const (
	GetWatchLaterQueueSortEnumAlphabetical GetWatchLaterQueueSortEnum = "alphabetical"
	GetWatchLaterQueueSortEnumComments     GetWatchLaterQueueSortEnum = "comments"
	GetWatchLaterQueueSortEnumDate         GetWatchLaterQueueSortEnum = "date"
	GetWatchLaterQueueSortEnumDuration     GetWatchLaterQueueSortEnum = "duration"
	GetWatchLaterQueueSortEnumLikes        GetWatchLaterQueueSortEnum = "likes"
	GetWatchLaterQueueSortEnumPlays        GetWatchLaterQueueSortEnum = "plays"
)

func (e *GetWatchLaterQueueSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "comments":
		fallthrough
	case "date":
		fallthrough
	case "duration":
		fallthrough
	case "likes":
		fallthrough
	case "plays":
		*e = GetWatchLaterQueueSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWatchLaterQueueSortEnum: %s", s)
	}
}

type GetWatchLaterQueueRequest struct {
	// The sort direction of the results.
	Direction *GetWatchLaterQueueDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetWatchLaterQueueFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
	FilterEmbeddable *bool `queryParam:"style=form,explode=true,name=filter_embeddable"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetWatchLaterQueueSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// The ID of the user.
	UserID float64 `pathParam:"style=simple,explode=false,name=user_id"`
}

type GetWatchLaterQueueResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The videos were returned.
	Videos []shared.Video
}
