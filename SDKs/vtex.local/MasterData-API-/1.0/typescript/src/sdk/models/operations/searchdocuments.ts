/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class SearchdocumentsRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Range of documents to show
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=REST-Range",
  })
  restRange: string;

  /**
   * Fields that will be returned by document
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=_fields",
  })
  fields?: string;

  /**
   * String to search
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=_keyword",
  })
  keyword?: string;

  /**
   * Enter with the name of the schema to filter documents by compatibility of the schema.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=_schema",
  })
  schema?: string;

  /**
   * Use ASC value to sort ascending or DESC value to sort descending.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=_sort" })
  sort?: string;

  /**
   * Specification of filters. As seen below
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=_where",
  })
  where?: string;

  /**
   * Identifies the kind of data
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=acronym",
  })
  acronym: string;
}

export class SearchdocumentsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Service Unavailable
   */
  @SpeakeasyMetadata()
  searchdocuments503ApplicationJSONAny?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
