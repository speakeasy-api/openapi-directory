/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListTeamMemberWagesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class ListTeamMemberWagesRequest extends SpeakeasyBase {
  /**
   * A pointer to the next page of `EmployeeWage` results to fetch.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * The maximum number of `TeamMemberWage` results to return per page. The number can range between
   *
   * @remarks
   * 1 and 200. The default is 200.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Filter the returned wages to only those that are associated with the
   *
   * @remarks
   * specified team member.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=team_member_id",
  })
  teamMemberId?: string;
}

export class ListTeamMemberWagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listTeamMemberWagesResponse?: shared.ListTeamMemberWagesResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
