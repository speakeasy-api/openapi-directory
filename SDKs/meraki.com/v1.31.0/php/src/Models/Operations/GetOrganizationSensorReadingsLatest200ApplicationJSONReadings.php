<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetOrganizationSensorReadingsLatest200ApplicationJSONReadings
{
    /**
     * Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsBattery $battery
     */
	#[\JMS\Serializer\Annotation\SerializedName('battery')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsBattery')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsBattery $battery = null;
    
    /**
     * Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsButton $button
     */
	#[\JMS\Serializer\Annotation\SerializedName('button')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsButton')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsButton $button = null;
    
    /**
     * Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsDoor $door
     */
	#[\JMS\Serializer\Annotation\SerializedName('door')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsDoor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsDoor $door = null;
    
    /**
     * Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsHumidity $humidity
     */
	#[\JMS\Serializer\Annotation\SerializedName('humidity')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsHumidity')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsHumidity $humidity = null;
    
    /**
     * Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsIndoorAirQuality $indoorAirQuality
     */
	#[\JMS\Serializer\Annotation\SerializedName('indoorAirQuality')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsIndoorAirQuality')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsIndoorAirQuality $indoorAirQuality = null;
    
    /**
     * Type of sensor reading.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsMetricEnum $metric
     */
	#[\JMS\Serializer\Annotation\SerializedName('metric')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsMetricEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsMetricEnum $metric = null;
    
    /**
     * Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsNoise $noise
     */
	#[\JMS\Serializer\Annotation\SerializedName('noise')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsNoise')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsNoise $noise = null;
    
    /**
     * Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsPm25 $pm25
     */
	#[\JMS\Serializer\Annotation\SerializedName('pm25')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsPm25')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsPm25 $pm25 = null;
    
    /**
     * Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTemperature $temperature
     */
	#[\JMS\Serializer\Annotation\SerializedName('temperature')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTemperature')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTemperature $temperature = null;
    
    /**
     * Time at which the reading occurred, in ISO8601 format.
     * 
     * @var ?string $ts
     */
	#[\JMS\Serializer\Annotation\SerializedName('ts')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ts = null;
    
    /**
     * Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTvoc $tvoc
     */
	#[\JMS\Serializer\Annotation\SerializedName('tvoc')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTvoc')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTvoc $tvoc = null;
    
    /**
     * Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsWater $water
     */
	#[\JMS\Serializer\Annotation\SerializedName('water')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsWater')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsWater $water = null;
    
	public function __construct()
	{
		$this->battery = null;
		$this->button = null;
		$this->door = null;
		$this->humidity = null;
		$this->indoorAirQuality = null;
		$this->metric = null;
		$this->noise = null;
		$this->pm25 = null;
		$this->temperature = null;
		$this->ts = null;
		$this->tvoc = null;
		$this->water = null;
	}
}
