/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UniversalDoNotContact - Represents a Universal (platform-wide) Do-Not-Contact object for a given phone number. Shows whether inbound/outbound actions are allowed for a given number.
 */
public class UniversalDoNotContact {
    /**
     * Optional source number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromNumber")
    public String fromNumber;
    public UniversalDoNotContact withFromNumber(String fromNumber) {
        this.fromNumber = fromNumber;
        return this;
    }
    
    /**
     * If toNumber can receive calls or If toNumber can call fromNumber.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inboundCall")
    public Boolean inboundCall;
    public UniversalDoNotContact withInboundCall(Boolean inboundCall) {
        this.inboundCall = inboundCall;
        return this;
    }
    
    /**
     * If toNumber can receive texts or If toNumber can text fromNumber.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inboundText")
    public Boolean inboundText;
    public UniversalDoNotContact withInboundText(Boolean inboundText) {
        this.inboundText = inboundText;
        return this;
    }
    
    /**
     * If toNumber can send calls or If fromNumber can call toNumber.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outboundCall")
    public Boolean outboundCall;
    public UniversalDoNotContact withOutboundCall(Boolean outboundCall) {
        this.outboundCall = outboundCall;
        return this;
    }
    
    /**
     * If toNumber can send texts or If fromNumber can text toNumber.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outboundText")
    public Boolean outboundText;
    public UniversalDoNotContact withOutboundText(Boolean outboundText) {
        this.outboundText = outboundText;
        return this;
    }
    
    /**
     * destination DNC number in E.164 format (11-digit). Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toNumber")
    public String toNumber;
    public UniversalDoNotContact withToNumber(String toNumber) {
        this.toNumber = toNumber;
        return this;
    }
    
}
