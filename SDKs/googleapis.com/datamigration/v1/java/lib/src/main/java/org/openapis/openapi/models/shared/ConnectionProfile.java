/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConnectionProfile - A connection profile definition.
 */
public class ConnectionProfile {
    /**
     * Specifies required connection parameters, and the parameters required to create an AlloyDB destination cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alloydb")
    public AlloyDbConnectionProfile alloydb;
    public ConnectionProfile withAlloydb(AlloyDbConnectionProfile alloydb) {
        this.alloydb = alloydb;
        return this;
    }
    
    /**
     * Specifies required connection parameters, and, optionally, the parameters required to create a Cloud SQL destination database instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudsql")
    public CloudSqlConnectionProfile cloudsql;
    public ConnectionProfile withCloudsql(CloudSqlConnectionProfile cloudsql) {
        this.cloudsql = cloudsql;
        return this;
    }
    
    /**
     * Output only. The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public ConnectionProfile withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The connection profile display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public ConnectionProfile withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;
    public ConnectionProfile withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public ConnectionProfile withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Specifies connection parameters required specifically for MySQL databases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mysql")
    public MySqlConnectionProfile mysql;
    public ConnectionProfile withMysql(MySqlConnectionProfile mysql) {
        this.mysql = mysql;
        return this;
    }
    
    /**
     * The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ConnectionProfile withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Specifies connection parameters required specifically for Oracle databases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oracle")
    public OracleConnectionProfile oracle;
    public ConnectionProfile withOracle(OracleConnectionProfile oracle) {
        this.oracle = oracle;
        return this;
    }
    
    /**
     * Specifies connection parameters required specifically for PostgreSQL databases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postgresql")
    public PostgreSqlConnectionProfile postgresql;
    public ConnectionProfile withPostgresql(PostgreSqlConnectionProfile postgresql) {
        this.postgresql = postgresql;
        return this;
    }
    
    /**
     * The database provider.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provider")
    public ConnectionProfileProviderEnum provider;
    public ConnectionProfile withProvider(ConnectionProfileProviderEnum provider) {
        this.provider = provider;
        return this;
    }
    
    /**
     * The current connection profile state (e.g. DRAFT, READY, or FAILED).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ConnectionProfileStateEnum state;
    public ConnectionProfile withState(ConnectionProfileStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public ConnectionProfile withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
