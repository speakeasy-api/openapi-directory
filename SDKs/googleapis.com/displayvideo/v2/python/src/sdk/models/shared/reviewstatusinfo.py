"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import exchangereviewstatus as shared_exchangereviewstatus
from ..shared import publisherreviewstatus as shared_publisherreviewstatus
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReviewStatusInfoApprovalStatusEnum(str, Enum):
    r"""Represents the basic approval needed for a creative to begin serving. Summary of creative_and_landing_page_review_status and content_and_policy_review_status."""
    APPROVAL_STATUS_UNSPECIFIED = 'APPROVAL_STATUS_UNSPECIFIED'
    APPROVAL_STATUS_PENDING_NOT_SERVABLE = 'APPROVAL_STATUS_PENDING_NOT_SERVABLE'
    APPROVAL_STATUS_PENDING_SERVABLE = 'APPROVAL_STATUS_PENDING_SERVABLE'
    APPROVAL_STATUS_APPROVED_SERVABLE = 'APPROVAL_STATUS_APPROVED_SERVABLE'
    APPROVAL_STATUS_REJECTED_NOT_SERVABLE = 'APPROVAL_STATUS_REJECTED_NOT_SERVABLE'

class ReviewStatusInfoContentAndPolicyReviewStatusEnum(str, Enum):
    r"""Content and policy review status for the creative."""
    REVIEW_STATUS_UNSPECIFIED = 'REVIEW_STATUS_UNSPECIFIED'
    REVIEW_STATUS_APPROVED = 'REVIEW_STATUS_APPROVED'
    REVIEW_STATUS_REJECTED = 'REVIEW_STATUS_REJECTED'
    REVIEW_STATUS_PENDING = 'REVIEW_STATUS_PENDING'

class ReviewStatusInfoCreativeAndLandingPageReviewStatusEnum(str, Enum):
    r"""Creative and landing page review status for the creative."""
    REVIEW_STATUS_UNSPECIFIED = 'REVIEW_STATUS_UNSPECIFIED'
    REVIEW_STATUS_APPROVED = 'REVIEW_STATUS_APPROVED'
    REVIEW_STATUS_REJECTED = 'REVIEW_STATUS_REJECTED'
    REVIEW_STATUS_PENDING = 'REVIEW_STATUS_PENDING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReviewStatusInfo:
    r"""Review statuses for the creative."""
    
    approval_status: Optional[ReviewStatusInfoApprovalStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approvalStatus'), 'exclude': lambda f: f is None }})
    r"""Represents the basic approval needed for a creative to begin serving. Summary of creative_and_landing_page_review_status and content_and_policy_review_status."""  
    content_and_policy_review_status: Optional[ReviewStatusInfoContentAndPolicyReviewStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentAndPolicyReviewStatus'), 'exclude': lambda f: f is None }})
    r"""Content and policy review status for the creative."""  
    creative_and_landing_page_review_status: Optional[ReviewStatusInfoCreativeAndLandingPageReviewStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeAndLandingPageReviewStatus'), 'exclude': lambda f: f is None }})
    r"""Creative and landing page review status for the creative."""  
    exchange_review_statuses: Optional[list[shared_exchangereviewstatus.ExchangeReviewStatus]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exchangeReviewStatuses'), 'exclude': lambda f: f is None }})
    r"""Exchange review statuses for the creative."""  
    publisher_review_statuses: Optional[list[shared_publisherreviewstatus.PublisherReviewStatus]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisherReviewStatuses'), 'exclude': lambda f: f is None }})
    r"""Publisher review statuses for the creative."""  
    