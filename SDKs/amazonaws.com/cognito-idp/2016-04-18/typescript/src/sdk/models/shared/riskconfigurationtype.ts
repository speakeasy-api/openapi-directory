/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountTakeoverRiskConfigurationType } from "./accounttakeoverriskconfigurationtype";
import { CompromisedCredentialsRiskConfigurationType } from "./compromisedcredentialsriskconfigurationtype";
import { RiskExceptionConfigurationType } from "./riskexceptionconfigurationtype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The risk configuration type.
 */
export class RiskConfigurationType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccountTakeoverRiskConfiguration" })
  @Type(() => AccountTakeoverRiskConfigurationType)
  accountTakeoverRiskConfiguration?: AccountTakeoverRiskConfigurationType;

  @SpeakeasyMetadata()
  @Expose({ name: "ClientId" })
  clientId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CompromisedCredentialsRiskConfiguration" })
  @Type(() => CompromisedCredentialsRiskConfigurationType)
  compromisedCredentialsRiskConfiguration?: CompromisedCredentialsRiskConfigurationType;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RiskExceptionConfiguration" })
  @Type(() => RiskExceptionConfigurationType)
  riskExceptionConfiguration?: RiskExceptionConfigurationType;

  @SpeakeasyMetadata()
  @Expose({ name: "UserPoolId" })
  userPoolId?: string;
}
