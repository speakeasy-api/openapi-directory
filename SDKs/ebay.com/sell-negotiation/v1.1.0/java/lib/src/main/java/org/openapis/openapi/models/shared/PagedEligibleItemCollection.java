/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PagedEligibleItemCollection - This complex type defines a collection of listings that are eligible for an offer to a buyer.
 */
public class PagedEligibleItemCollection {
    /**
     * A list of items that are eligible for a seller-initiated offer to a buyer. Each element in the list contains the listing ID of a listed item. These IDs represent the listings for which buyers have shown an interest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eligibleItems")
    public EligibleItem[] eligibleItems;

    public PagedEligibleItemCollection withEligibleItems(EligibleItem[] eligibleItems) {
        this.eligibleItems = eligibleItems;
        return this;
    }
    
    /**
     * The URI of the current page of results from the result set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("href")
    public String href;

    public PagedEligibleItemCollection withHref(String href) {
        this.href = href;
        return this;
    }
    
    /**
     * The number of items returned on a single page from the result set. This value can be set in the request with the limit query parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Integer limit;

    public PagedEligibleItemCollection withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The URI for the following page of results. This value is returned only if there is an additional page of results to display from the result set. Max length: 2048
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    public String next;

    public PagedEligibleItemCollection withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * The number of results skipped in the result set before listing the first returned result. This value can be set in the request with the offset query parameter. Note: The items in a paginated result set use a zero-based list where the first item in the list has an offset of 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Integer offset;

    public PagedEligibleItemCollection withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The URI for the preceding page of results. This value is returned only if there is a previous page of results to display from the result set. Max length: 2048
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev")
    public String prev;

    public PagedEligibleItemCollection withPrev(String prev) {
        this.prev = prev;
        return this;
    }
    
    /**
     * The total number of items retrieved in the result set. If no items match the search criteria, the server returns the HTTP status code 204 No Content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Integer total;

    public PagedEligibleItemCollection withTotal(Integer total) {
        this.total = total;
        return this;
    }
    
    public PagedEligibleItemCollection(){}
}
