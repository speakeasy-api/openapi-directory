// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AcceptHandshakeXAmzTargetEnum
type AcceptHandshakeXAmzTargetEnum string

const (
	AcceptHandshakeXAmzTargetEnumAwsOrganizationsV20161128AcceptHandshake AcceptHandshakeXAmzTargetEnum = "AWSOrganizationsV20161128.AcceptHandshake"
)

func (e AcceptHandshakeXAmzTargetEnum) ToPointer() *AcceptHandshakeXAmzTargetEnum {
	return &e
}

func (e *AcceptHandshakeXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSOrganizationsV20161128.AcceptHandshake":
		*e = AcceptHandshakeXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AcceptHandshakeXAmzTargetEnum: %v", v)
	}
}

type AcceptHandshakeRequest struct {
	AcceptHandshakeRequest shared.AcceptHandshakeRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             AcceptHandshakeXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AcceptHandshakeResponse struct {
	// AWSOrganizationsNotInUseException
	AWSOrganizationsNotInUseException interface{}
	// Success
	AcceptHandshakeResponse *shared.AcceptHandshakeResponse
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccessDeniedForDependencyException
	AccessDeniedForDependencyException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// HandshakeAlreadyInStateException
	HandshakeAlreadyInStateException interface{}
	// HandshakeConstraintViolationException
	HandshakeConstraintViolationException interface{}
	// HandshakeNotFoundException
	HandshakeNotFoundException interface{}
	// InvalidHandshakeTransitionException
	InvalidHandshakeTransitionException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ServiceException
	ServiceException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
