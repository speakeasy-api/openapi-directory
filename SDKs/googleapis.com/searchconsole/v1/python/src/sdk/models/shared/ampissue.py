"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AmpIssueSeverityEnum(str, Enum):
    r"""Severity of this issue: WARNING or ERROR."""
    SEVERITY_UNSPECIFIED = 'SEVERITY_UNSPECIFIED'
    WARNING = 'WARNING'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AmpIssue:
    r"""AMP issue."""
    
    issue_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issueMessage'), 'exclude': lambda f: f is None }})
    r"""Brief description of this issue."""  
    severity: Optional[AmpIssueSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity'), 'exclude': lambda f: f is None }})
    r"""Severity of this issue: WARNING or ERROR."""  
    