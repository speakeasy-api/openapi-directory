/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DocumentsTarget } from "./documentstarget";
import { QueryTarget } from "./querytarget";
import { Expose, Type } from "class-transformer";

/**
 * A specification of a set of documents to listen to.
 */
export class Target extends SpeakeasyBase {
  /**
   * A target specified by a set of documents names.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documents" })
  @Type(() => DocumentsTarget)
  documents?: DocumentsTarget;

  /**
   * If the target should be removed once it is current and consistent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "once" })
  once?: boolean;

  /**
   * A target specified by a query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  @Type(() => QueryTarget)
  query?: QueryTarget;

  /**
   * Start listening after a specific `read_time`. The client must know the state of matching documents at this time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readTime" })
  readTime?: string;

  /**
   * A resume token from a prior TargetChange for an identical target. Using a resume token with a different target is unsupported and may fail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resumeToken" })
  resumeToken?: string;

  /**
   * The target ID that identifies the target on the stream. Must be a positive number and non-zero.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetId" })
  targetId?: number;
}
