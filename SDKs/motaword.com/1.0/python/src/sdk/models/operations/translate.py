"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import instanttranslationrequest as shared_instanttranslationrequest
from typing import Any, Optional


@dataclasses.dataclass
class TranslateRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Continuous project ID"""  
    target_language: str = dataclasses.field(metadata={'path_param': { 'field_name': 'targetLanguage', 'style': 'simple', 'explode': False }})
    r"""Target language that you want to instantly translate your file into."""  
    instant_translation_request: Optional[shared_instanttranslationrequest.InstantTranslationRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class TranslateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    instant_translation_result: Optional[Any] = dataclasses.field(default=None)
    r"""Instant translation result. It may return a list of translated strings, or a list of translated files."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    