/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2FieldId } from "./googleprivacydlpv2fieldid";
import { Expose, Type } from "class-transformer";

/**
 * l-diversity metric, used for analysis of reidentification risk.
 */
export class GooglePrivacyDlpV2LDiversityConfig extends SpeakeasyBase {
  /**
   * Set of quasi-identifiers indicating how equivalence classes are defined for the l-diversity computation. When multiple fields are specified, they are considered a single composite key.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2FieldId })
  @Expose({ name: "quasiIds" })
  @Type(() => GooglePrivacyDlpV2FieldId)
  quasiIds?: GooglePrivacyDlpV2FieldId[];

  /**
   * General identifier of a data field in a storage service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sensitiveAttribute" })
  @Type(() => GooglePrivacyDlpV2FieldId)
  sensitiveAttribute?: GooglePrivacyDlpV2FieldId;
}
