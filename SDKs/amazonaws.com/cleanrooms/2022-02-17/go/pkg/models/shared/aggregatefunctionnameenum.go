// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AggregateFunctionNameEnum string

const (
	AggregateFunctionNameEnumSum           AggregateFunctionNameEnum = "SUM"
	AggregateFunctionNameEnumSumDistinct   AggregateFunctionNameEnum = "SUM_DISTINCT"
	AggregateFunctionNameEnumCount         AggregateFunctionNameEnum = "COUNT"
	AggregateFunctionNameEnumCountDistinct AggregateFunctionNameEnum = "COUNT_DISTINCT"
	AggregateFunctionNameEnumAvg           AggregateFunctionNameEnum = "AVG"
)

func (e AggregateFunctionNameEnum) ToPointer() *AggregateFunctionNameEnum {
	return &e
}

func (e *AggregateFunctionNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUM":
		fallthrough
	case "SUM_DISTINCT":
		fallthrough
	case "COUNT":
		fallthrough
	case "COUNT_DISTINCT":
		fallthrough
	case "AVG":
		*e = AggregateFunctionNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregateFunctionNameEnum: %v", v)
	}
}
