<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Returnpolicyonline 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Creates a new return policy.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateResponse
     */
	public function contentReturnpolicyonlineCreate(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicyonline', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "returnPolicyOnlineInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineCreateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->returnPolicyOnline = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ReturnPolicyOnline', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Deletes an existing return policy.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteResponse
     */
	public function contentReturnpolicyonlineDelete(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicyonline/{returnPolicyId}', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Gets an existing return policy.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetResponse
     */
	public function contentReturnpolicyonlineGet(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicyonline/{returnPolicyId}', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->returnPolicyOnline = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ReturnPolicyOnline', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists all existing return policies.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListResponse
     */
	public function contentReturnpolicyonlineList(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicyonline', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlineListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listReturnPolicyOnlineResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListReturnPolicyOnlineResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates an existing return policy.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchResponse
     */
	public function contentReturnpolicyonlinePatch(
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/returnpolicyonline/{returnPolicyId}', \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "returnPolicyOnlineInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentReturnpolicyonlinePatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->returnPolicyOnline = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ReturnPolicyOnline', 'json');
            }
        }

        return $response;
    }
}