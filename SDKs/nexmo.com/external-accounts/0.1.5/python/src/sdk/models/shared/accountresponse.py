"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountResponseProviderEnum(str, Enum):
    r"""The provider (will be one of `messenger, viber_service_msg, whatsapp`)."""
    MESSENGER = 'messenger'
    VIBER_SERVICE_MSG = 'viber_service_msg'
    WHATSAPP = 'whatsapp'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountResponse:
    r"""OK."""
    
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    r"""The external api key for this account"""  
    external_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('external_id') }})
    r"""The external identifier for this account"""  
    provider: AccountResponseProviderEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provider') }})
    r"""The provider (will be one of `messenger, viber_service_msg, whatsapp`)."""  
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token'), 'exclude': lambda f: f is None }})
    r"""The provider access token (only for `messenger`)"""  
    applications: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applications'), 'exclude': lambda f: f is None }})
    r"""The array of associated application ids"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The account name"""  
    