// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AdminInitiateAuthXAmzTargetEnum
type AdminInitiateAuthXAmzTargetEnum string

const (
	AdminInitiateAuthXAmzTargetEnumAwsCognitoIdentityProviderServiceAdminInitiateAuth AdminInitiateAuthXAmzTargetEnum = "AWSCognitoIdentityProviderService.AdminInitiateAuth"
)

func (e AdminInitiateAuthXAmzTargetEnum) ToPointer() *AdminInitiateAuthXAmzTargetEnum {
	return &e
}

func (e *AdminInitiateAuthXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSCognitoIdentityProviderService.AdminInitiateAuth":
		*e = AdminInitiateAuthXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AdminInitiateAuthXAmzTargetEnum: %v", v)
	}
}

type AdminInitiateAuthRequest struct {
	AdminInitiateAuthRequest shared.AdminInitiateAuthRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               AdminInitiateAuthXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AdminInitiateAuthResponse struct {
	// Success
	AdminInitiateAuthResponse *shared.AdminInitiateAuthResponse
	ContentType               string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidLambdaResponseException
	InvalidLambdaResponseException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidSmsRoleAccessPolicyException
	InvalidSmsRoleAccessPolicyException interface{}
	// InvalidSmsRoleTrustRelationshipException
	InvalidSmsRoleTrustRelationshipException interface{}
	// InvalidUserPoolConfigurationException
	InvalidUserPoolConfigurationException interface{}
	// MFAMethodNotFoundException
	MFAMethodNotFoundException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// PasswordResetRequiredException
	PasswordResetRequiredException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnexpectedLambdaException
	UnexpectedLambdaException interface{}
	// UserLambdaValidationException
	UserLambdaValidationException interface{}
	// UserNotConfirmedException
	UserNotConfirmedException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
}
