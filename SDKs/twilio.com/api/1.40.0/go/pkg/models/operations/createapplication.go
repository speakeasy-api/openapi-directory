// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateApplicationServerList = []string{
	"https://api.twilio.com",
}

type CreateApplicationSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type CreateApplicationPathParams struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
	AccountSid string `pathParam:"style=simple,explode=false,name=AccountSid"`
}

// CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum - The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`.
type CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum string

const (
	CreateApplicationCreateApplicationRequestSmsFallbackMethodEnumHead   CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum = "HEAD"
	CreateApplicationCreateApplicationRequestSmsFallbackMethodEnumGet    CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum = "GET"
	CreateApplicationCreateApplicationRequestSmsFallbackMethodEnumPost   CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum = "POST"
	CreateApplicationCreateApplicationRequestSmsFallbackMethodEnumPatch  CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum = "PATCH"
	CreateApplicationCreateApplicationRequestSmsFallbackMethodEnumPut    CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum = "PUT"
	CreateApplicationCreateApplicationRequestSmsFallbackMethodEnumDelete CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum = "DELETE"
)

func (e *CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum: %s", s)
	}
}

// CreateApplicationCreateApplicationRequestSmsMethodEnum - The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`.
type CreateApplicationCreateApplicationRequestSmsMethodEnum string

const (
	CreateApplicationCreateApplicationRequestSmsMethodEnumHead   CreateApplicationCreateApplicationRequestSmsMethodEnum = "HEAD"
	CreateApplicationCreateApplicationRequestSmsMethodEnumGet    CreateApplicationCreateApplicationRequestSmsMethodEnum = "GET"
	CreateApplicationCreateApplicationRequestSmsMethodEnumPost   CreateApplicationCreateApplicationRequestSmsMethodEnum = "POST"
	CreateApplicationCreateApplicationRequestSmsMethodEnumPatch  CreateApplicationCreateApplicationRequestSmsMethodEnum = "PATCH"
	CreateApplicationCreateApplicationRequestSmsMethodEnumPut    CreateApplicationCreateApplicationRequestSmsMethodEnum = "PUT"
	CreateApplicationCreateApplicationRequestSmsMethodEnumDelete CreateApplicationCreateApplicationRequestSmsMethodEnum = "DELETE"
)

func (e *CreateApplicationCreateApplicationRequestSmsMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateApplicationCreateApplicationRequestSmsMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateApplicationCreateApplicationRequestSmsMethodEnum: %s", s)
	}
}

// CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum - The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST`.
type CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum string

const (
	CreateApplicationCreateApplicationRequestStatusCallbackMethodEnumHead   CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum = "HEAD"
	CreateApplicationCreateApplicationRequestStatusCallbackMethodEnumGet    CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum = "GET"
	CreateApplicationCreateApplicationRequestStatusCallbackMethodEnumPost   CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum = "POST"
	CreateApplicationCreateApplicationRequestStatusCallbackMethodEnumPatch  CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum = "PATCH"
	CreateApplicationCreateApplicationRequestStatusCallbackMethodEnumPut    CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum = "PUT"
	CreateApplicationCreateApplicationRequestStatusCallbackMethodEnumDelete CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum = "DELETE"
)

func (e *CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum: %s", s)
	}
}

// CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum - The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
type CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum string

const (
	CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnumHead   CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum = "HEAD"
	CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnumGet    CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum = "GET"
	CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnumPost   CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum = "POST"
	CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnumPatch  CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum = "PATCH"
	CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnumPut    CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum = "PUT"
	CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnumDelete CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum = "DELETE"
)

func (e *CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum: %s", s)
	}
}

// CreateApplicationCreateApplicationRequestVoiceMethodEnum - The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
type CreateApplicationCreateApplicationRequestVoiceMethodEnum string

const (
	CreateApplicationCreateApplicationRequestVoiceMethodEnumHead   CreateApplicationCreateApplicationRequestVoiceMethodEnum = "HEAD"
	CreateApplicationCreateApplicationRequestVoiceMethodEnumGet    CreateApplicationCreateApplicationRequestVoiceMethodEnum = "GET"
	CreateApplicationCreateApplicationRequestVoiceMethodEnumPost   CreateApplicationCreateApplicationRequestVoiceMethodEnum = "POST"
	CreateApplicationCreateApplicationRequestVoiceMethodEnumPatch  CreateApplicationCreateApplicationRequestVoiceMethodEnum = "PATCH"
	CreateApplicationCreateApplicationRequestVoiceMethodEnumPut    CreateApplicationCreateApplicationRequestVoiceMethodEnum = "PUT"
	CreateApplicationCreateApplicationRequestVoiceMethodEnumDelete CreateApplicationCreateApplicationRequestVoiceMethodEnum = "DELETE"
)

func (e *CreateApplicationCreateApplicationRequestVoiceMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateApplicationCreateApplicationRequestVoiceMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateApplicationCreateApplicationRequestVoiceMethodEnum: %s", s)
	}
}

type CreateApplicationCreateApplicationRequest struct {
	// The API version to use to start a new TwiML session. Can be: `2010-04-01` or `2008-08-01`. The default value is the account's default API version.
	APIVersion *string `form:"name=ApiVersion"`
	// A descriptive string that you create to describe the new application. It can be up to 64 characters long.
	FriendlyName *string `form:"name=FriendlyName"`
	// The URL we should call using a POST method to send message status information to your application.
	MessageStatusCallback *string `form:"name=MessageStatusCallback"`
	// Whether to allow other Twilio accounts to dial this applicaton using Dial verb. Can be: `true` or `false`.
	PublicApplicationConnectEnabled *bool `form:"name=PublicApplicationConnectEnabled"`
	// The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`.
	SmsFallbackMethod *CreateApplicationCreateApplicationRequestSmsFallbackMethodEnum `form:"name=SmsFallbackMethod"`
	// The URL that we should call when an error occurs while retrieving or executing the TwiML from `sms_url`.
	SmsFallbackURL *string `form:"name=SmsFallbackUrl"`
	// The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`.
	SmsMethod *CreateApplicationCreateApplicationRequestSmsMethodEnum `form:"name=SmsMethod"`
	// The URL we should call using a POST method to send status information about SMS messages sent by the application.
	SmsStatusCallback *string `form:"name=SmsStatusCallback"`
	// The URL we should call when the phone number receives an incoming SMS message.
	SmsURL *string `form:"name=SmsUrl"`
	// The URL we should call using the `status_callback_method` to send status information to your application.
	StatusCallback *string `form:"name=StatusCallback"`
	// The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST`.
	StatusCallbackMethod *CreateApplicationCreateApplicationRequestStatusCallbackMethodEnum `form:"name=StatusCallbackMethod"`
	// Whether we should look up the caller's caller-ID name from the CNAM database (additional charges apply). Can be: `true` or `false`.
	VoiceCallerIDLookup *bool `form:"name=VoiceCallerIdLookup"`
	// The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
	VoiceFallbackMethod *CreateApplicationCreateApplicationRequestVoiceFallbackMethodEnum `form:"name=VoiceFallbackMethod"`
	// The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
	VoiceFallbackURL *string `form:"name=VoiceFallbackUrl"`
	// The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
	VoiceMethod *CreateApplicationCreateApplicationRequestVoiceMethodEnum `form:"name=VoiceMethod"`
	// The URL we should call when the phone number assigned to this application receives a call.
	VoiceURL *string `form:"name=VoiceUrl"`
}

type CreateApplicationRequest struct {
	PathParams CreateApplicationPathParams
	Request    *CreateApplicationCreateApplicationRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   CreateApplicationSecurity
	ServerURL  *string
}

type CreateApplicationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	APIV2010AccountApplication *shared.APIV2010AccountApplication
}
