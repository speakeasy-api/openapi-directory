/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * CsvMessagesInbound - Inbound Messages
 */
public class CsvMessagesInbound {
    /**
     * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_id")
    public String accountId;
    public CsvMessagesInbound withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Currency of the price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public CsvMessagesInbound withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Date of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_received")
    public LocalDate dateReceived;
    public CsvMessagesInbound withDateReceived(LocalDate dateReceived) {
        this.dateReceived = dateReceived;
        return this;
    }
    
    /**
     * Direction of the communication, either `inbound` (received by our services), or `outbound` (originated from our services). Required for products `SMS` and `MESSAGES`. Optional for `VOICE-CALL`. Invalid for `IN-APP-VOICE`, `CONVERSATIONS`, `NUMBER-INSIGHT`, `VERIFY-API`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public DirectionEnum direction;
    public CsvMessagesInbound withDirection(DirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Request from this number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;
    public CsvMessagesInbound withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Body of the message sent. Only present if include_message parameter is set to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_body")
    public String messageBody;
    public CsvMessagesInbound withMessageBody(String messageBody) {
        this.messageBody = messageBody;
        return this;
    }
    
    /**
     * Id of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_id")
    public String messageId;
    public CsvMessagesInbound withMessageId(String messageId) {
        this.messageId = messageId;
        return this;
    }
    
    /**
     * Provider of the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provider")
    public String provider;
    public CsvMessagesInbound withProvider(String provider) {
        this.provider = provider;
        return this;
    }
    
    /**
     * Request to this number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;
    public CsvMessagesInbound withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * Total price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_price")
    public Double totalPrice;
    public CsvMessagesInbound withTotalPrice(Double totalPrice) {
        this.totalPrice = totalPrice;
        return this;
    }
    
}
