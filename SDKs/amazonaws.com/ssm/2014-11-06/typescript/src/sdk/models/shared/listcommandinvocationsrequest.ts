/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommandFilter } from "./commandfilter";
import { Expose, Type } from "class-transformer";

export class ListCommandInvocationsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CommandId" })
  commandId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Details" })
  details?: boolean;

  @SpeakeasyMetadata({ elemType: CommandFilter })
  @Expose({ name: "Filters" })
  @Type(() => CommandFilter)
  filters?: CommandFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceId" })
  instanceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;
}
