"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var domesticpayments_1 = require("./domesticpayments");
var domesticscheduledpayments_1 = require("./domesticscheduledpayments");
var domesticstandingorders_1 = require("./domesticstandingorders");
var filepayments_1 = require("./filepayments");
var internationalpayments_1 = require("./internationalpayments");
var internationalscheduledpayments_1 = require("./internationalscheduledpayments");
var internationalstandingorders_1 = require("./internationalstandingorders");
var paymentdetails_1 = require("./paymentdetails");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = [
    "https://openbanking.org.uk",
    "/open-banking/v3.1/pisp",
];
/**
 * Swagger for Payment Initiation API Specification
 */
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.domesticPayments = new domesticpayments_1.DomesticPayments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.domesticScheduledPayments = new domesticscheduledpayments_1.DomesticScheduledPayments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.domesticStandingOrders = new domesticstandingorders_1.DomesticStandingOrders(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.filePayments = new filepayments_1.FilePayments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.internationalPayments = new internationalpayments_1.InternationalPayments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.internationalScheduledPayments = new internationalscheduledpayments_1.InternationalScheduledPayments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.internationalStandingOrders = new internationalstandingorders_1.InternationalStandingOrders(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentDetails = new paymentdetails_1.PaymentDetails(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
