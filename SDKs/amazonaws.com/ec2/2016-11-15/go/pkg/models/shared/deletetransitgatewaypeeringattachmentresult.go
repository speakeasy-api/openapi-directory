// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentAccepterTgwInfo - Information about the accepter transit gateway.
type DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentAccepterTgwInfo struct {
	CoreNetworkID    *string
	OwnerID          *string
	Region           *string
	TransitGatewayID *string
}

// DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum - Describes whether dynamic routing is enabled or disabled for the transit gateway peering attachment.
type DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum string

const (
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnumEnable  DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum = "enable"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnumDisable DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum = "disable"
)

func (e DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum) ToPointer() *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum {
	return &e
}

func (e *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enable":
		fallthrough
	case "disable":
		*e = DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum: %v", v)
	}
}

// DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptions - Details about the transit gateway peering attachment.
type DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptions struct {
	DynamicRouting *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum
}

// DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentRequesterTgwInfo - Information about the requester transit gateway.
type DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentRequesterTgwInfo struct {
	CoreNetworkID    *string
	OwnerID          *string
	Region           *string
	TransitGatewayID *string
}

// DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum - The state of the transit gateway peering attachment. Note that the <code>initiating</code> state has been deprecated.
type DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum string

const (
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumInitiating        DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "initiating"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumInitiatingRequest DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "initiatingRequest"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumPendingAcceptance DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "pendingAcceptance"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumRollingBack       DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "rollingBack"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumPending           DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "pending"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumAvailable         DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "available"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumModifying         DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "modifying"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumDeleting          DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "deleting"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumDeleted           DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "deleted"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumFailed            DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "failed"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumRejected          DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "rejected"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumRejecting         DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "rejecting"
	DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumFailing           DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "failing"
)

func (e DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum) ToPointer() *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum {
	return &e
}

func (e *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initiating":
		fallthrough
	case "initiatingRequest":
		fallthrough
	case "pendingAcceptance":
		fallthrough
	case "rollingBack":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		fallthrough
	case "rejected":
		fallthrough
	case "rejecting":
		fallthrough
	case "failing":
		*e = DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum: %v", v)
	}
}

// DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStatus - The status of the transit gateway peering attachment.
type DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStatus struct {
	Code    *string
	Message *string
}

// DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags - Describes a tag.
type DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags struct {
	Key   *string
	Value *string
}

// DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachment - The transit gateway peering attachment.
type DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachment struct {
	AccepterTgwInfo                    *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentAccepterTgwInfo
	AccepterTransitGatewayAttachmentID *string
	CreationTime                       *time.Time
	Options                            *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptions
	RequesterTgwInfo                   *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentRequesterTgwInfo
	State                              *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum
	Status                             *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStatus
	Tags                               []DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags
	TransitGatewayAttachmentID         *string
}

// DeleteTransitGatewayPeeringAttachmentResult - Success
type DeleteTransitGatewayPeeringAttachmentResult struct {
	TransitGatewayPeeringAttachment *DeleteTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachment
}
