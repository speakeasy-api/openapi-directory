/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoTopUpConfigV3 } from "./autotopupconfigv3";
import { NotificationsV3 } from "./notificationsv3";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Source account response
 */
export class SourceAccountResponseV3 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "autoTopUpConfig" })
  @Type(() => AutoTopUpConfigV3)
  autoTopUpConfig?: AutoTopUpConfigV3;

  /**
   * Decimal implied
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  /**
   * Valid ISO 3166 2 character country code. See the <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a>ISO specification</a> for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customerId" })
  customerId?: string;

  /**
   * An optional flag for whether the source account has been deleted. Only present in the response if true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  /**
   * An optional timestamp when the source account has been deleted. Only present in the response if deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deletedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deletedAt?: Date;

  /**
   * The funding reference (will not be set for DECOUPLED accounts).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fundingRef" })
  fundingRef?: string;

  /**
   * Source Account Id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notifications" })
  @Type(() => NotificationsV3)
  notifications?: NotificationsV3;

  @SpeakeasyMetadata()
  @Expose({ name: "payorId" })
  payorId?: string;

  /**
   * The physical account id (will not be set for DECOUPLED accounts).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "physicalAccountId" })
  physicalAccountId?: string;

  /**
   * The physical account name (will not be set for DECOUPLED accounts).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "physicalAccountName" })
  physicalAccountName?: string;

  /**
   * The pooled account flag (will not be set for DECOUPLED accounts).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pooled" })
  pooled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "railsId" })
  railsId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  /**
   * An optional flag for whether the source account has been deleted by a user. Only present in the response if true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userDeleted" })
  userDeleted?: boolean;
}
