/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HttpsHealthCheck1 - Represents a legacy HTTPS Health Check resource. Legacy HTTPS health checks have been deprecated. If you are using a target pool-based network load balancer, you must use a legacy HTTP (not HTTPS) health check. For all other load balancers, including backend service-based network load balancers, and for managed instance group auto-healing, you must use modern (non-legacy) health checks. For more information, see Health checks overview .
 */
public class HttpsHealthCheck1 {
    /**
     * How often (in seconds) to send a health check. The default value is 5 seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkIntervalSec")
    public Integer checkIntervalSec;
    public HttpsHealthCheck1 withCheckIntervalSec(Integer checkIntervalSec) {
        this.checkIntervalSec = checkIntervalSec;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public HttpsHealthCheck1 withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public HttpsHealthCheck1 withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("healthyThreshold")
    public Integer healthyThreshold;
    public HttpsHealthCheck1 withHealthyThreshold(Integer healthyThreshold) {
        this.healthyThreshold = healthyThreshold;
        return this;
    }
    
    /**
     * The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host")
    public String host;
    public HttpsHealthCheck1 withHost(String host) {
        this.host = host;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public HttpsHealthCheck1 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Type of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public HttpsHealthCheck1 withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public HttpsHealthCheck1 withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The TCP port number for the HTTPS health check request. The default value is 443.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public Integer port;
    public HttpsHealthCheck1 withPort(Integer port) {
        this.port = port;
        return this;
    }
    
    /**
     * The request path of the HTTPS health check request. The default value is "/". Must comply with RFC3986.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestPath")
    public String requestPath;
    public HttpsHealthCheck1 withRequestPath(String requestPath) {
        this.requestPath = requestPath;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public HttpsHealthCheck1 withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource with the resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;
    public HttpsHealthCheck1 withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have a greater value than checkIntervalSec.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeoutSec")
    public Integer timeoutSec;
    public HttpsHealthCheck1 withTimeoutSec(Integer timeoutSec) {
        this.timeoutSec = timeoutSec;
        return this;
    }
    
    /**
     * A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unhealthyThreshold")
    public Integer unhealthyThreshold;
    public HttpsHealthCheck1 withUnhealthyThreshold(Integer unhealthyThreshold) {
        this.unhealthyThreshold = unhealthyThreshold;
        return this;
    }
    
}
