"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import listproperties as shared_listproperties
from ..shared import suggestedlistproperties as shared_suggestedlistproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class List:
    r"""A List represents the list attributes for a group of paragraphs that all belong to the same list. A paragraph that's part of a list has a reference to the list's ID in its bullet."""
    
    list_properties: Optional[shared_listproperties.ListProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listProperties'), 'exclude': lambda f: f is None }})
    r"""The properties of a list that describe the look and feel of bullets belonging to paragraphs associated with a list."""  
    suggested_deletion_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestedDeletionIds'), 'exclude': lambda f: f is None }})
    r"""The suggested deletion IDs. If empty, then there are no suggested deletions of this list."""  
    suggested_insertion_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestedInsertionId'), 'exclude': lambda f: f is None }})
    r"""The suggested insertion ID. If empty, then this is not a suggested insertion."""  
    suggested_list_properties_changes: Optional[dict[str, shared_suggestedlistproperties.SuggestedListProperties]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestedListPropertiesChanges'), 'exclude': lambda f: f is None }})
    r"""The suggested changes to the list properties, keyed by suggestion ID."""  
    