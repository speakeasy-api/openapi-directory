// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateDefaultSubnetActionEnum
type GETCreateDefaultSubnetActionEnum string

const (
	GETCreateDefaultSubnetActionEnumCreateDefaultSubnet GETCreateDefaultSubnetActionEnum = "CreateDefaultSubnet"
)

func (e GETCreateDefaultSubnetActionEnum) ToPointer() *GETCreateDefaultSubnetActionEnum {
	return &e
}

func (e *GETCreateDefaultSubnetActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateDefaultSubnet":
		*e = GETCreateDefaultSubnetActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDefaultSubnetActionEnum: %v", v)
	}
}

// GETCreateDefaultSubnetVersionEnum
type GETCreateDefaultSubnetVersionEnum string

const (
	GETCreateDefaultSubnetVersionEnumTwoThousandAndSixteen1115 GETCreateDefaultSubnetVersionEnum = "2016-11-15"
)

func (e GETCreateDefaultSubnetVersionEnum) ToPointer() *GETCreateDefaultSubnetVersionEnum {
	return &e
}

func (e *GETCreateDefaultSubnetVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETCreateDefaultSubnetVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDefaultSubnetVersionEnum: %v", v)
	}
}

type GETCreateDefaultSubnetRequest struct {
	Action GETCreateDefaultSubnetActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The Availability Zone in which to create the default subnet.
	AvailabilityZone string `queryParam:"style=form,explode=true,name=AvailabilityZone"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// Indicates whether to create an IPv6 only subnet. If you already have a default subnet for this Availability Zone, you must delete it before you can create an IPv6 only subnet.
	Ipv6Native        *bool                             `queryParam:"style=form,explode=true,name=Ipv6Native"`
	Version           GETCreateDefaultSubnetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateDefaultSubnetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
