// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCopyImageActionEnum
type POSTCopyImageActionEnum string

const (
	POSTCopyImageActionEnumCopyImage POSTCopyImageActionEnum = "CopyImage"
)

func (e *POSTCopyImageActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CopyImage":
		*e = POSTCopyImageActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCopyImageActionEnum: %s", s)
	}
}

// POSTCopyImageVersionEnum
type POSTCopyImageVersionEnum string

const (
	POSTCopyImageVersionEnumTwoThousandAndSixteen1115 POSTCopyImageVersionEnum = "2016-11-15"
)

func (e *POSTCopyImageVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTCopyImageVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCopyImageVersionEnum: %s", s)
	}
}

type POSTCopyImageQueryParams struct {
	Action  POSTCopyImageActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTCopyImageVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTCopyImageHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCopyImageRequest struct {
	QueryParams POSTCopyImageQueryParams
	Headers     POSTCopyImageHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTCopyImageResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
