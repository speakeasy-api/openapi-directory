// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum - The resource type for the transit gateway policy table association.
type GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum string

const (
	GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnumVpc                  GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum = "vpc"
	GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnumVpn                  GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum = "vpn"
	GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnumDirectConnectGateway GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum = "direct-connect-gateway"
	GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnumConnect              GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum = "connect"
	GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnumPeering              GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum = "peering"
	GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnumTgwPeering           GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum = "tgw-peering"
)

func (e GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum) ToPointer() *GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum {
	return &e
}

func (e *GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum: %v", v)
	}
}

// GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum - The state of the transit gateway policy table association.
type GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum string

const (
	GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnumAssociating    GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum = "associating"
	GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnumAssociated     GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum = "associated"
	GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnumDisassociating GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum = "disassociating"
	GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnumDisassociated  GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum = "disassociated"
)

func (e GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum) ToPointer() *GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum {
	return &e
}

func (e *GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		*e = GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum: %v", v)
	}
}

// GetTransitGatewayPolicyTableAssociationsResultAssociations - Describes a transit gateway policy table association.
type GetTransitGatewayPolicyTableAssociationsResultAssociations struct {
	ResourceID                  *string
	ResourceType                *GetTransitGatewayPolicyTableAssociationsResultAssociationsResourceTypeEnum
	State                       *GetTransitGatewayPolicyTableAssociationsResultAssociationsStateEnum
	TransitGatewayAttachmentID  *string
	TransitGatewayPolicyTableID *string
}

// GetTransitGatewayPolicyTableAssociationsResult - Success
type GetTransitGatewayPolicyTableAssociationsResult struct {
	Associations []GetTransitGatewayPolicyTableAssociationsResultAssociations
	NextToken    *string
}
