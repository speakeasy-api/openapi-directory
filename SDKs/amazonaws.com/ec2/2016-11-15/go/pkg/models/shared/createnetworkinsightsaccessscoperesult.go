// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeTags - Describes a tag.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeTags struct {
	Key   *string
	Value *string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScope - The Network Access Scope.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScope struct {
	CreatedDate                   *time.Time
	NetworkInsightsAccessScopeArn *string
	NetworkInsightsAccessScopeID  *string
	Tags                          []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeTags
	UpdatedDate                   *time.Time
}

type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum string

const (
	CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnumTCP CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum = "tcp"
	CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnumUDP CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum = "udp"
)

func (e *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tcp":
		fallthrough
	case "udp":
		*e = CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum: %s", s)
	}
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatement - The packet header statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatement struct {
	DestinationAddresses   []string
	DestinationPorts       []string
	DestinationPrefixLists []string
	Protocols              []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum
	SourceAddresses        []string
	SourcePorts            []string
	SourcePrefixLists      []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationResourceStatement - The resource statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationResourceStatement struct {
	ResourceTypes []string
	Resources     []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestination - The destination.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestination struct {
	PacketHeaderStatement *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatement
	ResourceStatement     *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestinationResourceStatement
}

type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum string

const (
	CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnumTCP CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum = "tcp"
	CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnumUDP CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum = "udp"
)

func (e *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tcp":
		fallthrough
	case "udp":
		*e = CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum: %s", s)
	}
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatement - The packet header statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatement struct {
	DestinationAddresses   []string
	DestinationPorts       []string
	DestinationPrefixLists []string
	Protocols              []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum
	SourceAddresses        []string
	SourcePorts            []string
	SourcePrefixLists      []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourceResourceStatement - The resource statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourceResourceStatement struct {
	ResourceTypes []string
	Resources     []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSource - The source.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSource struct {
	PacketHeaderStatement *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatement
	ResourceStatement     *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSourceResourceStatement
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsThroughResourcesResourceStatement - The resource statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsThroughResourcesResourceStatement struct {
	ResourceTypes []string
	Resources     []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsThroughResources - Describes a through resource statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsThroughResources struct {
	ResourceStatement *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsThroughResourcesResourceStatement
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePaths - Describes a path.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePaths struct {
	Destination      *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsDestination
	Source           *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsSource
	ThroughResources []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePathsThroughResources
}

type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum string

const (
	CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnumTCP CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum = "tcp"
	CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnumUDP CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum = "udp"
)

func (e *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tcp":
		fallthrough
	case "udp":
		*e = CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum: %s", s)
	}
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatement - The packet header statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatement struct {
	DestinationAddresses   []string
	DestinationPorts       []string
	DestinationPrefixLists []string
	Protocols              []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum
	SourceAddresses        []string
	SourcePorts            []string
	SourcePrefixLists      []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationResourceStatement - The resource statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationResourceStatement struct {
	ResourceTypes []string
	Resources     []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestination - The destination.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestination struct {
	PacketHeaderStatement *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatement
	ResourceStatement     *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestinationResourceStatement
}

type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum string

const (
	CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnumTCP CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum = "tcp"
	CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnumUDP CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum = "udp"
)

func (e *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tcp":
		fallthrough
	case "udp":
		*e = CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum: %s", s)
	}
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatement - The packet header statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatement struct {
	DestinationAddresses   []string
	DestinationPorts       []string
	DestinationPrefixLists []string
	Protocols              []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum
	SourceAddresses        []string
	SourcePorts            []string
	SourcePrefixLists      []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourceResourceStatement - The resource statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourceResourceStatement struct {
	ResourceTypes []string
	Resources     []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSource - The source.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSource struct {
	PacketHeaderStatement *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatement
	ResourceStatement     *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSourceResourceStatement
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsThroughResourcesResourceStatement - The resource statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsThroughResourcesResourceStatement struct {
	ResourceTypes []string
	Resources     []string
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsThroughResources - Describes a through resource statement.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsThroughResources struct {
	ResourceStatement *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsThroughResourcesResourceStatement
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPaths - Describes a path.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPaths struct {
	Destination      *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsDestination
	Source           *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsSource
	ThroughResources []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPathsThroughResources
}

// CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContent - The Network Access Scope content.
type CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContent struct {
	ExcludePaths                 []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentExcludePaths
	MatchPaths                   []CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContentMatchPaths
	NetworkInsightsAccessScopeID *string
}

// CreateNetworkInsightsAccessScopeResult - Success
type CreateNetworkInsightsAccessScopeResult struct {
	NetworkInsightsAccessScope        *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScope
	NetworkInsightsAccessScopeContent *CreateNetworkInsightsAccessScopeResultNetworkInsightsAccessScopeContent
}
