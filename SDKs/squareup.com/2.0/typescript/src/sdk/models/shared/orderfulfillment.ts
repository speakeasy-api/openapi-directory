/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderFulfillmentPickupDetails } from "./orderfulfillmentpickupdetails";
import { OrderFulfillmentShipmentDetails } from "./orderfulfillmentshipmentdetails";
import { Expose, Type } from "class-transformer";

/**
 * Contains details about how to fulfill this order.
 */
export class OrderFulfillment extends SpeakeasyBase {
  /**
   * Application-defined data attached to this fulfillment. Metadata fields are intended
   *
   * @remarks
   * to store descriptive references or associations with an entity in another system or store brief
   * information about the object. Square does not process this field; it only stores and returns it
   * in relevant API calls. Do not use metadata to store any sensitive information (such as personally
   * identifiable information or card details).
   *
   * Keys written by applications must be 60 characters or less and must be in the character set
   * `[a-zA-Z0-9_-]`. Entries can also include metadata generated by Square. These keys are prefixed
   * with a namespace, separated from the key with a ':' character.
   *
   * Values have a maximum length of 255 characters.
   *
   * An application can have up to 10 entries per metadata field.
   *
   * Entries written by applications are private and can only be read or modified by the same
   * application.
   *
   * For more information, see [Metadata](https://developer.squareup.com/docs/build-basics/metadata).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, string>;

  /**
   * Contains details necessary to fulfill a pickup order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickup_details" })
  @Type(() => OrderFulfillmentPickupDetails)
  pickupDetails?: OrderFulfillmentPickupDetails;

  /**
   * Contains the details necessary to fulfill a shipment order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipment_details" })
  @Type(() => OrderFulfillmentShipmentDetails)
  shipmentDetails?: OrderFulfillmentShipmentDetails;

  /**
   * The state of the fulfillment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * The type of the fulfillment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * A unique ID that identifies the fulfillment only within this order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}
