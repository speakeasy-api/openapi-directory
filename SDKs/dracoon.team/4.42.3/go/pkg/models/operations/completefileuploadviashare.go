// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CompleteFileUploadViaShareXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type CompleteFileUploadViaShareXSdsDateFormatEnum string

const (
	CompleteFileUploadViaShareXSdsDateFormatEnumUtc    CompleteFileUploadViaShareXSdsDateFormatEnum = "UTC"
	CompleteFileUploadViaShareXSdsDateFormatEnumLocal  CompleteFileUploadViaShareXSdsDateFormatEnum = "LOCAL"
	CompleteFileUploadViaShareXSdsDateFormatEnumOffset CompleteFileUploadViaShareXSdsDateFormatEnum = "OFFSET"
	CompleteFileUploadViaShareXSdsDateFormatEnumEpoch  CompleteFileUploadViaShareXSdsDateFormatEnum = "EPOCH"
	CompleteFileUploadViaShareXSdsDateFormatEnumLeet   CompleteFileUploadViaShareXSdsDateFormatEnum = "LEET"
)

func (e CompleteFileUploadViaShareXSdsDateFormatEnum) ToPointer() *CompleteFileUploadViaShareXSdsDateFormatEnum {
	return &e
}

func (e *CompleteFileUploadViaShareXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = CompleteFileUploadViaShareXSdsDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CompleteFileUploadViaShareXSdsDateFormatEnum: %v", v)
	}
}

type CompleteFileUploadViaShareRequest struct {
	UserFileKeyList *shared.UserFileKeyList `request:"mediaType=application/json"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *CompleteFileUploadViaShareXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
	// Access key
	AccessKey string `pathParam:"style=simple,explode=false,name=access_key"`
	// Upload channel ID
	UploadID string `pathParam:"style=simple,explode=false,name=upload_id"`
}

type CompleteFileUploadViaShareResponse struct {
	ContentType string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	// Created
	PublicUploadedFileData *shared.PublicUploadedFileData
	StatusCode             int
	RawResponse            *http.Response
}
