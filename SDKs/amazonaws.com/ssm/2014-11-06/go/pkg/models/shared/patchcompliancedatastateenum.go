// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PatchComplianceDataStateEnum string

const (
	PatchComplianceDataStateEnumInstalled              PatchComplianceDataStateEnum = "INSTALLED"
	PatchComplianceDataStateEnumInstalledOther         PatchComplianceDataStateEnum = "INSTALLED_OTHER"
	PatchComplianceDataStateEnumInstalledPendingReboot PatchComplianceDataStateEnum = "INSTALLED_PENDING_REBOOT"
	PatchComplianceDataStateEnumInstalledRejected      PatchComplianceDataStateEnum = "INSTALLED_REJECTED"
	PatchComplianceDataStateEnumMissing                PatchComplianceDataStateEnum = "MISSING"
	PatchComplianceDataStateEnumNotApplicable          PatchComplianceDataStateEnum = "NOT_APPLICABLE"
	PatchComplianceDataStateEnumFailed                 PatchComplianceDataStateEnum = "FAILED"
)

func (e *PatchComplianceDataStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INSTALLED":
		fallthrough
	case "INSTALLED_OTHER":
		fallthrough
	case "INSTALLED_PENDING_REBOOT":
		fallthrough
	case "INSTALLED_REJECTED":
		fallthrough
	case "MISSING":
		fallthrough
	case "NOT_APPLICABLE":
		fallthrough
	case "FAILED":
		*e = PatchComplianceDataStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchComplianceDataStateEnum: %s", s)
	}
}
