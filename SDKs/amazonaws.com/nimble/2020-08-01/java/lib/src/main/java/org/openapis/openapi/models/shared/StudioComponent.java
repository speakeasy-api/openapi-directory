/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * StudioComponent - &lt;p&gt;A studio component represents a network resource to be used by a studio's users and workflows. A typical studio contains studio components for each of the following: render farm, Active Directory, licensing, and file system.&lt;/p&gt; &lt;p&gt;Access to a studio component is managed by specifying security groups for the resource, as well as its endpoint.&lt;/p&gt; &lt;p&gt;A studio component also has a set of initialization scripts that are returned by &lt;code&gt;GetLaunchProfileInitialization&lt;/code&gt;. These initialization scripts run on streaming sessions when they start. They provide users with flexibility in controlling how the studio resources are configured on a streaming session.&lt;/p&gt;
 */
public class StudioComponent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;

    public StudioComponent withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuration")
    public StudioComponentConfiguration configuration;

    public StudioComponent withConfiguration(StudioComponentConfiguration configuration) {
        this.configuration = configuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public StudioComponent withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public String createdBy;

    public StudioComponent withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public StudioComponent withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ec2SecurityGroupIds")
    public String[] ec2SecurityGroupIds;

    public StudioComponent withEc2SecurityGroupIds(String[] ec2SecurityGroupIds) {
        this.ec2SecurityGroupIds = ec2SecurityGroupIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initializationScripts")
    public StudioComponentInitializationScript[] initializationScripts;

    public StudioComponent withInitializationScripts(StudioComponentInitializationScript[] initializationScripts) {
        this.initializationScripts = initializationScripts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public StudioComponent withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtimeRoleArn")
    public String runtimeRoleArn;

    public StudioComponent withRuntimeRoleArn(String runtimeRoleArn) {
        this.runtimeRoleArn = runtimeRoleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scriptParameters")
    public ScriptParameterKeyValue[] scriptParameters;

    public StudioComponent withScriptParameters(ScriptParameterKeyValue[] scriptParameters) {
        this.scriptParameters = scriptParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secureInitializationRoleArn")
    public String secureInitializationRoleArn;

    public StudioComponent withSecureInitializationRoleArn(String secureInitializationRoleArn) {
        this.secureInitializationRoleArn = secureInitializationRoleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public StudioComponentStateEnum state;

    public StudioComponent withState(StudioComponentStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusCode")
    public StudioComponentStatusCodeEnum statusCode;

    public StudioComponent withStatusCode(StudioComponentStatusCodeEnum statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusMessage")
    public String statusMessage;

    public StudioComponent withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("studioComponentId")
    public String studioComponentId;

    public StudioComponent withStudioComponentId(String studioComponentId) {
        this.studioComponentId = studioComponentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtype")
    public StudioComponentSubtypeEnum subtype;

    public StudioComponent withSubtype(StudioComponentSubtypeEnum subtype) {
        this.subtype = subtype;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public StudioComponent withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public StudioComponentTypeEnum type;

    public StudioComponent withType(StudioComponentTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;

    public StudioComponent withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public String updatedBy;

    public StudioComponent withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
    public StudioComponent(){}
}
