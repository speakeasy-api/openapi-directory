// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type LinkApplicationSecurity struct {
	BasicAuth  *shared.SchemeBasicAuth `security:"scheme,type=http,subtype=basic"`
	BearerAuth *string                 `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

// LinkApplicationRequestBody - Request body can contain any of the following. Please note, the only one application can be linked to the account.
type LinkApplicationRequestBody struct {
	// There is just one application allowed per an account. The application type must be type "messages". For more information please see [Application API Spec](https://developer.nexmo.com/api/application.v2)
	Application string `json:"application"`
}

// LinkApplicationProviderEnum - Provider of the account you want to assign an application to
type LinkApplicationProviderEnum string

const (
	LinkApplicationProviderEnumMessenger       LinkApplicationProviderEnum = "messenger"
	LinkApplicationProviderEnumViberServiceMsg LinkApplicationProviderEnum = "viber_service_msg"
	LinkApplicationProviderEnumWhatsapp        LinkApplicationProviderEnum = "whatsapp"
)

func (e LinkApplicationProviderEnum) ToPointer() *LinkApplicationProviderEnum {
	return &e
}

func (e *LinkApplicationProviderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "messenger":
		fallthrough
	case "viber_service_msg":
		fallthrough
	case "whatsapp":
		*e = LinkApplicationProviderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LinkApplicationProviderEnum: %v", v)
	}
}

type LinkApplicationRequest struct {
	// Request body can contain any of the following. Please note, the only one application can be linked to the account.
	RequestBody LinkApplicationRequestBody `request:"mediaType=application/json"`
	// External id of the account you want to assign an application to. This is channel dependent. For Facebook it will be your Facebook Page ID, for Viber your Viber Service Message ID and for WhatsApp your WhatsApp number.
	ExternalID string `pathParam:"style=simple,explode=false,name=external_id"`
	// Provider of the account you want to assign an application to
	Provider LinkApplicationProviderEnum `pathParam:"style=simple,explode=false,name=provider"`
}

// LinkApplication409ApplicationJSON - Conflict.
type LinkApplication409ApplicationJSON struct {
	// The account reached limit of maximum number of linked applications. (The only one application is allowed per an account)
	Detail *string `json:"detail,omitempty"`
	Title  *string `json:"title,omitempty"`
	Type   *string `json:"type,omitempty"`
}

// LinkApplication403ApplicationJSON - Forbidden.
type LinkApplication403ApplicationJSON struct {
	// The application does not exist or the application type is not "messages"
	Detail *string `json:"detail,omitempty"`
	Title  *string `json:"title,omitempty"`
	Type   *string `json:"type,omitempty"`
}

type LinkApplicationResponse struct {
	// Unauthorized.
	FourHundredAndOneResponse *shared.FourHundredAndOneResponse
	// OK.
	AccountResponse *shared.AccountResponse
	ContentType     string
	// Forbidden.
	LinkApplication403ApplicationJSONObject *LinkApplication403ApplicationJSON
	// Conflict.
	LinkApplication409ApplicationJSONObject *LinkApplication409ApplicationJSON
	StatusCode                              int
	RawResponse                             *http.Response
}
