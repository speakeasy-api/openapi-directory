"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayoutSchedule:
    r"""Details relating to a payout that was executed via a schedule or is still waiting to be executed"""
    
    notifications_enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notificationsEnabled') }})  
    scheduled_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduledAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    scheduled_by_principal_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduledByPrincipalId') }})
    r"""ID of the user or application that scheduled the payout"""  
    scheduled_for: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduledFor'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    schedule_status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduleStatus') }})
    r"""Current status of the payout schedule. One of the following values: SCHEDULED, EXECUTED, FAILED"""  
    scheduled_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduledBy'), 'exclude': lambda f: f is None }})
    r"""Optional display name as a hint for who scheduled the payout. Not populated if payout was scheduled by an application."""  
    