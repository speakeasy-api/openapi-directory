// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type TextToImageQueryParams struct {
	// Animation type: none, rays, glint, circle
	Animation string `queryParam:"style=form,explode=true,name=animation"`
	// Name of the author/source
	Author string `queryParam:"style=form,explode=true,name=author"`
	// Font-family used for author name
	AuthorFont string `queryParam:"style=form,explode=true,name=authorFont"`
	// Font color of the author
	AuthorFontColor string `queryParam:"style=form,explode=true,name=authorFontColor"`
	// Background color for solid background type
	BackgroundColor string `queryParam:"style=form,explode=true,name=backgroundColor"`
	// Background type (gradient/solid)
	BgType string `queryParam:"style=form,explode=true,name=bgType"`
	// URL of the brand logo
	BrandLogo string `queryParam:"style=form,explode=true,name=brandLogo"`
	// Enable highlight on quote text
	EnableHighlight int64 `queryParam:"style=form,explode=true,name=enableHighlight"`
	// Font size for the quote (author font size is calculated automatically)
	FontSize int64 `queryParam:"style=form,explode=true,name=fontSize"`
	// First color for gradient background type
	GradientColor1 string `queryParam:"style=form,explode=true,name=gradientColor1"`
	// Second color for gradient background type
	GradientColor2 string `queryParam:"style=form,explode=true,name=gradientColor2"`
	// Type of gradient background (linear/radial)
	GradientType string `queryParam:"style=form,explode=true,name=gradientType"`
	// Color used for highlight
	HighlightColor string `queryParam:"style=form,explode=true,name=highlightColor"`
	// Text of the quote
	Quote string `queryParam:"style=form,explode=true,name=quote"`
	// Font-family used for quote text
	QuoteFont string `queryParam:"style=form,explode=true,name=quoteFont"`
	// Font color of the quote text
	QuoteFontColor string `queryParam:"style=form,explode=true,name=quoteFontColor"`
	// showing/hiding quote mark
	ShowQuoteMark *int64 `queryParam:"style=form,explode=true,name=showQuoteMark"`
}

type TextToImageRequest struct {
	QueryParams TextToImageQueryParams
}

type TextToImageResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
