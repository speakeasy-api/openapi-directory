"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateInstanceExportTaskRequest = exports.CreateInstanceExportTaskRequestTargetEnvironmentEnum = exports.CreateInstanceExportTaskRequestTagSpecifications = exports.CreateInstanceExportTaskRequestTagSpecificationsTags = exports.CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum = exports.CreateInstanceExportTaskRequestExportToS3Task = exports.CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum = exports.CreateInstanceExportTaskRequestExportToS3TaskContainerFormatEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.
 */
var CreateInstanceExportTaskRequestExportToS3TaskContainerFormatEnum;
(function (CreateInstanceExportTaskRequestExportToS3TaskContainerFormatEnum) {
    CreateInstanceExportTaskRequestExportToS3TaskContainerFormatEnum["Ova"] = "ova";
})(CreateInstanceExportTaskRequestExportToS3TaskContainerFormatEnum = exports.CreateInstanceExportTaskRequestExportToS3TaskContainerFormatEnum || (exports.CreateInstanceExportTaskRequestExportToS3TaskContainerFormatEnum = {}));
/**
 * The format for the exported image.
 */
var CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum;
(function (CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum) {
    CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum["Vmdk"] = "VMDK";
    CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum["Raw"] = "RAW";
    CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum["Vhd"] = "VHD";
})(CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum = exports.CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum || (exports.CreateInstanceExportTaskRequestExportToS3TaskDiskImageFormatEnum = {}));
/**
 * The format and location for an export instance task.
 */
var CreateInstanceExportTaskRequestExportToS3Task = /** @class */ (function (_super) {
    __extends(CreateInstanceExportTaskRequestExportToS3Task, _super);
    function CreateInstanceExportTaskRequestExportToS3Task() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequestExportToS3Task.prototype, "containerFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequestExportToS3Task.prototype, "diskImageFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequestExportToS3Task.prototype, "s3Bucket", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequestExportToS3Task.prototype, "s3Prefix", void 0);
    return CreateInstanceExportTaskRequestExportToS3Task;
}(utils_1.SpeakeasyBase));
exports.CreateInstanceExportTaskRequestExportToS3Task = CreateInstanceExportTaskRequestExportToS3Task;
/**
 * The type of resource to tag on creation.
 */
var CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum;
(function (CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum) {
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["CapacityReservation"] = "capacity-reservation";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ClientVpnEndpoint"] = "client-vpn-endpoint";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["CustomerGateway"] = "customer-gateway";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["CarrierGateway"] = "carrier-gateway";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["CoipPool"] = "coip-pool";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["DedicatedHost"] = "dedicated-host";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["DhcpOptions"] = "dhcp-options";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["EgressOnlyInternetGateway"] = "egress-only-internet-gateway";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ElasticIp"] = "elastic-ip";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ElasticGpu"] = "elastic-gpu";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ExportImageTask"] = "export-image-task";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ExportInstanceTask"] = "export-instance-task";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Fleet"] = "fleet";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["FpgaImage"] = "fpga-image";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["HostReservation"] = "host-reservation";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Image"] = "image";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ImportImageTask"] = "import-image-task";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ImportSnapshotTask"] = "import-snapshot-task";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Instance"] = "instance";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["InstanceEventWindow"] = "instance-event-window";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["InternetGateway"] = "internet-gateway";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Ipam"] = "ipam";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["IpamPool"] = "ipam-pool";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["IpamScope"] = "ipam-scope";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Ipv4poolEc2"] = "ipv4pool-ec2";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Ipv6poolEc2"] = "ipv6pool-ec2";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["KeyPair"] = "key-pair";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["LaunchTemplate"] = "launch-template";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["LocalGateway"] = "local-gateway";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["LocalGatewayRouteTable"] = "local-gateway-route-table";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["LocalGatewayVirtualInterface"] = "local-gateway-virtual-interface";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["LocalGatewayVirtualInterfaceGroup"] = "local-gateway-virtual-interface-group";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["LocalGatewayRouteTableVpcAssociation"] = "local-gateway-route-table-vpc-association";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["LocalGatewayRouteTableVirtualInterfaceGroupAssociation"] = "local-gateway-route-table-virtual-interface-group-association";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Natgateway"] = "natgateway";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["NetworkAcl"] = "network-acl";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["NetworkInterface"] = "network-interface";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["NetworkInsightsAnalysis"] = "network-insights-analysis";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["NetworkInsightsPath"] = "network-insights-path";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["NetworkInsightsAccessScope"] = "network-insights-access-scope";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["NetworkInsightsAccessScopeAnalysis"] = "network-insights-access-scope-analysis";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["PlacementGroup"] = "placement-group";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["PrefixList"] = "prefix-list";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ReplaceRootVolumeTask"] = "replace-root-volume-task";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["ReservedInstances"] = "reserved-instances";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["RouteTable"] = "route-table";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["SecurityGroup"] = "security-group";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["SecurityGroupRule"] = "security-group-rule";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Snapshot"] = "snapshot";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["SpotFleetRequest"] = "spot-fleet-request";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["SpotInstancesRequest"] = "spot-instances-request";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Subnet"] = "subnet";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["SubnetCidrReservation"] = "subnet-cidr-reservation";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TrafficMirrorFilter"] = "traffic-mirror-filter";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TrafficMirrorSession"] = "traffic-mirror-session";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TrafficMirrorTarget"] = "traffic-mirror-target";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TransitGateway"] = "transit-gateway";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TransitGatewayAttachment"] = "transit-gateway-attachment";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TransitGatewayConnectPeer"] = "transit-gateway-connect-peer";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TransitGatewayMulticastDomain"] = "transit-gateway-multicast-domain";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TransitGatewayPolicyTable"] = "transit-gateway-policy-table";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TransitGatewayRouteTable"] = "transit-gateway-route-table";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TransitGatewayRouteTableAnnouncement"] = "transit-gateway-route-table-announcement";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Volume"] = "volume";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["Vpc"] = "vpc";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpcEndpoint"] = "vpc-endpoint";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpcEndpointConnection"] = "vpc-endpoint-connection";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpcEndpointService"] = "vpc-endpoint-service";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpcEndpointServicePermission"] = "vpc-endpoint-service-permission";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpcPeeringConnection"] = "vpc-peering-connection";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpnConnection"] = "vpn-connection";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpnGateway"] = "vpn-gateway";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpcFlowLog"] = "vpc-flow-log";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["CapacityReservationFleet"] = "capacity-reservation-fleet";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["TrafficMirrorFilterRule"] = "traffic-mirror-filter-rule";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpcEndpointConnectionDeviceType"] = "vpc-endpoint-connection-device-type";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VerifiedAccessInstance"] = "verified-access-instance";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VerifiedAccessGroup"] = "verified-access-group";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VerifiedAccessEndpoint"] = "verified-access-endpoint";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VerifiedAccessPolicy"] = "verified-access-policy";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VerifiedAccessTrustProvider"] = "verified-access-trust-provider";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpnConnectionDeviceType"] = "vpn-connection-device-type";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["VpcBlockPublicAccessExclusion"] = "vpc-block-public-access-exclusion";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["IpamResourceDiscovery"] = "ipam-resource-discovery";
    CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum["IpamResourceDiscoveryAssociation"] = "ipam-resource-discovery-association";
})(CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum = exports.CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum || (exports.CreateInstanceExportTaskRequestTagSpecificationsResourceTypeEnum = {}));
/**
 * Describes a tag.
 */
var CreateInstanceExportTaskRequestTagSpecificationsTags = /** @class */ (function (_super) {
    __extends(CreateInstanceExportTaskRequestTagSpecificationsTags, _super);
    function CreateInstanceExportTaskRequestTagSpecificationsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequestTagSpecificationsTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequestTagSpecificationsTags.prototype, "value", void 0);
    return CreateInstanceExportTaskRequestTagSpecificationsTags;
}(utils_1.SpeakeasyBase));
exports.CreateInstanceExportTaskRequestTagSpecificationsTags = CreateInstanceExportTaskRequestTagSpecificationsTags;
/**
 * <p>The tags to apply to a resource when the resource is being created. When you specify a tag, you must specify the resource type to tag, otherwise the request will fail.</p> <note> <p>The <code>Valid Values</code> lists all the resource types that can be tagged. However, the action you're using might not support tagging all of these resource types. If you try to tag a resource type that is unsupported for the action you're using, you'll get an error.</p> </note>
 */
var CreateInstanceExportTaskRequestTagSpecifications = /** @class */ (function (_super) {
    __extends(CreateInstanceExportTaskRequestTagSpecifications, _super);
    function CreateInstanceExportTaskRequestTagSpecifications() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequestTagSpecifications.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateInstanceExportTaskRequestTagSpecificationsTags,
        }),
        __metadata("design:type", Array)
    ], CreateInstanceExportTaskRequestTagSpecifications.prototype, "tags", void 0);
    return CreateInstanceExportTaskRequestTagSpecifications;
}(utils_1.SpeakeasyBase));
exports.CreateInstanceExportTaskRequestTagSpecifications = CreateInstanceExportTaskRequestTagSpecifications;
/**
 * The target virtualization environment.
 */
var CreateInstanceExportTaskRequestTargetEnvironmentEnum;
(function (CreateInstanceExportTaskRequestTargetEnvironmentEnum) {
    CreateInstanceExportTaskRequestTargetEnvironmentEnum["Citrix"] = "citrix";
    CreateInstanceExportTaskRequestTargetEnvironmentEnum["Vmware"] = "vmware";
    CreateInstanceExportTaskRequestTargetEnvironmentEnum["Microsoft"] = "microsoft";
})(CreateInstanceExportTaskRequestTargetEnvironmentEnum = exports.CreateInstanceExportTaskRequestTargetEnvironmentEnum || (exports.CreateInstanceExportTaskRequestTargetEnvironmentEnum = {}));
var CreateInstanceExportTaskRequest = /** @class */ (function (_super) {
    __extends(CreateInstanceExportTaskRequest, _super);
    function CreateInstanceExportTaskRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequest.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateInstanceExportTaskRequestExportToS3Task)
    ], CreateInstanceExportTaskRequest.prototype, "exportToS3Task", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequest.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateInstanceExportTaskRequestTagSpecifications,
        }),
        __metadata("design:type", Array)
    ], CreateInstanceExportTaskRequest.prototype, "tagSpecifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateInstanceExportTaskRequest.prototype, "targetEnvironment", void 0);
    return CreateInstanceExportTaskRequest;
}(utils_1.SpeakeasyBase));
exports.CreateInstanceExportTaskRequest = CreateInstanceExportTaskRequest;
