// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AuthTypeEnum - Type of authorization used by the connector
type AuthTypeEnum string

const (
	AuthTypeEnumOauth2 AuthTypeEnum = "oauth2"
	AuthTypeEnumAPIKey AuthTypeEnum = "apiKey"
	AuthTypeEnumBasic  AuthTypeEnum = "basic"
	AuthTypeEnumCustom AuthTypeEnum = "custom"
	AuthTypeEnumNone   AuthTypeEnum = "none"
)

func (e AuthTypeEnum) ToPointer() *AuthTypeEnum {
	return &e
}

func (e *AuthTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oauth2":
		fallthrough
	case "apiKey":
		fallthrough
	case "basic":
		fallthrough
	case "custom":
		fallthrough
	case "none":
		*e = AuthTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthTypeEnum: %v", v)
	}
}
