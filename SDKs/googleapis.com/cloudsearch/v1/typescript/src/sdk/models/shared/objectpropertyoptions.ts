/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PropertyDefinition } from "./propertydefinition";
import { Expose, Type } from "class-transformer";

/**
 * The options for object properties.
 */
export class ObjectPropertyOptions extends SpeakeasyBase {
  /**
   * The properties of the sub-object. These properties represent a nested object. For example, if this property represents a postal address, the subobjectProperties might be named *street*, *city*, and *state*. The maximum number of elements is 1000.
   */
  @SpeakeasyMetadata({ elemType: PropertyDefinition })
  @Expose({ name: "subobjectProperties" })
  @Type(() => PropertyDefinition)
  subobjectProperties?: PropertyDefinition[];
}
