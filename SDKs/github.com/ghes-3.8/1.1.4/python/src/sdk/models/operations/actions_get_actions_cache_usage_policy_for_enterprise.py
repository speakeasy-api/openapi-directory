"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import actions_cache_usage_policy_enterprise as shared_actions_cache_usage_policy_enterprise
from typing import Optional


@dataclasses.dataclass
class ActionsGetActionsCacheUsagePolicyForEnterpriseRequest:
    
    enterprise: str = dataclasses.field(metadata={'path_param': { 'field_name': 'enterprise', 'style': 'simple', 'explode': False }})
    r"""The slug version of the enterprise name. You can also substitute this value with the enterprise id."""  
    

@dataclasses.dataclass
class ActionsGetActionsCacheUsagePolicyForEnterpriseResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    actions_cache_usage_policy_enterprise: Optional[shared_actions_cache_usage_policy_enterprise.ActionsCacheUsagePolicyEnterprise] = dataclasses.field(default=None)
    r"""Response"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    