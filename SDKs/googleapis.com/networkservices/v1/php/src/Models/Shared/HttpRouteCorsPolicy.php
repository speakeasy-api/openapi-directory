<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HttpRouteCorsPolicy - The Specification for allowing client side cross-origin requests.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HttpRouteCorsPolicy
{
    /**
     * In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default value is false.
     * 
     * @var ?bool $allowCredentials
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowCredentials')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowCredentials = null;
    
    /**
     * Specifies the content for Access-Control-Allow-Headers header.
     * 
     * @var ?array<string> $allowHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowHeaders')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowHeaders = null;
    
    /**
     * Specifies the content for Access-Control-Allow-Methods header.
     * 
     * @var ?array<string> $allowMethods
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowMethods')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowMethods = null;
    
    /**
     * Specifies the regular expression patterns that match allowed origins. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax.
     * 
     * @var ?array<string> $allowOriginRegexes
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowOriginRegexes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowOriginRegexes = null;
    
    /**
     * Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allow_origins or an item in allow_origin_regexes.
     * 
     * @var ?array<string> $allowOrigins
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowOrigins')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowOrigins = null;
    
    /**
     * If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * Specifies the content for Access-Control-Expose-Headers header.
     * 
     * @var ?array<string> $exposeHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('exposeHeaders')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $exposeHeaders = null;
    
    /**
     * Specifies how long result of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header.
     * 
     * @var ?string $maxAge
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxAge')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maxAge = null;
    
	public function __construct()
	{
		$this->allowCredentials = null;
		$this->allowHeaders = null;
		$this->allowMethods = null;
		$this->allowOriginRegexes = null;
		$this->allowOrigins = null;
		$this->disabled = null;
		$this->exposeHeaders = null;
		$this->maxAge = null;
	}
}
