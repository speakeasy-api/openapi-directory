/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Determines which key should be used (NEW)
 */
export enum RequestMissingFileKeysUseKeyEnum {
  RoomRescueKey = "room_rescue_key",
  SystemRescueKey = "system_rescue_key",
  PreviousUserKey = "previous_user_key",
  PreviousRoomRescueKey = "previous_room_rescue_key",
  PreviousSystemRescueKey = "previous_system_rescue_key",
}

export class RequestMissingFileKeysRequest extends SpeakeasyBase {
  /**
   * Authentication token
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Sds-Auth-Token",
  })
  xSdsAuthToken?: string;

  /**
   * File ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=file_id",
  })
  fileId?: number;

  /**
   * Range limit.
   *
   * @remarks
   *
   * Maximum 500.
   *
   *  For more results please use paging (`offset` + `limit`).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Range offset
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Room ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=room_id",
  })
  roomId?: number;

  /**
   * Determines which key should be used (NEW)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=use_key",
  })
  useKey?: RequestMissingFileKeysUseKeyEnum;

  /**
   * User ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=user_id",
  })
  userId?: number;
}

export class RequestMissingFileKeysResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  missingKeysResponse?: shared.MissingKeysResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
