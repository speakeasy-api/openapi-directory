/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Condition {
    /**
     * A list of attribute values to be used with a comparison operator for a scan or query operation. For comparisons that require more than one value, such as a &lt;code&gt;BETWEEN&lt;/code&gt; comparison, the AttributeValueList contains two attribute values and the comparison operator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AttributeValueList")
    public AttributeValue[] attributeValueList;

    public Condition withAttributeValueList(AttributeValue[] attributeValueList) {
        this.attributeValueList = attributeValueList;
        return this;
    }
    
    /**
     * &lt;p&gt;A comparison operator is an enumeration of several operations:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;EQ&lt;/code&gt; for &lt;em&gt;equal&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NE&lt;/code&gt; for &lt;em&gt;not equal&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;IN&lt;/code&gt; checks for exact matches.&lt;/li&gt; &lt;li&gt;&lt;code&gt;LE&lt;/code&gt; for &lt;em&gt;less than or equal to&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;LT&lt;/code&gt; for &lt;em&gt;less than&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;GE&lt;/code&gt; for &lt;em&gt;greater than or equal to&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;GT&lt;/code&gt; for &lt;em&gt;greater than&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;BETWEEN&lt;/code&gt; for &lt;em&gt;between&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NOT_NULL&lt;/code&gt; for &lt;em&gt;exists&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NULL&lt;/code&gt; for &lt;em&gt;not exists&lt;/em&gt;.&lt;/li&gt; &lt;li&gt;&lt;code&gt;CONTAINS&lt;/code&gt; for substring or value in a set.&lt;/li&gt; &lt;li&gt;&lt;code&gt;NOT_CONTAINS&lt;/code&gt; for absence of a substring or absence of a value in a set.&lt;/li&gt; &lt;li&gt;&lt;code&gt;BEGINS_WITH&lt;/code&gt; for a substring prefix.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Scan operations support all available comparison operators.&lt;/p&gt; &lt;p&gt;Query operations support a subset of the available comparison operators: EQ, LE, LT, GE, GT, BETWEEN, and BEGINS_WITH.&lt;/p&gt;
     */
    @JsonProperty("ComparisonOperator")
    public ComparisonOperatorEnum comparisonOperator;

    public Condition withComparisonOperator(ComparisonOperatorEnum comparisonOperator) {
        this.comparisonOperator = comparisonOperator;
        return this;
    }
    
    public Condition(@JsonProperty("ComparisonOperator") ComparisonOperatorEnum comparisonOperator) {
        this.comparisonOperator = comparisonOperator;
  }
}
