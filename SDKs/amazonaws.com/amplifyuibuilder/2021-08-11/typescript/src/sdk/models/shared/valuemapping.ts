/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FormInputValueProperty } from "./forminputvalueproperty";
import { Expose, Type } from "class-transformer";

/**
 * Associates a complex object with a display value. Use <code>ValueMapping</code> to store how to represent complex objects when they are displayed.
 */
export class ValueMapping extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "displayValue" })
  @Type(() => FormInputValueProperty)
  displayValue?: FormInputValueProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  @Type(() => FormInputValueProperty)
  value: FormInputValueProperty;
}
