/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Feedback {
    /**
     * A comment written by the reviewer about the user (may be null).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public Feedback withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * Date when the feedback was submitted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date")
    public OffsetDateTime date;

    public Feedback withDate(OffsetDateTime date) {
        this.date = date;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("feedback_id")
    public String feedbackId;

    public Feedback withFeedbackId(String feedbackId) {
        this.feedbackId = feedbackId;
        return this;
    }
    
    /**
     * Set to true for positive feedback and false for negative feedback.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("positive")
    public Boolean positive;

    public Feedback withPositive(Boolean positive) {
        this.positive = positive;
        return this;
    }
    
    /**
     * The user ID of the user that submitted the feedback.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewer_user_id")
    public String reviewerUserId;

    public Feedback withReviewerUserId(String reviewerUserId) {
        this.reviewerUserId = reviewerUserId;
        return this;
    }
    
    /**
     * The user ID of the user that the feedback is about.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;

    public Feedback withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public Feedback(){}
}
