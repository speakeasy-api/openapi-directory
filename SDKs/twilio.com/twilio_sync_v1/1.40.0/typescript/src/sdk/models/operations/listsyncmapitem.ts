/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListSyncMapItemServerList = ["https://sync.twilio.com"] as const;

export class ListSyncMapItemSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListSyncMapItemRequest extends SpeakeasyBase {
  /**
   * Whether to include the Map Item referenced by the `from` parameter. Can be: `inclusive` to include the Map Item referenced by the `from` parameter or `exclusive` to start with the next Map Item. The default value is `inclusive`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Bounds",
  })
  bounds?: shared.SyncMapItemEnumQueryFromBoundTypeEnum;

  /**
   * The `key` of the first Sync Map Item resource to read. See also `bounds`.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=From" })
  from?: string;

  /**
   * The SID of the Sync Map with the Sync Map Item resource to fetch. Can be the Sync Map resource's `sid` or its `unique_name`.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=MapSid",
  })
  mapSid: string;

  /**
   * How to order the Map Items returned by their `key` value. Can be: `asc` (ascending) or `desc` (descending) and the default is ascending. Map Items are [ordered lexicographically](https://en.wikipedia.org/wiki/Lexicographical_order) by Item key.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Order" })
  order?: shared.SyncMapItemEnumQueryResultOrderEnum;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Map Item resources to read.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class ListSyncMapItemListSyncMapItemResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListSyncMapItemListSyncMapItemResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.SyncV1ServiceSyncMapSyncMapItem })
  @Expose({ name: "items" })
  @Type(() => shared.SyncV1ServiceSyncMapSyncMapItem)
  items?: shared.SyncV1ServiceSyncMapSyncMapItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListSyncMapItemListSyncMapItemResponseMeta)
  meta?: ListSyncMapItemListSyncMapItemResponseMeta;
}

export class ListSyncMapItemResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listSyncMapItemResponse?: ListSyncMapItemListSyncMapItemResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
