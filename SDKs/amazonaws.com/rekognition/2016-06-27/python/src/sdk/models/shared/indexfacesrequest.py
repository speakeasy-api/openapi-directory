"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attribute_enum as shared_attribute_enum
from ..shared import image as shared_image
from ..shared import qualityfilter_enum as shared_qualityfilter_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IndexFacesRequest:
    
    collection_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CollectionId') }})  
    image: shared_image.Image = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Image') }})  
    detection_attributes: Optional[list[shared_attribute_enum.AttributeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DetectionAttributes'), 'exclude': lambda f: f is None }})  
    external_image_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExternalImageId'), 'exclude': lambda f: f is None }})  
    max_faces: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxFaces'), 'exclude': lambda f: f is None }})  
    quality_filter: Optional[shared_qualityfilter_enum.QualityFilterEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QualityFilter'), 'exclude': lambda f: f is None }})  
    