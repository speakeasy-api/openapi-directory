// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReleaseEventAPIGetOnePathParams struct {
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// ReleaseEventAPIGetOneFieldsEnum
type ReleaseEventAPIGetOneFieldsEnum string

const (
	ReleaseEventAPIGetOneFieldsEnumNone            ReleaseEventAPIGetOneFieldsEnum = "None"
	ReleaseEventAPIGetOneFieldsEnumAdditionalNames ReleaseEventAPIGetOneFieldsEnum = "AdditionalNames"
	ReleaseEventAPIGetOneFieldsEnumArtists         ReleaseEventAPIGetOneFieldsEnum = "Artists"
	ReleaseEventAPIGetOneFieldsEnumDescription     ReleaseEventAPIGetOneFieldsEnum = "Description"
	ReleaseEventAPIGetOneFieldsEnumMainPicture     ReleaseEventAPIGetOneFieldsEnum = "MainPicture"
	ReleaseEventAPIGetOneFieldsEnumNames           ReleaseEventAPIGetOneFieldsEnum = "Names"
	ReleaseEventAPIGetOneFieldsEnumSeries          ReleaseEventAPIGetOneFieldsEnum = "Series"
	ReleaseEventAPIGetOneFieldsEnumSongList        ReleaseEventAPIGetOneFieldsEnum = "SongList"
	ReleaseEventAPIGetOneFieldsEnumTags            ReleaseEventAPIGetOneFieldsEnum = "Tags"
	ReleaseEventAPIGetOneFieldsEnumVenue           ReleaseEventAPIGetOneFieldsEnum = "Venue"
	ReleaseEventAPIGetOneFieldsEnumWebLinks        ReleaseEventAPIGetOneFieldsEnum = "WebLinks"
)

func (e *ReleaseEventAPIGetOneFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Artists":
		fallthrough
	case "Description":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "Series":
		fallthrough
	case "SongList":
		fallthrough
	case "Tags":
		fallthrough
	case "Venue":
		fallthrough
	case "WebLinks":
		*e = ReleaseEventAPIGetOneFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventAPIGetOneFieldsEnum: %s", s)
	}
}

// ReleaseEventAPIGetOneLangEnum
type ReleaseEventAPIGetOneLangEnum string

const (
	ReleaseEventAPIGetOneLangEnumDefault  ReleaseEventAPIGetOneLangEnum = "Default"
	ReleaseEventAPIGetOneLangEnumJapanese ReleaseEventAPIGetOneLangEnum = "Japanese"
	ReleaseEventAPIGetOneLangEnumRomaji   ReleaseEventAPIGetOneLangEnum = "Romaji"
	ReleaseEventAPIGetOneLangEnumEnglish  ReleaseEventAPIGetOneLangEnum = "English"
)

func (e *ReleaseEventAPIGetOneLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = ReleaseEventAPIGetOneLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventAPIGetOneLangEnum: %s", s)
	}
}

type ReleaseEventAPIGetOneQueryParams struct {
	Fields *ReleaseEventAPIGetOneFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	Lang   *ReleaseEventAPIGetOneLangEnum   `queryParam:"style=form,explode=true,name=lang"`
}

type ReleaseEventAPIGetOneRequest struct {
	PathParams  ReleaseEventAPIGetOnePathParams
	QueryParams ReleaseEventAPIGetOneQueryParams
}

type ReleaseEventAPIGetOneResponse struct {
	Body        []byte
	ContentType string
	// OK
	ReleaseEventForAPIContract *shared.ReleaseEventForAPIContract
	StatusCode                 int
	RawResponse                *http.Response
}
