/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SourceTypeEnum } from "./sourcetypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * The reporting related to a change order operation
 */
export class ChangeOrderReporting extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "changeOrderType" })
  changeOrderType?: string;

  /**
   * The creation UTC date of the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: Record<string, Record<string, any>>;

  /**
   * The error message during the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  /**
   * The execution identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionUUID" })
  executionUUID?: string;

  /**
   * The IP address who request this operation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  /**
   * The last update UTC date of the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateUtcDate?: Date;

  /**
   * The processing status of the execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processingStatus" })
  processingStatus?: string;

  /**
   * Indicates the origin of the operation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceType" })
  sourceType?: SourceTypeEnum;

  /**
   * The user identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceUserId" })
  sourceUserId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceUserName" })
  sourceUserName?: string;

  /**
   * This operation was a test
   */
  @SpeakeasyMetadata()
  @Expose({ name: "testMode" })
  testMode?: boolean;
}
