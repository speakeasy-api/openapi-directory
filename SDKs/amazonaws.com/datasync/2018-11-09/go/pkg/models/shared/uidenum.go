// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UIDEnum string

const (
	UIDEnumNone     UIDEnum = "NONE"
	UIDEnumIntValue UIDEnum = "INT_VALUE"
	UIDEnumName     UIDEnum = "NAME"
	UIDEnumBoth     UIDEnum = "BOTH"
)

func (e UIDEnum) ToPointer() *UIDEnum {
	return &e
}

func (e *UIDEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "INT_VALUE":
		fallthrough
	case "NAME":
		fallthrough
	case "BOTH":
		*e = UIDEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UIDEnum: %v", v)
	}
}
