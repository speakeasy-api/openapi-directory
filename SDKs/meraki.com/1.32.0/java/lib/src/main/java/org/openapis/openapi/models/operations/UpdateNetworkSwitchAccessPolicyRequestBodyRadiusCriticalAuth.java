/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateNetworkSwitchAccessPolicyRequestBodyRadiusCriticalAuth - Critical auth settings for when authentication is rejected by the RADIUS server
 */
public class UpdateNetworkSwitchAccessPolicyRequestBodyRadiusCriticalAuth {
    /**
     * VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataVlanId")
    public Long dataVlanId;

    public UpdateNetworkSwitchAccessPolicyRequestBodyRadiusCriticalAuth withDataVlanId(Long dataVlanId) {
        this.dataVlanId = dataVlanId;
        return this;
    }
    
    /**
     * Enable to suspend port bounce when RADIUS servers are unreachable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspendPortBounce")
    public Boolean suspendPortBounce;

    public UpdateNetworkSwitchAccessPolicyRequestBodyRadiusCriticalAuth withSuspendPortBounce(Boolean suspendPortBounce) {
        this.suspendPortBounce = suspendPortBounce;
        return this;
    }
    
    /**
     * VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voiceVlanId")
    public Long voiceVlanId;

    public UpdateNetworkSwitchAccessPolicyRequestBodyRadiusCriticalAuth withVoiceVlanId(Long voiceVlanId) {
        this.voiceVlanId = voiceVlanId;
        return this;
    }
    
    public UpdateNetworkSwitchAccessPolicyRequestBodyRadiusCriticalAuth(){}
}
