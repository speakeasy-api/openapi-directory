// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListConstraintsForPortfolioQueryParams struct {
	// Pagination limit
	PageSize *string `queryParam:"style=form,explode=true,name=PageSize"`
	// Pagination token
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
}

// ListConstraintsForPortfolioXAmzTargetEnum
type ListConstraintsForPortfolioXAmzTargetEnum string

const (
	ListConstraintsForPortfolioXAmzTargetEnumAws242ServiceCatalogServiceListConstraintsForPortfolio ListConstraintsForPortfolioXAmzTargetEnum = "AWS242ServiceCatalogService.ListConstraintsForPortfolio"
)

func (e *ListConstraintsForPortfolioXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS242ServiceCatalogService.ListConstraintsForPortfolio":
		*e = ListConstraintsForPortfolioXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListConstraintsForPortfolioXAmzTargetEnum: %s", s)
	}
}

type ListConstraintsForPortfolioHeaders struct {
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListConstraintsForPortfolioXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListConstraintsForPortfolioRequest struct {
	QueryParams ListConstraintsForPortfolioQueryParams
	Headers     ListConstraintsForPortfolioHeaders
	Request     shared.ListConstraintsForPortfolioInput `request:"mediaType=application/json"`
}

type ListConstraintsForPortfolioResponse struct {
	ContentType string
	// InvalidParametersException
	InvalidParametersException interface{}
	// Success
	ListConstraintsForPortfolioOutput *shared.ListConstraintsForPortfolioOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
