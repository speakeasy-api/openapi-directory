/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudVisionV1p2beta1BoundingPoly } from "./googlecloudvisionv1p2beta1boundingpoly";
import { GoogleCloudVisionV1p2beta1TextAnnotationTextProperty } from "./googlecloudvisionv1p2beta1textannotationtextproperty";
import { GoogleCloudVisionV1p2beta1Word } from "./googlecloudvisionv1p2beta1word";
import { Expose, Type } from "class-transformer";

/**
 * Structural unit of text representing a number of words in certain order.
 */
export class GoogleCloudVisionV1p2beta1Paragraph extends SpeakeasyBase {
  /**
   * A bounding polygon for the detected image annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boundingBox" })
  @Type(() => GoogleCloudVisionV1p2beta1BoundingPoly)
  boundingBox?: GoogleCloudVisionV1p2beta1BoundingPoly;

  /**
   * Confidence of the OCR results for the paragraph. Range [0, 1].
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confidence" })
  confidence?: number;

  /**
   * Additional information detected on the structural component.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "property" })
  @Type(() => GoogleCloudVisionV1p2beta1TextAnnotationTextProperty)
  property?: GoogleCloudVisionV1p2beta1TextAnnotationTextProperty;

  /**
   * List of all words in this paragraph.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudVisionV1p2beta1Word })
  @Expose({ name: "words" })
  @Type(() => GoogleCloudVisionV1p2beta1Word)
  words?: GoogleCloudVisionV1p2beta1Word[];
}
