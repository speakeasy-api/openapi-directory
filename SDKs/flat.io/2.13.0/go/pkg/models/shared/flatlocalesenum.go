// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FlatLocalesEnum - The user language
type FlatLocalesEnum string

const (
	FlatLocalesEnumEn     FlatLocalesEnum = "en"
	FlatLocalesEnumEnGb   FlatLocalesEnum = "en-GB"
	FlatLocalesEnumEs     FlatLocalesEnum = "es"
	FlatLocalesEnumFr     FlatLocalesEnum = "fr"
	FlatLocalesEnumDe     FlatLocalesEnum = "de"
	FlatLocalesEnumIt     FlatLocalesEnum = "it"
	FlatLocalesEnumJa     FlatLocalesEnum = "ja"
	FlatLocalesEnumKo     FlatLocalesEnum = "ko"
	FlatLocalesEnumNl     FlatLocalesEnum = "nl"
	FlatLocalesEnumPl     FlatLocalesEnum = "pl"
	FlatLocalesEnumPt     FlatLocalesEnum = "pt"
	FlatLocalesEnumPtBr   FlatLocalesEnum = "pt-BR"
	FlatLocalesEnumRo     FlatLocalesEnum = "ro"
	FlatLocalesEnumRu     FlatLocalesEnum = "ru"
	FlatLocalesEnumSv     FlatLocalesEnum = "sv"
	FlatLocalesEnumTr     FlatLocalesEnum = "tr"
	FlatLocalesEnumZhHans FlatLocalesEnum = "zh-Hans"
)

func (e FlatLocalesEnum) ToPointer() *FlatLocalesEnum {
	return &e
}

func (e *FlatLocalesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "en":
		fallthrough
	case "en-GB":
		fallthrough
	case "es":
		fallthrough
	case "fr":
		fallthrough
	case "de":
		fallthrough
	case "it":
		fallthrough
	case "ja":
		fallthrough
	case "ko":
		fallthrough
	case "nl":
		fallthrough
	case "pl":
		fallthrough
	case "pt":
		fallthrough
	case "pt-BR":
		fallthrough
	case "ro":
		fallthrough
	case "ru":
		fallthrough
	case "sv":
		fallthrough
	case "tr":
		fallthrough
	case "zh-Hans":
		*e = FlatLocalesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FlatLocalesEnum: %v", v)
	}
}
