// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateAnAccountNumberDefaultApplicationJSON13StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CreateAnAccountNumberDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CreateAnAccountNumberDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON13TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON13TypeEnumRateLimitedError CreateAnAccountNumberDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON13 struct {
	Detail     string                                                  `json:"detail"`
	RetryAfter *int64                                                  `json:"retry_after,omitempty"`
	Status     CreateAnAccountNumberDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                  `json:"title"`
	Type       CreateAnAccountNumberDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON12StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON12StatusEnumFourHundredAndThree CreateAnAccountNumberDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAnAccountNumberDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON12TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON12TypeEnumPrivateFeatureError CreateAnAccountNumberDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON12 struct {
	Detail string                                                  `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON11StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON11StatusEnumFourHundredAndFour CreateAnAccountNumberDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateAnAccountNumberDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON11TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON11TypeEnumObjectNotFoundError CreateAnAccountNumberDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON11 struct {
	Detail string                                                  `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON10StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON10StatusEnumFourHundred CreateAnAccountNumberDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateAnAccountNumberDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON10TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON10TypeEnumMalformedRequestError CreateAnAccountNumberDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON10 struct {
	Detail string                                                  `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                  `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON9StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON9StatusEnumFourHundred CreateAnAccountNumberDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateAnAccountNumberDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON9TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON9TypeEnumInvalidParametersError CreateAnAccountNumberDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                               `json:"errors,omitempty"`
	Status CreateAnAccountNumberDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON8StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON8StatusEnumFourHundredAndNine CreateAnAccountNumberDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateAnAccountNumberDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON8TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON8TypeEnumInvalidOperationError CreateAnAccountNumberDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON8 struct {
	Detail string                                                 `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON7StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON7StatusEnumFourHundredAndOne CreateAnAccountNumberDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CreateAnAccountNumberDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON7TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CreateAnAccountNumberDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON7 struct {
	Detail string                                                 `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON6StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON6StatusEnumFiveHundred CreateAnAccountNumberDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CreateAnAccountNumberDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON6TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON6TypeEnumInternalServerError CreateAnAccountNumberDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON6 struct {
	Detail string                                                 `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON5StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON5StatusEnumFourHundredAndThree CreateAnAccountNumberDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAnAccountNumberDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON5TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CreateAnAccountNumberDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON5 struct {
	Detail string                                                 `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON4StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CreateAnAccountNumberDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CreateAnAccountNumberDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON4TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CreateAnAccountNumberDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON4 struct {
	Detail string                                                 `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON3StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON3StatusEnumFourHundredAndNine CreateAnAccountNumberDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateAnAccountNumberDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON3TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON3TypeEnumIdempotencyConflictError CreateAnAccountNumberDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON3 struct {
	Detail string                                                 `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON2StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON2StatusEnumFourHundredAndThree CreateAnAccountNumberDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAnAccountNumberDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON2TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CreateAnAccountNumberDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON2 struct {
	Detail string                                                 `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CreateAnAccountNumberDefaultApplicationJSON1StatusEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON1StatusEnumFourHundredAndFour CreateAnAccountNumberDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateAnAccountNumberDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON1TypeEnum string

const (
	CreateAnAccountNumberDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CreateAnAccountNumberDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CreateAnAccountNumberDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CreateAnAccountNumberDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAccountNumberDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CreateAnAccountNumberDefaultApplicationJSON1 struct {
	Detail string                                                 `json:"detail"`
	Status CreateAnAccountNumberDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   CreateAnAccountNumberDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CreateAnAccountNumberResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account Number
	AccountNumber *shared.AccountNumber
	// Error
	Error interface{}
}
