<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NestedParameter - JSON template for a parameter used in various reports.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NestedParameter
{
    /**
     * Boolean value of the parameter.
     * 
     * @var ?bool $boolValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('boolValue')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $boolValue = null;
    
    /**
     * Integer value of the parameter.
     * 
     * @var ?string $intValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('intValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $intValue = null;
    
    /**
     * Multiple boolean values of the parameter.
     * 
     * @var ?array<bool> $multiBoolValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('multiBoolValue')]
    #[\JMS\Serializer\Annotation\Type('array<bool>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $multiBoolValue = null;
    
    /**
     * Multiple integer values of the parameter.
     * 
     * @var ?array<string> $multiIntValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('multiIntValue')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $multiIntValue = null;
    
    /**
     * Multiple string values of the parameter.
     * 
     * @var ?array<string> $multiValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('multiValue')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $multiValue = null;
    
    /**
     * The name of the parameter.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * String value of the parameter.
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->boolValue = null;
		$this->intValue = null;
		$this->multiBoolValue = null;
		$this->multiIntValue = null;
		$this->multiValue = null;
		$this->name = null;
		$this->value = null;
	}
}
