"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetDatacentersIdResponse = exports.GetDatacentersId200ApplicationJSON = exports.GetDatacentersId200ApplicationJSONDatacenter = exports.GetDatacentersId200ApplicationJSONDatacenterServerTypes = exports.GetDatacentersId200ApplicationJSONDatacenterLocation = exports.GetDatacentersIdRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetDatacentersIdRequest = /** @class */ (function (_super) {
    __extends(GetDatacentersIdRequest, _super);
    function GetDatacentersIdRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "pathParam, style=simple;explode=false;name=id" }),
        __metadata("design:type", Number)
    ], GetDatacentersIdRequest.prototype, "id", void 0);
    return GetDatacentersIdRequest;
}(utils_1.SpeakeasyBase));
exports.GetDatacentersIdRequest = GetDatacentersIdRequest;
var GetDatacentersId200ApplicationJSONDatacenterLocation = /** @class */ (function (_super) {
    __extends(GetDatacentersId200ApplicationJSONDatacenterLocation, _super);
    function GetDatacentersId200ApplicationJSONDatacenterLocation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city" }),
        __metadata("design:type", String)
    ], GetDatacentersId200ApplicationJSONDatacenterLocation.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country" }),
        __metadata("design:type", String)
    ], GetDatacentersId200ApplicationJSONDatacenterLocation.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], GetDatacentersId200ApplicationJSONDatacenterLocation.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], GetDatacentersId200ApplicationJSONDatacenterLocation.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "latitude" }),
        __metadata("design:type", Number)
    ], GetDatacentersId200ApplicationJSONDatacenterLocation.prototype, "latitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "longitude" }),
        __metadata("design:type", Number)
    ], GetDatacentersId200ApplicationJSONDatacenterLocation.prototype, "longitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetDatacentersId200ApplicationJSONDatacenterLocation.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network_zone" }),
        __metadata("design:type", String)
    ], GetDatacentersId200ApplicationJSONDatacenterLocation.prototype, "networkZone", void 0);
    return GetDatacentersId200ApplicationJSONDatacenterLocation;
}(utils_1.SpeakeasyBase));
exports.GetDatacentersId200ApplicationJSONDatacenterLocation = GetDatacentersId200ApplicationJSONDatacenterLocation;
/**
 * The Server types the Datacenter can handle
 */
var GetDatacentersId200ApplicationJSONDatacenterServerTypes = /** @class */ (function (_super) {
    __extends(GetDatacentersId200ApplicationJSONDatacenterServerTypes, _super);
    function GetDatacentersId200ApplicationJSONDatacenterServerTypes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "available" }),
        __metadata("design:type", Array)
    ], GetDatacentersId200ApplicationJSONDatacenterServerTypes.prototype, "available", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "available_for_migration" }),
        __metadata("design:type", Array)
    ], GetDatacentersId200ApplicationJSONDatacenterServerTypes.prototype, "availableForMigration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supported" }),
        __metadata("design:type", Array)
    ], GetDatacentersId200ApplicationJSONDatacenterServerTypes.prototype, "supported", void 0);
    return GetDatacentersId200ApplicationJSONDatacenterServerTypes;
}(utils_1.SpeakeasyBase));
exports.GetDatacentersId200ApplicationJSONDatacenterServerTypes = GetDatacentersId200ApplicationJSONDatacenterServerTypes;
var GetDatacentersId200ApplicationJSONDatacenter = /** @class */ (function (_super) {
    __extends(GetDatacentersId200ApplicationJSONDatacenter, _super);
    function GetDatacentersId200ApplicationJSONDatacenter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], GetDatacentersId200ApplicationJSONDatacenter.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], GetDatacentersId200ApplicationJSONDatacenter.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        (0, class_transformer_1.Type)(function () { return GetDatacentersId200ApplicationJSONDatacenterLocation; }),
        __metadata("design:type", GetDatacentersId200ApplicationJSONDatacenterLocation)
    ], GetDatacentersId200ApplicationJSONDatacenter.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetDatacentersId200ApplicationJSONDatacenter.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "server_types" }),
        (0, class_transformer_1.Type)(function () { return GetDatacentersId200ApplicationJSONDatacenterServerTypes; }),
        __metadata("design:type", GetDatacentersId200ApplicationJSONDatacenterServerTypes)
    ], GetDatacentersId200ApplicationJSONDatacenter.prototype, "serverTypes", void 0);
    return GetDatacentersId200ApplicationJSONDatacenter;
}(utils_1.SpeakeasyBase));
exports.GetDatacentersId200ApplicationJSONDatacenter = GetDatacentersId200ApplicationJSONDatacenter;
/**
 * The `datacenter` key in the reply contains a Datacenter object with this structure
 */
var GetDatacentersId200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetDatacentersId200ApplicationJSON, _super);
    function GetDatacentersId200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "datacenter" }),
        (0, class_transformer_1.Type)(function () { return GetDatacentersId200ApplicationJSONDatacenter; }),
        __metadata("design:type", GetDatacentersId200ApplicationJSONDatacenter)
    ], GetDatacentersId200ApplicationJSON.prototype, "datacenter", void 0);
    return GetDatacentersId200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetDatacentersId200ApplicationJSON = GetDatacentersId200ApplicationJSON;
var GetDatacentersIdResponse = /** @class */ (function (_super) {
    __extends(GetDatacentersIdResponse, _super);
    function GetDatacentersIdResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetDatacentersIdResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetDatacentersIdResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetDatacentersIdResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetDatacentersId200ApplicationJSON)
    ], GetDatacentersIdResponse.prototype, "getDatacentersId200ApplicationJSONObject", void 0);
    return GetDatacentersIdResponse;
}(utils_1.SpeakeasyBase));
exports.GetDatacentersIdResponse = GetDatacentersIdResponse;
