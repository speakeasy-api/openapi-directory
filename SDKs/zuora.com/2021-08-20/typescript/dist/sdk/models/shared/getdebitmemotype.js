"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETDebitMemoType = exports.GETDebitMemoTypeTransferredToAccountingEnum = exports.GETDebitMemoTypeTaxStatusEnum = exports.GETDebitMemoTypeStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The status of the debit memo.
 *
 * @remarks
 *
 */
var GETDebitMemoTypeStatusEnum;
(function (GETDebitMemoTypeStatusEnum) {
    GETDebitMemoTypeStatusEnum["Draft"] = "Draft";
    GETDebitMemoTypeStatusEnum["Posted"] = "Posted";
    GETDebitMemoTypeStatusEnum["Canceled"] = "Canceled";
    GETDebitMemoTypeStatusEnum["Error"] = "Error";
    GETDebitMemoTypeStatusEnum["PendingForTax"] = "PendingForTax";
    GETDebitMemoTypeStatusEnum["Generating"] = "Generating";
    GETDebitMemoTypeStatusEnum["CancelInProgress"] = "CancelInProgress";
})(GETDebitMemoTypeStatusEnum = exports.GETDebitMemoTypeStatusEnum || (exports.GETDebitMemoTypeStatusEnum = {}));
/**
 * The status of tax calculation related to the debit memo.
 *
 * @remarks
 *
 * **Note**: This field is only applicable to tax calculation by third-party tax engines.
 *
 */
var GETDebitMemoTypeTaxStatusEnum;
(function (GETDebitMemoTypeTaxStatusEnum) {
    GETDebitMemoTypeTaxStatusEnum["Complete"] = "Complete";
    GETDebitMemoTypeTaxStatusEnum["Error"] = "Error";
})(GETDebitMemoTypeTaxStatusEnum = exports.GETDebitMemoTypeTaxStatusEnum || (exports.GETDebitMemoTypeTaxStatusEnum = {}));
/**
 * Whether the debit memo was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
 *
 * @remarks
 *
 */
var GETDebitMemoTypeTransferredToAccountingEnum;
(function (GETDebitMemoTypeTransferredToAccountingEnum) {
    GETDebitMemoTypeTransferredToAccountingEnum["Processing"] = "Processing";
    GETDebitMemoTypeTransferredToAccountingEnum["Yes"] = "Yes";
    GETDebitMemoTypeTransferredToAccountingEnum["No"] = "No";
    GETDebitMemoTypeTransferredToAccountingEnum["Error"] = "Error";
    GETDebitMemoTypeTransferredToAccountingEnum["Ignore"] = "Ignore";
})(GETDebitMemoTypeTransferredToAccountingEnum = exports.GETDebitMemoTypeTransferredToAccountingEnum || (exports.GETDebitMemoTypeTransferredToAccountingEnum = {}));
/**
 * Container for custom fields of a Debit Memo object.
 *
 * @remarks
 *
 */
var GETDebitMemoType = /** @class */ (function (_super) {
    __extends(GETDebitMemoType, _super);
    function GETDebitMemoType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationId__NS" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "integrationIdNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationStatus__NS" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "integrationStatusNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SyncDate__NS" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "syncDateNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountId" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], GETDebitMemoType.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoPay" }),
        __metadata("design:type", Boolean)
    ], GETDebitMemoType.prototype, "autoPay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "balance" }),
        __metadata("design:type", Number)
    ], GETDebitMemoType.prototype, "balance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "beAppliedAmount" }),
        __metadata("design:type", Number)
    ], GETDebitMemoType.prototype, "beAppliedAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cancelledById" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "cancelledById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cancelledOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETDebitMemoType.prototype, "cancelledOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdById" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "createdById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETDebitMemoType.prototype, "createdDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "debitMemoDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETDebitMemoType.prototype, "debitMemoDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dueDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETDebitMemoType.prototype, "dueDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "latestPDFFileId" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "latestPDFFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postedById" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "postedById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postedOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETDebitMemoType.prototype, "postedOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reasonCode" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "reasonCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referredInvoiceId" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "referredInvoiceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "success" }),
        __metadata("design:type", Boolean)
    ], GETDebitMemoType.prototype, "success", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETDebitMemoType.prototype, "targetDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taxAmount" }),
        __metadata("design:type", Number)
    ], GETDebitMemoType.prototype, "taxAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taxMessage" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "taxMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taxStatus" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "taxStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "totalTaxExemptAmount" }),
        __metadata("design:type", Number)
    ], GETDebitMemoType.prototype, "totalTaxExemptAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferredToAccounting" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "transferredToAccounting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedById" }),
        __metadata("design:type", String)
    ], GETDebitMemoType.prototype, "updatedById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETDebitMemoType.prototype, "updatedDate", void 0);
    return GETDebitMemoType;
}(utils_1.SpeakeasyBase));
exports.GETDebitMemoType = GETDebitMemoType;
