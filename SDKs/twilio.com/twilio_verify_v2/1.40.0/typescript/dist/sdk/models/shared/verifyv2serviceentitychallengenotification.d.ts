import { SpeakeasyBase } from "../../../internal/utils";
/**
 * Created
 */
export declare class VerifyV2ServiceEntityChallengeNotification extends SpeakeasyBase {
    /**
     * The unique SID identifier of the Account.
     */
    accountSid?: string;
    /**
     * The unique SID identifier of the Challenge.
     */
    challengeSid?: string;
    /**
     * The date that this Notification was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    dateCreated?: Date;
    /**
     * The unique SID identifier of the Entity.
     */
    entitySid?: string;
    /**
     * Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
     */
    identity?: string;
    /**
     * The priority of the notification. For `push` Challenges it's always `high` which sends the notification immediately, and can wake up a sleeping device.
     */
    priority?: string;
    /**
     * The unique SID identifier of the Service.
     */
    serviceSid?: string;
    /**
     * A 34 character string that uniquely identifies this Notification.
     */
    sid?: string;
    /**
     * How long, in seconds, the notification is valid. Max: 5 minutes
     */
    ttl?: number;
}
