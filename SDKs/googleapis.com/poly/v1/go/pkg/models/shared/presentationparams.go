// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PresentationParamsColorSpaceEnum - The materials' diffuse/albedo color. This does not apply to vertex colors or texture maps.
type PresentationParamsColorSpaceEnum string

const (
	PresentationParamsColorSpaceEnumUnknown PresentationParamsColorSpaceEnum = "UNKNOWN"
	PresentationParamsColorSpaceEnumLinear  PresentationParamsColorSpaceEnum = "LINEAR"
	PresentationParamsColorSpaceEnumGamma   PresentationParamsColorSpaceEnum = "GAMMA"
)

func (e *PresentationParamsColorSpaceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "LINEAR":
		fallthrough
	case "GAMMA":
		*e = PresentationParamsColorSpaceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PresentationParamsColorSpaceEnum: %s", s)
	}
}

// PresentationParams - Hints for displaying the asset, based on information available when the asset was uploaded.
type PresentationParams struct {
	// A background color which could be used for displaying the 3D asset in a 'thumbnail' or 'palette' style view. Authors have the option to set this background color when publishing or editing their asset. This is represented as a six-digit hexademical triplet specifying the RGB components of the background color, e.g. #FF0000 for Red.
	BackgroundColor *string `json:"backgroundColor,omitempty"`
	// The materials' diffuse/albedo color. This does not apply to vertex colors or texture maps.
	ColorSpace *PresentationParamsColorSpaceEnum `json:"colorSpace,omitempty"`
	// A [Quaternion](//en.wikipedia.org/wiki/Quaternion). Please note: if in the response you see "w: 1" and nothing else this is the default value of [0, 0, 0, 1] where x,y, and z are 0.
	OrientingRotation *Quaternion `json:"orientingRotation,omitempty"`
}
