"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import behavior as shared_behavior
from ..shared import metricvalue as shared_metricvalue
from ..shared import verificationstate_enum as shared_verificationstate_enum
from ..shared import violationeventadditionalinfo as shared_violationeventadditionalinfo
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActiveViolation:
    r"""Information about an active Device Defender security profile behavior violation."""
    
    behavior: Optional[shared_behavior.Behavior] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('behavior'), 'exclude': lambda f: f is None }})  
    last_violation_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastViolationTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    last_violation_value: Optional[shared_metricvalue.MetricValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastViolationValue'), 'exclude': lambda f: f is None }})  
    security_profile_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securityProfileName'), 'exclude': lambda f: f is None }})  
    thing_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingName'), 'exclude': lambda f: f is None }})  
    verification_state: Optional[shared_verificationstate_enum.VerificationStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verificationState'), 'exclude': lambda f: f is None }})  
    verification_state_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verificationStateDescription'), 'exclude': lambda f: f is None }})  
    violation_event_additional_info: Optional[shared_violationeventadditionalinfo.ViolationEventAdditionalInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('violationEventAdditionalInfo'), 'exclude': lambda f: f is None }})  
    violation_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('violationId'), 'exclude': lambda f: f is None }})  
    violation_start_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('violationStartTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    