/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChangedBy } from "./changedby";
import { UserTitleEnum } from "./usertitleenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Event object.
 */
export class User extends SpeakeasyBase {
  /**
   * Date time of the last change
   */
  @SpeakeasyMetadata()
  @Expose({ name: "changed" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  changed?: Date;

  /**
   * User that last modified the object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "changed_by" })
  @Type(() => ChangedBy)
  changedBy?: ChangedBy;

  /**
   * User's email (changing this resets the user's password and revokes existing tokens)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Object id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Deleted users are marked as not active
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_active" })
  isActive?: boolean;

  /**
   * Account admin
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_admin" })
  isAdmin?: boolean;

  /**
   * Billing contact for the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_billing_admin" })
  isBillingAdmin?: boolean;

  /**
   * User's name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: UserTitleEnum;
}
