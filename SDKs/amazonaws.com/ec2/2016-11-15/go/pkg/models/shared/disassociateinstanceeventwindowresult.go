// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DisassociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags - Describes a tag.
type DisassociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags struct {
	Key   *string
	Value *string
}

// DisassociateInstanceEventWindowResultInstanceEventWindowAssociationTarget - One or more targets associated with the event window.
type DisassociateInstanceEventWindowResultInstanceEventWindowAssociationTarget struct {
	DedicatedHostIds []string
	InstanceIds      []string
	Tags             []DisassociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags
}

// DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum - The current state of the event window.
type DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum string

const (
	DisassociateInstanceEventWindowResultInstanceEventWindowStateEnumCreating DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum = "creating"
	DisassociateInstanceEventWindowResultInstanceEventWindowStateEnumDeleting DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum = "deleting"
	DisassociateInstanceEventWindowResultInstanceEventWindowStateEnumActive   DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum = "active"
	DisassociateInstanceEventWindowResultInstanceEventWindowStateEnumDeleted  DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum = "deleted"
)

func (e DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum) ToPointer() *DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum {
	return &e
}

func (e *DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "creating":
		fallthrough
	case "deleting":
		fallthrough
	case "active":
		fallthrough
	case "deleted":
		*e = DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum: %v", v)
	}
}

// DisassociateInstanceEventWindowResultInstanceEventWindowTags - Describes a tag.
type DisassociateInstanceEventWindowResultInstanceEventWindowTags struct {
	Key   *string
	Value *string
}

// DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum - The day on which the time range ends.
type DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum string

const (
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnumSunday    DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = "sunday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnumMonday    DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = "monday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnumTuesday   DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = "tuesday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnumWednesday DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = "wednesday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnumThursday  DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = "thursday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnumFriday    DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = "friday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnumSaturday  DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum = "saturday"
)

func (e DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum) ToPointer() *DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum {
	return &e
}

func (e *DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sunday":
		fallthrough
	case "monday":
		fallthrough
	case "tuesday":
		fallthrough
	case "wednesday":
		fallthrough
	case "thursday":
		fallthrough
	case "friday":
		fallthrough
	case "saturday":
		*e = DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum: %v", v)
	}
}

// DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum - The day on which the time range begins.
type DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum string

const (
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnumSunday    DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = "sunday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnumMonday    DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = "monday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnumTuesday   DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = "tuesday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnumWednesday DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = "wednesday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnumThursday  DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = "thursday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnumFriday    DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = "friday"
	DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnumSaturday  DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum = "saturday"
)

func (e DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum) ToPointer() *DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum {
	return &e
}

func (e *DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sunday":
		fallthrough
	case "monday":
		fallthrough
	case "tuesday":
		fallthrough
	case "wednesday":
		fallthrough
	case "thursday":
		fallthrough
	case "friday":
		fallthrough
	case "saturday":
		*e = DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum: %v", v)
	}
}

// DisassociateInstanceEventWindowResultInstanceEventWindowTimeRanges - The start day and time and the end day and time of the time range, in UTC.
type DisassociateInstanceEventWindowResultInstanceEventWindowTimeRanges struct {
	EndHour      *int64
	EndWeekDay   *DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum
	StartHour    *int64
	StartWeekDay *DisassociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum
}

// DisassociateInstanceEventWindowResultInstanceEventWindow - Information about the event window.
type DisassociateInstanceEventWindowResultInstanceEventWindow struct {
	AssociationTarget     *DisassociateInstanceEventWindowResultInstanceEventWindowAssociationTarget
	CronExpression        *string
	InstanceEventWindowID *string
	Name                  *string
	State                 *DisassociateInstanceEventWindowResultInstanceEventWindowStateEnum
	Tags                  []DisassociateInstanceEventWindowResultInstanceEventWindowTags
	TimeRanges            []DisassociateInstanceEventWindowResultInstanceEventWindowTimeRanges
}

// DisassociateInstanceEventWindowResult - Success
type DisassociateInstanceEventWindowResult struct {
	InstanceEventWindow *DisassociateInstanceEventWindowResultInstanceEventWindow
}
