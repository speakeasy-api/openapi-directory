"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inputparallelism as shared_inputparallelism
from ..shared import inputprocessingconfiguration as shared_inputprocessingconfiguration
from ..shared import kinesisfirehoseinput as shared_kinesisfirehoseinput
from ..shared import kinesisstreamsinput as shared_kinesisstreamsinput
from ..shared import sourceschema as shared_sourceschema
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Input:
    r"""When you configure the application input, you specify the streaming source, the in-application stream name that is created, and the mapping between the two. For more information, see <a href=\\"https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html\\">Configuring Application Input</a>."""
    
    input_schema: shared_sourceschema.SourceSchema = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputSchema') }})  
    name_prefix: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NamePrefix') }})  
    input_parallelism: Optional[shared_inputparallelism.InputParallelism] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputParallelism'), 'exclude': lambda f: f is None }})  
    input_processing_configuration: Optional[shared_inputprocessingconfiguration.InputProcessingConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputProcessingConfiguration'), 'exclude': lambda f: f is None }})  
    kinesis_firehose_input: Optional[shared_kinesisfirehoseinput.KinesisFirehoseInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisFirehoseInput'), 'exclude': lambda f: f is None }})  
    kinesis_streams_input: Optional[shared_kinesisstreamsinput.KinesisStreamsInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisStreamsInput'), 'exclude': lambda f: f is None }})  
    