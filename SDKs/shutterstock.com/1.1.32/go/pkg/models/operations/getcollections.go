// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetCollectionsSecurity struct {
	CustomerAccessCode string `security:"scheme,type=oauth2,name=Authorization"`
}

// GetCollectionsSortEnum - Sort by
type GetCollectionsSortEnum string

const (
	GetCollectionsSortEnumNewest GetCollectionsSortEnum = "newest"
	GetCollectionsSortEnumOldest GetCollectionsSortEnum = "oldest"
)

func (e *GetCollectionsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "newest":
		fallthrough
	case "oldest":
		*e = GetCollectionsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCollectionsSortEnum: %s", s)
	}
}

type GetCollectionsRequest struct {
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Set to true to omit collections that you own and return only collections  that are shared with you
	Shared *bool `queryParam:"style=form,explode=true,name=shared"`
	// Sort by
	Sort *GetCollectionsSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetCollectionsResponse struct {
	// OK
	CatalogCollectionDataList *shared.CatalogCollectionDataList
	ContentType               string
	StatusCode                int
	RawResponse               *http.Response
}
