/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RatesPerDate {
    /**
     * Determines whether the rate is available for a stay including this date.
     */
    @JsonProperty("closed")
    public Boolean closed;
    public RatesPerDate withClosed(Boolean closed) {
        this.closed = closed;
        return this;
    }
    
    /**
     * Determines whether the rate is available if the arrival falls on this date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("closedToArrival")
    public Boolean closedToArrival;
    public RatesPerDate withClosedToArrival(Boolean closedToArrival) {
        this.closedToArrival = closedToArrival;
        return this;
    }
    
    /**
     * Determines whether the rate is available if the departure falls on this date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("closedToDeparture")
    public Boolean closedToDeparture;
    public RatesPerDate withClosedToDeparture(Boolean closedToDeparture) {
        this.closedToDeparture = closedToDeparture;
        return this;
    }
    
    @JsonProperty("date")
    public String date;
    public RatesPerDate withDate(String date) {
        this.date = date;
        return this;
    }
    
    /**
     * Rate prices for each occupancy the room can accommodate.
     */
    @JsonProperty("rates")
    public RatePlanRate[] rates;
    public RatesPerDate withRates(RatePlanRate[] rates) {
        this.rates = rates;
        return this;
    }
    
    /**
     * The minimum number of nights (inclusive) that the guest has to book which include the date to be eligible for this rate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("staythrough")
    public RatesPerDateStaythrough staythrough;
    public RatesPerDate withStaythrough(RatesPerDateStaythrough staythrough) {
        this.staythrough = staythrough;
        return this;
    }
    
}
