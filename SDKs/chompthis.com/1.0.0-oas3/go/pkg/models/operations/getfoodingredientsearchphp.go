// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFoodIngredientSearchPhpSecurity struct {
	APIKeyAuth shared.SchemeAPIKeyAuth `security:"scheme,type=apiKey,subtype=query"`
}

// GetFoodIngredientSearchPhpLimitEnum - #### Set maximum number of records you want the API to return, per search term. The default value is "**1**."
//
// **Example**
// > ```&limit=3```
type GetFoodIngredientSearchPhpLimitEnum string

const (
	GetFoodIngredientSearchPhpLimitEnumOne   GetFoodIngredientSearchPhpLimitEnum = "1"
	GetFoodIngredientSearchPhpLimitEnumTwo   GetFoodIngredientSearchPhpLimitEnum = "2"
	GetFoodIngredientSearchPhpLimitEnumThree GetFoodIngredientSearchPhpLimitEnum = "3"
)

func (e *GetFoodIngredientSearchPhpLimitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		*e = GetFoodIngredientSearchPhpLimitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFoodIngredientSearchPhpLimitEnum: %s", s)
	}
}

type GetFoodIngredientSearchPhpQueryParams struct {
	// Search our database for a single ingredient or a specific set of ingredients.
	//
	// **Example #1: Single Ingredient**
	// > ```&find=raw broccoli```
	//
	// **Example #2: Set of Ingredients**
	// > ```&find=raw broccoli,buttermilk waffle,mashed potatoes```
	//
	// **Important Notes**
	//   * Comma-separated lists cannot contain more than **10 ingredients**. You must perform additional API calls if you are looking up more than 10 ingredients.
	//
	Find string `queryParam:"style=form,explode=true,name=find"`
	// #### Set maximum number of records you want the API to return, per search term. The default value is "**1**."
	//
	// **Example**
	// > ```&limit=3```
	//
	Limit *GetFoodIngredientSearchPhpLimitEnum `queryParam:"style=form,explode=true,name=limit"`
}

type GetFoodIngredientSearchPhpRequest struct {
	QueryParams GetFoodIngredientSearchPhpQueryParams
	Security    GetFoodIngredientSearchPhpSecurity
}

type GetFoodIngredientSearchPhpResponse struct {
	ContentType string
	// **Valid** - Will return an object containing any matching ingredient foods.
	//
	IngredientObject *shared.IngredientObject
	StatusCode       int
	RawResponse      *http.Response
}
