/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ImageRecipe - An image recipe.
 */
public class ImageRecipe {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalInstanceConfiguration")
    public AdditionalInstanceConfiguration additionalInstanceConfiguration;
    public ImageRecipe withAdditionalInstanceConfiguration(AdditionalInstanceConfiguration additionalInstanceConfiguration) {
        this.additionalInstanceConfiguration = additionalInstanceConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;
    public ImageRecipe withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockDeviceMappings")
    public InstanceBlockDeviceMapping[] blockDeviceMappings;
    public ImageRecipe withBlockDeviceMappings(InstanceBlockDeviceMapping[] blockDeviceMappings) {
        this.blockDeviceMappings = blockDeviceMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("components")
    public ComponentConfiguration[] components;
    public ImageRecipe withComponents(ComponentConfiguration[] components) {
        this.components = components;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateCreated")
    public String dateCreated;
    public ImageRecipe withDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ImageRecipe withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ImageRecipe withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public String owner;
    public ImageRecipe withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentImage")
    public String parentImage;
    public ImageRecipe withParentImage(String parentImage) {
        this.parentImage = parentImage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public PlatformEnum platform;
    public ImageRecipe withPlatform(PlatformEnum platform) {
        this.platform = platform;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public ImageRecipe withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public ImageTypeEnum type;
    public ImageRecipe withType(ImageTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;
    public ImageRecipe withVersion(String version) {
        this.version = version;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workingDirectory")
    public String workingDirectory;
    public ImageRecipe withWorkingDirectory(String workingDirectory) {
        this.workingDirectory = workingDirectory;
        return this;
    }
    
}
