/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { PostCustomObjectDefinitionsRequestDefinition } from "./postcustomobjectdefinitionsrequestdefinition";
import { Expose, Transform } from "class-transformer";

/**
 * The custom object definitions to be created
 */
export class PostCustomObjectDefinitionsRequest extends SpeakeasyBase {
  /**
   * The custom object definitions. This object maps types to custom object definitions.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: PostCustomObjectDefinitionsRequestDefinition })
  @Expose({ name: "definitions" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, PostCustomObjectDefinitionsRequestDefinition> =
        {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          PostCustomObjectDefinitionsRequestDefinition
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  definitions?: Record<string, PostCustomObjectDefinitionsRequestDefinition>;
}
