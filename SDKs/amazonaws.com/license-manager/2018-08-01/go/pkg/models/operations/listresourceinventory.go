// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListResourceInventoryXAmzTargetEnum
type ListResourceInventoryXAmzTargetEnum string

const (
	ListResourceInventoryXAmzTargetEnumAwsLicenseManagerListResourceInventory ListResourceInventoryXAmzTargetEnum = "AWSLicenseManager.ListResourceInventory"
)

func (e ListResourceInventoryXAmzTargetEnum) ToPointer() *ListResourceInventoryXAmzTargetEnum {
	return &e
}

func (e *ListResourceInventoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSLicenseManager.ListResourceInventory":
		*e = ListResourceInventoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListResourceInventoryXAmzTargetEnum: %v", v)
	}
}

type ListResourceInventoryRequest struct {
	ListResourceInventoryRequest shared.ListResourceInventoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   ListResourceInventoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListResourceInventoryResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	ContentType            string
	// FailedDependencyException
	FailedDependencyException interface{}
	// FilterLimitExceededException
	FilterLimitExceededException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// Success
	ListResourceInventoryResponse *shared.ListResourceInventoryResponse
	// RateLimitExceededException
	RateLimitExceededException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ServerInternalException
	ServerInternalException interface{}
}
