"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventinfo as shared_eventinfo
from ..shared import vendorname_enum as shared_vendorname_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RequestMetadata:
    r"""Metadata that is associated with a code review. This applies to both pull request and repository analysis code reviews."""
    
    event_info: Optional[shared_eventinfo.EventInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EventInfo'), 'exclude': lambda f: f is None }})  
    requester: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Requester'), 'exclude': lambda f: f is None }})  
    request_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequestId'), 'exclude': lambda f: f is None }})  
    vendor_name: Optional[shared_vendorname_enum.VendorNameEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VendorName'), 'exclude': lambda f: f is None }})  
    