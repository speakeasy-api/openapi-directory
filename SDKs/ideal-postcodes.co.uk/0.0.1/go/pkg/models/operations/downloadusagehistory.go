// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DownloadUsageHistorySecurity struct {
	APIKey    shared.SchemeAPIKey    `security:"scheme,type=apiKey,subtype=query"`
	UserToken shared.SchemeUserToken `security:"scheme,type=apiKey,subtype=query"`
}

type DownloadUsageHistoryPathParams struct {
	Key string `pathParam:"style=simple,explode=false,name=key"`
}

type DownloadUsageHistoryQueryParams struct {
	// An end date/time in the form of a UNIX Timestamp in milliseconds, e.g. 1418556452651. If no end time is provided, the current time will be used.
	End *int `queryParam:"style=form,explode=true,name=end"`
	// Sublicensed keys only. This will restrict the analysed dataset to a specific licensee.
	Licensee *string `queryParam:"style=form,explode=true,name=licensee"`
	// An start date/time in the form of a UNIX Timestamp in milliseconds, e.g. 1418556452651. If no start time is provided, the start time will be assigned to a time 21 days prior to the end time.
	Start *int `queryParam:"style=form,explode=true,name=start"`
}

type DownloadUsageHistoryRequest struct {
	PathParams  DownloadUsageHistoryPathParams
	QueryParams DownloadUsageHistoryQueryParams
	Security    DownloadUsageHistorySecurity
}

type DownloadUsageHistoryResponse struct {
	ContentType string
	// Success
	DownloadUsageHistory200TextCsvString *string
	// Bad request
	ErrorResponseSchema *shared.ErrorResponseSchema
	StatusCode          int
	RawResponse         *http.Response
}
