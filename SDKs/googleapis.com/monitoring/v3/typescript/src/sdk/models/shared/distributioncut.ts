/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleMonitoringV3Range } from "./googlemonitoringv3range";
import { Expose, Type } from "class-transformer";

/**
 * A DistributionCut defines a TimeSeries and thresholds used for measuring good service and total service. The TimeSeries must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE. The computed good_service will be the estimated count of values in the Distribution that fall within the specified min and max.
 */
export class DistributionCut extends SpeakeasyBase {
  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries aggregating values. Must have ValueType = DISTRIBUTION and MetricKind = DELTA or MetricKind = CUMULATIVE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distributionFilter" })
  distributionFilter?: string;

  /**
   * Range of numerical values within min and max.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => GoogleMonitoringV3Range)
  range?: GoogleMonitoringV3Range;
}
