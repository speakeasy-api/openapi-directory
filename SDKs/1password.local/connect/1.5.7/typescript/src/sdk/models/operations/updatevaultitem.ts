/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class UpdateVaultItemSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  connectToken: string;
}

export class UpdateVaultItemRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  fullItemInput?: shared.FullItemInput;

  /**
   * The UUID of the Item to update
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=itemUuid",
  })
  itemUuid: string;

  /**
   * The UUID of the Item's Vault
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=vaultUuid",
  })
  vaultUuid: string;
}

export class UpdateVaultItemResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unable to create item due to invalid input
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  fullItem?: shared.FullItem;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
