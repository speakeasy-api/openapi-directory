// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListTypesFormatEnum - The type format: SDL or JSON.
type ListTypesFormatEnum string

const (
	ListTypesFormatEnumSdl  ListTypesFormatEnum = "SDL"
	ListTypesFormatEnumJSON ListTypesFormatEnum = "JSON"
)

func (e ListTypesFormatEnum) ToPointer() *ListTypesFormatEnum {
	return &e
}

func (e *ListTypesFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SDL":
		fallthrough
	case "JSON":
		*e = ListTypesFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTypesFormatEnum: %v", v)
	}
}

type ListTypesRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The API ID.
	APIID string `pathParam:"style=simple,explode=false,name=apiId"`
	// The type format: SDL or JSON.
	Format ListTypesFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The maximum number of results that you want the request to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// An identifier that was returned from the previous call to this operation, which you can use to return the next set of items in the list.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListTypesResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InternalFailureException
	InternalFailureException interface{}
	// Success
	ListTypesResponse *shared.ListTypesResponse
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
}
