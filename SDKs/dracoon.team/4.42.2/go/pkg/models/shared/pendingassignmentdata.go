// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PendingAssignmentDataStateEnum - Acceptance state:
//
// * `ACCEPTED`
//
// * `WAITING`
//
// * `DENIED`
type PendingAssignmentDataStateEnum string

const (
	PendingAssignmentDataStateEnumAccepted PendingAssignmentDataStateEnum = "ACCEPTED"
	PendingAssignmentDataStateEnumDenied   PendingAssignmentDataStateEnum = "DENIED"
	PendingAssignmentDataStateEnumWaiting  PendingAssignmentDataStateEnum = "WAITING"
)

func (e *PendingAssignmentDataStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCEPTED":
		fallthrough
	case "DENIED":
		fallthrough
	case "WAITING":
		*e = PendingAssignmentDataStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PendingAssignmentDataStateEnum: %s", s)
	}
}

// PendingAssignmentData - Pending assignment information
type PendingAssignmentData struct {
	// Group information
	GroupInfo GroupInfo `json:"groupInfo"`
	// Pending group information
	PendingGroupData PendingGroupData `json:"pendingGroupData"`
	// Pending user information
	PendingUserData PendingUserData `json:"pendingUserData"`
	// Room ID
	RoomID int64 `json:"roomId"`
	// Room name
	RoomName string `json:"roomName"`
	// Acceptance state:
	//
	// * `ACCEPTED`
	//
	// * `WAITING`
	//
	// * `DENIED`
	State PendingAssignmentDataStateEnum `json:"state"`
	// User information
	UserInfo UserInfo `json:"userInfo"`
}
