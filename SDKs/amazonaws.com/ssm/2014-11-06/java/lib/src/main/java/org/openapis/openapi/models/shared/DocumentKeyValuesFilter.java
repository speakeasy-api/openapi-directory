/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DocumentKeyValuesFilter - &lt;p&gt;One or more filters. Use a filter to return a more specific list of documents.&lt;/p&gt; &lt;p&gt;For keys, you can specify one or more tags that have been applied to a document. &lt;/p&gt; &lt;p&gt;You can also use Amazon Web Services-provided keys, some of which have specific allowed values. These keys and their associated values are as follows:&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;DocumentType&lt;/dt&gt; &lt;dd&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ApplicationConfiguration&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ApplicationConfigurationSchema&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Automation&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ChangeCalendar&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Command&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Package&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/dd&gt; &lt;dt&gt;Owner&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;Note that only one &lt;code&gt;Owner&lt;/code&gt; can be specified in a request. For example: &lt;code&gt;Key=Owner,Values=Self&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Amazon&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Private&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Public&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Self&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ThirdParty&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/dd&gt; &lt;dt&gt;PlatformTypes&lt;/dt&gt; &lt;dd&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Linux&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;Windows&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; &lt;code&gt;Name&lt;/code&gt; is another Amazon Web Services-provided key. If you use &lt;code&gt;Name&lt;/code&gt; as a key, you can use a name prefix to return a list of documents. For example, in the Amazon Web Services CLI, to return a list of all documents that begin with &lt;code&gt;Te&lt;/code&gt;, run the following command:&lt;/p&gt; &lt;p&gt; &lt;code&gt;aws ssm list-documents --filters Key=Name,Values=Te&lt;/code&gt; &lt;/p&gt; &lt;p&gt;You can also use the &lt;code&gt;TargetType&lt;/code&gt; Amazon Web Services-provided key. For a list of valid resource type values that can be used with this key, see &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html"&gt;Amazon Web Services resource and property types reference&lt;/a&gt; in the &lt;i&gt;CloudFormation User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If you specify more than two keys, only documents that are identified by all the tags are returned in the results. If you specify more than two values for a key, documents that are identified by any of the values are returned in the results.&lt;/p&gt; &lt;p&gt;To specify a custom key-value pair, use the format &lt;code&gt;Key=tag:tagName,Values=valueName&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For example, if you created a key called region and are using the Amazon Web Services CLI to call the &lt;code&gt;list-documents&lt;/code&gt; command: &lt;/p&gt; &lt;p&gt; &lt;code&gt;aws ssm list-documents --filters Key=tag:region,Values=east,west Key=Owner,Values=Self&lt;/code&gt; &lt;/p&gt;
 */
public class DocumentKeyValuesFilter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Key")
    public String key;
    public DocumentKeyValuesFilter withKey(String key) {
        this.key = key;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Values")
    public String[] values;
    public DocumentKeyValuesFilter withValues(String[] values) {
        this.values = values;
        return this;
    }
    
}
