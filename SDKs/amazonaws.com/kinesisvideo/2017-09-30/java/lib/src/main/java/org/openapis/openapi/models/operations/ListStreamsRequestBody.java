/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListStreamsRequestBody {
    /**
     * The maximum number of streams to return in the response. The default is 10,000.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;
    public ListStreamsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * If you specify this parameter, when the result of a &lt;code&gt;ListStreams&lt;/code&gt; operation is truncated, the call returns the &lt;code&gt;NextToken&lt;/code&gt; in the response. To get another batch of streams, provide this token in your next request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;
    public ListStreamsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * Specifies the condition that streams must satisfy to be returned when you list streams (see the &lt;code&gt;ListStreams&lt;/code&gt; API). A condition has a comparison operation and a value. Currently, you can specify only the &lt;code&gt;BEGINS_WITH&lt;/code&gt; operator, which finds streams whose names start with a given prefix. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreamNameCondition")
    public ListStreamsRequestBodyStreamNameCondition streamNameCondition;
    public ListStreamsRequestBody withStreamNameCondition(ListStreamsRequestBodyStreamNameCondition streamNameCondition) {
        this.streamNameCondition = streamNameCondition;
        return this;
    }
    
}
