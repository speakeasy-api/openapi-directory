/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateWirelessCommandServerList = [
  "https://preview.twilio.com",
] as const;

export class CreateWirelessCommandSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateWirelessCommandCreateWirelessCommandRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "form, name=CallbackMethod" })
  callbackMethod?: string;

  @SpeakeasyMetadata({ data: "form, name=CallbackUrl" })
  callbackUrl?: string;

  @SpeakeasyMetadata({ data: "form, name=Command" })
  command: string;

  @SpeakeasyMetadata({ data: "form, name=CommandMode" })
  commandMode?: string;

  @SpeakeasyMetadata({ data: "form, name=Device" })
  device?: string;

  @SpeakeasyMetadata({ data: "form, name=IncludeSid" })
  includeSid?: string;

  @SpeakeasyMetadata({ data: "form, name=Sim" })
  sim?: string;
}

export class CreateWirelessCommandResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  previewWirelessCommand?: shared.PreviewWirelessCommand;
}
