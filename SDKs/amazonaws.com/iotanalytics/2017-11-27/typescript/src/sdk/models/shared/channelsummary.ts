/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelStatusEnum } from "./channelstatusenum";
import { ChannelStorageSummary } from "./channelstoragesummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A summary of information about a channel.
 */
export class ChannelSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "channelName" })
  channelName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "channelStorage" })
  @Type(() => ChannelStorageSummary)
  channelStorage?: ChannelStorageSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastMessageArrivalTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastMessageArrivalTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ChannelStatusEnum;
}
