// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContentStatusEnum string

const (
	ContentStatusEnumCreateInProgress ContentStatusEnum = "CREATE_IN_PROGRESS"
	ContentStatusEnumCreateFailed     ContentStatusEnum = "CREATE_FAILED"
	ContentStatusEnumActive           ContentStatusEnum = "ACTIVE"
	ContentStatusEnumDeleteInProgress ContentStatusEnum = "DELETE_IN_PROGRESS"
	ContentStatusEnumDeleteFailed     ContentStatusEnum = "DELETE_FAILED"
	ContentStatusEnumDeleted          ContentStatusEnum = "DELETED"
	ContentStatusEnumUpdateFailed     ContentStatusEnum = "UPDATE_FAILED"
)

func (e ContentStatusEnum) ToPointer() *ContentStatusEnum {
	return &e
}

func (e *ContentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETE_IN_PROGRESS":
		fallthrough
	case "DELETE_FAILED":
		fallthrough
	case "DELETED":
		fallthrough
	case "UPDATE_FAILED":
		*e = ContentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentStatusEnum: %v", v)
	}
}
