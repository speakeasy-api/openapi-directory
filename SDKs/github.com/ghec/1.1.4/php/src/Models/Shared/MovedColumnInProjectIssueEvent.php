<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MovedColumnInProjectIssueEvent - Moved Column in Project Issue Event
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MovedColumnInProjectIssueEvent
{
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleUser $actor
     */
	#[\JMS\Serializer\Annotation\SerializedName('actor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleUser')]
    public SimpleUser $actor;
    
	#[\JMS\Serializer\Annotation\SerializedName('commit_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commitId;
    
	#[\JMS\Serializer\Annotation\SerializedName('commit_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commitUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('event')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $event;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
    /**
     * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableIntegration $performedViaGithubApp
     */
	#[\JMS\Serializer\Annotation\SerializedName('performed_via_github_app')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableIntegration')]
    public NullableIntegration $performedViaGithubApp;
    
	#[\JMS\Serializer\Annotation\SerializedName('project_card')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MovedColumnInProjectIssueEventProjectCard')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MovedColumnInProjectIssueEventProjectCard $projectCard = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->actor = new \OpenAPI\OpenAPI\Models\Shared\SimpleUser();
		$this->commitId = "";
		$this->commitUrl = "";
		$this->createdAt = "";
		$this->event = "";
		$this->id = 0;
		$this->nodeId = "";
		$this->performedViaGithubApp = new \OpenAPI\OpenAPI\Models\Shared\NullableIntegration();
		$this->projectCard = null;
		$this->url = "";
	}
}
