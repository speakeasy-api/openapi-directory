"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import repository_invitation as shared_repository_invitation
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReposUpdateInvitationRequestBodyPermissionsEnum(str, Enum):
    r"""The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`."""
    READ = 'read'
    WRITE = 'write'
    MAINTAIN = 'maintain'
    TRIAGE = 'triage'
    ADMIN = 'admin'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReposUpdateInvitationRequestBody:
    
    permissions: Optional[ReposUpdateInvitationRequestBodyPermissionsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})
    r"""The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`."""  
    

@dataclasses.dataclass
class ReposUpdateInvitationRequest:
    
    invitation_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'invitation_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the invitation."""  
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    request_body: Optional[ReposUpdateInvitationRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class ReposUpdateInvitationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    repository_invitation: Optional[shared_repository_invitation.RepositoryInvitation] = dataclasses.field(default=None)
    r"""Response"""  
    