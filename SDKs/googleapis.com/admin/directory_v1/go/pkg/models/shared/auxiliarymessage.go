// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AuxiliaryMessageSeverityEnum - Message severity
type AuxiliaryMessageSeverityEnum string

const (
	AuxiliaryMessageSeverityEnumSeverityUnspecified AuxiliaryMessageSeverityEnum = "SEVERITY_UNSPECIFIED"
	AuxiliaryMessageSeverityEnumSeverityInfo        AuxiliaryMessageSeverityEnum = "SEVERITY_INFO"
	AuxiliaryMessageSeverityEnumSeverityWarning     AuxiliaryMessageSeverityEnum = "SEVERITY_WARNING"
	AuxiliaryMessageSeverityEnumSeverityError       AuxiliaryMessageSeverityEnum = "SEVERITY_ERROR"
)

func (e AuxiliaryMessageSeverityEnum) ToPointer() *AuxiliaryMessageSeverityEnum {
	return &e
}

func (e *AuxiliaryMessageSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "SEVERITY_INFO":
		fallthrough
	case "SEVERITY_WARNING":
		fallthrough
	case "SEVERITY_ERROR":
		*e = AuxiliaryMessageSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuxiliaryMessageSeverityEnum: %v", v)
	}
}

// AuxiliaryMessage - Auxiliary message about issues with printers or settings. Example: {message_type:AUXILIARY_MESSAGE_WARNING, field_mask:make_and_model, message:"Given printer is invalid or no longer supported."}
type AuxiliaryMessage struct {
	// Human readable message in English. Example: "Given printer is invalid or no longer supported."
	AuxiliaryMessage *string `json:"auxiliaryMessage,omitempty"`
	// Field that this message concerns.
	FieldMask *string `json:"fieldMask,omitempty"`
	// Message severity
	Severity *AuxiliaryMessageSeverityEnum `json:"severity,omitempty"`
}
