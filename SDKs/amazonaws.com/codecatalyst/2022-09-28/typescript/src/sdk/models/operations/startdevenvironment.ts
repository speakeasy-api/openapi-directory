/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The Amazon EC2 instace type to use for the Dev Environment.
 */
export enum StartDevEnvironmentRequestBodyInstanceTypeEnum {
  DevStandard1Small = "dev.standard1.small",
  DevStandard1Medium = "dev.standard1.medium",
  DevStandard1Large = "dev.standard1.large",
  DevStandard1Xlarge = "dev.standard1.xlarge",
}

export class StartDevEnvironmentRequestBody extends SpeakeasyBase {
  /**
   * Information about the integrated development environment (IDE) configured for a Dev Environment.
   */
  @SpeakeasyMetadata({ elemType: shared.IdeConfiguration })
  @Expose({ name: "ides" })
  @Type(() => shared.IdeConfiguration)
  ides?: shared.IdeConfiguration[];

  /**
   * The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inactivityTimeoutMinutes" })
  inactivityTimeoutMinutes?: number;

  /**
   * The Amazon EC2 instace type to use for the Dev Environment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceType" })
  instanceType?: StartDevEnvironmentRequestBodyInstanceTypeEnum;
}

export class StartDevEnvironmentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: StartDevEnvironmentRequestBody;

  /**
   * The system-generated unique ID of the Dev Environment.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * The name of the project in the space.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectName",
  })
  projectName: string;

  /**
   * The name of the space.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceName",
  })
  spaceName: string;
}

export class StartDevEnvironmentResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceQuotaExceededException
   */
  @SpeakeasyMetadata()
  serviceQuotaExceededException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  startDevEnvironmentResponse?: shared.StartDevEnvironmentResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
