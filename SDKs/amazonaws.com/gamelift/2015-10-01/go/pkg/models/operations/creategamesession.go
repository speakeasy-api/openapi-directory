// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateGameSessionXAmzTargetEnum
type CreateGameSessionXAmzTargetEnum string

const (
	CreateGameSessionXAmzTargetEnumGameLiftCreateGameSession CreateGameSessionXAmzTargetEnum = "GameLift.CreateGameSession"
)

func (e CreateGameSessionXAmzTargetEnum) ToPointer() *CreateGameSessionXAmzTargetEnum {
	return &e
}

func (e *CreateGameSessionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GameLift.CreateGameSession":
		*e = CreateGameSessionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateGameSessionXAmzTargetEnum: %v", v)
	}
}

type CreateGameSessionRequest struct {
	CreateGameSessionInput shared.CreateGameSessionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             CreateGameSessionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateGameSessionResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateGameSessionOutput *shared.CreateGameSessionOutput
	// FleetCapacityExceededException
	FleetCapacityExceededException interface{}
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidFleetStatusException
	InvalidFleetStatusException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TerminalRoutingStrategyException
	TerminalRoutingStrategyException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
	// UnsupportedRegionException
	UnsupportedRegionException interface{}
}
