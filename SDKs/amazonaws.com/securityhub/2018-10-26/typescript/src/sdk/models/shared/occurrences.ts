/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Cell } from "./cell";
import { Page } from "./page";
import { Range } from "./range";
import { RecordT } from "./record";
import { Expose, Type } from "class-transformer";

/**
 * The detected occurrences of sensitive data.
 */
export class Occurrences extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Cell })
  @Expose({ name: "Cells" })
  @Type(() => Cell)
  cells?: Cell[];

  @SpeakeasyMetadata({ elemType: Range })
  @Expose({ name: "LineRanges" })
  @Type(() => Range)
  lineRanges?: Range[];

  @SpeakeasyMetadata({ elemType: Range })
  @Expose({ name: "OffsetRanges" })
  @Type(() => Range)
  offsetRanges?: Range[];

  @SpeakeasyMetadata({ elemType: Page })
  @Expose({ name: "Pages" })
  @Type(() => Page)
  pages?: Page[];

  @SpeakeasyMetadata({ elemType: RecordT })
  @Expose({ name: "Records" })
  @Type(() => RecordT)
  records?: RecordT[];
}
