<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Format - The same asset can be represented in different formats, for example, a [WaveFront .obj](//en.wikipedia.org/wiki/Wavefront_.obj_file) file with its corresponding .mtl file or a [Khronos glTF](//www.khronos.org/gltf) file with its corresponding .glb binary data. A format refers to a specific representation of an asset and contains all information needed to retrieve and describe this representation.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Format
{
    /**
     * Information on the complexity of this Format.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FormatComplexity $formatComplexity
     */
	#[\JMS\Serializer\Annotation\SerializedName('formatComplexity')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FormatComplexity')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FormatComplexity $formatComplexity = null;
    
    /**
     * A short string that identifies the format type of this representation. Possible values are: `FBX`, `GLTF`, `GLTF2`, `OBJ`, and `TILT`.
     * 
     * @var ?string $formatType
     */
	#[\JMS\Serializer\Annotation\SerializedName('formatType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formatType = null;
    
    /**
     * A list of dependencies of the root element. May include, but is not limited to, materials, textures, and shader programs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\File> $resources
     */
	#[\JMS\Serializer\Annotation\SerializedName('resources')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\File>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resources = null;
    
    /**
     * Represents a file in Poly, which can be a root, resource, or thumbnail file.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\File $root
     */
	#[\JMS\Serializer\Annotation\SerializedName('root')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\File')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?File $root = null;
    
	public function __construct()
	{
		$this->formatComplexity = null;
		$this->formatType = null;
		$this->resources = null;
		$this->root = null;
	}
}
