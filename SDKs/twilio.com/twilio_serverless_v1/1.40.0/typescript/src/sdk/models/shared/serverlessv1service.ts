/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class ServerlessV1Service extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The date and time in GMT when the Service resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date and time in GMT when the Service resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * The base domain name for this Service, which is a combination of the unique name and a randomly generated string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain_base" })
  domainBase?: string;

  /**
   * The string that you assigned to describe the Service resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  /**
   * Whether to inject Account credentials into a function invocation context.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "include_credentials" })
  includeCredentials?: boolean;

  /**
   * The URLs of the Service's nested resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * The unique string that we created to identify the Service resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * Whether the Service resource's properties and subresources can be edited via the UI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ui_editable" })
  uiEditable?: boolean;

  /**
   * A user-defined string that uniquely identifies the Service resource. It can be used in place of the Service resource's `sid` in the URL to address the Service resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unique_name" })
  uniqueName?: string;

  /**
   * The absolute URL of the Service resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
