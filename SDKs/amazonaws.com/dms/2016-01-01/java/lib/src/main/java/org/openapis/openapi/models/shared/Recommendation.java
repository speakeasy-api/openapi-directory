/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Recommendation - &lt;p&gt;Provides information that describes a recommendation of a target engine.&lt;/p&gt; &lt;p&gt;A &lt;i&gt;recommendation&lt;/i&gt; is a set of possible Amazon Web Services target engines that you can choose to migrate your source on-premises database. In this set, Fleet Advisor suggests a single target engine as the right sized migration destination. To determine this rightsized migration destination, Fleet Advisor uses the inventory metadata and metrics from data collector. You can use recommendations before the start of migration to save costs and reduce risks.&lt;/p&gt; &lt;p&gt;With recommendations, you can explore different target options and compare metrics, so you can make an informed decision when you choose the migration target.&lt;/p&gt;
 */
public class Recommendation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedDate")
    public String createdDate;

    public Recommendation withCreatedDate(String createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Data")
    public RecommendationData data;

    public Recommendation withData(RecommendationData data) {
        this.data = data;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DatabaseId")
    public String databaseId;

    public Recommendation withDatabaseId(String databaseId) {
        this.databaseId = databaseId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EngineName")
    public String engineName;

    public Recommendation withEngineName(String engineName) {
        this.engineName = engineName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Preferred")
    public Boolean preferred;

    public Recommendation withPreferred(Boolean preferred) {
        this.preferred = preferred;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Settings")
    public RecommendationSettings settings;

    public Recommendation withSettings(RecommendationSettings settings) {
        this.settings = settings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;

    public Recommendation withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public Recommendation(){}
}
