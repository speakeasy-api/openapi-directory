"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filtercondition as shared_filtercondition
from ..shared import sortcondition as shared_sortcondition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListDomainsRequest:
    r"""The ListDomains request includes the following elements."""
    
    filter_conditions: Optional[list[shared_filtercondition.FilterCondition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FilterConditions'), 'exclude': lambda f: f is None }})  
    marker: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Marker'), 'exclude': lambda f: f is None }})  
    max_items: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxItems'), 'exclude': lambda f: f is None }})  
    sort_condition: Optional[shared_sortcondition.SortCondition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SortCondition'), 'exclude': lambda f: f is None }})  
    