// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateBatchSegmentJobXAmzTargetEnum
type CreateBatchSegmentJobXAmzTargetEnum string

const (
	CreateBatchSegmentJobXAmzTargetEnumAmazonPersonalizeCreateBatchSegmentJob CreateBatchSegmentJobXAmzTargetEnum = "AmazonPersonalize.CreateBatchSegmentJob"
)

func (e *CreateBatchSegmentJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonPersonalize.CreateBatchSegmentJob":
		*e = CreateBatchSegmentJobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBatchSegmentJobXAmzTargetEnum: %s", s)
	}
}

type CreateBatchSegmentJobRequest struct {
	CreateBatchSegmentJobRequest shared.CreateBatchSegmentJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   CreateBatchSegmentJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateBatchSegmentJobResponse struct {
	ContentType string
	// Success
	CreateBatchSegmentJobResponse *shared.CreateBatchSegmentJobResponse
	// InvalidInputException
	InvalidInputException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TooManyTagsException
	TooManyTagsException interface{}
}
