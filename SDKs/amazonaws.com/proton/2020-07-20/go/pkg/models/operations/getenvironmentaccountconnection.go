// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetEnvironmentAccountConnectionXAmzTargetEnum
type GetEnvironmentAccountConnectionXAmzTargetEnum string

const (
	GetEnvironmentAccountConnectionXAmzTargetEnumAwsProton20200720GetEnvironmentAccountConnection GetEnvironmentAccountConnectionXAmzTargetEnum = "AwsProton20200720.GetEnvironmentAccountConnection"
)

func (e GetEnvironmentAccountConnectionXAmzTargetEnum) ToPointer() *GetEnvironmentAccountConnectionXAmzTargetEnum {
	return &e
}

func (e *GetEnvironmentAccountConnectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AwsProton20200720.GetEnvironmentAccountConnection":
		*e = GetEnvironmentAccountConnectionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetEnvironmentAccountConnectionXAmzTargetEnum: %v", v)
	}
}

type GetEnvironmentAccountConnectionRequest struct {
	GetEnvironmentAccountConnectionInput shared.GetEnvironmentAccountConnectionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           GetEnvironmentAccountConnectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetEnvironmentAccountConnectionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetEnvironmentAccountConnectionOutput *shared.GetEnvironmentAccountConnectionOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
