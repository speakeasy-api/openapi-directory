<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateNetworkWirelessSsidRequestBodyRadiusServers
{
    /**
     * Certificate used for authorization for the RADSEC Server
     * 
     * @var ?string $caCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('caCertificate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $caCertificate = null;
    
    /**
     * IP address of your RADIUS server
     * 
     * @var string $host
     */
	#[\JMS\Serializer\Annotation\SerializedName('host')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $host;
    
    /**
     * The ID of the Openroaming Certificate attached to radius server.
     * 
     * @var ?int $openRoamingCertificateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('openRoamingCertificateId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $openRoamingCertificateId = null;
    
    /**
     * UDP port the RADIUS server listens on for Access-requests
     * 
     * @var ?int $port
     */
	#[\JMS\Serializer\Annotation\SerializedName('port')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $port = null;
    
    /**
     * Use RADSEC (TLS over TCP) to connect to this RADIUS server. Requires radiusProxyEnabled.
     * 
     * @var ?bool $radsecEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('radsecEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $radsecEnabled = null;
    
    /**
     * RADIUS client shared secret
     * 
     * @var ?string $secret
     */
	#[\JMS\Serializer\Annotation\SerializedName('secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secret = null;
    
	public function __construct()
	{
		$this->caCertificate = null;
		$this->host = "";
		$this->openRoamingCertificateId = null;
		$this->port = null;
		$this->radsecEnabled = null;
		$this->secret = null;
	}
}
