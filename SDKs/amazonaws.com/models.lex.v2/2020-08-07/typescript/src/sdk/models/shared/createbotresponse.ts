/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BotMember } from "./botmember";
import { BotStatusEnum } from "./botstatusenum";
import { BotTypeEnum } from "./bottypeenum";
import { DataPrivacy } from "./dataprivacy";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class CreateBotResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "botId" })
  botId?: string;

  @SpeakeasyMetadata({ elemType: BotMember })
  @Expose({ name: "botMembers" })
  @Type(() => BotMember)
  botMembers?: BotMember[];

  @SpeakeasyMetadata()
  @Expose({ name: "botName" })
  botName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "botStatus" })
  botStatus?: BotStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "botTags" })
  botTags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "botType" })
  botType?: BotTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dataPrivacy" })
  @Type(() => DataPrivacy)
  dataPrivacy?: DataPrivacy;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "idleSessionTTLInSeconds" })
  idleSessionTTLInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "testBotAliasTags" })
  testBotAliasTags?: Record<string, string>;
}
