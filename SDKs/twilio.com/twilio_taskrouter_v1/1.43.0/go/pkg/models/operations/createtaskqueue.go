// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateTaskQueueServerList = []string{
	"https://taskrouter.twilio.com",
}

type CreateTaskQueueSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type CreateTaskQueueCreateTaskQueueRequest struct {
	// The SID of the Activity to assign Workers when a task is assigned to them.
	AssignmentActivitySid *string `form:"name=AssignmentActivitySid"`
	// A descriptive string that you create to describe the TaskQueue. For example `Support-Tier 1`, `Sales`, or `Escalation`.
	FriendlyName string `form:"name=FriendlyName"`
	// The maximum number of Workers to reserve for the assignment of a Task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.
	MaxReservedWorkers *int64 `form:"name=MaxReservedWorkers"`
	// The SID of the Activity to assign Workers when a task is reserved for them.
	ReservationActivitySid *string `form:"name=ReservationActivitySid"`
	// A string that describes the Worker selection criteria for any Tasks that enter the TaskQueue. For example, `'"language" == "spanish"'`. The default value is `1==1`. If this value is empty, Tasks will wait in the TaskQueue until they are deleted or moved to another TaskQueue. For more information about Worker selection, see [Describing Worker selection criteria](https://www.twilio.com/docs/taskrouter/api/taskqueues#target-workers).
	TargetWorkers *string                            `form:"name=TargetWorkers"`
	TaskOrder     *shared.TaskQueueEnumTaskOrderEnum `form:"name=TaskOrder"`
}

type CreateTaskQueueRequest struct {
	RequestBody *CreateTaskQueueCreateTaskQueueRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The SID of the Workspace that the new TaskQueue belongs to.
	WorkspaceSid string `pathParam:"style=simple,explode=false,name=WorkspaceSid"`
}

type CreateTaskQueueResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	TaskrouterV1WorkspaceTaskQueue *shared.TaskrouterV1WorkspaceTaskQueue
}
