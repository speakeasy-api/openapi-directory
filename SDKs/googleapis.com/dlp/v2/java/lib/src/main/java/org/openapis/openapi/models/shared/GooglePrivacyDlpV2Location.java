/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2Location - Specifies the location of the finding.
 */
public class GooglePrivacyDlpV2Location {
    /**
     * Generic half-open interval [start, end)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("byteRange")
    public GooglePrivacyDlpV2Range byteRange;

    public GooglePrivacyDlpV2Location withByteRange(GooglePrivacyDlpV2Range byteRange) {
        this.byteRange = byteRange;
        return this;
    }
    
    /**
     * Generic half-open interval [start, end)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codepointRange")
    public GooglePrivacyDlpV2Range codepointRange;

    public GooglePrivacyDlpV2Location withCodepointRange(GooglePrivacyDlpV2Range codepointRange) {
        this.codepointRange = codepointRange;
        return this;
    }
    
    /**
     * Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("container")
    public GooglePrivacyDlpV2Container container;

    public GooglePrivacyDlpV2Location withContainer(GooglePrivacyDlpV2Container container) {
        this.container = container;
        return this;
    }
    
    /**
     * List of nested objects pointing to the precise location of the finding within the file or record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentLocations")
    public GooglePrivacyDlpV2ContentLocation[] contentLocations;

    public GooglePrivacyDlpV2Location withContentLocations(GooglePrivacyDlpV2ContentLocation[] contentLocations) {
        this.contentLocations = contentLocations;
        return this;
    }
    
    public GooglePrivacyDlpV2Location(){}
}
