/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MentionSentiment } from "./mentionsentiment";
import { TargetedSentimentEntityTypeEnum } from "./targetedsentimententitytypeenum";
import { Expose, Type } from "class-transformer";

/**
 * <p>Information about one mention of an entity. The mention information includes the location of the mention in the text and the sentiment of the mention.</p> <p>For more information about targeted sentiment, see <a href="https://docs.aws.amazon.com/comprehend/latest/dg/how-targeted-sentiment.html">Targeted sentiment</a>.</p>
 */
export class TargetedSentimentMention extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BeginOffset" })
  beginOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EndOffset" })
  endOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "GroupScore" })
  groupScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MentionSentiment" })
  @Type(() => MentionSentiment)
  mentionSentiment?: MentionSentiment;

  @SpeakeasyMetadata()
  @Expose({ name: "Score" })
  score?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Text" })
  text?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: TargetedSentimentEntityTypeEnum;
}
