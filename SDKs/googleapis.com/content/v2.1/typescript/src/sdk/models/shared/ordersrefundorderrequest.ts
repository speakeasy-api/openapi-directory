/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MonetaryAmount } from "./monetaryamount";
import { Expose, Type } from "class-transformer";

export class OrdersRefundOrderRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => MonetaryAmount)
  amount?: MonetaryAmount;

  /**
   * If true, the full order will be refunded, including shipping. If this is true, amount shouldn't be provided and will be ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullRefund" })
  fullRefund?: boolean;

  /**
   * The ID of the operation. Unique across all operations for a given order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operationId" })
  operationId?: string;

  /**
   * The reason for the refund. Acceptable values are: - "`courtesyAdjustment`" - "`other`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * The explanation of the reason.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reasonText" })
  reasonText?: string;
}
