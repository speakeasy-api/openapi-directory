/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The type of aggregation queries.
 */
export class UpdateFleetMetricRequestBodyAggregationType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: shared.AggregationTypeNameEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values?: string[];
}

/**
 * Used to support unit transformation such as milliseconds to seconds. The unit must be supported by <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">CW metric</a>.
 */
export enum UpdateFleetMetricRequestBodyUnitEnum {
  Seconds = "Seconds",
  Microseconds = "Microseconds",
  Milliseconds = "Milliseconds",
  Bytes = "Bytes",
  Kilobytes = "Kilobytes",
  Megabytes = "Megabytes",
  Gigabytes = "Gigabytes",
  Terabytes = "Terabytes",
  Bits = "Bits",
  Kilobits = "Kilobits",
  Megabits = "Megabits",
  Gigabits = "Gigabits",
  Terabits = "Terabits",
  Percent = "Percent",
  Count = "Count",
  BytesSecond = "Bytes/Second",
  KilobytesSecond = "Kilobytes/Second",
  MegabytesSecond = "Megabytes/Second",
  GigabytesSecond = "Gigabytes/Second",
  TerabytesSecond = "Terabytes/Second",
  BitsSecond = "Bits/Second",
  KilobitsSecond = "Kilobits/Second",
  MegabitsSecond = "Megabits/Second",
  GigabitsSecond = "Gigabits/Second",
  TerabitsSecond = "Terabits/Second",
  CountSecond = "Count/Second",
  None = "None",
}

export class UpdateFleetMetricRequestBody extends SpeakeasyBase {
  /**
   * The field to aggregate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationField" })
  aggregationField?: string;

  /**
   * The type of aggregation queries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationType" })
  @Type(() => UpdateFleetMetricRequestBodyAggregationType)
  aggregationType?: UpdateFleetMetricRequestBodyAggregationType;

  /**
   * The description of the fleet metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The expected version of the fleet metric record in the registry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedVersion" })
  expectedVersion?: number;

  /**
   * The name of the index to search.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "indexName" })
  indexName: string;

  /**
   * The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "period" })
  period?: number;

  /**
   * The search query string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryString" })
  queryString?: string;

  /**
   * The version of the query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryVersion" })
  queryVersion?: string;

  /**
   * Used to support unit transformation such as milliseconds to seconds. The unit must be supported by <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">CW metric</a>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: UpdateFleetMetricRequestBodyUnitEnum;
}

export class UpdateFleetMetricRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateFleetMetricRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name of the fleet metric to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=metricName",
  })
  metricName: string;
}

export class UpdateFleetMetricResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * IndexNotReadyException
   */
  @SpeakeasyMetadata()
  indexNotReadyException?: any;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidAggregationException
   */
  @SpeakeasyMetadata()
  invalidAggregationException?: any;

  /**
   * InvalidQueryException
   */
  @SpeakeasyMetadata()
  invalidQueryException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * UnauthorizedException
   */
  @SpeakeasyMetadata()
  unauthorizedException?: any;

  /**
   * VersionConflictException
   */
  @SpeakeasyMetadata()
  versionConflictException?: any;
}
