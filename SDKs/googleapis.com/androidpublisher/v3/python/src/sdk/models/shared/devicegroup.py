"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deviceselector as shared_deviceselector
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceGroup:
    r"""A group of devices. A group is defined by a set of device selectors. A device belongs to the group if it matches any selector (logical OR)."""
    
    device_selectors: Optional[list[shared_deviceselector.DeviceSelector]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceSelectors'), 'exclude': lambda f: f is None }})
    r"""Device selectors for this group. A device matching any of the selectors is included in this group."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the group."""  
    