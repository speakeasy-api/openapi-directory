/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Alert {
    @JsonProperty("id")
    public Long id;

    public Alert withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * ID of the related account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_account")
    public Long idAccount;

    public Alert withIdAccount(Long idAccount) {
        this.idAccount = idAccount;
        return this;
    }
    
    /**
     * ID of the related investment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_investment")
    public Long idInvestment;

    public Alert withIdInvestment(Long idInvestment) {
        this.idInvestment = idInvestment;
        return this;
    }
    
    /**
     * ID of the related transaction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_transaction")
    public Long idTransaction;

    public Alert withIdTransaction(Long idTransaction) {
        this.idTransaction = idTransaction;
        return this;
    }
    
    /**
     * ID of the related user
     */
    @JsonProperty("id_user")
    public Long idUser;

    public Alert withIdUser(Long idUser) {
        this.idUser = idUser;
        return this;
    }
    
    /**
     * Date of the alerts emission
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public Alert withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * Type of the alert
     */
    @JsonProperty("type")
    public String type;

    public Alert withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Amount related to the alert
     */
    @JsonProperty("value")
    public Float value;

    public Alert withValue(Float value) {
        this.value = value;
        return this;
    }
    
    public Alert(@JsonProperty("id") Long id, @JsonProperty("id_user") Long idUser, @JsonProperty("timestamp") OffsetDateTime timestamp, @JsonProperty("type") String type, @JsonProperty("value") Float value) {
        this.id = id;
        this.idUser = idUser;
        this.timestamp = timestamp;
        this.type = type;
        this.value = value;
  }
}
