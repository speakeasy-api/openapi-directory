/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetTracksTrackIdRelatedRequest {
    /**
     * Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=access")
    public org.openapis.openapi.models.shared.AccessEnum[] access;

    public GetTracksTrackIdRelatedRequest withAccess(org.openapis.openapi.models.shared.AccessEnum[] access) {
        this.access = access;
        return this;
    }
    
    /**
     * Number of results to return in the collection.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public GetTracksTrackIdRelatedRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Returns paginated collection of items (recommended, returning a list without pagination is deprecated and should not be used)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=linked_partitioning")
    public Boolean linkedPartitioning;

    public GetTracksTrackIdRelatedRequest withLinkedPartitioning(Boolean linkedPartitioning) {
        this.linkedPartitioning = linkedPartitioning;
        return this;
    }
    
    /**
     * Offset of first result. Deprecated, use `linked_partitioning` instead.
     * @deprecated this field will be removed in a future release, please migrate away from it as soon as possible
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    @Deprecated
    public Long offset;

    @Deprecated
    public GetTracksTrackIdRelatedRequest withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * SoundCloud Track id
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=track_id")
    public Long trackId;

    public GetTracksTrackIdRelatedRequest withTrackId(Long trackId) {
        this.trackId = trackId;
        return this;
    }
    
    public GetTracksTrackIdRelatedRequest(@JsonProperty("track_id") Long trackId) {
        this.trackId = trackId;
  }
}
