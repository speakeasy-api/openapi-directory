/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BackupStateEnum } from "./backupstateenum";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about a backup of an AWS CloudHSM cluster. All backup objects contain the <code>BackupId</code>, <code>BackupState</code>, <code>ClusterId</code>, and <code>CreateTimestamp</code> parameters. Backups that were copied into a destination region additionally contain the <code>CopyTimestamp</code>, <code>SourceBackup</code>, <code>SourceCluster</code>, and <code>SourceRegion</code> parameters. A backup that is pending deletion will include the <code>DeleteTimestamp</code> parameter.
 */
export class Backup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BackupId" })
  backupId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BackupState" })
  backupState?: BackupStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ClusterId" })
  clusterId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CopyTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  copyTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreateTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeleteTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deleteTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NeverExpires" })
  neverExpires?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceBackup" })
  sourceBackup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceCluster" })
  sourceCluster?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceRegion" })
  sourceRegion?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "TagList" })
  @Type(() => Tag)
  tagList?: Tag[];
}
