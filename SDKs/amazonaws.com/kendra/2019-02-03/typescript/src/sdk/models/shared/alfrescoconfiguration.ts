/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlfrescoEntityEnum } from "./alfrescoentityenum";
import { DataSourceToIndexFieldMapping } from "./datasourcetoindexfieldmapping";
import { DataSourceVpcConfiguration } from "./datasourcevpcconfiguration";
import { S3Path } from "./s3path";
import { Expose, Type } from "class-transformer";

/**
 * <p>Provides the configuration information to connect to Alfresco as your data source.</p> <note> <p>Alfresco data source connector is currently in preview mode. Basic authentication is currently supported. If you would like to use Alfresco connector in production, contact <a href="http://aws.amazon.com/contact-us/">Support</a>.</p> </note>
 */
export class AlfrescoConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "BlogFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  blogFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlComments" })
  crawlComments?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlSystemFolders" })
  crawlSystemFolders?: boolean;

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "DocumentLibraryFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  documentLibraryFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "EntityFilter" })
  entityFilter?: AlfrescoEntityEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "ExclusionPatterns" })
  exclusionPatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "InclusionPatterns" })
  inclusionPatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SecretArn" })
  secretArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SiteId" })
  siteId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SiteUrl" })
  siteUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SslCertificateS3Path" })
  @Type(() => S3Path)
  sslCertificateS3Path: S3Path;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfiguration" })
  @Type(() => DataSourceVpcConfiguration)
  vpcConfiguration?: DataSourceVpcConfiguration;

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "WikiFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  wikiFieldMappings?: DataSourceToIndexFieldMapping[];
}
