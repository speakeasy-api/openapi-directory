// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VpnTunnelInfoRoutingTypeEnum - Type of the routing policy.
type VpnTunnelInfoRoutingTypeEnum string

const (
	VpnTunnelInfoRoutingTypeEnumRoutingTypeUnspecified VpnTunnelInfoRoutingTypeEnum = "ROUTING_TYPE_UNSPECIFIED"
	VpnTunnelInfoRoutingTypeEnumRouteBased             VpnTunnelInfoRoutingTypeEnum = "ROUTE_BASED"
	VpnTunnelInfoRoutingTypeEnumPolicyBased            VpnTunnelInfoRoutingTypeEnum = "POLICY_BASED"
	VpnTunnelInfoRoutingTypeEnumDynamic                VpnTunnelInfoRoutingTypeEnum = "DYNAMIC"
)

func (e *VpnTunnelInfoRoutingTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ROUTING_TYPE_UNSPECIFIED":
		fallthrough
	case "ROUTE_BASED":
		fallthrough
	case "POLICY_BASED":
		fallthrough
	case "DYNAMIC":
		*e = VpnTunnelInfoRoutingTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VpnTunnelInfoRoutingTypeEnum: %s", s)
	}
}

// VpnTunnelInfo - For display only. Metadata associated with a Compute Engine VPN tunnel.
type VpnTunnelInfo struct {
	// Name of a VPN tunnel.
	DisplayName *string `json:"displayName,omitempty"`
	// URI of a Compute Engine network where the VPN tunnel is configured.
	NetworkURI *string `json:"networkUri,omitempty"`
	// Name of a Google Cloud region where this VPN tunnel is configured.
	Region *string `json:"region,omitempty"`
	// URI of a VPN gateway at remote end of the tunnel.
	RemoteGateway *string `json:"remoteGateway,omitempty"`
	// Remote VPN gateway's IP address.
	RemoteGatewayIP *string `json:"remoteGatewayIp,omitempty"`
	// Type of the routing policy.
	RoutingType *VpnTunnelInfoRoutingTypeEnum `json:"routingType,omitempty"`
	// URI of the VPN gateway at local end of the tunnel.
	SourceGateway *string `json:"sourceGateway,omitempty"`
	// Local VPN gateway's IP address.
	SourceGatewayIP *string `json:"sourceGatewayIp,omitempty"`
	// URI of a VPN tunnel.
	URI *string `json:"uri,omitempty"`
}
