<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DriveCapabilities - Capabilities the current user has on this shared drive.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DriveCapabilities
{
    /**
     * Whether the current user can add children to folders in this shared drive.
     * 
     * @var ?bool $canAddChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canAddChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canAddChildren = null;
    
    /**
     * Whether the current user can change the copyRequiresWriterPermission restriction of this shared drive.
     * 
     * @var ?bool $canChangeCopyRequiresWriterPermissionRestriction
     */
	#[\JMS\Serializer\Annotation\SerializedName('canChangeCopyRequiresWriterPermissionRestriction')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canChangeCopyRequiresWriterPermissionRestriction = null;
    
    /**
     * Whether the current user can change the domainUsersOnly restriction of this shared drive.
     * 
     * @var ?bool $canChangeDomainUsersOnlyRestriction
     */
	#[\JMS\Serializer\Annotation\SerializedName('canChangeDomainUsersOnlyRestriction')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canChangeDomainUsersOnlyRestriction = null;
    
    /**
     * Whether the current user can change the background of this shared drive.
     * 
     * @var ?bool $canChangeDriveBackground
     */
	#[\JMS\Serializer\Annotation\SerializedName('canChangeDriveBackground')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canChangeDriveBackground = null;
    
    /**
     * Whether the current user can change the driveMembersOnly restriction of this shared drive.
     * 
     * @var ?bool $canChangeDriveMembersOnlyRestriction
     */
	#[\JMS\Serializer\Annotation\SerializedName('canChangeDriveMembersOnlyRestriction')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canChangeDriveMembersOnlyRestriction = null;
    
    /**
     * Whether the current user can change the sharingFoldersRequiresOrganizerPermission restriction of this shared drive.
     * 
     * @var ?bool $canChangeSharingFoldersRequiresOrganizerPermissionRestriction
     */
	#[\JMS\Serializer\Annotation\SerializedName('canChangeSharingFoldersRequiresOrganizerPermissionRestriction')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canChangeSharingFoldersRequiresOrganizerPermissionRestriction = null;
    
    /**
     * Whether the current user can comment on files in this shared drive.
     * 
     * @var ?bool $canComment
     */
	#[\JMS\Serializer\Annotation\SerializedName('canComment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canComment = null;
    
    /**
     * Whether the current user can copy files in this shared drive.
     * 
     * @var ?bool $canCopy
     */
	#[\JMS\Serializer\Annotation\SerializedName('canCopy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canCopy = null;
    
    /**
     * Whether the current user can delete children from folders in this shared drive.
     * 
     * @var ?bool $canDeleteChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canDeleteChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDeleteChildren = null;
    
    /**
     * Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.
     * 
     * @var ?bool $canDeleteDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canDeleteDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDeleteDrive = null;
    
    /**
     * Whether the current user can download files in this shared drive.
     * 
     * @var ?bool $canDownload
     */
	#[\JMS\Serializer\Annotation\SerializedName('canDownload')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDownload = null;
    
    /**
     * Whether the current user can edit files in this shared drive
     * 
     * @var ?bool $canEdit
     */
	#[\JMS\Serializer\Annotation\SerializedName('canEdit')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canEdit = null;
    
    /**
     * Whether the current user can list the children of folders in this shared drive.
     * 
     * @var ?bool $canListChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canListChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canListChildren = null;
    
    /**
     * Whether the current user can add members to this shared drive or remove them or change their role.
     * 
     * @var ?bool $canManageMembers
     */
	#[\JMS\Serializer\Annotation\SerializedName('canManageMembers')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canManageMembers = null;
    
    /**
     * Whether the current user can read the revisions resource of files in this shared drive.
     * 
     * @var ?bool $canReadRevisions
     */
	#[\JMS\Serializer\Annotation\SerializedName('canReadRevisions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canReadRevisions = null;
    
    /**
     * Whether the current user can rename files or folders in this shared drive.
     * 
     * @var ?bool $canRename
     */
	#[\JMS\Serializer\Annotation\SerializedName('canRename')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canRename = null;
    
    /**
     * Whether the current user can rename this shared drive.
     * 
     * @var ?bool $canRenameDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canRenameDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canRenameDrive = null;
    
    /**
     * Whether the current user can reset the shared drive restrictions to defaults.
     * 
     * @var ?bool $canResetDriveRestrictions
     */
	#[\JMS\Serializer\Annotation\SerializedName('canResetDriveRestrictions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canResetDriveRestrictions = null;
    
    /**
     * Whether the current user can share files or folders in this shared drive.
     * 
     * @var ?bool $canShare
     */
	#[\JMS\Serializer\Annotation\SerializedName('canShare')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canShare = null;
    
    /**
     * Whether the current user can trash children from folders in this shared drive.
     * 
     * @var ?bool $canTrashChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canTrashChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canTrashChildren = null;
    
	public function __construct()
	{
		$this->canAddChildren = null;
		$this->canChangeCopyRequiresWriterPermissionRestriction = null;
		$this->canChangeDomainUsersOnlyRestriction = null;
		$this->canChangeDriveBackground = null;
		$this->canChangeDriveMembersOnlyRestriction = null;
		$this->canChangeSharingFoldersRequiresOrganizerPermissionRestriction = null;
		$this->canComment = null;
		$this->canCopy = null;
		$this->canDeleteChildren = null;
		$this->canDeleteDrive = null;
		$this->canDownload = null;
		$this->canEdit = null;
		$this->canListChildren = null;
		$this->canManageMembers = null;
		$this->canReadRevisions = null;
		$this->canRename = null;
		$this->canRenameDrive = null;
		$this->canResetDriveRestrictions = null;
		$this->canShare = null;
		$this->canTrashChildren = null;
	}
}
