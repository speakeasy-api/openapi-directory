"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class AutoHashtagRequest:
    
    post: str = dataclasses.field(metadata={'query_param': { 'field_name': 'post', 'style': 'form', 'explode': True }})
    r"""Text of the post"""  
    hashtag_position: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'hashtagPosition', 'style': 'form', 'explode': True }})
    r"""Position of hashtags: end => at the end, auto => anywhere"""  
    max_hashtags: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxHashtags', 'style': 'form', 'explode': True }})
    r"""Max number of hashtags."""  
    

@dataclasses.dataclass
class AutoHashtagResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    