/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CourseWorkMaterial - Course work material created by a teacher for students of the course
 */
public class CourseWorkMaterial {
    /**
     * Absolute link to this course work material in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alternateLink")
    public String alternateLink;
    public CourseWorkMaterial withAlternateLink(String alternateLink) {
        this.alternateLink = alternateLink;
        return this;
    }
    
    /**
     * Assignee mode of the course work material. If unspecified, the default value is `ALL_STUDENTS`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assigneeMode")
    public CourseWorkMaterialAssigneeModeEnum assigneeMode;
    public CourseWorkMaterial withAssigneeMode(CourseWorkMaterialAssigneeModeEnum assigneeMode) {
        this.assigneeMode = assigneeMode;
        return this;
    }
    
    /**
     * Identifier of the course. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("courseId")
    public String courseId;
    public CourseWorkMaterial withCourseId(String courseId) {
        this.courseId = courseId;
        return this;
    }
    
    /**
     * Timestamp when this course work material was created. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;
    public CourseWorkMaterial withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * Identifier for the user that created the course work material. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorUserId")
    public String creatorUserId;
    public CourseWorkMaterial withCreatorUserId(String creatorUserId) {
        this.creatorUserId = creatorUserId;
        return this;
    }
    
    /**
     * Optional description of this course work material. The text must be a valid UTF-8 string containing no more than 30,000 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CourseWorkMaterial withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Classroom-assigned identifier of this course work material, unique per course. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public CourseWorkMaterial withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Assignee details about a coursework/announcement. This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individualStudentsOptions")
    public IndividualStudentsOptions individualStudentsOptions;
    public CourseWorkMaterial withIndividualStudentsOptions(IndividualStudentsOptions individualStudentsOptions) {
        this.individualStudentsOptions = individualStudentsOptions;
        return this;
    }
    
    /**
     * Additional materials. A course work material must have no more than 20 material items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("materials")
    public Material[] materials;
    public CourseWorkMaterial withMaterials(Material[] materials) {
        this.materials = materials;
        return this;
    }
    
    /**
     * Optional timestamp when this course work material is scheduled to be published.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduledTime")
    public String scheduledTime;
    public CourseWorkMaterial withScheduledTime(String scheduledTime) {
        this.scheduledTime = scheduledTime;
        return this;
    }
    
    /**
     * Status of this course work material. If unspecified, the default state is `DRAFT`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public CourseWorkMaterialStateEnum state;
    public CourseWorkMaterial withState(CourseWorkMaterialStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Title of this course work material. The title must be a valid UTF-8 string containing between 1 and 3000 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public CourseWorkMaterial withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Identifier for the topic that this course work material is associated with. Must match an existing topic in the course.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topicId")
    public String topicId;
    public CourseWorkMaterial withTopicId(String topicId) {
        this.topicId = topicId;
        return this;
    }
    
    /**
     * Timestamp of the most recent change to this course work material. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public CourseWorkMaterial withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
