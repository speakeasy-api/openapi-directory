/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BuildVersion } from "./buildversion";
import { Expose, Type } from "class-transformer";

/**
 * Version and identification for an Envoy extension. [#next-free-field: 6]
 */
export class Extension extends SpeakeasyBase {
  /**
   * Category of the extension. Extension category names use reverse DNS notation. For instance "envoy.filters.listener" for Envoy's built-in listener filters or "com.acme.filters.http" for HTTP filters from acme.com vendor. [#comment:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  /**
   * Indicates that the extension is present but was disabled via dynamic configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  /**
   * This is the name of the Envoy filter as specified in the Envoy configuration, e.g. envoy.filters.http.router, com.acme.widget.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * [#not-implemented-hide:] Type descriptor of extension configuration proto. [#comment:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "typeDescriptor" })
  typeDescriptor?: string;

  /**
   * BuildVersion combines SemVer version of extension with free-form build information (i.e. 'alpha', 'private-build') as a set of strings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  @Type(() => BuildVersion)
  version?: BuildVersion;
}
