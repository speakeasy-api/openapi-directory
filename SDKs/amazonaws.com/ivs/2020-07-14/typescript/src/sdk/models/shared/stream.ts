/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StreamHealthEnum } from "./streamhealthenum";
import { StreamStateEnum } from "./streamstateenum";
import { Expose, Transform } from "class-transformer";

/**
 * Specifies a live video stream that has been ingested and distributed.
 */
export class Stream extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "channelArn" })
  channelArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "health" })
  health?: StreamHealthEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "playbackUrl" })
  playbackUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: StreamStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "streamId" })
  streamId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "viewerCount" })
  viewerCount?: number;
}
