// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeBundleTasksResultBundleTasksBundleTaskError - If the task fails, a description of the error.
type DescribeBundleTasksResultBundleTasksBundleTaskError struct {
	Code    *string
	Message *string
}

// DescribeBundleTasksResultBundleTasksStateEnum - The state of the task.
type DescribeBundleTasksResultBundleTasksStateEnum string

const (
	DescribeBundleTasksResultBundleTasksStateEnumPending            DescribeBundleTasksResultBundleTasksStateEnum = "pending"
	DescribeBundleTasksResultBundleTasksStateEnumWaitingForShutdown DescribeBundleTasksResultBundleTasksStateEnum = "waiting-for-shutdown"
	DescribeBundleTasksResultBundleTasksStateEnumBundling           DescribeBundleTasksResultBundleTasksStateEnum = "bundling"
	DescribeBundleTasksResultBundleTasksStateEnumStoring            DescribeBundleTasksResultBundleTasksStateEnum = "storing"
	DescribeBundleTasksResultBundleTasksStateEnumCancelling         DescribeBundleTasksResultBundleTasksStateEnum = "cancelling"
	DescribeBundleTasksResultBundleTasksStateEnumComplete           DescribeBundleTasksResultBundleTasksStateEnum = "complete"
	DescribeBundleTasksResultBundleTasksStateEnumFailed             DescribeBundleTasksResultBundleTasksStateEnum = "failed"
)

func (e *DescribeBundleTasksResultBundleTasksStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "waiting-for-shutdown":
		fallthrough
	case "bundling":
		fallthrough
	case "storing":
		fallthrough
	case "cancelling":
		fallthrough
	case "complete":
		fallthrough
	case "failed":
		*e = DescribeBundleTasksResultBundleTasksStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeBundleTasksResultBundleTasksStateEnum: %s", s)
	}
}

// DescribeBundleTasksResultBundleTasksStorage - The Amazon S3 storage locations.
type DescribeBundleTasksResultBundleTasksStorage struct {
	S3 *S3Storage
}

// DescribeBundleTasksResultBundleTasks - Describes a bundle task.
type DescribeBundleTasksResultBundleTasks struct {
	BundleID        *string
	BundleTaskError *DescribeBundleTasksResultBundleTasksBundleTaskError
	InstanceID      *string
	Progress        *string
	StartTime       *time.Time
	State           *DescribeBundleTasksResultBundleTasksStateEnum
	Storage         *DescribeBundleTasksResultBundleTasksStorage
	UpdateTime      *time.Time
}

// DescribeBundleTasksResult - Success
type DescribeBundleTasksResult struct {
	BundleTasks []DescribeBundleTasksResultBundleTasks
}
