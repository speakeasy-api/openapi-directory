// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetOrganizationFirmwareUpgradesByDeviceRequest struct {
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	// Optional parameter to filter by firmware upgrade batch ids.
	FirmwareUpgradeBatchIds []string `queryParam:"style=form,explode=false,name=firmwareUpgradeBatchIds"`
	// Optional parameter to filter by firmware upgrade ids.
	FirmwareUpgradeIds []string `queryParam:"style=form,explode=false,name=firmwareUpgradeIds"`
	// Optional parameter to filter by one or more MAC addresses belonging to devices. All devices returned belong to MAC addresses that are an exact match.
	Macs []string `queryParam:"style=form,explode=false,name=macs"`
	// Optional parameter to filter by network
	NetworkIds     []string `queryParam:"style=form,explode=false,name=networkIds"`
	OrganizationID string   `pathParam:"style=simple,explode=false,name=organizationId"`
	// The number of entries per page returned. Acceptable range is 3 - 50. Default is 50.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// Optional parameter to filter by serial number.  All returned devices will have a serial number that is an exact match.
	Serials []string `queryParam:"style=form,explode=false,name=serials"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
}

// GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeFromVersion - The initial version of the device
type GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeFromVersion struct {
	// ID of the initial firmware version
	ID *string `json:"id,omitempty"`
	// Release date of the firmware version
	ReleaseDate *string `json:"releaseDate,omitempty"`
	// Release type of the firmware version
	ReleaseType *string `json:"releaseType,omitempty"`
	// Firmware version short name
	ShortName *string `json:"shortName,omitempty"`
}

// GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeStagedGroup - The staged upgrade group
type GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeStagedGroup struct {
	// Id of the staged upgrade group
	ID *string `json:"id,omitempty"`
}

// GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeStaged - Staged upgrade
type GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeStaged struct {
	// The staged upgrade group
	Group *GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeStagedGroup `json:"group,omitempty"`
}

// GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeToVersion - Version the device is upgrading to
type GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeToVersion struct {
	// ID of the initial firmware version
	ID *string `json:"id,omitempty"`
	// Release date of the firmware version
	ReleaseDate *string `json:"releaseDate,omitempty"`
	// Release type of the firmware version
	ReleaseType *string `json:"releaseType,omitempty"`
	// Firmware version short name
	ShortName *string `json:"shortName,omitempty"`
}

// GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgrade - The devices upgrade details and status
type GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgrade struct {
	// The initial version of the device
	FromVersion *GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeFromVersion `json:"fromVersion,omitempty"`
	// ID of the upgrade
	ID *string `json:"id,omitempty"`
	// Staged upgrade
	Staged *GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeStaged `json:"staged,omitempty"`
	// Status of the upgrade
	Status *string `json:"status,omitempty"`
	// Start time of the upgrade
	Time *string `json:"time,omitempty"`
	// Version the device is upgrading to
	ToVersion *GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgradeToVersion `json:"toVersion,omitempty"`
	// ID of the upgrade batch
	UpgradeBatchID *string `json:"upgradeBatchId,omitempty"`
}

type GetOrganizationFirmwareUpgradesByDevice200ApplicationJSON struct {
	// Status of the device upgrade
	DeviceStatus *string `json:"deviceStatus,omitempty"`
	// Name assigned to the device
	Name *string `json:"name,omitempty"`
	// Serial of the device
	Serial *string `json:"serial,omitempty"`
	// The devices upgrade details and status
	Upgrade *GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONUpgrade `json:"upgrade,omitempty"`
}

type GetOrganizationFirmwareUpgradesByDeviceResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationFirmwareUpgradesByDevice200ApplicationJSONObjects []GetOrganizationFirmwareUpgradesByDevice200ApplicationJSON
}
