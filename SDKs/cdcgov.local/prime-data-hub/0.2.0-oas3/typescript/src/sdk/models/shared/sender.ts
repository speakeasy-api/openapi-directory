/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SettingMetadata } from "./settingmetadata";
import { Expose, Type } from "class-transformer";

/**
 * the payload format
 */
export enum SenderFormatEnum {
  Csv = "CSV",
}

/**
 * An sender of reports to the data hub
 */
export class SenderInput extends SpeakeasyBase {
  /**
   * Display ready description of the sender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * the payload format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format: SenderFormatEnum;

  /**
   * Unique name for the senders, includes the orgninzation name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * the schema name for this sender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schema" })
  schema: string;

  /**
   * Topic of for this sender. Must match the supported topics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic: string;
}

/**
 * An sender of reports to the data hub
 */
export class Sender extends SpeakeasyBase {
  /**
   * Display ready description of the sender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * the payload format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format: SenderFormatEnum;

  /**
   * The metadata associated with an setting
   */
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => SettingMetadata)
  meta?: SettingMetadata;

  /**
   * Unique name for the senders, includes the orgninzation name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Name of the organization that this sender belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organizationName" })
  organizationName?: string;

  /**
   * the schema name for this sender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schema" })
  schema: string;

  /**
   * Topic of for this sender. Must match the supported topics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic: string;
}
