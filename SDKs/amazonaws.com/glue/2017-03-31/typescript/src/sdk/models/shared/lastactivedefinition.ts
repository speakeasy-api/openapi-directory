/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * When there are multiple versions of a blueprint and the latest version has some errors, this attribute indicates the last successful blueprint definition that is available with the service.
 */
export class LastActiveDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BlueprintLocation" })
  blueprintLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BlueprintServiceLocation" })
  blueprintServiceLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterSpec" })
  parameterSpec?: string;
}
