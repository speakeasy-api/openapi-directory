// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetTeamsSecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

// GetTeamsRoleEnum -
// Filters the teams based on the authenticated user's role on each team.
//
//   - **member**: returns a list of all the teams which the caller is a member of
//     at least one team group or repository owned by the team
//   - **contributor**: returns a list of teams which the caller has write access
//     to at least one repository owned by the team
//   - **admin**: returns a list teams which the caller has team administrator access
type GetTeamsRoleEnum string

const (
	GetTeamsRoleEnumAdmin       GetTeamsRoleEnum = "admin"
	GetTeamsRoleEnumContributor GetTeamsRoleEnum = "contributor"
	GetTeamsRoleEnumMember      GetTeamsRoleEnum = "member"
)

func (e *GetTeamsRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "admin":
		fallthrough
	case "contributor":
		fallthrough
	case "member":
		*e = GetTeamsRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTeamsRoleEnum: %s", s)
	}
}

type GetTeamsQueryParams struct {
	// Filters the teams based on the authenticated user's role on each team.
	//
	// * **member**: returns a list of all the teams which the caller is a member of
	//   at least one team group or repository owned by the team
	// * **contributor**: returns a list of teams which the caller has write access
	//   to at least one repository owned by the team
	// * **admin**: returns a list teams which the caller has team administrator access
	//
	Role *GetTeamsRoleEnum `queryParam:"style=form,explode=true,name=role"`
}

type GetTeamsRequest struct {
	QueryParams GetTeamsQueryParams
	Security    GetTeamsSecurity
}

type GetTeamsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// When the request wasn't authenticated.
	Error map[string]interface{}
	// A paginated list of teams.
	PaginatedTeams *shared.PaginatedTeams
}
