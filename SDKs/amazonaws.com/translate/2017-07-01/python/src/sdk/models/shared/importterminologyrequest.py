"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import encryptionkey as shared_encryptionkey
from ..shared import mergestrategy_enum as shared_mergestrategy_enum
from ..shared import tag as shared_tag
from ..shared import terminologydata as shared_terminologydata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportTerminologyRequest:
    
    merge_strategy: shared_mergestrategy_enum.MergeStrategyEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MergeStrategy') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    terminology_data: shared_terminologydata.TerminologyData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TerminologyData') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    encryption_key: Optional[shared_encryptionkey.EncryptionKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EncryptionKey'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    