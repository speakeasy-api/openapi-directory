// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AwsAssumeRoleAuthenticationModeEnum string

const (
	AwsAssumeRoleAuthenticationModeEnumAssumeRole AwsAssumeRoleAuthenticationModeEnum = "assumeRole"
)

func (e AwsAssumeRoleAuthenticationModeEnum) ToPointer() *AwsAssumeRoleAuthenticationModeEnum {
	return &e
}

func (e *AwsAssumeRoleAuthenticationModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "assumeRole":
		*e = AwsAssumeRoleAuthenticationModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AwsAssumeRoleAuthenticationModeEnum: %v", v)
	}
}

type AwsAssumeRole struct {
	AssumeRoleArn      string                               `json:"assumeRoleArn"`
	AuthenticationMode *AwsAssumeRoleAuthenticationModeEnum `json:"authenticationMode,omitempty"`
}
