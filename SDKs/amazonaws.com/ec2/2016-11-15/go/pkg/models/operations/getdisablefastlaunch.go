// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDisableFastLaunchActionEnum
type GETDisableFastLaunchActionEnum string

const (
	GETDisableFastLaunchActionEnumDisableFastLaunch GETDisableFastLaunchActionEnum = "DisableFastLaunch"
)

func (e *GETDisableFastLaunchActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DisableFastLaunch":
		*e = GETDisableFastLaunchActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableFastLaunchActionEnum: %s", s)
	}
}

// GETDisableFastLaunchVersionEnum
type GETDisableFastLaunchVersionEnum string

const (
	GETDisableFastLaunchVersionEnumTwoThousandAndSixteen1115 GETDisableFastLaunchVersionEnum = "2016-11-15"
)

func (e *GETDisableFastLaunchVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDisableFastLaunchVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableFastLaunchVersionEnum: %s", s)
	}
}

type GETDisableFastLaunchRequest struct {
	Action GETDisableFastLaunchActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// Forces the image settings to turn off faster launching for your Windows AMI. This parameter overrides any errors that are encountered while cleaning up resources in your account.
	Force *bool `queryParam:"style=form,explode=true,name=Force"`
	// The ID of the image for which youâ€™re turning off faster launching, and removing pre-provisioned snapshots.
	ImageID           string                          `queryParam:"style=form,explode=true,name=ImageId"`
	Version           GETDisableFastLaunchVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDisableFastLaunchResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
