<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AutomationEntity - List Automations
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AutomationEntity
{
    /**
     * Automation type
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AutomationEntityAutomationEnum $automation
     */
	#[\JMS\Serializer\Annotation\SerializedName('automation')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AutomationEntityAutomationEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AutomationEntityAutomationEnum $automation = null;
    
    /**
     * Indicates if the automation has been deleted.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * Description for the this Automation.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * If set, this string in the destination path will be replaced with the value in `destination_replace_to`.
     * 
     * @var ?string $destinationReplaceFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_replace_from')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationReplaceFrom = null;
    
    /**
     * If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.
     * 
     * @var ?string $destinationReplaceTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_replace_to')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationReplaceTo = null;
    
    /**
     * Destination Path
     * 
     * @var ?array<string> $destinations
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinations')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $destinations = null;
    
    /**
     * If true, this automation will not run.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * IDs of Groups for the Automation (i.e. who to Request File from)
     * 
     * @var ?array<int> $groupIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('group_ids')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $groupIds = null;
    
    /**
     * Automation ID
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * If trigger is `daily`, this specifies how often to run this automation.  One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`
     * 
     * @var ?string $interval
     */
	#[\JMS\Serializer\Annotation\SerializedName('interval')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $interval = null;
    
    /**
     * Time when automation was last modified. Does not change for name or description updates.
     * 
     * @var ?\DateTime $lastModifiedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_modified_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastModifiedAt = null;
    
    /**
     * Name for this automation.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Path on which this Automation runs.  Supports globs.
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * If trigger is `custom_schedule`, Custom schedule description for when the automation should be run.
     * 
     * @var ?array<string, mixed> $schedule
     */
	#[\JMS\Serializer\Annotation\SerializedName('schedule')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $schedule = null;
    
    /**
     * Source Path
     * 
     * @var ?string $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $source = null;
    
    /**
     * IDs of remote sync folder behaviors to run by this Automation
     * 
     * @var ?array<int> $syncIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('sync_ids')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $syncIds = null;
    
    /**
     * How this automation is triggered to run. One of: `realtime`, `daily`, `custom_schedule`, `webhook`, `email`, or `action`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AutomationEntityTriggerEnum $trigger
     */
	#[\JMS\Serializer\Annotation\SerializedName('trigger')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AutomationEntityTriggerEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AutomationEntityTriggerEnum $trigger = null;
    
    /**
     * If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy
     * 
     * @var ?array<string> $triggerActions
     */
	#[\JMS\Serializer\Annotation\SerializedName('trigger_actions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $triggerActions = null;
    
    /**
     * User ID of the Automation's creator.
     * 
     * @var ?int $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $userId = null;
    
    /**
     * IDs of Users for the Automation (i.e. who to Request File from)
     * 
     * @var ?array<int> $userIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_ids')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userIds = null;
    
    /**
     * A Hash of attributes specific to the automation type.
     * 
     * @var ?array<string, mixed> $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $value = null;
    
    /**
     * If trigger is `webhook`, this is the URL of the webhook to trigger the Automation.
     * 
     * @var ?string $webhookUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('webhook_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webhookUrl = null;
    
	public function __construct()
	{
		$this->automation = null;
		$this->deleted = null;
		$this->description = null;
		$this->destinationReplaceFrom = null;
		$this->destinationReplaceTo = null;
		$this->destinations = null;
		$this->disabled = null;
		$this->groupIds = null;
		$this->id = null;
		$this->interval = null;
		$this->lastModifiedAt = null;
		$this->name = null;
		$this->path = null;
		$this->schedule = null;
		$this->source = null;
		$this->syncIds = null;
		$this->trigger = null;
		$this->triggerActions = null;
		$this->userId = null;
		$this->userIds = null;
		$this->value = null;
		$this->webhookUrl = null;
	}
}
