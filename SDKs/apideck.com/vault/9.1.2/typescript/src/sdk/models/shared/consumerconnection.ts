/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthTypeEnum } from "./authtypeenum";
import { Expose } from "class-transformer";

export enum ConsumerConnectionStateEnum {
  Available = "available",
  Callable = "callable",
  Added = "added",
  Configured = "configured",
  Authorized = "authorized",
}

export class ConsumerConnection extends SpeakeasyBase {
  /**
   * Type of authorization used by the connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auth_type" })
  authType?: AuthTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "consumer_id" })
  consumerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "icon" })
  icon?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logo" })
  logo?: string;

  /**
   * Attach your own consumer specific metadata
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "service_id" })
  serviceId?: string;

  /**
   * Connection settings. Values will persist to `form_fields` with corresponding id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "settings" })
  settings?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ConsumerConnectionStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tag_line" })
  tagLine?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unified_api" })
  unifiedApi?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "website" })
  website?: string;
}
