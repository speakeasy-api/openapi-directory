// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetComputeAccessXAmzTargetEnum
type GetComputeAccessXAmzTargetEnum string

const (
	GetComputeAccessXAmzTargetEnumGameLiftGetComputeAccess GetComputeAccessXAmzTargetEnum = "GameLift.GetComputeAccess"
)

func (e GetComputeAccessXAmzTargetEnum) ToPointer() *GetComputeAccessXAmzTargetEnum {
	return &e
}

func (e *GetComputeAccessXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GameLift.GetComputeAccess":
		*e = GetComputeAccessXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetComputeAccessXAmzTargetEnum: %v", v)
	}
}

type GetComputeAccessRequest struct {
	GetComputeAccessInput shared.GetComputeAccessInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            GetComputeAccessXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetComputeAccessResponse struct {
	ContentType string
	// Success
	GetComputeAccessOutput *shared.GetComputeAccessOutput
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
}
