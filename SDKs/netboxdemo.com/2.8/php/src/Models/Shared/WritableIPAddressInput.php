<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class WritableIPAddressInput
{
    /**
     * IPv4 or IPv6 address (with mask)
     * 
     * @var string $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $address;
    
    /**
     * $customFields
     * 
     * @var ?array<string, mixed> $customFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_fields')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFields = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Hostname or FQDN (not case-sensitive)
     * 
     * @var ?string $dnsName
     */
	#[\JMS\Serializer\Annotation\SerializedName('dns_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dnsName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('interface')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $interface = null;
    
    /**
     * The IP for which this address is the "outside" IP
     * 
     * @var ?int $natInside
     */
	#[\JMS\Serializer\Annotation\SerializedName('nat_inside')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $natInside = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('nat_outside')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $natOutside;
    
    /**
     * The functional role of this IP
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WritableIPAddressRoleEnum $role
     */
	#[\JMS\Serializer\Annotation\SerializedName('role')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WritableIPAddressRoleEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WritableIPAddressRoleEnum $role = null;
    
    /**
     * The operational status of this IP
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WritableIPAddressStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WritableIPAddressStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WritableIPAddressStatusEnum $status = null;
    
    /**
     * $tags
     * 
     * @var ?array<string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('tenant')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $tenant = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('vrf')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $vrf = null;
    
	public function __construct()
	{
		$this->address = "";
		$this->customFields = null;
		$this->description = null;
		$this->dnsName = null;
		$this->interface = null;
		$this->natInside = null;
		$this->natOutside = 0;
		$this->role = null;
		$this->status = null;
		$this->tags = null;
		$this->tenant = null;
		$this->vrf = null;
	}
}
