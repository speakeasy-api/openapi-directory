/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DiscoverConnectionProfileRequestInput - Request message for 'discover' ConnectionProfile request.
 */
public class DiscoverConnectionProfileRequestInput {
    /**
     * A set of reusable connection configurations to be used as a source or destination for a stream.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionProfile")
    public ConnectionProfileInput connectionProfile;

    public DiscoverConnectionProfileRequestInput withConnectionProfile(ConnectionProfileInput connectionProfile) {
        this.connectionProfile = connectionProfile;
        return this;
    }
    
    /**
     * A reference to an existing connection profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionProfileName")
    public String connectionProfileName;

    public DiscoverConnectionProfileRequestInput withConnectionProfileName(String connectionProfileName) {
        this.connectionProfileName = connectionProfileName;
        return this;
    }
    
    /**
     * Whether to retrieve the full hierarchy of data objects (TRUE) or only the current level (FALSE).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullHierarchy")
    public Boolean fullHierarchy;

    public DiscoverConnectionProfileRequestInput withFullHierarchy(Boolean fullHierarchy) {
        this.fullHierarchy = fullHierarchy;
        return this;
    }
    
    /**
     * The number of hierarchy levels below the current level to be retrieved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hierarchyDepth")
    public Integer hierarchyDepth;

    public DiscoverConnectionProfileRequestInput withHierarchyDepth(Integer hierarchyDepth) {
        this.hierarchyDepth = hierarchyDepth;
        return this;
    }
    
    /**
     * MySQL database structure
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mysqlRdbms")
    public MysqlRdbms mysqlRdbms;

    public DiscoverConnectionProfileRequestInput withMysqlRdbms(MysqlRdbms mysqlRdbms) {
        this.mysqlRdbms = mysqlRdbms;
        return this;
    }
    
    /**
     * Oracle database structure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oracleRdbms")
    public OracleRdbms oracleRdbms;

    public DiscoverConnectionProfileRequestInput withOracleRdbms(OracleRdbms oracleRdbms) {
        this.oracleRdbms = oracleRdbms;
        return this;
    }
    
    /**
     * PostgreSQL database structure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postgresqlRdbms")
    public PostgresqlRdbms postgresqlRdbms;

    public DiscoverConnectionProfileRequestInput withPostgresqlRdbms(PostgresqlRdbms postgresqlRdbms) {
        this.postgresqlRdbms = postgresqlRdbms;
        return this;
    }
    
    public DiscoverConnectionProfileRequestInput(){}
}
