/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TaskExecution } from "./taskexecution";
import { Expose, Type } from "class-transformer";

/**
 * Task State
 */
export enum StatusEventTaskStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Pending = "PENDING",
  Assigned = "ASSIGNED",
  Running = "RUNNING",
  Failed = "FAILED",
  Succeeded = "SUCCEEDED",
}

/**
 * Status event
 */
export class StatusEvent extends SpeakeasyBase {
  /**
   * Description of the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The time this event occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventTime" })
  eventTime?: string;

  /**
   * This Task Execution field includes detail information for task execution procedures, based on StatusEvent types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskExecution" })
  @Type(() => TaskExecution)
  taskExecution?: TaskExecution;

  /**
   * Task State
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskState" })
  taskState?: StatusEventTaskStateEnum;

  /**
   * Type of the event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
