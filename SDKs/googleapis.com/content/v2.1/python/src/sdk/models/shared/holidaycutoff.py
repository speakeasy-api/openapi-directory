"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HolidayCutoff:
    
    deadline_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deadlineDate'), 'exclude': lambda f: f is None }})
    r"""Date of the order deadline, in ISO 8601 format. For example, \\"2016-11-29\\" for 29th November 2016. Required."""  
    deadline_hour: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deadlineHour'), 'exclude': lambda f: f is None }})
    r"""Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required."""  
    deadline_timezone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deadlineTimezone'), 'exclude': lambda f: f is None }})
    r"""Timezone identifier for the deadline hour (for example, \\"Europe/Zurich\\"). List of identifiers. Required."""  
    holiday_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('holidayId'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for the holiday. Required."""  
    visible_from_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visibleFromDate'), 'exclude': lambda f: f is None }})
    r"""Date on which the deadline will become visible to consumers in ISO 8601 format. For example, \\"2016-10-31\\" for 31st October 2016. Required."""  
    