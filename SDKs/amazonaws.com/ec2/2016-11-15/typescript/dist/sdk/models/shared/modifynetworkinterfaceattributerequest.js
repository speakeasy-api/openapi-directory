"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifyNetworkInterfaceAttributeRequest = exports.ModifyNetworkInterfaceAttributeRequestSourceDestCheck = exports.ModifyNetworkInterfaceAttributeRequestDescription = exports.ModifyNetworkInterfaceAttributeRequestAttachment = void 0;
var utils_1 = require("../../../internal/utils");
var enasrdspecification_1 = require("./enasrdspecification");
/**
 * Information about the interface attachment. If modifying the <code>delete on termination</code> attribute, you must specify the ID of the interface attachment.
 */
var ModifyNetworkInterfaceAttributeRequestAttachment = /** @class */ (function (_super) {
    __extends(ModifyNetworkInterfaceAttributeRequestAttachment, _super);
    function ModifyNetworkInterfaceAttributeRequestAttachment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyNetworkInterfaceAttributeRequestAttachment.prototype, "attachmentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyNetworkInterfaceAttributeRequestAttachment.prototype, "deleteOnTermination", void 0);
    return ModifyNetworkInterfaceAttributeRequestAttachment;
}(utils_1.SpeakeasyBase));
exports.ModifyNetworkInterfaceAttributeRequestAttachment = ModifyNetworkInterfaceAttributeRequestAttachment;
/**
 * A description for the network interface.
 */
var ModifyNetworkInterfaceAttributeRequestDescription = /** @class */ (function (_super) {
    __extends(ModifyNetworkInterfaceAttributeRequestDescription, _super);
    function ModifyNetworkInterfaceAttributeRequestDescription() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyNetworkInterfaceAttributeRequestDescription.prototype, "value", void 0);
    return ModifyNetworkInterfaceAttributeRequestDescription;
}(utils_1.SpeakeasyBase));
exports.ModifyNetworkInterfaceAttributeRequestDescription = ModifyNetworkInterfaceAttributeRequestDescription;
/**
 * Enable or disable source/destination checks, which ensure that the instance is either the source or the destination of any traffic that it receives. If the value is <code>true</code>, source/destination checks are enabled; otherwise, they are disabled. The default value is <code>true</code>. You must disable source/destination checks if the instance runs services such as network address translation, routing, or firewalls.
 */
var ModifyNetworkInterfaceAttributeRequestSourceDestCheck = /** @class */ (function (_super) {
    __extends(ModifyNetworkInterfaceAttributeRequestSourceDestCheck, _super);
    function ModifyNetworkInterfaceAttributeRequestSourceDestCheck() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyNetworkInterfaceAttributeRequestSourceDestCheck.prototype, "value", void 0);
    return ModifyNetworkInterfaceAttributeRequestSourceDestCheck;
}(utils_1.SpeakeasyBase));
exports.ModifyNetworkInterfaceAttributeRequestSourceDestCheck = ModifyNetworkInterfaceAttributeRequestSourceDestCheck;
/**
 * Contains the parameters for ModifyNetworkInterfaceAttribute.
 */
var ModifyNetworkInterfaceAttributeRequest = /** @class */ (function (_super) {
    __extends(ModifyNetworkInterfaceAttributeRequest, _super);
    function ModifyNetworkInterfaceAttributeRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyNetworkInterfaceAttributeRequestAttachment)
    ], ModifyNetworkInterfaceAttributeRequest.prototype, "attachment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyNetworkInterfaceAttributeRequestDescription)
    ], ModifyNetworkInterfaceAttributeRequest.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyNetworkInterfaceAttributeRequest.prototype, "dryRun", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", enasrdspecification_1.EnaSrdSpecification)
    ], ModifyNetworkInterfaceAttributeRequest.prototype, "enaSrdSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], ModifyNetworkInterfaceAttributeRequest.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyNetworkInterfaceAttributeRequest.prototype, "networkInterfaceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyNetworkInterfaceAttributeRequestSourceDestCheck)
    ], ModifyNetworkInterfaceAttributeRequest.prototype, "sourceDestCheck", void 0);
    return ModifyNetworkInterfaceAttributeRequest;
}(utils_1.SpeakeasyBase));
exports.ModifyNetworkInterfaceAttributeRequest = ModifyNetworkInterfaceAttributeRequest;
