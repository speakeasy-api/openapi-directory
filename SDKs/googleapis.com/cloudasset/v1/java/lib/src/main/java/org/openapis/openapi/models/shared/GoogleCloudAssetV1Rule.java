/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudAssetV1Rule - Represents a rule defined in an organization policy
 */
public class GoogleCloudAssetV1Rule {
    /**
     * Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowAll")
    public Boolean allowAll;

    public GoogleCloudAssetV1Rule withAllowAll(Boolean allowAll) {
        this.allowAll = allowAll;
        return this;
    }
    
    /**
     * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() &lt; 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' &amp;&amp; document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public Expr condition;

    public GoogleCloudAssetV1Rule withCondition(Expr condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * Setting this to true means that all values are denied. This field can be set only in Policies for list constraints.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("denyAll")
    public Boolean denyAll;

    public GoogleCloudAssetV1Rule withDenyAll(Boolean denyAll) {
        this.denyAll = denyAll;
        return this;
    }
    
    /**
     * If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enforce")
    public Boolean enforce;

    public GoogleCloudAssetV1Rule withEnforce(Boolean enforce) {
        this.enforce = enforce;
        return this;
    }
    
    /**
     * The string values for the list constraints.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("values")
    public GoogleCloudAssetV1StringValues values;

    public GoogleCloudAssetV1Rule withValues(GoogleCloudAssetV1StringValues values) {
        this.values = values;
        return this;
    }
    
    public GoogleCloudAssetV1Rule(){}
}
