/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GiftCardActivityLoad - Present only when `GiftCardActivityType` is LOAD.
 */
public class GiftCardActivityLoad {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount_money")
    public Money amountMoney;

    public GiftCardActivityLoad withAmountMoney(Money amountMoney) {
        this.amountMoney = amountMoney;
        return this;
    }
    
    /**
     * If you are not using the Orders API, this field is required because it is used to identify a buyer 
     * to perform compliance checks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyer_payment_instrument_ids")
    public String[] buyerPaymentInstrumentIds;

    public GiftCardActivityLoad withBuyerPaymentInstrumentIds(String[] buyerPaymentInstrumentIds) {
        this.buyerPaymentInstrumentIds = buyerPaymentInstrumentIds;
        return this;
    }
    
    /**
     * The `line_item_uid` of the gift card\u2019s line item in the order associated with the activity.
     * It is populated along with `order_id` and is required if using the Square Orders API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("line_item_uid")
    public String lineItemUid;

    public GiftCardActivityLoad withLineItemUid(String lineItemUid) {
        this.lineItemUid = lineItemUid;
        return this;
    }
    
    /**
     * The `order_id` of the order associated with the activity.
     * It is populated along with `line_item_uid` and is required if using the Square Orders API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_id")
    public String orderId;

    public GiftCardActivityLoad withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * A client-specified ID to associate an entity, in another system, with this gift card
     * activity. This can be used to track the order or payment related information when the Square Orders
     * API is not being used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference_id")
    public String referenceId;

    public GiftCardActivityLoad withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    public GiftCardActivityLoad(){}
}
