"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createservicemetricstaskrequest as shared_createservicemetricstaskrequest
from typing import Optional


@dataclasses.dataclass
class CreateCustomerServiceMetricTaskSecurity:
    
    api_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class CreateCustomerServiceMetricTaskRequest:
    
    accept_language: str = dataclasses.field(metadata={'header': { 'field_name': 'accept-language', 'style': 'simple', 'explode': False }})
    r"""Use this header to specify the natural language in which the authenticated user desires the response."""  
    create_service_metrics_task_request: shared_createservicemetricstaskrequest.CreateServiceMetricsTaskRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Request payload containing version, feedType, and optional filterCriteria."""  
    

@dataclasses.dataclass
class CreateCustomerServiceMetricTaskResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    