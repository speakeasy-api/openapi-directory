/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LocalizedProperty } from "./localizedproperty";
import { Expose, Type } from "class-transformer";

/**
 * Branding properties for images associated with the channel.
 */
export class ImageSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "backgroundImageUrl" })
  @Type(() => LocalizedProperty)
  backgroundImageUrl?: LocalizedProperty;

  /**
   * This is generated when a ChannelBanner.Insert request has succeeded for the given channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerExternalUrl" })
  bannerExternalUrl?: string;

  /**
   * Banner image. Desktop size (1060x175).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerImageUrl" })
  bannerImageUrl?: string;

  /**
   * Banner image. Mobile size high resolution (1440x395).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerMobileExtraHdImageUrl" })
  bannerMobileExtraHdImageUrl?: string;

  /**
   * Banner image. Mobile size high resolution (1280x360).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerMobileHdImageUrl" })
  bannerMobileHdImageUrl?: string;

  /**
   * Banner image. Mobile size (640x175).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerMobileImageUrl" })
  bannerMobileImageUrl?: string;

  /**
   * Banner image. Mobile size low resolution (320x88).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerMobileLowImageUrl" })
  bannerMobileLowImageUrl?: string;

  /**
   * Banner image. Mobile size medium/high resolution (960x263).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerMobileMediumHdImageUrl" })
  bannerMobileMediumHdImageUrl?: string;

  /**
   * Banner image. Tablet size extra high resolution (2560x424).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerTabletExtraHdImageUrl" })
  bannerTabletExtraHdImageUrl?: string;

  /**
   * Banner image. Tablet size high resolution (2276x377).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerTabletHdImageUrl" })
  bannerTabletHdImageUrl?: string;

  /**
   * Banner image. Tablet size (1707x283).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerTabletImageUrl" })
  bannerTabletImageUrl?: string;

  /**
   * Banner image. Tablet size low resolution (1138x188).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerTabletLowImageUrl" })
  bannerTabletLowImageUrl?: string;

  /**
   * Banner image. TV size high resolution (1920x1080).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerTvHighImageUrl" })
  bannerTvHighImageUrl?: string;

  /**
   * Banner image. TV size extra high resolution (2120x1192).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerTvImageUrl" })
  bannerTvImageUrl?: string;

  /**
   * Banner image. TV size low resolution (854x480).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerTvLowImageUrl" })
  bannerTvLowImageUrl?: string;

  /**
   * Banner image. TV size medium resolution (1280x720).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bannerTvMediumImageUrl" })
  bannerTvMediumImageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "largeBrandedBannerImageImapScript" })
  @Type(() => LocalizedProperty)
  largeBrandedBannerImageImapScript?: LocalizedProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "largeBrandedBannerImageUrl" })
  @Type(() => LocalizedProperty)
  largeBrandedBannerImageUrl?: LocalizedProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "smallBrandedBannerImageImapScript" })
  @Type(() => LocalizedProperty)
  smallBrandedBannerImageImapScript?: LocalizedProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "smallBrandedBannerImageUrl" })
  @Type(() => LocalizedProperty)
  smallBrandedBannerImageUrl?: LocalizedProperty;

  /**
   * The URL for a 1px by 1px tracking pixel that can be used to collect statistics for views of the channel or video pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trackingImageUrl" })
  trackingImageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "watchIconImageUrl" })
  watchIconImageUrl?: string;
}
