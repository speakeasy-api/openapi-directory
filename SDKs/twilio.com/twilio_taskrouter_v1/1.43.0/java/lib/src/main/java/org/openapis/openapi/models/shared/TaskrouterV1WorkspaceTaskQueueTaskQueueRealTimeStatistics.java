/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics - OK
 */
public class TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskQueue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The number of current Workers by Activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activity_statistics")
    public Object[] activityStatistics;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withActivityStatistics(Object[] activityStatistics) {
        this.activityStatistics = activityStatistics;
        return this;
    }
    
    /**
     * The relative age in the TaskQueue for the longest waiting Task. Calculation is based on the time when the Task entered the TaskQueue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longest_relative_task_age_in_queue")
    public Long longestRelativeTaskAgeInQueue;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withLongestRelativeTaskAgeInQueue(Long longestRelativeTaskAgeInQueue) {
        this.longestRelativeTaskAgeInQueue = longestRelativeTaskAgeInQueue;
        return this;
    }
    
    /**
     * The Task SID of the Task waiting in the TaskQueue the longest. Calculation is based on the time when the Task entered the TaskQueue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longest_relative_task_sid_in_queue")
    public String longestRelativeTaskSidInQueue;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withLongestRelativeTaskSidInQueue(String longestRelativeTaskSidInQueue) {
        this.longestRelativeTaskSidInQueue = longestRelativeTaskSidInQueue;
        return this;
    }
    
    /**
     * The age of the longest waiting Task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longest_task_waiting_age")
    public Long longestTaskWaitingAge;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withLongestTaskWaitingAge(Long longestTaskWaitingAge) {
        this.longestTaskWaitingAge = longestTaskWaitingAge;
        return this;
    }
    
    /**
     * The SID of the longest waiting Task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longest_task_waiting_sid")
    public String longestTaskWaitingSid;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withLongestTaskWaitingSid(String longestTaskWaitingSid) {
        this.longestTaskWaitingSid = longestTaskWaitingSid;
        return this;
    }
    
    /**
     * The SID of the TaskQueue from which these statistics were calculated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task_queue_sid")
    public String taskQueueSid;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withTaskQueueSid(String taskQueueSid) {
        this.taskQueueSid = taskQueueSid;
        return this;
    }
    
    /**
     * The number of Tasks by priority. For example: `{"0": "10", "99": "5"}` shows 10 Tasks at priority 0 and 5 at priority 99.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tasks_by_priority")
    public Object tasksByPriority;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withTasksByPriority(Object tasksByPriority) {
        this.tasksByPriority = tasksByPriority;
        return this;
    }
    
    /**
     * The number of Tasks by their current status. For example: `{"pending": "1", "reserved": "3", "assigned": "2", "completed": "5"}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tasks_by_status")
    public Object tasksByStatus;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withTasksByStatus(Object tasksByStatus) {
        this.tasksByStatus = tasksByStatus;
        return this;
    }
    
    /**
     * The total number of Workers available for Tasks in the TaskQueue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_available_workers")
    public Long totalAvailableWorkers;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withTotalAvailableWorkers(Long totalAvailableWorkers) {
        this.totalAvailableWorkers = totalAvailableWorkers;
        return this;
    }
    
    /**
     * The total number of Workers eligible for Tasks in the TaskQueue, independent of their Activity state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_eligible_workers")
    public Long totalEligibleWorkers;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withTotalEligibleWorkers(Long totalEligibleWorkers) {
        this.totalEligibleWorkers = totalEligibleWorkers;
        return this;
    }
    
    /**
     * The total number of Tasks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_tasks")
    public Long totalTasks;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withTotalTasks(Long totalTasks) {
        this.totalTasks = totalTasks;
        return this;
    }
    
    /**
     * The absolute URL of the TaskQueue statistics resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The SID of the Workspace that contains the TaskQueue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspace_sid")
    public String workspaceSid;

    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics withWorkspaceSid(String workspaceSid) {
        this.workspaceSid = workspaceSid;
        return this;
    }
    
    public TaskrouterV1WorkspaceTaskQueueTaskQueueRealTimeStatistics(){}
}
