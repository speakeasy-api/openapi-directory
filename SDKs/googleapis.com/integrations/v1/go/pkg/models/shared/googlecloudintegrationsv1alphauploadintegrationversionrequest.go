// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum - File format for upload request.
type GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum string

const (
	GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnumFileFormatUnspecified GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum = "FILE_FORMAT_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnumJSON                  GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum = "JSON"
	GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnumYaml                  GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum = "YAML"
)

func (e *GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FILE_FORMAT_UNSPECIFIED":
		fallthrough
	case "JSON":
		fallthrough
	case "YAML":
		*e = GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum: %s", s)
	}
}

// GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest - Request for UploadIntegrationVersion.
type GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest struct {
	// The textproto of the integration_version.
	Content *string `json:"content,omitempty"`
	// File format for upload request.
	FileFormat *GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequestFileFormatEnum `json:"fileFormat,omitempty"`
}
