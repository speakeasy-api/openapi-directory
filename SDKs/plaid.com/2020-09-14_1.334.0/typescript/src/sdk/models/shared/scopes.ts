/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountAccess } from "./accountaccess";
import { Expose, Type } from "class-transformer";

/**
 * The scopes object
 */
export class Scopes extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AccountAccess })
  @Expose({ name: "accounts" })
  @Type(() => AccountAccess)
  accounts?: AccountAccess[];

  /**
   * Allow access to newly opened accounts as they are opened. If unset, defaults to `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "new_accounts" })
  newAccounts?: boolean;

  /**
   * The product access being requested. Used to or disallow product access across all accounts. If unset, defaults to all products allowed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "product_access" })
  productAccess?: Record<string, any>;
}
