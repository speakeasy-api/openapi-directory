// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutThirdPartyJobFailureResultXAmzTargetEnum
type PutThirdPartyJobFailureResultXAmzTargetEnum string

const (
	PutThirdPartyJobFailureResultXAmzTargetEnumCodePipeline20150709PutThirdPartyJobFailureResult PutThirdPartyJobFailureResultXAmzTargetEnum = "CodePipeline_20150709.PutThirdPartyJobFailureResult"
)

func (e PutThirdPartyJobFailureResultXAmzTargetEnum) ToPointer() *PutThirdPartyJobFailureResultXAmzTargetEnum {
	return &e
}

func (e *PutThirdPartyJobFailureResultXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodePipeline_20150709.PutThirdPartyJobFailureResult":
		*e = PutThirdPartyJobFailureResultXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutThirdPartyJobFailureResultXAmzTargetEnum: %v", v)
	}
}

type PutThirdPartyJobFailureResultRequest struct {
	PutThirdPartyJobFailureResultInput shared.PutThirdPartyJobFailureResultInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         PutThirdPartyJobFailureResultXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutThirdPartyJobFailureResultResponse struct {
	ContentType string
	// InvalidClientTokenException
	InvalidClientTokenException interface{}
	// InvalidJobStateException
	InvalidJobStateException interface{}
	// JobNotFoundException
	JobNotFoundException interface{}
	StatusCode           int
	RawResponse          *http.Response
	// ValidationException
	ValidationException interface{}
}
