/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateOrganizationAdminRequestBody {
    /**
     * The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticationMethod")
    public CreateOrganizationAdminRequestBodyAuthenticationMethodEnum authenticationMethod;

    public CreateOrganizationAdminRequestBody withAuthenticationMethod(CreateOrganizationAdminRequestBodyAuthenticationMethodEnum authenticationMethod) {
        this.authenticationMethod = authenticationMethod;
        return this;
    }
    
    /**
     * The email of the dashboard administrator. This attribute can not be updated.
     */
    @JsonProperty("email")
    public String email;

    public CreateOrganizationAdminRequestBody withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The name of the dashboard administrator
     */
    @JsonProperty("name")
    public String name;

    public CreateOrganizationAdminRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The list of networks that the dashboard administrator has privileges on
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networks")
    public CreateOrganizationAdminRequestBodyNetworks[] networks;

    public CreateOrganizationAdminRequestBody withNetworks(CreateOrganizationAdminRequestBodyNetworks[] networks) {
        this.networks = networks;
        return this;
    }
    
    /**
     * The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
     */
    @JsonProperty("orgAccess")
    public CreateOrganizationAdminRequestBodyOrgAccessEnum orgAccess;

    public CreateOrganizationAdminRequestBody withOrgAccess(CreateOrganizationAdminRequestBodyOrgAccessEnum orgAccess) {
        this.orgAccess = orgAccess;
        return this;
    }
    
    /**
     * The list of tags that the dashboard administrator has privileges on
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public CreateOrganizationAdminRequestBodyTags[] tags;

    public CreateOrganizationAdminRequestBody withTags(CreateOrganizationAdminRequestBodyTags[] tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateOrganizationAdminRequestBody(@JsonProperty("email") String email, @JsonProperty("name") String name, @JsonProperty("orgAccess") CreateOrganizationAdminRequestBodyOrgAccessEnum orgAccess) {
        this.email = email;
        this.name = name;
        this.orgAccess = orgAccess;
  }
}
