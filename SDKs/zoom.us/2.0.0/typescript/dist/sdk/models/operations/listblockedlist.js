"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListBlockedListResponse = exports.ListBlockedList200ApplicationJSON = exports.ListBlockedList200ApplicationJSONBlockedList = exports.ListBlockedList200ApplicationJSONBlockedListStatusEnum = exports.ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum = exports.ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum = exports.ListBlockedList200ApplicationXML = exports.ListBlockedList200ApplicationXMLBlockedList = exports.ListBlockedList200ApplicationXMLBlockedListStatusEnum = exports.ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum = exports.ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum = exports.ListBlockedListRequest = exports.ListBlockedListSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var ListBlockedListSecurity = /** @class */ (function (_super) {
    __extends(ListBlockedListSecurity, _super);
    function ListBlockedListSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], ListBlockedListSecurity.prototype, "oAuth", void 0);
    return ListBlockedListSecurity;
}(utils_1.SpeakeasyBase));
exports.ListBlockedListSecurity = ListBlockedListSecurity;
var ListBlockedListRequest = /** @class */ (function (_super) {
    __extends(ListBlockedListRequest, _super);
    function ListBlockedListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=next_page_token",
        }),
        __metadata("design:type", String)
    ], ListBlockedListRequest.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=page_size",
        }),
        __metadata("design:type", Number)
    ], ListBlockedListRequest.prototype, "pageSize", void 0);
    return ListBlockedListRequest;
}(utils_1.SpeakeasyBase));
exports.ListBlockedListRequest = ListBlockedListRequest;
/**
 * Block type.<br>
 *
 * @remarks
 * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
 * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
 */
var ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum;
(function (ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum) {
    ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum["Inbound"] = "inbound";
    ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum["Outbound"] = "outbound";
})(ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum = exports.ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum || (exports.ListBlockedList200ApplicationXMLBlockedListBlockTypeEnum = {}));
/**
 * Indicates the match type for the blocked list. The values can be one of the following:<br>
 *
 * @remarks
 * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
 * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
 */
var ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum;
(function (ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum) {
    ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum["PhoneNumber"] = "phoneNumber";
    ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum["Prefix"] = "prefix";
})(ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum = exports.ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum || (exports.ListBlockedList200ApplicationXMLBlockedListMatchTypeEnum = {}));
/**
 * Indicates whether the blocking is active or inactive. <br>
 *
 * @remarks
 * `active`: The blocked list is active.<br>
 * `inactive`: The blocked list is inactive.
 */
var ListBlockedList200ApplicationXMLBlockedListStatusEnum;
(function (ListBlockedList200ApplicationXMLBlockedListStatusEnum) {
    ListBlockedList200ApplicationXMLBlockedListStatusEnum["Active"] = "active";
    ListBlockedList200ApplicationXMLBlockedListStatusEnum["Inactive"] = "inactive";
})(ListBlockedList200ApplicationXMLBlockedListStatusEnum = exports.ListBlockedList200ApplicationXMLBlockedListStatusEnum || (exports.ListBlockedList200ApplicationXMLBlockedListStatusEnum = {}));
var ListBlockedList200ApplicationXMLBlockedList = /** @class */ (function (_super) {
    __extends(ListBlockedList200ApplicationXMLBlockedList, _super);
    function ListBlockedList200ApplicationXMLBlockedList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationXMLBlockedList.prototype, "blockType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationXMLBlockedList.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationXMLBlockedList.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationXMLBlockedList.prototype, "matchType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationXMLBlockedList.prototype, "phoneNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationXMLBlockedList.prototype, "status", void 0);
    return ListBlockedList200ApplicationXMLBlockedList;
}(utils_1.SpeakeasyBase));
exports.ListBlockedList200ApplicationXMLBlockedList = ListBlockedList200ApplicationXMLBlockedList;
/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Blocked list returned successfully.
 */
var ListBlockedList200ApplicationXML = /** @class */ (function (_super) {
    __extends(ListBlockedList200ApplicationXML, _super);
    function ListBlockedList200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ListBlockedList200ApplicationXMLBlockedList }),
        __metadata("design:type", Array)
    ], ListBlockedList200ApplicationXML.prototype, "blockedList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationXML.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ListBlockedList200ApplicationXML.prototype, "pageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ListBlockedList200ApplicationXML.prototype, "totalRecords", void 0);
    return ListBlockedList200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.ListBlockedList200ApplicationXML = ListBlockedList200ApplicationXML;
/**
 * Block type.<br>
 *
 * @remarks
 * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
 * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
 */
var ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum;
(function (ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum) {
    ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum["Inbound"] = "inbound";
    ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum["Outbound"] = "outbound";
})(ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum = exports.ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum || (exports.ListBlockedList200ApplicationJSONBlockedListBlockTypeEnum = {}));
/**
 * Indicates the match type for the blocked list. The values can be one of the following:<br>
 *
 * @remarks
 * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
 * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
 */
var ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum;
(function (ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum) {
    ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum["PhoneNumber"] = "phoneNumber";
    ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum["Prefix"] = "prefix";
})(ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum = exports.ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum || (exports.ListBlockedList200ApplicationJSONBlockedListMatchTypeEnum = {}));
/**
 * Indicates whether the blocking is active or inactive. <br>
 *
 * @remarks
 * `active`: The blocked list is active.<br>
 * `inactive`: The blocked list is inactive.
 */
var ListBlockedList200ApplicationJSONBlockedListStatusEnum;
(function (ListBlockedList200ApplicationJSONBlockedListStatusEnum) {
    ListBlockedList200ApplicationJSONBlockedListStatusEnum["Active"] = "active";
    ListBlockedList200ApplicationJSONBlockedListStatusEnum["Inactive"] = "inactive";
})(ListBlockedList200ApplicationJSONBlockedListStatusEnum = exports.ListBlockedList200ApplicationJSONBlockedListStatusEnum || (exports.ListBlockedList200ApplicationJSONBlockedListStatusEnum = {}));
var ListBlockedList200ApplicationJSONBlockedList = /** @class */ (function (_super) {
    __extends(ListBlockedList200ApplicationJSONBlockedList, _super);
    function ListBlockedList200ApplicationJSONBlockedList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "block_type" }),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationJSONBlockedList.prototype, "blockType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationJSONBlockedList.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationJSONBlockedList.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "match_type" }),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationJSONBlockedList.prototype, "matchType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "phone_number" }),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationJSONBlockedList.prototype, "phoneNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationJSONBlockedList.prototype, "status", void 0);
    return ListBlockedList200ApplicationJSONBlockedList;
}(utils_1.SpeakeasyBase));
exports.ListBlockedList200ApplicationJSONBlockedList = ListBlockedList200ApplicationJSONBlockedList;
/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Blocked list returned successfully.
 */
var ListBlockedList200ApplicationJSON = /** @class */ (function (_super) {
    __extends(ListBlockedList200ApplicationJSON, _super);
    function ListBlockedList200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ListBlockedList200ApplicationJSONBlockedList }),
        (0, class_transformer_1.Expose)({ name: "blocked_list" }),
        (0, class_transformer_1.Type)(function () { return ListBlockedList200ApplicationJSONBlockedList; }),
        __metadata("design:type", Array)
    ], ListBlockedList200ApplicationJSON.prototype, "blockedList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "next_page_token" }),
        __metadata("design:type", String)
    ], ListBlockedList200ApplicationJSON.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page_size" }),
        __metadata("design:type", Number)
    ], ListBlockedList200ApplicationJSON.prototype, "pageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_records" }),
        __metadata("design:type", Number)
    ], ListBlockedList200ApplicationJSON.prototype, "totalRecords", void 0);
    return ListBlockedList200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.ListBlockedList200ApplicationJSON = ListBlockedList200ApplicationJSON;
var ListBlockedListResponse = /** @class */ (function (_super) {
    __extends(ListBlockedListResponse, _super);
    function ListBlockedListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], ListBlockedListResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListBlockedListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ListBlockedListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ListBlockedListResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ListBlockedList200ApplicationJSON)
    ], ListBlockedListResponse.prototype, "listBlockedList200ApplicationJSONObject", void 0);
    return ListBlockedListResponse;
}(utils_1.SpeakeasyBase));
exports.ListBlockedListResponse = ListBlockedListResponse;
