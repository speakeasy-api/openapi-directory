/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class RequestNodesQueryParams {
    /**
     * * `0` - top level nodes only
     * 
     * * `n` (any positive number) - include `n` levels starting from the current node
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=depth_level")
    public Integer depthLevel;
    public RequestNodesQueryParams withDepthLevel(Integer depthLevel) {
        this.depthLevel = depthLevel;
        return this;
    }
    
    /**
     * Filter string
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public String filter;
    public RequestNodesQueryParams withFilter(String filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * Range limit.
     * 
     * Maximum 500.
     * 
     *  For more results please use paging (`offset` + `limit`).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;
    public RequestNodesQueryParams withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Range offset
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;
    public RequestNodesQueryParams withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Parent node ID.
     * 
     * Only rooms and folders can be parents.
     * 
     * Parent ID `0` or empty is the root node.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=parent_id")
    public Long parentId;
    public RequestNodesQueryParams withParentId(Long parentId) {
        this.parentId = parentId;
        return this;
    }
    
    /**
     * Show all rooms for management perspective.
     * 
     * Only possible for _Rooms Managers_ / _Room Admins_.
     * 
     * For all other users, it will be ignored.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=room_manager")
    public Boolean roomManager;
    public RequestNodesQueryParams withRoomManager(Boolean roomManager) {
        this.roomManager = roomManager;
        return this;
    }
    
    /**
     * Sort string
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public RequestNodesQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
}
