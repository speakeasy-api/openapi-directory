// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type MessagesFetchAllSecurity struct {
	SakariAuth shared.SchemeSakariAuth `security:"scheme,type=oauth2"`
}

type MessagesFetchAllPathParams struct {
	// Account to apply operations to
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
}

type MessagesFetchAllQueryParams struct {
	// ID of contact
	ContactID *string `queryParam:"style=form,explode=true,name=contactId"`
	// ID of conversation
	ConversationID *string `queryParam:"style=form,explode=true,name=conversationId"`
	// Maximum number of results to return
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Results to skip when paginating through a result set
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
}

type MessagesFetchAllRequest struct {
	PathParams  MessagesFetchAllPathParams
	QueryParams MessagesFetchAllQueryParams
	Security    MessagesFetchAllSecurity
}

type MessagesFetchAllResponse struct {
	ContentType string
	// successful operation
	MessagesResponse *shared.MessagesResponse
	StatusCode       int
	RawResponse      *http.Response
}
