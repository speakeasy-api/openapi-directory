<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SubscriptionView
{
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $action;
    
	#[\JMS\Serializer\Annotation\SerializedName('callbackOnModify')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $callbackOnModify;
    
	#[\JMS\Serializer\Annotation\SerializedName('callbackUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $callbackUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('commenced')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $commenced;
    
	#[\JMS\Serializer\Annotation\SerializedName('created')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $created = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('custom')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $custom = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('frequency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $frequency;
    
    /**
     * $keys
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\KeyView> $keys
     */
	#[\JMS\Serializer\Annotation\SerializedName('keys')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\KeyView>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $keys = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updated = null;
    
	public function __construct()
	{
		$this->action = "";
		$this->callbackOnModify = false;
		$this->callbackUrl = null;
		$this->commenced = new \DateTime();
		$this->created = null;
		$this->custom = null;
		$this->frequency = "";
		$this->keys = null;
		$this->name = null;
		$this->updated = null;
	}
}
