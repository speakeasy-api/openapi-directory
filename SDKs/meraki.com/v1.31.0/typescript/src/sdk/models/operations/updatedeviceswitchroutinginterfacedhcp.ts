/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The DHCP lease time config for the dhcp server running on switch interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')
 */
export enum UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpLeaseTimeEnum {
  OneDay = "1 day",
  OneHour = "1 hour",
  OneWeek = "1 week",
  TwelveHours = "12 hours",
  ThirtyMinutes = "30 minutes",
  FourHours = "4 hours",
}

/**
 * The DHCP mode options for the switch interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
 */
export enum UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpModeEnum {
  DhcpDisabled = "dhcpDisabled",
  DhcpRelay = "dhcpRelay",
  DhcpServer = "dhcpServer",
}

/**
 * The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
 */
export enum UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpOptionsTypeEnum {
  Hex = "hex",
  Integer = "integer",
  Ip = "ip",
  Text = "text",
}

export class UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpOptions extends SpeakeasyBase {
  /**
   * The code for DHCP option which should be from 2 to 254
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  /**
   * The type of the DHCP option which should be one of ('text', 'ip', 'integer' or 'hex')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpOptionsTypeEnum;

  /**
   * The value of the DHCP option
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: string;
}

/**
 * The DHCP name server option for the dhcp server running on the switch interface ('googlePublicDns', 'openDns' or 'custom')
 */
export enum UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDnsNameserversOptionEnum {
  Custom = "custom",
  GooglePublicDns = "googlePublicDns",
  OpenDns = "openDns",
}

export class UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyFixedIpAssignments extends SpeakeasyBase {
  /**
   * The IP address of the client which has fixed IP address assigned to it
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip" })
  ip: string;

  /**
   * The MAC address of the client which has fixed IP address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mac" })
  mac: string;

  /**
   * The name of the client which has fixed IP address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyReservedIpRanges extends SpeakeasyBase {
  /**
   * The comment for the reserved IP range
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * The ending IP address of the reserved IP range
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end: string;

  /**
   * The starting IP address of the reserved IP range
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start: string;
}

export class UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody extends SpeakeasyBase {
  /**
   * The PXE boot server filename for the DHCP server running on the switch interface
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bootFileName" })
  bootFileName?: string;

  /**
   * The PXE boot server IP for the DHCP server running on the switch interface
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bootNextServer" })
  bootNextServer?: string;

  /**
   * Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch interface
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bootOptionsEnabled" })
  bootOptionsEnabled?: boolean;

  /**
   * The DHCP lease time config for the dhcp server running on switch interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dhcpLeaseTime" })
  dhcpLeaseTime?: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpLeaseTimeEnum;

  /**
   * The DHCP mode options for the switch interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dhcpMode" })
  dhcpMode?: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpModeEnum;

  /**
   * Array of DHCP options consisting of code, type and value for the DHCP server running on the switch interface
   */
  @SpeakeasyMetadata({
    elemType: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpOptions,
  })
  @Expose({ name: "dhcpOptions" })
  @Type(() => UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpOptions)
  dhcpOptions?: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpOptions[];

  /**
   * The DHCP relay server IPs to which DHCP packets would get relayed for the switch interface
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dhcpRelayServerIps" })
  dhcpRelayServerIps?: string[];

  /**
   * The DHCP name server IPs when DHCP name server option is 'custom'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dnsCustomNameservers" })
  dnsCustomNameservers?: string[];

  /**
   * The DHCP name server option for the dhcp server running on the switch interface ('googlePublicDns', 'openDns' or 'custom')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dnsNameserversOption" })
  dnsNameserversOption?: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDnsNameserversOptionEnum;

  /**
   * Array of DHCP fixed IP assignments for the DHCP server running on the switch interface
   */
  @SpeakeasyMetadata({
    elemType:
      UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyFixedIpAssignments,
  })
  @Expose({ name: "fixedIpAssignments" })
  @Type(
    () => UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyFixedIpAssignments
  )
  fixedIpAssignments?: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyFixedIpAssignments[];

  /**
   * Array of DHCP reserved IP assignments for the DHCP server running on the switch interface
   */
  @SpeakeasyMetadata({
    elemType: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyReservedIpRanges,
  })
  @Expose({ name: "reservedIpRanges" })
  @Type(() => UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyReservedIpRanges)
  reservedIpRanges?: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyReservedIpRanges[];
}

export class UpdateDeviceSwitchRoutingInterfaceDhcpRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=interfaceId",
  })
  interfaceId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=serial",
  })
  serial: string;
}

export class UpdateDeviceSwitchRoutingInterfaceDhcpResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateDeviceSwitchRoutingInterfaceDhcp200ApplicationJSONObject?: Record<
    string,
    any
  >;
}
