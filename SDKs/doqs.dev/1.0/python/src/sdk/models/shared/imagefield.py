"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import boundingbox as shared_boundingbox
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ImageFieldImageAnchorEnum(str, Enum):
    r"""An enumeration."""
    NW = 'nw'
    N = 'n'
    NE = 'ne'
    W = 'w'
    C = 'c'
    E = 'e'
    SW = 'sw'
    S = 's'

class ImageFieldTypeEnum(str, Enum):
    IMAGE = 'image'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageField:
    
    bbox: shared_boundingbox.BoundingBox = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bbox') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    page: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page') }})  
    anchor: Optional[ImageFieldImageAnchorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('anchor'), 'exclude': lambda f: f is None }})  
    required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required'), 'exclude': lambda f: f is None }})  
    type: Optional[ImageFieldTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    