<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSearchVersionNumberNearbySearchExtRequest
{
    /**
     * Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon.
     * 
     * @var ?string $btmRight
     * @deprecated this field will be removed in a future release, please migrate away from it as soon as possible
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=btmRight')]
    public ?string $btmRight = null;
    
    /**
     * Comma separated string of country codes. This will limit the search to the specified countries.
     * 
     * @var ?string $countrySet
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=countrySet')]
    public ?string $countrySet = null;
    
    /**
     * Expected response format.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ExtEnum $ext
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=ext')]
    public \OpenAPI\OpenAPI\Models\Shared\ExtEnum $ext;
    
    /**
     * Indexes for which extended postal codes should be included in the results. Available indexes are:
     * 
     *   - <b>Addr</b> = Address ranges
     *   - <b>Geo</b> = Geographies
     *   - <b>PAD</b> = Point Addresses
     *   - <b>POI</b> = Points of Interest
     *   - <b>Str</b> = Streets
     *   - <b>XStr</b> = Cross Streets (intersections)
     * 
     * @var ?string $extendedPostalCodesFor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=extendedPostalCodesFor')]
    public ?string $extendedPostalCodesFor = null;
    
    /**
     * A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
     * 
     *   - <b>Addr</b> = Address range interpolation (when there is no PAD)
     *   - <b>Geo</b> = Geographies
     *   - <b>PAD</b> = Point Addresses
     *   - <b>POI</b> = Points of interest
     *   - <b>Str</b> = Streets
     *   - <b>Xstr</b> = Cross Streets (intersections)
     * 
     * @var ?string $idxSet
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=idxSet')]
    public ?string $idxSet = null;
    
    /**
     * Language in which search results should be returned. Should be one of <a href="/search-api/search-api-documentation/supported-languages">supported IETF language tags</a>, case insensitive.
     * 
     * @var ?string $language
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=language')]
    public ?string $language = null;
    
    /**
     * Latitude where results should be biased.
     * 
     * NOTE: supplying a lat/lon without a radius will return search results biased to that point.
     * 
     * @var float $lat
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=lat')]
    public float $lat;
    
    /**
     * Maximum number of search results that will be returned.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Longitude where results should be biased
     * 
     * NOTE: supplying a lat/lon without a radius will return search results biased to that point.
     * 
     * @var float $lon
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=lon')]
    public float $lon;
    
    /**
     * Maximum fuzziness level to be used.
     * 
     * @var ?int $maxFuzzyLevel
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxFuzzyLevel')]
    public ?int $maxFuzzyLevel = null;
    
    /**
     * Minimum fuzziness level to be used.
     * 
     * @var ?int $minFuzzyLevel
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=minFuzzyLevel')]
    public ?int $minFuzzyLevel = null;
    
    /**
     * Starting offset of the returned results within the full result set.
     * 
     * @var ?int $ofs
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ofs')]
    public ?int $ofs = null;
    
    /**
     * If radius and position are set, the results will be constrained to the defined area. The radius parameter is specified in meters.
     * 
     * @var ?int $radius
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=radius')]
    public ?int $radius = null;
    
    /**
     * Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon.
     * 
     * @var ?string $topLeft
     * @deprecated this field will be removed in a future release, please migrate away from it as soon as possible
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=topLeft')]
    public ?string $topLeft = null;
    
    /**
     * Service version number. The current value is 2.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=versionNumber')]
    public \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber;
    
    /**
     * Geopolitical View.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ViewEnum $view
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=view')]
    public ?\OpenAPI\OpenAPI\Models\Shared\ViewEnum $view = null;
    
	public function __construct()
	{
		$this->btmRight = null;
		$this->countrySet = null;
		$this->ext = \OpenAPI\OpenAPI\Models\Shared\ExtEnum::JSON;
		$this->extendedPostalCodesFor = null;
		$this->idxSet = null;
		$this->language = null;
		$this->lat = 0;
		$this->limit = null;
		$this->lon = 0;
		$this->maxFuzzyLevel = null;
		$this->minFuzzyLevel = null;
		$this->ofs = null;
		$this->radius = null;
		$this->topLeft = null;
		$this->versionNumber = \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum::TWO;
		$this->view = null;
	}
}
