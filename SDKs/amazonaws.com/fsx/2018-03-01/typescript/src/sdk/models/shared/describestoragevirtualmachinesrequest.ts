/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StorageVirtualMachineFilter } from "./storagevirtualmachinefilter";
import { Expose, Type } from "class-transformer";

export class DescribeStorageVirtualMachinesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: StorageVirtualMachineFilter })
  @Expose({ name: "Filters" })
  @Type(() => StorageVirtualMachineFilter)
  filters?: StorageVirtualMachineFilter[];

  /**
   * The maximum number of resources to return in the response. This value must be an integer greater than zero.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  /**
   * (Optional) Opaque pagination token returned from a previous operation (String). If present, this token indicates from what point you can continue processing the request, where the previous <code>NextToken</code> value left off.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StorageVirtualMachineIds" })
  storageVirtualMachineIds?: string[];
}
