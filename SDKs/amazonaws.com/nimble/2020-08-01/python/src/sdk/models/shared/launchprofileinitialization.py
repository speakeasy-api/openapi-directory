"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import launchprofileinitializationactivedirectory as shared_launchprofileinitializationactivedirectory
from ..shared import launchprofileinitializationscript as shared_launchprofileinitializationscript
from ..shared import launchprofileplatform_enum as shared_launchprofileplatform_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LaunchProfileInitialization:
    r"""<p>A launch profile initialization contains information required for a workstation or server to connect to a launch profile.</p> <p>This includes scripts, endpoints, security groups, subnets, and other configuration.</p>"""
    
    active_directory: Optional[shared_launchprofileinitializationactivedirectory.LaunchProfileInitializationActiveDirectory] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activeDirectory'), 'exclude': lambda f: f is None }})  
    ec2_security_group_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ec2SecurityGroupIds'), 'exclude': lambda f: f is None }})  
    launch_profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('launchProfileId'), 'exclude': lambda f: f is None }})  
    launch_profile_protocol_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('launchProfileProtocolVersion'), 'exclude': lambda f: f is None }})  
    launch_purpose: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('launchPurpose'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    platform: Optional[shared_launchprofileplatform_enum.LaunchProfilePlatformEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platform'), 'exclude': lambda f: f is None }})  
    system_initialization_scripts: Optional[list[shared_launchprofileinitializationscript.LaunchProfileInitializationScript]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('systemInitializationScripts'), 'exclude': lambda f: f is None }})  
    user_initialization_scripts: Optional[list[shared_launchprofileinitializationscript.LaunchProfileInitializationScript]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userInitializationScripts'), 'exclude': lambda f: f is None }})  
    