"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import policycompliancestatustype_enum as shared_policycompliancestatustype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EvaluationResult:
    r"""Describes the compliance status for the account. An account is considered noncompliant if it includes resources that are not protected by the specified policy or that don't comply with the policy."""
    
    compliance_status: Optional[shared_policycompliancestatustype_enum.PolicyComplianceStatusTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComplianceStatus'), 'exclude': lambda f: f is None }})  
    evaluation_limit_exceeded: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EvaluationLimitExceeded'), 'exclude': lambda f: f is None }})  
    violator_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ViolatorCount'), 'exclude': lambda f: f is None }})  
    