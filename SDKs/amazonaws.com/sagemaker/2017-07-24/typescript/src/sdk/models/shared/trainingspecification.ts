/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelSpecification } from "./channelspecification";
import { HyperParameterSpecification } from "./hyperparameterspecification";
import { HyperParameterTuningJobObjective } from "./hyperparametertuningjobobjective";
import { MetricDefinition } from "./metricdefinition";
import { TrainingInstanceTypeEnum } from "./traininginstancetypeenum";
import { Expose, Type } from "class-transformer";

/**
 * Defines how the algorithm is used for a training job.
 */
export class TrainingSpecification extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: MetricDefinition })
  @Expose({ name: "MetricDefinitions" })
  @Type(() => MetricDefinition)
  metricDefinitions?: MetricDefinition[];

  @SpeakeasyMetadata({ elemType: HyperParameterSpecification })
  @Expose({ name: "SupportedHyperParameters" })
  @Type(() => HyperParameterSpecification)
  supportedHyperParameters?: HyperParameterSpecification[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedTrainingInstanceTypes" })
  supportedTrainingInstanceTypes: TrainingInstanceTypeEnum[];

  @SpeakeasyMetadata({ elemType: HyperParameterTuningJobObjective })
  @Expose({ name: "SupportedTuningJobObjectiveMetrics" })
  @Type(() => HyperParameterTuningJobObjective)
  supportedTuningJobObjectiveMetrics?: HyperParameterTuningJobObjective[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportsDistributedTraining" })
  supportsDistributedTraining?: boolean;

  @SpeakeasyMetadata({ elemType: ChannelSpecification })
  @Expose({ name: "TrainingChannels" })
  @Type(() => ChannelSpecification)
  trainingChannels: ChannelSpecification[];

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingImage" })
  trainingImage: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingImageDigest" })
  trainingImageDigest?: string;
}
