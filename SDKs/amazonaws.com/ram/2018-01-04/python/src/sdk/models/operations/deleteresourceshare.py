"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import deleteresourceshareresponse as shared_deleteresourceshareresponse
from typing import Any, Optional


@dataclasses.dataclass
class DeleteResourceShareRequest:
    
    resource_share_arn: str = dataclasses.field(metadata={'query_param': { 'field_name': 'resourceShareArn', 'style': 'form', 'explode': True }})
    r"""Specifies the <a href=\\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\\">Amazon Resoure Name (ARN)</a> of the resource share to delete."""  
    client_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'clientToken', 'style': 'form', 'explode': True }})
    r"""<p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\\"https://wikipedia.org/wiki/Universally_unique_identifier\\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p>"""  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class DeleteResourceShareResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    delete_resource_share_response: Optional[shared_deleteresourceshareresponse.DeleteResourceShareResponse] = dataclasses.field(default=None)
    r"""Success"""  
    idempotent_parameter_mismatch_exception: Optional[Any] = dataclasses.field(default=None)
    r"""IdempotentParameterMismatchException"""  
    invalid_client_token_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidClientTokenException"""  
    invalid_parameter_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidParameterException"""  
    invalid_state_transition_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidStateTransitionException"""  
    malformed_arn_exception: Optional[Any] = dataclasses.field(default=None)
    r"""MalformedArnException"""  
    operation_not_permitted_exception: Optional[Any] = dataclasses.field(default=None)
    r"""OperationNotPermittedException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    server_internal_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServerInternalException"""  
    service_unavailable_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceUnavailableException"""  
    unknown_resource_exception: Optional[Any] = dataclasses.field(default=None)
    r"""UnknownResourceException"""  
    