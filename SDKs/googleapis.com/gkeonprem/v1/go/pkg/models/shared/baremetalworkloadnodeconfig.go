// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BareMetalWorkloadNodeConfigContainerRuntimeEnum - Specifies which container runtime will be used.
type BareMetalWorkloadNodeConfigContainerRuntimeEnum string

const (
	BareMetalWorkloadNodeConfigContainerRuntimeEnumContainerRuntimeUnspecified BareMetalWorkloadNodeConfigContainerRuntimeEnum = "CONTAINER_RUNTIME_UNSPECIFIED"
	BareMetalWorkloadNodeConfigContainerRuntimeEnumContainerd                  BareMetalWorkloadNodeConfigContainerRuntimeEnum = "CONTAINERD"
)

func (e BareMetalWorkloadNodeConfigContainerRuntimeEnum) ToPointer() *BareMetalWorkloadNodeConfigContainerRuntimeEnum {
	return &e
}

func (e *BareMetalWorkloadNodeConfigContainerRuntimeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONTAINER_RUNTIME_UNSPECIFIED":
		fallthrough
	case "CONTAINERD":
		*e = BareMetalWorkloadNodeConfigContainerRuntimeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BareMetalWorkloadNodeConfigContainerRuntimeEnum: %v", v)
	}
}

// BareMetalWorkloadNodeConfig - Specifies the workload node configurations.
type BareMetalWorkloadNodeConfig struct {
	// Specifies which container runtime will be used.
	ContainerRuntime *BareMetalWorkloadNodeConfigContainerRuntimeEnum `json:"containerRuntime,omitempty"`
	// The maximum number of pods a node can run. The size of the CIDR range assigned to the node will be derived from this parameter.
	MaxPodsPerNode *string `json:"maxPodsPerNode,omitempty"`
}
