"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inputlogevent as shared_inputlogevent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutLogEventsRequest:
    
    log_events: list[shared_inputlogevent.InputLogEvent] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logEvents') }})  
    log_group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logGroupName') }})  
    log_stream_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logStreamName') }})  
    sequence_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sequenceToken'), 'exclude': lambda f: f is None }})  
    