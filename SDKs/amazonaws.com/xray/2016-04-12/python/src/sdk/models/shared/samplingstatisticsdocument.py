"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SamplingStatisticsDocument:
    r"""Request sampling results for a single rule from a service. Results are for the last 10 seconds unless the service has been assigned a longer reporting interval after a previous call to <a href=\\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html\\">GetSamplingTargets</a>."""
    
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientID') }})  
    request_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequestCount') }})  
    rule_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RuleName') }})  
    sampled_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SampledCount') }})  
    timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Timestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    borrow_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BorrowCount'), 'exclude': lambda f: f is None }})  
    