/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateShareUploadChannelRequest - Request model for creating an upload channel
 */
public class CreateShareUploadChannelRequest {
    /**
     * &amp;#128640; Since v4.15.0
     * 
     * Upload direct to S3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directS3Upload")
    public Boolean directS3Upload;
    public CreateShareUploadChannelRequest withDirectS3Upload(Boolean directS3Upload) {
        this.directS3Upload = directS3Upload;
        return this;
    }
    
    /**
     * File name
     */
    @JsonProperty("name")
    public String name;
    public CreateShareUploadChannelRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Password
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public CreateShareUploadChannelRequest withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * File size in byte
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;
    public CreateShareUploadChannelRequest withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.22.0
     * 
     * Time the node was created on external file system
     * 
     * (default: current server datetime in UTC format)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestampCreation")
    public OffsetDateTime timestampCreation;
    public CreateShareUploadChannelRequest withTimestampCreation(OffsetDateTime timestampCreation) {
        this.timestampCreation = timestampCreation;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.22.0
     * 
     * Time the content of a node was last modified on external file system
     * 
     * (default: current server datetime in UTC format)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestampModification")
    public OffsetDateTime timestampModification;
    public CreateShareUploadChannelRequest withTimestampModification(OffsetDateTime timestampModification) {
        this.timestampModification = timestampModification;
        return this;
    }
    
}
