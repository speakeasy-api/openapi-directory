/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AddCoupons200ApplicationJSONItemsPriceDefinition - Price information for all units of a specific item.
 */
public class AddCoupons200ApplicationJSONItemsPriceDefinition {
    /**
     * Item's calculated unitary selling price in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("calculatedSellingPrice")
    public Long calculatedSellingPrice;

    public AddCoupons200ApplicationJSONItemsPriceDefinition withCalculatedSellingPrice(Long calculatedSellingPrice) {
        this.calculatedSellingPrice = calculatedSellingPrice;
        return this;
    }
    
    /**
     * Array of objects, each containing value (in cents) and quantity for the different rounding instances that can be combined to form the correctly rounded total.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellingPrices")
    public AddCoupons200ApplicationJSONItemsPriceDefinitionSellingPrices[] sellingPrices;

    public AddCoupons200ApplicationJSONItemsPriceDefinition withSellingPrices(AddCoupons200ApplicationJSONItemsPriceDefinitionSellingPrices[] sellingPrices) {
        this.sellingPrices = sellingPrices;
        return this;
    }
    
    /**
     * Total value for all units of the item in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Long total;

    public AddCoupons200ApplicationJSONItemsPriceDefinition withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    public AddCoupons200ApplicationJSONItemsPriceDefinition(){}
}
