/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Sfx - SFX metadata
 */
public class Sfx {
    /**
     * Date this sound effect was added to the Shutterstock library
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("added_date")
    public LocalDate addedDate;

    public Sfx withAddedDate(LocalDate addedDate) {
        this.addedDate = addedDate;
        return this;
    }
    
    /**
     * Affiliate referral link; appears only for registered affiliate partners
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("affiliate_url")
    public String affiliateUrl;

    public Sfx withAffiliateUrl(String affiliateUrl) {
        this.affiliateUrl = affiliateUrl;
        return this;
    }
    
    /**
     * Artist of the sound effect
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("artist")
    public String artist;

    public Sfx withArtist(String artist) {
        this.artist = artist;
        return this;
    }
    
    /**
     * Files that are available as part of an sound effect asset
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assets")
    public SFXAssets assets;

    public Sfx withAssets(SFXAssets assets) {
        this.assets = assets;
        return this;
    }
    
    /**
     * Information about a contributor
     */
    @JsonProperty("contributor")
    public Contributor contributor;

    public Sfx withContributor(Contributor contributor) {
        this.contributor = contributor;
        return this;
    }
    
    /**
     * Description of this sound effect
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Sfx withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Duration of this sound effect in seconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Double duration;

    public Sfx withDuration(Double duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Shutterstock ID of this sound effect
     */
    @JsonProperty("id")
    public String id;

    public Sfx withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * List of all keywords for this sound effect
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keywords")
    public String[] keywords;

    public Sfx withKeywords(String[] keywords) {
        this.keywords = keywords;
        return this;
    }
    
    /**
     * Media type of this track; should always be "sfx"
     */
    @JsonProperty("media_type")
    public String mediaType;

    public Sfx withMediaType(String mediaType) {
        this.mediaType = mediaType;
        return this;
    }
    
    /**
     * List of all releases of this sound effect
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("releases")
    public String[] releases;

    public Sfx withReleases(String[] releases) {
        this.releases = releases;
        return this;
    }
    
    /**
     * Title of this sound effect
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public Sfx withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Time this sound effect was last updated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_time")
    public OffsetDateTime updatedTime;

    public Sfx withUpdatedTime(OffsetDateTime updatedTime) {
        this.updatedTime = updatedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public Sfx withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public Sfx(@JsonProperty("contributor") Contributor contributor, @JsonProperty("id") String id, @JsonProperty("media_type") String mediaType) {
        this.contributor = contributor;
        this.id = id;
        this.mediaType = mediaType;
  }
}
