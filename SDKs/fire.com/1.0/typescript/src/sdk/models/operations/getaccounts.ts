/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The three letter code for the currency - either `EUR` or `GBP`.
 */
export enum GetAccountsAccountsAccountCurrencyCodeEnum {
  Eur = "EUR",
  Gbp = "GBP",
}

/**
 * The currency.
 */
export class GetAccountsAccountsAccountCurrency extends SpeakeasyBase {
  /**
   * The three letter code for the currency - either `EUR` or `GBP`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: GetAccountsAccountsAccountCurrencyCodeEnum;

  /**
   * The name of the currency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}

/**
 * Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.
 */
export enum GetAccountsAccountsAccountStatusEnum {
  Live = "LIVE",
  BrexitMigrated = "BREXIT_MIGRATED",
}

export class GetAccountsAccountsAccount extends SpeakeasyBase {
  /**
   * the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  /**
   * the BIC of the account (provided if currency is EUR).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cbic" })
  cbic?: string;

  /**
   * the Account Number of the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ccan" })
  ccan?: string;

  /**
   * the IBAN of the account (provided if currency is EUR).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ciban" })
  ciban?: string;

  /**
   * the Sort Code of the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cnsc" })
  cnsc?: string;

  /**
   * Internal Use
   */
  @SpeakeasyMetadata()
  @Expose({ name: "colour" })
  colour?: string;

  /**
   * The currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  @Type(() => GetAccountsAccountsAccountCurrency)
  currency?: GetAccountsAccountsAccountCurrency;

  /**
   * true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultAccount" })
  defaultAccount?: boolean;

  /**
   * Whether or not direct debits can be set up on this account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "directDebitsAllowed" })
  directDebitsAllowed?: boolean;

  /**
   * Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fopOnly" })
  fopOnly?: boolean;

  /**
   * identifier for the fire.com account (assigned by fire.com)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ican" })
  ican?: number;

  /**
   * the name the user gives to the account to help them identify it.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetAccountsAccountsAccountStatusEnum;
}

/**
 * An array of account objects.
 */
export class GetAccountsAccounts extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetAccountsAccountsAccount })
  @Expose({ name: "accounts" })
  @Type(() => GetAccountsAccountsAccount)
  accounts?: GetAccountsAccountsAccount[];
}

export class GetAccountsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * An array of account objects.
   */
  @SpeakeasyMetadata()
  accounts?: GetAccountsAccounts;
}
