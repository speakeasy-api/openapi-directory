"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inventoryfiltercriteria as shared_inventoryfiltercriteria
from ..shared import uploadsummary as shared_uploadsummary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InventoryTask:
    r"""Success"""
    
    completion_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completionDate'), 'exclude': lambda f: f is None }})
    r"""The timestamp when the task <strong>status</strong> went into the <code>COMPLETED</code>, <code>COMPLETED_WITH_ERROR</code>, or <code>PARTIALLY_PROCESSED</code> state. This field is only returned if the status is one of the three completed values."""  
    creation_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDate'), 'exclude': lambda f: f is None }})
    r"""The date the task was created."""  
    detail_href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detailHref'), 'exclude': lambda f: f is None }})
    r"""The path to the call URI used to retrieve the task. This field points to the <strong>getInventoryTask</strong> URI."""  
    feed_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feedType'), 'exclude': lambda f: f is None }})
    r"""The feed type associated with the inventory task."""  
    filter_criteria: Optional[shared_inventoryfiltercriteria.InventoryFilterCriteria] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filterCriteria'), 'exclude': lambda f: f is None }})
    r"""The container for the filter fields. This container is used to set the filter criteria for the order report. A seller can retrieve listings for a specified format."""  
    schema_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemaVersion'), 'exclude': lambda f: f is None }})
    r"""The schema version number associated with the task."""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the task. Users must wait until status is complete before moving on to the next step (such as uploading/downloading a file). For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/feed/types/api:FeedStatusEnum'>eBay API documentation</a>"""  
    task_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskId'), 'exclude': lambda f: f is None }})
    r"""The ID of the task. This ID is generated when the task was created by the <strong>createInventoryTask</strong> method."""  
    upload_summary: Optional[shared_uploadsummary.UploadSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uploadSummary'), 'exclude': lambda f: f is None }})
    r"""This container provides summary information on an upload feed (not applicable for download feed types)."""  
    