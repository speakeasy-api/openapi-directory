// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateUserXAmzTargetEnum
type CreateUserXAmzTargetEnum string

const (
	CreateUserXAmzTargetEnumAmazonMemoryDbCreateUser CreateUserXAmzTargetEnum = "AmazonMemoryDB.CreateUser"
)

func (e *CreateUserXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonMemoryDB.CreateUser":
		*e = CreateUserXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateUserXAmzTargetEnum: %s", s)
	}
}

type CreateUserHeaders struct {
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateUserXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateUserRequest struct {
	Headers CreateUserHeaders
	Request shared.CreateUserRequest `request:"mediaType=application/json"`
}

type CreateUserResponse struct {
	ContentType string
	// Success
	CreateUserResponse *shared.CreateUserResponse
	// DuplicateUserNameFault
	DuplicateUserNameFault interface{}
	// InvalidParameterCombinationException
	InvalidParameterCombinationException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// TagQuotaPerResourceExceeded
	TagQuotaPerResourceExceeded interface{}
	// UserAlreadyExistsFault
	UserAlreadyExistsFault interface{}
	// UserQuotaExceededFault
	UserQuotaExceededFault interface{}
}
