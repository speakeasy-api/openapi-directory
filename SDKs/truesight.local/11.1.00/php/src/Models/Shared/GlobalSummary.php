<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GlobalSummary - Successful operation
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GlobalSummary
{
    /**
     * The CO<sub>2</sub> emissions for all devices. This value can be updated by users with sufficient permissions.
     * 
     * @var ?float $co2Emission
     */
	
    public ?float $co2Emission = null;
    
    /**
     * The unit in which the CO<sub>2</sub> emission is being expressed.
     * 
     * @var ?string $co2EmissionUnit
     */
	
    public ?string $co2EmissionUnit = null;
    
    /**
     * If <em>true</em>, indicates that you do not have sufficient rights to update the global settings. However, you may still have sufficient rights to update a specific group's setting.
     * 
     * @var ?bool $editable
     */
	
    public ?bool $editable = null;
    
    /**
     * The electricity rate for all devices. This value can be updated by users with sufficient permissions.
     * 
     * @var ?float $energyCost
     */
	
    public ?float $energyCost = null;
    
    /**
     * The unit in which the electricity rate is being expressed.
     * 
     * @var ?string $energyCostUnit
     */
	
    public ?string $energyCostUnit = null;
    
    /**
     * Regular expression used to filter the groups for which the power consumption will be reported.
     * 
     * @var ?string $groupNameFilter
     */
	
    public ?string $groupNameFilter = null;
    
    /**
     * The lowest heating margin among the heating margins of all the devices.<br><u>Note</u>:This field will only be present if a value could be found.
     * 
     * @var ?float $heatingMargin
     */
	
    public ?float $heatingMargin = null;
    
    /**
     * The percentage of devices whose heating margin could be found.<br><u>Note</u>:This field will only be present if a value could be found.
     * 
     * @var ?float $heatingMarginCoverage
     */
	
    public ?float $heatingMarginCoverage = null;
    
    /**
     * The name of the device having the lowest heating margin.<br><u>Note</u>:This field will only be present if a value could be found.
     * 
     * @var ?string $heatingMarginDeviceName
     */
	
    public ?string $heatingMarginDeviceName = null;
    
    /**
     * The link to the details of the device having the lowest heating margin.<br><u>Note</u>:This field will only be present if a value could be found.
     * 
     * @var ?string $heatingMarginDeviceUrl
     */
	
    public ?string $heatingMarginDeviceUrl = null;
    
    /**
     * The unit in which the heating margin is being expressed.
     * 
     * @var ?string $heatingMarginUnit
     */
	
    public ?string $heatingMarginUnit = null;
    
    /**
     * The ID of the global summary (this ID will always be "global").
     * 
     * @var ?string $id
     */
	
    public ?string $id = null;
    
    /**
     * The total power consumption of all the devices.
     * 
     * @var ?float $totalPowerConsumption
     */
	
    public ?float $totalPowerConsumption = null;
    
    /**
     * The unit in which the total power consumption is being expressed.
     * 
     * @var ?string $totalPowerConsumptionUnit
     */
	
    public ?string $totalPowerConsumptionUnit = null;
    
    /**
     * The data collection time (as an Epoch time, in seconds).
     * 
     * @var ?int $updateTimestamp
     */
	
    public ?int $updateTimestamp = null;
    
	public function __construct()
	{
		$this->co2Emission = null;
		$this->co2EmissionUnit = null;
		$this->editable = null;
		$this->energyCost = null;
		$this->energyCostUnit = null;
		$this->groupNameFilter = null;
		$this->heatingMargin = null;
		$this->heatingMarginCoverage = null;
		$this->heatingMarginDeviceName = null;
		$this->heatingMarginDeviceUrl = null;
		$this->heatingMarginUnit = null;
		$this->id = null;
		$this->totalPowerConsumption = null;
		$this->totalPowerConsumptionUnit = null;
		$this->updateTimestamp = null;
	}
}
