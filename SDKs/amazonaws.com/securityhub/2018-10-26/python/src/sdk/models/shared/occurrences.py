"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cell as shared_cell
from ..shared import page as shared_page
from ..shared import range as shared_range
from ..shared import record as shared_record
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Occurrences:
    r"""The detected occurrences of sensitive data."""
    
    cells: Optional[list[shared_cell.Cell]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Cells'), 'exclude': lambda f: f is None }})  
    line_ranges: Optional[list[shared_range.Range]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LineRanges'), 'exclude': lambda f: f is None }})  
    offset_ranges: Optional[list[shared_range.Range]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OffsetRanges'), 'exclude': lambda f: f is None }})  
    pages: Optional[list[shared_page.Page]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Pages'), 'exclude': lambda f: f is None }})  
    records: Optional[list[shared_record.Record]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Records'), 'exclude': lambda f: f is None }})  
    