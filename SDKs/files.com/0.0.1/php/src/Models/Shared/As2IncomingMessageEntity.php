<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * As2IncomingMessageEntity - List As2 Incoming Messages
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class As2IncomingMessageEntity
{
    /**
     * JSON Structure of the activity log.
     * 
     * @var ?string $activityLog
     */
	#[\JMS\Serializer\Annotation\SerializedName('activity_log')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $activityLog = null;
    
    /**
     * AS2 FROM header of message
     * 
     * @var ?string $as2From
     */
	#[\JMS\Serializer\Annotation\SerializedName('as2_from')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $as2From = null;
    
    /**
     * Id of the AS2 Partner associated with this message.
     * 
     * @var ?int $as2PartnerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('as2_partner_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $as2PartnerId = null;
    
    /**
     * Id of the AS2 Station associated with this message.
     * 
     * @var ?int $as2StationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('as2_station_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $as2StationId = null;
    
    /**
     * AS2 TO header of message
     * 
     * @var ?string $as2To
     */
	#[\JMS\Serializer\Annotation\SerializedName('as2_to')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $as2To = null;
    
    /**
     * Filename of the file being received.
     * 
     * @var ?string $attachmentFilename
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachment_filename')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $attachmentFilename = null;
    
    /**
     * Encrypted Payload Body Size
     * 
     * @var ?string $bodySize
     */
	#[\JMS\Serializer\Annotation\SerializedName('body_size')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bodySize = null;
    
    /**
     * Content Type header of the incoming message.
     * 
     * @var ?string $contentType
     */
	#[\JMS\Serializer\Annotation\SerializedName('content_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $contentType = null;
    
    /**
     * Message creation date/time
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * Date Header
     * 
     * @var ?string $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $date = null;
    
    /**
     * URL to download the encrypted signed smime that is to sent as AS2 body
     * 
     * @var ?string $encryptedUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('encrypted_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $encryptedUri = null;
    
    /**
     * Incoming Message Recipient(the Client Cert used to encrypt this message)'s serial in hex format.
     * 
     * @var ?string $hexRecipientSerial
     */
	#[\JMS\Serializer\Annotation\SerializedName('hex_recipient_serial')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hexRecipientSerial = null;
    
    /**
     * HTTP Headers sent with this message.
     * 
     * @var ?array<string, mixed> $httpHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('http_headers')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $httpHeaders = null;
    
    /**
     * HTTP Response Code sent for this message
     * 
     * @var ?string $httpResponseCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('http_response_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $httpResponseCode = null;
    
    /**
     * HTTP Headers sent for this message.
     * 
     * @var ?array<string, mixed> $httpResponseHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('http_response_headers')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $httpResponseHeaders = null;
    
    /**
     * Id of the AS2 Partner.
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * IP Address of the Sender
     * 
     * @var ?string $ip
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ip = null;
    
    /**
     * URL to download the http response body
     * 
     * @var ?string $mdnResponseUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('mdn_response_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mdnResponseUri = null;
    
    /**
     * Message decrypted successfully?
     * 
     * @var ?bool $messageDecrypted
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_decrypted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $messageDecrypted = null;
    
    /**
     * AS2 Message Id
     * 
     * @var ?string $messageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $messageId = null;
    
    /**
     * MDN returned?
     * 
     * @var ?bool $messageMdnReturned
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_mdn_returned')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $messageMdnReturned = null;
    
    /**
     * Message processed successfully?
     * 
     * @var ?bool $messageProcessingSuccess
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_processing_success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $messageProcessingSuccess = null;
    
    /**
     * Message body received?
     * 
     * @var ?bool $messageReceived
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_received')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $messageReceived = null;
    
    /**
     * Message signature verified?
     * 
     * @var ?bool $messageSignatureVerified
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_signature_verified')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $messageSignatureVerified = null;
    
    /**
     * AS2 Message Integrity Check
     * 
     * @var ?string $mic
     */
	#[\JMS\Serializer\Annotation\SerializedName('mic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mic = null;
    
    /**
     * AS2 Message Integrity Check Algorithm Used
     * 
     * @var ?string $micAlgo
     */
	#[\JMS\Serializer\Annotation\SerializedName('mic_algo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $micAlgo = null;
    
    /**
     * Result of processing.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\As2IncomingMessageEntityProcessingResultEnum $processingResult
     */
	#[\JMS\Serializer\Annotation\SerializedName('processing_result')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\As2IncomingMessageEntityProcessingResultEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?As2IncomingMessageEntityProcessingResultEnum $processingResult = null;
    
    /**
     * Result of processing description.
     * 
     * @var ?string $processingResultDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('processing_result_description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $processingResultDescription = null;
    
    /**
     * URL to download the original file contents
     * 
     * @var ?string $rawUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('raw_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rawUri = null;
    
    /**
     * Incoming Message Recipient(the Client Cert used to encrypt this message)'s issuer
     * 
     * @var ?string $recipientIssuer
     */
	#[\JMS\Serializer\Annotation\SerializedName('recipient_issuer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recipientIssuer = null;
    
    /**
     * Incoming Message Recipient(the Client Cert used to encrypt this message)'s serial
     * 
     * @var ?string $recipientSerial
     */
	#[\JMS\Serializer\Annotation\SerializedName('recipient_serial')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recipientSerial = null;
    
    /**
     * URL to download the file contents as smime with signature
     * 
     * @var ?string $smimeSignedUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('smime_signed_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $smimeSignedUri = null;
    
    /**
     * URL to download the file contents encoded as smime
     * 
     * @var ?string $smimeUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('smime_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $smimeUri = null;
    
    /**
     * AS2 Subject Header
     * 
     * @var ?string $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subject = null;
    
    /**
     * UUID assigned to this message.
     * 
     * @var ?string $uuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uuid = null;
    
	public function __construct()
	{
		$this->activityLog = null;
		$this->as2From = null;
		$this->as2PartnerId = null;
		$this->as2StationId = null;
		$this->as2To = null;
		$this->attachmentFilename = null;
		$this->bodySize = null;
		$this->contentType = null;
		$this->createdAt = null;
		$this->date = null;
		$this->encryptedUri = null;
		$this->hexRecipientSerial = null;
		$this->httpHeaders = null;
		$this->httpResponseCode = null;
		$this->httpResponseHeaders = null;
		$this->id = null;
		$this->ip = null;
		$this->mdnResponseUri = null;
		$this->messageDecrypted = null;
		$this->messageId = null;
		$this->messageMdnReturned = null;
		$this->messageProcessingSuccess = null;
		$this->messageReceived = null;
		$this->messageSignatureVerified = null;
		$this->mic = null;
		$this->micAlgo = null;
		$this->processingResult = null;
		$this->processingResultDescription = null;
		$this->rawUri = null;
		$this->recipientIssuer = null;
		$this->recipientSerial = null;
		$this->smimeSignedUri = null;
		$this->smimeUri = null;
		$this->subject = null;
		$this->uuid = null;
	}
}
