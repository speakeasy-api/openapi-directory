/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ImportContextBakImportOptionsEncryptionOptions extends SpeakeasyBase {
  /**
   * Path to the Certificate (.cer) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certPath" })
  certPath?: string;

  /**
   * Password that encrypts the private key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pvkPassword" })
  pvkPassword?: string;

  /**
   * Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pvkPath" })
  pvkPath?: string;
}

/**
 * Import parameters specific to SQL Server .BAK files
 */
export class ImportContextBakImportOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionOptions" })
  @Type(() => ImportContextBakImportOptionsEncryptionOptions)
  encryptionOptions?: ImportContextBakImportOptionsEncryptionOptions;

  /**
   * Whether or not the backup set being restored is striped. Applies only to Cloud SQL for SQL Server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "striped" })
  striped?: boolean;
}

/**
 * Options for importing data as CSV.
 */
export class ImportContextCsvImportOptions extends SpeakeasyBase {
  /**
   * The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columns" })
  columns?: string[];

  /**
   * Specifies the character that should appear before a data character that needs to be escaped.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "escapeCharacter" })
  escapeCharacter?: string;

  /**
   * Specifies the character that separates columns within each row (line) of the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldsTerminatedBy" })
  fieldsTerminatedBy?: string;

  /**
   * This is used to separate lines. If a line does not contain all fields, the rest of the columns are set to their default values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linesTerminatedBy" })
  linesTerminatedBy?: string;

  /**
   * Specifies the quoting character to be used when a data value is quoted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quoteCharacter" })
  quoteCharacter?: string;

  /**
   * The table to which CSV data is imported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "table" })
  table?: string;
}

/**
 * The file type for the specified uri. * `SQL`: The file contains SQL statements. * `CSV`: The file contains CSV data. * `BAK`: The file contains backup data for a SQL Server instance.
 */
export enum ImportContextFileTypeEnum {
  SqlFileTypeUnspecified = "SQL_FILE_TYPE_UNSPECIFIED",
  Sql = "SQL",
  Csv = "CSV",
  Bak = "BAK",
}

/**
 * Database instance import context.
 */
export class ImportContext extends SpeakeasyBase {
  /**
   * Import parameters specific to SQL Server .BAK files
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bakImportOptions" })
  @Type(() => ImportContextBakImportOptions)
  bakImportOptions?: ImportContextBakImportOptions;

  /**
   * Options for importing data as CSV.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "csvImportOptions" })
  @Type(() => ImportContextCsvImportOptions)
  csvImportOptions?: ImportContextCsvImportOptions;

  /**
   * The target database for the import. If `fileType` is `SQL`, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If `fileType` is `CSV`, one database must be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "database" })
  database?: string;

  /**
   * The file type for the specified uri. * `SQL`: The file contains SQL statements. * `CSV`: The file contains CSV data. * `BAK`: The file contains backup data for a SQL Server instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileType" })
  fileType?: ImportContextFileTypeEnum;

  /**
   * The PostgreSQL user for this import operation. PostgreSQL instances only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "importUser" })
  importUser?: string;

  /**
   * This is always `sql#importContext`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Path to the import file in Cloud Storage, in the form `gs://bucketName/fileName`. Compressed gzip files (.gz) are supported when `fileType` is `SQL`. The instance must have write permissions to the bucket and read access to the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}
