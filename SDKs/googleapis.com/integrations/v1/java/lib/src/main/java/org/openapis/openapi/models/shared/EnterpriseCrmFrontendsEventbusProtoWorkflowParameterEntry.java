/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry {
    /**
     * Attributes are additional options that can be associated with each event property. For more information, see
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public EnterpriseCrmEventbusProtoAttributes attributes;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withAttributes(EnterpriseCrmEventbusProtoAttributes attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * Child parameters nested within this parameter. This field only applies to protobuf parameters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("children")
    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry[] children;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withChildren(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry[] children) {
        this.children = children;
        return this;
    }
    
    /**
     * The data type of the parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataType")
    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum dataType;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withDataType(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum dataType) {
        this.dataType = dataType;
        return this;
    }
    
    /**
     * To support various types of parameter values. Next available id: 14
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultValue")
    public EnterpriseCrmFrontendsEventbusProtoParameterValueType defaultValue;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withDefaultValue(EnterpriseCrmFrontendsEventbusProtoParameterValueType defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }
    
    /**
     * Specifies the input/output type for the parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inOutType")
    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum inOutType;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withInOutType(EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum inOutType) {
        this.inOutType = inOutType;
        return this;
    }
    
    /**
     * Whether this parameter is a transient parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isTransient")
    public Boolean isTransient;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withIsTransient(Boolean isTransient) {
        this.isTransient = isTransient;
        return this;
    }
    
    /**
     * This schema will be used to validate runtime JSON-typed values of this parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jsonSchema")
    public String jsonSchema;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withJsonSchema(String jsonSchema) {
        this.jsonSchema = jsonSchema;
        return this;
    }
    
    /**
     * Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Represents a node identifier (type + id). Next highest id: 3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producedBy")
    public EnterpriseCrmEventbusProtoNodeIdentifier producedBy;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withProducedBy(EnterpriseCrmEventbusProtoNodeIdentifier producedBy) {
        this.producedBy = producedBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producer")
    public String producer;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withProducer(String producer) {
        this.producer = producer;
        return this;
    }
    
    /**
     * The name of the protobuf type if the parameter has a protobuf data type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protoDefName")
    public String protoDefName;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withProtoDefName(String protoDefName) {
        this.protoDefName = protoDefName;
        return this;
    }
    
    /**
     * If the data type is of type proto or proto array, this field needs to be populated with the fully qualified proto name. This message, for example, would be "enterprise.crm.frontends.eventbus.proto.WorkflowParameterEntry".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protoDefPath")
    public String protoDefPath;

    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry withProtoDefPath(String protoDefPath) {
        this.protoDefPath = protoDefPath;
        return this;
    }
    
    public EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry(){}
}
