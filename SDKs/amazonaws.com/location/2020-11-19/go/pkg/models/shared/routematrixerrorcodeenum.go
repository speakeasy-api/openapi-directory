// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RouteMatrixErrorCodeEnum string

const (
	RouteMatrixErrorCodeEnumRouteNotFound               RouteMatrixErrorCodeEnum = "RouteNotFound"
	RouteMatrixErrorCodeEnumRouteTooLong                RouteMatrixErrorCodeEnum = "RouteTooLong"
	RouteMatrixErrorCodeEnumPositionsNotFound           RouteMatrixErrorCodeEnum = "PositionsNotFound"
	RouteMatrixErrorCodeEnumDestinationPositionNotFound RouteMatrixErrorCodeEnum = "DestinationPositionNotFound"
	RouteMatrixErrorCodeEnumDeparturePositionNotFound   RouteMatrixErrorCodeEnum = "DeparturePositionNotFound"
	RouteMatrixErrorCodeEnumOtherValidationError        RouteMatrixErrorCodeEnum = "OtherValidationError"
)

func (e RouteMatrixErrorCodeEnum) ToPointer() *RouteMatrixErrorCodeEnum {
	return &e
}

func (e *RouteMatrixErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RouteNotFound":
		fallthrough
	case "RouteTooLong":
		fallthrough
	case "PositionsNotFound":
		fallthrough
	case "DestinationPositionNotFound":
		fallthrough
	case "DeparturePositionNotFound":
		fallthrough
	case "OtherValidationError":
		*e = RouteMatrixErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RouteMatrixErrorCodeEnum: %v", v)
	}
}
