"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinationConfiguration = void 0;
var utils_1 = require("../../../internal/utils");
var cloudwatchlogsdestinationconfiguration_1 = require("./cloudwatchlogsdestinationconfiguration");
var firehosedestinationconfiguration_1 = require("./firehosedestinationconfiguration");
var s3destinationconfiguration_1 = require("./s3destinationconfiguration");
var class_transformer_1 = require("class-transformer");
/**
 * A complex type that describes a location where chat logs will be stored. Each member represents the configuration of one log destination. For logging, you define only one type of destination (for CloudWatch Logs, Kinesis Firehose, or S3).
 */
var DestinationConfiguration = /** @class */ (function (_super) {
    __extends(DestinationConfiguration, _super);
    function DestinationConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloudWatchLogs" }),
        (0, class_transformer_1.Type)(function () { return cloudwatchlogsdestinationconfiguration_1.CloudWatchLogsDestinationConfiguration; }),
        __metadata("design:type", cloudwatchlogsdestinationconfiguration_1.CloudWatchLogsDestinationConfiguration)
    ], DestinationConfiguration.prototype, "cloudWatchLogs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "firehose" }),
        (0, class_transformer_1.Type)(function () { return firehosedestinationconfiguration_1.FirehoseDestinationConfiguration; }),
        __metadata("design:type", firehosedestinationconfiguration_1.FirehoseDestinationConfiguration)
    ], DestinationConfiguration.prototype, "firehose", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "s3" }),
        (0, class_transformer_1.Type)(function () { return s3destinationconfiguration_1.S3DestinationConfiguration; }),
        __metadata("design:type", s3destinationconfiguration_1.S3DestinationConfiguration)
    ], DestinationConfiguration.prototype, "s3", void 0);
    return DestinationConfiguration;
}(utils_1.SpeakeasyBase));
exports.DestinationConfiguration = DestinationConfiguration;
