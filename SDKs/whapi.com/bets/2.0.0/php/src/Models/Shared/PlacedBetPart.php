<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PlacedBetPart
{
    /**
     * Human-friendly description of the bet
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * When the odds are shown in vulgar fractions this is the denominator of the fraction. For example: 2 in 5/2
     * 
     * @var ?int $eachWayDen
     */
	#[\JMS\Serializer\Annotation\SerializedName('eachWayDen')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $eachWayDen = null;
    
    /**
     * When the odds are shown in vulgar fractions this is the numerator of the fraction. For example: 5 in 5/2
     * 
     * @var ?int $eachWayNum
     */
	#[\JMS\Serializer\Annotation\SerializedName('eachWayNum')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $eachWayNum = null;
    
    /**
     * The Each-way places available for the bet
     * 
     * @var ?int $eachWayPlaces
     */
	#[\JMS\Serializer\Annotation\SerializedName('eachWayPlaces')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $eachWayPlaces = null;
    
    /**
     * The description of the event
     * 
     * @var string $eventDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventDescription;
    
    /**
     * Unique identifier of the event
     * 
     * @var string $eventId
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventId;
    
    /**
     * The description of the market within an event
     * 
     * @var ?string $eventMarketDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventMarketDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventMarketDescription = null;
    
    /**
     * The description of type of the event
     * 
     * @var ?string $eventTypeDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTypeDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventTypeDescription = null;
    
    /**
     * Denotes if the bet is part of a handicap market. For example: -1 if the selection starts on -1 goals (in football)
     * 
     * @var ?float $handicap
     */
	#[\JMS\Serializer\Annotation\SerializedName('handicap')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $handicap = null;
    
    /**
     * The number of the bet
     * 
     * @var int $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $number;
    
    /**
     * When the odds are shown in vulgar fractions this is the denominator of the fraction. For example: 2 in 5/2
     * 
     * @var int $priceDen
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceDen')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $priceDen;
    
	#[\JMS\Serializer\Annotation\SerializedName('priceFormatted')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PriceFormatted')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PriceFormatted $priceFormatted = null;
    
    /**
     * When the odds are shown in vulgar fractions this is the numerator of the fraction. For example: 5 in 5/2
     * 
     * @var int $priceNum
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceNum')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $priceNum;
    
    /**
     * The price type chosen when the bet was placed. For example: L (Win)
     * 
     * @var string $priceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $priceType;
    
    /**
     * The outcome of the bet/event. Can be one of the following values: W - Won; L - Lost; V - Void; - Result not yet available
     * 
     * @var string $result
     */
	#[\JMS\Serializer\Annotation\SerializedName('result')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $result;
    
    /**
     * The official scale of deductions that apply when a runner is withdrawn
     * 
     * @var ?float $rule4Deductions
     */
	#[\JMS\Serializer\Annotation\SerializedName('rule4Deductions')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $rule4Deductions = null;
    
    /**
     * Unique identifier of the selection
     * 
     * @var ?string $selectionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selectionId = null;
    
    /**
     * Time the event will start. For example: 2013-01-30 11:01:01
     * 
     * @var string $startDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startDateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $startDateTime;
    
	public function __construct()
	{
		$this->description = "";
		$this->eachWayDen = null;
		$this->eachWayNum = null;
		$this->eachWayPlaces = null;
		$this->eventDescription = "";
		$this->eventId = "";
		$this->eventMarketDescription = null;
		$this->eventTypeDescription = null;
		$this->handicap = null;
		$this->number = 0;
		$this->priceDen = 0;
		$this->priceFormatted = null;
		$this->priceNum = 0;
		$this->priceType = "";
		$this->result = "";
		$this->rule4Deductions = null;
		$this->selectionId = null;
		$this->startDateTime = "";
	}
}
