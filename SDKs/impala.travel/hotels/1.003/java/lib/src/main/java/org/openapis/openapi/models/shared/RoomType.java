/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RoomType - Bookable category of bookable rooms within a hotel
 */
public class RoomType {
    @JsonProperty("amenities")
    public Amenity[] amenities;

    public RoomType withAmenities(Amenity[] amenities) {
        this.amenities = amenities;
        return this;
    }
    
    /**
     * Description
     */
    @JsonProperty("description")
    public String description;

    public RoomType withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Lists photos of this room type
     */
    @JsonProperty("images")
    public Image[] images;

    public RoomType withImages(Image[] images) {
        this.images = images;
        return this;
    }
    
    /**
     * Maximum number of adults that can occupy the room.
     */
    @JsonProperty("maxOccupancy")
    public Long maxOccupancy;

    public RoomType withMaxOccupancy(Long maxOccupancy) {
        this.maxOccupancy = maxOccupancy;
        return this;
    }
    
    /**
     * Name
     */
    @JsonProperty("name")
    public String name;

    public RoomType withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Bookable rates for this room type and the start and end dates of your availability search.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rates")
    public Rate[] rates;

    public RoomType withRates(Rate[] rates) {
        this.rates = rates;
        return this;
    }
    
    /**
     * Unique identifier of the room type within the Impala platform.
     */
    @JsonProperty("roomTypeId")
    public String roomTypeId;

    public RoomType withRoomTypeId(String roomTypeId) {
        this.roomTypeId = roomTypeId;
        return this;
    }
    
    public RoomType(@JsonProperty("amenities") Amenity[] amenities, @JsonProperty("description") String description, @JsonProperty("images") Image[] images, @JsonProperty("maxOccupancy") Long maxOccupancy, @JsonProperty("name") String name, @JsonProperty("roomTypeId") String roomTypeId) {
        this.amenities = amenities;
        this.description = description;
        this.images = images;
        this.maxOccupancy = maxOccupancy;
        this.name = name;
        this.roomTypeId = roomTypeId;
  }
}
