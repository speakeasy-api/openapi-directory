// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScimEnterpriseUserListSchemasEnum string

const (
	ScimEnterpriseUserListSchemasEnumUrnIetfParamsScimAPIMessages20ListResponse ScimEnterpriseUserListSchemasEnum = "urn:ietf:params:scim:api:messages:2.0:ListResponse"
)

func (e ScimEnterpriseUserListSchemasEnum) ToPointer() *ScimEnterpriseUserListSchemasEnum {
	return &e
}

func (e *ScimEnterpriseUserListSchemasEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "urn:ietf:params:scim:api:messages:2.0:ListResponse":
		*e = ScimEnterpriseUserListSchemasEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScimEnterpriseUserListSchemasEnum: %v", v)
	}
}

// ScimEnterpriseUserList - Success, either users were found or not found
type ScimEnterpriseUserList struct {
	// Information about each provisioned account.
	Resources []ScimEnterpriseUserResponse `json:"Resources"`
	// Number of objects per page
	ItemsPerPage int64 `json:"itemsPerPage"`
	// The URIs that are used to indicate the namespaces of the list SCIM schemas.
	Schemas []ScimEnterpriseUserListSchemasEnum `json:"schemas"`
	// A starting index for the returned page
	StartIndex int64 `json:"startIndex"`
	// Number of results found
	TotalResults int64 `json:"totalResults"`
}
