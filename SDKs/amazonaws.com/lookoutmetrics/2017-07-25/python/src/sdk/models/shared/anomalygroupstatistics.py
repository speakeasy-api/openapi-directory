"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import itemizedmetricstats as shared_itemizedmetricstats
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnomalyGroupStatistics:
    r"""Aggregated statistics for a group of anomalous metrics."""
    
    evaluation_start_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EvaluationStartDate'), 'exclude': lambda f: f is None }})  
    itemized_metric_stats_list: Optional[list[shared_itemizedmetricstats.ItemizedMetricStats]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ItemizedMetricStatsList'), 'exclude': lambda f: f is None }})  
    total_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalCount'), 'exclude': lambda f: f is None }})  
    