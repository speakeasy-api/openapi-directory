<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class FileActionBeginUploadRequestBody
{
    /**
     * Create parent directories if they do not exist?
     * 
     * @var ?bool $mkdirParents
     */
	#[SpeakeasyMetadata('multipartForm:name=mkdir_parents')]
    public ?bool $mkdirParents = null;
    
    /**
     * Part if uploading a part.
     * 
     * @var ?int $part
     */
	#[SpeakeasyMetadata('multipartForm:name=part')]
    public ?int $part = null;
    
    /**
     * How many parts to fetch?
     * 
     * @var ?int $parts
     */
	#[SpeakeasyMetadata('multipartForm:name=parts')]
    public ?int $parts = null;
    
	#[SpeakeasyMetadata('multipartForm:name=ref')]
    public ?string $ref = null;
    
    /**
     * File byte offset to restart from.
     * 
     * @var ?int $restart
     */
	#[SpeakeasyMetadata('multipartForm:name=restart')]
    public ?int $restart = null;
    
    /**
     * Total bytes of file being uploaded (include bytes being retained if appending/restarting).
     * 
     * @var ?int $size
     */
	#[SpeakeasyMetadata('multipartForm:name=size')]
    public ?int $size = null;
    
    /**
     * Allow file rename instead of overwrite?
     * 
     * @var ?bool $withRename
     */
	#[SpeakeasyMetadata('multipartForm:name=with_rename')]
    public ?bool $withRename = null;
    
	public function __construct()
	{
		$this->mkdirParents = null;
		$this->part = null;
		$this->parts = null;
		$this->ref = null;
		$this->restart = null;
		$this->size = null;
		$this->withRename = null;
	}
}
