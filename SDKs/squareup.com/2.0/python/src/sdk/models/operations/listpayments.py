"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import v1payment as shared_v1payment
from typing import Optional


@dataclasses.dataclass
class ListPaymentsSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListPaymentsRequest:
    
    location_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'location_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the location to list payments for. If you specify me, this endpoint returns payments aggregated from all of the business's locations."""  
    batch_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'batch_token', 'style': 'form', 'explode': True }})
    r"""A pagination cursor to retrieve the next set of results for your
    original query to the endpoint.
    """  
    begin_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'begin_time', 'style': 'form', 'explode': True }})
    r"""The beginning of the requested reporting period, in ISO 8601 format. If this value is before January 1, 2013 (2013-01-01T00:00:00Z), this endpoint returns an error. Default value: The current time minus one year."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_time', 'style': 'form', 'explode': True }})
    r"""The end of the requested reporting period, in ISO 8601 format. If this value is more than one year greater than begin_time, this endpoint returns an error. Default value: The current time."""  
    include_partial: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_partial', 'style': 'form', 'explode': True }})
    r"""Indicates whether or not to include partial payments in the response. Partial payments will have the tenders collected so far, but the itemizations will be empty until the payment is completed."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The maximum number of payments to return in a single response. This value cannot exceed 200."""  
    order: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""The order in which payments are listed in the response."""  
    

@dataclasses.dataclass
class ListPaymentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    v1_payments: Optional[list[shared_v1payment.V1Payment]] = dataclasses.field(default=None)
    r"""Success"""  
    