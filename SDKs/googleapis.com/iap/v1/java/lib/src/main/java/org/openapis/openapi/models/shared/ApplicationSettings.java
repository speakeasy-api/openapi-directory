/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApplicationSettings - Wrapper over application specific settings for IAP.
 */
public class ApplicationSettings {
    /**
     * Custom content configuration for access denied page. IAP allows customers to define a custom URI to use as the error page when access is denied to users. If IAP prevents access to this page, the default IAP error page will be displayed instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessDeniedPageSettings")
    public AccessDeniedPageSettings accessDeniedPageSettings;

    public ApplicationSettings withAccessDeniedPageSettings(AccessDeniedPageSettings accessDeniedPageSettings) {
        this.accessDeniedPageSettings = accessDeniedPageSettings;
        return this;
    }
    
    /**
     * Configuration for propagating attributes to applications protected by IAP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributePropagationSettings")
    public AttributePropagationSettings attributePropagationSettings;

    public ApplicationSettings withAttributePropagationSettings(AttributePropagationSettings attributePropagationSettings) {
        this.attributePropagationSettings = attributePropagationSettings;
        return this;
    }
    
    /**
     * The Domain value to set for cookies generated by IAP. This value is not validated by the API, but will be ignored at runtime if invalid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cookieDomain")
    public String cookieDomain;

    public ApplicationSettings withCookieDomain(String cookieDomain) {
        this.cookieDomain = cookieDomain;
        return this;
    }
    
    /**
     * Configuration for RCToken generated for service mesh workloads protected by IAP. RCToken are IAP generated JWTs that can be verified at the application. The RCToken is primarily used for service mesh deployments, and can be scoped to a single mesh by configuring the audience field accordingly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("csmSettings")
    public CsmSettings csmSettings;

    public ApplicationSettings withCsmSettings(CsmSettings csmSettings) {
        this.csmSettings = csmSettings;
        return this;
    }
    
    public ApplicationSettings(){}
}
