// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetAllDataSources200ApplicationJSONActionEnum - The id of the action
type GetAllDataSources200ApplicationJSONActionEnum string

const (
	GetAllDataSources200ApplicationJSONActionEnumGetAllDataSources GetAllDataSources200ApplicationJSONActionEnum = "getAllDataSources"
)

func (e *GetAllDataSources200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "getAllDataSources":
		*e = GetAllDataSources200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAllDataSources200ApplicationJSONActionEnum: %s", s)
	}
}

type GetAllDataSources200ApplicationJSONData struct {
	Datasources []shared.Datasource `json:"datasources"`
}

// GetAllDataSources200ApplicationJSONResultEnum - Result of the request
type GetAllDataSources200ApplicationJSONResultEnum string

const (
	GetAllDataSources200ApplicationJSONResultEnumSuccess GetAllDataSources200ApplicationJSONResultEnum = "success"
	GetAllDataSources200ApplicationJSONResultEnumError   GetAllDataSources200ApplicationJSONResultEnum = "error"
)

func (e *GetAllDataSources200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = GetAllDataSources200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAllDataSources200ApplicationJSONResultEnum: %s", s)
	}
}

// GetAllDataSources200ApplicationJSON - Data sources information
type GetAllDataSources200ApplicationJSON struct {
	// The id of the action
	Action GetAllDataSources200ApplicationJSONActionEnum `json:"action"`
	Data   GetAllDataSources200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result GetAllDataSources200ApplicationJSONResultEnum `json:"result"`
}

type GetAllDataSourcesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Data sources information
	GetAllDataSources200ApplicationJSONObject *GetAllDataSources200ApplicationJSON
}
