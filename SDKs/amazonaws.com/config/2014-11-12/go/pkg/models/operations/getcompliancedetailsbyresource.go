// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetComplianceDetailsByResourceXAmzTargetEnum
type GetComplianceDetailsByResourceXAmzTargetEnum string

const (
	GetComplianceDetailsByResourceXAmzTargetEnumStarlingDoveServiceGetComplianceDetailsByResource GetComplianceDetailsByResourceXAmzTargetEnum = "StarlingDoveService.GetComplianceDetailsByResource"
)

func (e GetComplianceDetailsByResourceXAmzTargetEnum) ToPointer() *GetComplianceDetailsByResourceXAmzTargetEnum {
	return &e
}

func (e *GetComplianceDetailsByResourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StarlingDoveService.GetComplianceDetailsByResource":
		*e = GetComplianceDetailsByResourceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetComplianceDetailsByResourceXAmzTargetEnum: %v", v)
	}
}

type GetComplianceDetailsByResourceRequest struct {
	GetComplianceDetailsByResourceRequest shared.GetComplianceDetailsByResourceRequest `request:"mediaType=application/json"`
	// Pagination token
	NextToken         *string                                      `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetComplianceDetailsByResourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetComplianceDetailsByResourceResponse struct {
	ContentType string
	// Success
	GetComplianceDetailsByResourceResponse *shared.GetComplianceDetailsByResourceResponse
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
}
