"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudpaymentsresellersubscriptionv1duration as shared_googlecloudpaymentsresellersubscriptionv1duration
from ..shared import googlecloudpaymentsresellersubscriptionv1promotionintroductorypricingdetails as shared_googlecloudpaymentsresellersubscriptionv1promotionintroductorypricingdetails
from ..shared import googletypelocalizedtext as shared_googletypelocalizedtext
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudPaymentsResellerSubscriptionV1PromotionPromotionTypeEnum(str, Enum):
    r"""Output only. Output Only. Specifies the type of the promotion."""
    PROMOTION_TYPE_UNSPECIFIED = 'PROMOTION_TYPE_UNSPECIFIED'
    PROMOTION_TYPE_FREE_TRIAL = 'PROMOTION_TYPE_FREE_TRIAL'
    PROMOTION_TYPE_INTRODUCTORY_PRICING = 'PROMOTION_TYPE_INTRODUCTORY_PRICING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudPaymentsResellerSubscriptionV1Promotion:
    r"""A Promotion resource that defines a promotion for a subscription that can be resold."""
    
    applicable_products: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicableProducts'), 'exclude': lambda f: f is None }})
    r"""Output only. The product ids this promotion can be applied to."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""Optional. Specifies the end time (exclusive) of the period that the promotion is available in. If unset, the promotion is available indefinitely."""  
    free_trial_duration: Optional[shared_googlecloudpaymentsresellersubscriptionv1duration.GoogleCloudPaymentsResellerSubscriptionV1Duration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freeTrialDuration'), 'exclude': lambda f: f is None }})
    r"""Describes the length of a period of a time."""  
    introductory_pricing_details: Optional[shared_googlecloudpaymentsresellersubscriptionv1promotionintroductorypricingdetails.GoogleCloudPaymentsResellerSubscriptionV1PromotionIntroductoryPricingDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('introductoryPricingDetails'), 'exclude': lambda f: f is None }})
    r"""The details of a introductory pricing promotion."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Response only. Resource name of the subscription promotion. It will have the format of \\"partners/{partner_id}/promotion/{promotion_id}\\" """  
    promotion_type: Optional[GoogleCloudPaymentsResellerSubscriptionV1PromotionPromotionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('promotionType'), 'exclude': lambda f: f is None }})
    r"""Output only. Output Only. Specifies the type of the promotion."""  
    region_codes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regionCodes'), 'exclude': lambda f: f is None }})
    r"""Output only. 2-letter ISO region code where the promotion is available in. Ex. \\"US\\" Please refers to: https://en.wikipedia.org/wiki/ISO_3166-1"""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Optional. Specifies the start time (inclusive) of the period that the promotion is available in."""  
    titles: Optional[list[shared_googletypelocalizedtext.GoogleTypeLocalizedText]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('titles'), 'exclude': lambda f: f is None }})
    r"""Output only. Localized human readable name of the promotion."""  
    