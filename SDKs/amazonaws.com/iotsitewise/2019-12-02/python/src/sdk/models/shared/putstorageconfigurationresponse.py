"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configurationstatus as shared_configurationstatus
from ..shared import disassociateddatastoragestate_enum as shared_disassociateddatastoragestate_enum
from ..shared import multilayerstorage as shared_multilayerstorage
from ..shared import retentionperiod as shared_retentionperiod
from ..shared import storagetype_enum as shared_storagetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutStorageConfigurationResponse:
    r"""Success"""
    
    configuration_status: shared_configurationstatus.ConfigurationStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configurationStatus') }})
    r"""Contains current status information for the configuration."""  
    storage_type: shared_storagetype_enum.StorageTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storageType') }})  
    disassociated_data_storage: Optional[shared_disassociateddatastoragestate_enum.DisassociatedDataStorageStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disassociatedDataStorage'), 'exclude': lambda f: f is None }})  
    multi_layer_storage: Optional[shared_multilayerstorage.MultiLayerStorage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multiLayerStorage'), 'exclude': lambda f: f is None }})  
    retention_period: Optional[shared_retentionperiod.RetentionPeriod] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retentionPeriod'), 'exclude': lambda f: f is None }})
    r"""How many days your data is kept in the hot tier. By default, your data is kept indefinitely in the hot tier."""  
    