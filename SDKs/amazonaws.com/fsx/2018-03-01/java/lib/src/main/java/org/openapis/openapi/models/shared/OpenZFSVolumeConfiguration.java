/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OpenZFSVolumeConfiguration - The configuration of an Amazon FSx for OpenZFS volume.
 */
public class OpenZFSVolumeConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CopyTagsToSnapshots")
    public Boolean copyTagsToSnapshots;

    public OpenZFSVolumeConfiguration withCopyTagsToSnapshots(Boolean copyTagsToSnapshots) {
        this.copyTagsToSnapshots = copyTagsToSnapshots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataCompressionType")
    public OpenZFSDataCompressionTypeEnum dataCompressionType;

    public OpenZFSVolumeConfiguration withDataCompressionType(OpenZFSDataCompressionTypeEnum dataCompressionType) {
        this.dataCompressionType = dataCompressionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeleteClonedVolumes")
    public Boolean deleteClonedVolumes;

    public OpenZFSVolumeConfiguration withDeleteClonedVolumes(Boolean deleteClonedVolumes) {
        this.deleteClonedVolumes = deleteClonedVolumes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeleteIntermediateSnaphots")
    public Boolean deleteIntermediateSnaphots;

    public OpenZFSVolumeConfiguration withDeleteIntermediateSnaphots(Boolean deleteIntermediateSnaphots) {
        this.deleteIntermediateSnaphots = deleteIntermediateSnaphots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NfsExports")
    public OpenZFSNfsExport[] nfsExports;

    public OpenZFSVolumeConfiguration withNfsExports(OpenZFSNfsExport[] nfsExports) {
        this.nfsExports = nfsExports;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OriginSnapshot")
    public OpenZFSOriginSnapshotConfiguration originSnapshot;

    public OpenZFSVolumeConfiguration withOriginSnapshot(OpenZFSOriginSnapshotConfiguration originSnapshot) {
        this.originSnapshot = originSnapshot;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ParentVolumeId")
    public String parentVolumeId;

    public OpenZFSVolumeConfiguration withParentVolumeId(String parentVolumeId) {
        this.parentVolumeId = parentVolumeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReadOnly")
    public Boolean readOnly;

    public OpenZFSVolumeConfiguration withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecordSizeKiB")
    public Long recordSizeKiB;

    public OpenZFSVolumeConfiguration withRecordSizeKiB(Long recordSizeKiB) {
        this.recordSizeKiB = recordSizeKiB;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RestoreToSnapshot")
    public String restoreToSnapshot;

    public OpenZFSVolumeConfiguration withRestoreToSnapshot(String restoreToSnapshot) {
        this.restoreToSnapshot = restoreToSnapshot;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StorageCapacityQuotaGiB")
    public Long storageCapacityQuotaGiB;

    public OpenZFSVolumeConfiguration withStorageCapacityQuotaGiB(Long storageCapacityQuotaGiB) {
        this.storageCapacityQuotaGiB = storageCapacityQuotaGiB;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StorageCapacityReservationGiB")
    public Long storageCapacityReservationGiB;

    public OpenZFSVolumeConfiguration withStorageCapacityReservationGiB(Long storageCapacityReservationGiB) {
        this.storageCapacityReservationGiB = storageCapacityReservationGiB;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserAndGroupQuotas")
    public OpenZFSUserOrGroupQuota[] userAndGroupQuotas;

    public OpenZFSVolumeConfiguration withUserAndGroupQuotas(OpenZFSUserOrGroupQuota[] userAndGroupQuotas) {
        this.userAndGroupQuotas = userAndGroupQuotas;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VolumePath")
    public String volumePath;

    public OpenZFSVolumeConfiguration withVolumePath(String volumePath) {
        this.volumePath = volumePath;
        return this;
    }
    
    public OpenZFSVolumeConfiguration(){}
}
