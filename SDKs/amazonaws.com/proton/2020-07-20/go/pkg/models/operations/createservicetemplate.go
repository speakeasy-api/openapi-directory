// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateServiceTemplateXAmzTargetEnum
type CreateServiceTemplateXAmzTargetEnum string

const (
	CreateServiceTemplateXAmzTargetEnumAwsProton20200720CreateServiceTemplate CreateServiceTemplateXAmzTargetEnum = "AwsProton20200720.CreateServiceTemplate"
)

func (e CreateServiceTemplateXAmzTargetEnum) ToPointer() *CreateServiceTemplateXAmzTargetEnum {
	return &e
}

func (e *CreateServiceTemplateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AwsProton20200720.CreateServiceTemplate":
		*e = CreateServiceTemplateXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateServiceTemplateXAmzTargetEnum: %v", v)
	}
}

type CreateServiceTemplateRequest struct {
	CreateServiceTemplateInput shared.CreateServiceTemplateInput   `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 CreateServiceTemplateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateServiceTemplateResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateServiceTemplateOutput *shared.CreateServiceTemplateOutput
	// InternalServerException
	InternalServerException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
