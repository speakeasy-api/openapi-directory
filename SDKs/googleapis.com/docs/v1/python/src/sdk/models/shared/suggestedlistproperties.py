"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import listproperties as shared_listproperties
from ..shared import listpropertiessuggestionstate as shared_listpropertiessuggestionstate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuggestedListProperties:
    r"""A suggested change to ListProperties."""
    
    list_properties: Optional[shared_listproperties.ListProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listProperties'), 'exclude': lambda f: f is None }})
    r"""The properties of a list that describe the look and feel of bullets belonging to paragraphs associated with a list."""  
    list_properties_suggestion_state: Optional[shared_listpropertiessuggestionstate.ListPropertiesSuggestionState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listPropertiesSuggestionState'), 'exclude': lambda f: f is None }})
    r"""A mask that indicates which of the fields on the base ListProperties have been changed in this suggestion. For any field set to true, there's a new suggested value."""  
    