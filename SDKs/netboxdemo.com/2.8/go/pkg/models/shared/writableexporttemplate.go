// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WritableExportTemplateTemplateLanguageEnum string

const (
	WritableExportTemplateTemplateLanguageEnumDjango WritableExportTemplateTemplateLanguageEnum = "django"
	WritableExportTemplateTemplateLanguageEnumJinja2 WritableExportTemplateTemplateLanguageEnum = "jinja2"
)

func (e *WritableExportTemplateTemplateLanguageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "django":
		fallthrough
	case "jinja2":
		*e = WritableExportTemplateTemplateLanguageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WritableExportTemplateTemplateLanguageEnum: %s", s)
	}
}

type WritableExportTemplateInput struct {
	ContentType string  `json:"content_type"`
	Description *string `json:"description,omitempty"`
	// Extension to append to the rendered filename
	FileExtension *string `json:"file_extension,omitempty"`
	// Defaults to <code>text/plain</code>
	MimeType *string `json:"mime_type,omitempty"`
	Name     string  `json:"name"`
	// The list of objects being exported is passed as a context variable named <code>queryset</code>.
	TemplateCode     string                                      `json:"template_code"`
	TemplateLanguage *WritableExportTemplateTemplateLanguageEnum `json:"template_language,omitempty"`
}
