/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Impersonation } from "./impersonation";
import { SystemEvent } from "./systemevent";
import { User } from "./user";
import { Expose, Type } from "class-transformer";

/**
 * The actor of a Drive activity.
 */
export class Actor extends SpeakeasyBase {
  /**
   * Empty message representing an administrator.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "administrator" })
  administrator?: Record<string, any>;

  /**
   * Empty message representing an anonymous user or indicating the authenticated user should be anonymized.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "anonymous" })
  anonymous?: Record<string, any>;

  /**
   * Information about an impersonation, where an admin acts on behalf of an end user. Information about the acting admin is not currently available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "impersonation" })
  @Type(() => Impersonation)
  impersonation?: Impersonation;

  /**
   * Event triggered by system operations instead of end users.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "system" })
  @Type(() => SystemEvent)
  system?: SystemEvent;

  /**
   * Information about an end user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => User)
  user?: User;
}
