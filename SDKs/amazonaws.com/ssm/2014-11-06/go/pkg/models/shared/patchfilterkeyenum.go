// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PatchFilterKeyEnum string

const (
	PatchFilterKeyEnumArch           PatchFilterKeyEnum = "ARCH"
	PatchFilterKeyEnumAdvisoryID     PatchFilterKeyEnum = "ADVISORY_ID"
	PatchFilterKeyEnumBugzillaID     PatchFilterKeyEnum = "BUGZILLA_ID"
	PatchFilterKeyEnumPatchSet       PatchFilterKeyEnum = "PATCH_SET"
	PatchFilterKeyEnumProduct        PatchFilterKeyEnum = "PRODUCT"
	PatchFilterKeyEnumProductFamily  PatchFilterKeyEnum = "PRODUCT_FAMILY"
	PatchFilterKeyEnumClassification PatchFilterKeyEnum = "CLASSIFICATION"
	PatchFilterKeyEnumCveID          PatchFilterKeyEnum = "CVE_ID"
	PatchFilterKeyEnumEpoch          PatchFilterKeyEnum = "EPOCH"
	PatchFilterKeyEnumMsrcSeverity   PatchFilterKeyEnum = "MSRC_SEVERITY"
	PatchFilterKeyEnumName           PatchFilterKeyEnum = "NAME"
	PatchFilterKeyEnumPatchID        PatchFilterKeyEnum = "PATCH_ID"
	PatchFilterKeyEnumSection        PatchFilterKeyEnum = "SECTION"
	PatchFilterKeyEnumPriority       PatchFilterKeyEnum = "PRIORITY"
	PatchFilterKeyEnumRepository     PatchFilterKeyEnum = "REPOSITORY"
	PatchFilterKeyEnumRelease        PatchFilterKeyEnum = "RELEASE"
	PatchFilterKeyEnumSeverity       PatchFilterKeyEnum = "SEVERITY"
	PatchFilterKeyEnumSecurity       PatchFilterKeyEnum = "SECURITY"
	PatchFilterKeyEnumVersion        PatchFilterKeyEnum = "VERSION"
)

func (e PatchFilterKeyEnum) ToPointer() *PatchFilterKeyEnum {
	return &e
}

func (e *PatchFilterKeyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARCH":
		fallthrough
	case "ADVISORY_ID":
		fallthrough
	case "BUGZILLA_ID":
		fallthrough
	case "PATCH_SET":
		fallthrough
	case "PRODUCT":
		fallthrough
	case "PRODUCT_FAMILY":
		fallthrough
	case "CLASSIFICATION":
		fallthrough
	case "CVE_ID":
		fallthrough
	case "EPOCH":
		fallthrough
	case "MSRC_SEVERITY":
		fallthrough
	case "NAME":
		fallthrough
	case "PATCH_ID":
		fallthrough
	case "SECTION":
		fallthrough
	case "PRIORITY":
		fallthrough
	case "REPOSITORY":
		fallthrough
	case "RELEASE":
		fallthrough
	case "SEVERITY":
		fallthrough
	case "SECURITY":
		fallthrough
	case "VERSION":
		*e = PatchFilterKeyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchFilterKeyEnum: %v", v)
	}
}
