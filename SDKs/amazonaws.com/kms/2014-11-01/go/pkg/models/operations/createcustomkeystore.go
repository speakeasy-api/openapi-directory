// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateCustomKeyStoreXAmzTargetEnum
type CreateCustomKeyStoreXAmzTargetEnum string

const (
	CreateCustomKeyStoreXAmzTargetEnumTrentServiceCreateCustomKeyStore CreateCustomKeyStoreXAmzTargetEnum = "TrentService.CreateCustomKeyStore"
)

func (e CreateCustomKeyStoreXAmzTargetEnum) ToPointer() *CreateCustomKeyStoreXAmzTargetEnum {
	return &e
}

func (e *CreateCustomKeyStoreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TrentService.CreateCustomKeyStore":
		*e = CreateCustomKeyStoreXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCustomKeyStoreXAmzTargetEnum: %v", v)
	}
}

type CreateCustomKeyStoreRequest struct {
	CreateCustomKeyStoreRequest shared.CreateCustomKeyStoreRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  CreateCustomKeyStoreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateCustomKeyStoreResponse struct {
	// CloudHsmClusterInUseException
	CloudHsmClusterInUseException interface{}
	// CloudHsmClusterInvalidConfigurationException
	CloudHsmClusterInvalidConfigurationException interface{}
	// CloudHsmClusterNotActiveException
	CloudHsmClusterNotActiveException interface{}
	// CloudHsmClusterNotFoundException
	CloudHsmClusterNotFoundException interface{}
	ContentType                      string
	// Success
	CreateCustomKeyStoreResponse *shared.CreateCustomKeyStoreResponse
	// CustomKeyStoreNameInUseException
	CustomKeyStoreNameInUseException interface{}
	// IncorrectTrustAnchorException
	IncorrectTrustAnchorException interface{}
	// KMSInternalException
	KMSInternalException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// XksProxyIncorrectAuthenticationCredentialException
	XksProxyIncorrectAuthenticationCredentialException interface{}
	// XksProxyInvalidConfigurationException
	XksProxyInvalidConfigurationException interface{}
	// XksProxyInvalidResponseException
	XksProxyInvalidResponseException interface{}
	// XksProxyUriEndpointInUseException
	XksProxyURIEndpointInUseException interface{}
	// XksProxyUriInUseException
	XksProxyURIInUseException interface{}
	// XksProxyUriUnreachableException
	XksProxyURIUnreachableException interface{}
	// XksProxyVpcEndpointServiceInUseException
	XksProxyVpcEndpointServiceInUseException interface{}
	// XksProxyVpcEndpointServiceInvalidConfigurationException
	XksProxyVpcEndpointServiceInvalidConfigurationException interface{}
	// XksProxyVpcEndpointServiceNotFoundException
	XksProxyVpcEndpointServiceNotFoundException interface{}
}
