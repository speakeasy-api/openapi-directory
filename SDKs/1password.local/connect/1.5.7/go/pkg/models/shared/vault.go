// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type VaultTypeEnum string

const (
	VaultTypeEnumUserCreated VaultTypeEnum = "USER_CREATED"
	VaultTypeEnumPersonal    VaultTypeEnum = "PERSONAL"
	VaultTypeEnumEveryone    VaultTypeEnum = "EVERYONE"
	VaultTypeEnumTransfer    VaultTypeEnum = "TRANSFER"
)

func (e VaultTypeEnum) ToPointer() *VaultTypeEnum {
	return &e
}

func (e *VaultTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USER_CREATED":
		fallthrough
	case "PERSONAL":
		fallthrough
	case "EVERYONE":
		fallthrough
	case "TRANSFER":
		*e = VaultTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VaultTypeEnum: %v", v)
	}
}

// Vault - OK
type Vault struct {
	// The vault version
	AttributeVersion *int64 `json:"attributeVersion,omitempty"`
	// The version of the vault contents
	ContentVersion *int64     `json:"contentVersion,omitempty"`
	CreatedAt      *time.Time `json:"createdAt,omitempty"`
	Description    *string    `json:"description,omitempty"`
	ID             *string    `json:"id,omitempty"`
	// Number of active items in the vault
	Items     *int64         `json:"items,omitempty"`
	Name      *string        `json:"name,omitempty"`
	Type      *VaultTypeEnum `json:"type,omitempty"`
	UpdatedAt *time.Time     `json:"updatedAt,omitempty"`
}
