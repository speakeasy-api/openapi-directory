// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetFormatEnum - If not present, json format will be returned as the search result.
type GetFormatEnum string

const (
	GetFormatEnumJSON GetFormatEnum = "json"
	GetFormatEnumXML  GetFormatEnum = "xml"
)

func (e *GetFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		*e = GetFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFormatEnum: %s", s)
	}
}

type GetRequest struct {
	// If not present, json format will be returned as the search result.
	Format *GetFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// IP address (IPv4) for lookup purpose. If not present, the server IP address will be used for the lookup.
	IP string `queryParam:"style=form,explode=true,name=ip"`
	// API key. Please sign up free trial license key at ip2location.com
	Key string `queryParam:"style=form,explode=true,name=key"`
	// Package name from PX1 to PX11. If not present, the web service will assume the PX1 package query.
	Package *string `queryParam:"style=form,explode=true,name=package"`
}

type GetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Get response from IP2Proxy
	Get200TextHTMLString *string
}
