/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BackendConnectionErrors } from "./backendconnectionerrors";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p/>
 */
export class TelemetryRecord extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BackendConnectionErrors" })
  @Type(() => BackendConnectionErrors)
  backendConnectionErrors?: BackendConnectionErrors;

  @SpeakeasyMetadata()
  @Expose({ name: "SegmentsReceivedCount" })
  segmentsReceivedCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SegmentsRejectedCount" })
  segmentsRejectedCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SegmentsSentCount" })
  segmentsSentCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SegmentsSpilloverCount" })
  segmentsSpilloverCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;
}
