<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class URLInfoResponse
{
    /**
     * The actual content this URL responded with. Only set if the 'fetch-content' option was used
     * 
     * @var string $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $content;
    
    /**
     * The encoding format the URL uses
     * 
     * @var string $contentEncoding
     */
	#[\JMS\Serializer\Annotation\SerializedName('content-encoding')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $contentEncoding;
    
    /**
     * The size of the URL content in bytes
     * 
     * @var int $contentSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('content-size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $contentSize;
    
    /**
     * The content-type this URL serves
     * 
     * @var string $contentType
     */
	#[\JMS\Serializer\Annotation\SerializedName('content-type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $contentType;
    
    /**
     * True if this URL responded with an HTTP OK (200) status
     * 
     * @var bool $httpOk
     */
	#[\JMS\Serializer\Annotation\SerializedName('http-ok')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $httpOk;
    
    /**
     * True if this URL responded with an HTTP redirect
     * 
     * @var bool $httpRedirect
     */
	#[\JMS\Serializer\Annotation\SerializedName('http-redirect')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $httpRedirect;
    
    /**
     * The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue
     * 
     * @var int $httpStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('http-status')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $httpStatus;
    
    /**
     * The HTTP status message assoicated with the status code
     * 
     * @var int $httpStatusMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('http-status-message')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $httpStatusMessage;
    
    /**
     * True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts
     * 
     * @var bool $isError
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-error')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isError;
    
    /**
     * True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'
     * 
     * @var bool $isTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-timeout')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isTimeout;
    
    /**
     * The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers
     * 
     * @var string $languageCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('language-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $languageCode;
    
    /**
     * The time taken to load the URL content in seconds
     * 
     * @var float $loadTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('load-time')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $loadTime;
    
    /**
     * A key-value map of the URL query paramaters
     * 
     * @var array<string, string> $query
     */
	#[\JMS\Serializer\Annotation\SerializedName('query')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $query;
    
    /**
     * Is this URL actually serving real content
     * 
     * @var bool $real
     */
	#[\JMS\Serializer\Annotation\SerializedName('real')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $real;
    
    /**
     * The servers IP geo-location: full city name (if detectable)
     * 
     * @var string $serverCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('server-city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverCity;
    
    /**
     * The servers IP geo-location: full country name
     * 
     * @var string $serverCountry
     */
	#[\JMS\Serializer\Annotation\SerializedName('server-country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverCountry;
    
    /**
     * The servers IP geo-location: ISO 2-letter country code
     * 
     * @var string $serverCountryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('server-country-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverCountryCode;
    
    /**
     * The servers hostname (PTR record)
     * 
     * @var string $serverHostname
     */
	#[\JMS\Serializer\Annotation\SerializedName('server-hostname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverHostname;
    
    /**
     * The IP address of the server hosting this URL
     * 
     * @var string $serverIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('server-ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverIp;
    
    /**
     * The name of the server software hosting this URL
     * 
     * @var string $serverName
     */
	#[\JMS\Serializer\Annotation\SerializedName('server-name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverName;
    
    /**
     * The servers IP geo-location: full region name (if detectable)
     * 
     * @var string $serverRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('server-region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverRegion;
    
    /**
     * The document title
     * 
     * @var string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
    /**
     * The fully qualified URL. This may be different to the URL requested if http-redirect is true
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * The URL path
     * 
     * @var string $urlPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('url-path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $urlPath;
    
    /**
     * The URL port
     * 
     * @var int $urlPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('url-port')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $urlPort;
    
    /**
     * The URL protocol, usually http or https
     * 
     * @var string $urlProtocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('url-protocol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $urlProtocol;
    
    /**
     * Is this a valid well-formed URL
     * 
     * @var bool $valid
     */
	#[\JMS\Serializer\Annotation\SerializedName('valid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $valid;
    
	public function __construct()
	{
		$this->content = "";
		$this->contentEncoding = "";
		$this->contentSize = 0;
		$this->contentType = "";
		$this->httpOk = false;
		$this->httpRedirect = false;
		$this->httpStatus = 0;
		$this->httpStatusMessage = 0;
		$this->isError = false;
		$this->isTimeout = false;
		$this->languageCode = "";
		$this->loadTime = 0;
		$this->query = [];
		$this->real = false;
		$this->serverCity = "";
		$this->serverCountry = "";
		$this->serverCountryCode = "";
		$this->serverHostname = "";
		$this->serverIp = "";
		$this->serverName = "";
		$this->serverRegion = "";
		$this->title = "";
		$this->url = "";
		$this->urlPath = "";
		$this->urlPort = 0;
		$this->urlProtocol = "";
		$this->valid = false;
	}
}
