/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class PreprintProviderDetailRequest extends SpeakeasyBase {
  /**
   * The unique identifier of the preprint provider.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=preprint_provider_id",
  })
  preprintProviderId: string;
}

/**
 * The properties of the preprint provider entity.
 */
export class PreprintProviderDetailPreprintProvidersAttributes extends SpeakeasyBase {
  /**
   * The HTML representation of the preprint provider's advisory board.
   */
  @SpeakeasyMetadata()
  advisoryBoard?: string;

  /**
   * A static path to the preprint provider's banner image. This field is deprecated as of verson 2.4.
   */
  @SpeakeasyMetadata()
  bannerPath?: string;

  /**
   * The description of the preprint provider.
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * The preprint provider's domain, if the provider is using a domain to for their preprint service.
   */
  @SpeakeasyMetadata()
  domain?: string;

  /**
   * Whether or not redirects are enabled for the provider's domain.
   */
  @SpeakeasyMetadata()
  domainRedirectEnabled?: boolean;

  /**
   * The preprint provider's contact email address. This field is deprecated as of verson 2.4.
   */
  @SpeakeasyMetadata()
  emailContact?: string;

  /**
   * The preprint providers's support email address.
   */
  @SpeakeasyMetadata()
  emailSupport?: string;

  /**
   * The GUID for an example preprint from this preprint provider.
   */
  @SpeakeasyMetadata()
  example?: string;

  /**
   * A static path to the preprint provider's logo image. This field is deprecated as of verson 2.4.
   */
  @SpeakeasyMetadata()
  logoPath?: string;

  /**
   * The name of the preprint provider.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * The preprint provider's Facebook account ID. This field is deprecated as of verson 2.4.
   */
  @SpeakeasyMetadata()
  socialFacebook?: string;

  /**
   * The preprint provider's Instagram account ID. This field is deprecated as of verson 2.4.
   */
  @SpeakeasyMetadata()
  socialInstagram?: string;

  /**
   * A nested array structure defining allowed subjects for this preprint provider, in the BePress taxonomy.
   */
  @SpeakeasyMetadata()
  subjectsAcceptable?: string;
}

/**
 * Links to alternative representations of the preprint entity.
 */
export class PreprintProviderDetailPreprintProvidersLinks extends SpeakeasyBase {
  /**
   * A link to the external website for the preprint provider.
   */
  @SpeakeasyMetadata()
  externalUrl?: string;

  /**
   * A link to the preprint list page for the preprint provider.
   */
  @SpeakeasyMetadata()
  preprints?: string;

  /**
   * A link to the detail page for the preprint provider.
   */
  @SpeakeasyMetadata()
  self?: string;
}

/**
 * Links to other entities or entity collections that have a relationship to the preprint provider.
 */
export class PreprintProviderDetailPreprintProvidersRelationships extends SpeakeasyBase {
  /**
   * A link to licenses the preprint provider allows.
   */
  @SpeakeasyMetadata()
  licensesAcceptable?: string;

  /**
   * A link to the preprint list page for the preprint provider.
   */
  @SpeakeasyMetadata()
  preprints?: string;

  /**
   * A link to the taxonomies the preprint provider allows.
   */
  @SpeakeasyMetadata()
  taxonomies?: string;
}

/**
 * OK
 */
export class PreprintProviderDetailPreprintProviders extends SpeakeasyBase {
  /**
   * The properties of the preprint provider entity.
   */
  @SpeakeasyMetadata()
  attributes?: PreprintProviderDetailPreprintProvidersAttributes;

  /**
   * The identifier of the preprint provider entity.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Links to alternative representations of the preprint entity.
   */
  @SpeakeasyMetadata()
  links?: PreprintProviderDetailPreprintProvidersLinks;

  /**
   * Links to other entities or entity collections that have a relationship to the preprint provider.
   */
  @SpeakeasyMetadata()
  relationships?: PreprintProviderDetailPreprintProvidersRelationships;

  /**
   * The type identifier of the preprint provider entity (`preprint_providers`).
   */
  @SpeakeasyMetadata()
  type?: string;
}

export class PreprintProviderDetailResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
