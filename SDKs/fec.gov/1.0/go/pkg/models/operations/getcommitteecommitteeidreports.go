// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetCommitteeCommitteeIDReportsPathParams struct {
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	CommitteeID string `pathParam:"style=simple,explode=false,name=committee_id"`
}

type GetCommitteeCommitteeIDReportsQueryParams struct {
	// API key for https://api.data.gov. Get one at https://api.data.gov/signup.
	//
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// Unique identifier for the electronic or paper report. This number is used to construct
	// PDF URLs to the original document.
	//
	BeginningImageNumber []string `queryParam:"style=form,explode=true,name=beginning_image_number"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office.
	//
	CandidateID *string `queryParam:"style=form,explode=true,name=candidate_id"`
	// Filter records to only those that were applicable to a given
	// two-year period.The cycle begins with an odd year and is named
	// for its ending, even year.
	//
	Cycle []int `queryParam:"style=form,explode=true,name=cycle"`
	// False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.
	//
	IsAmended *bool `queryParam:"style=form,explode=true,name=is_amended"`
	// Filter for all amounts less than a value.
	//
	MaxCashOnHandEndPeriodAmount *string `queryParam:"style=form,explode=true,name=max_cash_on_hand_end_period_amount"`
	// Filter for all amounts less than a value.
	//
	MaxDebtsOwedExpenditures *string `queryParam:"style=form,explode=true,name=max_debts_owed_expenditures"`
	// Filter for all amounts less than a value.
	//
	MaxDisbursementsAmount *string `queryParam:"style=form,explode=true,name=max_disbursements_amount"`
	// Filter for all amounts less than a value.
	//
	MaxIndependentExpenditures *string `queryParam:"style=form,explode=true,name=max_independent_expenditures"`
	// Filter for all amounts less than a value.
	//
	MaxPartyCoordinatedExpenditures *string `queryParam:"style=form,explode=true,name=max_party_coordinated_expenditures"`
	// Filter for all amounts less than a value.
	//
	MaxReceiptsAmount *string `queryParam:"style=form,explode=true,name=max_receipts_amount"`
	// Filter for all amounts less than a value.
	//
	MaxTotalContributions *string `queryParam:"style=form,explode=true,name=max_total_contributions"`
	// Filter for all amounts greater than a value.
	//
	MinCashOnHandEndPeriodAmount *string `queryParam:"style=form,explode=true,name=min_cash_on_hand_end_period_amount"`
	// Filter for all amounts greater than a value.
	//
	MinDebtsOwedAmount *string `queryParam:"style=form,explode=true,name=min_debts_owed_amount"`
	// Filter for all amounts greater than a value.
	//
	MinDisbursementsAmount *string `queryParam:"style=form,explode=true,name=min_disbursements_amount"`
	// Filter for all amounts greater than a value.
	//
	MinIndependentExpenditures *string `queryParam:"style=form,explode=true,name=min_independent_expenditures"`
	// Filter for all amounts greater than a value.
	//
	MinPartyCoordinatedExpenditures *string `queryParam:"style=form,explode=true,name=min_party_coordinated_expenditures"`
	// Filter for all amounts greater than a value.
	//
	MinReceiptsAmount *string `queryParam:"style=form,explode=true,name=min_receipts_amount"`
	// Filter for all amounts greater than a value.
	//
	MinTotalContributions *string `queryParam:"style=form,explode=true,name=min_total_contributions"`
	// For paginating through results, starting at page 1
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// The number of results returned per page. Defaults to 20.
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// Report type; prefix with "-" to exclude. Name of report where the underlying data comes from:
	//     - 10D Pre-Election
	//     - 10G Pre-General
	//     - 10P Pre-Primary
	//     - 10R Pre-Run-Off
	//     - 10S Pre-Special
	//     - 12C Pre-Convention
	//     - 12G Pre-General
	//     - 12P Pre-Primary
	//     - 12R Pre-Run-Off
	//     - 12S Pre-Special
	//     - 30D Post-Election
	//     - 30G Post-General
	//     - 30P Post-Primary
	//     - 30R Post-Run-Off
	//     - 30S Post-Special
	//     - 60D Post-Convention
	//     - M1  January Monthly
	//     - M10 October Monthly
	//     - M11 November Monthly
	//     - M12 December Monthly
	//     - M2  February Monthly
	//     - M3  March Monthly
	//     - M4  April Monthly
	//     - M5  May Monthly
	//     - M6  June Monthly
	//     - M7  July Monthly
	//     - M8  August Monthly
	//     - M9  September Monthly
	//     - MY  Mid-Year Report
	//     - Q1  April Quarterly
	//     - Q2  July Quarterly
	//     - Q3  October Quarterly
	//     - TER Termination Report
	//     - YE  Year-End
	//     - ADJ COMP ADJUST AMEND
	//     - CA  COMPREHENSIVE AMEND
	//
	ReportType []string `queryParam:"style=form,explode=true,name=report_type"`
	// Provide a field to sort by. Use `-` for descending order. ex: `-case_no`
	//
	Sort []string `queryParam:"style=form,explode=true,name=sort"`
	// Hide null values on sorted column(s).
	SortHideNull *bool `queryParam:"style=form,explode=true,name=sort_hide_null"`
	// Toggle that filters out all rows having sort column that is non-null
	SortNullOnly *bool `queryParam:"style=form,explode=true,name=sort_null_only"`
	// Toggle that sorts null values last
	SortNullsLast *bool `queryParam:"style=form,explode=true,name=sort_nulls_last"`
	// The one-letter type code of the organization:
	//         - C communication cost
	//         - D delegate
	//         - E electioneering communication
	//         - H House
	//         - I independent expenditure filer (not a committee)
	//         - N PAC - nonqualified
	//         - O independent expenditure-only (super PACs)
	//         - P presidential
	//         - Q PAC - qualified
	//         - S Senate
	//         - U single candidate independent expenditure
	//         - V PAC with non-contribution account, nonqualified
	//         - W PAC with non-contribution account, qualified
	//         - X party, nonqualified
	//         - Y party, qualified
	//         - Z national party non-federal account
	//
	Type []string `queryParam:"style=form,explode=true,name=type"`
	// Forms with coverage date -
	//     year from the coverage ending date.
	// Forms without coverage date -
	//     year from the receipt date.
	//
	Year []int `queryParam:"style=form,explode=true,name=year"`
}

type GetCommitteeCommitteeIDReportsRequest struct {
	PathParams  GetCommitteeCommitteeIDReportsPathParams
	QueryParams GetCommitteeCommitteeIDReportsQueryParams
}

type GetCommitteeCommitteeIDReportsResponse struct {
	CommitteeReportsPage *shared.CommitteeReportsPage
	ContentType          string
	StatusCode           int
	RawResponse          *http.Response
}
