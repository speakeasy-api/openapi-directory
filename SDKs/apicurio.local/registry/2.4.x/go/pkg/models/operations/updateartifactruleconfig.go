// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateArtifactRuleConfigRuleEnum - The unique name/type of a rule.
type UpdateArtifactRuleConfigRuleEnum string

const (
	UpdateArtifactRuleConfigRuleEnumValidity      UpdateArtifactRuleConfigRuleEnum = "VALIDITY"
	UpdateArtifactRuleConfigRuleEnumCompatibility UpdateArtifactRuleConfigRuleEnum = "COMPATIBILITY"
)

func (e *UpdateArtifactRuleConfigRuleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VALIDITY":
		fallthrough
	case "COMPATIBILITY":
		*e = UpdateArtifactRuleConfigRuleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateArtifactRuleConfigRuleEnum: %s", s)
	}
}

type UpdateArtifactRuleConfigPathParams struct {
	// The artifact ID.  Can be a string (client-provided) or UUID (server-generated), representing the unique artifact identifier.
	ArtifactID string `pathParam:"style=simple,explode=false,name=artifactId"`
	// The artifact group ID.  Must be a string provided by the client, representing the name of the grouping of artifacts.
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// The unique name/type of a rule.
	Rule UpdateArtifactRuleConfigRuleEnum `pathParam:"style=simple,explode=false,name=rule"`
}

type UpdateArtifactRuleConfigRequest struct {
	PathParams UpdateArtifactRuleConfigPathParams
	Request    shared.Rule `request:"mediaType=application/json"`
}

type UpdateArtifactRuleConfigResponse struct {
	ContentType string
	// Common response for all operations that can return a `404` error.
	Error *shared.Error
	// Rule configuration was updated.
	Rule        *shared.Rule
	StatusCode  int
	RawResponse *http.Response
}
