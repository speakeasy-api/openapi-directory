/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListRegulationServerList = ["https://numbers.twilio.com"] as const;

export class ListRegulationSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListRegulationRequest extends SpeakeasyBase {
  /**
   * The type of End User the regulation requires - can be `individual` or `business`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EndUserType",
  })
  endUserType?: shared.RegulationEnumEndUserTypeEnum;

  /**
   * The ISO country code of the phone number's country.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=IsoCountry",
  })
  isoCountry?: string;

  /**
   * The type of phone number that the regulatory requiremnt is restricting.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NumberType",
  })
  numberType?: string;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;
}

export class ListRegulationListRegulationResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListRegulationListRegulationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListRegulationListRegulationResponseMeta)
  meta?: ListRegulationListRegulationResponseMeta;

  @SpeakeasyMetadata({
    elemType: shared.NumbersV2RegulatoryComplianceRegulation,
  })
  @Expose({ name: "results" })
  @Type(() => shared.NumbersV2RegulatoryComplianceRegulation)
  results?: shared.NumbersV2RegulatoryComplianceRegulation[];
}

export class ListRegulationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listRegulationResponse?: ListRegulationListRegulationResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
