/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NetworkSiteStatusEnum } from "./networksitestatusenum";
import { SitePlan } from "./siteplan";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a network site.
 */
export class NetworkSite extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "availabilityZone" })
  availabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "availabilityZoneId" })
  availabilityZoneId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "currentPlan" })
  @Type(() => SitePlan)
  currentPlan?: SitePlan;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "networkArn" })
  networkArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "networkSiteArn" })
  networkSiteArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "networkSiteName" })
  networkSiteName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pendingPlan" })
  @Type(() => SitePlan)
  pendingPlan?: SitePlan;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: NetworkSiteStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  statusReason?: string;
}
