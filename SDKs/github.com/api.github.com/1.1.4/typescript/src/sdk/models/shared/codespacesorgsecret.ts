/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The type of repositories in the organization that the secret is visible to
 */
export enum CodespacesOrgSecretVisibilityEnum {
  All = "all",
  Private = "private",
  Selected = "selected",
}

/**
 * Secrets for a GitHub Codespace.
 */
export class CodespacesOrgSecret extends SpeakeasyBase {
  /**
   * The date and time at which the secret was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The name of the secret
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The API URL at which the list of repositories this secret is visible to can be retrieved
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selected_repositories_url" })
  selectedRepositoriesUrl?: string;

  /**
   * The date and time at which the secret was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * The type of repositories in the organization that the secret is visible to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility: CodespacesOrgSecretVisibilityEnum;
}
