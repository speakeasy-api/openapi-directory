/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Export Transactions response
 */
export class PayorAmlTransaction extends SpeakeasyBase {
  @SpeakeasyMetadata()
  credit?: number;

  /**
   * ISO 4217 3 character currency code
   */
  @SpeakeasyMetadata()
  creditCurrency?: string;

  @SpeakeasyMetadata()
  dateFundingRequested?: string;

  @SpeakeasyMetadata()
  debit?: number;

  /**
   * ISO 4217 3 character currency code
   */
  @SpeakeasyMetadata()
  debitCurrency?: string;

  @SpeakeasyMetadata()
  fundingType?: string;

  @SpeakeasyMetadata()
  fxApplied?: number;

  @SpeakeasyMetadata()
  payeeEmail?: string;

  @SpeakeasyMetadata()
  payeeName?: string;

  @SpeakeasyMetadata()
  payeeType?: string;

  @SpeakeasyMetadata()
  paymentAmount?: number;

  /**
   * ISO 4217 3 character currency code
   */
  @SpeakeasyMetadata()
  paymentCurrency?: string;

  @SpeakeasyMetadata()
  paymentMemo?: string;

  @SpeakeasyMetadata()
  paymentRails?: string;

  @SpeakeasyMetadata()
  paymentStatus?: string;

  @SpeakeasyMetadata()
  payorPaymentId?: string;

  @SpeakeasyMetadata()
  rejectReason?: string;

  /**
   * Remote ID of the Payee, set by Payor
   */
  @SpeakeasyMetadata()
  remoteId?: string;

  @SpeakeasyMetadata()
  reportTransactionType?: string;

  @SpeakeasyMetadata()
  returnCode?: string;

  @SpeakeasyMetadata()
  returnDescription?: string;

  @SpeakeasyMetadata()
  returnFee?: string;

  /**
   * ISO 4217 3 character currency code
   */
  @SpeakeasyMetadata()
  returnFeeCurrency?: string;

  @SpeakeasyMetadata()
  returnFeeDescription?: string;

  @SpeakeasyMetadata()
  sourceAccount?: string;

  @SpeakeasyMetadata()
  transactionDate?: Date;

  @SpeakeasyMetadata()
  transactionTime?: string;
}
