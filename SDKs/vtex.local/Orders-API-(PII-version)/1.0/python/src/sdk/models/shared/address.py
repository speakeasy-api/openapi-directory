"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Address:
    
    address_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressId') }})
    r"""Address ID."""  
    address_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressType') }})
    r"""Address type."""  
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})
    r"""Address city."""  
    complement: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('complement') }})
    r"""Address complement."""  
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})
    r"""Address country."""  
    geo_coordinates: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('geoCoordinates') }})
    r"""Geolocation coordinates."""  
    neighborhood: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('neighborhood') }})
    r"""Address neighborhood."""  
    number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number') }})
    r"""Address number."""  
    postal_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postalCode') }})
    r"""Address postal code."""  
    receiver_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverName') }})
    r"""Address receiver name."""  
    reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference') }})
    r"""Address reference."""  
    state: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})
    r"""Address state."""  
    street: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('street') }})
    r"""Address street."""  
    