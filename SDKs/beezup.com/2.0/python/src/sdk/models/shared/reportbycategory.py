"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import reportbycategorylinks as shared_reportbycategorylinks
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportByCategory:
    
    all_product_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allProductCount') }})
    r"""The product count for this category. This includes all the products that have been imported and can still have associated clicks and orders."""  
    catalog_category_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalogCategoryId') }})
    r"""The catalog category identifier"""  
    catalog_product_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalogProductCount') }})
    r"""The catalog product count for this category. This includes all products that are still present in your imported catalog."""  
    click_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clickCount') }})
    r"""The click count for this category"""  
    cost: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cost') }})
    r"""The cost for this category"""  
    enabled_product_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabledProductCount') }})
    r"""The enabled product count for this category. This includes all products that are still present in your imported catalog and have not been disabled via the optimisation feature."""  
    links: shared_reportbycategorylinks.ReportByCategoryLinks = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links') }})  
    order_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderCount') }})
    r"""The order count for this category"""  
    performance_indicator: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performanceIndicator') }})
    r"""The performance indicator based on the performance indicator formula indicated in the request for this category"""  
    sold_product_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('soldProductCount') }})
    r"""The product sold count count for this category"""  
    total_sales: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalSales') }})
    r"""The total sales for this category"""  
    catalog_category_path: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalogCategoryPath'), 'exclude': lambda f: f is None }})
    r"""The catalog category path"""  
    margin: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('margin'), 'exclude': lambda f: f is None }})
    r"""The margin for this category"""  
    roi: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roi'), 'exclude': lambda f: f is None }})
    r"""The Return On Investment for this category"""  
    