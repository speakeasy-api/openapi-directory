<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateNewFactorCreateNewFactorRequest
{
    /**
     * The algorithm used when `factor_type` is `push`. Algorithm supported: `ES256`
     * 
     * @var ?string $bindingAlg
     */
	#[SpeakeasyMetadata('form:name=Binding.Alg')]
    public ?string $bindingAlg = null;
    
    /**
     * The Ecdsa public key in PKIX, ASN.1 DER format encoded in Base64.
     * 
     * 
     * Required when `factor_type` is `push`
     * 
     * @var ?string $bindingPublicKey
     */
	#[SpeakeasyMetadata('form:name=Binding.PublicKey')]
    public ?string $bindingPublicKey = null;
    
    /**
     * The shared secret for TOTP factors encoded in Base32. This can be provided when creating the Factor, otherwise it will be generated.
     * 
     * 
     * Used when `factor_type` is `totp`
     * 
     * @var ?string $bindingSecret
     */
	#[SpeakeasyMetadata('form:name=Binding.Secret')]
    public ?string $bindingSecret = null;
    
	#[SpeakeasyMetadata('form:name=Config.Alg')]
    public ?\OpenAPI\OpenAPI\Models\Shared\NewFactorEnumTotpAlgorithmsEnum $configAlg = null;
    
    /**
     * The ID that uniquely identifies your app in the Google or Apple store, such as `com.example.myapp`. It can be up to 100 characters long.
     * 
     * 
     * Required when `factor_type` is `push`.
     * 
     * @var ?string $configAppId
     */
	#[SpeakeasyMetadata('form:name=Config.AppId')]
    public ?string $configAppId = null;
    
    /**
     * Number of digits for generated TOTP codes. Must be between 3 and 8, inclusive. The default value is defined at the service level in the property `totp.code_length`. If not configured defaults to 6.
     * 
     * 
     * Used when `factor_type` is `totp`
     * 
     * @var ?int $configCodeLength
     */
	#[SpeakeasyMetadata('form:name=Config.CodeLength')]
    public ?int $configCodeLength = null;
    
	#[SpeakeasyMetadata('form:name=Config.NotificationPlatform')]
    public ?\OpenAPI\OpenAPI\Models\Shared\NewFactorEnumNotificationPlatformsEnum $configNotificationPlatform = null;
    
    /**
     * For APN, the device token. For FCM, the registration token. It is used to send the push notifications. Must be between 32 and 255 characters long.
     * 
     * 
     * Required when `factor_type` is `push`.
     * 
     * @var ?string $configNotificationToken
     */
	#[SpeakeasyMetadata('form:name=Config.NotificationToken')]
    public ?string $configNotificationToken = null;
    
    /**
     * The Verify Push SDK version used to configure the factor
     * 
     * 
     * Required when `factor_type` is `push`
     * 
     * @var ?string $configSDKVersion
     */
	#[SpeakeasyMetadata('form:name=Config.SdkVersion')]
    public ?string $configSDKVersion = null;
    
    /**
     * The number of time-steps, past and future, that are valid for validation of TOTP codes. Must be between 0 and 2, inclusive. The default value is defined at the service level in the property `totp.skew`. If not configured defaults to 1.
     * 
     * 
     * Used when `factor_type` is `totp`
     * 
     * @var ?int $configSkew
     */
	#[SpeakeasyMetadata('form:name=Config.Skew')]
    public ?int $configSkew = null;
    
    /**
     * Defines how often, in seconds, are TOTP codes generated. i.e, a new TOTP code is generated every time_step seconds. Must be between 20 and 60 seconds, inclusive. The default value is defined at the service level in the property `totp.time_step`. Defaults to 30 seconds if not configured.
     * 
     * 
     * Used when `factor_type` is `totp`
     * 
     * @var ?int $configTimeStep
     */
	#[SpeakeasyMetadata('form:name=Config.TimeStep')]
    public ?int $configTimeStep = null;
    
	#[SpeakeasyMetadata('form:name=FactorType')]
    public \OpenAPI\OpenAPI\Models\Shared\NewFactorEnumFactorTypesEnum $factorType;
    
    /**
     * The friendly name of this Factor. This can be any string up to 64 characters, meant for humans to distinguish between Factors.
     * 
     * For `factor_type` `push`, this could be a device name.
     * For `factor_type` `totp`, this value is used as the “account name” in constructing the `binding.uri` property.
     * At the same time, we recommend avoiding providing PII.
     * 
     * @var string $friendlyName
     */
	#[SpeakeasyMetadata('form:name=FriendlyName')]
    public string $friendlyName;
    
    /**
     * Custom metadata associated with the factor. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{"os": "Android"}`. Can be up to 1024 characters in length.
     * 
     * @var mixed $metadata
     */
	#[SpeakeasyMetadata('form:name=Metadata')]
    public mixed $metadata = null;
    
	public function __construct()
	{
		$this->bindingAlg = null;
		$this->bindingPublicKey = null;
		$this->bindingSecret = null;
		$this->configAlg = null;
		$this->configAppId = null;
		$this->configCodeLength = null;
		$this->configNotificationPlatform = null;
		$this->configNotificationToken = null;
		$this->configSDKVersion = null;
		$this->configSkew = null;
		$this->configTimeStep = null;
		$this->factorType = \OpenAPI\OpenAPI\Models\Shared\NewFactorEnumFactorTypesEnum::PUSH;
		$this->friendlyName = "";
		$this->metadata = null;
	}
}
