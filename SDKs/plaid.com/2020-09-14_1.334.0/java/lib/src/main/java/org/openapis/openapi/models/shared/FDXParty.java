/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FDXParty - FDX Participant - an entity or person that is a part of a FDX API transaction
 */
public class FDXParty {
    /**
     * URI for party, where an end user could learn more about the company or application involved in the data sharing chain
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("homeUri")
    public String homeUri;
    public FDXParty withHomeUri(String homeUri) {
        this.homeUri = homeUri;
        return this;
    }
    
    /**
     * URI for a logo asset to be displayed to the end user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logoUri")
    public String logoUri;
    public FDXParty withLogoUri(String logoUri) {
        this.logoUri = logoUri;
        return this;
    }
    
    /**
     * Human recognizable common name
     */
    @JsonProperty("name")
    public String name;
    public FDXParty withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Registered id of party
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registeredEntityId")
    public String registeredEntityId;
    public FDXParty withRegisteredEntityId(String registeredEntityId) {
        this.registeredEntityId = registeredEntityId;
        return this;
    }
    
    /**
     * Registered name of party
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registeredEntityName")
    public String registeredEntityName;
    public FDXParty withRegisteredEntityName(String registeredEntityName) {
        this.registeredEntityName = registeredEntityName;
        return this;
    }
    
    /**
     * The registry containing the party\u2019s registration with name and id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registry")
    public FDXPartyRegistryEnum registry;
    public FDXParty withRegistry(FDXPartyRegistryEnum registry) {
        this.registry = registry;
        return this;
    }
    
    /**
     * Identifies the type of a party
     */
    @JsonProperty("type")
    public FDXPartyTypeEnum type;
    public FDXParty withType(FDXPartyTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
