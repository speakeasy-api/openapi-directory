/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MfaConfig } from "./mfaconfig";
import { ObjectExpiration } from "./objectexpiration";
import { UserAuthData } from "./userauthdata";
import { UserAuthMethod } from "./userauthmethod";
import { Expose, Type } from "class-transformer";

/**
 * Request model for creating an user
 */
export class CreateUserRequest extends SpeakeasyBase {
  /**
   * User Authentication Data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authData" })
  @Type(() => UserAuthData)
  authData?: UserAuthData;

  /**
   * &#128679; Deprecated since v4.13.0
   *
   * @remarks
   *
   * Authentication methods:
   *
   * * `sql`
   *
   * * `active_directory`
   *
   * * `radius`
   *
   * * `openid`
   *
   * use `authData` instead
   */
  @SpeakeasyMetadata({ elemType: UserAuthMethod })
  @Expose({ name: "authMethods" })
  @Type(() => UserAuthMethod)
  authMethods?: UserAuthMethod[];

  /**
   * Email
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Expiration information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiration" })
  @Type(() => ObjectExpiration)
  expiration?: ObjectExpiration;

  /**
   * User first name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName: string;

  /**
   * &#128679; Deprecated since v4.12.0
   *
   * @remarks
   *
   * Gender
   *
   * Do NOT use `gender`! It will be ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: string;

  /**
   * &#128640; Since v4.12.0
   *
   * @remarks
   *
   * Determines whether user has the role NONMEMBER_VIEWER
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isNonmemberViewer" })
  isNonmemberViewer?: boolean;

  /**
   * User last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName: string;

  /**
   * &#128679; Deprecated since v4.13.0
   *
   * @remarks
   *
   * User login name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "login" })
  login?: string;

  /**
   * Multi-factor authentication configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mfaConfig" })
  @Type(() => MfaConfig)
  mfaConfig?: MfaConfig;

  /**
   * &#128679; Deprecated since v4.13.0
   *
   * @remarks
   *
   * Determines whether user has to change his / her initial password.
   *
   * use `authDate.mustChangePassword` instead
   */
  @SpeakeasyMetadata()
  @Expose({ name: "needsToChangePassword" })
  needsToChangePassword?: boolean;

  /**
   * &#128640; Since v4.9.0
   *
   * @remarks
   *
   * Notify user about his new account
   *
   * * default: `true` for `basic` auth type
   *
   * * default: `false` for `active_directory`, `openid` and `radius` auth types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notifyUser" })
  notifyUser?: boolean;

  /**
   * &#128679; Deprecated since v4.13.0
   *
   * @remarks
   *
   * An initial password may be preset
   *
   * use `authData` instead
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * Phone number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * IETF language tag
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverLanguage" })
  receiverLanguage?: string;

  /**
   * &#128679; Deprecated since v4.18.0
   *
   * @remarks
   *
   * Job title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * &#128640; Since v4.13.0
   *
   * @remarks
   *
   * Username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userName" })
  userName?: string;
}
