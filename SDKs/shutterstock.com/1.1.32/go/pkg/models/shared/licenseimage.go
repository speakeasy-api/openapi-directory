// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LicenseImageFormatEnum - (Deprecated) Image format to download
type LicenseImageFormatEnum string

const (
	LicenseImageFormatEnumJpg LicenseImageFormatEnum = "jpg"
)

func (e LicenseImageFormatEnum) ToPointer() *LicenseImageFormatEnum {
	return &e
}

func (e *LicenseImageFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "jpg":
		*e = LicenseImageFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseImageFormatEnum: %v", v)
	}
}

// LicenseImageSizeEnum - Image size to download
type LicenseImageSizeEnum string

const (
	LicenseImageSizeEnumSmall  LicenseImageSizeEnum = "small"
	LicenseImageSizeEnumMedium LicenseImageSizeEnum = "medium"
	LicenseImageSizeEnumHuge   LicenseImageSizeEnum = "huge"
	LicenseImageSizeEnumCustom LicenseImageSizeEnum = "custom"
)

func (e LicenseImageSizeEnum) ToPointer() *LicenseImageSizeEnum {
	return &e
}

func (e *LicenseImageSizeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "small":
		fallthrough
	case "medium":
		fallthrough
	case "huge":
		fallthrough
	case "custom":
		*e = LicenseImageSizeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseImageSizeEnum: %v", v)
	}
}

// LicenseImage - Data required to license an image
type LicenseImage struct {
	// Cookie object
	AuthCookie *Cookie `json:"auth_cookie,omitempty"`
	// A custom height or a custom width to resize the image to, but not both (experimental)
	CustomDimensions *CustomSizeDimensions `json:"custom_dimensions,omitempty"`
	// Set to true to acknowledge the editorial agreement
	EditorialAcknowledgement *bool `json:"editorial_acknowledgement,omitempty"`
	// (Deprecated) Image format to download
	Format *LicenseImageFormatEnum `json:"format,omitempty"`
	// Image ID
	ImageID string `json:"image_id"`
	// Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// For revenue-sharing transactions, the final cost to the end customer as a floating-point number in the transaction currency, such as 12.34
	Price *float64 `json:"price,omitempty"`
	// ID of the search that led to this licensing transaction
	SearchID *string `json:"search_id,omitempty"`
	// (Deprecated)
	ShowModal *bool `json:"show_modal,omitempty"`
	// Image size to download
	Size *LicenseImageSizeEnum `json:"size,omitempty"`
	// ID of the subscription to use for the download.
	SubscriptionID *string `json:"subscription_id,omitempty"`
	// (Deprecated)
	VerificationCode *string `json:"verification_code,omitempty"`
}
