/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PersonalUsagePolicies - Policies controlling personal usage on a company-owned device with a work profile.
 */
public class PersonalUsagePolicies {
    /**
     * Account types that can't be managed by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountTypesWithManagementDisabled")
    public String[] accountTypesWithManagementDisabled;

    public PersonalUsagePolicies withAccountTypesWithManagementDisabled(String[] accountTypesWithManagementDisabled) {
        this.accountTypesWithManagementDisabled = accountTypesWithManagementDisabled;
        return this;
    }
    
    /**
     * If true, the camera is disabled on the personal profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cameraDisabled")
    public Boolean cameraDisabled;

    public PersonalUsagePolicies withCameraDisabled(Boolean cameraDisabled) {
        this.cameraDisabled = cameraDisabled;
        return this;
    }
    
    /**
     * Controls how long the work profile can stay off. The duration must be at least 3 days.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDaysWithWorkOff")
    public Integer maxDaysWithWorkOff;

    public PersonalUsagePolicies withMaxDaysWithWorkOff(Integer maxDaysWithWorkOff) {
        this.maxDaysWithWorkOff = maxDaysWithWorkOff;
        return this;
    }
    
    /**
     * Policy applied to applications in the personal profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("personalApplications")
    public PersonalApplicationPolicy[] personalApplications;

    public PersonalUsagePolicies withPersonalApplications(PersonalApplicationPolicy[] personalApplications) {
        this.personalApplications = personalApplications;
        return this;
    }
    
    /**
     * Used together with personalApplications to control how apps in the personal profile are allowed or blocked.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("personalPlayStoreMode")
    public PersonalUsagePoliciesPersonalPlayStoreModeEnum personalPlayStoreMode;

    public PersonalUsagePolicies withPersonalPlayStoreMode(PersonalUsagePoliciesPersonalPlayStoreModeEnum personalPlayStoreMode) {
        this.personalPlayStoreMode = personalPlayStoreMode;
        return this;
    }
    
    /**
     * If true, screen capture is disabled for all users.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("screenCaptureDisabled")
    public Boolean screenCaptureDisabled;

    public PersonalUsagePolicies withScreenCaptureDisabled(Boolean screenCaptureDisabled) {
        this.screenCaptureDisabled = screenCaptureDisabled;
        return this;
    }
    
    public PersonalUsagePolicies(){}
}
