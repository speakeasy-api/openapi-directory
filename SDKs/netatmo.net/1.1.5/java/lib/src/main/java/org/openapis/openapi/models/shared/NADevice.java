/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NADevice {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_id")
    public String id;

    public NADevice withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("behavior")
    public Integer behavior;

    public NADevice withBehavior(Integer behavior) {
        this.behavior = behavior;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cipher_id")
    public String cipherId;

    public NADevice withCipherId(String cipherId) {
        this.cipherId = cipherId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dashboard_data")
    public NADashboardData dashboardData;

    public NADevice withDashboardData(NADashboardData dashboardData) {
        this.dashboardData = dashboardData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data_type")
    public String[] dataType;

    public NADevice withDataType(String[] dataType) {
        this.dataType = dataType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_setup")
    public NADate dateSetup;

    public NADevice withDateSetup(NADate dateSetup) {
        this.dateSetup = dateSetup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firmware")
    public Integer firmware;

    public NADevice withFirmware(Integer firmware) {
        this.firmware = firmware;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_pid_avail")
    public Boolean firstPidAvail;

    public NADevice withFirstPidAvail(Boolean firstPidAvail) {
        this.firstPidAvail = firstPidAvail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("heating_system")
    public NAHeatingSystem heatingSystem;

    public NADevice withHeatingSystem(NAHeatingSystem heatingSystem) {
        this.heatingSystem = heatingSystem;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("house_model")
    public NAHouseModel houseModel;

    public NADevice withHouseModel(NAHouseModel houseModel) {
        this.houseModel = houseModel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hw_version")
    public Integer hwVersion;

    public NADevice withHwVersion(Integer hwVersion) {
        this.hwVersion = hwVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip")
    public String ip;

    public NADevice withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_fw_update")
    public Integer lastFwUpdate;

    public NADevice withLastFwUpdate(Integer lastFwUpdate) {
        this.lastFwUpdate = lastFwUpdate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_radio_store")
    public Integer lastRadioStore;

    public NADevice withLastRadioStore(Integer lastRadioStore) {
        this.lastRadioStore = lastRadioStore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_status_store")
    public Integer lastStatusStore;

    public NADevice withLastStatusStore(Integer lastStatusStore) {
        this.lastStatusStore = lastStatusStore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_upgrade")
    public Integer lastUpgrade;

    public NADevice withLastUpgrade(Integer lastUpgrade) {
        this.lastUpgrade = lastUpgrade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("module_name")
    public String moduleName;

    public NADevice withModuleName(String moduleName) {
        this.moduleName = moduleName;
        return this;
    }
    
    /**
     * It lists which modules are linked with this device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modules")
    public String[] modules;

    public NADevice withModules(String[] modules) {
        this.modules = modules;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_feature_avail")
    public Boolean newFeatureAvail;

    public NADevice withNewFeatureAvail(Boolean newFeatureAvail) {
        this.newFeatureAvail = newFeatureAvail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("place")
    public NAPlace place;

    public NADevice withPlace(NAPlace place) {
        this.place = place;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_ext_data")
    public Boolean publicExtData;

    public NADevice withPublicExtData(Boolean publicExtData) {
        this.publicExtData = publicExtData;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setpoint")
    public java.util.Map<String, Object> setpoint;

    public NADevice withSetpoint(java.util.Map<String, Object> setpoint) {
        this.setpoint = setpoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setpoint_default_duration")
    public Integer setpointDefaultDuration;

    public NADevice withSetpointDefaultDuration(Integer setpointDefaultDuration) {
        this.setpointDefaultDuration = setpointDefaultDuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setpoint_order")
    public java.util.Map<String, NAObject[]> setpointOrder;

    public NADevice withSetpointOrder(java.util.Map<String, NAObject[]> setpointOrder) {
        this.setpointOrder = setpointOrder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("station_name")
    public String stationName;

    public NADevice withStationName(String stationName) {
        this.stationName = stationName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("therm_program")
    public java.util.Map<String, NAThermProgram> thermProgram;

    public NADevice withThermProgram(java.util.Map<String, NAThermProgram> thermProgram) {
        this.thermProgram = thermProgram;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("therm_program_backup")
    public java.util.Map<String, NAThermProgram[]> thermProgramBackup;

    public NADevice withThermProgramBackup(java.util.Map<String, NAThermProgram[]> thermProgramBackup) {
        this.thermProgramBackup = thermProgramBackup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("therm_program_order")
    public java.util.Map<String, NAObject[]> thermProgramOrder;

    public NADevice withThermProgramOrder(java.util.Map<String, NAObject[]> thermProgramOrder) {
        this.thermProgramOrder = thermProgramOrder;
        return this;
    }
    
    /**
     * Included in every device or module. It defines the type of the device/module. Its values are among :
     * NAMain : for the base station
     * NAModule1 : for the outdoor module
     * NAModule4 : for the additionnal indoor module
     * NAModule3 : for the rain gauge module
     * NAPlug : for the thermostat relay/plug
     * NATherm1 : for the thermostat module
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public NADevice withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("udp_conn")
    public Boolean udpConn;

    public NADevice withUdpConn(Boolean udpConn) {
        this.udpConn = udpConn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_owner")
    public String[] userOwner;

    public NADevice withUserOwner(String[] userOwner) {
        this.userOwner = userOwner;
        return this;
    }
    
    /**
     * It contains the current wifi status. The different thresholds to take into account are
     * RSSI_THRESHOLD_0 = 86 bad signal
     * RSSI_THRESHOLD_1 = 71 middle quality signal
     * RSSI_THRESHOLD_2 = 56 good signal
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifi_status")
    public Integer wifiStatus;

    public NADevice withWifiStatus(Integer wifiStatus) {
        this.wifiStatus = wifiStatus;
        return this;
    }
    
    public NADevice(){}
}
