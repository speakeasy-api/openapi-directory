"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddataplexv1taskexecutionspec as shared_googleclouddataplexv1taskexecutionspec
from ..shared import googleclouddataplexv1taskexecutionstatus as shared_googleclouddataplexv1taskexecutionstatus
from ..shared import googleclouddataplexv1tasknotebooktaskconfig as shared_googleclouddataplexv1tasknotebooktaskconfig
from ..shared import googleclouddataplexv1tasksparktaskconfig as shared_googleclouddataplexv1tasksparktaskconfig
from ..shared import googleclouddataplexv1tasktriggerspec as shared_googleclouddataplexv1tasktriggerspec
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDataplexV1TaskStateEnum(str, Enum):
    r"""Output only. Current state of the task."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    ACTION_REQUIRED = 'ACTION_REQUIRED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1Task:
    r"""A task represents a user-visible job."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the task was created."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. Description of the task."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Optional. User friendly display name."""  
    execution_spec: Optional[shared_googleclouddataplexv1taskexecutionspec.GoogleCloudDataplexV1TaskExecutionSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionSpec'), 'exclude': lambda f: f is None }})
    r"""Execution related settings, like retry and service_account."""  
    execution_status: Optional[shared_googleclouddataplexv1taskexecutionstatus.GoogleCloudDataplexV1TaskExecutionStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionStatus'), 'exclude': lambda f: f is None }})
    r"""Status of the task execution (e.g. Jobs)."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Optional. User-defined labels for the task."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The relative resource name of the task, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/ tasks/{task_id}."""  
    notebook: Optional[shared_googleclouddataplexv1tasknotebooktaskconfig.GoogleCloudDataplexV1TaskNotebookTaskConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notebook'), 'exclude': lambda f: f is None }})
    r"""Config for running scheduled notebooks."""  
    spark: Optional[shared_googleclouddataplexv1tasksparktaskconfig.GoogleCloudDataplexV1TaskSparkTaskConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spark'), 'exclude': lambda f: f is None }})
    r"""User-specified config for running a Spark task."""  
    state: Optional[GoogleCloudDataplexV1TaskStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. Current state of the task."""  
    trigger_spec: Optional[shared_googleclouddataplexv1tasktriggerspec.GoogleCloudDataplexV1TaskTriggerSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerSpec'), 'exclude': lambda f: f is None }})
    r"""Task scheduling and trigger settings."""  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})
    r"""Output only. System generated globally unique ID for the task. This ID will be different if the task is deleted and re-created with the same name."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the task was last updated."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1TaskInput:
    r"""A task represents a user-visible job."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. Description of the task."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Optional. User friendly display name."""  
    execution_spec: Optional[shared_googleclouddataplexv1taskexecutionspec.GoogleCloudDataplexV1TaskExecutionSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionSpec'), 'exclude': lambda f: f is None }})
    r"""Execution related settings, like retry and service_account."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Optional. User-defined labels for the task."""  
    notebook: Optional[shared_googleclouddataplexv1tasknotebooktaskconfig.GoogleCloudDataplexV1TaskNotebookTaskConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notebook'), 'exclude': lambda f: f is None }})
    r"""Config for running scheduled notebooks."""  
    spark: Optional[shared_googleclouddataplexv1tasksparktaskconfig.GoogleCloudDataplexV1TaskSparkTaskConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spark'), 'exclude': lambda f: f is None }})
    r"""User-specified config for running a Spark task."""  
    trigger_spec: Optional[shared_googleclouddataplexv1tasktriggerspec.GoogleCloudDataplexV1TaskTriggerSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerSpec'), 'exclude': lambda f: f is None }})
    r"""Task scheduling and trigger settings."""  
    