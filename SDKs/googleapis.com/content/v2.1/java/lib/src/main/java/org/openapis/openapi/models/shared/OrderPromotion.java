/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderPromotion {
    /**
     * Items that this promotion may be applied to. If empty, there are no restrictions on applicable items and quantity. This field will also be empty for shipping promotions because shipping is not tied to any specific item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicableItems")
    public OrderPromotionItem[] applicableItems;

    public OrderPromotion withApplicableItems(OrderPromotionItem[] applicableItems) {
        this.applicableItems = applicableItems;
        return this;
    }
    
    /**
     * Items that this promotion have been applied to. Do not provide for `orders.createtestorder`. This field will be empty for shipping promotions because shipping is not tied to any specific item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedItems")
    public OrderPromotionItem[] appliedItems;

    public OrderPromotion withAppliedItems(OrderPromotionItem[] appliedItems) {
        this.appliedItems = appliedItems;
        return this;
    }
    
    /**
     * Promotion end time in ISO 8601 format. Date, time, and offset required, for example, "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public OrderPromotion withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Required. The party funding the promotion. Only `merchant` is supported for `orders.createtestorder`. Acceptable values are: - "`google`" - "`merchant`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("funder")
    public String funder;

    public OrderPromotion withFunder(String funder) {
        this.funder = funder;
        return this;
    }
    
    /**
     * Required. This field is used to identify promotions within merchants' own systems.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantPromotionId")
    public String merchantPromotionId;

    public OrderPromotion withMerchantPromotionId(String merchantPromotionId) {
        this.merchantPromotionId = merchantPromotionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceValue")
    public Price priceValue;

    public OrderPromotion withPriceValue(Price priceValue) {
        this.priceValue = priceValue;
        return this;
    }
    
    /**
     * A short title of the promotion to be shown on the checkout page. Do not provide for `orders.createtestorder`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shortTitle")
    public String shortTitle;

    public OrderPromotion withShortTitle(String shortTitle) {
        this.shortTitle = shortTitle;
        return this;
    }
    
    /**
     * Promotion start time in ISO 8601 format. Date, time, and offset required, for example, "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public OrderPromotion withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Required. The category of the promotion. Only `moneyOff` is supported for `orders.createtestorder`. Acceptable values are: - "`buyMGetMoneyOff`" - "`buyMGetNMoneyOff`" - "`buyMGetNPercentOff`" - "`buyMGetPercentOff`" - "`freeGift`" - "`freeGiftWithItemId`" - "`freeGiftWithValue`" - "`freeShippingOvernight`" - "`freeShippingStandard`" - "`freeShippingTwoDay`" - "`moneyOff`" - "`percentOff`" - "`rewardPoints`" - "`salePrice`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtype")
    public String subtype;

    public OrderPromotion withSubtype(String subtype) {
        this.subtype = subtype;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxValue")
    public Price taxValue;

    public OrderPromotion withTaxValue(Price taxValue) {
        this.taxValue = taxValue;
        return this;
    }
    
    /**
     * Required. The title of the promotion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public OrderPromotion withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Required. The scope of the promotion. Only `product` is supported for `orders.createtestorder`. Acceptable values are: - "`product`" - "`shipping`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public OrderPromotion withType(String type) {
        this.type = type;
        return this;
    }
    
    public OrderPromotion(){}
}
