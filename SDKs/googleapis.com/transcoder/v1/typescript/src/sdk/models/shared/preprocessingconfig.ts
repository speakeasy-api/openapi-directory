/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Audio } from "./audio";
import { Color } from "./color";
import { Crop } from "./crop";
import { Deblock } from "./deblock";
import { Deinterlace } from "./deinterlace";
import { Denoise } from "./denoise";
import { Pad } from "./pad";
import { Expose, Type } from "class-transformer";

/**
 * Preprocessing configurations.
 */
export class PreprocessingConfig extends SpeakeasyBase {
  /**
   * Audio preprocessing configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audio" })
  @Type(() => Audio)
  audio?: Audio;

  /**
   * Color preprocessing configuration. **Note:** This configuration is not supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  @Type(() => Color)
  color?: Color;

  /**
   * Video cropping configuration for the input video. The cropped input video is scaled to match the output resolution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crop" })
  @Type(() => Crop)
  crop?: Crop;

  /**
   * Deblock preprocessing configuration. **Note:** This configuration is not supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deblock" })
  @Type(() => Deblock)
  deblock?: Deblock;

  /**
   * Deinterlace configuration for input video.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deinterlace" })
  @Type(() => Deinterlace)
  deinterlace?: Deinterlace;

  /**
   * Denoise preprocessing configuration. **Note:** This configuration is not supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "denoise" })
  @Type(() => Denoise)
  denoise?: Denoise;

  /**
   * Pad filter configuration for the input video. The padded input video is scaled after padding with black to match the output resolution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pad" })
  @Type(() => Pad)
  pad?: Pad;
}
