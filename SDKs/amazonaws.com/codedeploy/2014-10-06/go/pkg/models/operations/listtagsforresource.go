// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListTagsForResourceXAmzTargetEnum
type ListTagsForResourceXAmzTargetEnum string

const (
	ListTagsForResourceXAmzTargetEnumCodeDeploy20141006ListTagsForResource ListTagsForResourceXAmzTargetEnum = "CodeDeploy_20141006.ListTagsForResource"
)

func (e *ListTagsForResourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeDeploy_20141006.ListTagsForResource":
		*e = ListTagsForResourceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTagsForResourceXAmzTargetEnum: %s", s)
	}
}

type ListTagsForResourceHeaders struct {
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListTagsForResourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListTagsForResourceRequest struct {
	Headers ListTagsForResourceHeaders
	Request shared.ListTagsForResourceInput `request:"mediaType=application/json"`
}

type ListTagsForResourceResponse struct {
	// ArnNotSupportedException
	ArnNotSupportedException interface{}
	ContentType              string
	// InvalidArnException
	InvalidArnException interface{}
	// Success
	ListTagsForResourceOutput *shared.ListTagsForResourceOutput
	StatusCode                int
	RawResponse               *http.Response
	// ResourceArnRequiredException
	ResourceArnRequiredException interface{}
}
