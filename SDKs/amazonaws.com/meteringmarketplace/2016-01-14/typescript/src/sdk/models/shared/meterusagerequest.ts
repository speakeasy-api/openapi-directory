/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UsageAllocation } from "./usageallocation";
import { Expose, Transform, Type } from "class-transformer";

export class MeterUsageRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DryRun" })
  dryRun?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductCode" })
  productCode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  @SpeakeasyMetadata({ elemType: UsageAllocation })
  @Expose({ name: "UsageAllocations" })
  @Type(() => UsageAllocation)
  usageAllocations?: UsageAllocation[];

  @SpeakeasyMetadata()
  @Expose({ name: "UsageDimension" })
  usageDimension: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UsageQuantity" })
  usageQuantity?: number;
}
