/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class RuleExecutionReporting {
    /**
     * The count of affected active products
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeAffectedProductCount")
    public Long activeAffectedProductCount;

    public RuleExecutionReporting withActiveAffectedProductCount(Long activeAffectedProductCount) {
        this.activeAffectedProductCount = activeAffectedProductCount;
        return this;
    }
    
    /**
     * The count of affected Channels across all products
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("affectedChannelCount")
    public Long affectedChannelCount;

    public RuleExecutionReporting withAffectedChannelCount(Long affectedChannelCount) {
        this.affectedChannelCount = affectedChannelCount;
        return this;
    }
    
    /**
     * The count of affected products, active or not
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("affectedProductCount")
    public Long affectedProductCount;

    public RuleExecutionReporting withAffectedProductCount(Long affectedProductCount) {
        this.affectedProductCount = affectedProductCount;
        return this;
    }
    
    /**
     * The completed utc date of the execution of the rule
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("completedUtcDate")
    public OffsetDateTime completedUtcDate;

    public RuleExecutionReporting withCompletedUtcDate(OffsetDateTime completedUtcDate) {
        this.completedUtcDate = completedUtcDate;
        return this;
    }
    
    /**
     * The error type for this execution if any
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorType")
    public RuleExecutionReportingErrorTypeEnum errorType;

    public RuleExecutionReporting withErrorType(RuleExecutionReportingErrorTypeEnum errorType) {
        this.errorType = errorType;
        return this;
    }
    
    /**
     * The requestor type for the execution of the rule
     */
    @JsonProperty("executionSource")
    public RuleExecutionReportingExecutionSourceEnum executionSource;

    public RuleExecutionReporting withExecutionSource(RuleExecutionReportingExecutionSourceEnum executionSource) {
        this.executionSource = executionSource;
        return this;
    }
    
    /**
     * Links to retrieve/action on this rule execution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public RuleExecutionReportingLinks links;

    public RuleExecutionReporting withLinks(RuleExecutionReportingLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * The optimisation action
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optimisationActionName")
    public OptimisationActionNameEnum optimisationActionName;

    public RuleExecutionReporting withOptimisationActionName(OptimisationActionNameEnum optimisationActionName) {
        this.optimisationActionName = optimisationActionName;
        return this;
    }
    
    /**
     * The url for the excel report for this execution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportUrl")
    public String reportUrl;

    public RuleExecutionReporting withReportUrl(String reportUrl) {
        this.reportUrl = reportUrl;
        return this;
    }
    
    /**
     * The rule identifier
     */
    @JsonProperty("ruleId")
    public String ruleId;

    public RuleExecutionReporting withRuleId(String ruleId) {
        this.ruleId = ruleId;
        return this;
    }
    
    /**
     * The name of the rule
     */
    @JsonProperty("ruleName")
    public String ruleName;

    public RuleExecutionReporting withRuleName(String ruleName) {
        this.ruleName = ruleName;
        return this;
    }
    
    /**
     * The start utc date of the execution of the rule
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startedUtcDate")
    public OffsetDateTime startedUtcDate;

    public RuleExecutionReporting withStartedUtcDate(OffsetDateTime startedUtcDate) {
        this.startedUtcDate = startedUtcDate;
        return this;
    }
    
    /**
     * The status of the execution of the rule
     */
    @JsonProperty("status")
    public RuleExecutionReportingStatusEnum status;

    public RuleExecutionReporting withStatus(RuleExecutionReportingStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The userId that executed the rule if any
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userId")
    public String userId;

    public RuleExecutionReporting withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public RuleExecutionReporting(@JsonProperty("executionSource") RuleExecutionReportingExecutionSourceEnum executionSource, @JsonProperty("ruleId") String ruleId, @JsonProperty("ruleName") String ruleName, @JsonProperty("status") RuleExecutionReportingStatusEnum status) {
        this.executionSource = executionSource;
        this.ruleId = ruleId;
        this.ruleName = ruleName;
        this.status = status;
  }
}
