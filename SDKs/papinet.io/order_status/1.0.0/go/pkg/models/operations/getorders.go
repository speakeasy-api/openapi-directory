// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetOrdersOrderStatusEnum - Filter by status
type GetOrdersOrderStatusEnum string

const (
	GetOrdersOrderStatusEnumActive    GetOrdersOrderStatusEnum = "Active"
	GetOrdersOrderStatusEnumCancelled GetOrdersOrderStatusEnum = "Cancelled"
	GetOrdersOrderStatusEnumCompleted GetOrdersOrderStatusEnum = "Completed"
)

func (e GetOrdersOrderStatusEnum) ToPointer() *GetOrdersOrderStatusEnum {
	return &e
}

func (e *GetOrdersOrderStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Active":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Completed":
		*e = GetOrdersOrderStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrdersOrderStatusEnum: %v", v)
	}
}

type GetOrdersRequest struct {
	// The maximum number of items to return. If the value exceeds the maximum, then the maximum value will be used.
	Limit *string `queryParam:"style=form,explode=true,name=limit"`
	// The number of items to skip before starting to collect the result set.
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// Filter by status
	OrderStatus *GetOrdersOrderStatusEnum `queryParam:"style=form,explode=true,name=orderStatus"`
}

type GetOrdersResponse struct {
	ContentType string
	// OK
	ListOfOrders *shared.ListOfOrders
	StatusCode   int
	RawResponse  *http.Response
}
