"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import putparameterrequest as shared_putparameterrequest
from ..shared import putparameterresult as shared_putparameterresult
from enum import Enum
from typing import Any, Optional

class PutParameterXAmzTargetEnum(str, Enum):
    AMAZON_SSM_PUT_PARAMETER = 'AmazonSSM.PutParameter'


@dataclasses.dataclass
class PutParameterRequest:
    
    put_parameter_request: shared_putparameterrequest.PutParameterRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: PutParameterXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class PutParameterResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    hierarchy_level_limit_exceeded_exception: Optional[Any] = dataclasses.field(default=None)
    r"""HierarchyLevelLimitExceededException"""  
    hierarchy_type_mismatch_exception: Optional[Any] = dataclasses.field(default=None)
    r"""HierarchyTypeMismatchException"""  
    incompatible_policy_exception: Optional[Any] = dataclasses.field(default=None)
    r"""IncompatiblePolicyException"""  
    internal_server_error: Optional[Any] = dataclasses.field(default=None)
    r"""InternalServerError"""  
    invalid_allowed_pattern_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidAllowedPatternException"""  
    invalid_key_id: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidKeyId"""  
    invalid_policy_attribute_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidPolicyAttributeException"""  
    invalid_policy_type_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidPolicyTypeException"""  
    parameter_already_exists: Optional[Any] = dataclasses.field(default=None)
    r"""ParameterAlreadyExists"""  
    parameter_limit_exceeded: Optional[Any] = dataclasses.field(default=None)
    r"""ParameterLimitExceeded"""  
    parameter_max_version_limit_exceeded: Optional[Any] = dataclasses.field(default=None)
    r"""ParameterMaxVersionLimitExceeded"""  
    parameter_pattern_mismatch_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ParameterPatternMismatchException"""  
    policies_limit_exceeded_exception: Optional[Any] = dataclasses.field(default=None)
    r"""PoliciesLimitExceededException"""  
    put_parameter_result: Optional[shared_putparameterresult.PutParameterResult] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    too_many_updates: Optional[Any] = dataclasses.field(default=None)
    r"""TooManyUpdates"""  
    unsupported_parameter_type: Optional[Any] = dataclasses.field(default=None)
    r"""UnsupportedParameterType"""  
    