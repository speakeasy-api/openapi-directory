// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type StorageBucketsUpdateSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsUpdateSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsUpdateSecurity struct {
	Option1 *StorageBucketsUpdateSecurityOption1 `security:"option"`
	Option2 *StorageBucketsUpdateSecurityOption2 `security:"option"`
}

type StorageBucketsUpdatePathParams struct {
	// Name of a bucket.
	Bucket string `pathParam:"style=simple,explode=false,name=bucket"`
}

// StorageBucketsUpdatePredefinedACLEnum - Apply a predefined set of access controls to this bucket.
type StorageBucketsUpdatePredefinedACLEnum string

const (
	StorageBucketsUpdatePredefinedACLEnumAuthenticatedRead StorageBucketsUpdatePredefinedACLEnum = "authenticatedRead"
	StorageBucketsUpdatePredefinedACLEnumPrivate           StorageBucketsUpdatePredefinedACLEnum = "private"
	StorageBucketsUpdatePredefinedACLEnumProjectPrivate    StorageBucketsUpdatePredefinedACLEnum = "projectPrivate"
	StorageBucketsUpdatePredefinedACLEnumPublicRead        StorageBucketsUpdatePredefinedACLEnum = "publicRead"
	StorageBucketsUpdatePredefinedACLEnumPublicReadWrite   StorageBucketsUpdatePredefinedACLEnum = "publicReadWrite"
)

func (e *StorageBucketsUpdatePredefinedACLEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "authenticatedRead":
		fallthrough
	case "private":
		fallthrough
	case "projectPrivate":
		fallthrough
	case "publicRead":
		fallthrough
	case "publicReadWrite":
		*e = StorageBucketsUpdatePredefinedACLEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageBucketsUpdatePredefinedACLEnum: %s", s)
	}
}

// StorageBucketsUpdatePredefinedDefaultObjectACLEnum - Apply a predefined set of default object access controls to this bucket.
type StorageBucketsUpdatePredefinedDefaultObjectACLEnum string

const (
	StorageBucketsUpdatePredefinedDefaultObjectACLEnumAuthenticatedRead      StorageBucketsUpdatePredefinedDefaultObjectACLEnum = "authenticatedRead"
	StorageBucketsUpdatePredefinedDefaultObjectACLEnumBucketOwnerFullControl StorageBucketsUpdatePredefinedDefaultObjectACLEnum = "bucketOwnerFullControl"
	StorageBucketsUpdatePredefinedDefaultObjectACLEnumBucketOwnerRead        StorageBucketsUpdatePredefinedDefaultObjectACLEnum = "bucketOwnerRead"
	StorageBucketsUpdatePredefinedDefaultObjectACLEnumPrivate                StorageBucketsUpdatePredefinedDefaultObjectACLEnum = "private"
	StorageBucketsUpdatePredefinedDefaultObjectACLEnumProjectPrivate         StorageBucketsUpdatePredefinedDefaultObjectACLEnum = "projectPrivate"
	StorageBucketsUpdatePredefinedDefaultObjectACLEnumPublicRead             StorageBucketsUpdatePredefinedDefaultObjectACLEnum = "publicRead"
)

func (e *StorageBucketsUpdatePredefinedDefaultObjectACLEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "authenticatedRead":
		fallthrough
	case "bucketOwnerFullControl":
		fallthrough
	case "bucketOwnerRead":
		fallthrough
	case "private":
		fallthrough
	case "projectPrivate":
		fallthrough
	case "publicRead":
		*e = StorageBucketsUpdatePredefinedDefaultObjectACLEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageBucketsUpdatePredefinedDefaultObjectACLEnum: %s", s)
	}
}

// StorageBucketsUpdateProjectionEnum - Set of properties to return. Defaults to full.
type StorageBucketsUpdateProjectionEnum string

const (
	StorageBucketsUpdateProjectionEnumFull  StorageBucketsUpdateProjectionEnum = "full"
	StorageBucketsUpdateProjectionEnumNoACL StorageBucketsUpdateProjectionEnum = "noAcl"
)

func (e *StorageBucketsUpdateProjectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "noAcl":
		*e = StorageBucketsUpdateProjectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageBucketsUpdateProjectionEnum: %s", s)
	}
}

type StorageBucketsUpdateQueryParams struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
	IfMetagenerationMatch *string `queryParam:"style=form,explode=true,name=ifMetagenerationMatch"`
	// Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
	IfMetagenerationNotMatch *string `queryParam:"style=form,explode=true,name=ifMetagenerationNotMatch"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Apply a predefined set of access controls to this bucket.
	PredefinedACL *StorageBucketsUpdatePredefinedACLEnum `queryParam:"style=form,explode=true,name=predefinedAcl"`
	// Apply a predefined set of default object access controls to this bucket.
	PredefinedDefaultObjectACL *StorageBucketsUpdatePredefinedDefaultObjectACLEnum `queryParam:"style=form,explode=true,name=predefinedDefaultObjectAcl"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Set of properties to return. Defaults to full.
	Projection *StorageBucketsUpdateProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Upload protocol for media (e.g. "media", "multipart", "resumable").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
	// The project to be billed for this request. Required for Requester Pays buckets.
	UserProject *string `queryParam:"style=form,explode=true,name=userProject"`
}

type StorageBucketsUpdateRequest struct {
	PathParams  StorageBucketsUpdatePathParams
	QueryParams StorageBucketsUpdateQueryParams
	Request     *shared.Bucket `request:"mediaType=application/json"`
	Security    StorageBucketsUpdateSecurity
}

type StorageBucketsUpdateResponse struct {
	// Successful response
	Bucket      *shared.Bucket
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
