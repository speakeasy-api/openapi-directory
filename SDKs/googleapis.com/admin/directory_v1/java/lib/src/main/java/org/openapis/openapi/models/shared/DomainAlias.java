/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DomainAlias - Successful response
 */
public class DomainAlias {
    /**
     * The creation time of the domain alias. (Read-only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;

    public DomainAlias withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * The domain alias name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainAliasName")
    public String domainAliasName;

    public DomainAlias withDomainAliasName(String domainAliasName) {
        this.domainAliasName = domainAliasName;
        return this;
    }
    
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public DomainAlias withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Kind of resource this is.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public DomainAlias withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentDomainName")
    public String parentDomainName;

    public DomainAlias withParentDomainName(String parentDomainName) {
        this.parentDomainName = parentDomainName;
        return this;
    }
    
    /**
     * Indicates the verification state of a domain alias. (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verified")
    public Boolean verified;

    public DomainAlias withVerified(Boolean verified) {
        this.verified = verified;
        return this;
    }
    
    public DomainAlias(){}
}
