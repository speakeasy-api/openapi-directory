/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DetectedSignature } from "./detectedsignature";
import { SplitDocument } from "./splitdocument";
import { UndetectedSignature } from "./undetectedsignature";
import { Expose, Type } from "class-transformer";

/**
 * Summary information about documents grouped by the same document type.
 */
export class DocumentGroup extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DetectedSignature })
  @Expose({ name: "DetectedSignatures" })
  @Type(() => DetectedSignature)
  detectedSignatures?: DetectedSignature[];

  @SpeakeasyMetadata({ elemType: SplitDocument })
  @Expose({ name: "SplitDocuments" })
  @Type(() => SplitDocument)
  splitDocuments?: SplitDocument[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;

  @SpeakeasyMetadata({ elemType: UndetectedSignature })
  @Expose({ name: "UndetectedSignatures" })
  @Type(() => UndetectedSignature)
  undetectedSignatures?: UndetectedSignature[];
}
