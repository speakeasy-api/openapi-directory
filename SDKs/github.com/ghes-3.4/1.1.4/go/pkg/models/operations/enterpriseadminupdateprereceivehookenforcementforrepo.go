// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum - The state of enforcement for the hook on this repository.
type EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum string

const (
	EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnumEnabled  EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum = "enabled"
	EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnumDisabled EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum = "disabled"
	EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnumTesting  EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum = "testing"
)

func (e *EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enabled":
		fallthrough
	case "disabled":
		fallthrough
	case "testing":
		*e = EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum: %s", s)
	}
}

type EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBody struct {
	// The state of enforcement for the hook on this repository.
	Enforcement *EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBodyEnforcementEnum `json:"enforcement,omitempty"`
}

type EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequest struct {
	RequestBody *EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The unique identifier of the pre-receive hook.
	PreReceiveHookID int64 `pathParam:"style=simple,explode=false,name=pre_receive_hook_id"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type EnterpriseAdminUpdatePreReceiveHookEnforcementForRepoResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	RepositoryPreReceiveHook *shared.RepositoryPreReceiveHook
}
