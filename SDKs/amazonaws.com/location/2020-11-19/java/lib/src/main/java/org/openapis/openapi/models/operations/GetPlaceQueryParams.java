/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetPlaceQueryParams {
    /**
     * &lt;p&gt;The preferred language used to return results. The value must be a valid &lt;a href="https://tools.ietf.org/search/bcp47"&gt;BCP 47&lt;/a&gt; language tag, for example, &lt;code&gt;en&lt;/code&gt; for English.&lt;/p&gt; &lt;p&gt;This setting affects the languages used in the results, but not the results themselves. If no language is specified, or not supported for a particular result, the partner automatically chooses a language for the result.&lt;/p&gt; &lt;p&gt;For an example, we'll use the Greek language. You search for a location around Athens, Greece, with the &lt;code&gt;language&lt;/code&gt; parameter set to &lt;code&gt;en&lt;/code&gt;. The &lt;code&gt;city&lt;/code&gt; in the results will most likely be returned as &lt;code&gt;Athens&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you set the &lt;code&gt;language&lt;/code&gt; parameter to &lt;code&gt;el&lt;/code&gt;, for Greek, then the &lt;code&gt;city&lt;/code&gt; in the results will more likely be returned as &lt;code&gt;\u0391\u03b8\u03ae\u03bd\u03b1&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If the data provider does not have a value for Greek, the result will be in a language that the provider does support.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=language")
    public String language;
    public GetPlaceQueryParams withLanguage(String language) {
        this.language = language;
        return this;
    }
    
}
