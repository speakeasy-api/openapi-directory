/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListUsageRecordServerList = [
  "https://supersim.twilio.com",
] as const;

export class ListUsageRecordSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListUsageRecordRequest extends SpeakeasyBase {
  /**
   * Only include usage that occurred before this time (exclusive), specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Default is the current time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EndTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  endTime?: Date;

  /**
   * SID or unique name of a Fleet resource. Only show UsageRecords representing usage for Super SIMs belonging to this Fleet resource at the time the usage occurred.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Fleet" })
  fleet?: string;

  /**
   * Time-based grouping that UsageRecords should be aggregated by. Can be: `hour`, `day`, or `all`. Default is `all`. `all` returns one UsageRecord that describes the usage for the entire period.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Granularity",
  })
  granularity?: shared.UsageRecordEnumGranularityEnum;

  /**
   * Dimension over which to aggregate usage records. Can be: `sim`, `fleet`, `network`, `isoCountry`. Default is to not aggregate across any of these dimensions, UsageRecords will be aggregated into the time buckets described by the `Granularity` parameter.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Group" })
  group?: shared.UsageRecordEnumGroupEnum;

  /**
   * Alpha-2 ISO Country Code. Only show UsageRecords representing usage in this country.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=IsoCountry",
  })
  isoCountry?: string;

  /**
   * SID of a Network resource. Only show UsageRecords representing usage on this network.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Network",
  })
  network?: string;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * SID or unique name of a Sim resource. Only show UsageRecords representing usage incurred by this Super SIM.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Sim" })
  sim?: string;

  /**
   * Only include usage that occurred at or after this time, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Default is one month before the `end_time`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=StartTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startTime?: Date;
}

export class ListUsageRecordListUsageRecordResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListUsageRecordListUsageRecordResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListUsageRecordListUsageRecordResponseMeta)
  meta?: ListUsageRecordListUsageRecordResponseMeta;

  @SpeakeasyMetadata({ elemType: shared.SupersimV1UsageRecord })
  @Expose({ name: "usage_records" })
  @Type(() => shared.SupersimV1UsageRecord)
  usageRecords?: shared.SupersimV1UsageRecord[];
}

export class ListUsageRecordResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listUsageRecordResponse?: ListUsageRecordListUsageRecordResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
