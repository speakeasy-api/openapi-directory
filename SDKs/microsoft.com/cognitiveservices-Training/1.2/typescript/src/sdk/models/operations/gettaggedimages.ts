/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The ordering. Defaults to newest
 */
export enum GetTaggedImagesOrderByEnum {
  Newest = "Newest",
  Oldest = "Oldest",
}

export class GetTaggedImagesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Training-Key",
  })
  trainingKey: string;

  /**
   * The iteration id. Defaults to workspace
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=iterationId",
  })
  iterationId?: string;

  /**
   * The ordering. Defaults to newest
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderBy",
  })
  orderBy?: GetTaggedImagesOrderByEnum;

  /**
   * The project id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: string;

  /**
   * Number of images to skip before beginning the image batch. Defaults to 0
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=skip" })
  skip?: number;

  /**
   * An list of tags ids to filter the images. Defaults to all tagged images when null. Limited to 20
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=tagIds",
  })
  tagIds?: string[];

  /**
   * Maximum number of images to return. Defaults to 50, limited to 256
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=take" })
  take?: number;
}

export class GetTaggedImagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.Image })
  images?: shared.Image[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
