// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// ListFunctions20200531StageEnum - An optional filter to return only the functions that are in the specified stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.
type ListFunctions20200531StageEnum string

const (
	ListFunctions20200531StageEnumDevelopment ListFunctions20200531StageEnum = "DEVELOPMENT"
	ListFunctions20200531StageEnumLive        ListFunctions20200531StageEnum = "LIVE"
)

func (e ListFunctions20200531StageEnum) ToPointer() *ListFunctions20200531StageEnum {
	return &e
}

func (e *ListFunctions20200531StageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEVELOPMENT":
		fallthrough
	case "LIVE":
		*e = ListFunctions20200531StageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFunctions20200531StageEnum: %v", v)
	}
}

type ListFunctions20200531Request struct {
	// Use this field when paginating results to indicate where to begin in your list of functions. The response includes functions in the list that occur after the marker. To get the next page of the list, set this field's value to the value of <code>NextMarker</code> from the current page's response.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of functions that you want in the response.
	MaxItems *string `queryParam:"style=form,explode=true,name=MaxItems"`
	// An optional filter to return only the functions that are in the specified stage, either <code>DEVELOPMENT</code> or <code>LIVE</code>.
	Stage             *ListFunctions20200531StageEnum `queryParam:"style=form,explode=true,name=Stage"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListFunctions20200531Response struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
