/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class LicenseeEditableDaily extends SpeakeasyBase {
  /**
   * The maximum number of lookups this licensee can perform in a day. `null` indicates the limit is not active
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;
}

/**
 * Licensee object which can be defined by user
 */
export class LicenseeEditable extends SpeakeasyBase {
  /**
   * Licensee's first, second and third line address as well as post town concatenated by commas
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "daily" })
  @Type(() => LicenseeEditableDaily)
  daily?: LicenseeEditableDaily;

  /**
   * Licensee individual or organisation name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Licensee's postcode
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postcode" })
  postcode?: string;

  /**
   * A list of allowed URLs. An empty list means that whitelisting is disabled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "whitelist" })
  whitelist?: string[];
}
