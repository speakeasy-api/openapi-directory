/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CutoverJob - CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.
 */
public class CutoverJob {
    /**
     * ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeEngineTargetDetails")
    public ComputeEngineTargetDetails computeEngineTargetDetails;
    public CutoverJob withComputeEngineTargetDetails(ComputeEngineTargetDetails computeEngineTargetDetails) {
        this.computeEngineTargetDetails = computeEngineTargetDetails;
        return this;
    }
    
    /**
     * Output only. The time the cutover job was created (as an API call, not when it was actually created in the target).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public CutoverJob withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. The time the cutover job had finished.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;
    public CutoverJob withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;
    public CutoverJob withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * Output only. The name of the cutover job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CutoverJob withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The current progress in percentage of the cutover job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("progressPercent")
    public Integer progressPercent;
    public CutoverJob withProgressPercent(Integer progressPercent) {
        this.progressPercent = progressPercent;
        return this;
    }
    
    /**
     * Output only. State of the cutover job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public CutoverJobStateEnum state;
    public CutoverJob withState(CutoverJobStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. A message providing possible extra details about the current state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateMessage")
    public String stateMessage;
    public CutoverJob withStateMessage(String stateMessage) {
        this.stateMessage = stateMessage;
        return this;
    }
    
    /**
     * Output only. The time the state was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateTime")
    public String stateTime;
    public CutoverJob withStateTime(String stateTime) {
        this.stateTime = stateTime;
        return this;
    }
    
    /**
     * Output only. The cutover steps list representing its progress.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("steps")
    public CutoverStep[] steps;
    public CutoverJob withSteps(CutoverStep[] steps) {
        this.steps = steps;
        return this;
    }
    
}
