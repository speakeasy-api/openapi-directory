// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RepositoryAssociationStateEnum string

const (
	RepositoryAssociationStateEnumAssociated     RepositoryAssociationStateEnum = "Associated"
	RepositoryAssociationStateEnumAssociating    RepositoryAssociationStateEnum = "Associating"
	RepositoryAssociationStateEnumFailed         RepositoryAssociationStateEnum = "Failed"
	RepositoryAssociationStateEnumDisassociating RepositoryAssociationStateEnum = "Disassociating"
	RepositoryAssociationStateEnumDisassociated  RepositoryAssociationStateEnum = "Disassociated"
)

func (e *RepositoryAssociationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Associated":
		fallthrough
	case "Associating":
		fallthrough
	case "Failed":
		fallthrough
	case "Disassociating":
		fallthrough
	case "Disassociated":
		*e = RepositoryAssociationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RepositoryAssociationStateEnum: %s", s)
	}
}
