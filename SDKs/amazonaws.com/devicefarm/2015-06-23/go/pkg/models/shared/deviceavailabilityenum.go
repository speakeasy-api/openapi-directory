// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeviceAvailabilityEnum string

const (
	DeviceAvailabilityEnumTemporaryNotAvailable DeviceAvailabilityEnum = "TEMPORARY_NOT_AVAILABLE"
	DeviceAvailabilityEnumBusy                  DeviceAvailabilityEnum = "BUSY"
	DeviceAvailabilityEnumAvailable             DeviceAvailabilityEnum = "AVAILABLE"
	DeviceAvailabilityEnumHighlyAvailable       DeviceAvailabilityEnum = "HIGHLY_AVAILABLE"
)

func (e DeviceAvailabilityEnum) ToPointer() *DeviceAvailabilityEnum {
	return &e
}

func (e *DeviceAvailabilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TEMPORARY_NOT_AVAILABLE":
		fallthrough
	case "BUSY":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "HIGHLY_AVAILABLE":
		*e = DeviceAvailabilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceAvailabilityEnum: %v", v)
	}
}
