// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// MetalsSpotHistoryGETFormatEnum - to override content negotiation specify a value of json or xml
type MetalsSpotHistoryGETFormatEnum string

const (
	MetalsSpotHistoryGETFormatEnumJSON MetalsSpotHistoryGETFormatEnum = "json"
	MetalsSpotHistoryGETFormatEnumXML  MetalsSpotHistoryGETFormatEnum = "xml"
)

func (e *MetalsSpotHistoryGETFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		*e = MetalsSpotHistoryGETFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MetalsSpotHistoryGETFormatEnum: %s", s)
	}
}

// MetalsSpotHistoryGETUnitofmeasureEnum - unit of meaure, defaults to troy ounces. allowed values are:
// mg=milligram
// g=gram
// kg=kilogram
// gr=grain
// oz=ounce
// toz=troy ounce
// ct=carat
// dwt=pennyweight
type MetalsSpotHistoryGETUnitofmeasureEnum string

const (
	MetalsSpotHistoryGETUnitofmeasureEnumMg  MetalsSpotHistoryGETUnitofmeasureEnum = "mg"
	MetalsSpotHistoryGETUnitofmeasureEnumG   MetalsSpotHistoryGETUnitofmeasureEnum = "g"
	MetalsSpotHistoryGETUnitofmeasureEnumKg  MetalsSpotHistoryGETUnitofmeasureEnum = "kg"
	MetalsSpotHistoryGETUnitofmeasureEnumGr  MetalsSpotHistoryGETUnitofmeasureEnum = "gr"
	MetalsSpotHistoryGETUnitofmeasureEnumOz  MetalsSpotHistoryGETUnitofmeasureEnum = "oz"
	MetalsSpotHistoryGETUnitofmeasureEnumToz MetalsSpotHistoryGETUnitofmeasureEnum = "toz"
	MetalsSpotHistoryGETUnitofmeasureEnumCt  MetalsSpotHistoryGETUnitofmeasureEnum = "ct"
	MetalsSpotHistoryGETUnitofmeasureEnumDwt MetalsSpotHistoryGETUnitofmeasureEnum = "dwt"
)

func (e *MetalsSpotHistoryGETUnitofmeasureEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "mg":
		fallthrough
	case "g":
		fallthrough
	case "kg":
		fallthrough
	case "gr":
		fallthrough
	case "oz":
		fallthrough
	case "toz":
		fallthrough
	case "ct":
		fallthrough
	case "dwt":
		*e = MetalsSpotHistoryGETUnitofmeasureEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MetalsSpotHistoryGETUnitofmeasureEnum: %s", s)
	}
}

type MetalsSpotHistoryGETQueryParams struct {
	// comma separated list of conversion currencies, defaults to USD
	Currency *string `queryParam:"style=form,explode=true,name=currency"`
	// end date of time period. format is <i>yyyy-mm-dd</i>. Default is current date.
	End *time.Time `queryParam:"style=form,explode=true,name=end"`
	// to override content negotiation specify a value of json or xml
	Format *MetalsSpotHistoryGETFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// if true use historical currency rates otherwise current currency rates. Defaults to true.
	Historicalfx *bool `queryParam:"style=form,explode=true,name=historicalfx"`
	// aggregation interval. Composed of an optional integer value (which defaults to 1 when not specified),
	// followed by a type string which must be one of the following values:
	// y=year,
	// m=month,
	// w=week,
	// d=day,
	// h=hour,
	// mi=minute
	//
	// For example, a yearly interval can be specified as "y" and 6 month interval as "6m".
	//
	// If not specified the interval parameter default is 1 Day.
	Interval *string `queryParam:"style=form,explode=true,name=interval"`
	// comma separated list of metals
	Metals string `queryParam:"style=form,explode=true,name=metals"`
	// start date of time period. format is <i>yyyy-mm-dd</i>
	Start time.Time `queryParam:"style=form,explode=true,name=start"`
	// unit of meaure, defaults to troy ounces. allowed values are:
	// mg=milligram
	// g=gram
	// kg=kilogram
	// gr=grain
	// oz=ounce
	// toz=troy ounce
	// ct=carat
	// dwt=pennyweight
	Unitofmeasure *MetalsSpotHistoryGETUnitofmeasureEnum `queryParam:"style=form,explode=true,name=unitofmeasure"`
}

type MetalsSpotHistoryGETRequest struct {
	QueryParams MetalsSpotHistoryGETQueryParams
}

type MetalsSpotHistoryGETResponse struct {
	Body        []byte
	ContentType string
	// Success
	IntervalCollectionResponses []shared.IntervalCollectionResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
