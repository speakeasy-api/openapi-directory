/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Settings to authenticate users using a generic OAuth2 provider
 */
export class GenericOauth2ModuleConfig extends SpeakeasyBase {
  /**
   * Field name to get access token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessTokenField" })
  accessTokenField: string;

  /**
   * OAuth authorize URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorizeUrl" })
  authorizeUrl: string;

  /**
   * Otoroshi callback URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callbackUrl" })
  callbackUrl: string;

  /**
   * The claims of the token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "claims" })
  claims?: string;

  /**
   * OAuth Client id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId: string;

  /**
   * OAuth Client secret
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientSecret" })
  clientSecret: string;

  /**
   * Description of the config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc: string;

  /**
   * Field name to get email from user profile
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailField" })
  emailField: string;

  /**
   * Unique id of the config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Algo. settings to verify JWT token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jwtVerifier" })
  jwtVerifier?: any;

  /**
   * OAuth login URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "loginUrl" })
  loginUrl: string;

  /**
   * OAuth logout URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logoutUrl" })
  logoutUrl: string;

  /**
   * Name of the config
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Field name to get name from user profile
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameField" })
  nameField: string;

  /**
   * URL of the OIDC config. file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oidConfig" })
  oidConfig?: string;

  /**
   * Field name to get otoroshi metadata from. You can specify sub fields using | as separator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "otoroshiDataField" })
  otoroshiDataField: string;

  /**
   * The user profile will be read from the JWT token in id_token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readProfileFromToken" })
  readProfileFromToken?: boolean;

  /**
   * The scope of the token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * Max age of the session
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sessionMaxAge" })
  sessionMaxAge: number;

  /**
   * OAuth token URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokenUrl" })
  tokenUrl: string;

  /**
   * Type of settings. value is oauth2
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  /**
   * Use for redirection to actual service
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useCookies" })
  useCookies?: boolean;

  /**
   * Use JSON or URL Form Encoded as payload with the OAuth provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useJson" })
  useJson?: boolean;

  /**
   * OAuth userinfo to get user profile
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userInfoUrl" })
  userInfoUrl: string;
}
