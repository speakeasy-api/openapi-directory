// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListSessionsOfAuthorUsingPOSTQueryParams struct {
	AuthorID *string `queryParam:"style=form,explode=true,name=authorID"`
}

type ListSessionsOfAuthorUsingPOSTRequest struct {
	QueryParams ListSessionsOfAuthorUsingPOSTQueryParams
}

// ListSessionsOfAuthorUsingPOST500ApplicationJSON - internal api error (code 2)
type ListSessionsOfAuthorUsingPOST500ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// ListSessionsOfAuthorUsingPOST401ApplicationJSON - no or wrong API key (code 4)
type ListSessionsOfAuthorUsingPOST401ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// ListSessionsOfAuthorUsingPOST400ApplicationJSON - generic api error (code 1)
type ListSessionsOfAuthorUsingPOST400ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

type ListSessionsOfAuthorUsingPOST200ApplicationJSONDataSessions struct {
	AuthorID   *string `json:"authorID,omitempty"`
	GroupID    *string `json:"groupID,omitempty"`
	ID         *string `json:"id,omitempty"`
	ValidUntil *int64  `json:"validUntil,omitempty"`
}

type ListSessionsOfAuthorUsingPOST200ApplicationJSONData struct {
	Sessions []ListSessionsOfAuthorUsingPOST200ApplicationJSONDataSessions `json:"sessions,omitempty"`
}

// ListSessionsOfAuthorUsingPOST200ApplicationJSON - ok (code 0)
type ListSessionsOfAuthorUsingPOST200ApplicationJSON struct {
	Code    *int64                                               `json:"code,omitempty"`
	Data    *ListSessionsOfAuthorUsingPOST200ApplicationJSONData `json:"data,omitempty"`
	Message *string                                              `json:"message,omitempty"`
}

type ListSessionsOfAuthorUsingPOSTResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ok (code 0)
	ListSessionsOfAuthorUsingPOST200ApplicationJSONObject *ListSessionsOfAuthorUsingPOST200ApplicationJSON
	// generic api error (code 1)
	ListSessionsOfAuthorUsingPOST400ApplicationJSONObject *ListSessionsOfAuthorUsingPOST400ApplicationJSON
	// no or wrong API key (code 4)
	ListSessionsOfAuthorUsingPOST401ApplicationJSONObject *ListSessionsOfAuthorUsingPOST401ApplicationJSON
	// internal api error (code 2)
	ListSessionsOfAuthorUsingPOST500ApplicationJSONObject *ListSessionsOfAuthorUsingPOST500ApplicationJSON
}
