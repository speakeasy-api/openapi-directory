<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CheckRequest - Request message for the Check method.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CheckRequest
{
    /**
     * This message defines the standard attribute vocabulary for Google APIs. An attribute is a piece of metadata that describes an activity on a network service. For example, the size of an HTTP request, or the status code of an HTTP response. Each attribute has a type and a name, which is logically defined as a proto message field in `AttributeContext`. The field type becomes the attribute type, and the field path becomes the attribute name. For example, the attribute `source.ip` maps to field `AttributeContext.source.ip`. This message definition is guaranteed not to have any wire breaking change. So you can use it directly for passing attributes across different systems. NOTE: Different system may generate different subset of attributes. Please verify the system specification before relying on an attribute generated a system.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AttributeContext $attributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('attributes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AttributeContext')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AttributeContext $attributes = null;
    
    /**
     * Optional. Contains a comma-separated list of flags.
     * 
     * @var ?string $flags
     */
	#[\JMS\Serializer\Annotation\SerializedName('flags')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $flags = null;
    
    /**
     * Describes the resources and the policies applied to each resource.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ResourceInfo> $resources
     */
	#[\JMS\Serializer\Annotation\SerializedName('resources')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ResourceInfo>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resources = null;
    
    /**
     * Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.
     * 
     * @var ?string $serviceConfigId
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceConfigId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceConfigId = null;
    
	public function __construct()
	{
		$this->attributes = null;
		$this->flags = null;
		$this->resources = null;
		$this->serviceConfigId = null;
	}
}
