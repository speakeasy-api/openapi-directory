<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * V1EmployeeRole - V1EmployeeRole
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class V1EmployeeRole
{
    /**
     * The time when the employee entity was created, in ISO 8601 format. Is set by Square when the Role is created.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The role's unique ID, Can only be set by Square.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * If true, employees with this role have all permissions, regardless of the values indicated in permissions.
     * 
     * @var ?bool $isOwner
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_owner')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isOwner = null;
    
    /**
     * The role's merchant-defined name.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The role's permissions.
     * 
     * @var array<string> $permissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $permissions;
    
    /**
     * The time when the employee entity was most recently updated, in ISO 8601 format. Is set by Square when the Role updated.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->id = null;
		$this->isOwner = null;
		$this->name = "";
		$this->permissions = [];
		$this->updatedAt = null;
	}
}
