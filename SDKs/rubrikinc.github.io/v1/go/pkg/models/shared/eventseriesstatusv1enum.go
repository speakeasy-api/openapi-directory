// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EventSeriesStatusV1Enum - Status of an event series.
type EventSeriesStatusV1Enum string

const (
	EventSeriesStatusV1EnumSuccess             EventSeriesStatusV1Enum = "Success"
	EventSeriesStatusV1EnumFailure             EventSeriesStatusV1Enum = "Failure"
	EventSeriesStatusV1EnumScheduled           EventSeriesStatusV1Enum = "Scheduled"
	EventSeriesStatusV1EnumActive              EventSeriesStatusV1Enum = "Active"
	EventSeriesStatusV1EnumCanceling           EventSeriesStatusV1Enum = "Canceling"
	EventSeriesStatusV1EnumCanceled            EventSeriesStatusV1Enum = "Canceled"
	EventSeriesStatusV1EnumSuccessWithWarnings EventSeriesStatusV1Enum = "SuccessWithWarnings"
)

func (e EventSeriesStatusV1Enum) ToPointer() *EventSeriesStatusV1Enum {
	return &e
}

func (e *EventSeriesStatusV1Enum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Success":
		fallthrough
	case "Failure":
		fallthrough
	case "Scheduled":
		fallthrough
	case "Active":
		fallthrough
	case "Canceling":
		fallthrough
	case "Canceled":
		fallthrough
	case "SuccessWithWarnings":
		*e = EventSeriesStatusV1Enum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventSeriesStatusV1Enum: %v", v)
	}
}
