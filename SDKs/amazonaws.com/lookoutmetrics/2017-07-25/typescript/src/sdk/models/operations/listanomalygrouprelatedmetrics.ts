/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.
 */
export enum ListAnomalyGroupRelatedMetricsRequestBodyRelationshipTypeFilterEnum {
  CauseOfInputAnomalyGroup = "CAUSE_OF_INPUT_ANOMALY_GROUP",
  EffectOfInputAnomalyGroup = "EFFECT_OF_INPUT_ANOMALY_GROUP",
}

export class ListAnomalyGroupRelatedMetricsRequestBody extends SpeakeasyBase {
  /**
   * The Amazon Resource Name (ARN) of the anomaly detector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorArn" })
  anomalyDetectorArn: string;

  /**
   * The ID of the anomaly group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyGroupId" })
  anomalyGroupId: string;

  /**
   * The maximum number of results to return.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  /**
   * Specify the pagination token that's returned by a previous request to retrieve the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  /**
   * Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RelationshipTypeFilter" })
  relationshipTypeFilter?: ListAnomalyGroupRelatedMetricsRequestBodyRelationshipTypeFilterEnum;
}

export class ListAnomalyGroupRelatedMetricsRequest extends SpeakeasyBase {
  /**
   * Pagination limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxResults",
  })
  maxResults?: string;

  /**
   * Pagination token
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NextToken",
  })
  nextToken?: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ListAnomalyGroupRelatedMetricsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class ListAnomalyGroupRelatedMetricsResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listAnomalyGroupRelatedMetricsResponse?: shared.ListAnomalyGroupRelatedMetricsResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
