/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Actions OIDC subject customization for a repository
 */
export class ActionsSetCustomOIDCSubClaimForRepoActionsOIDCSubjectCustomizationForARepository extends SpeakeasyBase {
  /**
   * Whether to use the default template or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "use_default" })
  useDefault: boolean;
}

export class ActionsSetCustomOidcSubClaimForRepoRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ActionsSetCustomOIDCSubClaimForRepoActionsOIDCSubjectCustomizationForARepository;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class ActionsSetCustomOidcSubClaimForRepoResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Empty response
   */
  @SpeakeasyMetadata()
  emptyObject?: Record<string, any>;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  scimError?: shared.ScimError;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationErrorSimple?: shared.ValidationErrorSimple;
}
