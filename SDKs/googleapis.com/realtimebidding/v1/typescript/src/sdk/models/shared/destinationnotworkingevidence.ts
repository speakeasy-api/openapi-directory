/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * DNS lookup errors.
 */
export enum DestinationNotWorkingEvidenceDnsErrorEnum {
  DnsErrorUnspecified = "DNS_ERROR_UNSPECIFIED",
  ErrorDns = "ERROR_DNS",
  GoogleCrawlerDnsIssue = "GOOGLE_CRAWLER_DNS_ISSUE",
}

/**
 * Page was crawled successfully, but was detected as either a page with no content or an error page.
 */
export enum DestinationNotWorkingEvidenceInvalidPageEnum {
  InvalidPageUnspecified = "INVALID_PAGE_UNSPECIFIED",
  EmptyOrErrorPage = "EMPTY_OR_ERROR_PAGE",
}

/**
 * Platform of the non-working URL.
 */
export enum DestinationNotWorkingEvidencePlatformEnum {
  PlatformUnspecified = "PLATFORM_UNSPECIFIED",
  PersonalComputer = "PERSONAL_COMPUTER",
  Android = "ANDROID",
  Ios = "IOS",
}

/**
 * HTTP redirect chain error.
 */
export enum DestinationNotWorkingEvidenceRedirectionErrorEnum {
  RedirectionErrorUnspecified = "REDIRECTION_ERROR_UNSPECIFIED",
  TooManyRedirects = "TOO_MANY_REDIRECTS",
  InvalidRedirect = "INVALID_REDIRECT",
  EmptyRedirect = "EMPTY_REDIRECT",
  RedirectErrorUnknown = "REDIRECT_ERROR_UNKNOWN",
}

/**
 * Rejected because of malformed URLs or invalid requests.
 */
export enum DestinationNotWorkingEvidenceUrlRejectedEnum {
  UrlRejectedUnspecified = "URL_REJECTED_UNSPECIFIED",
  BadRequest = "BAD_REQUEST",
  MalformedUrl = "MALFORMED_URL",
  UrlRejectedUnknown = "URL_REJECTED_UNKNOWN",
}

/**
 * Evidence of the creative's destination URL not functioning properly or having been incorrectly set up.
 */
export class DestinationNotWorkingEvidence extends SpeakeasyBase {
  /**
   * DNS lookup errors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dnsError" })
  dnsError?: DestinationNotWorkingEvidenceDnsErrorEnum;

  /**
   * The full non-working URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expandedUrl" })
  expandedUrl?: string;

  /**
   * HTTP error code (for example, 404 or 5xx)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpError" })
  httpError?: number;

  /**
   * Page was crawled successfully, but was detected as either a page with no content or an error page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invalidPage" })
  invalidPage?: DestinationNotWorkingEvidenceInvalidPageEnum;

  /**
   * Approximate time when the ad destination was last checked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastCheckTime" })
  lastCheckTime?: string;

  /**
   * Platform of the non-working URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform?: DestinationNotWorkingEvidencePlatformEnum;

  /**
   * HTTP redirect chain error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redirectionError" })
  redirectionError?: DestinationNotWorkingEvidenceRedirectionErrorEnum;

  /**
   * Rejected because of malformed URLs or invalid requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "urlRejected" })
  urlRejected?: DestinationNotWorkingEvidenceUrlRejectedEnum;
}
