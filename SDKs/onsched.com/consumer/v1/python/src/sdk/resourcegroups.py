"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class ResourceGroups:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_consumer_v1_resourcegroups(self, request: operations.GetConsumerV1ResourcegroupsRequest) -> operations.GetConsumerV1ResourcegroupsResponse:
        r"""List Resource Groups
        <p>Use this endpoint to return a list of <b>Resource Groups</b> for the requested location. If not specified, the business location defaults to the primary business location.</p>
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/consumer/v1/resourcegroups'
        
        query_params = utils.get_query_params(operations.GetConsumerV1ResourcegroupsRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetConsumerV1ResourcegroupsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.ResourceGroupListViewModel])
                res.resource_group_list_view_model = out

        return res

    def get_consumer_v1_resourcegroups_id_(self, request: operations.GetConsumerV1ResourcegroupsIDRequest) -> operations.GetConsumerV1ResourcegroupsIDResponse:
        r"""Get Resource Group
        <p>Use this endpoint to return a <b>Resource Group</b> object. A valid <b>resourceGroup id</b> is required. Find resourceGroup id's by using the <i>GET /consumer/v1/resourceGroups</i> endpoint.</p>
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetConsumerV1ResourcegroupsIDRequest, base_url, '/consumer/v1/resourcegroups/{id}', request)
        
        
        client = self._security_client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetConsumerV1ResourcegroupsIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.ResourceGroupViewModel])
                res.resource_group_view_model = out

        return res

    