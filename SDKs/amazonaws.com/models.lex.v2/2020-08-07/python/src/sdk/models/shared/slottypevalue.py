"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import samplevalue as shared_samplevalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SlotTypeValue:
    r"""Each slot type can have a set of values. Each <code>SlotTypeValue</code> represents a value that the slot type can take."""
    
    sample_value: Optional[shared_samplevalue.SampleValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampleValue'), 'exclude': lambda f: f is None }})  
    synonyms: Optional[list[shared_samplevalue.SampleValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('synonyms'), 'exclude': lambda f: f is None }})  
    