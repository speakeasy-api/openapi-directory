<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateFlowRequestBody
{
    /**
     * <p>The <code>clientToken</code> parameter is an idempotency token. It ensures that your <code>CreateFlow</code> request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same <code>clientToken</code> parameter value.</p> <p>If you omit a <code>clientToken</code> value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.</p> <p>If you specify input parameters that differ from your first request, an error occurs. If you use a different value for <code>clientToken</code>, Amazon AppFlow considers it a new call to <code>CreateFlow</code>. The token is active for 8 hours.</p>
     * 
     * @var ?string $clientToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientToken = null;
    
    /**
     *  A description of the flow you want to create. 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     *  The configuration that controls how Amazon AppFlow places data in the destination connector. 
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\DestinationFlowConfig> $destinationFlowConfigList
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationFlowConfigList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DestinationFlowConfig>')]
    public array $destinationFlowConfigList;
    
    /**
     *  The specified name of the flow. Spaces are not allowed. Use underscores (_) or hyphens (-) only. 
     * 
     * @var string $flowName
     */
	#[\JMS\Serializer\Annotation\SerializedName('flowName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $flowName;
    
    /**
     *  The ARN (Amazon Resource Name) of the Key Management Service (KMS) key you provide for encryption. This is required if you do not want to use the Amazon AppFlow-managed KMS key. If you don't provide anything here, Amazon AppFlow uses the Amazon AppFlow-managed KMS key. 
     * 
     * @var ?string $kmsArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('kmsArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kmsArn = null;
    
    /**
     * Specifies the configuration that Amazon AppFlow uses when it catalogs your data. When Amazon AppFlow catalogs your data, it stores metadata in a data catalog.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateFlowRequestBodyMetadataCatalogConfig $metadataCatalogConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadataCatalogConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFlowRequestBodyMetadataCatalogConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateFlowRequestBodyMetadataCatalogConfig $metadataCatalogConfig = null;
    
    /**
     *  Contains information about the configuration of the source connector used in the flow. 
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateFlowRequestBodySourceFlowConfig $sourceFlowConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceFlowConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFlowRequestBodySourceFlowConfig')]
    public CreateFlowRequestBodySourceFlowConfig $sourceFlowConfig;
    
    /**
     *  The tags used to organize, track, or control access for your flow. 
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     *  A list of tasks that Amazon AppFlow performs while transferring the data in the flow run. 
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Task> $tasks
     */
	#[\JMS\Serializer\Annotation\SerializedName('tasks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Task>')]
    public array $tasks;
    
    /**
     *  The trigger settings that determine how and when Amazon AppFlow runs the specified flow. 
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateFlowRequestBodyTriggerConfig $triggerConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateFlowRequestBodyTriggerConfig')]
    public CreateFlowRequestBodyTriggerConfig $triggerConfig;
    
	public function __construct()
	{
		$this->clientToken = null;
		$this->description = null;
		$this->destinationFlowConfigList = [];
		$this->flowName = "";
		$this->kmsArn = null;
		$this->metadataCatalogConfig = null;
		$this->sourceFlowConfig = new \OpenAPI\OpenAPI\Models\Operations\CreateFlowRequestBodySourceFlowConfig();
		$this->tags = null;
		$this->tasks = [];
		$this->triggerConfig = new \OpenAPI\OpenAPI\Models\Operations\CreateFlowRequestBodyTriggerConfig();
	}
}
