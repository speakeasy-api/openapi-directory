/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * MetricDatum -  &lt;b&gt;Internal only&lt;/b&gt;. Collects Apache Airflow metrics. To learn more about the metrics published to Amazon CloudWatch, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/cw-metrics.html"&gt;Amazon MWAA performance metrics in Amazon CloudWatch&lt;/a&gt;.
 */
public class MetricDatum {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Dimensions")
    public Dimension[] dimensions;

    public MetricDatum withDimensions(Dimension[] dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    @JsonProperty("MetricName")
    public String metricName;

    public MetricDatum withMetricName(String metricName) {
        this.metricName = metricName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatisticValues")
    public StatisticSet statisticValues;

    public MetricDatum withStatisticValues(StatisticSet statisticValues) {
        this.statisticValues = statisticValues;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Timestamp")
    public OffsetDateTime timestamp;

    public MetricDatum withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Unit")
    public UnitEnum unit;

    public MetricDatum withUnit(UnitEnum unit) {
        this.unit = unit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Value")
    public Double value;

    public MetricDatum withValue(Double value) {
        this.value = value;
        return this;
    }
    
    public MetricDatum(@JsonProperty("MetricName") String metricName, @JsonProperty("Timestamp") OffsetDateTime timestamp) {
        this.metricName = metricName;
        this.timestamp = timestamp;
  }
}
