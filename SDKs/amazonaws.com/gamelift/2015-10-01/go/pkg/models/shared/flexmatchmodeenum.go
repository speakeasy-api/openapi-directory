// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FlexMatchModeEnum string

const (
	FlexMatchModeEnumStandalone FlexMatchModeEnum = "STANDALONE"
	FlexMatchModeEnumWithQueue  FlexMatchModeEnum = "WITH_QUEUE"
)

func (e FlexMatchModeEnum) ToPointer() *FlexMatchModeEnum {
	return &e
}

func (e *FlexMatchModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STANDALONE":
		fallthrough
	case "WITH_QUEUE":
		*e = FlexMatchModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FlexMatchModeEnum: %v", v)
	}
}
