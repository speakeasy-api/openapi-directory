// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DocumentTypeEnum string

const (
	DocumentTypeEnumNativePdf                      DocumentTypeEnum = "NATIVE_PDF"
	DocumentTypeEnumScannedPdf                     DocumentTypeEnum = "SCANNED_PDF"
	DocumentTypeEnumMsWord                         DocumentTypeEnum = "MS_WORD"
	DocumentTypeEnumImage                          DocumentTypeEnum = "IMAGE"
	DocumentTypeEnumPlainText                      DocumentTypeEnum = "PLAIN_TEXT"
	DocumentTypeEnumTextractDetectDocumentTextJSON DocumentTypeEnum = "TEXTRACT_DETECT_DOCUMENT_TEXT_JSON"
	DocumentTypeEnumTextractAnalyzeDocumentJSON    DocumentTypeEnum = "TEXTRACT_ANALYZE_DOCUMENT_JSON"
)

func (e DocumentTypeEnum) ToPointer() *DocumentTypeEnum {
	return &e
}

func (e *DocumentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NATIVE_PDF":
		fallthrough
	case "SCANNED_PDF":
		fallthrough
	case "MS_WORD":
		fallthrough
	case "IMAGE":
		fallthrough
	case "PLAIN_TEXT":
		fallthrough
	case "TEXTRACT_DETECT_DOCUMENT_TEXT_JSON":
		fallthrough
	case "TEXTRACT_ANALYZE_DOCUMENT_JSON":
		*e = DocumentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentTypeEnum: %v", v)
	}
}
