// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CacheFillRegionsDestinationRegionEnum - The destination region for cache fill.
type CacheFillRegionsDestinationRegionEnum string

const (
	CacheFillRegionsDestinationRegionEnumCacheFillDestinationRegionUnspecified  CacheFillRegionsDestinationRegionEnum = "CACHE_FILL_DESTINATION_REGION_UNSPECIFIED"
	CacheFillRegionsDestinationRegionEnumCacheFillDestinationRegionAsiaPacific  CacheFillRegionsDestinationRegionEnum = "CACHE_FILL_DESTINATION_REGION_ASIA_PACIFIC"
	CacheFillRegionsDestinationRegionEnumCacheFillDestinationRegionEurope       CacheFillRegionsDestinationRegionEnum = "CACHE_FILL_DESTINATION_REGION_EUROPE"
	CacheFillRegionsDestinationRegionEnumCacheFillDestinationRegionNorthAmerica CacheFillRegionsDestinationRegionEnum = "CACHE_FILL_DESTINATION_REGION_NORTH_AMERICA"
	CacheFillRegionsDestinationRegionEnumCacheFillDestinationRegionOceania      CacheFillRegionsDestinationRegionEnum = "CACHE_FILL_DESTINATION_REGION_OCEANIA"
	CacheFillRegionsDestinationRegionEnumCacheFillDestinationRegionSouthAmerica CacheFillRegionsDestinationRegionEnum = "CACHE_FILL_DESTINATION_REGION_SOUTH_AMERICA"
	CacheFillRegionsDestinationRegionEnumCacheFillDestinationRegionChina        CacheFillRegionsDestinationRegionEnum = "CACHE_FILL_DESTINATION_REGION_CHINA"
	CacheFillRegionsDestinationRegionEnumCacheFillDestinationRegionOthers       CacheFillRegionsDestinationRegionEnum = "CACHE_FILL_DESTINATION_REGION_OTHERS"
)

func (e *CacheFillRegionsDestinationRegionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CACHE_FILL_DESTINATION_REGION_UNSPECIFIED":
		fallthrough
	case "CACHE_FILL_DESTINATION_REGION_ASIA_PACIFIC":
		fallthrough
	case "CACHE_FILL_DESTINATION_REGION_EUROPE":
		fallthrough
	case "CACHE_FILL_DESTINATION_REGION_NORTH_AMERICA":
		fallthrough
	case "CACHE_FILL_DESTINATION_REGION_OCEANIA":
		fallthrough
	case "CACHE_FILL_DESTINATION_REGION_SOUTH_AMERICA":
		fallthrough
	case "CACHE_FILL_DESTINATION_REGION_CHINA":
		fallthrough
	case "CACHE_FILL_DESTINATION_REGION_OTHERS":
		*e = CacheFillRegionsDestinationRegionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CacheFillRegionsDestinationRegionEnum: %s", s)
	}
}

// CacheFillRegionsSourceRegionEnum - The source region for cache fill.
type CacheFillRegionsSourceRegionEnum string

const (
	CacheFillRegionsSourceRegionEnumCacheFillSourceRegionUnspecified  CacheFillRegionsSourceRegionEnum = "CACHE_FILL_SOURCE_REGION_UNSPECIFIED"
	CacheFillRegionsSourceRegionEnumCacheFillRegionAsiaPacific        CacheFillRegionsSourceRegionEnum = "CACHE_FILL_REGION_ASIA_PACIFIC"
	CacheFillRegionsSourceRegionEnumCacheFillSourceRegionEurope       CacheFillRegionsSourceRegionEnum = "CACHE_FILL_SOURCE_REGION_EUROPE"
	CacheFillRegionsSourceRegionEnumCacheFillSourceRegionNorthAmerica CacheFillRegionsSourceRegionEnum = "CACHE_FILL_SOURCE_REGION_NORTH_AMERICA"
	CacheFillRegionsSourceRegionEnumCacheFillSourceRegionOceania      CacheFillRegionsSourceRegionEnum = "CACHE_FILL_SOURCE_REGION_OCEANIA"
	CacheFillRegionsSourceRegionEnumCacheFillSourceRegionSouthAmerica CacheFillRegionsSourceRegionEnum = "CACHE_FILL_SOURCE_REGION_SOUTH_AMERICA"
)

func (e *CacheFillRegionsSourceRegionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CACHE_FILL_SOURCE_REGION_UNSPECIFIED":
		fallthrough
	case "CACHE_FILL_REGION_ASIA_PACIFIC":
		fallthrough
	case "CACHE_FILL_SOURCE_REGION_EUROPE":
		fallthrough
	case "CACHE_FILL_SOURCE_REGION_NORTH_AMERICA":
		fallthrough
	case "CACHE_FILL_SOURCE_REGION_OCEANIA":
		fallthrough
	case "CACHE_FILL_SOURCE_REGION_SOUTH_AMERICA":
		*e = CacheFillRegionsSourceRegionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CacheFillRegionsSourceRegionEnum: %s", s)
	}
}

// CacheFillRegions - Specifies the regions for Cache Fill.
type CacheFillRegions struct {
	// The destination region for cache fill.
	DestinationRegion *CacheFillRegionsDestinationRegionEnum `json:"destinationRegion,omitempty"`
	// The source region for cache fill.
	SourceRegion *CacheFillRegionsSourceRegionEnum `json:"sourceRegion,omitempty"`
}
