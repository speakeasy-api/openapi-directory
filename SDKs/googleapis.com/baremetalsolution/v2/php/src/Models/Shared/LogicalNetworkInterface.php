<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LogicalNetworkInterface - Each logical network interface is effectively a network and IP pair.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LogicalNetworkInterface
{
    /**
     * Whether this interface is the default gateway for the instance. Only one interface can be the default gateway for the instance.
     * 
     * @var ?bool $defaultGateway
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultGateway')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $defaultGateway = null;
    
    /**
     * An identifier for the `Network`, generated by the backend.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * IP address in the network
     * 
     * @var ?string $ipAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipAddress = null;
    
    /**
     * Name of the network
     * 
     * @var ?string $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $network = null;
    
    /**
     * Type of network.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LogicalNetworkInterfaceNetworkTypeEnum $networkType
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LogicalNetworkInterfaceNetworkTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LogicalNetworkInterfaceNetworkTypeEnum $networkType = null;
    
	public function __construct()
	{
		$this->defaultGateway = null;
		$this->id = null;
		$this->ipAddress = null;
		$this->network = null;
		$this->networkType = null;
	}
}
