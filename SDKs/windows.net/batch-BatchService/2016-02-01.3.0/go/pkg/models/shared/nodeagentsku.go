// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NodeAgentSkuOsTypeEnum - The type of operating system compatible with the node agent SKU.
type NodeAgentSkuOsTypeEnum string

const (
	NodeAgentSkuOsTypeEnumLinux    NodeAgentSkuOsTypeEnum = "linux"
	NodeAgentSkuOsTypeEnumWindows  NodeAgentSkuOsTypeEnum = "windows"
	NodeAgentSkuOsTypeEnumUnmapped NodeAgentSkuOsTypeEnum = "unmapped"
)

func (e NodeAgentSkuOsTypeEnum) ToPointer() *NodeAgentSkuOsTypeEnum {
	return &e
}

func (e *NodeAgentSkuOsTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "linux":
		fallthrough
	case "windows":
		fallthrough
	case "unmapped":
		*e = NodeAgentSkuOsTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeAgentSkuOsTypeEnum: %v", v)
	}
}

// NodeAgentSku - A node agent SKU supported by the Batch service. The Batch node agent is a program that runs on each node in the pool, and provides the command-and-control interface between the node and the Batch service. There are different implementations of the node agent, known as SKUs, for different operating systems.
type NodeAgentSku struct {
	// The node agent SKU id.
	ID *string `json:"id,omitempty"`
	// The type of operating system compatible with the node agent SKU.
	OsType *NodeAgentSkuOsTypeEnum `json:"osType,omitempty"`
	// The list of images verified to be compatible with this node agent SKU. This collection is not exhaustive (the node agent may be compatible with other images).
	VerifiedImageReferences []ImageReference `json:"verifiedImageReferences,omitempty"`
}
