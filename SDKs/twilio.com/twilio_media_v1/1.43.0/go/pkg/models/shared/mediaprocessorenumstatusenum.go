// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MediaProcessorEnumStatusEnum - Status to filter by, with possible values `started`, `ended` or `failed`.
type MediaProcessorEnumStatusEnum string

const (
	MediaProcessorEnumStatusEnumFailed  MediaProcessorEnumStatusEnum = "failed"
	MediaProcessorEnumStatusEnumStarted MediaProcessorEnumStatusEnum = "started"
	MediaProcessorEnumStatusEnumEnded   MediaProcessorEnumStatusEnum = "ended"
)

func (e MediaProcessorEnumStatusEnum) ToPointer() *MediaProcessorEnumStatusEnum {
	return &e
}

func (e *MediaProcessorEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "failed":
		fallthrough
	case "started":
		fallthrough
	case "ended":
		*e = MediaProcessorEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MediaProcessorEnumStatusEnum: %v", v)
	}
}
