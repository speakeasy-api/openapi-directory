// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum - The BGP status.
type DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum string

const (
	DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnumUp   DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum = "up"
	DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnumDown DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum = "down"
)

func (e *DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "up":
		fallthrough
	case "down":
		*e = DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum: %s", s)
	}
}

// DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurations - The BGP configuration information.
type DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurations struct {
	BgpStatus             *DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurationsBgpStatusEnum
	PeerAddress           *string
	PeerAsn               *int64
	TransitGatewayAddress *string
	TransitGatewayAsn     *int64
}

// DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum - The tunnel protocol.
type DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum string

const (
	DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnumGre DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum = "gre"
)

func (e *DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "gre":
		*e = DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum: %s", s)
	}
}

// DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration - The Connect peer details.
type DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration struct {
	BgpConfigurations     []DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationBgpConfigurations
	InsideCidrBlocks      []string
	PeerAddress           *string
	Protocol              *DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfigurationProtocolEnum
	TransitGatewayAddress *string
}

// DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum - The state of the Connect peer.
type DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum string

const (
	DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnumPending   DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum = "pending"
	DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnumAvailable DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum = "available"
	DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnumDeleting  DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum = "deleting"
	DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnumDeleted   DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum = "deleted"
)

func (e *DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum: %s", s)
	}
}

// DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerTags - Describes a tag.
type DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerTags struct {
	Key   *string
	Value *string
}

// DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeer - Information about the deleted Connect peer.
type DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeer struct {
	ConnectPeerConfiguration    *DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerConnectPeerConfiguration
	CreationTime                *time.Time
	State                       *DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerStateEnum
	Tags                        []DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeerTags
	TransitGatewayAttachmentID  *string
	TransitGatewayConnectPeerID *string
}

// DeleteTransitGatewayConnectPeerResult - Success
type DeleteTransitGatewayConnectPeerResult struct {
	TransitGatewayConnectPeer *DeleteTransitGatewayConnectPeerResultTransitGatewayConnectPeer
}
