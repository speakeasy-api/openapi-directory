/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { QueuedResourceStatusFailedData } from "./queuedresourcestatusfaileddata";
import { QueuingPolicy } from "./queuingpolicy";
import { Expose, Type } from "class-transformer";

/**
 * [Output only] Result of queuing and provisioning based on deferred capacity.
 */
export class QueuedResourceStatus extends SpeakeasyBase {
  /**
   * Additional status detail for the FAILED state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failedData" })
  @Type(() => QueuedResourceStatusFailedData)
  failedData?: QueuedResourceStatusFailedData;

  /**
   * [Output only] Fully qualified URL of the provisioning GCE operation to track the provisioning along with provisioning errors. The referenced operation may not exist after having been deleted or expired.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provisioningOperations" })
  provisioningOperations?: string[];

  /**
   * Queuing parameters for the requested deferred capacity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queuingPolicy" })
  @Type(() => QueuingPolicy)
  queuingPolicy?: QueuingPolicy;
}
