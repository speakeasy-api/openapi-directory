/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class BookingAvailabilityRequestBodyAgeBands extends SpeakeasyBase {
  /**
   * **unique numeric identifier** for the age band
   *
   * @remarks
   * - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bandId" })
  bandId?: number;

  /**
   * **number of people** in *this* age band
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;
}

export class BookingAvailabilityRequestBody extends SpeakeasyBase {
  /**
   * **array of objects** specifying the age bands by which to to filter search results
   */
  @SpeakeasyMetadata({ elemType: BookingAvailabilityRequestBodyAgeBands })
  @Expose({ name: "ageBands" })
  @Type(() => BookingAvailabilityRequestBodyAgeBands)
  ageBands?: BookingAvailabilityRequestBodyAgeBands[];

  /**
   * **currency code** for the currency in which to display tour grade pricing information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyCode" })
  currencyCode?: string;

  /**
   * **month component** (text format) of the start of the date range for which to retrieve tour grade availability information (must be in the future)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "month" })
  month?: string;

  /**
   * **unique alphanumeric identifier** of the product for which you wish to retrieve tour grade availability information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCode" })
  productCode?: string;

  /**
   * **year component** (text format) of the start of the date range for which to retrieve tour grade availability information (must be in the future)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "year" })
  year?: string;
}

export class BookingAvailabilityRequest extends SpeakeasyBase {
  /**
   * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Accept-Language",
  })
  acceptLanguage: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: BookingAvailabilityRequestBody;
}

export class BookingAvailability200ApplicationJSONDataAvailability extends SpeakeasyBase {
  /**
   * **indicator** - `true` if *this* tour grade is available to book
   */
  @SpeakeasyMetadata()
  @Expose({ name: "available" })
  available?: boolean;

  /**
   * **date** on which *this* tour grade is available to be booked
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookingDate" })
  bookingDate?: string;

  /**
   * **currency code** of the currency in which product pricing is displayed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyCode" })
  currencyCode?: string;

  /**
   * **alphanumeric identifier** for *this* tour grade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gradeCode" })
  gradeCode?: string;

  /**
   * **numeric merchant net rate** for *this* tour grade
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantNetPrice" })
  merchantNetPrice?: number;

  /**
   * **currency-formatted merchant net rate** for *this* tour grade
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantNetPriceFormatted" })
  merchantNetPriceFormatted?: string;

  /**
   * **numeric suggested retail price** for *this* tour grade
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retailPrice" })
  retailPrice?: number;

  /**
   * **currency-formatted suggested retail price** for *this* tour grade
   *
   * @remarks
   * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retailPriceFormatted" })
  retailPriceFormatted?: string;

  /**
   * **sort order** of this tour grade availability object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;

  /**
   * **natural-language explanation** as to why *this* tour grade is not available to be booked
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unavailableReason" })
  unavailableReason?: string;
}

/**
 * **object** detailing available tourgrades for the specified age bands and date range for this product
 */
export class BookingAvailability200ApplicationJSONData extends SpeakeasyBase {
  /**
   * **array** of tour grade availability objects
   */
  @SpeakeasyMetadata({
    elemType: BookingAvailability200ApplicationJSONDataAvailability,
  })
  @Expose({ name: "availability" })
  @Type(() => BookingAvailability200ApplicationJSONDataAvailability)
  availability?: BookingAvailability200ApplicationJSONDataAvailability[];

  /**
   * **first available date** (in plain text format) for the tour grade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstAvailableDate" })
  firstAvailableDate?: string;

  /**
   * **last available date** for the tour grade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastAvailableDate" })
  lastAvailableDate?: string;

  /**
   * **unique alphanumeric identifer** of the product that was specified in the request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCode" })
  productCode?: string;
}

/**
 * Success
 */
export class BookingAvailability200ApplicationJSON extends SpeakeasyBase {
  /**
   * **object** detailing available tourgrades for the specified age bands and date range for this product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => BookingAvailability200ApplicationJSONData)
  data?: BookingAvailability200ApplicationJSONData;

  /**
   * **timestamp** of *this* response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateStamp" })
  dateStamp?: string;

  /**
   * **array** of error codes pertaining to *this* error
   *
   * @remarks
   * - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCodes" })
  errorCodes?: string[];

  /**
   * **array** of error message strings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: any[];

  /**
   * **array** of error message strings in plain text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessageText" })
  errorMessageText?: string;

  /**
   * **name** of *this* type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorName" })
  errorName?: string;

  /**
   * **reference number** of *this* error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorReference" })
  errorReference?: string;

  /**
   * **code** specifying the type of error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorType" })
  errorType?: string;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraInfo" })
  extraInfo?: Record<string, any>;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraObject" })
  extraObject?: Record<string, any>;

  /**
   * **boolean indicator** of *this* request's outcome
   *
   * @remarks
   * - `true`: the request was successful with no errors
   * - `false`: an error was encountered
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  /**
   * **number** of results available for *this* service
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;

  /**
   * **unique numeric id** of the server that processed *this* request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmid" })
  vmid?: string;
}

export class BookingAvailabilityResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  bookingAvailability200ApplicationJSONObject?: BookingAvailability200ApplicationJSON;
}
