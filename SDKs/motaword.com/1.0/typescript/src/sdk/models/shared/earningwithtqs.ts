/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum EarningWithTQSStatusEnum {
  Paid = "paid",
  Pending = "pending",
  Failed = "failed",
}

export class EarningWithTQS extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
   */
  @SpeakeasyMetadata()
  @Expose({ name: "due_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueDate?: Date;

  /**
   * Is this score above or below the average among other vendors in the same project?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_above_average" })
  isAboveAverage?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "project_id" })
  projectId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: EarningWithTQSStatusEnum;

  /**
   * The number of translated strings by this translator which was edited by a proofreader.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "strings_edited" })
  stringsEdited?: number;

  /**
   * The number of translated strings by this translator.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "strings_translated" })
  stringsTranslated?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "words" })
  words?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "words_approved" })
  wordsApproved?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "words_translated" })
  wordsTranslated?: number;
}
