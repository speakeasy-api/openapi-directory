/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateServiceRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capacityProviderStrategy")
    public CapacityProviderStrategyItem[] capacityProviderStrategy;

    public CreateServiceRequest withCapacityProviderStrategy(CapacityProviderStrategyItem[] capacityProviderStrategy) {
        this.capacityProviderStrategy = capacityProviderStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;

    public CreateServiceRequest withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cluster")
    public String cluster;

    public CreateServiceRequest withCluster(String cluster) {
        this.cluster = cluster;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deploymentConfiguration")
    public DeploymentConfiguration deploymentConfiguration;

    public CreateServiceRequest withDeploymentConfiguration(DeploymentConfiguration deploymentConfiguration) {
        this.deploymentConfiguration = deploymentConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deploymentController")
    public DeploymentController deploymentController;

    public CreateServiceRequest withDeploymentController(DeploymentController deploymentController) {
        this.deploymentController = deploymentController;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredCount")
    public Long desiredCount;

    public CreateServiceRequest withDesiredCount(Long desiredCount) {
        this.desiredCount = desiredCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableECSManagedTags")
    public Boolean enableECSManagedTags;

    public CreateServiceRequest withEnableECSManagedTags(Boolean enableECSManagedTags) {
        this.enableECSManagedTags = enableECSManagedTags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableExecuteCommand")
    public Boolean enableExecuteCommand;

    public CreateServiceRequest withEnableExecuteCommand(Boolean enableExecuteCommand) {
        this.enableExecuteCommand = enableExecuteCommand;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("healthCheckGracePeriodSeconds")
    public Long healthCheckGracePeriodSeconds;

    public CreateServiceRequest withHealthCheckGracePeriodSeconds(Long healthCheckGracePeriodSeconds) {
        this.healthCheckGracePeriodSeconds = healthCheckGracePeriodSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchType")
    public LaunchTypeEnum launchType;

    public CreateServiceRequest withLaunchType(LaunchTypeEnum launchType) {
        this.launchType = launchType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loadBalancers")
    public LoadBalancer[] loadBalancers;

    public CreateServiceRequest withLoadBalancers(LoadBalancer[] loadBalancers) {
        this.loadBalancers = loadBalancers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfiguration")
    public NetworkConfiguration networkConfiguration;

    public CreateServiceRequest withNetworkConfiguration(NetworkConfiguration networkConfiguration) {
        this.networkConfiguration = networkConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placementConstraints")
    public PlacementConstraint[] placementConstraints;

    public CreateServiceRequest withPlacementConstraints(PlacementConstraint[] placementConstraints) {
        this.placementConstraints = placementConstraints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placementStrategy")
    public PlacementStrategy[] placementStrategy;

    public CreateServiceRequest withPlacementStrategy(PlacementStrategy[] placementStrategy) {
        this.placementStrategy = placementStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformVersion")
    public String platformVersion;

    public CreateServiceRequest withPlatformVersion(String platformVersion) {
        this.platformVersion = platformVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("propagateTags")
    public PropagateTagsEnum propagateTags;

    public CreateServiceRequest withPropagateTags(PropagateTagsEnum propagateTags) {
        this.propagateTags = propagateTags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public String role;

    public CreateServiceRequest withRole(String role) {
        this.role = role;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedulingStrategy")
    public SchedulingStrategyEnum schedulingStrategy;

    public CreateServiceRequest withSchedulingStrategy(SchedulingStrategyEnum schedulingStrategy) {
        this.schedulingStrategy = schedulingStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceConnectConfiguration")
    public ServiceConnectConfiguration serviceConnectConfiguration;

    public CreateServiceRequest withServiceConnectConfiguration(ServiceConnectConfiguration serviceConnectConfiguration) {
        this.serviceConnectConfiguration = serviceConnectConfiguration;
        return this;
    }
    
    @JsonProperty("serviceName")
    public String serviceName;

    public CreateServiceRequest withServiceName(String serviceName) {
        this.serviceName = serviceName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceRegistries")
    public ServiceRegistry[] serviceRegistries;

    public CreateServiceRequest withServiceRegistries(ServiceRegistry[] serviceRegistries) {
        this.serviceRegistries = serviceRegistries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public Tag[] tags;

    public CreateServiceRequest withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskDefinition")
    public String taskDefinition;

    public CreateServiceRequest withTaskDefinition(String taskDefinition) {
        this.taskDefinition = taskDefinition;
        return this;
    }
    
    public CreateServiceRequest(@JsonProperty("serviceName") String serviceName) {
        this.serviceName = serviceName;
  }
}
