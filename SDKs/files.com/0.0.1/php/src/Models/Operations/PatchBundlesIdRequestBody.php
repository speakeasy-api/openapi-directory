<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PatchBundlesIdRequestBody
{
    /**
     * ID of the clickwrap to use with this bundle.
     * 
     * @var ?int $clickwrapId
     */
	#[SpeakeasyMetadata('multipartForm:name=clickwrap_id')]
    public ?int $clickwrapId = null;
    
    /**
     * Bundle code.  This code forms the end part of the Public URL.
     * 
     * @var ?string $code
     */
	#[SpeakeasyMetadata('multipartForm:name=code')]
    public ?string $code = null;
    
    /**
     * Public description
     * 
     * @var ?string $description
     */
	#[SpeakeasyMetadata('multipartForm:name=description')]
    public ?string $description = null;
    
    /**
     * Do not create subfolders for files uploaded to this share. Note: there are subtle security pitfalls with allowing anonymous uploads from multiple users to live in the same folder. We strongly discourage use of this option unless absolutely required.
     * 
     * @var ?bool $dontSeparateSubmissionsByFolder
     */
	#[SpeakeasyMetadata('multipartForm:name=dont_separate_submissions_by_folder')]
    public ?bool $dontSeparateSubmissionsByFolder = null;
    
    /**
     * Bundle expiration date/time
     * 
     * @var ?\DateTime $expiresAt
     */
	#[SpeakeasyMetadata('multipartForm:name=expires_at,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $expiresAt = null;
    
    /**
     * Id of Form Field Set to use with this bundle
     * 
     * @var ?int $formFieldSetId
     */
	#[SpeakeasyMetadata('multipartForm:name=form_field_set_id')]
    public ?int $formFieldSetId = null;
    
    /**
     * ID of the associated inbox, if available.
     * 
     * @var ?int $inboxId
     */
	#[SpeakeasyMetadata('multipartForm:name=inbox_id')]
    public ?int $inboxId = null;
    
    /**
     * Maximum number of times bundle can be accessed
     * 
     * @var ?int $maxUses
     */
	#[SpeakeasyMetadata('multipartForm:name=max_uses')]
    public ?int $maxUses = null;
    
    /**
     * Bundle internal note
     * 
     * @var ?string $note
     */
	#[SpeakeasyMetadata('multipartForm:name=note')]
    public ?string $note = null;
    
    /**
     * Password for this bundle.
     * 
     * @var ?string $password
     */
	#[SpeakeasyMetadata('multipartForm:name=password')]
    public ?string $password = null;
    
    /**
     * Template for creating submission subfolders. Can use the uploader's name, email address, ip, company, and any custom form data.
     * 
     * @var ?string $pathTemplate
     */
	#[SpeakeasyMetadata('multipartForm:name=path_template')]
    public ?string $pathTemplate = null;
    
    /**
     * A list of paths to include in this bundle.
     * 
     * @var ?array<string> $paths
     */
	#[SpeakeasyMetadata('multipartForm:name=paths')]
    public ?array $paths = null;
    
    /**
     * Permissions that apply to Folders in this Share Link.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PatchBundlesIdRequestBodyPermissionsEnum $permissions
     */
	#[SpeakeasyMetadata('multipartForm:name=permissions')]
    public ?PatchBundlesIdRequestBodyPermissionsEnum $permissions = null;
    
    /**
     * Restrict users to previewing files only?
     * 
     * @var ?bool $previewOnly
     */
	#[SpeakeasyMetadata('multipartForm:name=preview_only')]
    public ?bool $previewOnly = null;
    
    /**
     * Show a registration page that captures the downloader's name and email address?
     * 
     * @var ?bool $requireRegistration
     */
	#[SpeakeasyMetadata('multipartForm:name=require_registration')]
    public ?bool $requireRegistration = null;
    
    /**
     * Only allow access to recipients who have explicitly received the share via an email sent through the Files.com UI?
     * 
     * @var ?bool $requireShareRecipient
     */
	#[SpeakeasyMetadata('multipartForm:name=require_share_recipient')]
    public ?bool $requireShareRecipient = null;
    
    /**
     * Send delivery receipt to the uploader. Note: For writable share only
     * 
     * @var ?bool $sendEmailReceiptToUploader
     */
	#[SpeakeasyMetadata('multipartForm:name=send_email_receipt_to_uploader')]
    public ?bool $sendEmailReceiptToUploader = null;
    
    /**
     * BundleRegistrations can be saved without providing company?
     * 
     * @var ?bool $skipCompany
     */
	#[SpeakeasyMetadata('multipartForm:name=skip_company')]
    public ?bool $skipCompany = null;
    
    /**
     * BundleRegistrations can be saved without providing email?
     * 
     * @var ?bool $skipEmail
     */
	#[SpeakeasyMetadata('multipartForm:name=skip_email')]
    public ?bool $skipEmail = null;
    
    /**
     * BundleRegistrations can be saved without providing name?
     * 
     * @var ?bool $skipName
     */
	#[SpeakeasyMetadata('multipartForm:name=skip_name')]
    public ?bool $skipName = null;
    
    /**
     * If true, will delete the file stored in watermark_attachment
     * 
     * @var ?bool $watermarkAttachmentDelete
     */
	#[SpeakeasyMetadata('multipartForm:name=watermark_attachment_delete')]
    public ?bool $watermarkAttachmentDelete = null;
    
    /**
     * Preview watermark image applied to all bundle items.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PatchBundlesIdRequestBodyWatermarkAttachmentFile $watermarkAttachmentFile
     */
	#[SpeakeasyMetadata('multipartForm:file=true')]
    public ?PatchBundlesIdRequestBodyWatermarkAttachmentFile $watermarkAttachmentFile = null;
    
	public function __construct()
	{
		$this->clickwrapId = null;
		$this->code = null;
		$this->description = null;
		$this->dontSeparateSubmissionsByFolder = null;
		$this->expiresAt = null;
		$this->formFieldSetId = null;
		$this->inboxId = null;
		$this->maxUses = null;
		$this->note = null;
		$this->password = null;
		$this->pathTemplate = null;
		$this->paths = null;
		$this->permissions = null;
		$this->previewOnly = null;
		$this->requireRegistration = null;
		$this->requireShareRecipient = null;
		$this->sendEmailReceiptToUploader = null;
		$this->skipCompany = null;
		$this->skipEmail = null;
		$this->skipName = null;
		$this->watermarkAttachmentDelete = null;
		$this->watermarkAttachmentFile = null;
	}
}
