"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import progress as shared_progress
from typing import Optional


@dataclasses.dataclass
class GetContinuousProjectDocumentProgressRequest:
    
    document_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'documentId', 'style': 'simple', 'explode': False }})
    r"""Document ID/Name"""  
    project_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""Continuous project ID"""  
    filter_by_language: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filterByLanguage', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetContinuousProjectDocumentProgressResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""ProjectNotFound"""  
    progress: Optional[shared_progress.Progress] = dataclasses.field(default=None)
    r"""Progress information"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    