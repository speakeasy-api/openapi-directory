"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lftag as shared_lftag
from ..shared import resourcetype_enum as shared_resourcetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LFTagPolicyResource:
    r"""A structure containing a list of LF-tag conditions that apply to a resource's LF-tag policy."""
    
    expression: list[shared_lftag.LFTag] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Expression') }})  
    resource_type: shared_resourcetype_enum.ResourceTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceType') }})  
    catalog_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CatalogId'), 'exclude': lambda f: f is None }})  
    