/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QuerySchedule - Information on how frequently and when to run a query.
 */
public class QuerySchedule {
    /**
     * Datetime to periodically run the query until.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTimeMs")
    public String endTimeMs;

    public QuerySchedule withEndTimeMs(String endTimeMs) {
        this.endTimeMs = endTimeMs;
        return this;
    }
    
    /**
     * How often the query is run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frequency")
    public QueryScheduleFrequencyEnum frequency;

    public QuerySchedule withFrequency(QueryScheduleFrequencyEnum frequency) {
        this.frequency = frequency;
        return this;
    }
    
    /**
     * Time of day at which a new report will be generated, represented as minutes past midnight. Range is 0 to 1439. Only applies to scheduled reports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextRunMinuteOfDay")
    public Integer nextRunMinuteOfDay;

    public QuerySchedule withNextRunMinuteOfDay(Integer nextRunMinuteOfDay) {
        this.nextRunMinuteOfDay = nextRunMinuteOfDay;
        return this;
    }
    
    /**
     * Canonical timezone code for report generation time. Defaults to America/New_York.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextRunTimezoneCode")
    public String nextRunTimezoneCode;

    public QuerySchedule withNextRunTimezoneCode(String nextRunTimezoneCode) {
        this.nextRunTimezoneCode = nextRunTimezoneCode;
        return this;
    }
    
    /**
     * When to start running the query. Not applicable to `ONE_TIME` frequency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTimeMs")
    public String startTimeMs;

    public QuerySchedule withStartTimeMs(String startTimeMs) {
        this.startTimeMs = startTimeMs;
        return this;
    }
    
    public QuerySchedule(){}
}
