<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SaveTransactionsResponseData
{
    /**
     * If multiple transactions were specified, a list of import_ids that were not created because of an existing `import_id` found on the same account
     * 
     * @var ?array<string> $duplicateImportIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('duplicate_import_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $duplicateImportIds = null;
    
    /**
     * The knowledge of the server
     * 
     * @var int $serverKnowledge
     */
	#[\JMS\Serializer\Annotation\SerializedName('server_knowledge')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $serverKnowledge;
    
	#[\JMS\Serializer\Annotation\SerializedName('transaction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionDetail $transaction = null;
    
    /**
     * The transaction ids that were saved
     * 
     * @var array<string> $transactionIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $transactionIds;
    
    /**
     * If multiple transactions were specified, the transactions that were saved
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TransactionDetail> $transactions
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TransactionDetail>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $transactions = null;
    
	public function __construct()
	{
		$this->duplicateImportIds = null;
		$this->serverKnowledge = 0;
		$this->transaction = null;
		$this->transactionIds = [];
		$this->transactions = null;
	}
}
