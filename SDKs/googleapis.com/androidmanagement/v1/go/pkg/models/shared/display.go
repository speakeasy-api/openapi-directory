// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DisplayStateEnum - State of the display.
type DisplayStateEnum string

const (
	DisplayStateEnumDisplayStateUnspecified DisplayStateEnum = "DISPLAY_STATE_UNSPECIFIED"
	DisplayStateEnumOff                     DisplayStateEnum = "OFF"
	DisplayStateEnumOn                      DisplayStateEnum = "ON"
	DisplayStateEnumDoze                    DisplayStateEnum = "DOZE"
	DisplayStateEnumSuspended               DisplayStateEnum = "SUSPENDED"
)

func (e *DisplayStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DISPLAY_STATE_UNSPECIFIED":
		fallthrough
	case "OFF":
		fallthrough
	case "ON":
		fallthrough
	case "DOZE":
		fallthrough
	case "SUSPENDED":
		*e = DisplayStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisplayStateEnum: %s", s)
	}
}

// Display - Device display information.
type Display struct {
	// Display density expressed as dots-per-inch.
	Density *int `json:"density,omitempty"`
	// Unique display id.
	DisplayID *int `json:"displayId,omitempty"`
	// Display height in pixels.
	Height *int `json:"height,omitempty"`
	// Name of the display.
	Name *string `json:"name,omitempty"`
	// Refresh rate of the display in frames per second.
	RefreshRate *int `json:"refreshRate,omitempty"`
	// State of the display.
	State *DisplayStateEnum `json:"state,omitempty"`
	// Display width in pixels.
	Width *int `json:"width,omitempty"`
}
