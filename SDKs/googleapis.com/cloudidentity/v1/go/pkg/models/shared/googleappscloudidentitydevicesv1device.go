// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum - Output only. Represents whether the Device is compromised.
type GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum string

const (
	GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnumCompromisedStateUnspecified GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum = "COMPROMISED_STATE_UNSPECIFIED"
	GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnumCompromised                 GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum = "COMPROMISED"
	GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnumUncompromised               GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum = "UNCOMPROMISED"
)

func (e *GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPROMISED_STATE_UNSPECIFIED":
		fallthrough
	case "COMPROMISED":
		fallthrough
	case "UNCOMPROMISED":
		*e = GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum: %s", s)
	}
}

// GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum - Output only. Type of device.
type GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum string

const (
	GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnumDeviceTypeUnspecified GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum = "DEVICE_TYPE_UNSPECIFIED"
	GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnumAndroid               GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum = "ANDROID"
	GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnumIos                   GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum = "IOS"
	GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnumGoogleSync            GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum = "GOOGLE_SYNC"
	GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnumWindows               GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum = "WINDOWS"
	GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnumMacOs                 GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum = "MAC_OS"
	GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnumLinux                 GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum = "LINUX"
	GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnumChromeOs              GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum = "CHROME_OS"
)

func (e *GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEVICE_TYPE_UNSPECIFIED":
		fallthrough
	case "ANDROID":
		fallthrough
	case "IOS":
		fallthrough
	case "GOOGLE_SYNC":
		fallthrough
	case "WINDOWS":
		fallthrough
	case "MAC_OS":
		fallthrough
	case "LINUX":
		fallthrough
	case "CHROME_OS":
		*e = GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum: %s", s)
	}
}

// GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum - Output only. Device encryption state.
type GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum string

const (
	GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnumEncryptionStateUnspecified GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum = "ENCRYPTION_STATE_UNSPECIFIED"
	GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnumUnsupportedByDevice        GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum = "UNSUPPORTED_BY_DEVICE"
	GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnumEncrypted                  GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum = "ENCRYPTED"
	GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnumNotEncrypted               GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum = "NOT_ENCRYPTED"
)

func (e *GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENCRYPTION_STATE_UNSPECIFIED":
		fallthrough
	case "UNSUPPORTED_BY_DEVICE":
		fallthrough
	case "ENCRYPTED":
		fallthrough
	case "NOT_ENCRYPTED":
		*e = GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum: %s", s)
	}
}

// GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum - Output only. Management state of the device
type GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum string

const (
	GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnumManagementStateUnspecified GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum = "MANAGEMENT_STATE_UNSPECIFIED"
	GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnumApproved                   GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum = "APPROVED"
	GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnumBlocked                    GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum = "BLOCKED"
	GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnumPending                    GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum = "PENDING"
	GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnumUnprovisioned              GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum = "UNPROVISIONED"
	GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnumWiping                     GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum = "WIPING"
	GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnumWiped                      GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum = "WIPED"
)

func (e *GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MANAGEMENT_STATE_UNSPECIFIED":
		fallthrough
	case "APPROVED":
		fallthrough
	case "BLOCKED":
		fallthrough
	case "PENDING":
		fallthrough
	case "UNPROVISIONED":
		fallthrough
	case "WIPING":
		fallthrough
	case "WIPED":
		*e = GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum: %s", s)
	}
}

// GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum - Output only. Whether the device is owned by the company or an individual
type GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum string

const (
	GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnumDeviceOwnershipUnspecified GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum = "DEVICE_OWNERSHIP_UNSPECIFIED"
	GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnumCompany                    GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum = "COMPANY"
	GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnumByod                       GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum = "BYOD"
)

func (e *GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEVICE_OWNERSHIP_UNSPECIFIED":
		fallthrough
	case "COMPANY":
		fallthrough
	case "BYOD":
		*e = GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum: %s", s)
	}
}

// GoogleAppsCloudidentityDevicesV1Device -  A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
type GoogleAppsCloudidentityDevicesV1Device struct {
	// Resource representing the Android specific attributes of a Device.
	AndroidSpecificAttributes *GoogleAppsCloudidentityDevicesV1AndroidAttributes `json:"androidSpecificAttributes,omitempty"`
	// Asset tag of the device.
	AssetTag *string `json:"assetTag,omitempty"`
	// Output only. Baseband version of the device.
	BasebandVersion *string `json:"basebandVersion,omitempty"`
	// Output only. Device bootloader version. Example: 0.6.7.
	BootloaderVersion *string `json:"bootloaderVersion,omitempty"`
	// Output only. Device brand. Example: Samsung.
	Brand *string `json:"brand,omitempty"`
	// Output only. Build number of the device.
	BuildNumber *string `json:"buildNumber,omitempty"`
	// Output only. Represents whether the Device is compromised.
	CompromisedState *GoogleAppsCloudidentityDevicesV1DeviceCompromisedStateEnum `json:"compromisedState,omitempty"`
	// Output only. When the Company-Owned device was imported. This field is empty for BYOD devices.
	CreateTime *string `json:"createTime,omitempty"`
	// Unique identifier for the device.
	DeviceID *string `json:"deviceId,omitempty"`
	// Output only. Type of device.
	DeviceType *GoogleAppsCloudidentityDevicesV1DeviceDeviceTypeEnum `json:"deviceType,omitempty"`
	// Output only. Whether developer options is enabled on device.
	EnabledDeveloperOptions *bool `json:"enabledDeveloperOptions,omitempty"`
	// Output only. Whether USB debugging is enabled on device.
	EnabledUsbDebugging *bool `json:"enabledUsbDebugging,omitempty"`
	// Output only. Device encryption state.
	EncryptionState *GoogleAppsCloudidentityDevicesV1DeviceEncryptionStateEnum `json:"encryptionState,omitempty"`
	// Output only. IMEI number of device if GSM device; empty otherwise.
	Imei *string `json:"imei,omitempty"`
	// Output only. Kernel version of the device.
	KernelVersion *string `json:"kernelVersion,omitempty"`
	// Most recent time when device synced with this service.
	LastSyncTime *string `json:"lastSyncTime,omitempty"`
	// Output only. Management state of the device
	ManagementState *GoogleAppsCloudidentityDevicesV1DeviceManagementStateEnum `json:"managementState,omitempty"`
	// Output only. Device manufacturer. Example: Motorola.
	Manufacturer *string `json:"manufacturer,omitempty"`
	// Output only. MEID number of device if CDMA device; empty otherwise.
	Meid *string `json:"meid,omitempty"`
	// Output only. Model name of device. Example: Pixel 3.
	Model *string `json:"model,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the Device in format: `devices/{device}`, where device is the unique id assigned to the Device.
	Name *string `json:"name,omitempty"`
	// Output only. Mobile or network operator of device, if available.
	NetworkOperator *string `json:"networkOperator,omitempty"`
	// Output only. OS version of the device. Example: Android 8.1.0.
	OsVersion *string `json:"osVersion,omitempty"`
	// Output only. Domain name for Google accounts on device. Type for other accounts on device. On Android, will only be populated if |ownership_privilege| is |PROFILE_OWNER| or |DEVICE_OWNER|. Does not include the account signed in to the device policy app if that account's domain has only one account. Examples: "com.example", "xyz.com".
	OtherAccounts []string `json:"otherAccounts,omitempty"`
	// Output only. Whether the device is owned by the company or an individual
	OwnerType *GoogleAppsCloudidentityDevicesV1DeviceOwnerTypeEnum `json:"ownerType,omitempty"`
	// Output only. OS release version. Example: 6.0.
	ReleaseVersion *string `json:"releaseVersion,omitempty"`
	// Output only. OS security patch update time on device.
	SecurityPatchTime *string `json:"securityPatchTime,omitempty"`
	// Serial Number of device. Example: HT82V1A01076.
	SerialNumber *string `json:"serialNumber,omitempty"`
	// WiFi MAC addresses of device.
	WifiMacAddresses []string `json:"wifiMacAddresses,omitempty"`
}

// GoogleAppsCloudidentityDevicesV1DeviceInput -  A Device within the Cloud Identity Devices API. Represents a Device known to Google Cloud, independent of the device ownership, type, and whether it is assigned or in use by a user.
type GoogleAppsCloudidentityDevicesV1DeviceInput struct {
	// Resource representing the Android specific attributes of a Device.
	AndroidSpecificAttributes *GoogleAppsCloudidentityDevicesV1AndroidAttributes `json:"androidSpecificAttributes,omitempty"`
	// Asset tag of the device.
	AssetTag *string `json:"assetTag,omitempty"`
	// Unique identifier for the device.
	DeviceID *string `json:"deviceId,omitempty"`
	// Most recent time when device synced with this service.
	LastSyncTime *string `json:"lastSyncTime,omitempty"`
	// Serial Number of device. Example: HT82V1A01076.
	SerialNumber *string `json:"serialNumber,omitempty"`
	// WiFi MAC addresses of device.
	WifiMacAddresses []string `json:"wifiMacAddresses,omitempty"`
}
