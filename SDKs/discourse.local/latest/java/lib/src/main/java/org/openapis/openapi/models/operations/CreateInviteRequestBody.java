/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateInviteRequestBody {
    /**
     * optional, for email invites
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_message")
    public String customMessage;
    public CreateInviteRequestBody withCustomMessage(String customMessage) {
        this.customMessage = customMessage;
        return this;
    }
    
    /**
     * required for email invites only
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public CreateInviteRequestBody withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * optional, if not supplied, the invite_expiry_days site
     * setting is used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expires_at")
    public String expiresAt;
    public CreateInviteRequestBody withExpiresAt(String expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }
    
    /**
     * optional, either this or `group_names`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group_id")
    public Long groupId;
    public CreateInviteRequestBody withGroupId(Long groupId) {
        this.groupId = groupId;
        return this;
    }
    
    /**
     * optional, either this or `group_id`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group_names")
    public String groupNames;
    public CreateInviteRequestBody withGroupNames(String groupNames) {
        this.groupNames = groupNames;
        return this;
    }
    
    /**
     * optional, for link invites
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_redemptions_allowed")
    public Long maxRedemptionsAllowed;
    public CreateInviteRequestBody withMaxRedemptionsAllowed(Long maxRedemptionsAllowed) {
        this.maxRedemptionsAllowed = maxRedemptionsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skip_email")
    public Boolean skipEmail;
    public CreateInviteRequestBody withSkipEmail(Boolean skipEmail) {
        this.skipEmail = skipEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topic_id")
    public Long topicId;
    public CreateInviteRequestBody withTopicId(Long topicId) {
        this.topicId = topicId;
        return this;
    }
    
}
