"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import deployment as shared_deployment
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum(str, Enum):
    r"""Whether to approve or reject deployment to the specified environments."""
    APPROVED = 'approved'
    REJECTED = 'rejected'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsReviewPendingDeploymentsForRunRequestBody:
    
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment') }})
    r"""A comment to accompany the deployment review"""  
    environment_ids: list[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment_ids') }})
    r"""The list of environment ids to approve or reject"""  
    state: ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})
    r"""Whether to approve or reject deployment to the specified environments."""  
    

@dataclasses.dataclass
class ActionsReviewPendingDeploymentsForRunRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    request_body: ActionsReviewPendingDeploymentsForRunRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    run_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'run_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the workflow run."""  
    

@dataclasses.dataclass
class ActionsReviewPendingDeploymentsForRunResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    deployments: Optional[list[shared_deployment.Deployment]] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    