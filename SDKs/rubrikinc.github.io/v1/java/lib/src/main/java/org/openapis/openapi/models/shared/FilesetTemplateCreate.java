/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FilesetTemplateCreate - Provide an object with the fileset template definition.
 */
public class FilesetTemplateCreate {
    /**
     * Include or exclude hidden folders inside locally-mounted remote file systems from backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowBackupHiddenFoldersInNetworkMounts")
    public Boolean allowBackupHiddenFoldersInNetworkMounts;

    public FilesetTemplateCreate withAllowBackupHiddenFoldersInNetworkMounts(Boolean allowBackupHiddenFoldersInNetworkMounts) {
        this.allowBackupHiddenFoldersInNetworkMounts = allowBackupHiddenFoldersInNetworkMounts;
        return this;
    }
    
    /**
     * Include or exclude locally-mounted remote file systems from backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowBackupNetworkMounts")
    public Boolean allowBackupNetworkMounts;

    public FilesetTemplateCreate withAllowBackupNetworkMounts(Boolean allowBackupNetworkMounts) {
        this.allowBackupNetworkMounts = allowBackupNetworkMounts;
        return this;
    }
    
    /**
     * Action taken if script fails. Options are "abort", "continue".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupScriptErrorHandling")
    public String backupScriptErrorHandling;

    public FilesetTemplateCreate withBackupScriptErrorHandling(String backupScriptErrorHandling) {
        this.backupScriptErrorHandling = backupScriptErrorHandling;
        return this;
    }
    
    /**
     * Number of seconds after which the script is killed if it has not completed execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupScriptTimeout")
    public Long backupScriptTimeout;

    public FilesetTemplateCreate withBackupScriptTimeout(Long backupScriptTimeout) {
        this.backupScriptTimeout = backupScriptTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exceptions")
    public String[] exceptions;

    public FilesetTemplateCreate withExceptions(String[] exceptions) {
        this.exceptions = exceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludes")
    public String[] excludes;

    public FilesetTemplateCreate withExcludes(String[] excludes) {
        this.excludes = excludes;
        return this;
    }
    
    @JsonProperty("includes")
    public String[] includes;

    public FilesetTemplateCreate withIncludes(String[] includes) {
        this.includes = includes;
        return this;
    }
    
    /**
     * Boolean value that determines whether the fileset is array-enabled. Set to true to indicate that the fileset is array-enabled. Set to false to indicate that the fileset is not array-enabled. When a fileset is array-enabled, the includes must be top-level LVM logical volume mount points.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isArrayEnabled")
    public Boolean isArrayEnabled;

    public FilesetTemplateCreate withIsArrayEnabled(Boolean isArrayEnabled) {
        this.isArrayEnabled = isArrayEnabled;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public FilesetTemplateCreate withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Operating system type of filesets created by template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatingSystemType")
    public FilesetTemplateCreateOperatingSystemTypeEnum operatingSystemType;

    public FilesetTemplateCreate withOperatingSystemType(FilesetTemplateCreateOperatingSystemTypeEnum operatingSystemType) {
        this.operatingSystemType = operatingSystemType;
        return this;
    }
    
    /**
     * Script to run after backup of this fileset ends.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postBackupScript")
    public String postBackupScript;

    public FilesetTemplateCreate withPostBackupScript(String postBackupScript) {
        this.postBackupScript = postBackupScript;
        return this;
    }
    
    /**
     * Script to run before backup of this fileset starts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preBackupScript")
    public String preBackupScript;

    public FilesetTemplateCreate withPreBackupScript(String preBackupScript) {
        this.preBackupScript = preBackupScript;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareType")
    public FilesetTemplateCreateShareTypeEnum shareType;

    public FilesetTemplateCreate withShareType(FilesetTemplateCreateShareTypeEnum shareType) {
        this.shareType = shareType;
        return this;
    }
    
    /**
     * Use VSS during Windows backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useWindowsVss")
    public Boolean useWindowsVss;

    public FilesetTemplateCreate withUseWindowsVss(Boolean useWindowsVss) {
        this.useWindowsVss = useWindowsVss;
        return this;
    }
    
    public FilesetTemplateCreate(@JsonProperty("includes") String[] includes, @JsonProperty("name") String name) {
        this.includes = includes;
        this.name = name;
  }
}
