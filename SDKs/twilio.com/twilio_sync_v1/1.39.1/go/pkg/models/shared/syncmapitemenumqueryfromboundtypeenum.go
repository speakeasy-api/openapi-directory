// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SyncMapItemEnumQueryFromBoundTypeEnum - Whether to include the Map Item referenced by the `from` parameter. Can be: `inclusive` to include the Map Item referenced by the `from` parameter or `exclusive` to start with the next Map Item. The default value is `inclusive`.
type SyncMapItemEnumQueryFromBoundTypeEnum string

const (
	SyncMapItemEnumQueryFromBoundTypeEnumInclusive SyncMapItemEnumQueryFromBoundTypeEnum = "inclusive"
	SyncMapItemEnumQueryFromBoundTypeEnumExclusive SyncMapItemEnumQueryFromBoundTypeEnum = "exclusive"
)

func (e *SyncMapItemEnumQueryFromBoundTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "inclusive":
		fallthrough
	case "exclusive":
		*e = SyncMapItemEnumQueryFromBoundTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SyncMapItemEnumQueryFromBoundTypeEnum: %s", s)
	}
}
