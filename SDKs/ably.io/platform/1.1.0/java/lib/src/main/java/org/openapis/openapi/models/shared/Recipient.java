/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Recipient - Push recipient details for a device.
 */
public class Recipient {
    /**
     * Client ID of recipient
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;

    public Recipient withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Client ID of recipient
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceId")
    public String deviceId;

    public Recipient withDeviceId(String deviceId) {
        this.deviceId = deviceId;
        return this;
    }
    
    /**
     * when using APNs, specifies the required device token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceToken")
    public String deviceToken;

    public Recipient withDeviceToken(String deviceToken) {
        this.deviceToken = deviceToken;
        return this;
    }
    
    /**
     * when using GCM or FCM, specifies the required registration token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationToken")
    public String registrationToken;

    public Recipient withRegistrationToken(String registrationToken) {
        this.registrationToken = registrationToken;
        return this;
    }
    
    /**
     * Defines which push platform is being used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transportType")
    public RecipientTransportTypeEnum transportType;

    public Recipient withTransportType(RecipientTransportTypeEnum transportType) {
        this.transportType = transportType;
        return this;
    }
    
    public Recipient(){}
}
