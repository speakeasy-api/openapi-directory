"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getcomputedprice as shared_getcomputedprice
from typing import Optional

GET_COMPUTED_PRICEBYPRICETABLE_SERVERS = [
	"https://api.vtex.com/{account}/pricing",
]


@dataclasses.dataclass
class GetComputedPricebypricetableRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."""  
    brand_id: int = dataclasses.field(metadata={'query_param': { 'field_name': 'brandId', 'style': 'form', 'explode': True }})
    r"""Brand ID."""  
    category_ids: int = dataclasses.field(metadata={'query_param': { 'field_name': 'categoryIds', 'style': 'form', 'explode': True }})
    r"""Category ID."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Describes the type of the content being sent."""  
    item_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'itemId', 'style': 'simple', 'explode': False }})
    r"""SKU ID."""  
    price_table_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'priceTableId', 'style': 'simple', 'explode': False }})
    r"""SKU Price Table Name."""  
    quantity: int = dataclasses.field(metadata={'query_param': { 'field_name': 'quantity', 'style': 'form', 'explode': True }})
    r"""SKU quantity."""  
    

@dataclasses.dataclass
class GetComputedPricebypricetableResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    getcomputedprice: Optional[shared_getcomputedprice.Getcomputedprice] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    