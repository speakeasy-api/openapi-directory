/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class BusinessUsers {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public BusinessUsers(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Delete User
     * &lt;p&gt;Use this endpoint to permanently &lt;b&gt;Delete&lt;/b&gt; a Business User. A valid &lt;b&gt;businessUser id&lt;/b&gt; is required.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteSetupV1BusinessusersIdResponse deleteSetupV1BusinessusersId(org.openapis.openapi.models.operations.DeleteSetupV1BusinessusersIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteSetupV1BusinessusersIdRequest.class, baseUrl, "/setup/v1/businessusers/{id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteSetupV1BusinessusersIdResponse res = new org.openapis.openapi.models.operations.DeleteSetupV1BusinessusersIdResponse() {{
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }

        return res;
    }

    /**
     * List Users
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Business Users and their Roles&lt;/b&gt;. The results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetSetupV1BusinessusersResponse getSetupV1Businessusers(org.openapis.openapi.models.operations.GetSetupV1BusinessusersRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/v1/businessusers");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.GetSetupV1BusinessusersRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetSetupV1BusinessusersResponse res = new org.openapis.openapi.models.operations.GetSetupV1BusinessusersResponse() {{
            businessUserListViewModel = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BusinessUserListViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BusinessUserListViewModel.class);
                res.businessUserListViewModel = out;
            }
        }

        return res;
    }

    /**
     * List User Permissions
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Business User Permissions by Role&lt;/b&gt;. Results are returned in pages. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetSetupV1BusinessusersPermissionsResponse getSetupV1BusinessusersPermissions(org.openapis.openapi.models.operations.GetSetupV1BusinessusersPermissionsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/v1/businessusers/permissions");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.GetSetupV1BusinessusersPermissionsRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetSetupV1BusinessusersPermissionsResponse res = new org.openapis.openapi.models.operations.GetSetupV1BusinessusersPermissionsResponse() {{
            businessPermissionListViewModel = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BusinessPermissionListViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BusinessPermissionListViewModel.class);
                res.businessPermissionListViewModel = out;
            }
        }

        return res;
    }

    /**
     * List User Companies
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;List of Companies&lt;/b&gt; associated with the business users email requested. A business user &lt;b&gt;email&lt;/b&gt; address is required. Use the offset and limit parameters to control the page start and number of results. Default offset is 0, limit is 20, max is 100. Use the query parameters to filter the results further.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetSetupV1BusinessusersEmailCompaniesResponse getSetupV1BusinessusersEmailCompanies(org.openapis.openapi.models.operations.GetSetupV1BusinessusersEmailCompaniesRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetSetupV1BusinessusersEmailCompaniesRequest.class, baseUrl, "/setup/v1/businessusers/{email}/companies", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.GetSetupV1BusinessusersEmailCompaniesRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetSetupV1BusinessusersEmailCompaniesResponse res = new org.openapis.openapi.models.operations.GetSetupV1BusinessusersEmailCompaniesResponse() {{
            authorizedCompanyListViewModel = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.AuthorizedCompanyListViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.AuthorizedCompanyListViewModel.class);
                res.authorizedCompanyListViewModel = out;
            }
        }

        return res;
    }

    /**
     * Get User
     * &lt;p&gt;Use this endpoint to return a &lt;b&gt;Business User&lt;/b&gt; object. A valid &lt;b&gt;businessUser id&lt;/b&gt; is required. Find businessUser id's using the &lt;i&gt;GET /setup/v1/businessusers&lt;/i&gt; endpoint.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetSetupV1BusinessusersIdResponse getSetupV1BusinessusersId(org.openapis.openapi.models.operations.GetSetupV1BusinessusersIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetSetupV1BusinessusersIdRequest.class, baseUrl, "/setup/v1/businessusers/{id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetSetupV1BusinessusersIdResponse res = new org.openapis.openapi.models.operations.GetSetupV1BusinessusersIdResponse() {{
            businessUserViewModel = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BusinessUserViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BusinessUserViewModel.class);
                res.businessUserViewModel = out;
            }
        }

        return res;
    }

    /**
     * Create User
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Create&lt;/b&gt; a Business User. If not specified, the business location defaults to the primary business location. &lt;/p&gt;
     * &lt;p&gt;Required fields: &lt;b&gt;Name&lt;/b&gt;, &lt;b&gt;Email&lt;/b&gt; and &lt;b&gt;Role&lt;/b&gt;&lt;b&gt;Note:&lt;/b&gt; If the businessUser is a bookable resource (bizresource) then a resourceId is required.&lt;/p&gt;
     * &lt;p&gt;For role, use one of the values listed. &lt;b&gt;Business Roles Include: bizowner&lt;/b&gt; (Business Owner), &lt;b&gt;bizadmin&lt;/b&gt; (Business Administrator), &lt;b&gt;bizresource&lt;/b&gt; (Business User - Bookable Resource).&lt;/p&gt;
     * &lt;p&gt;The &lt;b&gt;sendRegistrationInvite&lt;/b&gt; parameter is available to API consumers for their own use. It provides no added functionality in OnSched.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostSetupV1BusinessusersResponse postSetupV1Businessusers(org.openapis.openapi.models.shared.BusinessUserInputModel request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/setup/v1/businessusers");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostSetupV1BusinessusersResponse res = new org.openapis.openapi.models.operations.PostSetupV1BusinessusersResponse() {{
            businessUserViewModel = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BusinessUserViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BusinessUserViewModel.class);
                res.businessUserViewModel = out;
            }
        }

        return res;
    }

    /**
     * Update User
     * &lt;p&gt;Use this endpoint to &lt;b&gt;Update&lt;/b&gt; a Business User. A valid &lt;b&gt;businessUser id&lt;/b&gt; is required.&lt;/p&gt;
     * &lt;p&gt;
     *   &lt;b&gt;Business Roles Include: bizowner&lt;/b&gt; (Business Owner), &lt;b&gt;bizadmin&lt;/b&gt; (Business Administrator), &lt;b&gt;bizresource&lt;/b&gt; (Business User - Bookable Resource).&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PutSetupV1BusinessusersIdResponse putSetupV1BusinessusersId(org.openapis.openapi.models.operations.PutSetupV1BusinessusersIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PutSetupV1BusinessusersIdRequest.class, baseUrl, "/setup/v1/businessusers/{id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "businessUserUpdateModel", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PutSetupV1BusinessusersIdResponse res = new org.openapis.openapi.models.operations.PutSetupV1BusinessusersIdResponse() {{
            businessUserViewModel = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BusinessUserViewModel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BusinessUserViewModel.class);
                res.businessUserViewModel = out;
            }
        }

        return res;
    }
}