"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import normalizedcoordinate as shared_normalizedcoordinate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AnimationFadeFadeTypeEnum(str, Enum):
    r"""Required. Type of fade animation: `FADE_IN` or `FADE_OUT`."""
    FADE_TYPE_UNSPECIFIED = 'FADE_TYPE_UNSPECIFIED'
    FADE_IN = 'FADE_IN'
    FADE_OUT = 'FADE_OUT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnimationFade:
    r"""Display overlay object with fade animation."""
    
    end_time_offset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTimeOffset'), 'exclude': lambda f: f is None }})
    r"""The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s"""  
    fade_type: Optional[AnimationFadeFadeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fadeType'), 'exclude': lambda f: f is None }})
    r"""Required. Type of fade animation: `FADE_IN` or `FADE_OUT`."""  
    start_time_offset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTimeOffset'), 'exclude': lambda f: f is None }})
    r"""The time to start the fade animation, in seconds. Default: 0"""  
    xy: Optional[shared_normalizedcoordinate.NormalizedCoordinate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('xy'), 'exclude': lambda f: f is None }})
    r"""2D normalized coordinates. Default: `{0.0, 0.0}`"""  
    