// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// CveDetailsCvssv2 - CVSS V2 of the CVE
type CveDetailsCvssv2 struct {
	// CVSS V2 base score
	BaseScore *int64 `json:"baseScore,omitempty"`
	// CVSS V2 vector
	Vector *string `json:"vector,omitempty"`
}

// CveDetailsCvssv3BaseSeverityEnum - CVSS V3 Severity
type CveDetailsCvssv3BaseSeverityEnum string

const (
	CveDetailsCvssv3BaseSeverityEnumCritical CveDetailsCvssv3BaseSeverityEnum = "critical"
	CveDetailsCvssv3BaseSeverityEnumHigh     CveDetailsCvssv3BaseSeverityEnum = "high"
	CveDetailsCvssv3BaseSeverityEnumMedium   CveDetailsCvssv3BaseSeverityEnum = "medium"
	CveDetailsCvssv3BaseSeverityEnumLow      CveDetailsCvssv3BaseSeverityEnum = "low"
	CveDetailsCvssv3BaseSeverityEnumNone     CveDetailsCvssv3BaseSeverityEnum = "none"
)

func (e *CveDetailsCvssv3BaseSeverityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "critical":
		fallthrough
	case "high":
		fallthrough
	case "medium":
		fallthrough
	case "low":
		fallthrough
	case "none":
		*e = CveDetailsCvssv3BaseSeverityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CveDetailsCvssv3BaseSeverityEnum: %s", s)
	}
}

// CveDetailsCvssv3 - CVSS V3 of the CVE
type CveDetailsCvssv3 struct {
	// CVSS V3 base score
	BaseScore *float64 `json:"baseScore,omitempty"`
	// CVSS V3 Severity
	BaseSeverity *CveDetailsCvssv3BaseSeverityEnum `json:"baseSeverity,omitempty"`
	// CVSS V3 vector
	Vector *string `json:"vector,omitempty"`
}

type CveDetails struct {
	// CVSS V2 of the CVE
	Cvssv2 *CveDetailsCvssv2 `json:"cvssv2,omitempty"`
	// CVSS V3 of the CVE
	Cvssv3 *CveDetailsCvssv3 `json:"cvssv3,omitempty"`
	// List of CWE (Common Weakness Enumeration) of the CVE
	CweIds []string `json:"cweIds,omitempty"`
	// CVE Description
	Description *types.Date `json:"description,omitempty"`
	// CVE id
	ID *string `json:"id,omitempty"`
	// last Date the CVE was modified
	LastModifiedDate *types.Date `json:"lastModifiedDate,omitempty"`
	// Date the CVE was published
	PublishedDate *types.Date `json:"publishedDate,omitempty"`
}
