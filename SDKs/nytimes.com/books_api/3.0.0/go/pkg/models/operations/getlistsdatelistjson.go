// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GETListsDateListJSONSecurity struct {
	APIKey shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=query"`
}

type GETListsDateListJSONPathParams struct {
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Name of the Best Sellers List. You can get the full list from /lists/names.json
	List string `pathParam:"style=simple,explode=false,name=list"`
}

// GETListsDateListJSONSortOrderEnum - The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type.
type GETListsDateListJSONSortOrderEnum string

const (
	GETListsDateListJSONSortOrderEnumAsc  GETListsDateListJSONSortOrderEnum = "ASC"
	GETListsDateListJSONSortOrderEnumDesc GETListsDateListJSONSortOrderEnum = "DESC"
)

func (e *GETListsDateListJSONSortOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GETListsDateListJSONSortOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListsDateListJSONSortOrderEnum: %s", s)
	}
}

type GETListsDateListJSONQueryParams struct {
	// YYYY-MM-DD
	//
	// The week-ending date for the sales reflected on list-name. Times best-seller lists are compiled using available book sale data. The bestsellers-date may be significantly earlier than published-date. For additional information, see the explanation at the bottom of any best-seller list page on NYTimes.com (example: Hardcover Fiction, published Dec. 5 but reflecting sales to Nov. 29).
	BestsellersDate *string `queryParam:"style=form,explode=true,name=bestsellers-date"`
	// International Standard Book Number, 10 or 13 digits
	Isbn *int64 `queryParam:"style=form,explode=true,name=isbn"`
	// The name of the Times best-seller list. To get valid values, use a list names request.
	//
	// Be sure to replace spaces with hyphens (e.g., e-book-fiction or hardcover-fiction, not E-Book Fiction or Hardcover Fiction). (The parameter is not case sensitive.)
	ListName *string `queryParam:"style=form,explode=true,name=list-name"`
	// Sets the starting point of the result set
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// YYYY-MM-DD
	//
	// The date the best-seller list was published on NYTimes.com (compare bestsellers-date)
	PublishedDate *time.Time `queryParam:"style=form,explode=true,name=published-date"`
	// The rank of the best seller on list-name as of bestsellers-date
	Rank *string `queryParam:"style=form,explode=true,name=rank"`
	// The rank of the best seller on list-name one week prior to bestsellers-date
	RankLastWeek *int64 `queryParam:"style=form,explode=true,name=rank-last-week"`
	// The default is ASC (ascending). The sort-order parameter is used with the sort-by parameter — for details, see each request type.
	SortOrder *GETListsDateListJSONSortOrderEnum `queryParam:"style=form,explode=true,name=sort-order"`
	// The number of weeks that the best seller has been on list-name, as of bestsellers-date
	WeeksOnList *int64 `queryParam:"style=form,explode=true,name=weeks-on-list"`
}

type GETListsDateListJSONRequest struct {
	PathParams  GETListsDateListJSONPathParams
	QueryParams GETListsDateListJSONQueryParams
	Security    GETListsDateListJSONSecurity
}

type GETListsDateListJSON200ApplicationJSONResultsBooksIsbns struct {
	Isbn10 *string `json:"isbn10,omitempty"`
	Isbn13 *string `json:"isbn13,omitempty"`
}

type GETListsDateListJSON200ApplicationJSONResultsBooks struct {
	AgeGroup           *string                                                   `json:"age_group,omitempty"`
	AmazonProductURL   *string                                                   `json:"amazon_product_url,omitempty"`
	ArticleChapterLink *string                                                   `json:"article_chapter_link,omitempty"`
	Asterisk           *int64                                                    `json:"asterisk,omitempty"`
	Author             *string                                                   `json:"author,omitempty"`
	BookImage          *string                                                   `json:"book_image,omitempty"`
	BookReviewLink     *string                                                   `json:"book_review_link,omitempty"`
	Contributor        *string                                                   `json:"contributor,omitempty"`
	ContributorNote    *string                                                   `json:"contributor_note,omitempty"`
	Dagger             *int64                                                    `json:"dagger,omitempty"`
	Description        *string                                                   `json:"description,omitempty"`
	FirstChapterLink   *string                                                   `json:"first_chapter_link,omitempty"`
	Isbns              []GETListsDateListJSON200ApplicationJSONResultsBooksIsbns `json:"isbns,omitempty"`
	Price              *int64                                                    `json:"price,omitempty"`
	PrimaryIsbn10      *string                                                   `json:"primary_isbn10,omitempty"`
	PrimaryIsbn13      *string                                                   `json:"primary_isbn13,omitempty"`
	Publisher          *string                                                   `json:"publisher,omitempty"`
	Rank               *int64                                                    `json:"rank,omitempty"`
	RankLastWeek       *int64                                                    `json:"rank_last_week,omitempty"`
	SundayReviewLink   *string                                                   `json:"sunday_review_link,omitempty"`
	Title              *string                                                   `json:"title,omitempty"`
	WeeksOnList        *int64                                                    `json:"weeks_on_list,omitempty"`
}

type GETListsDateListJSON200ApplicationJSONResults struct {
	BestsellersDate  *string                                              `json:"bestsellers_date,omitempty"`
	Books            []GETListsDateListJSON200ApplicationJSONResultsBooks `json:"books,omitempty"`
	Corrections      []map[string]interface{}                             `json:"corrections,omitempty"`
	DisplayName      *string                                              `json:"display_name,omitempty"`
	ListName         *string                                              `json:"list_name,omitempty"`
	NormalListEndsAt *int64                                               `json:"normal_list_ends_at,omitempty"`
	PublishedDate    *string                                              `json:"published_date,omitempty"`
	Updated          *string                                              `json:"updated,omitempty"`
}

type GETListsDateListJSON200ApplicationJSON struct {
	Copyright    *string                                        `json:"copyright,omitempty"`
	LastModified *string                                        `json:"last_modified,omitempty"`
	NumResults   *int64                                         `json:"num_results,omitempty"`
	Results      *GETListsDateListJSON200ApplicationJSONResults `json:"results,omitempty"`
	Status       *string                                        `json:"status,omitempty"`
}

type GETListsDateListJSONResponse struct {
	ContentType                                  string
	GETListsDateListJSON200ApplicationJSONObject *GETListsDateListJSON200ApplicationJSON
	StatusCode                                   int
	RawResponse                                  *http.Response
}
