// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PartyIdentification2TypeEnum - The type of entity that owns the bank account.
//
//	Possible values: **individual**, **organization**, or **unknown**.
type PartyIdentification2TypeEnum string

const (
	PartyIdentification2TypeEnumIndividual   PartyIdentification2TypeEnum = "individual"
	PartyIdentification2TypeEnumOrganization PartyIdentification2TypeEnum = "organization"
	PartyIdentification2TypeEnumUnknown      PartyIdentification2TypeEnum = "unknown"
)

func (e *PartyIdentification2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "individual":
		fallthrough
	case "organization":
		fallthrough
	case "unknown":
		*e = PartyIdentification2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PartyIdentification2TypeEnum: %s", s)
	}
}

type PartyIdentification2 struct {
	Address *Address2 `json:"address,omitempty"`
	// First name of the individual. Required when `type` is **individual**.
	FirstName *string `json:"firstName,omitempty"`
	// The name of the entity.
	FullName string `json:"fullName"`
	// Last name of the individual. Required when `type` is **individual**.
	LastName *string `json:"lastName,omitempty"`
	// The type of entity that owns the bank account.
	//
	//  Possible values: **individual**, **organization**, or **unknown**.
	Type *PartyIdentification2TypeEnum `json:"type,omitempty"`
}
