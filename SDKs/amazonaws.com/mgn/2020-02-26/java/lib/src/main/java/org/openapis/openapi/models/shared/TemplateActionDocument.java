/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TemplateActionDocument - Success
 */
public class TemplateActionDocument {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actionID")
    public String actionID;
    public TemplateActionDocument withActionID(String actionID) {
        this.actionID = actionID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actionName")
    public String actionName;
    public TemplateActionDocument withActionName(String actionName) {
        this.actionName = actionName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public TemplateActionDocument withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public ActionCategoryEnum category;
    public TemplateActionDocument withCategory(ActionCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public TemplateActionDocument withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentIdentifier")
    public String documentIdentifier;
    public TemplateActionDocument withDocumentIdentifier(String documentIdentifier) {
        this.documentIdentifier = documentIdentifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentVersion")
    public String documentVersion;
    public TemplateActionDocument withDocumentVersion(String documentVersion) {
        this.documentVersion = documentVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalParameters")
    public java.util.Map<String, SsmExternalParameter> externalParameters;
    public TemplateActionDocument withExternalParameters(java.util.Map<String, SsmExternalParameter> externalParameters) {
        this.externalParameters = externalParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mustSucceedForCutover")
    public Boolean mustSucceedForCutover;
    public TemplateActionDocument withMustSucceedForCutover(Boolean mustSucceedForCutover) {
        this.mustSucceedForCutover = mustSucceedForCutover;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatingSystem")
    public String operatingSystem;
    public TemplateActionDocument withOperatingSystem(String operatingSystem) {
        this.operatingSystem = operatingSystem;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order")
    public Long order;
    public TemplateActionDocument withOrder(Long order) {
        this.order = order;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public java.util.Map<String, SsmParameterStoreParameter[]> parameters;
    public TemplateActionDocument withParameters(java.util.Map<String, SsmParameterStoreParameter[]> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeoutSeconds")
    public Long timeoutSeconds;
    public TemplateActionDocument withTimeoutSeconds(Long timeoutSeconds) {
        this.timeoutSeconds = timeoutSeconds;
        return this;
    }
    
}
