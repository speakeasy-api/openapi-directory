/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSetupV1AppointmentsRequest extends SpeakeasyBase {
  /**
   * Filter appointments by user email who booked
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=bookedBy",
  })
  bookedBy?: string;

  /**
   * Filter appointments by calendar
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=calendarId",
  })
  calendarId?: string;

  /**
   * Filter appointments by customer
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=customerId",
  })
  customerId?: string;

  /**
   * Filter appointments by email address
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email?: string;

  /**
   * Format YYYY-MM-DD: Filter appointments on/before endDate
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=endDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  endDate?: Date;

  /**
   * Filter appointments by lastname or part of
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=lastname",
  })
  lastname?: string;

  /**
   * Page limit default 20, max 100
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * id of business location, defaults to primary business location
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locationId",
  })
  locationId?: string;

  /**
   * Starting row of page, default 0
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Filter appointments by resource
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resourceId",
  })
  resourceId?: string;

  /**
   * Filter appointments by service allocation
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=serviceAllocationId",
  })
  serviceAllocationId?: string;

  /**
   * Filter appointments by service
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=serviceId",
  })
  serviceId?: string;

  /**
   * Format YYYY-MM-DD: Filter appointments by on/after startDate
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startDate?: Date;

  /**
   * Filter appointments by status: IN, BK, CN, RE, RS
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: string;
}

export class GetSetupV1AppointmentsResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata()
  appointmentListViewModel?: shared.AppointmentListViewModel;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
