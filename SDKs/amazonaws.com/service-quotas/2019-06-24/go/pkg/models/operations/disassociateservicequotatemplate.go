// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// DisassociateServiceQuotaTemplateXAmzTargetEnum
type DisassociateServiceQuotaTemplateXAmzTargetEnum string

const (
	DisassociateServiceQuotaTemplateXAmzTargetEnumServiceQuotasV20190624DisassociateServiceQuotaTemplate DisassociateServiceQuotaTemplateXAmzTargetEnum = "ServiceQuotasV20190624.DisassociateServiceQuotaTemplate"
)

func (e DisassociateServiceQuotaTemplateXAmzTargetEnum) ToPointer() *DisassociateServiceQuotaTemplateXAmzTargetEnum {
	return &e
}

func (e *DisassociateServiceQuotaTemplateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ServiceQuotasV20190624.DisassociateServiceQuotaTemplate":
		*e = DisassociateServiceQuotaTemplateXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateServiceQuotaTemplateXAmzTargetEnum: %v", v)
	}
}

type DisassociateServiceQuotaTemplateRequest struct {
	RequestBody       map[string]interface{}                         `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DisassociateServiceQuotaTemplateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisassociateServiceQuotaTemplateResponse struct {
	// AWSServiceAccessNotEnabledException
	AWSServiceAccessNotEnabledException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// DependencyAccessDeniedException
	DependencyAccessDeniedException interface{}
	// Success
	DisassociateServiceQuotaTemplateResponse map[string]interface{}
	// NoAvailableOrganizationException
	NoAvailableOrganizationException interface{}
	StatusCode                       int
	RawResponse                      *http.Response
	// ServiceException
	ServiceException interface{}
	// ServiceQuotaTemplateNotInUseException
	ServiceQuotaTemplateNotInUseException interface{}
	// TemplatesNotAvailableInRegionException
	TemplatesNotAvailableInRegionException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
