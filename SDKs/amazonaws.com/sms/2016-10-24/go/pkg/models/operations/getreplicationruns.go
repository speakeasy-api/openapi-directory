// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetReplicationRunsXAmzTargetEnum
type GetReplicationRunsXAmzTargetEnum string

const (
	GetReplicationRunsXAmzTargetEnumAwsServerMigrationServiceV20161024GetReplicationRuns GetReplicationRunsXAmzTargetEnum = "AWSServerMigrationService_V2016_10_24.GetReplicationRuns"
)

func (e GetReplicationRunsXAmzTargetEnum) ToPointer() *GetReplicationRunsXAmzTargetEnum {
	return &e
}

func (e *GetReplicationRunsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSServerMigrationService_V2016_10_24.GetReplicationRuns":
		*e = GetReplicationRunsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetReplicationRunsXAmzTargetEnum: %v", v)
	}
}

type GetReplicationRunsRequest struct {
	GetReplicationRunsRequest shared.GetReplicationRunsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                GetReplicationRunsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type GetReplicationRunsResponse struct {
	ContentType string
	// Success
	GetReplicationRunsResponse *shared.GetReplicationRunsResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// MissingRequiredParameterException
	MissingRequiredParameterException interface{}
	StatusCode                        int
	RawResponse                       *http.Response
	// UnauthorizedOperationException
	UnauthorizedOperationException interface{}
}
