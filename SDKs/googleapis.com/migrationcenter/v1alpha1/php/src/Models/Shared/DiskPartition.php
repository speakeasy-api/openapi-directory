<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DiskPartition - Disk Partition details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DiskPartition
{
    /**
     * Partition capacity.
     * 
     * @var ?string $capacityBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('capacityBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $capacityBytes = null;
    
    /**
     * Partition file system.
     * 
     * @var ?string $fileSystem
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileSystem')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fileSystem = null;
    
    /**
     * Partition free space.
     * 
     * @var ?string $freeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('freeBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $freeBytes = null;
    
    /**
     * Mount pount (Linux/Windows) or drive letter (Windows).
     * 
     * @var ?string $mountPoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountPoint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mountPoint = null;
    
    /**
     * Disk partition list.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DiskPartitionList $subPartitions
     */
	#[\JMS\Serializer\Annotation\SerializedName('subPartitions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DiskPartitionList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DiskPartitionList $subPartitions = null;
    
    /**
     * Partition type (e.g. BIOS boot).
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Partition UUID.
     * 
     * @var ?string $uuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uuid = null;
    
	public function __construct()
	{
		$this->capacityBytes = null;
		$this->fileSystem = null;
		$this->freeBytes = null;
		$this->mountPoint = null;
		$this->subPartitions = null;
		$this->type = null;
		$this->uuid = null;
	}
}
