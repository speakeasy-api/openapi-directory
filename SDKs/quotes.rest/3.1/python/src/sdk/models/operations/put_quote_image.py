"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PutQuoteImageSecurity:
    
    x_they_said_so_api_secret: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-TheySaidSo-Api-Secret' }})  
    

@dataclasses.dataclass
class PutQuoteImageRequest:
    
    quote_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'quote_id', 'style': 'form', 'explode': True }})
    r"""Quote id"""  
    bg_color: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'bg_color', 'style': 'form', 'explode': True }})
    r"""Background Color(if background image id is not supplied)"""  
    bgimage_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'bgimage_id', 'style': 'form', 'explode': True }})
    r"""Background Image id ( Will override bgcolor if supplied)"""  
    branding: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'branding', 'style': 'form', 'explode': True }})
    r"""Disable They Said So branding (Only available in certain subscription levels. Ignored in other levels)"""  
    font_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'font_id', 'style': 'form', 'explode': True }})
    r"""Font id"""  
    halign: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'halign', 'style': 'form', 'explode': True }})
    r"""Horizontal text Alignment Value"""  
    height: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'height', 'style': 'form', 'explode': True }})
    r"""Image Height(By default this takes the height of the background image)"""  
    include_transparent_layer: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_transparent_layer', 'style': 'form', 'explode': True }})
    r"""Should include a transparent layer between the text and the background image? This helps when the background image is bright and obscures the text."""  
    text_color: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'text_color', 'style': 'form', 'explode': True }})
    r"""Text Color"""  
    text_size: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'text_size', 'style': 'form', 'explode': True }})
    r"""Text/font size"""  
    valign: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'valign', 'style': 'form', 'explode': True }})
    r"""Vertical text Alignment Value"""  
    width: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'width', 'style': 'form', 'explode': True }})
    r"""Image Width(By default this takes the width of the background image)"""  
    

@dataclasses.dataclass
class PutQuoteImageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    