// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateFunctionPathParams struct {
	// The GraphQL API ID.
	APIID string `pathParam:"style=simple,explode=false,name=apiId"`
	// The function ID.
	FunctionID string `pathParam:"style=simple,explode=false,name=functionId"`
}

type UpdateFunctionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateFunctionRequestBodyRuntime - Describes a runtime used by an Amazon Web Services AppSync pipeline resolver or Amazon Web Services AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
type UpdateFunctionRequestBodyRuntime struct {
	Name           *shared.RuntimeNameEnum `json:"name,omitempty"`
	RuntimeVersion *string                 `json:"runtimeVersion,omitempty"`
}

// UpdateFunctionRequestBodySyncConfig - <p>Describes a Sync configuration for a resolver.</p> <p>Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.</p>
type UpdateFunctionRequestBodySyncConfig struct {
	ConflictDetection           *shared.ConflictDetectionTypeEnum   `json:"conflictDetection,omitempty"`
	ConflictHandler             *shared.ConflictHandlerTypeEnum     `json:"conflictHandler,omitempty"`
	LambdaConflictHandlerConfig *shared.LambdaConflictHandlerConfig `json:"lambdaConflictHandlerConfig,omitempty"`
}

type UpdateFunctionRequestBody struct {
	// The <code>function</code> code that contains the request and response functions. When code is used, the <code>runtime</code> is required. The <code>runtime</code> value must be <code>APPSYNC_JS</code>.
	Code *string `json:"code,omitempty"`
	// The <code>Function</code> <code>DataSource</code> name.
	DataSourceName string `json:"dataSourceName"`
	// The <code>Function</code> description.
	Description *string `json:"description,omitempty"`
	// The <code>version</code> of the request mapping template. Currently, the supported value is 2018-05-29. Note that when using VTL and mapping templates, the <code>functionVersion</code> is required.
	FunctionVersion *string `json:"functionVersion,omitempty"`
	// The maximum batching size for a resolver.
	MaxBatchSize *int64 `json:"maxBatchSize,omitempty"`
	// The <code>Function</code> name.
	Name string `json:"name"`
	// The <code>Function</code> request mapping template. Functions support only the 2018-05-29 version of the request mapping template.
	RequestMappingTemplate *string `json:"requestMappingTemplate,omitempty"`
	// The <code>Function</code> request mapping template.
	ResponseMappingTemplate *string `json:"responseMappingTemplate,omitempty"`
	// Describes a runtime used by an Amazon Web Services AppSync pipeline resolver or Amazon Web Services AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
	Runtime *UpdateFunctionRequestBodyRuntime `json:"runtime,omitempty"`
	// <p>Describes a Sync configuration for a resolver.</p> <p>Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.</p>
	SyncConfig *UpdateFunctionRequestBodySyncConfig `json:"syncConfig,omitempty"`
}

type UpdateFunctionRequest struct {
	PathParams UpdateFunctionPathParams
	Headers    UpdateFunctionHeaders
	Request    UpdateFunctionRequestBody `request:"mediaType=application/json"`
}

type UpdateFunctionResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InternalFailureException
	InternalFailureException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
	// Success
	UpdateFunctionResponse *shared.UpdateFunctionResponse
}
