/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Feed - An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics.
 */
public class Feed {
    /**
     * A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetNames")
    public String[] assetNames;
    public Feed withAssetNames(String[] assetNames) {
        this.assetNames = assetNames;
        return this;
    }
    
    /**
     * A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `"compute.googleapis.com/Disk"` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetTypes")
    public String[] assetTypes;
    public Feed withAssetTypes(String[] assetTypes) {
        this.assetTypes = assetTypes;
        return this;
    }
    
    /**
     * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() &lt; 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' &amp;&amp; document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public Expr condition;
    public Feed withCondition(Expr condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * Asset content type. If not specified, no content but the asset name and type will be returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentType")
    public FeedContentTypeEnum contentType;
    public Feed withContentType(FeedContentTypeEnum contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Output configuration for asset feed destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("feedOutputConfig")
    public FeedOutputConfig feedOutputConfig;
    public Feed withFeedOutputConfig(FeedOutputConfig feedOutputConfig) {
        this.feedOutputConfig = feedOutputConfig;
        return this;
    }
    
    /**
     * Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Feed withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn't belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn't belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relationshipTypes")
    public String[] relationshipTypes;
    public Feed withRelationshipTypes(String[] relationshipTypes) {
        this.relationshipTypes = relationshipTypes;
        return this;
    }
    
}
