// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetDatabaseEngineEnum string

const (
	TargetDatabaseEngineEnumNoneSpecified      TargetDatabaseEngineEnum = "None specified"
	TargetDatabaseEngineEnumAmazonAurora       TargetDatabaseEngineEnum = "Amazon Aurora"
	TargetDatabaseEngineEnumAwsPostgreSQL      TargetDatabaseEngineEnum = "AWS PostgreSQL"
	TargetDatabaseEngineEnumMySQL              TargetDatabaseEngineEnum = "MySQL"
	TargetDatabaseEngineEnumMicrosoftSQLServer TargetDatabaseEngineEnum = "Microsoft SQL Server"
	TargetDatabaseEngineEnumOracleDatabase     TargetDatabaseEngineEnum = "Oracle Database"
	TargetDatabaseEngineEnumMariaDb            TargetDatabaseEngineEnum = "MariaDB"
	TargetDatabaseEngineEnumSap                TargetDatabaseEngineEnum = "SAP"
	TargetDatabaseEngineEnumDb2Luw             TargetDatabaseEngineEnum = "Db2 LUW"
	TargetDatabaseEngineEnumMongoDb            TargetDatabaseEngineEnum = "MongoDB"
)

func (e *TargetDatabaseEngineEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None specified":
		fallthrough
	case "Amazon Aurora":
		fallthrough
	case "AWS PostgreSQL":
		fallthrough
	case "MySQL":
		fallthrough
	case "Microsoft SQL Server":
		fallthrough
	case "Oracle Database":
		fallthrough
	case "MariaDB":
		fallthrough
	case "SAP":
		fallthrough
	case "Db2 LUW":
		fallthrough
	case "MongoDB":
		*e = TargetDatabaseEngineEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetDatabaseEngineEnum: %s", s)
	}
}
