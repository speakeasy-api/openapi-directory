"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationAdminRequestBodyNetworks:
    
    access: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access') }})
    r"""The privilege of the dashboard administrator on the network"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The network ID"""  
    
class UpdateOrganizationAdminRequestBodyOrgAccessEnum(str, Enum):
    r"""The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"""
    ENTERPRISE = 'enterprise'
    FULL = 'full'
    NONE = 'none'
    READ_ONLY = 'read-only'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationAdminRequestBodyTags:
    
    access: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access') }})
    r"""The privilege of the dashboard administrator on the tag"""  
    tag: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag') }})
    r"""The name of the tag"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationAdminRequestBody:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the dashboard administrator"""  
    networks: Optional[list[UpdateOrganizationAdminRequestBodyNetworks]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networks'), 'exclude': lambda f: f is None }})
    r"""The list of networks that the dashboard administrator has privileges on"""  
    org_access: Optional[UpdateOrganizationAdminRequestBodyOrgAccessEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orgAccess'), 'exclude': lambda f: f is None }})
    r"""The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"""  
    tags: Optional[list[UpdateOrganizationAdminRequestBodyTags]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    r"""The list of tags that the dashboard administrator has privileges on"""  
    

@dataclasses.dataclass
class UpdateOrganizationAdminRequest:
    
    admin_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'adminId', 'style': 'simple', 'explode': False }})  
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateOrganizationAdminRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateOrganizationAdminResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_organization_admin_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    