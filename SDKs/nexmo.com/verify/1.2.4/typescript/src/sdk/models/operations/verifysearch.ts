/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class VerifySearchRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=api_key",
  })
  apiKey: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=api_secret",
  })
  apiSecret: string;

  /**
   * The response format.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=format",
  })
  format: shared.FormatEnum;

  /**
   * The `request_id` you received in the Verify Request Response. Required if `request_ids` not provided.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=request_id",
  })
  requestId: string;

  /**
   * More than one `request_id`. Each `request_id` is a new parameter in the Verify Search request. Required if `request_id` not provided.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=request_ids",
  })
  requestIds?: string[];
}

export class VerifySearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  verifySearch200ApplicationJSONOneOf?: any;
}
