import { AccessControlLists } from "./accesscontrollists";
import { AccessPolicies } from "./accesspolicies";
import { Acls } from "./acls";
import { ActionBatches } from "./actionbatches";
import { AdaptivePolicy } from "./adaptivepolicy";
import { Addresses } from "./addresses";
import { Administered } from "./administered";
import { Admins } from "./admins";
import { AirMarshal } from "./airmarshal";
import { Alerts } from "./alerts";
import { AlertTypes } from "./alerttypes";
import { AlternateManagementInterface } from "./alternatemanagementinterface";
import { Analytics } from "./analytics";
import { ApiRequests } from "./apirequests";
import { ApnsCert } from "./apnscert";
import { Appliance } from "./appliance";
import { Appliances } from "./appliances";
import { ApplicationCategories } from "./applicationcategories";
import { Applications } from "./applications";
import { ApplicationUsage } from "./applicationusage";
import { ArpInspection } from "./arpinspection";
import { Artifacts } from "./artifacts";
import { AuthenticationToken } from "./authenticationtoken";
import { Availabilities } from "./availabilities";
import { BandwidthUsageHistory } from "./bandwidthusagehistory";
import { Bgp } from "./bgp";
import { Billing } from "./billing";
import { Bluetooth } from "./bluetooth";
import { BluetoothClients } from "./bluetoothclients";
import { BonjourForwarding } from "./bonjourforwarding";
import { BrandingPolicies } from "./brandingpolicies";
import { ByClient } from "./byclient";
import { ByDevice } from "./bydevice";
import { ByEnergyUsage } from "./byenergyusage";
import { ByInterval } from "./byinterval";
import { ByMetric } from "./bymetric";
import { BypassActivationLockAttempts } from "./bypassactivationlockattempts";
import { BySwitch } from "./byswitch";
import { ByUsage } from "./byusage";
import { ByUtilization } from "./byutilization";
import { Camera } from "./camera";
import { Categories } from "./categories";
import { Cellular } from "./cellular";
import { CellularFirewallRules } from "./cellularfirewallrules";
import { CellularGateway } from "./cellulargateway";
import { CellularUsageHistory } from "./cellularusagehistory";
import { Certs } from "./certs";
import { ChannelUtilization } from "./channelutilization";
import { ChannelUtilizationHistory } from "./channelutilizationhistory";
import { Claim } from "./claim";
import { ClientCountHistory } from "./clientcounthistory";
import { Clients } from "./clients";
import { CloudMonitoring } from "./cloudmonitoring";
import { ConfigTemplates } from "./configtemplates";
import { ConfigurationChanges } from "./configurationchanges";
import { Configure } from "./configure";
import { ConnectionStats } from "./connectionstats";
import { Connectivity } from "./connectivity";
import { ConnectivityEvents } from "./connectivityevents";
import { ConnectivityMonitoringDestinations } from "./connectivitymonitoringdestinations";
import { ContentFiltering } from "./contentfiltering";
import { Coterm } from "./coterm";
import { Current } from "./current";
import { CustomAnalytics } from "./customanalytics";
import { CustomPerformanceClasses } from "./customperformanceclasses";
import { DataRateHistory } from "./dataratehistory";
import { Delegated } from "./delegated";
import { DesktopLogs } from "./desktoplogs";
import { DeviceCommandLogs } from "./devicecommandlogs";
import { DeviceProfiles } from "./deviceprofiles";
import { Devices } from "./devices";
import { DeviceTypeGroupPolicies } from "./devicetypegrouppolicies";
import { Dhcp } from "./dhcp";
import { DhcpServerPolicy } from "./dhcpserverpolicy";
import { DscpTaggingOptions } from "./dscptaggingoptions";
import { DscpToCosMappings } from "./dscptocosmappings";
import { EapOverride } from "./eapoverride";
import { EarlyAccess } from "./earlyaccess";
import { Ethernet } from "./ethernet";
import { Events } from "./events";
import { EventTypes } from "./eventtypes";
import { ExportEvents } from "./exportevents";
import { FailedConnections } from "./failedconnections";
import { Features } from "./features";
import { Fields } from "./fields";
import { Firewall } from "./firewall";
import { FirewalledServices } from "./firewalledservices";
import { Firmware } from "./firmware";
import { FirmwareUpgrades } from "./firmwareupgrades";
import { FloorPlans } from "./floorplans";
import { GroupPolicies } from "./grouppolicies";
import { Groups } from "./groups";
import { Health } from "./health";
import { HealthByTime } from "./healthbytime";
import { History } from "./history";
import { Hotspot20 } from "./hotspot20";
import { HttpServers } from "./httpservers";
import { Identities } from "./identities";
import { IdentityPsks } from "./identitypsks";
import { Idps } from "./idps";
import { Imports } from "./imports";
import { InboundCellularFirewallRules } from "./inboundcellularfirewallrules";
import { InboundFirewallRules } from "./inboundfirewallrules";
import { Insight } from "./insight";
import { Interfaces } from "./interfaces";
import { Intrusion } from "./intrusion";
import { Inventory } from "./inventory";
import { L3FirewallRules } from "./l3firewallrules";
import { L7FirewallRules } from "./l7firewallrules";
import { Lan } from "./lan";
import { LatencyHistory } from "./latencyhistory";
import { LatencyStats } from "./latencystats";
import { Latest } from "./latest";
import { Licenses } from "./licenses";
import { Licensing } from "./licensing";
import { LinkAggregations } from "./linkaggregations";
import { LinkLayer } from "./linklayer";
import { Live } from "./live";
import { LiveTools } from "./livetools";
import { LldpCdp } from "./lldpcdp";
import { LoginSecurity } from "./loginsecurity";
import { Logs } from "./logs";
import { LossAndLatencyHistory } from "./lossandlatencyhistory";
import { Malware } from "./malware";
import { ManagementInterface } from "./managementinterface";
import { Manufacturers } from "./manufacturers";
import { Me } from "./me";
import { MerakiAuthUsers } from "./merakiauthusers";
import { MeshStatuses } from "./meshstatuses";
import { Models } from "./models";
import { Security as SecurityModel } from "./models/shared";
import { Monitor } from "./monitor";
import { MonitoredMediaServers } from "./monitoredmediaservers";
import { MqttBrokers } from "./mqttbrokers";
import { Mtu } from "./mtu";
import { Multicast } from "./multicast";
import { Netflow } from "./netflow";
import { NetworkAdapters } from "./networkadapters";
import { NetworkHealth } from "./networkhealth";
import { Networks } from "./networks";
import { ObjectDetectionModels } from "./objectdetectionmodels";
import { Onboarding } from "./onboarding";
import { OneToManyNatRules } from "./onetomanynatrules";
import { OneToOneNatRules } from "./onetoonenatrules";
import { OpenapiSpec } from "./openapispec";
import { OptIns } from "./optins";
import { Order } from "./order";
import { Organizations } from "./organizations";
import { Ospf } from "./ospf";
import { Overview } from "./overview";
import { Packets } from "./packets";
import { PayloadTemplates } from "./payloadtemplates";
import { Performance } from "./performance";
import { PerformanceHistory } from "./performancehistory";
import { Pii } from "./pii";
import { PiiKeys } from "./piikeys";
import { Ping } from "./ping";
import { PingDevice } from "./pingdevice";
import { Policies } from "./policies";
import { Policy } from "./policy";
import { PolicyObjects } from "./policyobjects";
import { PortForwardingRules } from "./portforwardingrules";
import { Ports } from "./ports";
import { PortSchedules } from "./portschedules";
import { PowerModules } from "./powermodules";
import { Prefixes } from "./prefixes";
import { Priorities } from "./priorities";
import { Profiles } from "./profiles";
import { QosRules } from "./qosrules";
import { QualityAndRetention } from "./qualityandretention";
import { QualityRetentionProfiles } from "./qualityretentionprofiles";
import { Radio } from "./radio";
import { Readings } from "./readings";
import { Recent } from "./recent";
import { Relationships } from "./relationships";
import { RendezvousPoints } from "./rendezvouspoints";
import { Requests } from "./requests";
import { ResponseCodes } from "./responsecodes";
import { Restrictions } from "./restrictions";
import { RfProfiles } from "./rfprofiles";
import { Rollbacks } from "./rollbacks";
import { Routing } from "./routing";
import { Rules } from "./rules";
import { Saml } from "./saml";
import { SamlRoles } from "./samlroles";
import { Schedules } from "./schedules";
import { Search } from "./search";
import { Security } from "./security";
import { SecurityCenters } from "./securitycenters";
import { Seen } from "./seen";
import { Sense } from "./sense";
import { Sensor } from "./sensor";
import { Servers } from "./servers";
import { Settings } from "./settings";
import { SignalQualityHistory } from "./signalqualityhistory";
import { Sims } from "./sims";
import { SingleLan } from "./singlelan";
import { SiteToSiteVpn } from "./sitetositevpn";
import { Sm } from "./sm";
import { SmDevicesForKey } from "./smdevicesforkey";
import { SmOwnersForKey } from "./smownersforkey";
import { Snmp } from "./snmp";
import { Softwares } from "./softwares";
import { Splash } from "./splash";
import { SplashAuthorizationStatus } from "./splashauthorizationstatus";
import { SplashLoginAttempts } from "./splashloginattempts";
import { Ssids } from "./ssids";
import { Stacks } from "./stacks";
import { Staged } from "./staged";
import { Stages } from "./stages";
import { StaticRoutes } from "./staticroutes";
import { Statics } from "./statics";
import { Stats } from "./stats";
import { Status } from "./status";
import { Statuses } from "./statuses";
import { StormControl } from "./stormcontrol";
import { Stp } from "./stp";
import { SubnetPool } from "./subnetpool";
import { Subnets } from "./subnets";
import { Summary } from "./summary";
import { Switch } from "./switch";
import { Switches } from "./switches";
import { SyslogServers } from "./syslogservers";
import { TargetGroups } from "./targetgroups";
import { ThirdPartyVPNPeers } from "./thirdpartyvpnpeers";
import { Top } from "./top";
import { Topology } from "./topology";
import { Traffic } from "./traffic";
import { TrafficAnalysis } from "./trafficanalysis";
import { TrafficHistory } from "./traffichistory";
import { TrafficShaping } from "./trafficshaping";
import { TrustedAccessConfigs } from "./trustedaccessconfigs";
import { TrustedServers } from "./trustedservers";
import { Upgrades } from "./upgrades";
import { Uplink } from "./uplink";
import { UplinkBandwidth } from "./uplinkbandwidth";
import { Uplinks } from "./uplinks";
import { UplinkSelection } from "./uplinkselection";
import { UplinksLossAndLatency } from "./uplinkslossandlatency";
import { UsageHistories } from "./usagehistories";
import { UsageHistory } from "./usagehistory";
import { UserAccessDevices } from "./useraccessdevices";
import { Users } from "./users";
import { V4 } from "./v4";
import { Video } from "./video";
import { VideoLink } from "./videolink";
import { VlanAssignments } from "./vlanassignments";
import { Vlans } from "./vlans";
import { Vmx } from "./vmx";
import { Vpn } from "./vpn";
import { VpnFirewallRules } from "./vpnfirewallrules";
import { VppAccounts } from "./vppaccounts";
import { WarmSpare } from "./warmspare";
import { Warnings } from "./warnings";
import { Webhooks } from "./webhooks";
import { WebhookTests } from "./webhooktests";
import { Wireless } from "./wireless";
import { WirelessProfiles } from "./wirelessprofiles";
import { WlanLists } from "./wlanlists";
import { Zones } from "./zones";
import { AxiosInstance } from "axios";
/**
 * Contains the list of servers available to the SDK
 */
export declare const ServerList: readonly ["https://api.meraki.com/api/v1"];
/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
    /**
     * The security details required to authenticate the SDK
     */
    security?: SecurityModel;
    /**
     * Allows overriding the default axios client used by the SDK
     */
    defaultClient?: AxiosInstance;
    /**
     * Allows overriding the default server URL used by the SDK
     */
    serverURL?: string;
};
/**
 * The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.
 *
 * @remarks
 *
 * > Date: 22 February, 2023
 * >
 * > [Recent Updates](https://meraki.io/whats-new/)
 *
 * ---
 *
 * [API Documentation](https://meraki.io/api)
 *
 * [Community Support](https://meraki.io/community)
 *
 * [Meraki Homepage](https://www.meraki.com)
 *
 */
export declare class SDK {
    accessControlLists: AccessControlLists;
    accessPolicies: AccessPolicies;
    acls: Acls;
    actionBatches: ActionBatches;
    adaptivePolicy: AdaptivePolicy;
    addresses: Addresses;
    administered: Administered;
    admins: Admins;
    airMarshal: AirMarshal;
    alertTypes: AlertTypes;
    alerts: Alerts;
    alternateManagementInterface: AlternateManagementInterface;
    analytics: Analytics;
    apiRequests: ApiRequests;
    apnsCert: ApnsCert;
    appliance: Appliance;
    appliances: Appliances;
    applicationCategories: ApplicationCategories;
    applicationUsage: ApplicationUsage;
    applications: Applications;
    arpInspection: ArpInspection;
    artifacts: Artifacts;
    authenticationToken: AuthenticationToken;
    availabilities: Availabilities;
    bandwidthUsageHistory: BandwidthUsageHistory;
    bgp: Bgp;
    billing: Billing;
    bluetooth: Bluetooth;
    bluetoothClients: BluetoothClients;
    bonjourForwarding: BonjourForwarding;
    brandingPolicies: BrandingPolicies;
    byClient: ByClient;
    byDevice: ByDevice;
    byEnergyUsage: ByEnergyUsage;
    byInterval: ByInterval;
    byMetric: ByMetric;
    bySwitch: BySwitch;
    byUsage: ByUsage;
    byUtilization: ByUtilization;
    bypassActivationLockAttempts: BypassActivationLockAttempts;
    camera: Camera;
    categories: Categories;
    cellular: Cellular;
    cellularFirewallRules: CellularFirewallRules;
    cellularGateway: CellularGateway;
    cellularUsageHistory: CellularUsageHistory;
    certs: Certs;
    channelUtilization: ChannelUtilization;
    channelUtilizationHistory: ChannelUtilizationHistory;
    claim: Claim;
    clientCountHistory: ClientCountHistory;
    clients: Clients;
    cloudMonitoring: CloudMonitoring;
    configTemplates: ConfigTemplates;
    configurationChanges: ConfigurationChanges;
    configure: Configure;
    connectionStats: ConnectionStats;
    connectivity: Connectivity;
    connectivityEvents: ConnectivityEvents;
    connectivityMonitoringDestinations: ConnectivityMonitoringDestinations;
    contentFiltering: ContentFiltering;
    coterm: Coterm;
    current: Current;
    customAnalytics: CustomAnalytics;
    customPerformanceClasses: CustomPerformanceClasses;
    dataRateHistory: DataRateHistory;
    delegated: Delegated;
    desktopLogs: DesktopLogs;
    deviceCommandLogs: DeviceCommandLogs;
    deviceProfiles: DeviceProfiles;
    deviceTypeGroupPolicies: DeviceTypeGroupPolicies;
    devices: Devices;
    dhcp: Dhcp;
    dhcpServerPolicy: DhcpServerPolicy;
    dscpTaggingOptions: DscpTaggingOptions;
    dscpToCosMappings: DscpToCosMappings;
    eapOverride: EapOverride;
    earlyAccess: EarlyAccess;
    ethernet: Ethernet;
    eventTypes: EventTypes;
    events: Events;
    exportEvents: ExportEvents;
    failedConnections: FailedConnections;
    features: Features;
    fields: Fields;
    firewall: Firewall;
    firewalledServices: FirewalledServices;
    firmware: Firmware;
    firmwareUpgrades: FirmwareUpgrades;
    floorPlans: FloorPlans;
    groupPolicies: GroupPolicies;
    groups: Groups;
    health: Health;
    healthByTime: HealthByTime;
    history: History;
    hotspot20: Hotspot20;
    httpServers: HttpServers;
    identities: Identities;
    identityPsks: IdentityPsks;
    idps: Idps;
    imports: Imports;
    inboundCellularFirewallRules: InboundCellularFirewallRules;
    inboundFirewallRules: InboundFirewallRules;
    insight: Insight;
    interfaces: Interfaces;
    intrusion: Intrusion;
    inventory: Inventory;
    l3FirewallRules: L3FirewallRules;
    l7FirewallRules: L7FirewallRules;
    lan: Lan;
    latencyHistory: LatencyHistory;
    latencyStats: LatencyStats;
    latest: Latest;
    licenses: Licenses;
    licensing: Licensing;
    linkAggregations: LinkAggregations;
    linkLayer: LinkLayer;
    live: Live;
    liveTools: LiveTools;
    lldpCdp: LldpCdp;
    loginSecurity: LoginSecurity;
    logs: Logs;
    lossAndLatencyHistory: LossAndLatencyHistory;
    malware: Malware;
    managementInterface: ManagementInterface;
    manufacturers: Manufacturers;
    me: Me;
    merakiAuthUsers: MerakiAuthUsers;
    meshStatuses: MeshStatuses;
    models: Models;
    monitor: Monitor;
    monitoredMediaServers: MonitoredMediaServers;
    mqttBrokers: MqttBrokers;
    mtu: Mtu;
    multicast: Multicast;
    netflow: Netflow;
    networkAdapters: NetworkAdapters;
    networkHealth: NetworkHealth;
    networks: Networks;
    objectDetectionModels: ObjectDetectionModels;
    onboarding: Onboarding;
    oneToManyNatRules: OneToManyNatRules;
    oneToOneNatRules: OneToOneNatRules;
    openapiSpec: OpenapiSpec;
    optIns: OptIns;
    order: Order;
    organizations: Organizations;
    ospf: Ospf;
    overview: Overview;
    packets: Packets;
    payloadTemplates: PayloadTemplates;
    performance: Performance;
    performanceHistory: PerformanceHistory;
    pii: Pii;
    piiKeys: PiiKeys;
    ping: Ping;
    pingDevice: PingDevice;
    policies: Policies;
    policy: Policy;
    policyObjects: PolicyObjects;
    portForwardingRules: PortForwardingRules;
    portSchedules: PortSchedules;
    ports: Ports;
    powerModules: PowerModules;
    prefixes: Prefixes;
    priorities: Priorities;
    profiles: Profiles;
    qosRules: QosRules;
    qualityAndRetention: QualityAndRetention;
    qualityRetentionProfiles: QualityRetentionProfiles;
    radio: Radio;
    readings: Readings;
    recent: Recent;
    relationships: Relationships;
    rendezvousPoints: RendezvousPoints;
    requests: Requests;
    responseCodes: ResponseCodes;
    restrictions: Restrictions;
    rfProfiles: RfProfiles;
    rollbacks: Rollbacks;
    routing: Routing;
    rules: Rules;
    saml: Saml;
    samlRoles: SamlRoles;
    schedules: Schedules;
    search: Search;
    security: Security;
    securityCenters: SecurityCenters;
    seen: Seen;
    sense: Sense;
    sensor: Sensor;
    servers: Servers;
    settings: Settings;
    signalQualityHistory: SignalQualityHistory;
    sims: Sims;
    singleLan: SingleLan;
    siteToSiteVpn: SiteToSiteVpn;
    sm: Sm;
    smDevicesForKey: SmDevicesForKey;
    smOwnersForKey: SmOwnersForKey;
    snmp: Snmp;
    softwares: Softwares;
    splash: Splash;
    splashAuthorizationStatus: SplashAuthorizationStatus;
    splashLoginAttempts: SplashLoginAttempts;
    ssids: Ssids;
    stacks: Stacks;
    staged: Staged;
    stages: Stages;
    staticRoutes: StaticRoutes;
    statics: Statics;
    stats: Stats;
    status: Status;
    statuses: Statuses;
    stormControl: StormControl;
    stp: Stp;
    subnetPool: SubnetPool;
    subnets: Subnets;
    summary: Summary;
    switch: Switch;
    switches: Switches;
    syslogServers: SyslogServers;
    targetGroups: TargetGroups;
    thirdPartyVPNPeers: ThirdPartyVPNPeers;
    top: Top;
    topology: Topology;
    traffic: Traffic;
    trafficAnalysis: TrafficAnalysis;
    trafficHistory: TrafficHistory;
    trafficShaping: TrafficShaping;
    trustedAccessConfigs: TrustedAccessConfigs;
    trustedServers: TrustedServers;
    upgrades: Upgrades;
    uplink: Uplink;
    uplinkBandwidth: UplinkBandwidth;
    uplinkSelection: UplinkSelection;
    uplinks: Uplinks;
    uplinksLossAndLatency: UplinksLossAndLatency;
    usageHistories: UsageHistories;
    usageHistory: UsageHistory;
    userAccessDevices: UserAccessDevices;
    users: Users;
    v4: V4;
    video: Video;
    videoLink: VideoLink;
    vlanAssignments: VlanAssignments;
    vlans: Vlans;
    vmx: Vmx;
    vpn: Vpn;
    vpnFirewallRules: VpnFirewallRules;
    vppAccounts: VppAccounts;
    warmSpare: WarmSpare;
    warnings: Warnings;
    webhookTests: WebhookTests;
    webhooks: Webhooks;
    wireless: Wireless;
    wirelessProfiles: WirelessProfiles;
    wlanLists: WlanLists;
    zones: Zones;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    private _globals;
    constructor(props?: SDKProps);
}
