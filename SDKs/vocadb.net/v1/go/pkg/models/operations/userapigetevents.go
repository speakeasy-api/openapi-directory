// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UserAPIGetEventsPathParams struct {
	// User ID.
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// UserAPIGetEventsRelationshipTypeEnum - Type of event subscription.
type UserAPIGetEventsRelationshipTypeEnum string

const (
	UserAPIGetEventsRelationshipTypeEnumInterested UserAPIGetEventsRelationshipTypeEnum = "Interested"
	UserAPIGetEventsRelationshipTypeEnumAttending  UserAPIGetEventsRelationshipTypeEnum = "Attending"
)

func (e *UserAPIGetEventsRelationshipTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Interested":
		fallthrough
	case "Attending":
		*e = UserAPIGetEventsRelationshipTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetEventsRelationshipTypeEnum: %s", s)
	}
}

type UserAPIGetEventsQueryParams struct {
	// Type of event subscription.
	RelationshipType UserAPIGetEventsRelationshipTypeEnum `queryParam:"style=form,explode=true,name=relationshipType"`
}

type UserAPIGetEventsRequest struct {
	PathParams  UserAPIGetEventsPathParams
	QueryParams UserAPIGetEventsQueryParams
}

type UserAPIGetEventsResponse struct {
	Body        []byte
	ContentType string
	// OK
	ReleaseEventForAPIContracts []shared.ReleaseEventForAPIContract
	StatusCode                  int
	RawResponse                 *http.Response
}
