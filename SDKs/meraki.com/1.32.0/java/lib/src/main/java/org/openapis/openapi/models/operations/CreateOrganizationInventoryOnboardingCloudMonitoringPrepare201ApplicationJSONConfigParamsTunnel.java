/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel - Configuration options used to connect to the device
 */
public class CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel {
    /**
     * SSH tunnel URL used to connect to the device
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host")
    public String host;

    public CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel withHost(String host) {
        this.host = host;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mode")
    public String mode;

    public CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel withMode(String mode) {
        this.mode = mode;
        return this;
    }
    
    /**
     * The name of the tunnel we are attempting to connect to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The port used for the ssh tunnel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public String port;

    public CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel withPort(String port) {
        this.port = port;
        return this;
    }
    
    /**
     * Root certificate information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootCertificate")
    public CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnelRootCertificate rootCertificate;

    public CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel withRootCertificate(CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnelRootCertificate rootCertificate) {
        this.rootCertificate = rootCertificate;
        return this;
    }
    
    public CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel(){}
}
