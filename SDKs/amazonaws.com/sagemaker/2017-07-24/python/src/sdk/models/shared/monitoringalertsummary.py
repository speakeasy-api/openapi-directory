"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import monitoringalertactions as shared_monitoringalertactions
from ..shared import monitoringalertstatus_enum as shared_monitoringalertstatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonitoringAlertSummary:
    r"""Provides summary information about a monitor alert."""
    
    actions: shared_monitoringalertactions.MonitoringAlertActions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Actions') }})  
    alert_status: shared_monitoringalertstatus_enum.MonitoringAlertStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AlertStatus') }})  
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    datapoints_to_alert: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatapointsToAlert') }})  
    evaluation_period: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EvaluationPeriod') }})  
    last_modified_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastModifiedTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    monitoring_alert_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringAlertName') }})  
    