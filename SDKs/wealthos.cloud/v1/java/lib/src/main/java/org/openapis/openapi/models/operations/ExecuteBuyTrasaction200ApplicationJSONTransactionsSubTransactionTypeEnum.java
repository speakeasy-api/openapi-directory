/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * ExecuteBuyTrasaction200ApplicationJSONTransactionsSubTransactionTypeEnum - Sub transaction type
 */
public enum ExecuteBuyTrasaction200ApplicationJSONTransactionsSubTransactionTypeEnum {
    DIVIDEND_REINVESTMENT("Dividend Reinvestment"),
    INTEREST_REINVESTMENT("Interest Reinvestment"),
    REINVESTMENT("Reinvestment"),
    BUY("Buy"),
    SELL_CANCEL("Sell Cancel"),
    SWITCH_BUY("Switch Buy"),
    SELL("Sell"),
    BUY_CANCEL("Buy Cancel"),
    SWITCH_SELL("Switch Sell"),
    LUMP_SUM("Lump sum"),
    EMPLOYER_CONTRIBUTION("Employer contribution"),
    EMPLOYEE_CONTRIBUTION("Employee contribution"),
    REGULAR_CONTRIBUTION("Regular contribution"),
    PAYMENT_IN_FOR_FEES("Payment in for fees"),
    INTERNAL_TRANSFER_CASH_IN("Internal Transfer - Cash In"),
    INTERNAL_TRANSFER_STOCK_IN("Internal Transfer - Stock In"),
    INTERNAL_TRANSFER_CASH_OUT("Internal Transfer - Cash Out"),
    INTERNAL_TRANSFER_STOCK_OUT("Internal Transfer - Stock Out"),
    STOCK_TRANSFER_IN("Stock Transfer In"),
    CASH_TRANSFER_IN("Cash Transfer In"),
    STOCK_TRANSFER_OUT("Stock Transfer Out"),
    CASH_TRANSFER_OUT("Cash Transfer Out"),
    COMMISSION("Commission"),
    ANCILLARY_FEE("Ancillary fee"),
    MANAGEMENT_FEE("Management fee"),
    FEE_CREDIT("Fee credit"),
    FEE_REBATE("Fee rebate"),
    ADVISOR_ONGOING_FEE("Advisor ongoing fee"),
    ONE_OFF_ADVISOR_FEE("One-off advisor fee"),
    COMMISSION_REBATE("Commission rebate"),
    CUSTODY_FEES("Custody fees"),
    DIVIDENDS("Dividends"),
    DISTRIBUTIONS("Distributions"),
    INTEREST("Interest"),
    OTHER_INCOME("Other income"),
    TAKEOVERS_MERGERS_AND_NAME_CHANGES_CREATE("Takeovers, Mergers & Name Changes - Create"),
    TAKEOVERS_MERGERS_AND_NAME_CHANGES_EXTINGUISH("Takeovers, Mergers & Name Changes - Extinguish"),
    RIGHTS_EXPIRY("Rights Expiry"),
    RIGHTS_EXERCISE("Rights Exercise"),
    WARRANT_EXERCISE("Warrant Exercise"),
    FIXED_INCOME_MATURITY_RECEIVE_CAPITAL("Fixed Income Maturity - Receive Capital"),
    FIXED_INCOME_MATURITY_EXTINGUISH_BOND_UNITS("Fixed Income Maturity - Extinguish Bond Units"),
    FUND_MERGER_CREATE_NEW_FUND_UNITS("Fund Merger - Create New Fund Units"),
    FUND_MERGER_EXTINGUISH_OLD_FUND_UNITS("Fund Merger - Extinguish Old Fund Units"),
    RIGHTS_ISSUE("Rights Issue"),
    STOCK_DIVIDEND("Stock Dividend"),
    SPIN_OFF("Spin-Off"),
    WARRANT_ISSUE("Warrant Issue"),
    STOCK_SPLIT("Stock Split"),
    FEE_TAX("Fee Tax"),
    TAX_RELIEF("Tax Relief"),
    GST("GST"),
    HST("HST"),
    PST("PST"),
    QST("QST"),
    WITHHOLDING_TAX("Withholding Tax"),
    NON_RESIDENT_TAX("Non-resident Tax"),
    PENALTY("Penalty"),
    CONTRIBUTION_REFUND("Contribution Refund"),
    INCOME_WITHDRAWAL("Income Withdrawal"),
    REVERSAL("Reversal"),
    WITHDRAWAL("Withdrawal"),
    MISCELLANEOUS_CORPORATE_ACTION_EXERCISE("Miscellaneous Corporate Action Exercise");

    @JsonValue
    public final String value;

    private ExecuteBuyTrasaction200ApplicationJSONTransactionsSubTransactionTypeEnum(String value) {
        this.value = value;
    }
}
