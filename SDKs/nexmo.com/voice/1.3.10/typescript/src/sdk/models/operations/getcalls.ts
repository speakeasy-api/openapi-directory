/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetCallsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

/**
 * Either ascending or  descending order.
 */
export enum GetCallsOrderEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * Filter by call status
 */
export enum GetCallsStatusEnum {
  Started = "started",
  Ringing = "ringing",
  Answered = "answered",
  Machine = "machine",
  Completed = "completed",
  Busy = "busy",
  Cancelled = "cancelled",
  Failed = "failed",
  Rejected = "rejected",
  Timeout = "timeout",
  Unanswered = "unanswered",
}

export class GetCallsRequest extends SpeakeasyBase {
  /**
   * Return all the records associated with a specific conversation.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=conversation_uuid",
  })
  conversationUuid?: string;

  /**
   * Return the records that occurred before this point in time
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_end;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateEnd?: Date;

  /**
   * Return the records that occurred after this point in time
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_start;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateStart?: Date;

  /**
   * Either ascending or  descending order.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: GetCallsOrderEnum;

  /**
   * Return this amount of records in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Return calls from this index in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=record_index",
  })
  recordIndex?: number;

  /**
   * Filter by call status
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: GetCallsStatusEnum;
}

export class GetCallsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getCallsResponse?: shared.GetCallsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
