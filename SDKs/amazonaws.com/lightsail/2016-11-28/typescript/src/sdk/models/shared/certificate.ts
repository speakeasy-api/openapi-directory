/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateStatusEnum } from "./certificatestatusenum";
import { DomainValidationRecord } from "./domainvalidationrecord";
import { RenewalSummary } from "./renewalsummary";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>Describes the full details of an Amazon Lightsail SSL/TLS certificate.</p> <note> <p>To get a summary of a certificate, use the <code>GetCertificates</code> action and ommit <code>includeCertificateDetails</code> from your request. The response will include only the certificate Amazon Resource Name (ARN), certificate name, domain name, and tags.</p> </note>
 */
export class Certificate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "domainName" })
  domainName?: string;

  @SpeakeasyMetadata({ elemType: DomainValidationRecord })
  @Expose({ name: "domainValidationRecords" })
  @Type(() => DomainValidationRecord)
  domainValidationRecords?: DomainValidationRecord[];

  @SpeakeasyMetadata()
  @Expose({ name: "eligibleToRenew" })
  eligibleToRenew?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inUseResourceCount" })
  inUseResourceCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "issuedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issuedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "issuerCA" })
  issuerCA?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "keyAlgorithm" })
  keyAlgorithm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "notBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "renewalSummary" })
  @Type(() => RenewalSummary)
  renewalSummary?: RenewalSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "requestFailureReason" })
  requestFailureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "revocationReason" })
  revocationReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "revokedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  revokedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "serialNumber" })
  serialNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CertificateStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "subjectAlternativeNames" })
  subjectAlternativeNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "supportCode" })
  supportCode?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
