// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SubmitASandboxAchTransferPathParams struct {
	AchTransferID string `pathParam:"style=simple,explode=false,name=ach_transfer_id"`
}

type SubmitASandboxAchTransferRequest struct {
	PathParams SubmitASandboxAchTransferPathParams
}

type SubmitASandboxAchTransferDefaultApplicationJSON13StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine SubmitASandboxAchTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON13TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON13TypeEnumRateLimitedError SubmitASandboxAchTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON13 struct {
	Detail     string                                                      `json:"detail"`
	RetryAfter *int64                                                      `json:"retry_after,omitempty"`
	Status     SubmitASandboxAchTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                      `json:"title"`
	Type       SubmitASandboxAchTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON12StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree SubmitASandboxAchTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON12TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError SubmitASandboxAchTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON12 struct {
	Detail string                                                      `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON11StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour SubmitASandboxAchTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON11TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError SubmitASandboxAchTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON11 struct {
	Detail string                                                      `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON10StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON10StatusEnumFourHundred SubmitASandboxAchTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON10TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON10TypeEnumMalformedRequestError SubmitASandboxAchTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON10 struct {
	Detail string                                                      `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON9StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON9StatusEnumFourHundred SubmitASandboxAchTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON9TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON9TypeEnumInvalidParametersError SubmitASandboxAchTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                   `json:"errors,omitempty"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON8StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine SubmitASandboxAchTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON8TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON8TypeEnumInvalidOperationError SubmitASandboxAchTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON8 struct {
	Detail string                                                     `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON7StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne SubmitASandboxAchTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON7TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError SubmitASandboxAchTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON7 struct {
	Detail string                                                     `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON6StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON6StatusEnumFiveHundred SubmitASandboxAchTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON6TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON6TypeEnumInternalServerError SubmitASandboxAchTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON6 struct {
	Detail string                                                     `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON5StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree SubmitASandboxAchTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON5TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError SubmitASandboxAchTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON5 struct {
	Detail string                                                     `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON4StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo SubmitASandboxAchTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON4TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError SubmitASandboxAchTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON4 struct {
	Detail string                                                     `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON3StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine SubmitASandboxAchTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON3TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError SubmitASandboxAchTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON3 struct {
	Detail string                                                     `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON2StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree SubmitASandboxAchTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON2TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError SubmitASandboxAchTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON2 struct {
	Detail string                                                     `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferDefaultApplicationJSON1StatusEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour SubmitASandboxAchTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON1TypeEnum string

const (
	SubmitASandboxAchTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError SubmitASandboxAchTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *SubmitASandboxAchTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = SubmitASandboxAchTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitASandboxAchTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type SubmitASandboxAchTransferDefaultApplicationJSON1 struct {
	Detail string                                                     `json:"detail"`
	Status SubmitASandboxAchTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   SubmitASandboxAchTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type SubmitASandboxAchTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ACH Transfer
	AchTransfer *shared.AchTransfer
	// Error
	Error interface{}
}
