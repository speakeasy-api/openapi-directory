/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetPagesbyContentType200ApplicationJSONData - Object with data from a specific page.
 */
public class GetPagesbyContentType200ApplicationJSONData {
    /**
     * Document ID presented in the URL path of a CMS preview.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public GetPagesbyContentType200ApplicationJSONData withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the page created via the CMS interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GetPagesbyContentType200ApplicationJSONData withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Object with the configuration values of a `configurationSchemaSets` tab. Varies depending on the Content Type schema defined in the FastStore project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public java.util.Map<String, Object> parameters;

    public GetPagesbyContentType200ApplicationJSONData withParameters(java.util.Map<String, Object> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * Sections that compose the page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sections")
    public GetPagesbyContentType200ApplicationJSONDataSections[] sections;

    public GetPagesbyContentType200ApplicationJSONData withSections(GetPagesbyContentType200ApplicationJSONDataSections[] sections) {
        this.sections = sections;
        return this;
    }
    
    /**
     * Current status of the page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public GetPagesbyContentType200ApplicationJSONData withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Name of the Content Type defined in the FastStore project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public GetPagesbyContentType200ApplicationJSONData withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Version ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionId")
    public String versionId;

    public GetPagesbyContentType200ApplicationJSONData withVersionId(String versionId) {
        this.versionId = versionId;
        return this;
    }
    
    /**
     * Version status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionStatus")
    public String versionStatus;

    public GetPagesbyContentType200ApplicationJSONData withVersionStatus(String versionStatus) {
        this.versionStatus = versionStatus;
        return this;
    }
    
    public GetPagesbyContentType200ApplicationJSONData(){}
}
