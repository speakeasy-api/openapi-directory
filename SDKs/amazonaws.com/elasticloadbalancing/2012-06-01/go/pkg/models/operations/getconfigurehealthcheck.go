// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETConfigureHealthCheckActionEnum
type GETConfigureHealthCheckActionEnum string

const (
	GETConfigureHealthCheckActionEnumConfigureHealthCheck GETConfigureHealthCheckActionEnum = "ConfigureHealthCheck"
)

func (e *GETConfigureHealthCheckActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ConfigureHealthCheck":
		*e = GETConfigureHealthCheckActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETConfigureHealthCheckActionEnum: %s", s)
	}
}

// GETConfigureHealthCheckHealthCheck - Information about a health check.
type GETConfigureHealthCheckHealthCheck struct {
	HealthyThreshold   int64  `queryParam:"name=HealthyThreshold"`
	Interval           int64  `queryParam:"name=Interval"`
	Target             string `queryParam:"name=Target"`
	Timeout            int64  `queryParam:"name=Timeout"`
	UnhealthyThreshold int64  `queryParam:"name=UnhealthyThreshold"`
}

// GETConfigureHealthCheckVersionEnum
type GETConfigureHealthCheckVersionEnum string

const (
	GETConfigureHealthCheckVersionEnumTwoThousandAndTwelve0601 GETConfigureHealthCheckVersionEnum = "2012-06-01"
)

func (e *GETConfigureHealthCheckVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-06-01":
		*e = GETConfigureHealthCheckVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETConfigureHealthCheckVersionEnum: %s", s)
	}
}

type GETConfigureHealthCheckQueryParams struct {
	Action GETConfigureHealthCheckActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The configuration information.
	HealthCheck GETConfigureHealthCheckHealthCheck `queryParam:"style=form,explode=true,name=HealthCheck"`
	// The name of the load balancer.
	LoadBalancerName string                             `queryParam:"style=form,explode=true,name=LoadBalancerName"`
	Version          GETConfigureHealthCheckVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETConfigureHealthCheckHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETConfigureHealthCheckRequest struct {
	QueryParams GETConfigureHealthCheckQueryParams
	Headers     GETConfigureHealthCheckHeaders
}

type GETConfigureHealthCheckResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
