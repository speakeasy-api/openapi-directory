"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetSecurity:
    
    auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""http header: application/json or application/xml (Acceptable values are: \\"application/json\\", \\"application/xml\\")"""  
    cabin_class: str = dataclasses.field(metadata={'path_param': { 'field_name': 'cabinClass', 'style': 'simple', 'explode': False }})
    r"""Cabin class: 'M', 'E', 'C', 'F'. Some flights have fewer classes (Acceptable values are: \\"M\\", \\"E\\", \\"C\\", \\"F\\")"""  
    date_: str = dataclasses.field(metadata={'path_param': { 'field_name': 'date', 'style': 'simple', 'explode': False }})
    r"""Departure date (YYYY-MM-DD)"""  
    destination: str = dataclasses.field(metadata={'path_param': { 'field_name': 'destination', 'style': 'simple', 'explode': False }})
    r"""Destination airport. 3-letter IATA airport code (e.g. 'MUC')"""  
    flight_number: str = dataclasses.field(metadata={'path_param': { 'field_name': 'flightNumber', 'style': 'simple', 'explode': False }})
    r"""Flight number including carrier code and any suffix (e.g. 'LH2037')"""  
    origin: str = dataclasses.field(metadata={'path_param': { 'field_name': 'origin', 'style': 'simple', 'explode': False }})
    r"""Departure airport. 3-letter IATA airport code (e.g. 'TXL')"""  
    

@dataclasses.dataclass
class OffersSeatmapsDestinationDateCabinClassByFlightNumberAndOriginGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    offers_seatmaps_destination_date_cabin_class_by_flight_number_and_origin_get_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    