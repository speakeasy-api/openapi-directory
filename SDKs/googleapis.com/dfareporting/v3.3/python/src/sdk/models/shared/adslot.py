"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AdSlotCompatibilityEnum(str, Enum):
    r"""Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard."""
    DISPLAY = 'DISPLAY'
    DISPLAY_INTERSTITIAL = 'DISPLAY_INTERSTITIAL'
    APP = 'APP'
    APP_INTERSTITIAL = 'APP_INTERSTITIAL'
    IN_STREAM_VIDEO = 'IN_STREAM_VIDEO'
    IN_STREAM_AUDIO = 'IN_STREAM_AUDIO'

class AdSlotPaymentSourceTypeEnum(str, Enum):
    r"""Payment source type of this ad slot."""
    PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID = 'PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID'
    PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID = 'PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AdSlot:
    r"""Ad Slot"""
    
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""Comment for this ad slot."""  
    compatibility: Optional[AdSlotCompatibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compatibility'), 'exclude': lambda f: f is None }})
    r"""Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard."""  
    height: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height'), 'exclude': lambda f: f is None }})
    r"""Height of this ad slot."""  
    linked_placement_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkedPlacementId'), 'exclude': lambda f: f is None }})
    r"""ID of the placement from an external platform that is linked to this ad slot."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of this ad slot."""  
    payment_source_type: Optional[AdSlotPaymentSourceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentSourceType'), 'exclude': lambda f: f is None }})
    r"""Payment source type of this ad slot."""  
    primary: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primary'), 'exclude': lambda f: f is None }})
    r"""Primary ad slot of a roadblock inventory item."""  
    width: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width'), 'exclude': lambda f: f is None }})
    r"""Width of this ad slot."""  
    