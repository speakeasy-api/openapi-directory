"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import columnconfiguration as shared_columnconfiguration
from ..shared import customcolumnlinks as shared_customcolumnlinks
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomColumn:
    r"""The custom column configuration"""
    
    configuration: shared_columnconfiguration.ColumnConfiguration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configuration') }})
    r"""Indicates the configuration applied on the column (catalog or custom) during the importation process."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The catalog column identifier"""  
    links: shared_customcolumnlinks.CustomColumnLinks = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links') }})  
    user_colum_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userColumName') }})
    r"""Column named by the user"""  
    catalog_column_dependencies: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalogColumnDependencies'), 'exclude': lambda f: f is None }})  
    