"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import startactivityintent as shared_startactivityintent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RoboStartingIntent:
    r"""Message for specifying the start activities to crawl."""
    
    launcher_activity: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('launcherActivity'), 'exclude': lambda f: f is None }})
    r"""Specifies an intent that starts the main launcher activity."""  
    start_activity: Optional[shared_startactivityintent.StartActivityIntent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startActivity'), 'exclude': lambda f: f is None }})
    r"""A starting intent specified by an action, uri, and categories."""  
    timeout: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeout'), 'exclude': lambda f: f is None }})
    r"""Timeout in seconds for each intent."""  
    