// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GroupRelationRelationTypeEnum - The relation between the member and the transitive group.
type GroupRelationRelationTypeEnum string

const (
	GroupRelationRelationTypeEnumRelationTypeUnspecified GroupRelationRelationTypeEnum = "RELATION_TYPE_UNSPECIFIED"
	GroupRelationRelationTypeEnumDirect                  GroupRelationRelationTypeEnum = "DIRECT"
	GroupRelationRelationTypeEnumIndirect                GroupRelationRelationTypeEnum = "INDIRECT"
	GroupRelationRelationTypeEnumDirectAndIndirect       GroupRelationRelationTypeEnum = "DIRECT_AND_INDIRECT"
)

func (e *GroupRelationRelationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RELATION_TYPE_UNSPECIFIED":
		fallthrough
	case "DIRECT":
		fallthrough
	case "INDIRECT":
		fallthrough
	case "DIRECT_AND_INDIRECT":
		*e = GroupRelationRelationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupRelationRelationTypeEnum: %s", s)
	}
}

// GroupRelation - Message representing a transitive group of a user or a group.
type GroupRelation struct {
	// Display name for this group.
	DisplayName *string `json:"displayName,omitempty"`
	// Resource name for this group.
	Group *string `json:"group,omitempty"`
	// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
	GroupKey *EntityKey `json:"groupKey,omitempty"`
	// Labels for Group resource.
	Labels map[string]string `json:"labels,omitempty"`
	// The relation between the member and the transitive group.
	RelationType *GroupRelationRelationTypeEnum `json:"relationType,omitempty"`
	// Membership roles of the member for the group.
	Roles []TransitiveMembershipRole `json:"roles,omitempty"`
}
