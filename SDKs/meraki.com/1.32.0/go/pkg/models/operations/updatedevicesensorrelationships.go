// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateDeviceSensorRelationshipsRequestBodyLivestreamRelatedDevices struct {
	// The serial of the related device
	Serial string `json:"serial"`
}

// UpdateDeviceSensorRelationshipsRequestBodyLivestream - A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
type UpdateDeviceSensorRelationshipsRequestBodyLivestream struct {
	// An array of the related devices for the role
	RelatedDevices []UpdateDeviceSensorRelationshipsRequestBodyLivestreamRelatedDevices `json:"relatedDevices,omitempty"`
}

type UpdateDeviceSensorRelationshipsRequestBody struct {
	// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
	Livestream *UpdateDeviceSensorRelationshipsRequestBodyLivestream `json:"livestream,omitempty"`
}

type UpdateDeviceSensorRelationshipsRequest struct {
	RequestBody *UpdateDeviceSensorRelationshipsRequestBody `request:"mediaType=application/json"`
	Serial      string                                      `pathParam:"style=simple,explode=false,name=serial"`
}

// UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum - The product type of the related device
type UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum string

const (
	UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnumCamera UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum = "camera"
	UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnumSensor UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum = "sensor"
)

func (e UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum) ToPointer() *UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum {
	return &e
}

func (e *UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "camera":
		fallthrough
	case "sensor":
		*e = UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum: %v", v)
	}
}

type UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevices struct {
	// The product type of the related device
	ProductType *UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum `json:"productType,omitempty"`
	// The serial of the related device
	Serial *string `json:"serial,omitempty"`
}

// UpdateDeviceSensorRelationships200ApplicationJSONLivestream - A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
type UpdateDeviceSensorRelationships200ApplicationJSONLivestream struct {
	// An array of the related devices for the role
	RelatedDevices []UpdateDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevices `json:"relatedDevices,omitempty"`
}

// UpdateDeviceSensorRelationships200ApplicationJSON - Successful operation
type UpdateDeviceSensorRelationships200ApplicationJSON struct {
	// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
	Livestream *UpdateDeviceSensorRelationships200ApplicationJSONLivestream `json:"livestream,omitempty"`
}

type UpdateDeviceSensorRelationshipsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateDeviceSensorRelationships200ApplicationJSONObject *UpdateDeviceSensorRelationships200ApplicationJSON
}
