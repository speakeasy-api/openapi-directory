<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ChecksListForRefRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=app_id')]
    public ?int $appId = null;
    
    /**
     * Returns check runs with the specified `name`.
     * 
     * @var ?string $checkName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=check_name')]
    public ?string $checkName = null;
    
    /**
     * Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ChecksListForRefFilterEnum $filter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter')]
    public ?ChecksListForRefFilterEnum $filter = null;
    
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=owner')]
    public string $owner;
    
    /**
     * Page number of the results to fetch.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Results per page (max 100)
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * ref parameter
     * 
     * @var string $ref
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=ref')]
    public string $ref;
    
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=repo')]
    public string $repo;
    
    /**
     * Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StatusEnum $status
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=status')]
    public ?\OpenAPI\OpenAPI\Models\Shared\StatusEnum $status = null;
    
	public function __construct()
	{
		$this->appId = null;
		$this->checkName = null;
		$this->filter = null;
		$this->owner = "";
		$this->page = null;
		$this->perPage = null;
		$this->ref = "";
		$this->repo = "";
		$this->status = null;
	}
}
