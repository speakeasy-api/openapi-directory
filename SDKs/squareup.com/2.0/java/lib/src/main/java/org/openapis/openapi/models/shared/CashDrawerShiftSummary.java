/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CashDrawerShiftSummary - The summary of a closed cash drawer shift.
 * This model contains only the money counted to start a cash drawer shift, counted
 * at the end of the shift, and the amount that should be in the drawer at shift
 * end based on summing all cash drawer shift events.
 */
public class CashDrawerShiftSummary {
    /**
     * The shift close time in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("closed_at")
    public String closedAt;

    public CashDrawerShiftSummary withClosedAt(String closedAt) {
        this.closedAt = closedAt;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("closed_cash_money")
    public Money closedCashMoney;

    public CashDrawerShiftSummary withClosedCashMoney(Money closedCashMoney) {
        this.closedCashMoney = closedCashMoney;
        return this;
    }
    
    /**
     * An employee free-text description of a cash drawer shift.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CashDrawerShiftSummary withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The shift end time in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ended_at")
    public String endedAt;

    public CashDrawerShiftSummary withEndedAt(String endedAt) {
        this.endedAt = endedAt;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expected_cash_money")
    public Money expectedCashMoney;

    public CashDrawerShiftSummary withExpectedCashMoney(Money expectedCashMoney) {
        this.expectedCashMoney = expectedCashMoney;
        return this;
    }
    
    /**
     * The shift unique ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CashDrawerShiftSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The shift start time in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("opened_at")
    public String openedAt;

    public CashDrawerShiftSummary withOpenedAt(String openedAt) {
        this.openedAt = openedAt;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("opened_cash_money")
    public Money openedCashMoney;

    public CashDrawerShiftSummary withOpenedCashMoney(Money openedCashMoney) {
        this.openedCashMoney = openedCashMoney;
        return this;
    }
    
    /**
     * The shift current state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public CashDrawerShiftSummary withState(String state) {
        this.state = state;
        return this;
    }
    
    public CashDrawerShiftSummary(){}
}
