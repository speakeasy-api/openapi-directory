"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateNetworkApplianceSingleLanResponse = exports.UpdateNetworkApplianceSingleLan200ApplicationJSON = exports.UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp = exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6 = exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments = exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin = exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum = exports.UpdateNetworkApplianceSingleLanRequest = exports.UpdateNetworkApplianceSingleLanRequestBody = exports.UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp = exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6 = exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments = exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin = exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOriginTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Type of the origin
 */
var UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOriginTypeEnum;
(function (UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOriginTypeEnum) {
    UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOriginTypeEnum["Independent"] = "independent";
    UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOriginTypeEnum["Internet"] = "internet";
})(UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOriginTypeEnum = exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOriginTypeEnum || (exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOriginTypeEnum = {}));
/**
 * The origin of the prefix
 */
var UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin, _super);
    function UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "interfaces" }),
        __metadata("design:type", Array)
    ], UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin.prototype, "interfaces", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin.prototype, "type", void 0);
    return UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin = UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin;
var UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments, _super);
    function UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autonomous" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments.prototype, "autonomous", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "origin" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin; }),
        __metadata("design:type", UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignmentsOrigin)
    ], UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments.prototype, "origin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "staticApplianceIp6" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments.prototype, "staticApplianceIp6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "staticPrefix" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments.prototype, "staticPrefix", void 0);
    return UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments = UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments;
/**
 * IPv6 configuration on the VLAN
 */
var UpdateNetworkApplianceSingleLanRequestBodyIpv6 = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLanRequestBodyIpv6, _super);
    function UpdateNetworkApplianceSingleLanRequestBodyIpv6() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkApplianceSingleLanRequestBodyIpv6.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments,
        }),
        (0, class_transformer_1.Expose)({ name: "prefixAssignments" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkApplianceSingleLanRequestBodyIpv6PrefixAssignments; }),
        __metadata("design:type", Array)
    ], UpdateNetworkApplianceSingleLanRequestBodyIpv6.prototype, "prefixAssignments", void 0);
    return UpdateNetworkApplianceSingleLanRequestBodyIpv6;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLanRequestBodyIpv6 = UpdateNetworkApplianceSingleLanRequestBodyIpv6;
/**
 * Mandatory DHCP will enforce that clients connecting to this LAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
 */
var UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp, _super);
    function UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp.prototype, "enabled", void 0);
    return UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp = UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp;
var UpdateNetworkApplianceSingleLanRequestBody = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLanRequestBody, _super);
    function UpdateNetworkApplianceSingleLanRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "applianceIp" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLanRequestBody.prototype, "applianceIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv6" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkApplianceSingleLanRequestBodyIpv6; }),
        __metadata("design:type", UpdateNetworkApplianceSingleLanRequestBodyIpv6)
    ], UpdateNetworkApplianceSingleLanRequestBody.prototype, "ipv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mandatoryDhcp" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp; }),
        __metadata("design:type", UpdateNetworkApplianceSingleLanRequestBodyMandatoryDhcp)
    ], UpdateNetworkApplianceSingleLanRequestBody.prototype, "mandatoryDhcp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subnet" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLanRequestBody.prototype, "subnet", void 0);
    return UpdateNetworkApplianceSingleLanRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLanRequestBody = UpdateNetworkApplianceSingleLanRequestBody;
var UpdateNetworkApplianceSingleLanRequest = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLanRequest, _super);
    function UpdateNetworkApplianceSingleLanRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateNetworkApplianceSingleLanRequestBody)
    ], UpdateNetworkApplianceSingleLanRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLanRequest.prototype, "networkId", void 0);
    return UpdateNetworkApplianceSingleLanRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLanRequest = UpdateNetworkApplianceSingleLanRequest;
/**
 * Type of the origin
 */
var UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum;
(function (UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum) {
    UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum["Independent"] = "independent";
    UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum["Internet"] = "internet";
})(UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum = exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum || (exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum = {}));
/**
 * The origin of the prefix
 */
var UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin, _super);
    function UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "interfaces" }),
        __metadata("design:type", Array)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin.prototype, "interfaces", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin.prototype, "type", void 0);
    return UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin = UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin;
var UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments, _super);
    function UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autonomous" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments.prototype, "autonomous", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "origin" }),
        (0, class_transformer_1.Type)(function () {
            return UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin;
        }),
        __metadata("design:type", UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments.prototype, "origin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "staticApplianceIp6" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments.prototype, "staticApplianceIp6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "staticPrefix" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments.prototype, "staticPrefix", void 0);
    return UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments = UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments;
/**
 * IPv6 configuration on the single LAN
 */
var UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6 = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6, _super);
    function UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments,
        }),
        (0, class_transformer_1.Expose)({ name: "prefixAssignments" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments; }),
        __metadata("design:type", Array)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6.prototype, "prefixAssignments", void 0);
    return UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6 = UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6;
/**
 * Mandatory DHCP will enforce that clients connecting to this single LAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
 */
var UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp, _super);
    function UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp.prototype, "enabled", void 0);
    return UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp = UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp;
/**
 * Successful operation
 */
var UpdateNetworkApplianceSingleLan200ApplicationJSON = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLan200ApplicationJSON, _super);
    function UpdateNetworkApplianceSingleLan200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "applianceIp" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSON.prototype, "applianceIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv6" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6; }),
        __metadata("design:type", UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSON.prototype, "ipv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mandatoryDhcp" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp; }),
        __metadata("design:type", UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSON.prototype, "mandatoryDhcp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subnet" }),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLan200ApplicationJSON.prototype, "subnet", void 0);
    return UpdateNetworkApplianceSingleLan200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLan200ApplicationJSON = UpdateNetworkApplianceSingleLan200ApplicationJSON;
var UpdateNetworkApplianceSingleLanResponse = /** @class */ (function (_super) {
    __extends(UpdateNetworkApplianceSingleLanResponse, _super);
    function UpdateNetworkApplianceSingleLanResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateNetworkApplianceSingleLanResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateNetworkApplianceSingleLanResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkApplianceSingleLanResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", UpdateNetworkApplianceSingleLan200ApplicationJSON)
    ], UpdateNetworkApplianceSingleLanResponse.prototype, "updateNetworkApplianceSingleLan200ApplicationJSONObject", void 0);
    return UpdateNetworkApplianceSingleLanResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkApplianceSingleLanResponse = UpdateNetworkApplianceSingleLanResponse;
