// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ItemListItemTypesEnum string

const (
	ItemListItemTypesEnumMovie       ItemListItemTypesEnum = "movie"
	ItemListItemTypesEnumShow        ItemListItemTypesEnum = "show"
	ItemListItemTypesEnumSeason      ItemListItemTypesEnum = "season"
	ItemListItemTypesEnumEpisode     ItemListItemTypesEnum = "episode"
	ItemListItemTypesEnumProgram     ItemListItemTypesEnum = "program"
	ItemListItemTypesEnumLink        ItemListItemTypesEnum = "link"
	ItemListItemTypesEnumTrailer     ItemListItemTypesEnum = "trailer"
	ItemListItemTypesEnumChannel     ItemListItemTypesEnum = "channel"
	ItemListItemTypesEnumCustomAsset ItemListItemTypesEnum = "customAsset"
)

func (e *ItemListItemTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "movie":
		fallthrough
	case "show":
		fallthrough
	case "season":
		fallthrough
	case "episode":
		fallthrough
	case "program":
		fallthrough
	case "link":
		fallthrough
	case "trailer":
		fallthrough
	case "channel":
		fallthrough
	case "customAsset":
		*e = ItemListItemTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ItemListItemTypesEnum: %s", s)
	}
}

// ItemList - A pageable list of items.
type ItemList struct {
	// A map of custom fields defined by a curator for a list.
	CustomFields map[string]interface{} `json:"customFields,omitempty"`
	// A full description of this list.
	Description *string `json:"description,omitempty"`
	// The id of this list
	ID     string            `json:"id"`
	Images map[string]string `json:"images,omitempty"`
	// The types of items in the list
	ItemTypes []ItemListItemTypesEnum `json:"itemTypes,omitempty"`
	// A list of items
	Items []ItemSummary `json:"items"`
	// Extra data to accompany ItemList content. The (single) key in the object is
	// the list name and the data changes depending on the list
	//
	ListData *ListData  `json:"listData,omitempty"`
	Paging   Pagination `json:"paging"`
	// If this list is parameterized, then this contains the parameter of the list in the format `name:value`.
	// For example the Movies Genre list will take a parameter `genre` with a given value. e.g. `genre:action` or `genre:drama`.
	Parameter *string `json:"parameter,omitempty"`
	// The path of this list
	Path string `json:"path"`
	// A short description of this list.
	ShortDescription *string `json:"shortDescription,omitempty"`
	// The total size of the list
	Size int `json:"size"`
	// The tagline of the item.
	Tagline *string `json:"tagline,omitempty"`
	Themes  []Theme `json:"themes,omitempty"`
	// The title of this list
	Title *string `json:"title,omitempty"`
}
