<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class OrderLineItemsInput
{
    /**
     * $appliedDiscounts
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderLineItemsAppliedDiscountsInput> $appliedDiscounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('applied_discounts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderLineItemsAppliedDiscountsInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $appliedDiscounts = null;
    
    /**
     * $appliedTaxes
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderLineItemsAppliedTaxesInput> $appliedTaxes
     */
	#[\JMS\Serializer\Annotation\SerializedName('applied_taxes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderLineItemsAppliedTaxesInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $appliedTaxes = null;
    
    /**
     * Customizable options – toppings, add-ons, or special requests – create item modifiers. Modifiers that are applied to items will display on your customers’ digital receipts
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderLineItemsModifiers> $modifiers
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderLineItemsModifiers>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $modifiers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $quantity = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('total_amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalAmount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('total_discount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalDiscount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('total_tax')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalTax = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('unit_price')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $unitPrice = null;
    
	public function __construct()
	{
		$this->appliedDiscounts = null;
		$this->appliedTaxes = null;
		$this->modifiers = null;
		$this->name = null;
		$this->quantity = null;
		$this->totalAmount = null;
		$this->totalDiscount = null;
		$this->totalTax = null;
		$this->unitPrice = null;
	}
}
