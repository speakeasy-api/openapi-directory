// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListExportsRequest struct {
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	Limit  *int64  `queryParam:"style=form,explode=true,name=limit"`
}

type ListExportsDefaultApplicationJSON13StatusEnum int64

const (
	ListExportsDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListExportsDefaultApplicationJSON13StatusEnum = 429
)

func (e ListExportsDefaultApplicationJSON13StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListExportsDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON13TypeEnum string

const (
	ListExportsDefaultApplicationJSON13TypeEnumRateLimitedError ListExportsDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListExportsDefaultApplicationJSON13TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListExportsDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON13 struct {
	Detail     string                                        `json:"detail"`
	RetryAfter *int64                                        `json:"retry_after,omitempty"`
	Status     ListExportsDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                        `json:"title"`
	Type       ListExportsDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON12StatusEnum int64

const (
	ListExportsDefaultApplicationJSON12StatusEnumFourHundredAndThree ListExportsDefaultApplicationJSON12StatusEnum = 403
)

func (e ListExportsDefaultApplicationJSON12StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListExportsDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON12TypeEnum string

const (
	ListExportsDefaultApplicationJSON12TypeEnumPrivateFeatureError ListExportsDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListExportsDefaultApplicationJSON12TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListExportsDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON12 struct {
	Detail string                                        `json:"detail"`
	Status ListExportsDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListExportsDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON11StatusEnum int64

const (
	ListExportsDefaultApplicationJSON11StatusEnumFourHundredAndFour ListExportsDefaultApplicationJSON11StatusEnum = 404
)

func (e ListExportsDefaultApplicationJSON11StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListExportsDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON11TypeEnum string

const (
	ListExportsDefaultApplicationJSON11TypeEnumObjectNotFoundError ListExportsDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListExportsDefaultApplicationJSON11TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListExportsDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON11 struct {
	Detail string                                        `json:"detail"`
	Status ListExportsDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListExportsDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON10StatusEnum int64

const (
	ListExportsDefaultApplicationJSON10StatusEnumFourHundred ListExportsDefaultApplicationJSON10StatusEnum = 400
)

func (e ListExportsDefaultApplicationJSON10StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListExportsDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON10TypeEnum string

const (
	ListExportsDefaultApplicationJSON10TypeEnumMalformedRequestError ListExportsDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListExportsDefaultApplicationJSON10TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListExportsDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON10 struct {
	Detail string                                        `json:"detail"`
	Status ListExportsDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListExportsDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON9StatusEnum int64

const (
	ListExportsDefaultApplicationJSON9StatusEnumFourHundred ListExportsDefaultApplicationJSON9StatusEnum = 400
)

func (e ListExportsDefaultApplicationJSON9StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListExportsDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON9TypeEnum string

const (
	ListExportsDefaultApplicationJSON9TypeEnumInvalidParametersError ListExportsDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListExportsDefaultApplicationJSON9TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListExportsDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                     `json:"errors"`
	Status ListExportsDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON8StatusEnum int64

const (
	ListExportsDefaultApplicationJSON8StatusEnumFourHundredAndNine ListExportsDefaultApplicationJSON8StatusEnum = 409
)

func (e ListExportsDefaultApplicationJSON8StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListExportsDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON8TypeEnum string

const (
	ListExportsDefaultApplicationJSON8TypeEnumInvalidOperationError ListExportsDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListExportsDefaultApplicationJSON8TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListExportsDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON8 struct {
	Detail string                                       `json:"detail"`
	Status ListExportsDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON7StatusEnum int64

const (
	ListExportsDefaultApplicationJSON7StatusEnumFourHundredAndOne ListExportsDefaultApplicationJSON7StatusEnum = 401
)

func (e ListExportsDefaultApplicationJSON7StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListExportsDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON7TypeEnum string

const (
	ListExportsDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListExportsDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListExportsDefaultApplicationJSON7TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListExportsDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON7 struct {
	Detail string                                       `json:"detail"`
	Status ListExportsDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON6StatusEnum int64

const (
	ListExportsDefaultApplicationJSON6StatusEnumFiveHundred ListExportsDefaultApplicationJSON6StatusEnum = 500
)

func (e ListExportsDefaultApplicationJSON6StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListExportsDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON6TypeEnum string

const (
	ListExportsDefaultApplicationJSON6TypeEnumInternalServerError ListExportsDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListExportsDefaultApplicationJSON6TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListExportsDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON6 struct {
	Detail string                                       `json:"detail"`
	Status ListExportsDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON5StatusEnum int64

const (
	ListExportsDefaultApplicationJSON5StatusEnumFourHundredAndThree ListExportsDefaultApplicationJSON5StatusEnum = 403
)

func (e ListExportsDefaultApplicationJSON5StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListExportsDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON5TypeEnum string

const (
	ListExportsDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListExportsDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListExportsDefaultApplicationJSON5TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListExportsDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON5 struct {
	Detail string                                       `json:"detail"`
	Status ListExportsDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON4StatusEnum int64

const (
	ListExportsDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListExportsDefaultApplicationJSON4StatusEnum = 422
)

func (e ListExportsDefaultApplicationJSON4StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListExportsDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON4TypeEnum string

const (
	ListExportsDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListExportsDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListExportsDefaultApplicationJSON4TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListExportsDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON4 struct {
	Detail string                                       `json:"detail"`
	Status ListExportsDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON3StatusEnum int64

const (
	ListExportsDefaultApplicationJSON3StatusEnumFourHundredAndNine ListExportsDefaultApplicationJSON3StatusEnum = 409
)

func (e ListExportsDefaultApplicationJSON3StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListExportsDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON3TypeEnum string

const (
	ListExportsDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListExportsDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListExportsDefaultApplicationJSON3TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListExportsDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON3 struct {
	Detail string                                       `json:"detail"`
	Status ListExportsDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON2StatusEnum int64

const (
	ListExportsDefaultApplicationJSON2StatusEnumFourHundredAndThree ListExportsDefaultApplicationJSON2StatusEnum = 403
)

func (e ListExportsDefaultApplicationJSON2StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListExportsDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON2TypeEnum string

const (
	ListExportsDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListExportsDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListExportsDefaultApplicationJSON2TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListExportsDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON2 struct {
	Detail string                                       `json:"detail"`
	Status ListExportsDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListExportsDefaultApplicationJSON1StatusEnum int64

const (
	ListExportsDefaultApplicationJSON1StatusEnumFourHundredAndFour ListExportsDefaultApplicationJSON1StatusEnum = 404
)

func (e ListExportsDefaultApplicationJSON1StatusEnum) ToPointer() *ListExportsDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListExportsDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON1TypeEnum string

const (
	ListExportsDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListExportsDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListExportsDefaultApplicationJSON1TypeEnum) ToPointer() *ListExportsDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListExportsDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListExportsDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListExportsDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListExportsDefaultApplicationJSON1 struct {
	Detail string                                       `json:"detail"`
	Status ListExportsDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListExportsDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListExportsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Export List
	ExportList *shared.ExportList
}
