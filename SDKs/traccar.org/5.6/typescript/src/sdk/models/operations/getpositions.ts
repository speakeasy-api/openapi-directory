/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetPositionsRequest extends SpeakeasyBase {
  /**
   * _deviceId_ is optional, but requires the _from_ and _to_ parameters when used
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=deviceId",
  })
  deviceId?: number;

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  from?: Date;

  /**
   * To fetch one or more positions. Multiple params can be passed like `id=31&id=42`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=id" })
  id?: number;

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  to?: Date;
}

export class GetPositionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.Position })
  positions?: shared.Position[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
