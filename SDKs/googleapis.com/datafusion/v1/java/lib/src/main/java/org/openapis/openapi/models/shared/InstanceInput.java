/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstanceInput - Represents a Data Fusion instance.
 */
public class InstanceInput {
    /**
     * The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cryptoKeyConfig")
    public CryptoKeyConfig cryptoKeyConfig;

    public InstanceInput withCryptoKeyConfig(CryptoKeyConfig cryptoKeyConfig) {
        this.cryptoKeyConfig = cryptoKeyConfig;
        return this;
    }
    
    /**
     * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines. This allows users to have fine-grained access control on Dataproc's accesses to cloud resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataprocServiceAccount")
    public String dataprocServiceAccount;

    public InstanceInput withDataprocServiceAccount(String dataprocServiceAccount) {
        this.dataprocServiceAccount = dataprocServiceAccount;
        return this;
    }
    
    /**
     * A description of this instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public InstanceInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Display name for an instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public InstanceInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Option to enable granular role-based access control.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableRbac")
    public Boolean enableRbac;

    public InstanceInput withEnableRbac(Boolean enableRbac) {
        this.enableRbac = enableRbac;
        return this;
    }
    
    /**
     * Option to enable Stackdriver Logging.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableStackdriverLogging")
    public Boolean enableStackdriverLogging;

    public InstanceInput withEnableStackdriverLogging(Boolean enableStackdriverLogging) {
        this.enableStackdriverLogging = enableStackdriverLogging;
        return this;
    }
    
    /**
     * Option to enable Stackdriver Monitoring.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableStackdriverMonitoring")
    public Boolean enableStackdriverMonitoring;

    public InstanceInput withEnableStackdriverMonitoring(Boolean enableStackdriverMonitoring) {
        this.enableStackdriverMonitoring = enableStackdriverMonitoring;
        return this;
    }
    
    /**
     * Option to enable granular zone separation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableZoneSeparation")
    public Boolean enableZoneSeparation;

    public InstanceInput withEnableZoneSeparation(Boolean enableZoneSeparation) {
        this.enableZoneSeparation = enableZoneSeparation;
        return this;
    }
    
    /**
     * Confirguration of PubSubEventWriter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventPublishConfig")
    public EventPublishConfig eventPublishConfig;

    public InstanceInput withEventPublishConfig(EventPublishConfig eventPublishConfig) {
        this.eventPublishConfig = eventPublishConfig;
        return this;
    }
    
    /**
     * The resource labels for instance to use to annotate any related underlying resources such as Compute Engine VMs. The character '=' is not allowed to be used within the labels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public InstanceInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Network configuration for a Data Fusion instance. These configurations are used for peering with the customer network. Configurations are optional when a public Data Fusion instance is to be created. However, providing these configurations allows several benefits, such as reduced network latency while accessing the customer resources from managed Data Fusion instance nodes, as well as access to the customer on-prem resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfig")
    public NetworkConfig networkConfig;

    public InstanceInput withNetworkConfig(NetworkConfig networkConfig) {
        this.networkConfig = networkConfig;
        return this;
    }
    
    /**
     * Map of additional options used to configure the behavior of Data Fusion instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public java.util.Map<String, String> options;

    public InstanceInput withOptions(java.util.Map<String, String> options) {
        this.options = options;
        return this;
    }
    
    /**
     * Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP addresses and will not be able to access the public internet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateInstance")
    public Boolean privateInstance;

    public InstanceInput withPrivateInstance(Boolean privateInstance) {
        this.privateInstance = privateInstance;
        return this;
    }
    
    /**
     * Required. Instance type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public InstanceTypeEnum type;

    public InstanceInput withType(InstanceTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Current version of the Data Fusion. Only specifiable in Update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public InstanceInput withVersion(String version) {
        this.version = version;
        return this;
    }
    
    /**
     * Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;

    public InstanceInput withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
    public InstanceInput(){}
}
