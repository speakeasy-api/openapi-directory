/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InvalidField } from "./invalidfield";
import { JSONObject } from "./jsonobject";
import { Expose, Type } from "class-transformer";

/**
 * Unauthorized - authentication required.
 */
export class RestServiceError extends SpeakeasyBase {
  /**
   * A human-readable explanation specific to this occurrence of the problem.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  /**
   * A code that identifies the problem type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCode" })
  errorCode: string;

  /**
   * A unique URI that identifies the specific occurrence of the problem.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  /**
   * Detailed explanation of each validation error, when applicable.
   */
  @SpeakeasyMetadata({ elemType: InvalidField })
  @Expose({ name: "invalidFields" })
  @Type(() => InvalidField)
  invalidFields?: InvalidField[];

  /**
   * A unique reference for the request, essentially the same as `pspReference`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  @Type(() => JSONObject)
  response?: JSONObject;

  /**
   * The HTTP status code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;

  /**
   * A short, human-readable summary of the problem type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * A URI that identifies the problem type, pointing to human-readable documentation on this problem type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
