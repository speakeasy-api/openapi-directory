/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EvaluationTypeEnum } from "./evaluationtypeenum";
import { Metrics } from "./metrics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>The metrics for a time range within the evaluation portion of a dataset. This object is part of the <a>EvaluationResult</a> object.</p> <p>The <code>TestWindowStart</code> and <code>TestWindowEnd</code> parameters are determined by the <code>BackTestWindowOffset</code> parameter of the <a>EvaluationParameters</a> object.</p>
 */
export class WindowSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationType" })
  evaluationType?: EvaluationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ItemCount" })
  itemCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Metrics" })
  @Type(() => Metrics)
  metrics?: Metrics;

  @SpeakeasyMetadata()
  @Expose({ name: "TestWindowEnd" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  testWindowEnd?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TestWindowStart" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  testWindowStart?: Date;
}
