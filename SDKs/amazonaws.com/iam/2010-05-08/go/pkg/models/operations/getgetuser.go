// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETUserActionEnum
type GETGETUserActionEnum string

const (
	GETGETUserActionEnumGetUser GETGETUserActionEnum = "GetUser"
)

func (e *GETGETUserActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetUser":
		*e = GETGETUserActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETUserActionEnum: %s", s)
	}
}

// GETGETUserVersionEnum
type GETGETUserVersionEnum string

const (
	GETGETUserVersionEnumTwoThousandAndTen0508 GETGETUserVersionEnum = "2010-05-08"
)

func (e *GETGETUserVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETGETUserVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETUserVersionEnum: %s", s)
	}
}

type GETGETUserQueryParams struct {
	Action GETGETUserActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the user to get information about.</p> <p>This parameter is optional. If it is not included, it defaults to the user making the request. This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	UserName *string               `queryParam:"style=form,explode=true,name=UserName"`
	Version  GETGETUserVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETGETUserHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETUserRequest struct {
	QueryParams GETGETUserQueryParams
	Headers     GETGETUserHeaders
}

type GETGETUserResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
