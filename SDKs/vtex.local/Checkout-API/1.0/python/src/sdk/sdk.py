"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .cart_attachments import CartAttachments
from .configuration import Configuration
from .custom_data import CustomData
from .fulfillment import Fulfillment
from .order_placement import OrderPlacement
from .region import Region
from .shopping_cart import ShoppingCart
from sdk.models import shared

SERVERS = [
    "https://vtex.local",
    "https://{accountName}.{environment}.com.br",
    r"""VTEX server url"""
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r""">ℹ️ Check the new [Checkout onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/checkout-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about the Checkout and is organized by focusing on the developer's journey.
    
    The Checkout API allows you to obtain and configure information about the shopping cart and its attachments, personalization of custom fields, orderForm structure, fulfillment data, order management, and identification of the sellers delivery region.
    
    >ℹ️ Data modification operations (`POST`, `PATCH`, `PUT` or `DELETE` endpoints) shall not be performed in parallel in the Checkout APIs. They need to be enqueued by the client/requester. Otherwise, old values \u200B\u200Bcan be overwritten incorrectly or competition errors may occur.
    
    >⚠️ All endpoints that consult or edit the orderForm can change the authentication depending on the customer context. If you are handling information from a customer with a complete profile on the store, authentication will be required. You can only access or modify the customer data for these profiles with an authenticated request.
    
    ## Shopping cart
    
    Allows merchants to simulate, configure and customize shopping cart information.
    
    - [POST - Cart Simulation](https://developers.vtex.com/vtex-rest-api/reference/cartsimulation)
    - [GET - Get current or create a new cart](https://developers.vtex.com/vtex-rest-api/reference/createanewcart)
    - [GET - Get cart information by ID](https://developers.vtex.com/vtex-rest-api/reference/getcartinformationbyid)
    - [POST - Remove all items](https://developers.vtex.com/vtex-rest-api/reference/removeallitems)
    - [GET - Remove all personal data](https://developers.vtex.com/vtex-rest-api/reference/removeallpersonaldata)
    - [POST - Update cart items](https://developers.vtex.com/vtex-rest-api/reference/itemsupdate)
    - [POST - Add cart items](https://developers.vtex.com/vtex-rest-api/reference/items)
    - [PUT - Change price](https://developers.vtex.com/vtex-rest-api/reference/pricechange)
    - [PATCH - Ignore profile data](https://developers.vtex.com/vtex-rest-api/reference/ignoreprofiledata)
    - [GET - Cart installments](https://developers.vtex.com/vtex-rest-api/reference/getcartinstallments)
    - [POST - Add coupons to the cart](https://developers.vtex.com/vtex-rest-api/reference/addcoupons)
    
    
    ## Cart attachments
    
    Allows merchants to obtain client profiles and add information to a given shopping cart.
    
    - [GET - Get client profile by email](https://developers.vtex.com/vtex-rest-api/reference/getclientprofilebyemail)
    - [POST - Add client profile](https://developers.vtex.com/vtex-rest-api/reference/addclientprofile)
    - [POST - Add shipping address and select delivery option](https://developers.vtex.com/vtex-rest-api/reference/addshippingaddress)
    - [POST - Add client preferences](https://developers.vtex.com/vtex-rest-api/reference/addclientpreferences)
    - [POST - Add marketing data](https://developers.vtex.com/vtex-rest-api/reference/addmarketingdata)
    - [POST - Add payment data](https://developers.vtex.com/vtex-rest-api/reference/addpaymentdata)
    - [POST - Add merchant context data](https://developers.vtex.com/vtex-rest-api/reference/addmerchantcontextdata)
    
    
    ## Custom data
    
    Allows merchants to manage custom fields that were created by an app in their account.
    
    - [PUT - Set multiple custom field values](https://developers.vtex.com/vtex-rest-api/reference/setmultiplecustomfieldvalues)
    - [PUT - Set single custom field value](https://developers.vtex.com/vtex-rest-api/reference/setsinglecustomfieldvalue)
    - [DELETE - Remove single custom field value](https://developers.vtex.com/vtex-rest-api/reference/removesinglecustomfieldvalue)
    
    
    ## Configuration
    
    Allows merchants to configure orderForm in the account and seller exchange on a given order.
    
    - [GET - Get orderForm configuration](https://developers.vtex.com/vtex-rest-api/reference/getorderformconfiguration)
    - [POST - Update orderForm configuration](https://developers.vtex.com/vtex-rest-api/reference/updateorderformconfiguration)
    - [GET - Get window to change seller](https://developers.vtex.com/vtex-rest-api/reference/getwindowtochangeseller)
    - [POST - Update window to change seller](https://developers.vtex.com/vtex-rest-api/reference/updatewindowtochangeseller)
    - [POST - Clear orderForm messages](https://developers.vtex.com/vtex-rest-api/reference/clearorderformmessages)
    
    
    ## Fulfillment
    
    Allows merchants to obtain pickup points and address information.
    
    - [GET - List pickup points by location](https://developers.vtex.com/vtex-rest-api/reference/listpickupppointsbylocation)
    - [GET - Get address by postal code](https://developers.vtex.com/vtex-rest-api/reference/getaddressbypostalcode)
    
    
    ## Order placement
    
    Allows merchants to place and process orders by creating a new cart or using an existing cart.
    
    - [POST - Place order from an existing cart](https://developers.vtex.com/vtex-rest-api/reference/placeorderfromexistingorderform)
    - [PUT - Place order](https://developers.vtex.com/vtex-rest-api/reference/placeorder)
    - [POST - Process order](https://developers.vtex.com/vtex-rest-api/reference/processorder)
    
    
    ## Region
    
    Allows merchants to obtain a list of sellers serving a specific delivery region.
    
    - [GET - Get sellers by region or address](https://developers.vtex.com/vtex-rest-api/reference/getsellersbyregion)
    """
    cart_attachments: CartAttachments
    configuration: Configuration
    custom_data: CustomData
    fulfillment: Fulfillment
    order_placement: OrderPlacement
    region: Region
    shopping_cart: ShoppingCart

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 security: shared.Security = None,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param security: The security details required for authentication
        :type security: shared.Security
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = utils.configure_security_client(self._client, security)
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.cart_attachments = CartAttachments(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.configuration = Configuration(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.custom_data = CustomData(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.fulfillment = Fulfillment(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.order_placement = OrderPlacement(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.region = Region(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.shopping_cart = ShoppingCart(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    