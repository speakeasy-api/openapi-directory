"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoalData:
    r"""Represents all the details pertaining to a goal."""
    
    goal_completion_location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goalCompletionLocation'), 'exclude': lambda f: f is None }})
    r"""URL of the page where this goal was completed."""  
    goal_completions: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goalCompletions'), 'exclude': lambda f: f is None }})
    r"""Total number of goal completions in this activity."""  
    goal_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goalIndex'), 'exclude': lambda f: f is None }})
    r"""This identifies the goal as configured for the profile."""  
    goal_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goalName'), 'exclude': lambda f: f is None }})
    r"""Name of the goal."""  
    goal_previous_step1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goalPreviousStep1'), 'exclude': lambda f: f is None }})
    r"""URL of the page one step prior to the goal completion."""  
    goal_previous_step2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goalPreviousStep2'), 'exclude': lambda f: f is None }})
    r"""URL of the page two steps prior to the goal completion."""  
    goal_previous_step3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goalPreviousStep3'), 'exclude': lambda f: f is None }})
    r"""URL of the page three steps prior to the goal completion."""  
    goal_value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goalValue'), 'exclude': lambda f: f is None }})
    r"""Value in this goal."""  
    