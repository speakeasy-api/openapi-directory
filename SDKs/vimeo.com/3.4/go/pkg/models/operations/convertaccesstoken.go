// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConvertAccessTokenRequestBodyGrantTypeEnum - The grant type. Must be set to `vimeo_oauth1`.
type ConvertAccessTokenRequestBodyGrantTypeEnum string

const (
	ConvertAccessTokenRequestBodyGrantTypeEnumVimeoOauth1 ConvertAccessTokenRequestBodyGrantTypeEnum = "vimeo_oauth1"
)

func (e *ConvertAccessTokenRequestBodyGrantTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "vimeo_oauth1":
		*e = ConvertAccessTokenRequestBodyGrantTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConvertAccessTokenRequestBodyGrantTypeEnum: %s", s)
	}
}

type ConvertAccessTokenRequestBody struct {
	// The grant type. Must be set to `vimeo_oauth1`.
	GrantType ConvertAccessTokenRequestBodyGrantTypeEnum `json:"grant_type"`
	// The OAuth 1 token.
	Token string `json:"token"`
	// The OAuth 1 token secret.
	TokenSecret string `json:"token_secret"`
}

type ConvertAccessTokenRequest struct {
	Request ConvertAccessTokenRequestBody `request:"mediaType=application/vnd.vimeo.auth+json"`
}

type ConvertAccessTokenResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The tokens were converted.
	Auth *shared.Auth
	// * The token is invalid.
	// * The token has unauthorized scopes.
	AuthError *shared.AuthError
}
