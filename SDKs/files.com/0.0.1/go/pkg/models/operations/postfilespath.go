// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type PostFilesPathRequestBody struct {
	// The action to perform.  Can be `append`, `attachment`, `end`, `upload`, `put`, or may not exist
	Action *string `multipartForm:"name=action"`
	// etag identifier.
	EtagsEtag []string `multipartForm:"name=etags[etag]"`
	// Part number.
	EtagsPart []int `multipartForm:"name=etags[part]"`
	// Length of file.
	Length *int `multipartForm:"name=length"`
	// Create parent directories if they do not exist?
	MkdirParents *bool `multipartForm:"name=mkdir_parents"`
	// Part if uploading a part.
	Part *int `multipartForm:"name=part"`
	// How many parts to fetch?
	Parts *int `multipartForm:"name=parts"`
	// User provided modification time.
	ProvidedMtime *time.Time `multipartForm:"name=provided_mtime"`
	Ref           *string    `multipartForm:"name=ref"`
	// File byte offset to restart from.
	Restart *int `multipartForm:"name=restart"`
	// Size of file.
	Size *int `multipartForm:"name=size"`
	// If copying folder, copy just the structure?
	Structure *string `multipartForm:"name=structure"`
	// Allow file rename instead of overwrite?
	WithRename *bool `multipartForm:"name=with_rename"`
}

type PostFilesPathRequest struct {
	RequestBody *PostFilesPathRequestBody `request:"mediaType=multipart/form-data"`
	// Path to operate on.
	Path string `pathParam:"style=simple,explode=false,name=path"`
}

type PostFilesPathResponse struct {
	ContentType string
	// The Files object.
	FileEntity  *shared.FileEntity
	StatusCode  int
	RawResponse *http.Response
}
