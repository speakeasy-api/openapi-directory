// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum - Indicates whether appliance mode support is enabled.
type RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum string

const (
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnumEnable  RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum = "enable"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnumDisable RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum = "disable"
)

func (e RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum) ToPointer() *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum {
	return &e
}

func (e *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enable":
		fallthrough
	case "disable":
		*e = RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum: %v", v)
	}
}

// RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum - Indicates whether DNS support is enabled.
type RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum string

const (
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnumEnable  RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum = "enable"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnumDisable RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum = "disable"
)

func (e RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum) ToPointer() *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum {
	return &e
}

func (e *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enable":
		fallthrough
	case "disable":
		*e = RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum: %v", v)
	}
}

// RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum - Indicates whether IPv6 support is disabled.
type RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum string

const (
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnumEnable  RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum = "enable"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnumDisable RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum = "disable"
)

func (e RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum) ToPointer() *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum {
	return &e
}

func (e *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enable":
		fallthrough
	case "disable":
		*e = RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum: %v", v)
	}
}

// RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptions - The VPC attachment options.
type RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptions struct {
	ApplianceModeSupport *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum
	DNSSupport           *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDNSSupportEnum
	Ipv6Support          *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum
}

// RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum - The state of the VPC attachment. Note that the <code>initiating</code> state has been deprecated.
type RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum string

const (
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumInitiating        RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "initiating"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumInitiatingRequest RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "initiatingRequest"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumPendingAcceptance RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "pendingAcceptance"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumRollingBack       RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "rollingBack"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumPending           RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "pending"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumAvailable         RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "available"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumModifying         RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "modifying"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumDeleting          RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "deleting"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumDeleted           RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "deleted"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumFailed            RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "failed"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumRejected          RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "rejected"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumRejecting         RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "rejecting"
	RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnumFailing           RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum = "failing"
)

func (e RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum) ToPointer() *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum {
	return &e
}

func (e *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initiating":
		fallthrough
	case "initiatingRequest":
		fallthrough
	case "pendingAcceptance":
		fallthrough
	case "rollingBack":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		fallthrough
	case "rejected":
		fallthrough
	case "rejecting":
		fallthrough
	case "failing":
		*e = RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum: %v", v)
	}
}

// RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentTags - Describes a tag.
type RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentTags struct {
	Key   *string
	Value *string
}

// RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachment - Information about the attachment.
type RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachment struct {
	CreationTime               *time.Time
	Options                    *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptions
	State                      *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum
	SubnetIds                  []string
	Tags                       []RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentTags
	TransitGatewayAttachmentID *string
	TransitGatewayID           *string
	VpcID                      *string
	VpcOwnerID                 *string
}

// RejectTransitGatewayVpcAttachmentResult - Success
type RejectTransitGatewayVpcAttachmentResult struct {
	TransitGatewayVpcAttachment *RejectTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachment
}
