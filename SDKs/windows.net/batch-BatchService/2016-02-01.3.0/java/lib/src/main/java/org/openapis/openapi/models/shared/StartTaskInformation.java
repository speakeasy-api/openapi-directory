/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * StartTaskInformation - Information about a start task running on a compute node.
 */
public class StartTaskInformation {
    /**
     * The time at which the start task stopped running.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;

    public StartTaskInformation withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The exit code of the start task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exitCode")
    public Integer exitCode;

    public StartTaskInformation withExitCode(Integer exitCode) {
        this.exitCode = exitCode;
        return this;
    }
    
    /**
     * The most recent time at which a retry of the task started running.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastRetryTime")
    public OffsetDateTime lastRetryTime;

    public StartTaskInformation withLastRetryTime(OffsetDateTime lastRetryTime) {
        this.lastRetryTime = lastRetryTime;
        return this;
    }
    
    /**
     * The number of times the task has been retried by the Batch service.
     */
    @JsonProperty("retryCount")
    public Integer retryCount;

    public StartTaskInformation withRetryCount(Integer retryCount) {
        this.retryCount = retryCount;
        return this;
    }
    
    /**
     * Information about an error when scheduling a task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedulingError")
    public TaskSchedulingError schedulingError;

    public StartTaskInformation withSchedulingError(TaskSchedulingError schedulingError) {
        this.schedulingError = schedulingError;
        return this;
    }
    
    /**
     * The time at which the start task started running.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;

    public StartTaskInformation withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The state of the start task on the compute node.
     */
    @JsonProperty("state")
    public StartTaskInformationStateEnum state;

    public StartTaskInformation withState(StartTaskInformationStateEnum state) {
        this.state = state;
        return this;
    }
    
    public StartTaskInformation(@JsonProperty("retryCount") Integer retryCount, @JsonProperty("startTime") OffsetDateTime startTime, @JsonProperty("state") StartTaskInformationStateEnum state) {
        this.retryCount = retryCount;
        this.startTime = startTime;
        this.state = state;
  }
}
