// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreditorAccountTypeEnum - * `IBAN` - IBAN
// * `SCAN` - SortCodeAccountNumber
type CreditorAccountTypeEnum string

const (
	CreditorAccountTypeEnumIban CreditorAccountTypeEnum = "IBAN"
	CreditorAccountTypeEnumScan CreditorAccountTypeEnum = "SCAN"
)

func (e CreditorAccountTypeEnum) ToPointer() *CreditorAccountTypeEnum {
	return &e
}

func (e *CreditorAccountTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IBAN":
		fallthrough
	case "SCAN":
		*e = CreditorAccountTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreditorAccountTypeEnum: %v", v)
	}
}

// CreditorAccount - Creditor account read serializer.
type CreditorAccount struct {
	// Creditor account type identifier
	Account string `json:"account"`
	// Creditor account address country
	AddressCountry *string `json:"address_country,omitempty"`
	// Creditor account currency
	Currency string `json:"currency"`
	// Unique entry ID
	ID *string `json:"id,omitempty"`
	// Creditor account name
	Name string `json:"name"`
	// Creditor account type
	//
	// * `IBAN` - IBAN
	// * `SCAN` - SortCodeAccountNumber
	Type *CreditorAccountTypeEnum `json:"type,omitempty"`
}
