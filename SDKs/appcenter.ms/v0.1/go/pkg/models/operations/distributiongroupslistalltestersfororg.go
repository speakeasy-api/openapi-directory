// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DistributionGroupsListAllTestersForOrgSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type DistributionGroupsListAllTestersForOrgRequest struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

type DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum string

const (
	DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnumBadRequest          DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnumConflict            DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnumNotAcceptable       DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnumNotFound            DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnumInternalServerError DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnumUnauthorized        DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnumTooManyRequests     DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum) ToPointer() *DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type DistributionGroupsListAllTestersForOrgDefaultApplicationJSONError struct {
	Code    DistributionGroupsListAllTestersForOrgDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                                    `json:"message"`
}

// DistributionGroupsListAllTestersForOrgDefaultApplicationJSON - Error
type DistributionGroupsListAllTestersForOrgDefaultApplicationJSON struct {
	Error DistributionGroupsListAllTestersForOrgDefaultApplicationJSONError `json:"error"`
}

type DistributionGroupsListAllTestersForOrg200ApplicationJSON struct {
	// The full name of the tester. Might for example be first and last name
	DisplayName *string `json:"display_name,omitempty"`
	// The email address of the tester
	Email string `json:"email"`
	// The unique name that is used to identify the tester.
	Name string `json:"name"`
}

type DistributionGroupsListAllTestersForOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	DistributionGroupsListAllTestersForOrg200ApplicationJSONObjects []DistributionGroupsListAllTestersForOrg200ApplicationJSON
	// Error
	DistributionGroupsListAllTestersForOrgDefaultApplicationJSONObject *DistributionGroupsListAllTestersForOrgDefaultApplicationJSON
}
