"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchJobInstructionBatchJobInstructionDELETEDELETE:
    
    at_href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@Href'), 'exclude': lambda f: f is None }})
    r"""The batch item bases' href"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchJobInstructionBatchJobInstructionDELETE:
    r"""The batch job instructions' instructions"""
    
    delete: Optional[list[BatchJobInstructionBatchJobInstructionDELETEDELETE]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DELETE'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchJobInstructionBatchJobInstruction:
    
    holding_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HoldingDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The batch job instructions' holding date"""  
    instructions: Optional[BatchJobInstructionBatchJobInstructionDELETE] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Instructions'), 'exclude': lambda f: f is None }})
    r"""The batch job instructions' instructions"""  
    validate_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidateOnly'), 'exclude': lambda f: f is None }})
    r"""The batch job instructions' validate only"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchJobInstruction:
    r"""The the batch job instruction object."""
    
    batch_job_instruction: Optional[BatchJobInstructionBatchJobInstruction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BatchJobInstruction'), 'exclude': lambda f: f is None }})  
    