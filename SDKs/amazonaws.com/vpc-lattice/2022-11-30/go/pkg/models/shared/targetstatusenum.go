// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetStatusEnum string

const (
	TargetStatusEnumDraining    TargetStatusEnum = "DRAINING"
	TargetStatusEnumUnavailable TargetStatusEnum = "UNAVAILABLE"
	TargetStatusEnumHealthy     TargetStatusEnum = "HEALTHY"
	TargetStatusEnumUnhealthy   TargetStatusEnum = "UNHEALTHY"
	TargetStatusEnumInitial     TargetStatusEnum = "INITIAL"
	TargetStatusEnumUnused      TargetStatusEnum = "UNUSED"
)

func (e TargetStatusEnum) ToPointer() *TargetStatusEnum {
	return &e
}

func (e *TargetStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DRAINING":
		fallthrough
	case "UNAVAILABLE":
		fallthrough
	case "HEALTHY":
		fallthrough
	case "UNHEALTHY":
		fallthrough
	case "INITIAL":
		fallthrough
	case "UNUSED":
		*e = TargetStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetStatusEnum: %v", v)
	}
}
