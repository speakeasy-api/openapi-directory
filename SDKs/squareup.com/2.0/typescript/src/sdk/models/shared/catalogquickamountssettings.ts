/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CatalogQuickAmount } from "./catalogquickamount";
import { Expose, Type } from "class-transformer";

/**
 * A parent Catalog Object model represents a set of Quick Amounts and the settings control the amounts.
 */
export class CatalogQuickAmountsSettings extends SpeakeasyBase {
  /**
   * Represents a set of Quick Amounts at this location.
   */
  @SpeakeasyMetadata({ elemType: CatalogQuickAmount })
  @Expose({ name: "amounts" })
  @Type(() => CatalogQuickAmount)
  amounts?: CatalogQuickAmount[];

  /**
   * Represents location's eligibility for auto amounts
   *
   * @remarks
   * The boolean should be consistent with whether there are AUTO amounts in the `amounts`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eligible_for_auto_amounts" })
  eligibleForAutoAmounts?: boolean;

  /**
   * Represents the option seller currently uses on Quick Amounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "option" })
  option: string;
}
