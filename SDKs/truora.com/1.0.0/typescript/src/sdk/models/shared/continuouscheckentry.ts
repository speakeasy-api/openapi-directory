/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Change } from "./change";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents to changelog entry of a continuous check
 */
export class ContinuousCheckEntry extends SpeakeasyBase {
  /**
   * Change list of background check scores
   */
  @SpeakeasyMetadata({ elemType: Change })
  @Expose({ name: "changes" })
  @Type(() => Change)
  changes?: Change[];

  /**
   * Check ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "check_id" })
  checkId?: string;

  /**
   * Continuous check ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "continuous_check_id" })
  continuousCheckId?: string;

  /**
   * Continuous check creation date in RFC3339 format
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creation_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  /**
   * Previous check ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_check_id" })
  previousCheckId?: string;
}
