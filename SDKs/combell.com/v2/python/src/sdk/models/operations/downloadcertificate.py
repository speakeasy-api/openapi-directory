"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import sslcertificatefileformat_enum as shared_sslcertificatefileformat_enum
from typing import Optional


@dataclasses.dataclass
class DownloadCertificateRequest:
    
    file_format: shared_sslcertificatefileformat_enum.SslCertificateFileFormatEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'file_format', 'style': 'form', 'explode': True }})
    r"""The file format of the returned file stream:
    <ul><li>PFX: Also known as PKCS #12, is a single, password protected certificate archive that contains the entire certificate chain plus the matching private key.</li></ul>
    """  
    password: str = dataclasses.field(metadata={'query_param': { 'field_name': 'password', 'style': 'form', 'explode': True }})
    r"""The password used to protect the certificate file.<br />"""  
    sha1_fingerprint_query_parameter: str = dataclasses.field(metadata={'query_param': { 'field_name': 'sha1_fingerprint', 'style': 'form', 'explode': True }})
    r"""The SHA-1 fingerprint of the certificate."""  
    sha1_fingerprint_path_parameter: str = dataclasses.field(metadata={'path_param': { 'field_name': 'sha1Fingerprint', 'style': 'simple', 'explode': False }})
    r"""Automatically added"""  
    

@dataclasses.dataclass
class DownloadCertificateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    download_certificate_200_application_json_binary_string: Optional[bytes] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    