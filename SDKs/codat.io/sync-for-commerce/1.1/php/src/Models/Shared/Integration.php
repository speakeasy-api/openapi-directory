<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Integration - An integration that Codat supports
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Integration
{
	#[\JMS\Serializer\Annotation\SerializedName('dataProvidedBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dataProvidedBy = null;
    
    /**
     * $datatypeFeatures
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DataTypeFeature> $datatypeFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('datatypeFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DataTypeFeature>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $datatypeFeatures = null;
    
    /**
     * Whether this integration is enabled for your customers to use
     * 
     * @var bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $enabled;
    
    /**
     * A Codat ID representing the integration.
     * 
     * @var ?string $integrationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('integrationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $integrationId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isBeta')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isBeta = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isOfflineConnector')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isOfflineConnector = null;
    
    /**
     * A unique 4-letter key to represent a platform in each integration. View [accounting](https://docs.codat.io/integrations/accounting/accounting-platform-keys), [banking](https://docs.codat.io/integrations/banking/banking-platform-keys), and [commerce](https://docs.codat.io/integrations/commerce/commerce-platform-keys) platform keys. 
     * 
     * @var string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $key;
    
	#[\JMS\Serializer\Annotation\SerializedName('logoUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $logoUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * A source-specific ID used to distinguish between different sources originating from the same data connection. In general, a data connection is a single data source. However, for TrueLayer, `sourceId` is associated with a specific bank and has a many-to-one relationship with the `integrationId`.
     * 
     * @var ?string $sourceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceId = null;
    
    /**
     * The type of platform of the connection.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SourceTypeEnum $sourceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SourceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SourceTypeEnum $sourceType = null;
    
	public function __construct()
	{
		$this->dataProvidedBy = null;
		$this->datatypeFeatures = null;
		$this->enabled = false;
		$this->integrationId = null;
		$this->isBeta = null;
		$this->isOfflineConnector = null;
		$this->key = "";
		$this->logoUrl = "";
		$this->name = "";
		$this->sourceId = null;
		$this->sourceType = null;
	}
}
