"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import businessappointmentsettings as shared_businessappointmentsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BusinessBookingProfile:
    
    allow_user_cancel: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_user_cancel'), 'exclude': lambda f: f is None }})
    r"""Indicates whether customers can cancel or reschedule their own bookings (`true`) or not (`false`)."""  
    booking_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('booking_enabled'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the seller is open for booking."""  
    booking_policy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('booking_policy'), 'exclude': lambda f: f is None }})
    r"""The policy for the seller to automatically accept booking requests (`ACCEPT_ALL`) or not (`REQUIRES_ACCEPTANCE`)."""  
    business_appointment_settings: Optional[shared_businessappointmentsettings.BusinessAppointmentSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_appointment_settings'), 'exclude': lambda f: f is None }})
    r"""The service appointment settings, including where and how the service is provided."""  
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""The RFC 3339 timestamp specifying the booking's creation time."""  
    customer_timezone_choice: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customer_timezone_choice'), 'exclude': lambda f: f is None }})
    r"""The choice of customer's time zone information of a booking.
    The Square online booking site and all notifications to customers uses either the seller locationâ€™s time zone
    or the time zone the customer chooses at booking.
    """  
    seller_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seller_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the seller, obtainable using the Merchants API."""  
    