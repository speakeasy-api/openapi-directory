// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UserRolePermissionAvailabilityEnum - Levels of availability for a user role permission.
type UserRolePermissionAvailabilityEnum string

const (
	UserRolePermissionAvailabilityEnumNotAvailableByDefault         UserRolePermissionAvailabilityEnum = "NOT_AVAILABLE_BY_DEFAULT"
	UserRolePermissionAvailabilityEnumAccountByDefault              UserRolePermissionAvailabilityEnum = "ACCOUNT_BY_DEFAULT"
	UserRolePermissionAvailabilityEnumSubaccountAndAccountByDefault UserRolePermissionAvailabilityEnum = "SUBACCOUNT_AND_ACCOUNT_BY_DEFAULT"
	UserRolePermissionAvailabilityEnumAccountAlways                 UserRolePermissionAvailabilityEnum = "ACCOUNT_ALWAYS"
	UserRolePermissionAvailabilityEnumSubaccountAndAccountAlways    UserRolePermissionAvailabilityEnum = "SUBACCOUNT_AND_ACCOUNT_ALWAYS"
	UserRolePermissionAvailabilityEnumUserProfileOnly               UserRolePermissionAvailabilityEnum = "USER_PROFILE_ONLY"
)

func (e UserRolePermissionAvailabilityEnum) ToPointer() *UserRolePermissionAvailabilityEnum {
	return &e
}

func (e *UserRolePermissionAvailabilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_AVAILABLE_BY_DEFAULT":
		fallthrough
	case "ACCOUNT_BY_DEFAULT":
		fallthrough
	case "SUBACCOUNT_AND_ACCOUNT_BY_DEFAULT":
		fallthrough
	case "ACCOUNT_ALWAYS":
		fallthrough
	case "SUBACCOUNT_AND_ACCOUNT_ALWAYS":
		fallthrough
	case "USER_PROFILE_ONLY":
		*e = UserRolePermissionAvailabilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserRolePermissionAvailabilityEnum: %v", v)
	}
}

// UserRolePermission - Contains properties of a user role permission.
type UserRolePermission struct {
	// Levels of availability for a user role permission.
	Availability *UserRolePermissionAvailabilityEnum `json:"availability,omitempty"`
	// ID of this user role permission.
	ID *string `json:"id,omitempty"`
	// Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolePermission".
	Kind *string `json:"kind,omitempty"`
	// Name of this user role permission.
	Name *string `json:"name,omitempty"`
	// ID of the permission group that this user role permission belongs to.
	PermissionGroupID *string `json:"permissionGroupId,omitempty"`
}
