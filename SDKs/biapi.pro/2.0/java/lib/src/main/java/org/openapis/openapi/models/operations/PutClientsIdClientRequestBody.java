/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PutClientsIdClientRequestBody {
    /**
     * custom config about the client
     */
    @SpeakeasyMetadata("multipartForm:name=config")
    public String config;
    public PutClientsIdClientRequestBody withConfig(String config) {
        this.config = config;
        return this;
    }
    
    /**
     * text to display as a default description
     */
    @SpeakeasyMetadata("multipartForm:name=description")
    public String description;
    public PutClientsIdClientRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * text to display as a description for banks
     */
    @SpeakeasyMetadata("multipartForm:name=description_banks")
    public String descriptionBanks;
    public PutClientsIdClientRequestBody withDescriptionBanks(String descriptionBanks) {
        this.descriptionBanks = descriptionBanks;
        return this;
    }
    
    /**
     * text to display as a description for providers
     */
    @SpeakeasyMetadata("multipartForm:name=description_providers")
    public String descriptionProviders;
    public PutClientsIdClientRequestBody withDescriptionProviders(String descriptionProviders) {
        this.descriptionProviders = descriptionProviders;
        return this;
    }
    
    /**
     * set a rsa key pair for the client, which make it possible to generate a jwt user token using this client. No effect if the client already has a set of keys(default: False)
     */
    @SpeakeasyMetadata("multipartForm:name=generate_keys")
    public Boolean generateKeys;
    public PutClientsIdClientRequestBody withGenerateKeys(Boolean generateKeys) {
        this.generateKeys = generateKeys;
        return this;
    }
    
    /**
     * name of client
     */
    @SpeakeasyMetadata("multipartForm:name=name")
    public String name;
    public PutClientsIdClientRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * hexadecimal code of the client primary color (e.g F45B9A)
     */
    @SpeakeasyMetadata("multipartForm:name=primary_color")
    public String primaryColor;
    public PutClientsIdClientRequestBody withPrimaryColor(String primaryColor) {
        this.primaryColor = primaryColor;
        return this;
    }
    
    /**
     * Wether the client should display the company manager page
     */
    @SpeakeasyMetadata("multipartForm:name=pro")
    public Boolean pro;
    public PutClientsIdClientRequestBody withPro(Boolean pro) {
        this.pro = pro;
        return this;
    }
    
    /**
     * list of allowed redirect uris
     */
    @SpeakeasyMetadata("multipartForm:name=redirect_uris")
    public String redirectUris;
    public PutClientsIdClientRequestBody withRedirectUris(String redirectUris) {
        this.redirectUris = redirectUris;
        return this;
    }
    
    /**
     * hexadecimal code of the client secondary color (e.g F45B9A)
     */
    @SpeakeasyMetadata("multipartForm:name=secondary_color")
    public String secondaryColor;
    public PutClientsIdClientRequestBody withSecondaryColor(String secondaryColor) {
        this.secondaryColor = secondaryColor;
        return this;
    }
    
    /**
     * reset the secret
     */
    @SpeakeasyMetadata("multipartForm:name=secret")
    public Boolean secret;
    public PutClientsIdClientRequestBody withSecret(Boolean secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * update the custom information about the client instead of replacing the existing one (default: True)
     */
    @SpeakeasyMetadata("multipartForm:name=update_config")
    public Boolean updateConfig;
    public PutClientsIdClientRequestBody withUpdateConfig(Boolean updateConfig) {
        this.updateConfig = updateConfig;
        return this;
    }
    
}
