"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import piitype_enum as shared_piitype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PIIDetection:
    r"""Specifies a transform that identifies, removes or masks PII data."""
    
    entity_types_to_detect: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EntityTypesToDetect') }})  
    inputs: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inputs') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    pii_type: shared_piitype_enum.PiiTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PiiType') }})  
    mask_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaskValue'), 'exclude': lambda f: f is None }})  
    output_column_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputColumnName'), 'exclude': lambda f: f is None }})  
    sample_fraction: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SampleFraction'), 'exclude': lambda f: f is None }})  
    threshold_fraction: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ThresholdFraction'), 'exclude': lambda f: f is None }})  
    