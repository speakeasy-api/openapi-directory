/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetImportJobResponse - An HTTP 200 response if the request succeeds, or an error message if the request fails.
 */
public class GetImportJobResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CompletedTimestamp")
    public OffsetDateTime completedTimestamp;

    public GetImportJobResponse withCompletedTimestamp(OffsetDateTime completedTimestamp) {
        this.completedTimestamp = completedTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedTimestamp")
    public OffsetDateTime createdTimestamp;

    public GetImportJobResponse withCreatedTimestamp(OffsetDateTime createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailedRecordsCount")
    public Long failedRecordsCount;

    public GetImportJobResponse withFailedRecordsCount(Long failedRecordsCount) {
        this.failedRecordsCount = failedRecordsCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureInfo")
    public FailureInfo failureInfo;

    public GetImportJobResponse withFailureInfo(FailureInfo failureInfo) {
        this.failureInfo = failureInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImportDataSource")
    public ImportDataSource importDataSource;

    public GetImportJobResponse withImportDataSource(ImportDataSource importDataSource) {
        this.importDataSource = importDataSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImportDestination")
    public ImportDestination importDestination;

    public GetImportJobResponse withImportDestination(ImportDestination importDestination) {
        this.importDestination = importDestination;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobId")
    public String jobId;

    public GetImportJobResponse withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobStatus")
    public JobStatusEnum jobStatus;

    public GetImportJobResponse withJobStatus(JobStatusEnum jobStatus) {
        this.jobStatus = jobStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProcessedRecordsCount")
    public Long processedRecordsCount;

    public GetImportJobResponse withProcessedRecordsCount(Long processedRecordsCount) {
        this.processedRecordsCount = processedRecordsCount;
        return this;
    }
    
    public GetImportJobResponse(){}
}
