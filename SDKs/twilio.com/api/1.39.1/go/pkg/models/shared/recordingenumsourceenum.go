// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RecordingEnumSourceEnum string

const (
	RecordingEnumSourceEnumDialVerb                    RecordingEnumSourceEnum = "DialVerb"
	RecordingEnumSourceEnumConference                  RecordingEnumSourceEnum = "Conference"
	RecordingEnumSourceEnumOutboundAPI                 RecordingEnumSourceEnum = "OutboundAPI"
	RecordingEnumSourceEnumTrunking                    RecordingEnumSourceEnum = "Trunking"
	RecordingEnumSourceEnumRecordVerb                  RecordingEnumSourceEnum = "RecordVerb"
	RecordingEnumSourceEnumStartCallRecordingAPI       RecordingEnumSourceEnum = "StartCallRecordingAPI"
	RecordingEnumSourceEnumStartConferenceRecordingAPI RecordingEnumSourceEnum = "StartConferenceRecordingAPI"
)

func (e *RecordingEnumSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DialVerb":
		fallthrough
	case "Conference":
		fallthrough
	case "OutboundAPI":
		fallthrough
	case "Trunking":
		fallthrough
	case "RecordVerb":
		fallthrough
	case "StartCallRecordingAPI":
		fallthrough
	case "StartConferenceRecordingAPI":
		*e = RecordingEnumSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RecordingEnumSourceEnum: %s", s)
	}
}
