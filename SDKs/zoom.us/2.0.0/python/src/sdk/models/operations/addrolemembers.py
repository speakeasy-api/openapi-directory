"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AddRoleMembersSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddRoleMembersApplicationJSONMembers:
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Email address of the user to whom you would like to assign the role. Provide either the userId in the ID field or the email address in the email field. If both fields are provided, only userId is used."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""User ID of the user to whom you would like to assign the role."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddRoleMembersApplicationJSON:
    r"""Role members"""
    
    members: Optional[list[AddRoleMembersApplicationJSONMembers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('members'), 'exclude': lambda f: f is None }})
    r"""Array of userId/user email of users to whom you would like to assign this role. Upto 30 users can be assigned a role at once."""  
    

@dataclasses.dataclass
class AddRoleMembersRequest:
    
    request_body: AddRoleMembersApplicationJSON = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Role members"""  
    role_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'roleId', 'style': 'simple', 'explode': False }})
    r"""The role ID"""  
    

@dataclasses.dataclass
class AddRoleMembers201ApplicationXML:
    r"""**HTTP Status Code:** `201`<br>Members Added"""
    
    add_at: Optional[datetime] = dataclasses.field(default=None)
    r"""Date and time at which the members are assigned to the role."""  
    ids: Optional[str] = dataclasses.field(default=None)
    r"""User ID"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddRoleMembers201ApplicationJSON:
    r"""**HTTP Status Code:** `201`<br>Members Added"""
    
    add_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('add_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time at which the members are assigned to the role."""  
    ids: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ids'), 'exclude': lambda f: f is None }})
    r"""User ID"""  
    

@dataclasses.dataclass
class AddRoleMembersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    add_role_members_201_application_json_object: Optional[AddRoleMembers201ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `201`<br>Members Added"""  
    body: Optional[bytes] = dataclasses.field(default=None)  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    