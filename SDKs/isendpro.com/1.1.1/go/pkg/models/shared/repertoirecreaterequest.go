// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// REPERTOIREcreaterequestRepertoireEditEnum - Action à réaliser doit valoir "create" ici.
type REPERTOIREcreaterequestRepertoireEditEnum string

const (
	REPERTOIREcreaterequestRepertoireEditEnumCreate REPERTOIREcreaterequestRepertoireEditEnum = "create"
)

func (e REPERTOIREcreaterequestRepertoireEditEnum) ToPointer() *REPERTOIREcreaterequestRepertoireEditEnum {
	return &e
}

func (e *REPERTOIREcreaterequestRepertoireEditEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "create":
		*e = REPERTOIREcreaterequestRepertoireEditEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for REPERTOIREcreaterequestRepertoireEditEnum: %v", v)
	}
}

// REPERTOIREcreaterequest - Creation repertoire
type REPERTOIREcreaterequest struct {
	// Clé API
	Keyid string `json:"keyid"`
	// Action à réaliser doit valoir "create" ici.
	RepertoireEdit REPERTOIREcreaterequestRepertoireEditEnum `json:"repertoireEdit"`
	// Nom du répertoire (libellé) à créer
	RepertoireNom string `json:"repertoireNom"`
}
