/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PeriodicPaymentInitiationXmlPart2StandingorderTypeJson - The body part 2 of a periodic payment initation request containes the execution related informations
 * of the periodic payment.
 * 
 */
public class PeriodicPaymentInitiationXmlPart2StandingorderTypeJson {
    /**
     * Day of execution as string.
     * 
     * This string consists of up two characters.
     * Leading zeroes are not allowed.
     * 
     * 31 is ultimo of the month.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dayOfExecution")
    public DayOfExecutionEnum dayOfExecution;

    public PeriodicPaymentInitiationXmlPart2StandingorderTypeJson withDayOfExecution(DayOfExecutionEnum dayOfExecution) {
        this.dayOfExecution = dayOfExecution;
        return this;
    }
    
    /**
     * The last applicable day of execution.
     * If not given, it is an infinite standing order.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("endDate")
    public LocalDate endDate;

    public PeriodicPaymentInitiationXmlPart2StandingorderTypeJson withEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * "following" or "preceding" supported as values.
     * This data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday.
     * The payment is then executed either the "preceding" or "following" working day.
     * ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting
     * this execution rule.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionRule")
    public ExecutionRuleEnum executionRule;

    public PeriodicPaymentInitiationXmlPart2StandingorderTypeJson withExecutionRule(ExecutionRuleEnum executionRule) {
        this.executionRule = executionRule;
        return this;
    }
    
    /**
     * The following codes from the "EventFrequency7Code" of ISO 20022 are supported:
     * - "Daily"
     * - "Weekly"
     * - "EveryTwoWeeks"
     * - "Monthly"
     * - "EveryTwoMonths"
     * - "Quarterly"
     * - "SemiAnnual"
     * - "Annual"
     * - "MonthlyVariable"
     * 
     */
    @JsonProperty("frequency")
    public FrequencyCodeEnum frequency;

    public PeriodicPaymentInitiationXmlPart2StandingorderTypeJson withFrequency(FrequencyCodeEnum frequency) {
        this.frequency = frequency;
        return this;
    }
    
    /**
     * The first applicable day of execution starting from this date is the first payment.
     * 
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("startDate")
    public LocalDate startDate;

    public PeriodicPaymentInitiationXmlPart2StandingorderTypeJson withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    public PeriodicPaymentInitiationXmlPart2StandingorderTypeJson(@JsonProperty("frequency") FrequencyCodeEnum frequency, @JsonProperty("startDate") LocalDate startDate) {
        this.frequency = frequency;
        this.startDate = startDate;
  }
}
