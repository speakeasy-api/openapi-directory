"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import numericoperator_enum as shared_numericoperator_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TotalImpactFilter:
    r"""Filters cost anomalies based on the total impact."""
    
    numeric_operator: shared_numericoperator_enum.NumericOperatorEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumericOperator') }})  
    start_value: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartValue') }})  
    end_value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndValue'), 'exclude': lambda f: f is None }})  
    