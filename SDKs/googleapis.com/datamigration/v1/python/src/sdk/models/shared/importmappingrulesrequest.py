"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rulesfile as shared_rulesfile
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ImportMappingRulesRequestRulesFormatEnum(str, Enum):
    r"""The format of the rules content file."""
    IMPORT_RULES_FILE_FORMAT_UNSPECIFIED = 'IMPORT_RULES_FILE_FORMAT_UNSPECIFIED'
    IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE = 'IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE'
    IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE = 'IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportMappingRulesRequest:
    r"""Request message for 'ImportMappingRules' request."""
    
    auto_commit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoCommit'), 'exclude': lambda f: f is None }})
    r"""Should the conversion workspace be committed automatically after the import operation."""  
    rules_files: Optional[list[shared_rulesfile.RulesFile]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rulesFiles'), 'exclude': lambda f: f is None }})
    r"""One or more rules files."""  
    rules_format: Optional[ImportMappingRulesRequestRulesFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rulesFormat'), 'exclude': lambda f: f is None }})
    r"""The format of the rules content file."""  
    