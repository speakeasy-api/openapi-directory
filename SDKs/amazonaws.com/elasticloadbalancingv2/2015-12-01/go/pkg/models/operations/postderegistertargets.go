// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeregisterTargetsActionEnum
type POSTDeregisterTargetsActionEnum string

const (
	POSTDeregisterTargetsActionEnumDeregisterTargets POSTDeregisterTargetsActionEnum = "DeregisterTargets"
)

func (e POSTDeregisterTargetsActionEnum) ToPointer() *POSTDeregisterTargetsActionEnum {
	return &e
}

func (e *POSTDeregisterTargetsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeregisterTargets":
		*e = POSTDeregisterTargetsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeregisterTargetsActionEnum: %v", v)
	}
}

// POSTDeregisterTargetsVersionEnum
type POSTDeregisterTargetsVersionEnum string

const (
	POSTDeregisterTargetsVersionEnumTwoThousandAndFifteen1201 POSTDeregisterTargetsVersionEnum = "2015-12-01"
)

func (e POSTDeregisterTargetsVersionEnum) ToPointer() *POSTDeregisterTargetsVersionEnum {
	return &e
}

func (e *POSTDeregisterTargetsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-12-01":
		*e = POSTDeregisterTargetsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeregisterTargetsVersionEnum: %v", v)
	}
}

type POSTDeregisterTargetsRequest struct {
	Action            POSTDeregisterTargetsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                           `request:"mediaType=text/xml"`
	Version           POSTDeregisterTargetsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeregisterTargetsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
