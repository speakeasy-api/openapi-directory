// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ContactsFetchAllSecurity struct {
	SakariAuth shared.SchemeSakariAuth `security:"scheme,type=oauth2"`
}

type ContactsFetchAllPathParams struct {
	// Account to apply operations to
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
}

type ContactsFetchAllQueryParams struct {
	// Filter by email or part of
	Email *string `queryParam:"style=form,explode=true,name=email"`
	// Filter by first name or part of
	FirstName *string `queryParam:"style=form,explode=true,name=firstName"`
	// Filter by last name or part of
	LastName *string `queryParam:"style=form,explode=true,name=lastName"`
	// Maximum number of results to return
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Filter by mobile or part of
	Mobile *string `queryParam:"style=form,explode=true,name=mobile"`
	// Results to skip when paginating through a result set
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Filter by tag(s)
	Tags *string `queryParam:"style=form,explode=true,name=tags"`
}

type ContactsFetchAllRequest struct {
	PathParams  ContactsFetchAllPathParams
	QueryParams ContactsFetchAllQueryParams
	Security    ContactsFetchAllSecurity
}

type ContactsFetchAllResponse struct {
	// successful operation
	ContactsResponse *shared.ContactsResponse
	ContentType      string
	// invalid request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
}
