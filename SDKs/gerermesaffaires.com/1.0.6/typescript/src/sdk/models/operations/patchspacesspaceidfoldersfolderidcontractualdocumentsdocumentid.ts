/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum PatchSpacesSpaceIdFoldersFolderIdContractualDocumentsDocumentIdRequestBodyTypeEnum {
  Contract = "contract",
  EngagementLetter = "engagement-letter",
  Amendment = "amendment",
  PurchaseOrder = "purchase-order",
  DeliveryOrder = "delivery-order",
  Quotation = "quotation",
  Other = "other",
}

/**
 * A contractual document to modify
 */
export class PatchSpacesSpaceIdFoldersFolderIdContractualDocumentsDocumentIdRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Designation" })
  designation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Reference" })
  reference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  startDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: PatchSpacesSpaceIdFoldersFolderIdContractualDocumentsDocumentIdRequestBodyTypeEnum;
}

export class PatchSpacesSpaceIdFoldersFolderIdContractualDocumentsDocumentIdRequest extends SpeakeasyBase {
  /**
   * A contractual document to modify
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PatchSpacesSpaceIdFoldersFolderIdContractualDocumentsDocumentIdRequestBody;

  /**
   * Id of the document
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=documentId",
  })
  documentId: string;

  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=folderId",
  })
  folderId: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class PatchSpacesSpaceIdFoldersFolderIdContractualDocumentsDocumentIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
