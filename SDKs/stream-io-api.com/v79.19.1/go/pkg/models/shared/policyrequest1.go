// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PolicyRequest1ActionEnum string

const (
	PolicyRequest1ActionEnumDeny  PolicyRequest1ActionEnum = "Deny"
	PolicyRequest1ActionEnumAllow PolicyRequest1ActionEnum = "Allow"
)

func (e *PolicyRequest1ActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Deny":
		fallthrough
	case "Allow":
		*e = PolicyRequest1ActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PolicyRequest1ActionEnum: %s", s)
	}
}

type PolicyRequest1 struct {
	Action PolicyRequest1ActionEnum `json:"action"`
	// User-friendly policy name
	Name string `json:"name"`
	// Whether policy applies to resource owner or not
	Owner bool `json:"owner"`
	// Policy priority
	Priority float64 `json:"priority"`
	// List of resources to apply policy to
	Resources []string `json:"resources"`
	// List of roles to apply policy to
	Roles []string `json:"roles"`
}
