// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AggregatedSourceStatusTypeEnum string

const (
	AggregatedSourceStatusTypeEnumFailed    AggregatedSourceStatusTypeEnum = "FAILED"
	AggregatedSourceStatusTypeEnumSucceeded AggregatedSourceStatusTypeEnum = "SUCCEEDED"
	AggregatedSourceStatusTypeEnumOutdated  AggregatedSourceStatusTypeEnum = "OUTDATED"
)

func (e AggregatedSourceStatusTypeEnum) ToPointer() *AggregatedSourceStatusTypeEnum {
	return &e
}

func (e *AggregatedSourceStatusTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "OUTDATED":
		*e = AggregatedSourceStatusTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregatedSourceStatusTypeEnum: %v", v)
	}
}
