"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import paystatementdetails as shared_paystatementdetails
from typing import Optional


@dataclasses.dataclass
class GetsEmployeePayStatementDetailDataBasedOnTheSpecifiedYearAndCheckDateSecurity:
    
    paylocity_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetsEmployeePayStatementDetailDataBasedOnTheSpecifiedYearAndCheckDateRequest:
    
    check_date: str = dataclasses.field(metadata={'path_param': { 'field_name': 'checkDate', 'style': 'simple', 'explode': False }})
    r"""The check date for which to retrieve pay statement data"""  
    company_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'companyId', 'style': 'simple', 'explode': False }})
    r"""Company Id"""  
    employee_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'employeeId', 'style': 'simple', 'explode': False }})
    r"""Employee Id"""  
    year: str = dataclasses.field(metadata={'path_param': { 'field_name': 'year', 'style': 'simple', 'explode': False }})
    r"""The year for which to retrieve pay statement data"""  
    codegroup: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'codegroup', 'style': 'form', 'explode': True }})
    r"""Retrieve pay statement details related to specific deduction, earning or tax types. Common values include 401k, Memo, Reg, OT, Cash Tips, FED and SITW."""  
    includetotalcount: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includetotalcount', 'style': 'form', 'explode': True }})
    r"""Whether to include the total record count in the header's X-Pcty-Total-Count property. Default value is true."""  
    pagenumber: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pagenumber', 'style': 'form', 'explode': True }})
    r"""Page number to retrieve; page numbers are 0-based (so to get the first page of results, pass pagenumber=0). Default value is 0."""  
    pagesize: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pagesize', 'style': 'form', 'explode': True }})
    r"""Number of records per page. Default value is 25."""  
    

@dataclasses.dataclass
class GetsEmployeePayStatementDetailDataBasedOnTheSpecifiedYearAndCheckDateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None)
    r"""The employee, specified year, or check date does not exist"""  
    pay_statement_details: Optional[list[shared_paystatementdetails.PayStatementDetails]] = dataclasses.field(default=None)
    r"""Successfully Retrieved"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    