/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceAttributes } from "./resourceattributes";
import { Expose, Type } from "class-transformer";

export class ResourceRelationshipsDirectFileData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class ResourceRelationshipsDirectFile extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceRelationshipsDirectFileData)
  data?: ResourceRelationshipsDirectFileData;
}

export class ResourceRelationshipsNotificationsData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class ResourceRelationshipsNotifications extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceRelationshipsNotificationsData)
  data?: ResourceRelationshipsNotificationsData;
}

export class ResourceRelationshipsParentResourceData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class ResourceRelationshipsParentResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceRelationshipsParentResourceData)
  data?: ResourceRelationshipsParentResourceData;
}

export class ResourceRelationshipsShareData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class ResourceRelationshipsShare extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceRelationshipsShareData)
  data?: ResourceRelationshipsShareData;
}

export class ResourceRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "directFile" })
  @Type(() => ResourceRelationshipsDirectFile)
  directFile?: ResourceRelationshipsDirectFile;

  @SpeakeasyMetadata({ elemType: ResourceRelationshipsNotifications })
  @Expose({ name: "notifications" })
  @Type(() => ResourceRelationshipsNotifications)
  notifications?: ResourceRelationshipsNotifications[];

  @SpeakeasyMetadata()
  @Expose({ name: "parentResource" })
  @Type(() => ResourceRelationshipsParentResource)
  parentResource?: ResourceRelationshipsParentResource;

  @SpeakeasyMetadata()
  @Expose({ name: "share" })
  @Type(() => ResourceRelationshipsShare)
  share?: ResourceRelationshipsShare;
}

/**
 * Type of item. "resource"
 */
export enum ResourceTypeEnum {
  Resource = "resource",
}

/**
 * All properties of the resource.
 */
export class Resource extends SpeakeasyBase {
  /**
   * Attributes of resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => ResourceAttributes)
  attributes?: ResourceAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => ResourceRelationships)
  relationships?: ResourceRelationships;

  /**
   * Type of item. "resource"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ResourceTypeEnum;
}
