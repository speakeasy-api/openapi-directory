<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateLinkRequestBody
{
    /**
     * <p>Specify a friendly human-readable name to use to identify this source account when you are viewing data from it in the monitoring account.</p> <p>You can use a custom label or use the following variables:</p> <ul> <li> <p> <code>$AccountName</code> is the name of the account</p> </li> <li> <p> <code>$AccountEmail</code> is the globally unique email address of the account</p> </li> <li> <p> <code>$AccountEmailNoDomain</code> is the email address of the account without the domain name</p> </li> </ul>
     * 
     * @var string $labelTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('LabelTemplate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $labelTemplate;
    
    /**
     * An array of strings that define which types of data that the source account shares with the monitoring account.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\ResourceTypeEnum> $resourceTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('ResourceTypes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\ResourceTypeEnum>>')]
    public array $resourceTypes;
    
    /**
     * <p>The ARN of the sink to use to create this link. You can use <a href="https://docs.aws.amazon.com/OAM/latest/APIReference/API_ListSinks.html">ListSinks</a> to find the ARNs of sinks.</p> <p>For more information about sinks, see <a href="https://docs.aws.amazon.com/OAM/latest/APIReference/API_CreateSink.html">CreateSink</a>.</p>
     * 
     * @var string $sinkIdentifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('SinkIdentifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sinkIdentifier;
    
    /**
     * <p>Assigns one or more tags (key-value pairs) to the link. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values.</p> <p>For more information about using tags to control access, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html">Controlling access to Amazon Web Services resources using tags</a>.</p>
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->labelTemplate = "";
		$this->resourceTypes = [];
		$this->sinkIdentifier = "";
		$this->tags = null;
	}
}
