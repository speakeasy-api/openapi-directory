/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class LearningCurve {
    /**
     * Epoch to which the metrics correspond.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("epoch")
    public java.util.Map<String, Object> epoch;

    public LearningCurve withEpoch(java.util.Map<String, Object> epoch) {
        this.epoch = epoch;
        return this;
    }
    
    /**
     * Prediction results for the set of data used to test the model during training.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("epochResults")
    public java.util.Map<String, Object> epochResults;

    public LearningCurve withEpochResults(java.util.Map<String, Object> epochResults) {
        this.epochResults = epochResults;
        return this;
    }
    
    /**
     * Model metrics values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricsData")
    public java.util.Map<String, Object> metricsData;

    public LearningCurve withMetricsData(java.util.Map<String, Object> metricsData) {
        this.metricsData = metricsData;
        return this;
    }
    
    /**
     * Object returned; in this case, learningcurve.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object")
    public String object;

    public LearningCurve withObject(String object) {
        this.object = object;
        return this;
    }
    
    public LearningCurve(){}
}
