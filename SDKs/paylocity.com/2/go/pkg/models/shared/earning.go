// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Earning - The employee earning model
type Earning struct {
	// Third-party agency associated with earning. Must match Company setup.<br  />Max length: 10
	Agency *string `json:"agency,omitempty"`
	// Value that matches CalculationCode to add to gross wages. For percentage (%), enter whole number (10 = 10%).  <br  />Decimal(12,2)
	Amount *float64 `json:"amount,omitempty"`
	// Year to Date dollar amount not to be exceeded for an earning in the calendar year. Used only with company driven maximums. <br  />Decimal(12,2)
	AnnualMaximum *float64 `json:"annualMaximum,omitempty"`
	// Defines how earnings are calculated. Common values are *% (percentage of gross), flat (flat dollar amount)*. Defaulted to the Company setup calcCode for earning. <br  />Max length: 20
	CalculationCode *string `json:"calculationCode,omitempty"`
	// Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10
	CostCenter1 *string `json:"costCenter1,omitempty"`
	// Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10
	CostCenter2 *string `json:"costCenter2,omitempty"`
	// Cost Center associated with earning. Must match Company setup.<br  /> Max length: 10
	CostCenter3 *string `json:"costCenter3,omitempty"`
	// Earning code. Must match Company setup. <br  />Max length: 10
	EarningCode string `json:"earningCode"`
	// Date earning is active. Defaulted to run date or check date based on Company setup. Common formats are MM-DD-CCYY, CCYY-MM-DD.
	EffectiveDate *string `json:"effectiveDate,omitempty"`
	// Stop date of an earning. Common formats are MM-DD-CCYY, CCYY-MM-DD.
	EndDate *string `json:"endDate,omitempty"`
	// Needed if earning is applied differently from the payroll frequency (one time earning for example).<br  /> Max length: 5
	Frequency *string `json:"frequency,omitempty"`
	// Dollar amount. The employee earning will stop when the goal amount is reached.<br  /> Decimal(12,2)
	Goal *float64 `json:"goal,omitempty"`
	// The value is used in conjunction with the Rate field. When entering Group Term Life Insurance (GTL), it should contain the full amount of the group term life insurance policy. <br  /> Decimal(12,2)
	HoursOrUnits *float64 `json:"hoursOrUnits,omitempty"`
	// Used for ACA. If not entered, defaulted to Company earning setup.
	IsSelfInsured *bool `json:"isSelfInsured,omitempty"`
	// Job code associated with earnings. Must match Company setup.<br  /> Max length: 20
	JobCode *string `json:"jobCode,omitempty"`
	// Information to print on the check stub if agency is set up for this earning. <br  />Max length: 50
	MiscellaneousInfo *string `json:"miscellaneousInfo,omitempty"`
	// Amount already paid to employee toward goal. <br  /> Decimal(12,2)
	PaidTowardsGoal *float64 `json:"paidTowardsGoal,omitempty"`
	// Maximum amount of the earning on a single paycheck. <br  /> Decimal(12,2)
	PayPeriodMaximum *float64 `json:"payPeriodMaximum,omitempty"`
	// Minimum amount of the earning on a single paycheck. <br  /> Decimal(12,2)
	PayPeriodMinimum *float64 `json:"payPeriodMinimum,omitempty"`
	// Rate is used in conjunction with the hoursOrUnits field. <br  /> Decimal(12,2)
	Rate *float64 `json:"rate,omitempty"`
	// Rate Code applies to additional pay rates entered for an employee. Must match Company setup. <br  /> Max length: 10
	RateCode *string `json:"rateCode,omitempty"`
	// Start date of an earning based on payroll calendar. Common formats are MM-DD-CCYY, CCYY-MM-DD.
	StartDate string `json:"startDate"`
}
