/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceShareFeatureSetEnum } from "./resourcesharefeaturesetenum";
import { ResourceShareStatusEnum } from "./resourcesharestatusenum";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a resource share in RAM.
 */
export class ResourceShare extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowExternalPrincipals" })
  allowExternalPrincipals?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "featureSet" })
  featureSet?: ResourceShareFeatureSetEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owningAccountId" })
  owningAccountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceShareArn" })
  resourceShareArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ResourceShareStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
