// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowV2MessageParticipantRoleEnum - Output only. The role of the participant.
type GoogleCloudDialogflowV2MessageParticipantRoleEnum string

const (
	GoogleCloudDialogflowV2MessageParticipantRoleEnumRoleUnspecified GoogleCloudDialogflowV2MessageParticipantRoleEnum = "ROLE_UNSPECIFIED"
	GoogleCloudDialogflowV2MessageParticipantRoleEnumHumanAgent      GoogleCloudDialogflowV2MessageParticipantRoleEnum = "HUMAN_AGENT"
	GoogleCloudDialogflowV2MessageParticipantRoleEnumAutomatedAgent  GoogleCloudDialogflowV2MessageParticipantRoleEnum = "AUTOMATED_AGENT"
	GoogleCloudDialogflowV2MessageParticipantRoleEnumEndUser         GoogleCloudDialogflowV2MessageParticipantRoleEnum = "END_USER"
)

func (e *GoogleCloudDialogflowV2MessageParticipantRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ROLE_UNSPECIFIED":
		fallthrough
	case "HUMAN_AGENT":
		fallthrough
	case "AUTOMATED_AGENT":
		fallthrough
	case "END_USER":
		*e = GoogleCloudDialogflowV2MessageParticipantRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2MessageParticipantRoleEnum: %s", s)
	}
}

// GoogleCloudDialogflowV2Message - Represents a message posted into a conversation.
type GoogleCloudDialogflowV2Message struct {
	// Required. The message content.
	Content *string `json:"content,omitempty"`
	// Output only. The time when the message was created in Contact Center AI.
	CreateTime *string `json:"createTime,omitempty"`
	// Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
	LanguageCode *string `json:"languageCode,omitempty"`
	// Represents the result of annotation for the message.
	MessageAnnotation *GoogleCloudDialogflowV2MessageAnnotation `json:"messageAnnotation,omitempty"`
	// Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.
	Name *string `json:"name,omitempty"`
	// Output only. The participant that sends this message.
	Participant *string `json:"participant,omitempty"`
	// Output only. The role of the participant.
	ParticipantRole *GoogleCloudDialogflowV2MessageParticipantRoleEnum `json:"participantRole,omitempty"`
	// Optional. The time when the message was sent.
	SendTime *string `json:"sendTime,omitempty"`
	// The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config
	SentimentAnalysis *GoogleCloudDialogflowV2SentimentAnalysisResult `json:"sentimentAnalysis,omitempty"`
}
