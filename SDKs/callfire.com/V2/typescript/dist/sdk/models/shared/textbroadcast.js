"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextBroadcast = exports.TextBroadcastStatusEnum = exports.TextBroadcastInput = exports.TextBroadcastBigMessageStrategyEnum = void 0;
var utils_1 = require("../../../internal/utils");
var localtimerestriction_1 = require("./localtimerestriction");
var media_1 = require("./media");
var schedule_1 = require("./schedule");
var textrecipient_1 = require("./textrecipient");
var class_transformer_1 = require("class-transformer");
/**
 * If message length exceeds 160 characters, multiple messages will be sent, SEND_MULTIPLE strategy is chosen by default. Available values: SEND_MULTIPLE - send text as multiple messages, DO_NOT_SEND - do not send text if it exceeds 160 characters, TRIM - trims text message to 160 characters
 */
var TextBroadcastBigMessageStrategyEnum;
(function (TextBroadcastBigMessageStrategyEnum) {
    TextBroadcastBigMessageStrategyEnum["SendMultiple"] = "SEND_MULTIPLE";
    TextBroadcastBigMessageStrategyEnum["DoNotSend"] = "DO_NOT_SEND";
    TextBroadcastBigMessageStrategyEnum["Trim"] = "TRIM";
    TextBroadcastBigMessageStrategyEnum["Mms"] = "MMS";
})(TextBroadcastBigMessageStrategyEnum = exports.TextBroadcastBigMessageStrategyEnum || (exports.TextBroadcastBigMessageStrategyEnum = {}));
/**
 * A text campaign allows you to send a text message to a number of recipients. It supports scheduling, retry logic and pattern-based messages
 */
var TextBroadcastInput = /** @class */ (function (_super) {
    __extends(TextBroadcastInput, _super);
    function TextBroadcastInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bigMessageStrategy" }),
        __metadata("design:type", String)
    ], TextBroadcastInput.prototype, "bigMessageStrategy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fromNumber" }),
        __metadata("design:type", String)
    ], TextBroadcastInput.prototype, "fromNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], TextBroadcastInput.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Array)
    ], TextBroadcastInput.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "localTimeRestriction" }),
        (0, class_transformer_1.Type)(function () { return localtimerestriction_1.LocalTimeRestriction; }),
        __metadata("design:type", localtimerestriction_1.LocalTimeRestriction)
    ], TextBroadcastInput.prototype, "localTimeRestriction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxActive" }),
        __metadata("design:type", Number)
    ], TextBroadcastInput.prototype, "maxActive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: media_1.Media }),
        (0, class_transformer_1.Expose)({ name: "media" }),
        (0, class_transformer_1.Type)(function () { return media_1.Media; }),
        __metadata("design:type", Array)
    ], TextBroadcastInput.prototype, "media", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], TextBroadcastInput.prototype, "message", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], TextBroadcastInput.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: textrecipient_1.TextRecipient }),
        (0, class_transformer_1.Expose)({ name: "recipients" }),
        (0, class_transformer_1.Type)(function () { return textrecipient_1.TextRecipient; }),
        __metadata("design:type", Array)
    ], TextBroadcastInput.prototype, "recipients", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resumeNextDay" }),
        __metadata("design:type", Boolean)
    ], TextBroadcastInput.prototype, "resumeNextDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: schedule_1.Schedule }),
        (0, class_transformer_1.Expose)({ name: "schedules" }),
        (0, class_transformer_1.Type)(function () { return schedule_1.Schedule; }),
        __metadata("design:type", Array)
    ], TextBroadcastInput.prototype, "schedules", void 0);
    return TextBroadcastInput;
}(utils_1.SpeakeasyBase));
exports.TextBroadcastInput = TextBroadcastInput;
/**
 * A status of a broadcast. SETUP - campaign isn't configured yet; START_PENDING - waiting for contact batch population; RUNNING - campaign is running; STOPPED - campaign is stopped; FINISHED - campaign is finished; ARCHIVED - campaign was archived
 */
var TextBroadcastStatusEnum;
(function (TextBroadcastStatusEnum) {
    TextBroadcastStatusEnum["Test"] = "TEST";
    TextBroadcastStatusEnum["Setup"] = "SETUP";
    TextBroadcastStatusEnum["StartPending"] = "START_PENDING";
    TextBroadcastStatusEnum["Running"] = "RUNNING";
    TextBroadcastStatusEnum["Scheduled"] = "SCHEDULED";
    TextBroadcastStatusEnum["Stopped"] = "STOPPED";
    TextBroadcastStatusEnum["Suspended"] = "SUSPENDED";
    TextBroadcastStatusEnum["Finished"] = "FINISHED";
    TextBroadcastStatusEnum["Archived"] = "ARCHIVED";
    TextBroadcastStatusEnum["ValidatingStart"] = "VALIDATING_START";
    TextBroadcastStatusEnum["ValidatingEmail"] = "VALIDATING_EMAIL";
    TextBroadcastStatusEnum["BlockedSuspicious"] = "BLOCKED_SUSPICIOUS";
    TextBroadcastStatusEnum["Declined"] = "DECLINED";
    TextBroadcastStatusEnum["Approved"] = "APPROVED";
})(TextBroadcastStatusEnum = exports.TextBroadcastStatusEnum || (exports.TextBroadcastStatusEnum = {}));
/**
 * A text campaign allows you to send a text message to a number of recipients. It supports scheduling, retry logic and pattern-based messages
 */
var TextBroadcast = /** @class */ (function (_super) {
    __extends(TextBroadcast, _super);
    function TextBroadcast() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bigMessageStrategy" }),
        __metadata("design:type", String)
    ], TextBroadcast.prototype, "bigMessageStrategy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fromNumber" }),
        __metadata("design:type", String)
    ], TextBroadcast.prototype, "fromNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], TextBroadcast.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Array)
    ], TextBroadcast.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastModified" }),
        __metadata("design:type", Number)
    ], TextBroadcast.prototype, "lastModified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "localTimeRestriction" }),
        (0, class_transformer_1.Type)(function () { return localtimerestriction_1.LocalTimeRestriction; }),
        __metadata("design:type", localtimerestriction_1.LocalTimeRestriction)
    ], TextBroadcast.prototype, "localTimeRestriction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxActive" }),
        __metadata("design:type", Number)
    ], TextBroadcast.prototype, "maxActive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: media_1.Media }),
        (0, class_transformer_1.Expose)({ name: "media" }),
        (0, class_transformer_1.Type)(function () { return media_1.Media; }),
        __metadata("design:type", Array)
    ], TextBroadcast.prototype, "media", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], TextBroadcast.prototype, "message", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], TextBroadcast.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: textrecipient_1.TextRecipient }),
        (0, class_transformer_1.Expose)({ name: "recipients" }),
        (0, class_transformer_1.Type)(function () { return textrecipient_1.TextRecipient; }),
        __metadata("design:type", Array)
    ], TextBroadcast.prototype, "recipients", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resumeNextDay" }),
        __metadata("design:type", Boolean)
    ], TextBroadcast.prototype, "resumeNextDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: schedule_1.Schedule }),
        (0, class_transformer_1.Expose)({ name: "schedules" }),
        (0, class_transformer_1.Type)(function () { return schedule_1.Schedule; }),
        __metadata("design:type", Array)
    ], TextBroadcast.prototype, "schedules", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], TextBroadcast.prototype, "status", void 0);
    return TextBroadcast;
}(utils_1.SpeakeasyBase));
exports.TextBroadcast = TextBroadcast;
