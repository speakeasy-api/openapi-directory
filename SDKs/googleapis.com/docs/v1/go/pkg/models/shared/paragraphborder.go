// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ParagraphBorderDashStyleEnum - The dash style of the border.
type ParagraphBorderDashStyleEnum string

const (
	ParagraphBorderDashStyleEnumDashStyleUnspecified ParagraphBorderDashStyleEnum = "DASH_STYLE_UNSPECIFIED"
	ParagraphBorderDashStyleEnumSolid                ParagraphBorderDashStyleEnum = "SOLID"
	ParagraphBorderDashStyleEnumDot                  ParagraphBorderDashStyleEnum = "DOT"
	ParagraphBorderDashStyleEnumDash                 ParagraphBorderDashStyleEnum = "DASH"
)

func (e *ParagraphBorderDashStyleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DASH_STYLE_UNSPECIFIED":
		fallthrough
	case "SOLID":
		fallthrough
	case "DOT":
		fallthrough
	case "DASH":
		*e = ParagraphBorderDashStyleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ParagraphBorderDashStyleEnum: %s", s)
	}
}

// ParagraphBorder - A border around a paragraph.
type ParagraphBorder struct {
	// A color that can either be fully opaque or fully transparent.
	Color *OptionalColor `json:"color,omitempty"`
	// The dash style of the border.
	DashStyle *ParagraphBorderDashStyleEnum `json:"dashStyle,omitempty"`
	// A magnitude in a single direction in the specified units.
	Padding *Dimension `json:"padding,omitempty"`
	// A magnitude in a single direction in the specified units.
	Width *Dimension `json:"width,omitempty"`
}
