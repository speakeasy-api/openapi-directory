<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class RenderSyncRequestBody1
{
    /**
     * Whether to block ads on the rendered page
     * 
     * @var ?bool $blockAds
     */
	#[\JMS\Serializer\Annotation\SerializedName('block_ads')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $blockAds = null;
    
    /**
     * Whether to automatically click accept buttons on the rendered page
     * 
     * @var ?bool $clickAccept
     */
	#[\JMS\Serializer\Annotation\SerializedName('click_accept')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $clickAccept = null;
    
    /**
     * The amount of milliseconds to delay before taking a screenshot
     * 
     * @var ?string $delay
     */
	#[\JMS\Serializer\Annotation\SerializedName('delay')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $delay = null;
    
    /**
     * The format of the rendered output
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\RenderSyncRequestBody1FormatEnum $format
     */
	#[\JMS\Serializer\Annotation\SerializedName('format')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\RenderSyncRequestBody1FormatEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RenderSyncRequestBody1FormatEnum $format = null;
    
    /**
     * Whether to capture the full page
     * 
     * @var ?bool $fullPage
     */
	#[\JMS\Serializer\Annotation\SerializedName('full_page')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $fullPage = null;
    
    /**
     * Whether to enable GPU rendering
     * 
     * @var ?bool $gpu
     */
	#[\JMS\Serializer\Annotation\SerializedName('gpu')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $gpu = null;
    
    /**
     * The viewport height of the rendered output
     * 
     * @var ?int $height
     */
	#[\JMS\Serializer\Annotation\SerializedName('height')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $height = null;
    
    /**
     * Whether to hide cookie banners on the rendered page
     * 
     * @var ?bool $hideCookieBanners
     */
	#[\JMS\Serializer\Annotation\SerializedName('hide_cookie_banners')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hideCookieBanners = null;
    
    /**
     * The raw HTML to render as an image or video
     * 
     * @var ?string $html
     */
	#[\JMS\Serializer\Annotation\SerializedName('html')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $html = null;
    
    /**
     * Whether to return metadata about the URL
     * 
     * @var ?bool $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $metadata = null;
    
    /**
     * Whether to render the image in retina quality
     * 
     * @var ?bool $retina
     */
	#[\JMS\Serializer\Annotation\SerializedName('retina')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $retina = null;
    
    /**
     * The CSS selector of an element you would like to capture
     * 
     * @var ?string $selector
     */
	#[\JMS\Serializer\Annotation\SerializedName('selector')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selector = null;
    
    /**
     * The height of the thumbnail image
     * 
     * @var ?int $thumbHeight
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumb_height')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $thumbHeight = null;
    
    /**
     * The width of the thumbnail image
     * 
     * @var ?int $thumbWidth
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumb_width')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $thumbWidth = null;
    
    /**
     * The URL to render as an image or video
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * CSS selector of an element to wait to be present in the web page before rendering
     * 
     * @var ?string $waitFor
     */
	#[\JMS\Serializer\Annotation\SerializedName('wait_for')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $waitFor = null;
    
    /**
     * CSS selector of an element, such as a loading spinner, to wait to leave the web page before rendering
     * 
     * @var ?string $waitToLeave
     */
	#[\JMS\Serializer\Annotation\SerializedName('wait_to_leave')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $waitToLeave = null;
    
    /**
     * When
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\RenderSyncRequestBody1WaitUntilEnum $waitUntil
     */
	#[\JMS\Serializer\Annotation\SerializedName('wait_until')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\RenderSyncRequestBody1WaitUntilEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RenderSyncRequestBody1WaitUntilEnum $waitUntil = null;
    
    /**
     * The viewport width of the rendered output
     * 
     * @var ?int $width
     */
	#[\JMS\Serializer\Annotation\SerializedName('width')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $width = null;
    
	public function __construct()
	{
		$this->blockAds = null;
		$this->clickAccept = null;
		$this->delay = null;
		$this->format = null;
		$this->fullPage = null;
		$this->gpu = null;
		$this->height = null;
		$this->hideCookieBanners = null;
		$this->html = null;
		$this->metadata = null;
		$this->retina = null;
		$this->selector = null;
		$this->thumbHeight = null;
		$this->thumbWidth = null;
		$this->url = "";
		$this->waitFor = null;
		$this->waitToLeave = null;
		$this->waitUntil = null;
		$this->width = null;
	}
}
