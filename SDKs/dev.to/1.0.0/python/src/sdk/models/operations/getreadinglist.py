"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import articleindex as shared_articleindex
from typing import Optional


@dataclasses.dataclass
class GetReadinglistRequest:
    
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Pagination page"""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Page size (the number of items to return per page). The default maximum value can be overridden by \\"API_PER_PAGE_MAX\\" environment variable."""  
    

@dataclasses.dataclass
class GetReadinglistResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    article_indices: Optional[list[shared_articleindex.ArticleIndex]] = dataclasses.field(default=None)
    r"""A list of articles in the users readinglist"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    