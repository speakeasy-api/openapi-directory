/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RunningService - Guest OS running service details.
 */
public class RunningService {
    /**
     * Service command line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cmdline")
    public String cmdline;

    public RunningService withCmdline(String cmdline) {
        this.cmdline = cmdline;
        return this;
    }
    
    /**
     * Service binary path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exePath")
    public String exePath;

    public RunningService withExePath(String exePath) {
        this.exePath = exePath;
        return this;
    }
    
    /**
     * Service name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public RunningService withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Service pid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pid")
    public String pid;

    public RunningService withPid(String pid) {
        this.pid = pid;
        return this;
    }
    
    /**
     * Service start mode (raw, OS-agnostic).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startMode")
    public String startMode;

    public RunningService withStartMode(String startMode) {
        this.startMode = startMode;
        return this;
    }
    
    /**
     * Service state (raw, OS-agnostic).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public RunningService withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Service status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public RunningService withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public RunningService(){}
}
