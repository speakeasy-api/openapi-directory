// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteVpcIngressConnectionXAmzTargetEnum
type DeleteVpcIngressConnectionXAmzTargetEnum string

const (
	DeleteVpcIngressConnectionXAmzTargetEnumAppRunnerDeleteVpcIngressConnection DeleteVpcIngressConnectionXAmzTargetEnum = "AppRunner.DeleteVpcIngressConnection"
)

func (e DeleteVpcIngressConnectionXAmzTargetEnum) ToPointer() *DeleteVpcIngressConnectionXAmzTargetEnum {
	return &e
}

func (e *DeleteVpcIngressConnectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AppRunner.DeleteVpcIngressConnection":
		*e = DeleteVpcIngressConnectionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteVpcIngressConnectionXAmzTargetEnum: %v", v)
	}
}

type DeleteVpcIngressConnectionRequest struct {
	DeleteVpcIngressConnectionRequest shared.DeleteVpcIngressConnectionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        DeleteVpcIngressConnectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteVpcIngressConnectionResponse struct {
	ContentType string
	// Success
	DeleteVpcIngressConnectionResponse *shared.DeleteVpcIngressConnectionResponse
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// InvalidStateException
	InvalidStateException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
