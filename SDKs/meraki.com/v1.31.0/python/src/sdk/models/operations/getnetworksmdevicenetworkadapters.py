"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetNetworkSmDeviceNetworkAdaptersRequest:
    
    device_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'deviceId', 'style': 'simple', 'explode': False }})  
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetNetworkSmDeviceNetworkAdapters200ApplicationJSON:
    
    dhcp_server: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dhcpServer'), 'exclude': lambda f: f is None }})
    r"""The IP address of the DCHP Server."""  
    dns_server: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnsServer'), 'exclude': lambda f: f is None }})
    r"""The IP address of the DNS Server."""  
    gateway: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gateway'), 'exclude': lambda f: f is None }})
    r"""The IP address of the Gateway."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The Meraki Id of the network adapter record."""  
    ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip'), 'exclude': lambda f: f is None }})
    r"""The IP address of the network adapter."""  
    mac: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mac'), 'exclude': lambda f: f is None }})
    r"""The MAC associated with the network adapter."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the newtwork adapter."""  
    subnet: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subnet'), 'exclude': lambda f: f is None }})
    r"""The subnet for the network adapter."""  
    

@dataclasses.dataclass
class GetNetworkSmDeviceNetworkAdaptersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_network_sm_device_network_adapters_200_application_json_objects: Optional[list[GetNetworkSmDeviceNetworkAdapters200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    