// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubscriptionStatusEnum - Whether the Subscription is active or the specific non-active state
type SubscriptionStatusEnum string

const (
	SubscriptionStatusEnumActive   SubscriptionStatusEnum = "ACTIVE"
	SubscriptionStatusEnumPending  SubscriptionStatusEnum = "PENDING"
	SubscriptionStatusEnumCanceled SubscriptionStatusEnum = "CANCELED"
)

func (e *SubscriptionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE":
		fallthrough
	case "PENDING":
		fallthrough
	case "CANCELED":
		*e = SubscriptionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscriptionStatusEnum: %s", s)
	}
}

// Subscription - Request was successful
type Subscription struct {
	// An array of additional products that have been purchased to augment this Subscription
	Addons  []SubscriptionAddon `json:"addons,omitempty"`
	Billing SubscriptionBilling `json:"billing"`
	// Whether or not the Subscription is allowed to be canceled
	Cancelable *bool `json:"cancelable,omitempty"`
	// When the Subscription was created
	CreatedAt string `json:"createdAt"`
	// When the Subscription will expire
	ExpiresAt *string `json:"expiresAt,omitempty"`
	// A human readable description of this Subscription
	Label *string `json:"label,omitempty"`
	// The url to use or manage this Subscription's active product
	LaunchURL *string `json:"launchUrl,omitempty"`
	// Unique identifier of the payment profile that will be used to automatically renew this Subscription
	PaymentProfileID *int64 `json:"paymentProfileId,omitempty"`
	// Whether the renewal price will be based from the list price or a locked-in price for this shopper
	PriceLocked bool                   `json:"priceLocked"`
	Product     SubscriptionProduct    `json:"product"`
	Relations   *SubscriptionRelations `json:"relations,omitempty"`
	// Whether or not the Subscription is set to be automatically renewed via the billing agent
	RenewAuto bool `json:"renewAuto"`
	// Whether or not the Subscription is allowed to be renewed
	Renewable bool `json:"renewable"`
	// Whether the Subscription is active or the specific non-active state
	Status SubscriptionStatusEnum `json:"status"`
	// Unique identifier of the Subscription
	SubscriptionID string `json:"subscriptionId"`
	// Whether or not the Subscription is allowed to be upgraded
	Upgradeable bool `json:"upgradeable"`
}
