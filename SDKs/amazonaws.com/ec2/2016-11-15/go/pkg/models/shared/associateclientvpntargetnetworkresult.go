// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AssociateClientVpnTargetNetworkResultStatusCodeEnum - The state of the target network association.
type AssociateClientVpnTargetNetworkResultStatusCodeEnum string

const (
	AssociateClientVpnTargetNetworkResultStatusCodeEnumAssociating       AssociateClientVpnTargetNetworkResultStatusCodeEnum = "associating"
	AssociateClientVpnTargetNetworkResultStatusCodeEnumAssociated        AssociateClientVpnTargetNetworkResultStatusCodeEnum = "associated"
	AssociateClientVpnTargetNetworkResultStatusCodeEnumAssociationFailed AssociateClientVpnTargetNetworkResultStatusCodeEnum = "association-failed"
	AssociateClientVpnTargetNetworkResultStatusCodeEnumDisassociating    AssociateClientVpnTargetNetworkResultStatusCodeEnum = "disassociating"
	AssociateClientVpnTargetNetworkResultStatusCodeEnumDisassociated     AssociateClientVpnTargetNetworkResultStatusCodeEnum = "disassociated"
)

func (e *AssociateClientVpnTargetNetworkResultStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "association-failed":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		*e = AssociateClientVpnTargetNetworkResultStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateClientVpnTargetNetworkResultStatusCodeEnum: %s", s)
	}
}

// AssociateClientVpnTargetNetworkResultStatus - The current state of the target network association.
type AssociateClientVpnTargetNetworkResultStatus struct {
	Code    *AssociateClientVpnTargetNetworkResultStatusCodeEnum
	Message *string
}

// AssociateClientVpnTargetNetworkResult - Success
type AssociateClientVpnTargetNetworkResult struct {
	AssociationID *string
	Status        *AssociateClientVpnTargetNetworkResultStatus
}
