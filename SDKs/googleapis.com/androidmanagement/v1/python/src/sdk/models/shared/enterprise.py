"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contactinfo as shared_contactinfo
from ..shared import externaldata as shared_externaldata
from ..shared import signindetail as shared_signindetail
from ..shared import termsandconditions as shared_termsandconditions
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EnterpriseEnabledNotificationTypesEnum(str, Enum):
    NOTIFICATION_TYPE_UNSPECIFIED = 'NOTIFICATION_TYPE_UNSPECIFIED'
    ENROLLMENT = 'ENROLLMENT'
    COMPLIANCE_REPORT = 'COMPLIANCE_REPORT'
    STATUS_REPORT = 'STATUS_REPORT'
    COMMAND = 'COMMAND'
    USAGE_LOGS = 'USAGE_LOGS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Enterprise:
    r"""The configuration applied to an enterprise."""
    
    app_auto_approval_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appAutoApprovalEnabled'), 'exclude': lambda f: f is None }})
    r"""Deprecated and unused."""  
    contact_info: Optional[shared_contactinfo.ContactInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactInfo'), 'exclude': lambda f: f is None }})
    r"""Contact details for managed Google Play enterprises."""  
    enabled_notification_types: Optional[list[EnterpriseEnabledNotificationTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabledNotificationTypes'), 'exclude': lambda f: f is None }})
    r"""The types of Google Pub/Sub notifications enabled for the enterprise."""  
    enterprise_display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enterpriseDisplayName'), 'exclude': lambda f: f is None }})
    r"""The name of the enterprise displayed to users. This field has a maximum length of 100 characters."""  
    logo: Optional[shared_externaldata.ExternalData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo'), 'exclude': lambda f: f is None }})
    r"""Data hosted at an external location. The data is to be downloaded by Android Device Policy and verified against the hash."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the enterprise which is generated by the server during creation, in the form enterprises/{enterpriseId}."""  
    primary_color: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryColor'), 'exclude': lambda f: f is None }})
    r"""A color in RGB format that indicates the predominant color to display in the device management app UI. The color components are stored as follows: (red << 16) | (green << 8) | blue, where the value of each component is between 0 and 255, inclusive."""  
    pubsub_topic: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pubsubTopic'), 'exclude': lambda f: f is None }})
    r"""The topic which Pub/Sub notifications are published to, in the form projects/{project}/topics/{topic}. This field is only required if Pub/Sub notifications are enabled."""  
    signin_details: Optional[list[shared_signindetail.SigninDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signinDetails'), 'exclude': lambda f: f is None }})
    r"""Sign-in details of the enterprise."""  
    terms_and_conditions: Optional[list[shared_termsandconditions.TermsAndConditions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termsAndConditions'), 'exclude': lambda f: f is None }})
    r"""Terms and conditions that must be accepted when provisioning a device for this enterprise. A page of terms is generated for each value in this list."""  
    