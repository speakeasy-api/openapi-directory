/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExperimentTargetFilter } from "./experimenttargetfilter";
import { Expose, Type } from "class-transformer";

/**
 * Describes a target for an experiment.
 */
export class ExperimentTarget extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ExperimentTargetFilter })
  @Expose({ name: "filters" })
  @Type(() => ExperimentTargetFilter)
  filters?: ExperimentTargetFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  parameters?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceArns" })
  resourceArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "resourceTags" })
  resourceTags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "selectionMode" })
  selectionMode?: string;
}
