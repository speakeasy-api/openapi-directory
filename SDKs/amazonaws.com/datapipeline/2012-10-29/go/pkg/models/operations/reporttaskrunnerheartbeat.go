// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReportTaskRunnerHeartbeatXAmzTargetEnum
type ReportTaskRunnerHeartbeatXAmzTargetEnum string

const (
	ReportTaskRunnerHeartbeatXAmzTargetEnumDataPipelineReportTaskRunnerHeartbeat ReportTaskRunnerHeartbeatXAmzTargetEnum = "DataPipeline.ReportTaskRunnerHeartbeat"
)

func (e *ReportTaskRunnerHeartbeatXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DataPipeline.ReportTaskRunnerHeartbeat":
		*e = ReportTaskRunnerHeartbeatXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReportTaskRunnerHeartbeatXAmzTargetEnum: %s", s)
	}
}

type ReportTaskRunnerHeartbeatHeaders struct {
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ReportTaskRunnerHeartbeatXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ReportTaskRunnerHeartbeatRequest struct {
	Headers ReportTaskRunnerHeartbeatHeaders
	Request shared.ReportTaskRunnerHeartbeatInput `request:"mediaType=application/json"`
}

type ReportTaskRunnerHeartbeatResponse struct {
	ContentType string
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ReportTaskRunnerHeartbeatOutput *shared.ReportTaskRunnerHeartbeatOutput
	StatusCode                      int
	RawResponse                     *http.Response
}
