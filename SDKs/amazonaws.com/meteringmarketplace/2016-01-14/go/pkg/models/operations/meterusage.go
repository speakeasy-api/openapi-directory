// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MeterUsageXAmzTargetEnum
type MeterUsageXAmzTargetEnum string

const (
	MeterUsageXAmzTargetEnumAwsmpMeteringServiceMeterUsage MeterUsageXAmzTargetEnum = "AWSMPMeteringService.MeterUsage"
)

func (e *MeterUsageXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSMPMeteringService.MeterUsage":
		*e = MeterUsageXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MeterUsageXAmzTargetEnum: %s", s)
	}
}

type MeterUsageRequest struct {
	MeterUsageRequest shared.MeterUsageRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        MeterUsageXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type MeterUsageResponse struct {
	ContentType string
	// CustomerNotEntitledException
	CustomerNotEntitledException interface{}
	// DuplicateRequestException
	DuplicateRequestException interface{}
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidEndpointRegionException
	InvalidEndpointRegionException interface{}
	// InvalidProductCodeException
	InvalidProductCodeException interface{}
	// InvalidTagException
	InvalidTagException interface{}
	// InvalidUsageAllocationsException
	InvalidUsageAllocationsException interface{}
	// InvalidUsageDimensionException
	InvalidUsageDimensionException interface{}
	// Success
	MeterUsageResult *shared.MeterUsageResult
	StatusCode       int
	RawResponse      *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// TimestampOutOfBoundsException
	TimestampOutOfBoundsException interface{}
}
