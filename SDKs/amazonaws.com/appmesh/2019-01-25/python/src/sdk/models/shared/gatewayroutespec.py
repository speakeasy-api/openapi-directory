"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grpcgatewayroute as shared_grpcgatewayroute
from ..shared import httpgatewayroute as shared_httpgatewayroute
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GatewayRouteSpec:
    r"""An object that represents a gateway route specification. Specify one gateway route type."""
    
    grpc_route: Optional[shared_grpcgatewayroute.GrpcGatewayRoute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grpcRoute'), 'exclude': lambda f: f is None }})  
    http2_route: Optional[shared_httpgatewayroute.HTTPGatewayRoute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http2Route'), 'exclude': lambda f: f is None }})  
    http_route: Optional[shared_httpgatewayroute.HTTPGatewayRoute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('httpRoute'), 'exclude': lambda f: f is None }})  
    priority: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priority'), 'exclude': lambda f: f is None }})  
    