/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstanceAndroidDetails } from "./instanceandroiddetails";
import { InstanceIosDetails } from "./instanceiosdetails";
import { InstanceWebDetails } from "./instancewebdetails";
import { Expose, Type } from "class-transformer";

/**
 * The platform type.
 */
export enum InstancePlatformTypeEnum {
  PlatformTypeUnspecified = "PLATFORM_TYPE_UNSPECIFIED",
  Android = "ANDROID",
  Ios = "IOS",
  WebApp = "WEB_APP",
}

/**
 * The Instance resource.
 */
export class Instance extends SpeakeasyBase {
  /**
   * URI which shows where a user can acquire this instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acquisitionUri" })
  acquisitionUri?: string;

  /**
   * The Android instance details resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "androidInstance" })
  @Type(() => InstanceAndroidDetails)
  androidInstance?: InstanceAndroidDetails;

  /**
   * The iOS details resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iosInstance" })
  @Type(() => InstanceIosDetails)
  iosInstance?: InstanceIosDetails;

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string `games#instance`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Localized display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The platform type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platformType" })
  platformType?: InstancePlatformTypeEnum;

  /**
   * Flag to show if this game instance supports realtime play.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "realtimePlay" })
  realtimePlay?: boolean;

  /**
   * Flag to show if this game instance supports turn based play.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "turnBasedPlay" })
  turnBasedPlay?: boolean;

  /**
   * The Web details resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webInstance" })
  @Type(() => InstanceWebDetails)
  webInstance?: InstanceWebDetails;
}
