/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListRecommendationsRequestBody {
    /**
     * An object that contains mapping between &lt;code&gt;ListRecommendationsFilterKey&lt;/code&gt; and &lt;code&gt;ListRecommendationFilterValue&lt;/code&gt; to filter by.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Filter")
    public java.util.Map<String, String> filter;

    public ListRecommendationsRequestBody withFilter(java.util.Map<String, String> filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * A token returned from a previous call to &lt;code&gt;ListRecommendations&lt;/code&gt; to indicate the position in the list of recommendations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;

    public ListRecommendationsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * &lt;p&gt;The number of results to show in a single call to &lt;code&gt;ListRecommendations&lt;/code&gt;. If the number of results is larger than the number you specified in this parameter, then the response includes a &lt;code&gt;NextToken&lt;/code&gt; element, which you can use to obtain additional results.&lt;/p&gt; &lt;p&gt;The value you specify has to be at least 1, and can be no more than 100.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PageSize")
    public Long pageSize;

    public ListRecommendationsRequestBody withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    public ListRecommendationsRequestBody(){}
}
