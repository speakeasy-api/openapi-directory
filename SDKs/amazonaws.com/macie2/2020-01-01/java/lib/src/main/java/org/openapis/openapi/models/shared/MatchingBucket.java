/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * MatchingBucket - &lt;p&gt;Provides statistical data and other information about an S3 bucket that Amazon Macie monitors and analyzes for your account. By default, object count and storage size values include data for object parts that are the result of incomplete multipart uploads. For more information, see &lt;a href="https://docs.aws.amazon.com/macie/latest/user/monitoring-s3-how-it-works.html"&gt;How Macie monitors Amazon S3 data security&lt;/a&gt; in the &lt;i&gt;Amazon Macie User Guide&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;If an error occurs when Macie attempts to retrieve and process information about the bucket or the bucket's objects, the value for most of these properties is null. Key exceptions are accountId and bucketName. To identify the cause of the error, refer to the errorCode and errorMessage values.&lt;/p&gt;
 */
public class MatchingBucket {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public MatchingBucket withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bucketName")
    public String bucketName;

    public MatchingBucket withBucketName(String bucketName) {
        this.bucketName = bucketName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classifiableObjectCount")
    public Long classifiableObjectCount;

    public MatchingBucket withClassifiableObjectCount(Long classifiableObjectCount) {
        this.classifiableObjectCount = classifiableObjectCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classifiableSizeInBytes")
    public Long classifiableSizeInBytes;

    public MatchingBucket withClassifiableSizeInBytes(Long classifiableSizeInBytes) {
        this.classifiableSizeInBytes = classifiableSizeInBytes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorCode")
    public BucketMetadataErrorCodeEnum errorCode;

    public MatchingBucket withErrorCode(BucketMetadataErrorCodeEnum errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;

    public MatchingBucket withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobDetails")
    public JobDetails jobDetails;

    public MatchingBucket withJobDetails(JobDetails jobDetails) {
        this.jobDetails = jobDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastAutomatedDiscoveryTime")
    public OffsetDateTime lastAutomatedDiscoveryTime;

    public MatchingBucket withLastAutomatedDiscoveryTime(OffsetDateTime lastAutomatedDiscoveryTime) {
        this.lastAutomatedDiscoveryTime = lastAutomatedDiscoveryTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectCount")
    public Long objectCount;

    public MatchingBucket withObjectCount(Long objectCount) {
        this.objectCount = objectCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectCountByEncryptionType")
    public ObjectCountByEncryptionType objectCountByEncryptionType;

    public MatchingBucket withObjectCountByEncryptionType(ObjectCountByEncryptionType objectCountByEncryptionType) {
        this.objectCountByEncryptionType = objectCountByEncryptionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sensitivityScore")
    public Long sensitivityScore;

    public MatchingBucket withSensitivityScore(Long sensitivityScore) {
        this.sensitivityScore = sensitivityScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeInBytes")
    public Long sizeInBytes;

    public MatchingBucket withSizeInBytes(Long sizeInBytes) {
        this.sizeInBytes = sizeInBytes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeInBytesCompressed")
    public Long sizeInBytesCompressed;

    public MatchingBucket withSizeInBytesCompressed(Long sizeInBytesCompressed) {
        this.sizeInBytesCompressed = sizeInBytesCompressed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unclassifiableObjectCount")
    public ObjectLevelStatistics unclassifiableObjectCount;

    public MatchingBucket withUnclassifiableObjectCount(ObjectLevelStatistics unclassifiableObjectCount) {
        this.unclassifiableObjectCount = unclassifiableObjectCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unclassifiableObjectSizeInBytes")
    public ObjectLevelStatistics unclassifiableObjectSizeInBytes;

    public MatchingBucket withUnclassifiableObjectSizeInBytes(ObjectLevelStatistics unclassifiableObjectSizeInBytes) {
        this.unclassifiableObjectSizeInBytes = unclassifiableObjectSizeInBytes;
        return this;
    }
    
    public MatchingBucket(){}
}
