/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppPermissions } from "./apppermissions";
import { Repository } from "./repository";
import { Expose, Type } from "class-transformer";

export enum InstallationTokenRepositorySelectionEnum {
  All = "all",
  Selected = "selected",
}

/**
 * Authentication token for a GitHub App installed on a user or org.
 */
export class InstallationToken extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  expiresAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "has_multiple_single_files" })
  hasMultipleSingleFiles?: boolean;

  /**
   * The permissions granted to the user-to-server access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => AppPermissions)
  permissions?: AppPermissions;

  @SpeakeasyMetadata({ elemType: Repository })
  @Expose({ name: "repositories" })
  @Type(() => Repository)
  repositories?: Repository[];

  @SpeakeasyMetadata()
  @Expose({ name: "repository_selection" })
  repositorySelection?: InstallationTokenRepositorySelectionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "single_file" })
  singleFile?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "single_file_paths" })
  singleFilePaths?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token: string;
}
