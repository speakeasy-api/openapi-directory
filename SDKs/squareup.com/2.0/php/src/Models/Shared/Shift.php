<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Shift - A record of the hourly rate, start, and end times for a single work shift
 * 
 * for an employee. This might include a record of the start and end times for breaks
 * taken during the shift.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Shift
{
    /**
     * A list of all the paid or unpaid breaks that were taken during this shift.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BreakT> $breaks
     */
	#[\JMS\Serializer\Annotation\SerializedName('breaks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BreakT>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $breaks = null;
    
    /**
     * A read-only timestamp in RFC 3339 format; presented in UTC.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The ID of the employee this shift belongs to. DEPRECATED at version 2020-08-26. Use `team_member_id` instead.
     * 
     * @var ?string $employeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('employee_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $employeeId = null;
    
    /**
     * RFC 3339; shifted to the timezone + offset. Precision up to the minute is
     * 
     * respected; seconds are truncated.
     * 
     * @var ?string $endAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('end_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endAt = null;
    
    /**
     * The UUID for this object.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The ID of the location this shift occurred at. The location should be based on
     * 
     * where the employee clocked in.
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * RFC 3339; shifted to the location timezone + offset. Precision up to the
     * 
     * minute is respected; seconds are truncated.
     * 
     * @var string $startAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $startAt;
    
    /**
     * Describes the working state of the current `Shift`.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * The ID of the team member this shift belongs to. Replaced `employee_id` at version "2020-08-26".
     * 
     * @var ?string $teamMemberId
     */
	#[\JMS\Serializer\Annotation\SerializedName('team_member_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $teamMemberId = null;
    
    /**
     * The read-only convenience value that is calculated from the location based
     * 
     * on the `location_id`. Format: the IANA timezone database identifier for the
     * location timezone.
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
    /**
     * A read-only timestamp in RFC 3339 format; presented in UTC.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
    /**
     * Used for resolving concurrency issues. The request fails if the version
     * 
     * provided does not match the server version at the time of the request. If not provided,
     * Square executes a blind write; potentially overwriting data from another
     * write.
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
    /**
     * The hourly wage rate used to compensate an employee for this shift.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShiftWage $wage
     */
	#[\JMS\Serializer\Annotation\SerializedName('wage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ShiftWage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShiftWage $wage = null;
    
	public function __construct()
	{
		$this->breaks = null;
		$this->createdAt = null;
		$this->employeeId = null;
		$this->endAt = null;
		$this->id = null;
		$this->locationId = null;
		$this->startAt = "";
		$this->status = null;
		$this->teamMemberId = null;
		$this->timezone = null;
		$this->updatedAt = null;
		$this->version = null;
		$this->wage = null;
	}
}
