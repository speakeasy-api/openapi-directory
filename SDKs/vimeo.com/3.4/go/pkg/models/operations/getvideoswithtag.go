// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetVideosWithTagDirectionEnum - The sort direction of the results.
type GetVideosWithTagDirectionEnum string

const (
	GetVideosWithTagDirectionEnumAsc  GetVideosWithTagDirectionEnum = "asc"
	GetVideosWithTagDirectionEnumDesc GetVideosWithTagDirectionEnum = "desc"
)

func (e *GetVideosWithTagDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetVideosWithTagDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVideosWithTagDirectionEnum: %s", s)
	}
}

// GetVideosWithTagSortEnum - The way to sort the results.
type GetVideosWithTagSortEnum string

const (
	GetVideosWithTagSortEnumCreatedTime GetVideosWithTagSortEnum = "created_time"
	GetVideosWithTagSortEnumDuration    GetVideosWithTagSortEnum = "duration"
	GetVideosWithTagSortEnumName        GetVideosWithTagSortEnum = "name"
)

func (e *GetVideosWithTagSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "created_time":
		fallthrough
	case "duration":
		fallthrough
	case "name":
		*e = GetVideosWithTagSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVideosWithTagSortEnum: %s", s)
	}
}

type GetVideosWithTagRequest struct {
	// The sort direction of the results.
	Direction *GetVideosWithTagDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The way to sort the results.
	Sort *GetVideosWithTagSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// The tag word.
	Word string `pathParam:"style=simple,explode=false,name=word"`
}

type GetVideosWithTagResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// No such tag exists.
	LegacyError *shared.LegacyError
	// The videos were returned.
	Videos []shared.Video
}
