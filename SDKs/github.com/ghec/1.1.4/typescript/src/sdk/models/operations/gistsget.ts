/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GistsGetRequest extends SpeakeasyBase {
  /**
   * The unique identifier of the gist.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=gist_id",
  })
  gistId: string;
}

export class GistsGet403ApplicationJSONBlock extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

/**
 * Forbidden Gist
 */
export class GistsGet403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "block" })
  @Type(() => GistsGet403ApplicationJSONBlock)
  block?: GistsGet403ApplicationJSONBlock;

  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class GistsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Resource not found
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  gistSimple?: shared.GistSimple;

  /**
   * Forbidden Gist
   */
  @SpeakeasyMetadata()
  gistsGet403ApplicationJSONObject?: GistsGet403ApplicationJSON;
}
