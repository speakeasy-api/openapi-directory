"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import alarmtype_enum as shared_alarmtype_enum
from ..shared import recommendationitem as shared_recommendationitem
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AlarmRecommendation:
    r"""Defines a recommendation for a CloudWatch alarm."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    recommendation_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recommendationId') }})  
    reference_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceId') }})  
    type: shared_alarmtype_enum.AlarmTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    app_component_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appComponentName'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    items: Optional[list[shared_recommendationitem.RecommendationItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})  
    prerequisite: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prerequisite'), 'exclude': lambda f: f is None }})  
    