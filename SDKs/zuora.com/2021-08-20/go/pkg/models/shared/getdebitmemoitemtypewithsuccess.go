// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// GETDebitMemoItemTypewithSuccessFinanceInformation - Container for the finance information related to the debit memo item.
type GETDebitMemoItemTypewithSuccessFinanceInformation struct {
	// The accounting code for the deferred revenue, such as Monthly Recurring Liability.
	//
	DeferredRevenueAccountingCode *string `json:"deferredRevenueAccountingCode,omitempty"`
	// The type of the deferred revenue accounting code, such as Deferred Revenue.
	//
	DeferredRevenueAccountingCodeType *string `json:"deferredRevenueAccountingCodeType,omitempty"`
	// The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges.
	//
	RecognizedRevenueAccountingCode *string `json:"recognizedRevenueAccountingCode,omitempty"`
	// The type of the recognized revenue accounting code, such as Sales Revenue or Sales Discount.
	//
	RecognizedRevenueAccountingCodeType *string `json:"recognizedRevenueAccountingCodeType,omitempty"`
	// The name of the revenue recognition rule governing the revenue schedule.
	//
	RevenueRecognitionRuleName *string `json:"revenueRecognitionRuleName,omitempty"`
	// The revenue schedule number. The revenue schedule number is always prefixed with "RS", for example, RS-00000001.
	//
	RevenueScheduleNumber *string `json:"revenueScheduleNumber,omitempty"`
}

// GETDebitMemoItemTypewithSuccessSourceItemTypeEnum - The type of the source item.
type GETDebitMemoItemTypewithSuccessSourceItemTypeEnum string

const (
	GETDebitMemoItemTypewithSuccessSourceItemTypeEnumSubscriptionComponent GETDebitMemoItemTypewithSuccessSourceItemTypeEnum = "SubscriptionComponent"
	GETDebitMemoItemTypewithSuccessSourceItemTypeEnumInvoiceDetail         GETDebitMemoItemTypewithSuccessSourceItemTypeEnum = "InvoiceDetail"
	GETDebitMemoItemTypewithSuccessSourceItemTypeEnumProductRatePlanCharge GETDebitMemoItemTypewithSuccessSourceItemTypeEnum = "ProductRatePlanCharge"
)

func (e *GETDebitMemoItemTypewithSuccessSourceItemTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SubscriptionComponent":
		fallthrough
	case "InvoiceDetail":
		fallthrough
	case "ProductRatePlanCharge":
		*e = GETDebitMemoItemTypewithSuccessSourceItemTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDebitMemoItemTypewithSuccessSourceItemTypeEnum: %s", s)
	}
}

// GETDebitMemoItemTypewithSuccessTaxModeEnum - The tax mode of the debit memo item, indicating whether the amount of the debit memo item includes tax.
type GETDebitMemoItemTypewithSuccessTaxModeEnum string

const (
	GETDebitMemoItemTypewithSuccessTaxModeEnumTaxExclusive GETDebitMemoItemTypewithSuccessTaxModeEnum = "TaxExclusive"
	GETDebitMemoItemTypewithSuccessTaxModeEnumTaxInclusive GETDebitMemoItemTypewithSuccessTaxModeEnum = "TaxInclusive"
)

func (e *GETDebitMemoItemTypewithSuccessTaxModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TaxExclusive":
		fallthrough
	case "TaxInclusive":
		*e = GETDebitMemoItemTypewithSuccessTaxModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDebitMemoItemTypewithSuccessTaxModeEnum: %s", s)
	}
}

// GETDebitMemoItemTypewithSuccessTaxationItems - Container for the taxation items of the debit memo item.
//
// **Note**: This field is only available if you set the `zuora-version` request header to `239.0` or later.
type GETDebitMemoItemTypewithSuccessTaxationItems struct {
	// List of taxation items.
	//
	Data []GETDMTaxItemTypeNew `json:"data,omitempty"`
	// URL to retrieve the next page of the response if it exists; otherwise absent.
	//
	NextPage *string `json:"nextPage,omitempty"`
}

// GETDebitMemoItemTypewithSuccess - Container for custom fields of a Debit Memo Item object.
type GETDebitMemoItemTypewithSuccess struct {
	// The amount of the debit memo item. For tax-inclusive debit memo items, the amount indicates the debit memo item amount including tax. For tax-exclusive debit memo items, the amount indicates the debit memo item amount excluding tax.
	//
	Amount *float64 `json:"amount,omitempty"`
	// The debit memo item amount excluding tax.
	//
	AmountWithoutTax *float64 `json:"amountWithoutTax,omitempty"`
	// The balance of the debit memo item.
	//
	Balance *float64 `json:"balance,omitempty"`
	// The applied amount of the debit memo item.
	//
	BeAppliedAmount *float64 `json:"beAppliedAmount,omitempty"`
	// Comments about the debit memo item.
	//
	// **Note**: This field is not available if you set the `zuora-version` request header to `257.0` or later.
	//
	Comment *string `json:"comment,omitempty"`
	// The ID of the Zuora user who created the debit memo item.
	//
	CreatedByID *string `json:"createdById,omitempty"`
	// The date and time when the debit memo item was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
	//
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The description of the debit memo item.
	//
	// **Note**: This field is only available if you set the `zuora-version` request header to `257.0` or later.
	//
	Description *string `json:"description,omitempty"`
	// Container for the finance information related to the debit memo item.
	//
	FinanceInformation *GETDebitMemoItemTypewithSuccessFinanceInformation `json:"financeInformation,omitempty"`
	// The ID of the debit memo item.
	//
	ID *string `json:"id,omitempty"`
	// The number of units for the debit memo item.
	//
	Quantity *float64 `json:"quantity,omitempty"`
	// The end date of the service period associated with this debit memo item. Service ends one second before the date specified in this field.
	//
	ServiceEndDate *types.Date `json:"serviceEndDate,omitempty"`
	// The start date of the service period associated with this debit memo item. If the associated charge is a one-time fee, this date is the date of that charge.
	//
	ServiceStartDate *types.Date `json:"serviceStartDate,omitempty"`
	// The SKU for the product associated with the debit memo item.
	//
	Sku *string `json:"sku,omitempty"`
	// The name of the SKU.
	//
	SkuName *string `json:"skuName,omitempty"`
	// The ID of the source item.
	//
	SourceItemID *string `json:"sourceItemId,omitempty"`
	// The type of the source item.
	//
	SourceItemType *GETDebitMemoItemTypewithSuccessSourceItemTypeEnum `json:"sourceItemType,omitempty"`
	// The ID of the subscription associated with the debit memo item.
	//
	SubscriptionID *string `json:"subscriptionId,omitempty"`
	// Container for the taxation items of the debit memo item.
	//
	// **Note**: This field is not available if you set the `zuora-version` request header to `239.0` or later.
	//
	TaxItems []GETDMTaxItemType `json:"taxItems,omitempty"`
	// The tax mode of the debit memo item, indicating whether the amount of the debit memo item includes tax.
	//
	TaxMode *GETDebitMemoItemTypewithSuccessTaxModeEnum `json:"taxMode,omitempty"`
	// Container for the taxation items of the debit memo item.
	//
	// **Note**: This field is only available if you set the `zuora-version` request header to `239.0` or later.
	//
	TaxationItems *GETDebitMemoItemTypewithSuccessTaxationItems `json:"taxationItems,omitempty"`
	// The units to measure usage.
	//
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
	// The per-unit price of the debit memo item.
	//
	UnitPrice *float64 `json:"unitPrice,omitempty"`
	// The ID of the Zuora user who last updated the debit memo item.
	//
	UpdatedByID *string `json:"updatedById,omitempty"`
	// The date and time when the debit memo item was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
	//
	UpdatedDate *time.Time `json:"updatedDate,omitempty"`
}
