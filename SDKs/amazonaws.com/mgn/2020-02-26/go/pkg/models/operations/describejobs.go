// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeJobsRequestBodyFilters - Request to describe Job log filters.
type DescribeJobsRequestBodyFilters struct {
	FromDate *string  `json:"fromDate,omitempty"`
	JobIDs   []string `json:"jobIDs,omitempty"`
	ToDate   *string  `json:"toDate,omitempty"`
}

type DescribeJobsRequestBody struct {
	// Request to describe Job log filters.
	Filters *DescribeJobsRequestBodyFilters `json:"filters,omitempty"`
	// Request to describe job log items by max results.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// Request to describe job log items by next token.
	NextToken *string `json:"nextToken,omitempty"`
}

type DescribeJobsRequest struct {
	RequestBody       DescribeJobsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type DescribeJobsResponse struct {
	ContentType string
	// Success
	DescribeJobsResponse *shared.DescribeJobsResponse
	StatusCode           int
	RawResponse          *http.Response
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
