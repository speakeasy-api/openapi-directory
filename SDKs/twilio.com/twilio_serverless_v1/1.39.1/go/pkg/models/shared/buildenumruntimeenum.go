// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BuildEnumRuntimeEnum string

const (
	BuildEnumRuntimeEnumNode8  BuildEnumRuntimeEnum = "node8"
	BuildEnumRuntimeEnumNode10 BuildEnumRuntimeEnum = "node10"
	BuildEnumRuntimeEnumNode12 BuildEnumRuntimeEnum = "node12"
	BuildEnumRuntimeEnumNode14 BuildEnumRuntimeEnum = "node14"
	BuildEnumRuntimeEnumNode16 BuildEnumRuntimeEnum = "node16"
)

func (e *BuildEnumRuntimeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "node8":
		fallthrough
	case "node10":
		fallthrough
	case "node12":
		fallthrough
	case "node14":
		fallthrough
	case "node16":
		*e = BuildEnumRuntimeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BuildEnumRuntimeEnum: %s", s)
	}
}
