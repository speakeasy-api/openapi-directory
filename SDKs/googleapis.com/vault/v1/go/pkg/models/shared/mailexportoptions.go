// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MailExportOptionsExportFormatEnum - The file format for exported messages.
type MailExportOptionsExportFormatEnum string

const (
	MailExportOptionsExportFormatEnumExportFormatUnspecified MailExportOptionsExportFormatEnum = "EXPORT_FORMAT_UNSPECIFIED"
	MailExportOptionsExportFormatEnumMbox                    MailExportOptionsExportFormatEnum = "MBOX"
	MailExportOptionsExportFormatEnumPst                     MailExportOptionsExportFormatEnum = "PST"
)

func (e MailExportOptionsExportFormatEnum) ToPointer() *MailExportOptionsExportFormatEnum {
	return &e
}

func (e *MailExportOptionsExportFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXPORT_FORMAT_UNSPECIFIED":
		fallthrough
	case "MBOX":
		fallthrough
	case "PST":
		*e = MailExportOptionsExportFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MailExportOptionsExportFormatEnum: %v", v)
	}
}

// MailExportOptions - Options for Gmail exports.
type MailExportOptions struct {
	// The file format for exported messages.
	ExportFormat *MailExportOptionsExportFormatEnum `json:"exportFormat,omitempty"`
	// To export confidential mode content, set to **true**.
	ShowConfidentialModeContent *bool `json:"showConfidentialModeContent,omitempty"`
	// To use the new export system, set to **true**.
	UseNewExport *bool `json:"useNewExport,omitempty"`
}
