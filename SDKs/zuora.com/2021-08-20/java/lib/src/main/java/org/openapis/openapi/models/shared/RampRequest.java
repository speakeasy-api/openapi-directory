/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RampRequest - Container of the ramp definitions. It is used to create, update, or remove the ramp definition for the new subscription.
 * 
 */
public class RampRequest {
    /**
     * Container for the rate plan charges that are considered as part of the ramp deal.
     * 
     * * If this field is not specified, all the one-time and recurring regular charges of the new subscription are automatically considered as part of the ramp deal.
     * * If this field is specified, either 'chargeNumber' or 'uniqueToken' must be specified.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("charges")
    public RampChargeRequest[] charges;
    public RampRequest withCharges(RampChargeRequest[] charges) {
        this.charges = charges;
        return this;
    }
    
    /**
     * Whether to remove the ramp definition from the new subscription. If you want to remove the ramp definition, this field is the only required field for the `ramp` object.  
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delete")
    public Boolean delete;
    public RampRequest withDelete(Boolean delete) {
        this.delete = delete;
        return this;
    }
    
    /**
     * The short description of the ramp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public RampRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Container for the intervals that the ramp is split into in its timeline. 
     * 
     * It is required when you want to create or update the ramp definition. The ramp intervals cannot have any overlap or gap between each other.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intervals")
    public RampIntervalRequest[] intervals;
    public RampRequest withIntervals(RampIntervalRequest[] intervals) {
        this.intervals = intervals;
        return this;
    }
    
    /**
     * The name of the ramp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public RampRequest withName(String name) {
        this.name = name;
        return this;
    }
    
}
