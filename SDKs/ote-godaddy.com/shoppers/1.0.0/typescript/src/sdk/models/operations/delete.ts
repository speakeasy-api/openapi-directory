/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DeleteRequest extends SpeakeasyBase {
  /**
   * The client IP of the user who originated the request leading to this call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=auditClientIp",
  })
  auditClientIp: string;

  /**
   * The ID of the shopper to delete. Must agree with the shopper id on the token or header, if present. *Note*: **shopperId** is **not the same** as **customerId**.  **shopperId** is a number of max length 10 digits (*ex:* 1234567890) whereas **customerId** is a UUIDv4 (*ex:* 295e3bc3-b3b9-4d95-aae5-ede41a994d13)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=shopperId",
  })
  shopperId: string;
}

export class DeleteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request was malformed
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Too many requests received within interval
   */
  @SpeakeasyMetadata()
  errorLimit?: shared.ErrorLimit;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
