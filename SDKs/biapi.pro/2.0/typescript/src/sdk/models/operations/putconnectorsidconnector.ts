/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PutConnectorsIdConnectorRequestBody extends SpeakeasyBase {
  /**
   * the authentication mechanism to use for this connector
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=auth_mechanism" })
  authMechanism?: string;

  /**
   * to enable  or disable connector (bank or provider)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=hidden" })
  hidden?: boolean;

  /**
   * one or several comma separated categories to map to the given connector (or null to map no category)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=id_categories" })
  idCategories?: string;

  /**
   * Allows you to overload global sync_frequency param
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=sync_frequency" })
  syncFrequency?: number;
}

export class PutConnectorsIdConnectorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PutConnectorsIdConnectorRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_connector",
  })
  idConnector: number;
}

export class PutConnectorsIdConnectorResponse extends SpeakeasyBase {
  /**
   * Successful PUT on Connector resource
   */
  @SpeakeasyMetadata()
  connector?: shared.Connector;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
