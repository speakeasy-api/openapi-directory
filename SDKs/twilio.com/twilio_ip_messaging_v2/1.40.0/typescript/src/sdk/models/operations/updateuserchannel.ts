/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateUserChannelServerList = [
  "https://ip-messaging.twilio.com",
] as const;

export class UpdateUserChannelSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateUserChannelUpdateUserChannelRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "form, name=LastConsumedMessageIndex" })
  lastConsumedMessageIndex?: number;

  @SpeakeasyMetadata({
    data: "form, name=LastConsumptionTimestamp;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  lastConsumptionTimestamp?: Date;

  @SpeakeasyMetadata({ data: "form, name=NotificationLevel" })
  notificationLevel?: shared.UserChannelEnumNotificationLevelEnum;
}

export class UpdateUserChannelRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ChannelSid",
  })
  channelSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateUserChannelUpdateUserChannelRequest;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=UserSid",
  })
  userSid: string;
}

export class UpdateUserChannelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  ipMessagingV2ServiceUserUserChannel?: shared.IpMessagingV2ServiceUserUserChannel;
}
