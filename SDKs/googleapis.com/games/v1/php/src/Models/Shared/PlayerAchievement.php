<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PlayerAchievement - An achievement object.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PlayerAchievement
{
    /**
     * The state of the achievement.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PlayerAchievementAchievementStateEnum $achievementState
     */
	#[\JMS\Serializer\Annotation\SerializedName('achievementState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PlayerAchievementAchievementStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PlayerAchievementAchievementStateEnum $achievementState = null;
    
    /**
     * The current steps for an incremental achievement.
     * 
     * @var ?int $currentSteps
     */
	#[\JMS\Serializer\Annotation\SerializedName('currentSteps')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $currentSteps = null;
    
    /**
     * Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.
     * 
     * @var ?string $experiencePoints
     */
	#[\JMS\Serializer\Annotation\SerializedName('experiencePoints')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $experiencePoints = null;
    
    /**
     * The current steps for an incremental achievement as a string.
     * 
     * @var ?string $formattedCurrentStepsString
     */
	#[\JMS\Serializer\Annotation\SerializedName('formattedCurrentStepsString')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formattedCurrentStepsString = null;
    
    /**
     * The ID of the achievement.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The timestamp of the last modification to this achievement's state.
     * 
     * @var ?string $lastUpdatedTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastUpdatedTimestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastUpdatedTimestamp = null;
    
	public function __construct()
	{
		$this->achievementState = null;
		$this->currentSteps = null;
		$this->experiencePoints = null;
		$this->formattedCurrentStepsString = null;
		$this->id = null;
		$this->kind = null;
		$this->lastUpdatedTimestamp = null;
	}
}
