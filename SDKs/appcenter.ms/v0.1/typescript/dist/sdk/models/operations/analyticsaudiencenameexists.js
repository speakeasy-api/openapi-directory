"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnalyticsAudienceNameExistsResponse = exports.AnalyticsAudienceNameExistsDefaultApplicationJSON = exports.AnalyticsAudienceNameExistsDefaultApplicationJSONError = exports.AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum = exports.AnalyticsAudienceNameExistsRequest = exports.AnalyticsAudienceNameExistsSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var AnalyticsAudienceNameExistsSecurity = /** @class */ (function (_super) {
    __extends(AnalyticsAudienceNameExistsSecurity, _super);
    function AnalyticsAudienceNameExistsSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
        }),
        __metadata("design:type", String)
    ], AnalyticsAudienceNameExistsSecurity.prototype, "apiToken", void 0);
    return AnalyticsAudienceNameExistsSecurity;
}(utils_1.SpeakeasyBase));
exports.AnalyticsAudienceNameExistsSecurity = AnalyticsAudienceNameExistsSecurity;
var AnalyticsAudienceNameExistsRequest = /** @class */ (function (_super) {
    __extends(AnalyticsAudienceNameExistsRequest, _super);
    function AnalyticsAudienceNameExistsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=app_name",
        }),
        __metadata("design:type", String)
    ], AnalyticsAudienceNameExistsRequest.prototype, "appName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=audience_name",
        }),
        __metadata("design:type", String)
    ], AnalyticsAudienceNameExistsRequest.prototype, "audienceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=owner_name",
        }),
        __metadata("design:type", String)
    ], AnalyticsAudienceNameExistsRequest.prototype, "ownerName", void 0);
    return AnalyticsAudienceNameExistsRequest;
}(utils_1.SpeakeasyBase));
exports.AnalyticsAudienceNameExistsRequest = AnalyticsAudienceNameExistsRequest;
var AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum;
(function (AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum) {
    AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum["BadRequest"] = "BadRequest";
    AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum["Conflict"] = "Conflict";
    AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum["NotAcceptable"] = "NotAcceptable";
    AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum["NotFound"] = "NotFound";
    AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum["InternalServerError"] = "InternalServerError";
    AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum["Unauthorized"] = "Unauthorized";
    AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum["TooManyRequests"] = "TooManyRequests";
})(AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum = exports.AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum || (exports.AnalyticsAudienceNameExistsDefaultApplicationJSONErrorCodeEnum = {}));
var AnalyticsAudienceNameExistsDefaultApplicationJSONError = /** @class */ (function (_super) {
    __extends(AnalyticsAudienceNameExistsDefaultApplicationJSONError, _super);
    function AnalyticsAudienceNameExistsDefaultApplicationJSONError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], AnalyticsAudienceNameExistsDefaultApplicationJSONError.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], AnalyticsAudienceNameExistsDefaultApplicationJSONError.prototype, "message", void 0);
    return AnalyticsAudienceNameExistsDefaultApplicationJSONError;
}(utils_1.SpeakeasyBase));
exports.AnalyticsAudienceNameExistsDefaultApplicationJSONError = AnalyticsAudienceNameExistsDefaultApplicationJSONError;
/**
 * Error code with reason
 */
var AnalyticsAudienceNameExistsDefaultApplicationJSON = /** @class */ (function (_super) {
    __extends(AnalyticsAudienceNameExistsDefaultApplicationJSON, _super);
    function AnalyticsAudienceNameExistsDefaultApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        (0, class_transformer_1.Type)(function () { return AnalyticsAudienceNameExistsDefaultApplicationJSONError; }),
        __metadata("design:type", AnalyticsAudienceNameExistsDefaultApplicationJSONError)
    ], AnalyticsAudienceNameExistsDefaultApplicationJSON.prototype, "error", void 0);
    return AnalyticsAudienceNameExistsDefaultApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AnalyticsAudienceNameExistsDefaultApplicationJSON = AnalyticsAudienceNameExistsDefaultApplicationJSON;
var AnalyticsAudienceNameExistsResponse = /** @class */ (function (_super) {
    __extends(AnalyticsAudienceNameExistsResponse, _super);
    function AnalyticsAudienceNameExistsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AnalyticsAudienceNameExistsDefaultApplicationJSON)
    ], AnalyticsAudienceNameExistsResponse.prototype, "analyticsAudienceNameExistsDefaultApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AnalyticsAudienceNameExistsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AnalyticsAudienceNameExistsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], AnalyticsAudienceNameExistsResponse.prototype, "rawResponse", void 0);
    return AnalyticsAudienceNameExistsResponse;
}(utils_1.SpeakeasyBase));
exports.AnalyticsAudienceNameExistsResponse = AnalyticsAudienceNameExistsResponse;
