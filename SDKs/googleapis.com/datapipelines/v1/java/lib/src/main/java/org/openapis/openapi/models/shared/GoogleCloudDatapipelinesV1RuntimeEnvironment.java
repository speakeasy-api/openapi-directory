/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDatapipelinesV1RuntimeEnvironment - The environment values to set at runtime.
 */
public class GoogleCloudDatapipelinesV1RuntimeEnvironment {
    /**
     * Additional experiment flags for the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalExperiments")
    public String[] additionalExperiments;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withAdditionalExperiments(String[] additionalExperiments) {
        this.additionalExperiments = additionalExperiments;
        return this;
    }
    
    /**
     * Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of key/value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalUserLabels")
    public java.util.Map<String, String> additionalUserLabels;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withAdditionalUserLabels(java.util.Map<String, String> additionalUserLabels) {
        this.additionalUserLabels = additionalUserLabels;
        return this;
    }
    
    /**
     * Whether to bypass the safety checks for the job's temporary directory. Use with caution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bypassTempDirValidation")
    public Boolean bypassTempDirValidation;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withBypassTempDirValidation(Boolean bypassTempDirValidation) {
        this.bypassTempDirValidation = bypassTempDirValidation;
        return this;
    }
    
    /**
     * Whether to enable Streaming Engine for the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableStreamingEngine")
    public Boolean enableStreamingEngine;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withEnableStreamingEngine(Boolean enableStreamingEngine) {
        this.enableStreamingEngine = enableStreamingEngine;
        return this;
    }
    
    /**
     * Configuration for VM IPs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipConfiguration")
    public GoogleCloudDatapipelinesV1RuntimeEnvironmentIpConfigurationEnum ipConfiguration;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withIpConfiguration(GoogleCloudDatapipelinesV1RuntimeEnvironmentIpConfigurationEnum ipConfiguration) {
        this.ipConfiguration = ipConfiguration;
        return this;
    }
    
    /**
     * Name for the Cloud KMS key for the job. The key format is: projects//locations//keyRings//cryptoKeys/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyName")
    public String kmsKeyName;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withKmsKeyName(String kmsKeyName) {
        this.kmsKeyName = kmsKeyName;
        return this;
    }
    
    /**
     * The machine type to use for the job. Defaults to the value from the template if not specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineType")
    public String machineType;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withMachineType(String machineType) {
        this.machineType = machineType;
        return this;
    }
    
    /**
     * The maximum number of Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxWorkers")
    public Integer maxWorkers;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withMaxWorkers(Integer maxWorkers) {
        this.maxWorkers = maxWorkers;
        return this;
    }
    
    /**
     * Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * The initial number of Compute Engine instances for the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numWorkers")
    public Integer numWorkers;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withNumWorkers(Integer numWorkers) {
        this.numWorkers = numWorkers;
        return this;
    }
    
    /**
     * The email address of the service account to run the job as.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccountEmail")
    public String serviceAccountEmail;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withServiceAccountEmail(String serviceAccountEmail) {
        this.serviceAccountEmail = serviceAccountEmail;
        return this;
    }
    
    /**
     * Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetwork")
    public String subnetwork;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withSubnetwork(String subnetwork) {
        this.subnetwork = subnetwork;
        return this;
    }
    
    /**
     * The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tempLocation")
    public String tempLocation;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withTempLocation(String tempLocation) {
        this.tempLocation = tempLocation;
        return this;
    }
    
    /**
     * The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workerRegion")
    public String workerRegion;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withWorkerRegion(String workerRegion) {
        this.workerRegion = workerRegion;
        return this;
    }
    
    /**
     * The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workerZone")
    public String workerZone;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withWorkerZone(String workerZone) {
        this.workerZone = workerZone;
        return this;
    }
    
    /**
     * The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public GoogleCloudDatapipelinesV1RuntimeEnvironment withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
