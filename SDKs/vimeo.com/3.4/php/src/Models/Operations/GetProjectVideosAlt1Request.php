<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetProjectVideosAlt1Request
{
    /**
     * The sort direction of the results.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetProjectVideosAlt1DirectionEnum $direction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=direction')]
    public ?GetProjectVideosAlt1DirectionEnum $direction = null;
    
    /**
     * The page number of the results to show.
     * 
     * @var ?float $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?float $page = null;
    
    /**
     * The number of items to show on each page of results, up to a maximum of 100.
     * 
     * @var ?float $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?float $perPage = null;
    
    /**
     * The ID of the project.
     * 
     * @var float $projectId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=project_id')]
    public float $projectId;
    
    /**
     * The way to sort the results.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetProjectVideosAlt1SortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?GetProjectVideosAlt1SortEnum $sort = null;
    
	public function __construct()
	{
		$this->direction = null;
		$this->page = null;
		$this->perPage = null;
		$this->projectId = 0;
		$this->sort = null;
	}
}
