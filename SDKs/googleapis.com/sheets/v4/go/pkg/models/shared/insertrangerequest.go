// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InsertRangeRequestShiftDimensionEnum - The dimension which will be shifted when inserting cells. If ROWS, existing cells will be shifted down. If COLUMNS, existing cells will be shifted right.
type InsertRangeRequestShiftDimensionEnum string

const (
	InsertRangeRequestShiftDimensionEnumDimensionUnspecified InsertRangeRequestShiftDimensionEnum = "DIMENSION_UNSPECIFIED"
	InsertRangeRequestShiftDimensionEnumRows                 InsertRangeRequestShiftDimensionEnum = "ROWS"
	InsertRangeRequestShiftDimensionEnumColumns              InsertRangeRequestShiftDimensionEnum = "COLUMNS"
)

func (e InsertRangeRequestShiftDimensionEnum) ToPointer() *InsertRangeRequestShiftDimensionEnum {
	return &e
}

func (e *InsertRangeRequestShiftDimensionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DIMENSION_UNSPECIFIED":
		fallthrough
	case "ROWS":
		fallthrough
	case "COLUMNS":
		*e = InsertRangeRequestShiftDimensionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InsertRangeRequestShiftDimensionEnum: %v", v)
	}
}

// InsertRangeRequest - Inserts cells into a range, shifting the existing cells over or down.
type InsertRangeRequest struct {
	// A range on a sheet. All indexes are zero-based. Indexes are half open, i.e. the start index is inclusive and the end index is exclusive -- [start_index, end_index). Missing indexes indicate the range is unbounded on that side. For example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id: 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0, end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2, end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B == sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B == sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or equal to the end index. If the start index equals the end index, then the range is empty. Empty ranges are typically not meaningful and are usually rendered in the UI as `#REF!`.
	Range *GridRange `json:"range,omitempty"`
	// The dimension which will be shifted when inserting cells. If ROWS, existing cells will be shifted down. If COLUMNS, existing cells will be shifted right.
	ShiftDimension *InsertRangeRequestShiftDimensionEnum `json:"shiftDimension,omitempty"`
}
