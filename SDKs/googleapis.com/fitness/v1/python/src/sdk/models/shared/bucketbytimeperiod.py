"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BucketByTimePeriodTypeEnum(str, Enum):
    DAY = 'day'
    WEEK = 'week'
    MONTH = 'month'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BucketByTimePeriod:
    
    time_zone_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZoneId'), 'exclude': lambda f: f is None }})
    r"""org.joda.timezone.DateTimeZone"""  
    type: Optional[BucketByTimePeriodTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    value: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})  
    