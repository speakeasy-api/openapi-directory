/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GeneratorRecipe } from "./generatorrecipe";
import { Expose, Type } from "class-transformer";

/**
 * Some item types, Login and Password, have fields used for autofill. This property indicates that purpose and is required for some item types.
 */
export enum FieldPurposeEnum {
  Unknown = "",
  Username = "USERNAME",
  Password = "PASSWORD",
  Notes = "NOTES",
}

export class FieldSection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export enum FieldTypeEnum {
  String = "STRING",
  Email = "EMAIL",
  Concealed = "CONCEALED",
  Url = "URL",
  Totp = "TOTP",
  Date = "DATE",
  MonthYear = "MONTH_YEAR",
  Menu = "MENU",
}

export class FieldInput extends SpeakeasyBase {
  /**
   * If value is not present then a new value should be generated for this field
   */
  @SpeakeasyMetadata()
  @Expose({ name: "generate" })
  generate?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * Some item types, Login and Password, have fields used for autofill. This property indicates that purpose and is required for some item types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purpose" })
  purpose?: FieldPurposeEnum;

  /**
   * The recipe is used in conjunction with the "generate" property to set the character set used to generate a new secure value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recipe" })
  @Type(() => GeneratorRecipe)
  recipe?: GeneratorRecipe;

  @SpeakeasyMetadata()
  @Expose({ name: "section" })
  @Type(() => FieldSection)
  section?: FieldSection;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: FieldTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class Field extends SpeakeasyBase {
  /**
   * For fields with a purpose of `PASSWORD` this is the entropy of the value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entropy" })
  entropy?: number;

  /**
   * If value is not present then a new value should be generated for this field
   */
  @SpeakeasyMetadata()
  @Expose({ name: "generate" })
  generate?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * Some item types, Login and Password, have fields used for autofill. This property indicates that purpose and is required for some item types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purpose" })
  purpose?: FieldPurposeEnum;

  /**
   * The recipe is used in conjunction with the "generate" property to set the character set used to generate a new secure value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recipe" })
  @Type(() => GeneratorRecipe)
  recipe?: GeneratorRecipe;

  @SpeakeasyMetadata()
  @Expose({ name: "section" })
  @Type(() => FieldSection)
  section?: FieldSection;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: FieldTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
