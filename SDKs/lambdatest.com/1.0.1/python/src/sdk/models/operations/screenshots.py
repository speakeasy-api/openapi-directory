"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import accessdenied as shared_accessdenied
from ..shared import forbidden as shared_forbidden
from ..shared import screenshot_details as shared_screenshot_details
from ..shared import screenshot_not_found as shared_screenshot_not_found
from typing import Optional


@dataclasses.dataclass
class ScreenshotsSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class ScreenshotsRequest:
    
    test_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'test_id', 'style': 'simple', 'explode': False }})
    r"""Test ID that details you want to fetch"""  
    

@dataclasses.dataclass
class ScreenshotsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    access_denied: Optional[shared_accessdenied.AccessDenied] = dataclasses.field(default=None)
    r"""Access denied. Auth error."""  
    forbidden: Optional[shared_forbidden.Forbidden] = dataclasses.field(default=None)
    r"""Access denied. Auth error."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    screenshot_details: Optional[shared_screenshot_details.ScreenshotDetails] = dataclasses.field(default=None)
    r"""successful operation"""  
    screenshot_not_found: Optional[shared_screenshot_not_found.ScreenshotNotFound] = dataclasses.field(default=None)
    r"""Resource not found"""  
    