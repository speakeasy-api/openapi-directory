/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IndexEntity - Index is not used as an independent entity, it is retrieved as part of a Table entity.
 */
public class IndexEntity {
    /**
     * Custom engine specific features.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFeatures")
    public java.util.Map<String, Object> customFeatures;

    public IndexEntity withCustomFeatures(java.util.Map<String, Object> customFeatures) {
        this.customFeatures = customFeatures;
        return this;
    }
    
    /**
     * The name of the index.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public IndexEntity withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Table columns used as part of the Index, for example B-TREE index should list the columns which constitutes the index.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableColumns")
    public String[] tableColumns;

    public IndexEntity withTableColumns(String[] tableColumns) {
        this.tableColumns = tableColumns;
        return this;
    }
    
    /**
     * Type of index, for example B-TREE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public IndexEntity withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Boolean value indicating whether the index is unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unique")
    public Boolean unique;

    public IndexEntity withUnique(Boolean unique) {
        this.unique = unique;
        return this;
    }
    
    public IndexEntity(){}
}
