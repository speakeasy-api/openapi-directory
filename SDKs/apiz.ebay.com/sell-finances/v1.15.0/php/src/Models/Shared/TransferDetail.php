<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TransferDetail - This type is used by the <b>transferDetail</b> container, which provides more details about the transfer and the charge(s) associated with the transfer.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TransferDetail
{
    /**
     * This type is used by the <b>balanceAdjustment</b> container, which shows the seller payout balance that will be applied toward the charges outlined in the <b>charges</b> array.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BalanceAdjustment $balanceAdjustment
     */
	#[\JMS\Serializer\Annotation\SerializedName('balanceAdjustment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BalanceAdjustment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BalanceAdjustment $balanceAdjustment = null;
    
    /**
     * This container is an array of one or more charges related to the transfer. Charges can be related to an order cancellation, order return, case, payment dispute, etc.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Charge> $charges
     */
	#[\JMS\Serializer\Annotation\SerializedName('charges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Charge>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $charges = null;
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Amount $totalChargeNetAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalChargeNetAmount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $totalChargeNetAmount = null;
    
	public function __construct()
	{
		$this->balanceAdjustment = null;
		$this->charges = null;
		$this->totalChargeNetAmount = null;
	}
}
