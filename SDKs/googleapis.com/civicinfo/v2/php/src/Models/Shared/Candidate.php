<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Candidate - Information about a candidate running for elected office.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Candidate
{
    /**
     * The URL for the candidate's campaign web site.
     * 
     * @var ?string $candidateUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('candidateUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $candidateUrl = null;
    
    /**
     * A list of known (social) media channels for this candidate.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Channel> $channels
     */
	#[\JMS\Serializer\Annotation\SerializedName('channels')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Channel>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $channels = null;
    
    /**
     * The email address for the candidate's campaign.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * The candidate's name. If this is a joint ticket it will indicate the name of the candidate at the top of a ticket followed by a / and that name of candidate at the bottom of the ticket. e.g. "Mitt Romney / Paul Ryan"
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The order the candidate appears on the ballot for this contest.
     * 
     * @var ?string $orderOnBallot
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderOnBallot')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $orderOnBallot = null;
    
    /**
     * The full name of the party the candidate is a member of.
     * 
     * @var ?string $party
     */
	#[\JMS\Serializer\Annotation\SerializedName('party')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $party = null;
    
    /**
     * The voice phone number for the candidate's campaign office.
     * 
     * @var ?string $phone
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phone = null;
    
    /**
     * A URL for a photo of the candidate.
     * 
     * @var ?string $photoUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('photoUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $photoUrl = null;
    
	public function __construct()
	{
		$this->candidateUrl = null;
		$this->channels = null;
		$this->email = null;
		$this->name = null;
		$this->orderOnBallot = null;
		$this->party = null;
		$this->phone = null;
		$this->photoUrl = null;
	}
}
