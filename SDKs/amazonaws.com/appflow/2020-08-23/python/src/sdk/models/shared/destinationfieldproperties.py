"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import writeoperationtype_enum as shared_writeoperationtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DestinationFieldProperties:
    r"""The properties that can be applied to a field when connector is being used as a destination."""
    
    is_creatable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCreatable'), 'exclude': lambda f: f is None }})  
    is_defaulted_on_create: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDefaultedOnCreate'), 'exclude': lambda f: f is None }})  
    is_nullable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isNullable'), 'exclude': lambda f: f is None }})  
    is_updatable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isUpdatable'), 'exclude': lambda f: f is None }})  
    is_upsertable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isUpsertable'), 'exclude': lambda f: f is None }})  
    supported_write_operations: Optional[list[shared_writeoperationtype_enum.WriteOperationTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportedWriteOperations'), 'exclude': lambda f: f is None }})  
    