/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class WebinarsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class WebinarsRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
   *
   * The page number of the current page in the returned records.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_number",
  })
  pageNumber?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class WebinarsUserListWebinars extends SpeakeasyBase {
  /**
   * Webinar Description. The length of agenda gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "agenda" })
  agenda?: string;

  /**
   * Time of webinar creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * Meeting duration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * ID of the host of the webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host_id" })
  hostId?: string;

  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Join URL of the webinar (using which others can join the webinar).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "join_url" })
  joinUrl?: string;

  /**
   * Scheduled start time of the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * [Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) for the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;

  /**
   * Meeting topic.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;

  /**
   * Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Unique identifier of a Webinar. Each webinar instance will generate its own UUID. Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;
}

/**
 * Pagination Object.
 */
export class WebinarsUserList extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
   *
   * @remarks
   *
   * The page number of the current results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_number" })
  pageNumber?: number;

  /**
   * The number of records returned with a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * The total number of all the records available across pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;

  /**
   * List of webinar objects.
   */
  @SpeakeasyMetadata({ elemType: WebinarsUserListWebinars })
  @Expose({ name: "webinars" })
  @Type(() => WebinarsUserListWebinars)
  webinars?: WebinarsUserListWebinars[];
}

export class WebinarsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * List of webinar objects returned.
   */
  @SpeakeasyMetadata()
  userList?: WebinarsUserList;
}
