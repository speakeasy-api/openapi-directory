// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DiskSnapshotStateEnum string

const (
	DiskSnapshotStateEnumPending   DiskSnapshotStateEnum = "pending"
	DiskSnapshotStateEnumCompleted DiskSnapshotStateEnum = "completed"
	DiskSnapshotStateEnumError     DiskSnapshotStateEnum = "error"
	DiskSnapshotStateEnumUnknown   DiskSnapshotStateEnum = "unknown"
)

func (e DiskSnapshotStateEnum) ToPointer() *DiskSnapshotStateEnum {
	return &e
}

func (e *DiskSnapshotStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "completed":
		fallthrough
	case "error":
		fallthrough
	case "unknown":
		*e = DiskSnapshotStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DiskSnapshotStateEnum: %v", v)
	}
}
