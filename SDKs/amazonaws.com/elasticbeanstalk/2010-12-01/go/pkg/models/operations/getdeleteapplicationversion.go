// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteApplicationVersionActionEnum
type GETDeleteApplicationVersionActionEnum string

const (
	GETDeleteApplicationVersionActionEnumDeleteApplicationVersion GETDeleteApplicationVersionActionEnum = "DeleteApplicationVersion"
)

func (e *GETDeleteApplicationVersionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteApplicationVersion":
		*e = GETDeleteApplicationVersionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteApplicationVersionActionEnum: %s", s)
	}
}

// GETDeleteApplicationVersionVersionEnum
type GETDeleteApplicationVersionVersionEnum string

const (
	GETDeleteApplicationVersionVersionEnumTwoThousandAndTen1201 GETDeleteApplicationVersionVersionEnum = "2010-12-01"
)

func (e *GETDeleteApplicationVersionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETDeleteApplicationVersionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteApplicationVersionVersionEnum: %s", s)
	}
}

type GETDeleteApplicationVersionRequest struct {
	Action GETDeleteApplicationVersionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the application to which the version belongs.
	ApplicationName string `queryParam:"style=form,explode=true,name=ApplicationName"`
	// Set to <code>true</code> to delete the source bundle from your storage bucket. Otherwise, the application version is deleted only from Elastic Beanstalk and the source bundle remains in Amazon S3.
	DeleteSourceBundle *bool                                  `queryParam:"style=form,explode=true,name=DeleteSourceBundle"`
	Version            GETDeleteApplicationVersionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The label of the version to delete.
	VersionLabel      string  `queryParam:"style=form,explode=true,name=VersionLabel"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteApplicationVersionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
