/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const ReposUploadReleaseAssetServerList = [
  /**
   * The URL origin (protocol + host name + port) is included in `upload_url` returned in the response of the "Create a release" endpoint
   */
  "https://uploads.github.com",
] as const;

export class ReposUploadReleaseAssetRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/octet-stream" })
  requestBody?: Uint8Array;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=label" })
  label?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name: string;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * The unique identifier of the release.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=release_id",
  })
  releaseId: number;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class ReposUploadReleaseAssetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response for successful upload
   */
  @SpeakeasyMetadata()
  releaseAsset?: shared.ReleaseAsset;
}
