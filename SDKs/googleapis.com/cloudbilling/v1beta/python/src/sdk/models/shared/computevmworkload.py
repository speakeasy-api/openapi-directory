"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import guestaccelerator as shared_guestaccelerator
from ..shared import machinetype as shared_machinetype
from ..shared import persistentdisk as shared_persistentdisk
from ..shared import usage as shared_usage
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComputeVMWorkload:
    r"""Specificies usage of a set of identical compute VM instances."""
    
    enable_confidential_compute: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableConfidentialCompute'), 'exclude': lambda f: f is None }})
    r"""Defines whether each instance has confidential compute enabled."""  
    guest_accelerator: Optional[shared_guestaccelerator.GuestAccelerator] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guestAccelerator'), 'exclude': lambda f: f is None }})
    r"""Specification of a set of guest accelerators attached to a machine."""  
    instances_running: Optional[shared_usage.Usage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instancesRunning'), 'exclude': lambda f: f is None }})
    r"""An amount of usage over a time frame."""  
    licenses: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('licenses'), 'exclude': lambda f: f is None }})
    r"""Premium image licenses used by each instance."""  
    machine_type: Optional[shared_machinetype.MachineType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineType'), 'exclude': lambda f: f is None }})
    r"""Specification of machine series, memory, and number of vCPUs."""  
    persistent_disks: Optional[list[shared_persistentdisk.PersistentDisk]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('persistentDisks'), 'exclude': lambda f: f is None }})
    r"""Persistent disks attached to each instance. Must include a boot disk."""  
    preemptible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preemptible'), 'exclude': lambda f: f is None }})
    r"""Defines whether each instance is preemptible."""  
    region: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region'), 'exclude': lambda f: f is None }})
    r"""The [region](https://cloud.google.com/compute/docs/regions-zones) where the VMs run. For example: \\"us-central1\\"."""  
    