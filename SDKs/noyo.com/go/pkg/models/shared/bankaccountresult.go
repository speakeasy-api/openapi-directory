// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BankAccountResultStatusEnum - The bank account status
type BankAccountResultStatusEnum string

const (
	BankAccountResultStatusEnumCreated BankAccountResultStatusEnum = "created"
	BankAccountResultStatusEnumWiped   BankAccountResultStatusEnum = "wiped"
)

func (e *BankAccountResultStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "created":
		fallthrough
	case "wiped":
		*e = BankAccountResultStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BankAccountResultStatusEnum: %s", s)
	}
}

// BankAccountResult - Successful Response - Returns a single Bank Account
type BankAccountResult struct {
	// Account number
	AccountNumber string `json:"account_number"`
	// Unique identifier of the associated application in Noyo
	ApplicationID string `json:"application_id"`
	// Name of the bank
	BankName string `json:"bank_name"`
	// The date the record was created
	Created int64 `json:"created"`
	// Unique identifier of the record in Noyo
	ID string `json:"id"`
	// Whether the account is a checking account
	IsChecking bool `json:"is_checking"`
	// The date the record was last updated
	Modified int64 `json:"modified"`
	// Routing number
	RoutingNumber string `json:"routing_number"`
	// The bank account status
	Status BankAccountResultStatusEnum `json:"status"`
	// Current version of the record
	Version string `json:"version"`
}
