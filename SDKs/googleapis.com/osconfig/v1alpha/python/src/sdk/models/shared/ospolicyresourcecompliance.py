"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ospolicyresourcecomplianceexecresourceoutput as shared_ospolicyresourcecomplianceexecresourceoutput
from ..shared import ospolicyresourceconfigstep as shared_ospolicyresourceconfigstep
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OSPolicyResourceComplianceStateEnum(str, Enum):
    r"""Compliance state of the OS policy resource."""
    OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED = 'OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED'
    COMPLIANT = 'COMPLIANT'
    NON_COMPLIANT = 'NON_COMPLIANT'
    UNKNOWN = 'UNKNOWN'
    NO_OS_POLICIES_APPLICABLE = 'NO_OS_POLICIES_APPLICABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OSPolicyResourceCompliance:
    r"""Compliance data for an OS policy resource."""
    
    config_steps: Optional[list[shared_ospolicyresourceconfigstep.OSPolicyResourceConfigStep]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configSteps'), 'exclude': lambda f: f is None }})
    r"""Ordered list of configuration steps taken by the agent for the OS policy resource."""  
    exec_resource_output: Optional[shared_ospolicyresourcecomplianceexecresourceoutput.OSPolicyResourceComplianceExecResourceOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('execResourceOutput'), 'exclude': lambda f: f is None }})
    r"""ExecResource specific output."""  
    os_policy_resource_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('osPolicyResourceId'), 'exclude': lambda f: f is None }})
    r"""The id of the OS policy resource."""  
    state: Optional[OSPolicyResourceComplianceStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Compliance state of the OS policy resource."""  
    