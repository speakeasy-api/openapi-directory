"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Probe = void 0;
var utils_1 = require("../../../internal/utils");
var execaction_1 = require("./execaction");
var grpcaction_1 = require("./grpcaction");
var httpgetaction_1 = require("./httpgetaction");
var tcpsocketaction_1 = require("./tcpsocketaction");
var class_transformer_1 = require("class-transformer");
/**
 * Not supported by Cloud Run Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 */
var Probe = /** @class */ (function (_super) {
    __extends(Probe, _super);
    function Probe() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exec" }),
        (0, class_transformer_1.Type)(function () { return execaction_1.ExecAction; }),
        __metadata("design:type", execaction_1.ExecAction)
    ], Probe.prototype, "exec", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "failureThreshold" }),
        __metadata("design:type", Number)
    ], Probe.prototype, "failureThreshold", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "grpc" }),
        (0, class_transformer_1.Type)(function () { return grpcaction_1.GRPCAction; }),
        __metadata("design:type", grpcaction_1.GRPCAction)
    ], Probe.prototype, "grpc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "httpGet" }),
        (0, class_transformer_1.Type)(function () { return httpgetaction_1.HTTPGetAction; }),
        __metadata("design:type", httpgetaction_1.HTTPGetAction)
    ], Probe.prototype, "httpGet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "initialDelaySeconds" }),
        __metadata("design:type", Number)
    ], Probe.prototype, "initialDelaySeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "periodSeconds" }),
        __metadata("design:type", Number)
    ], Probe.prototype, "periodSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "successThreshold" }),
        __metadata("design:type", Number)
    ], Probe.prototype, "successThreshold", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tcpSocket" }),
        (0, class_transformer_1.Type)(function () { return tcpsocketaction_1.TCPSocketAction; }),
        __metadata("design:type", tcpsocketaction_1.TCPSocketAction)
    ], Probe.prototype, "tcpSocket", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timeoutSeconds" }),
        __metadata("design:type", Number)
    ], Probe.prototype, "timeoutSeconds", void 0);
    return Probe;
}(utils_1.SpeakeasyBase));
exports.Probe = Probe;
