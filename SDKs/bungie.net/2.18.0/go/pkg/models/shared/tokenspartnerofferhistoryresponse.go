// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type TokensPartnerOfferHistoryResponseMembershipTypeEnum string

const (
	TokensPartnerOfferHistoryResponseMembershipTypeEnumZero                   TokensPartnerOfferHistoryResponseMembershipTypeEnum = "0"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumOne                    TokensPartnerOfferHistoryResponseMembershipTypeEnum = "1"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumTwo                    TokensPartnerOfferHistoryResponseMembershipTypeEnum = "2"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumThree                  TokensPartnerOfferHistoryResponseMembershipTypeEnum = "3"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumFour                   TokensPartnerOfferHistoryResponseMembershipTypeEnum = "4"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumFive                   TokensPartnerOfferHistoryResponseMembershipTypeEnum = "5"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumSix                    TokensPartnerOfferHistoryResponseMembershipTypeEnum = "6"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumTen                    TokensPartnerOfferHistoryResponseMembershipTypeEnum = "10"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumTwoHundredAndFiftyFour TokensPartnerOfferHistoryResponseMembershipTypeEnum = "254"
	TokensPartnerOfferHistoryResponseMembershipTypeEnumMinus1                 TokensPartnerOfferHistoryResponseMembershipTypeEnum = "-1"
)

func (e *TokensPartnerOfferHistoryResponseMembershipTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		fallthrough
	case "5":
		fallthrough
	case "6":
		fallthrough
	case "10":
		fallthrough
	case "254":
		fallthrough
	case "-1":
		*e = TokensPartnerOfferHistoryResponseMembershipTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TokensPartnerOfferHistoryResponseMembershipTypeEnum: %s", s)
	}
}

type TokensPartnerOfferHistoryResponse struct {
	ApplyDate            *time.Time
	IsConsumable         *bool
	LocalizedDescription *string
	LocalizedName        *string
	MembershipID         *int64
	MembershipType       *TokensPartnerOfferHistoryResponseMembershipTypeEnum
	PartnerOfferKey      *string
	QuantityApplied      *int
}
