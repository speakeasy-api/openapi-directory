// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InventorySourceCommitmentEnum - Whether the inventory source has a guaranteed or non-guaranteed delivery.
type InventorySourceCommitmentEnum string

const (
	InventorySourceCommitmentEnumInventorySourceCommitmentUnspecified   InventorySourceCommitmentEnum = "INVENTORY_SOURCE_COMMITMENT_UNSPECIFIED"
	InventorySourceCommitmentEnumInventorySourceCommitmentGuaranteed    InventorySourceCommitmentEnum = "INVENTORY_SOURCE_COMMITMENT_GUARANTEED"
	InventorySourceCommitmentEnumInventorySourceCommitmentNonGuaranteed InventorySourceCommitmentEnum = "INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED"
)

func (e InventorySourceCommitmentEnum) ToPointer() *InventorySourceCommitmentEnum {
	return &e
}

func (e *InventorySourceCommitmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVENTORY_SOURCE_COMMITMENT_UNSPECIFIED":
		fallthrough
	case "INVENTORY_SOURCE_COMMITMENT_GUARANTEED":
		fallthrough
	case "INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED":
		*e = InventorySourceCommitmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InventorySourceCommitmentEnum: %v", v)
	}
}

// InventorySourceDeliveryMethodEnum - The delivery method of the inventory source. * For non-guaranteed inventory sources, the only acceptable value is `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`. * For guaranteed inventory sources, acceptable values are `INVENTORY_SOURCE_DELIVERY_METHOD_TAG` and `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`.
type InventorySourceDeliveryMethodEnum string

const (
	InventorySourceDeliveryMethodEnumInventorySourceDeliveryMethodUnspecified  InventorySourceDeliveryMethodEnum = "INVENTORY_SOURCE_DELIVERY_METHOD_UNSPECIFIED"
	InventorySourceDeliveryMethodEnumInventorySourceDeliveryMethodProgrammatic InventorySourceDeliveryMethodEnum = "INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC"
	InventorySourceDeliveryMethodEnumInventorySourceDeliveryMethodTag          InventorySourceDeliveryMethodEnum = "INVENTORY_SOURCE_DELIVERY_METHOD_TAG"
)

func (e InventorySourceDeliveryMethodEnum) ToPointer() *InventorySourceDeliveryMethodEnum {
	return &e
}

func (e *InventorySourceDeliveryMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVENTORY_SOURCE_DELIVERY_METHOD_UNSPECIFIED":
		fallthrough
	case "INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC":
		fallthrough
	case "INVENTORY_SOURCE_DELIVERY_METHOD_TAG":
		*e = InventorySourceDeliveryMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InventorySourceDeliveryMethodEnum: %v", v)
	}
}

// InventorySourceExchangeEnum - The exchange to which the inventory source belongs.
type InventorySourceExchangeEnum string

const (
	InventorySourceExchangeEnumExchangeUnspecified       InventorySourceExchangeEnum = "EXCHANGE_UNSPECIFIED"
	InventorySourceExchangeEnumExchangeGoogleAdManager   InventorySourceExchangeEnum = "EXCHANGE_GOOGLE_AD_MANAGER"
	InventorySourceExchangeEnumExchangeAppnexus          InventorySourceExchangeEnum = "EXCHANGE_APPNEXUS"
	InventorySourceExchangeEnumExchangeBrightroll        InventorySourceExchangeEnum = "EXCHANGE_BRIGHTROLL"
	InventorySourceExchangeEnumExchangeAdform            InventorySourceExchangeEnum = "EXCHANGE_ADFORM"
	InventorySourceExchangeEnumExchangeAdmeta            InventorySourceExchangeEnum = "EXCHANGE_ADMETA"
	InventorySourceExchangeEnumExchangeAdmixer           InventorySourceExchangeEnum = "EXCHANGE_ADMIXER"
	InventorySourceExchangeEnumExchangeAdsmogo           InventorySourceExchangeEnum = "EXCHANGE_ADSMOGO"
	InventorySourceExchangeEnumExchangeAdswizz           InventorySourceExchangeEnum = "EXCHANGE_ADSWIZZ"
	InventorySourceExchangeEnumExchangeBidswitch         InventorySourceExchangeEnum = "EXCHANGE_BIDSWITCH"
	InventorySourceExchangeEnumExchangeBrightrollDisplay InventorySourceExchangeEnum = "EXCHANGE_BRIGHTROLL_DISPLAY"
	InventorySourceExchangeEnumExchangeCadreon           InventorySourceExchangeEnum = "EXCHANGE_CADREON"
	InventorySourceExchangeEnumExchangeDailymotion       InventorySourceExchangeEnum = "EXCHANGE_DAILYMOTION"
	InventorySourceExchangeEnumExchangeFive              InventorySourceExchangeEnum = "EXCHANGE_FIVE"
	InventorySourceExchangeEnumExchangeFluct             InventorySourceExchangeEnum = "EXCHANGE_FLUCT"
	InventorySourceExchangeEnumExchangeFreewheel         InventorySourceExchangeEnum = "EXCHANGE_FREEWHEEL"
	InventorySourceExchangeEnumExchangeGeniee            InventorySourceExchangeEnum = "EXCHANGE_GENIEE"
	InventorySourceExchangeEnumExchangeGumgum            InventorySourceExchangeEnum = "EXCHANGE_GUMGUM"
	InventorySourceExchangeEnumExchangeImobile           InventorySourceExchangeEnum = "EXCHANGE_IMOBILE"
	InventorySourceExchangeEnumExchangeIbillboard        InventorySourceExchangeEnum = "EXCHANGE_IBILLBOARD"
	InventorySourceExchangeEnumExchangeImproveDigital    InventorySourceExchangeEnum = "EXCHANGE_IMPROVE_DIGITAL"
	InventorySourceExchangeEnumExchangeIndex             InventorySourceExchangeEnum = "EXCHANGE_INDEX"
	InventorySourceExchangeEnumExchangeKargo             InventorySourceExchangeEnum = "EXCHANGE_KARGO"
	InventorySourceExchangeEnumExchangeMicroad           InventorySourceExchangeEnum = "EXCHANGE_MICROAD"
	InventorySourceExchangeEnumExchangeMopub             InventorySourceExchangeEnum = "EXCHANGE_MOPUB"
	InventorySourceExchangeEnumExchangeNend              InventorySourceExchangeEnum = "EXCHANGE_NEND"
	InventorySourceExchangeEnumExchangeOneByAolDisplay   InventorySourceExchangeEnum = "EXCHANGE_ONE_BY_AOL_DISPLAY"
	InventorySourceExchangeEnumExchangeOneByAolMobile    InventorySourceExchangeEnum = "EXCHANGE_ONE_BY_AOL_MOBILE"
	InventorySourceExchangeEnumExchangeOneByAolVideo     InventorySourceExchangeEnum = "EXCHANGE_ONE_BY_AOL_VIDEO"
	InventorySourceExchangeEnumExchangeOoyala            InventorySourceExchangeEnum = "EXCHANGE_OOYALA"
	InventorySourceExchangeEnumExchangeOpenx             InventorySourceExchangeEnum = "EXCHANGE_OPENX"
	InventorySourceExchangeEnumExchangePermodo           InventorySourceExchangeEnum = "EXCHANGE_PERMODO"
	InventorySourceExchangeEnumExchangePlatformone       InventorySourceExchangeEnum = "EXCHANGE_PLATFORMONE"
	InventorySourceExchangeEnumExchangePlatformid        InventorySourceExchangeEnum = "EXCHANGE_PLATFORMID"
	InventorySourceExchangeEnumExchangePubmatic          InventorySourceExchangeEnum = "EXCHANGE_PUBMATIC"
	InventorySourceExchangeEnumExchangePulsepoint        InventorySourceExchangeEnum = "EXCHANGE_PULSEPOINT"
	InventorySourceExchangeEnumExchangeRevenuemax        InventorySourceExchangeEnum = "EXCHANGE_REVENUEMAX"
	InventorySourceExchangeEnumExchangeRubicon           InventorySourceExchangeEnum = "EXCHANGE_RUBICON"
	InventorySourceExchangeEnumExchangeSmartclip         InventorySourceExchangeEnum = "EXCHANGE_SMARTCLIP"
	InventorySourceExchangeEnumExchangeSmartrtb          InventorySourceExchangeEnum = "EXCHANGE_SMARTRTB"
	InventorySourceExchangeEnumExchangeSmartstreamtv     InventorySourceExchangeEnum = "EXCHANGE_SMARTSTREAMTV"
	InventorySourceExchangeEnumExchangeSovrn             InventorySourceExchangeEnum = "EXCHANGE_SOVRN"
	InventorySourceExchangeEnumExchangeSpotxchange       InventorySourceExchangeEnum = "EXCHANGE_SPOTXCHANGE"
	InventorySourceExchangeEnumExchangeStroer            InventorySourceExchangeEnum = "EXCHANGE_STROER"
	InventorySourceExchangeEnumExchangeTeadstv           InventorySourceExchangeEnum = "EXCHANGE_TEADSTV"
	InventorySourceExchangeEnumExchangeTelaria           InventorySourceExchangeEnum = "EXCHANGE_TELARIA"
	InventorySourceExchangeEnumExchangeTvn               InventorySourceExchangeEnum = "EXCHANGE_TVN"
	InventorySourceExchangeEnumExchangeUnited            InventorySourceExchangeEnum = "EXCHANGE_UNITED"
	InventorySourceExchangeEnumExchangeYieldlab          InventorySourceExchangeEnum = "EXCHANGE_YIELDLAB"
	InventorySourceExchangeEnumExchangeYieldmo           InventorySourceExchangeEnum = "EXCHANGE_YIELDMO"
	InventorySourceExchangeEnumExchangeUnrulyx           InventorySourceExchangeEnum = "EXCHANGE_UNRULYX"
	InventorySourceExchangeEnumExchangeOpen8             InventorySourceExchangeEnum = "EXCHANGE_OPEN8"
	InventorySourceExchangeEnumExchangeTriton            InventorySourceExchangeEnum = "EXCHANGE_TRITON"
	InventorySourceExchangeEnumExchangeTriplelift        InventorySourceExchangeEnum = "EXCHANGE_TRIPLELIFT"
	InventorySourceExchangeEnumExchangeTaboola           InventorySourceExchangeEnum = "EXCHANGE_TABOOLA"
	InventorySourceExchangeEnumExchangeInmobi            InventorySourceExchangeEnum = "EXCHANGE_INMOBI"
	InventorySourceExchangeEnumExchangeSmaato            InventorySourceExchangeEnum = "EXCHANGE_SMAATO"
	InventorySourceExchangeEnumExchangeAja               InventorySourceExchangeEnum = "EXCHANGE_AJA"
	InventorySourceExchangeEnumExchangeSupership         InventorySourceExchangeEnum = "EXCHANGE_SUPERSHIP"
	InventorySourceExchangeEnumExchangeNexstarDigital    InventorySourceExchangeEnum = "EXCHANGE_NEXSTAR_DIGITAL"
	InventorySourceExchangeEnumExchangeWaze              InventorySourceExchangeEnum = "EXCHANGE_WAZE"
	InventorySourceExchangeEnumExchangeSoundcast         InventorySourceExchangeEnum = "EXCHANGE_SOUNDCAST"
	InventorySourceExchangeEnumExchangeSharethrough      InventorySourceExchangeEnum = "EXCHANGE_SHARETHROUGH"
	InventorySourceExchangeEnumExchangeFyber             InventorySourceExchangeEnum = "EXCHANGE_FYBER"
	InventorySourceExchangeEnumExchangeRedForPublishers  InventorySourceExchangeEnum = "EXCHANGE_RED_FOR_PUBLISHERS"
	InventorySourceExchangeEnumExchangeMedianet          InventorySourceExchangeEnum = "EXCHANGE_MEDIANET"
	InventorySourceExchangeEnumExchangeTapjoy            InventorySourceExchangeEnum = "EXCHANGE_TAPJOY"
	InventorySourceExchangeEnumExchangeVistar            InventorySourceExchangeEnum = "EXCHANGE_VISTAR"
	InventorySourceExchangeEnumExchangeDax               InventorySourceExchangeEnum = "EXCHANGE_DAX"
	InventorySourceExchangeEnumExchangeJcd               InventorySourceExchangeEnum = "EXCHANGE_JCD"
	InventorySourceExchangeEnumExchangePlaceExchange     InventorySourceExchangeEnum = "EXCHANGE_PLACE_EXCHANGE"
	InventorySourceExchangeEnumExchangeApplovin          InventorySourceExchangeEnum = "EXCHANGE_APPLOVIN"
	InventorySourceExchangeEnumExchangeConnatix          InventorySourceExchangeEnum = "EXCHANGE_CONNATIX"
	InventorySourceExchangeEnumExchangeResetDigital      InventorySourceExchangeEnum = "EXCHANGE_RESET_DIGITAL"
	InventorySourceExchangeEnumExchangeHivestack         InventorySourceExchangeEnum = "EXCHANGE_HIVESTACK"
)

func (e InventorySourceExchangeEnum) ToPointer() *InventorySourceExchangeEnum {
	return &e
}

func (e *InventorySourceExchangeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCHANGE_UNSPECIFIED":
		fallthrough
	case "EXCHANGE_GOOGLE_AD_MANAGER":
		fallthrough
	case "EXCHANGE_APPNEXUS":
		fallthrough
	case "EXCHANGE_BRIGHTROLL":
		fallthrough
	case "EXCHANGE_ADFORM":
		fallthrough
	case "EXCHANGE_ADMETA":
		fallthrough
	case "EXCHANGE_ADMIXER":
		fallthrough
	case "EXCHANGE_ADSMOGO":
		fallthrough
	case "EXCHANGE_ADSWIZZ":
		fallthrough
	case "EXCHANGE_BIDSWITCH":
		fallthrough
	case "EXCHANGE_BRIGHTROLL_DISPLAY":
		fallthrough
	case "EXCHANGE_CADREON":
		fallthrough
	case "EXCHANGE_DAILYMOTION":
		fallthrough
	case "EXCHANGE_FIVE":
		fallthrough
	case "EXCHANGE_FLUCT":
		fallthrough
	case "EXCHANGE_FREEWHEEL":
		fallthrough
	case "EXCHANGE_GENIEE":
		fallthrough
	case "EXCHANGE_GUMGUM":
		fallthrough
	case "EXCHANGE_IMOBILE":
		fallthrough
	case "EXCHANGE_IBILLBOARD":
		fallthrough
	case "EXCHANGE_IMPROVE_DIGITAL":
		fallthrough
	case "EXCHANGE_INDEX":
		fallthrough
	case "EXCHANGE_KARGO":
		fallthrough
	case "EXCHANGE_MICROAD":
		fallthrough
	case "EXCHANGE_MOPUB":
		fallthrough
	case "EXCHANGE_NEND":
		fallthrough
	case "EXCHANGE_ONE_BY_AOL_DISPLAY":
		fallthrough
	case "EXCHANGE_ONE_BY_AOL_MOBILE":
		fallthrough
	case "EXCHANGE_ONE_BY_AOL_VIDEO":
		fallthrough
	case "EXCHANGE_OOYALA":
		fallthrough
	case "EXCHANGE_OPENX":
		fallthrough
	case "EXCHANGE_PERMODO":
		fallthrough
	case "EXCHANGE_PLATFORMONE":
		fallthrough
	case "EXCHANGE_PLATFORMID":
		fallthrough
	case "EXCHANGE_PUBMATIC":
		fallthrough
	case "EXCHANGE_PULSEPOINT":
		fallthrough
	case "EXCHANGE_REVENUEMAX":
		fallthrough
	case "EXCHANGE_RUBICON":
		fallthrough
	case "EXCHANGE_SMARTCLIP":
		fallthrough
	case "EXCHANGE_SMARTRTB":
		fallthrough
	case "EXCHANGE_SMARTSTREAMTV":
		fallthrough
	case "EXCHANGE_SOVRN":
		fallthrough
	case "EXCHANGE_SPOTXCHANGE":
		fallthrough
	case "EXCHANGE_STROER":
		fallthrough
	case "EXCHANGE_TEADSTV":
		fallthrough
	case "EXCHANGE_TELARIA":
		fallthrough
	case "EXCHANGE_TVN":
		fallthrough
	case "EXCHANGE_UNITED":
		fallthrough
	case "EXCHANGE_YIELDLAB":
		fallthrough
	case "EXCHANGE_YIELDMO":
		fallthrough
	case "EXCHANGE_UNRULYX":
		fallthrough
	case "EXCHANGE_OPEN8":
		fallthrough
	case "EXCHANGE_TRITON":
		fallthrough
	case "EXCHANGE_TRIPLELIFT":
		fallthrough
	case "EXCHANGE_TABOOLA":
		fallthrough
	case "EXCHANGE_INMOBI":
		fallthrough
	case "EXCHANGE_SMAATO":
		fallthrough
	case "EXCHANGE_AJA":
		fallthrough
	case "EXCHANGE_SUPERSHIP":
		fallthrough
	case "EXCHANGE_NEXSTAR_DIGITAL":
		fallthrough
	case "EXCHANGE_WAZE":
		fallthrough
	case "EXCHANGE_SOUNDCAST":
		fallthrough
	case "EXCHANGE_SHARETHROUGH":
		fallthrough
	case "EXCHANGE_FYBER":
		fallthrough
	case "EXCHANGE_RED_FOR_PUBLISHERS":
		fallthrough
	case "EXCHANGE_MEDIANET":
		fallthrough
	case "EXCHANGE_TAPJOY":
		fallthrough
	case "EXCHANGE_VISTAR":
		fallthrough
	case "EXCHANGE_DAX":
		fallthrough
	case "EXCHANGE_JCD":
		fallthrough
	case "EXCHANGE_PLACE_EXCHANGE":
		fallthrough
	case "EXCHANGE_APPLOVIN":
		fallthrough
	case "EXCHANGE_CONNATIX":
		fallthrough
	case "EXCHANGE_RESET_DIGITAL":
		fallthrough
	case "EXCHANGE_HIVESTACK":
		*e = InventorySourceExchangeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InventorySourceExchangeEnum: %v", v)
	}
}

// InventorySourceInventorySourceTypeEnum - Denotes the type of the inventory source.
type InventorySourceInventorySourceTypeEnum string

const (
	InventorySourceInventorySourceTypeEnumInventorySourceTypeUnspecified    InventorySourceInventorySourceTypeEnum = "INVENTORY_SOURCE_TYPE_UNSPECIFIED"
	InventorySourceInventorySourceTypeEnumInventorySourceTypePrivate        InventorySourceInventorySourceTypeEnum = "INVENTORY_SOURCE_TYPE_PRIVATE"
	InventorySourceInventorySourceTypeEnumInventorySourceTypeAuctionPackage InventorySourceInventorySourceTypeEnum = "INVENTORY_SOURCE_TYPE_AUCTION_PACKAGE"
)

func (e InventorySourceInventorySourceTypeEnum) ToPointer() *InventorySourceInventorySourceTypeEnum {
	return &e
}

func (e *InventorySourceInventorySourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVENTORY_SOURCE_TYPE_UNSPECIFIED":
		fallthrough
	case "INVENTORY_SOURCE_TYPE_PRIVATE":
		fallthrough
	case "INVENTORY_SOURCE_TYPE_AUCTION_PACKAGE":
		*e = InventorySourceInventorySourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InventorySourceInventorySourceTypeEnum: %v", v)
	}
}

// InventorySourceInput - An inventory source.
type InventorySourceInput struct {
	// Whether the inventory source has a guaranteed or non-guaranteed delivery.
	Commitment *InventorySourceCommitmentEnum `json:"commitment,omitempty"`
	// The creative requirements of the inventory source. Not applicable for auction packages.
	CreativeConfigs []CreativeConfig `json:"creativeConfigs,omitempty"`
	// The ID in the exchange space that uniquely identifies the inventory source. Must be unique across buyers within each exchange but not necessarily unique across exchanges.
	DealID *string `json:"dealId,omitempty"`
	// The delivery method of the inventory source. * For non-guaranteed inventory sources, the only acceptable value is `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`. * For guaranteed inventory sources, acceptable values are `INVENTORY_SOURCE_DELIVERY_METHOD_TAG` and `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`.
	DeliveryMethod *InventorySourceDeliveryMethodEnum `json:"deliveryMethod,omitempty"`
	// The display name of the inventory source. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// The exchange to which the inventory source belongs.
	Exchange *InventorySourceExchangeEnum `json:"exchange,omitempty"`
	// Immutable. The ID of the guaranteed order that this inventory source belongs to. Only applicable when commitment is `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`.
	GuaranteedOrderID *string `json:"guaranteedOrderId,omitempty"`
	// Denotes the type of the inventory source.
	InventorySourceType *InventorySourceInventorySourceTypeEnum `json:"inventorySourceType,omitempty"`
	// The publisher/seller name of the inventory source.
	PublisherName *string `json:"publisherName,omitempty"`
	// The rate related settings of the inventory source.
	RateDetails *RateDetails `json:"rateDetails,omitempty"`
	// The partner or advertisers with access to the inventory source.
	ReadWriteAccessors *InventorySourceAccessors `json:"readWriteAccessors,omitempty"`
	// The status related settings of the inventory source.
	Status *InventorySourceStatusInput `json:"status,omitempty"`
	// Immutable. The unique ID of the sub-site property assigned to this inventory source.
	SubSitePropertyID *string `json:"subSitePropertyId,omitempty"`
	// A time range.
	TimeRange *TimeRange `json:"timeRange,omitempty"`
}

// InventorySourceInventorySourceProductTypeEnum - Output only. The product type of the inventory source, denoting the way through which it sells inventory.
type InventorySourceInventorySourceProductTypeEnum string

const (
	InventorySourceInventorySourceProductTypeEnumInventorySourceProductTypeUnspecified InventorySourceInventorySourceProductTypeEnum = "INVENTORY_SOURCE_PRODUCT_TYPE_UNSPECIFIED"
	InventorySourceInventorySourceProductTypeEnumPreferredDeal                         InventorySourceInventorySourceProductTypeEnum = "PREFERRED_DEAL"
	InventorySourceInventorySourceProductTypeEnumPrivateAuction                        InventorySourceInventorySourceProductTypeEnum = "PRIVATE_AUCTION"
	InventorySourceInventorySourceProductTypeEnumProgrammaticGuaranteed                InventorySourceInventorySourceProductTypeEnum = "PROGRAMMATIC_GUARANTEED"
	InventorySourceInventorySourceProductTypeEnumTagGuaranteed                         InventorySourceInventorySourceProductTypeEnum = "TAG_GUARANTEED"
	InventorySourceInventorySourceProductTypeEnumYoutubeReserve                        InventorySourceInventorySourceProductTypeEnum = "YOUTUBE_RESERVE"
	InventorySourceInventorySourceProductTypeEnumInstantReserve                        InventorySourceInventorySourceProductTypeEnum = "INSTANT_RESERVE"
	InventorySourceInventorySourceProductTypeEnumGuaranteedPackage                     InventorySourceInventorySourceProductTypeEnum = "GUARANTEED_PACKAGE"
	InventorySourceInventorySourceProductTypeEnumProgrammaticTv                        InventorySourceInventorySourceProductTypeEnum = "PROGRAMMATIC_TV"
	InventorySourceInventorySourceProductTypeEnumAuctionPackage                        InventorySourceInventorySourceProductTypeEnum = "AUCTION_PACKAGE"
)

func (e InventorySourceInventorySourceProductTypeEnum) ToPointer() *InventorySourceInventorySourceProductTypeEnum {
	return &e
}

func (e *InventorySourceInventorySourceProductTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVENTORY_SOURCE_PRODUCT_TYPE_UNSPECIFIED":
		fallthrough
	case "PREFERRED_DEAL":
		fallthrough
	case "PRIVATE_AUCTION":
		fallthrough
	case "PROGRAMMATIC_GUARANTEED":
		fallthrough
	case "TAG_GUARANTEED":
		fallthrough
	case "YOUTUBE_RESERVE":
		fallthrough
	case "INSTANT_RESERVE":
		fallthrough
	case "GUARANTEED_PACKAGE":
		fallthrough
	case "PROGRAMMATIC_TV":
		fallthrough
	case "AUCTION_PACKAGE":
		*e = InventorySourceInventorySourceProductTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InventorySourceInventorySourceProductTypeEnum: %v", v)
	}
}

// InventorySource - An inventory source.
type InventorySource struct {
	// Whether the inventory source has a guaranteed or non-guaranteed delivery.
	Commitment *InventorySourceCommitmentEnum `json:"commitment,omitempty"`
	// The creative requirements of the inventory source. Not applicable for auction packages.
	CreativeConfigs []CreativeConfig `json:"creativeConfigs,omitempty"`
	// The ID in the exchange space that uniquely identifies the inventory source. Must be unique across buyers within each exchange but not necessarily unique across exchanges.
	DealID *string `json:"dealId,omitempty"`
	// The delivery method of the inventory source. * For non-guaranteed inventory sources, the only acceptable value is `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`. * For guaranteed inventory sources, acceptable values are `INVENTORY_SOURCE_DELIVERY_METHOD_TAG` and `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`.
	DeliveryMethod *InventorySourceDeliveryMethodEnum `json:"deliveryMethod,omitempty"`
	// The display name of the inventory source. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// The exchange to which the inventory source belongs.
	Exchange *InventorySourceExchangeEnum `json:"exchange,omitempty"`
	// Immutable. The ID of the guaranteed order that this inventory source belongs to. Only applicable when commitment is `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`.
	GuaranteedOrderID *string `json:"guaranteedOrderId,omitempty"`
	// Output only. The unique ID of the inventory source. Assigned by the system.
	InventorySourceID *string `json:"inventorySourceId,omitempty"`
	// Output only. The product type of the inventory source, denoting the way through which it sells inventory.
	InventorySourceProductType *InventorySourceInventorySourceProductTypeEnum `json:"inventorySourceProductType,omitempty"`
	// Denotes the type of the inventory source.
	InventorySourceType *InventorySourceInventorySourceTypeEnum `json:"inventorySourceType,omitempty"`
	// Output only. The resource name of the inventory source.
	Name *string `json:"name,omitempty"`
	// The publisher/seller name of the inventory source.
	PublisherName *string `json:"publisherName,omitempty"`
	// The rate related settings of the inventory source.
	RateDetails *RateDetails `json:"rateDetails,omitempty"`
	// Output only. The IDs of advertisers with read-only access to the inventory source.
	ReadAdvertiserIds []string `json:"readAdvertiserIds,omitempty"`
	// Output only. The IDs of partners with read-only access to the inventory source. All advertisers of partners in this field inherit read-only access to the inventory source.
	ReadPartnerIds []string `json:"readPartnerIds,omitempty"`
	// The partner or advertisers with access to the inventory source.
	ReadWriteAccessors *InventorySourceAccessors `json:"readWriteAccessors,omitempty"`
	// The status related settings of the inventory source.
	Status *InventorySourceStatus `json:"status,omitempty"`
	// Immutable. The unique ID of the sub-site property assigned to this inventory source.
	SubSitePropertyID *string `json:"subSitePropertyId,omitempty"`
	// A time range.
	TimeRange *TimeRange `json:"timeRange,omitempty"`
	// Output only. The timestamp when the inventory source was last updated. Assigned by the system.
	UpdateTime *string `json:"updateTime,omitempty"`
}
