/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PITPolicyRuleUnitsEnum } from "./pitpolicyruleunitsenum";
import { Expose } from "class-transformer";

/**
 * A rule in the Point in Time (PIT) policy representing when to take snapshots and how long to retain them for.
 */
export class PITPolicyRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "interval" })
  interval: number;

  @SpeakeasyMetadata()
  @Expose({ name: "retentionDuration" })
  retentionDuration: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ruleID" })
  ruleID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "units" })
  units: PITPolicyRuleUnitsEnum;
}
