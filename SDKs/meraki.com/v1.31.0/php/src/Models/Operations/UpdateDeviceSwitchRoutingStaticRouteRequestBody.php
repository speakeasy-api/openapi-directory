<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateDeviceSwitchRoutingStaticRouteRequestBody
{
    /**
     * Option to advertise static route via OSPF
     * 
     * @var ?bool $advertiseViaOspfEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('advertiseViaOspfEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $advertiseViaOspfEnabled = null;
    
    /**
     * Name or description for layer 3 static route
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * IP address of the next hop device to which the device sends its traffic for the subnet
     * 
     * @var ?string $nextHopIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextHopIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextHopIp = null;
    
    /**
     * Option to prefer static route over OSPF routes
     * 
     * @var ?bool $preferOverOspfRoutesEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('preferOverOspfRoutesEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $preferOverOspfRoutesEnabled = null;
    
    /**
     * The subnet which is routed via this static route and should be specified in CIDR notation (ex. 1.2.3.0/24)
     * 
     * @var ?string $subnet
     */
	#[\JMS\Serializer\Annotation\SerializedName('subnet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subnet = null;
    
	public function __construct()
	{
		$this->advertiseViaOspfEnabled = null;
		$this->name = null;
		$this->nextHopIp = null;
		$this->preferOverOspfRoutesEnabled = null;
		$this->subnet = null;
	}
}
