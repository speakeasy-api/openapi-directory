/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PropertyDataTypeEnum } from "./propertydatatypeenum";
import { PropertyType } from "./propertytype";
import { Expose, Type } from "class-transformer";

/**
 * Contains a summary of a property associated with a model.
 */
export class AssetModelPropertySummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assetModelCompositeModelId" })
  assetModelCompositeModelId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  dataType: PropertyDataTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "dataTypeSpec" })
  dataTypeSpec?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Contains a property type, which can be one of <code>attribute</code>, <code>measurement</code>, <code>metric</code>, or <code>transform</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => PropertyType)
  type: PropertyType;

  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: string;
}
