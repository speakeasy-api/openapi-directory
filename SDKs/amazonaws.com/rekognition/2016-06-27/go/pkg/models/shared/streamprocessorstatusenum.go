// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StreamProcessorStatusEnum string

const (
	StreamProcessorStatusEnumStopped  StreamProcessorStatusEnum = "STOPPED"
	StreamProcessorStatusEnumStarting StreamProcessorStatusEnum = "STARTING"
	StreamProcessorStatusEnumRunning  StreamProcessorStatusEnum = "RUNNING"
	StreamProcessorStatusEnumFailed   StreamProcessorStatusEnum = "FAILED"
	StreamProcessorStatusEnumStopping StreamProcessorStatusEnum = "STOPPING"
	StreamProcessorStatusEnumUpdating StreamProcessorStatusEnum = "UPDATING"
)

func (e *StreamProcessorStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STOPPED":
		fallthrough
	case "STARTING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FAILED":
		fallthrough
	case "STOPPING":
		fallthrough
	case "UPDATING":
		*e = StreamProcessorStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StreamProcessorStatusEnum: %s", s)
	}
}
