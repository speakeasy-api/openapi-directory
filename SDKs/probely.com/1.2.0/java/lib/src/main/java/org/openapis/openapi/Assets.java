/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import java.time.OffsetDateTime;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

/**
 * Other resources a scan required access to (e.g. the domain where an
 * API is being served) should be added here.
 * You can also configure custom headers and cookies for each asset.
 * 
 */
public class Assets {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Assets(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Delete asset
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsIdResponse deleteTargetsTargetIdAssetsId(org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsIdPathParams.class, baseUrl, "/targets/{target_id}/assets/{id}/", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsIdResponse res = new org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsIdResponse() {{
            deleteTargetsTargetIdAssetsId401ApplicationJSONObject = null;
            deleteTargetsTargetIdAssetsId403ApplicationJSONObject = null;
            deleteTargetsTargetIdAssetsId404ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsId401ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsId401ApplicationJSON.class);
                res.deleteTargetsTargetIdAssetsId401ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 403) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsId403ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsId403ApplicationJSON.class);
                res.deleteTargetsTargetIdAssetsId403ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsId404ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DeleteTargetsTargetIdAssetsId404ApplicationJSON.class);
                res.deleteTargetsTargetIdAssetsId404ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * List target's assets
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsResponse getTargetsTargetIdAssets(org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsPathParams.class, baseUrl, "/targets/{target_id}/assets/", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsQueryParams.class, request.queryParams, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsResponse res = new org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsResponse() {{
            getTargetsTargetIdAssets200ApplicationJSONObject = null;
            getTargetsTargetIdAssets401ApplicationJSONObject = null;
            getTargetsTargetIdAssets404ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.GetTargetsTargetIdAssets200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.GetTargetsTargetIdAssets200ApplicationJSON.class);
                res.getTargetsTargetIdAssets200ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.GetTargetsTargetIdAssets401ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.GetTargetsTargetIdAssets401ApplicationJSON.class);
                res.getTargetsTargetIdAssets401ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.GetTargetsTargetIdAssets404ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.GetTargetsTargetIdAssets404ApplicationJSON.class);
                res.getTargetsTargetIdAssets404ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Retrieve asset
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsIdResponse getTargetsTargetIdAssetsId(org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsIdPathParams.class, baseUrl, "/targets/{target_id}/assets/{id}/", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsIdResponse res = new org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsIdResponse() {{
            asset = null;
            getTargetsTargetIdAssetsId400ApplicationJSONObject = null;
            getTargetsTargetIdAssetsId401ApplicationJSONObject = null;
            getTargetsTargetIdAssetsId404ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Asset out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Asset.class);
                res.asset = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsId400ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsId400ApplicationJSON.class);
                res.getTargetsTargetIdAssetsId400ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsId401ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsId401ApplicationJSON.class);
                res.getTargetsTargetIdAssetsId401ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsId404ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.GetTargetsTargetIdAssetsId404ApplicationJSON.class);
                res.getTargetsTargetIdAssetsId404ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Partial update assets
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsIdResponse patchTargetsTargetIdAssetsId(org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsIdPathParams.class, baseUrl, "/targets/{target_id}/assets/{id}/", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsIdResponse res = new org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsIdResponse() {{
            asset = null;
            patchTargetsTargetIdAssetsId400ApplicationJSONObject = null;
            patchTargetsTargetIdAssetsId401ApplicationJSONObject = null;
            patchTargetsTargetIdAssetsId403ApplicationJSONObject = null;
            patchTargetsTargetIdAssetsId404ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Asset out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Asset.class);
                res.asset = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsId400ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsId400ApplicationJSON.class);
                res.patchTargetsTargetIdAssetsId400ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsId401ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsId401ApplicationJSON.class);
                res.patchTargetsTargetIdAssetsId401ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 403) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsId403ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsId403ApplicationJSON.class);
                res.patchTargetsTargetIdAssetsId403ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsId404ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PatchTargetsTargetIdAssetsId404ApplicationJSON.class);
                res.patchTargetsTargetIdAssetsId404ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Create new asset
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsResponse postTargetsTargetIdAssets(org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsPathParams.class, baseUrl, "/targets/{target_id}/assets/", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsResponse res = new org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsResponse() {{
            asset = null;
            postTargetsTargetIdAssets400ApplicationJSONObject = null;
            postTargetsTargetIdAssets401ApplicationJSONObject = null;
            postTargetsTargetIdAssets403ApplicationJSONObject = null;
            postTargetsTargetIdAssets404ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Asset out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Asset.class);
                res.asset = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssets400ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssets400ApplicationJSON.class);
                res.postTargetsTargetIdAssets400ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssets401ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssets401ApplicationJSON.class);
                res.postTargetsTargetIdAssets401ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 403) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssets403ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssets403ApplicationJSON.class);
                res.postTargetsTargetIdAssets403ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssets404ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssets404ApplicationJSON.class);
                res.postTargetsTargetIdAssets404ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Verify asset ownership
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerifyResponse postTargetsTargetIdAssetsIdVerify(org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerifyRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerifyPathParams.class, baseUrl, "/targets/{target_id}/assets/{id}/verify/", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerifyResponse res = new org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerifyResponse() {{
            postTargetsTargetIdAssetsIdVerify200ApplicationJSONObject = null;
            postTargetsTargetIdAssetsIdVerify400ApplicationJSONObject = null;
            postTargetsTargetIdAssetsIdVerify401ApplicationJSONObject = null;
            postTargetsTargetIdAssetsIdVerify403ApplicationJSONObject = null;
            postTargetsTargetIdAssetsIdVerify404ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify200ApplicationJSON.class);
                res.postTargetsTargetIdAssetsIdVerify200ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify400ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify400ApplicationJSON.class);
                res.postTargetsTargetIdAssetsIdVerify400ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify401ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify401ApplicationJSON.class);
                res.postTargetsTargetIdAssetsIdVerify401ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 403) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify403ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify403ApplicationJSON.class);
                res.postTargetsTargetIdAssetsIdVerify403ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify404ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostTargetsTargetIdAssetsIdVerify404ApplicationJSON.class);
                res.postTargetsTargetIdAssetsIdVerify404ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Update asset
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsIdResponse putTargetsTargetIdAssetsId(org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsIdRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsIdPathParams.class, baseUrl, "/targets/{target_id}/assets/{id}/", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PUT");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsIdResponse res = new org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsIdResponse() {{
            asset = null;
            putTargetsTargetIdAssetsId400ApplicationJSONObject = null;
            putTargetsTargetIdAssetsId401ApplicationJSONObject = null;
            putTargetsTargetIdAssetsId403ApplicationJSONObject = null;
            putTargetsTargetIdAssetsId404ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.Asset out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.Asset.class);
                res.asset = out;
            }
        }
        else if (httpRes.statusCode() == 400) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsId400ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsId400ApplicationJSON.class);
                res.putTargetsTargetIdAssetsId400ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 401) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsId401ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsId401ApplicationJSON.class);
                res.putTargetsTargetIdAssetsId401ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 403) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsId403ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsId403ApplicationJSON.class);
                res.putTargetsTargetIdAssetsId403ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 404) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsId404ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PutTargetsTargetIdAssetsId404ApplicationJSON.class);
                res.putTargetsTargetIdAssetsId404ApplicationJSONObject = out;
            }
        }

        return res;
    }
}