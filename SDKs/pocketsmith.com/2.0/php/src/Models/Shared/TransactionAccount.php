<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TransactionAccount - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TransactionAccount
{
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The currency that the account is in. This is determined by the account that the transaction account belongs to.
     * 
     * @var ?string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currencyCode = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('current_balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currentBalance = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('current_balance_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currentBalanceDate = null;
    
    /**
     * The exchange rate between the transaction account's currency and the user's base currency, when different. If the currencies are the same, null is returned.
     * 
     * @var ?float $currentBalanceExchangeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_balance_exchange_rate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currentBalanceExchangeRate = null;
    
    /**
     * The current balance of the transaction account in the user's base currency.
     * 
     * @var ?float $currentBalanceInBaseCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_balance_in_base_currency')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currentBalanceInBaseCurrency = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('institution')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Institution')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Institution $institution = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $number = null;
    
    /**
     * The current safe balance, if safe balance is activated and available for the transaction account. If safe balance is not available, then null is returned.
     * 
     * @var ?float $safeBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('safe_balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $safeBalance = null;
    
    /**
     * The current safe balance in the user's base currency, if safe balance is activated and available for the transaction account. If safe balance is not available, then null is returned.
     * 
     * @var ?float $safeBalanceInBaseCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('safe_balance_in_base_currency')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $safeBalanceInBaseCurrency = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('starting_balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $startingBalance = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('starting_balance_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startingBalanceDate = null;
    
    /**
     * The type of the transaction account.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionAccountTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransactionAccountTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionAccountTypeEnum $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->currencyCode = null;
		$this->currentBalance = null;
		$this->currentBalanceDate = null;
		$this->currentBalanceExchangeRate = null;
		$this->currentBalanceInBaseCurrency = null;
		$this->id = null;
		$this->institution = null;
		$this->name = null;
		$this->number = null;
		$this->safeBalance = null;
		$this->safeBalanceInBaseCurrency = null;
		$this->startingBalance = null;
		$this->startingBalanceDate = null;
		$this->type = null;
		$this->updatedAt = null;
	}
}
