// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAllAccountsSecurity struct {
	BasicAuth  *shared.SchemeBasicAuth  `security:"scheme,type=http,subtype=basic"`
	BearerAuth *shared.SchemeBearerAuth `security:"scheme,type=http,subtype=bearer"`
}

// GetAllAccountsProviderEnum - Filter by provider
type GetAllAccountsProviderEnum string

const (
	GetAllAccountsProviderEnumMessenger       GetAllAccountsProviderEnum = "messenger"
	GetAllAccountsProviderEnumViberServiceMsg GetAllAccountsProviderEnum = "viber_service_msg"
	GetAllAccountsProviderEnumWhatsapp        GetAllAccountsProviderEnum = "whatsapp"
)

func (e *GetAllAccountsProviderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "messenger":
		fallthrough
	case "viber_service_msg":
		fallthrough
	case "whatsapp":
		*e = GetAllAccountsProviderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAllAccountsProviderEnum: %s", s)
	}
}

type GetAllAccountsQueryParams struct {
	// Page number of the results
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page_number"`
	// Page size of the results
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Filter by provider
	Provider *GetAllAccountsProviderEnum `queryParam:"style=form,explode=true,name=provider"`
}

type GetAllAccountsRequest struct {
	QueryParams GetAllAccountsQueryParams
	Security    GetAllAccountsSecurity
}

type GetAllAccounts200ApplicationJSONLinksFirst struct {
	Href *string `json:"href,omitempty"`
}

type GetAllAccounts200ApplicationJSONLinksLast struct {
	Href *string `json:"href,omitempty"`
}

type GetAllAccounts200ApplicationJSONLinksNext struct {
	Href *string `json:"href,omitempty"`
}

type GetAllAccounts200ApplicationJSONLinksPrev struct {
	Href *string `json:"href,omitempty"`
}

type GetAllAccounts200ApplicationJSONLinksSelf struct {
	Href *string `json:"href,omitempty"`
}

type GetAllAccounts200ApplicationJSONLinks struct {
	First *GetAllAccounts200ApplicationJSONLinksFirst `json:"first,omitempty"`
	Last  *GetAllAccounts200ApplicationJSONLinksLast  `json:"last,omitempty"`
	Next  *GetAllAccounts200ApplicationJSONLinksNext  `json:"next,omitempty"`
	Prev  *GetAllAccounts200ApplicationJSONLinksPrev  `json:"prev,omitempty"`
	Self  *GetAllAccounts200ApplicationJSONLinksSelf  `json:"self,omitempty"`
}

// GetAllAccounts200ApplicationJSON - OK.
type GetAllAccounts200ApplicationJSON struct {
	Embedded   []shared.GetAllAccountResponse         `json:"_embedded,omitempty"`
	Links      *GetAllAccounts200ApplicationJSONLinks `json:"_links,omitempty"`
	PageNumber *int64                                 `json:"page_number,omitempty"`
	PageSize   *int64                                 `json:"page_size,omitempty"`
}

type GetAllAccountsResponse struct {
	// Unauthorized.
	FourHundredAndOneResponse *shared.FourHundredAndOneResponse
	ContentType               string
	// OK.
	GetAllAccounts200ApplicationJSONObject *GetAllAccounts200ApplicationJSON
	StatusCode                             int
	RawResponse                            *http.Response
}
