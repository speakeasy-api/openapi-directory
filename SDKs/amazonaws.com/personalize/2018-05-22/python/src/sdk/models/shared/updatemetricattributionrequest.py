"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricattribute as shared_metricattribute
from ..shared import metricattributionoutput as shared_metricattributionoutput
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateMetricAttributionRequest:
    
    add_metrics: Optional[list[shared_metricattribute.MetricAttribute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addMetrics'), 'exclude': lambda f: f is None }})  
    metric_attribution_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricAttributionArn'), 'exclude': lambda f: f is None }})  
    metrics_output_config: Optional[shared_metricattributionoutput.MetricAttributionOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricsOutputConfig'), 'exclude': lambda f: f is None }})  
    remove_metrics: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removeMetrics'), 'exclude': lambda f: f is None }})  
    