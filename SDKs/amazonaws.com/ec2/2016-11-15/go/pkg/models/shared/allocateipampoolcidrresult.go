// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum - The type of the resource.
type AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum string

const (
	AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnumIpamPool          AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum = "ipam-pool"
	AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnumVpc               AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum = "vpc"
	AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnumEc2PublicIpv4Pool AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum = "ec2-public-ipv4-pool"
	AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnumCustom            AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum = "custom"
)

func (e *AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ipam-pool":
		fallthrough
	case "vpc":
		fallthrough
	case "ec2-public-ipv4-pool":
		fallthrough
	case "custom":
		*e = AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum: %s", s)
	}
}

// AllocateIpamPoolCidrResultIpamPoolAllocation - Information about the allocation created.
type AllocateIpamPoolCidrResultIpamPoolAllocation struct {
	Cidr                 *string
	Description          *string
	IpamPoolAllocationID *string
	ResourceID           *string
	ResourceOwner        *string
	ResourceRegion       *string
	ResourceType         *AllocateIpamPoolCidrResultIpamPoolAllocationResourceTypeEnum
}

// AllocateIpamPoolCidrResult - Success
type AllocateIpamPoolCidrResult struct {
	IpamPoolAllocation *AllocateIpamPoolCidrResultIpamPoolAllocation
}
