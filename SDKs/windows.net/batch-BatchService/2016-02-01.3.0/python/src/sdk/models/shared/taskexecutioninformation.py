"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import taskschedulingerror as shared_taskschedulingerror
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskExecutionInformation:
    r"""Information about the execution of a task."""
    
    requeue_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requeueCount') }})
    r"""The number of times the task has been requeued by the Batch service as the result of a user request."""  
    retry_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retryCount') }})
    r"""The number of times the task has been retried by the Batch service."""  
    end_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The time at which the task completed. This property is set only if the task is in the Completed state."""  
    exit_code: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exitCode'), 'exclude': lambda f: f is None }})
    r"""The exit code of the task. This property is set only if the task is in completed state."""  
    last_requeue_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastRequeueTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The most recent time at which the task has been requeued by the Batch service as the result of a user request."""  
    last_retry_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastRetryTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The most recent time at which a retry of the task started running."""  
    scheduling_error: Optional[shared_taskschedulingerror.TaskSchedulingError] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schedulingError'), 'exclude': lambda f: f is None }})
    r"""Information about an error when scheduling a task."""  
    start_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The time at which the task started running. If the task has been restarted or retried, this is the most recent time at which the task started running."""  
    