/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * List History Export Results
 */
export class HistoryExportResultEntity extends SpeakeasyBase {
  /**
   * What action was taken. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: string;

  /**
   * When the action happened
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: number;

  /**
   * When the action happened, in ISO8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at_iso8601" })
  createdAtIso8601?: number;

  /**
   * File moved to this destination folder
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  destination?: string;

  /**
   * The type of login failure, if applicable.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failure_type" })
  failureType?: string;

  /**
   * File ID related to the action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file_id" })
  fileId?: number;

  /**
   * Folder in which the action occurred
   */
  @SpeakeasyMetadata()
  @Expose({ name: "folder" })
  folder?: string;

  /**
   * Action ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Inteface through which the action was taken. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interface" })
  interface?: string;

  /**
   * Client IP that performed the action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip" })
  ip?: string;

  /**
   * ID of the parent folder
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_id" })
  parentId?: number;

  /**
   * Path of the related action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * File move originated from this path
   */
  @SpeakeasyMetadata()
  @Expose({ name: "src" })
  src?: string;

  /**
   * If searching for Histories about API keys, this is when the API key will expire
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_expires_at" })
  targetExpiresAt?: number;

  /**
   * ID of the object (such as Users, or API Keys) on which the action was taken
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_id" })
  targetId?: number;

  /**
   * Name of the User, Group or other object with a name related to this action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_name" })
  targetName?: string;

  /**
   * Permission level of the action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_permission" })
  targetPermission?: string;

  /**
   * If searching for Histories about API keys, this represents the permission set of the associated  API key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_permission_set" })
  targetPermissionSet?: string;

  /**
   * If searching for Histories about API keys, this is the platform on which the action was taken
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_platform" })
  targetPlatform?: string;

  /**
   * Whether or not the action was recursive
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_recursive" })
  targetRecursive?: boolean;

  /**
   * If searching for Histories about API keys, this is the User ID on which the action was taken
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_user_id" })
  targetUserId?: number;

  /**
   * If searching for Histories about API keys, this is the username on which the action was taken
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_username" })
  targetUsername?: string;

  /**
   * User ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: number;

  /**
   * Username of the user that performed the action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}
