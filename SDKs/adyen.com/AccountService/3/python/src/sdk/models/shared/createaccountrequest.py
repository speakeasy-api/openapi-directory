"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateAccountRequestPayoutScheduleEnum(str, Enum):
    r"""The payout schedule of the prospective account.
    >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.
    """
    BIWEEKLY_ON_1_ST_AND_15_TH_AT_MIDNIGHT = 'BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT'
    DAILY = 'DAILY'
    DAILY_AU = 'DAILY_AU'
    DAILY_EU = 'DAILY_EU'
    DAILY_SG = 'DAILY_SG'
    DAILY_US = 'DAILY_US'
    HOLD = 'HOLD'
    MONTHLY = 'MONTHLY'
    WEEKLY = 'WEEKLY'
    WEEKLY_ON_TUE_FRI_MIDNIGHT = 'WEEKLY_ON_TUE_FRI_MIDNIGHT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAccountRequest:
    
    account_holder_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderCode') }})
    r"""The code of Account Holder under which to create the account."""  
    payout_schedule: Optional[CreateAccountRequestPayoutScheduleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payoutSchedule'), 'exclude': lambda f: f is None }})
    r"""The payout schedule of the prospective account.
    >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.
    """  
    payout_schedule_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payoutScheduleReason'), 'exclude': lambda f: f is None }})
    r"""The reason for the payout schedule choice.
    >Required if the payoutSchedule is `HOLD`.
    """  
    