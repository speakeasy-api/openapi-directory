// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DfareportingOrderDocumentsListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// DfareportingOrderDocumentsListSortFieldEnum - Field by which to sort the list.
type DfareportingOrderDocumentsListSortFieldEnum string

const (
	DfareportingOrderDocumentsListSortFieldEnumID   DfareportingOrderDocumentsListSortFieldEnum = "ID"
	DfareportingOrderDocumentsListSortFieldEnumName DfareportingOrderDocumentsListSortFieldEnum = "NAME"
)

func (e DfareportingOrderDocumentsListSortFieldEnum) ToPointer() *DfareportingOrderDocumentsListSortFieldEnum {
	return &e
}

func (e *DfareportingOrderDocumentsListSortFieldEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ID":
		fallthrough
	case "NAME":
		*e = DfareportingOrderDocumentsListSortFieldEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingOrderDocumentsListSortFieldEnum: %v", v)
	}
}

// DfareportingOrderDocumentsListSortOrderEnum - Order of sorted results.
type DfareportingOrderDocumentsListSortOrderEnum string

const (
	DfareportingOrderDocumentsListSortOrderEnumAscending  DfareportingOrderDocumentsListSortOrderEnum = "ASCENDING"
	DfareportingOrderDocumentsListSortOrderEnumDescending DfareportingOrderDocumentsListSortOrderEnum = "DESCENDING"
)

func (e DfareportingOrderDocumentsListSortOrderEnum) ToPointer() *DfareportingOrderDocumentsListSortOrderEnum {
	return &e
}

func (e *DfareportingOrderDocumentsListSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = DfareportingOrderDocumentsListSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingOrderDocumentsListSortOrderEnum: %v", v)
	}
}

type DfareportingOrderDocumentsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Select only order documents that have been approved by at least one user.
	Approved *bool `queryParam:"style=form,explode=true,name=approved"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Select only order documents with these IDs.
	Ids []string `queryParam:"style=form,explode=true,name=ids"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Maximum number of results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Select only order documents for specified orders.
	OrderID []string `queryParam:"style=form,explode=true,name=orderId"`
	// Value of the nextPageToken from the previous result page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// User profile ID associated with this request.
	ProfileID string `pathParam:"style=simple,explode=false,name=profileId"`
	// Project ID for order documents.
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Allows searching for order documents by name or ID. Wildcards (*) are allowed. For example, "orderdocument*2015" will return order documents with names like "orderdocument June 2015", "orderdocument April 2015", or simply "orderdocument 2015". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of "orderdocument" will match order documents with name "my orderdocument", "orderdocument 2015", or simply "orderdocument".
	SearchString *string `queryParam:"style=form,explode=true,name=searchString"`
	// Select only order documents that are associated with these sites.
	SiteID []string `queryParam:"style=form,explode=true,name=siteId"`
	// Field by which to sort the list.
	SortField *DfareportingOrderDocumentsListSortFieldEnum `queryParam:"style=form,explode=true,name=sortField"`
	// Order of sorted results.
	SortOrder *DfareportingOrderDocumentsListSortOrderEnum `queryParam:"style=form,explode=true,name=sortOrder"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DfareportingOrderDocumentsListResponse struct {
	ContentType string
	// Successful response
	OrderDocumentsListResponse *shared.OrderDocumentsListResponse
	StatusCode                 int
	RawResponse                *http.Response
}
