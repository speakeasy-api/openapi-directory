/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PlaceActionLink - Represents a place action link and its attributes.
 */
public class PlaceActionLink {
    /**
     * Output only. The time when the place action link was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public PlaceActionLink withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. Indicates whether this link can be edited by the client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEditable")
    public Boolean isEditable;

    public PlaceActionLink withIsEditable(Boolean isEditable) {
        this.isEditable = isEditable;
        return this;
    }
    
    /**
     * Optional. Whether this link is preferred by the merchant. Only one link can be marked as preferred per place action type at a location. If a future request marks a different link as preferred for the same place action type, then the current preferred link (if any exists) will lose its preference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isPreferred")
    public Boolean isPreferred;

    public PlaceActionLink withIsPreferred(Boolean isPreferred) {
        this.isPreferred = isPreferred;
        return this;
    }
    
    /**
     * Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public PlaceActionLink withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Required. The type of place action that can be performed using this link.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placeActionType")
    public PlaceActionLinkPlaceActionTypeEnum placeActionType;

    public PlaceActionLink withPlaceActionType(PlaceActionLinkPlaceActionTypeEnum placeActionType) {
        this.placeActionType = placeActionType;
        return this;
    }
    
    /**
     * Output only. Specifies the provider type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("providerType")
    public PlaceActionLinkProviderTypeEnum providerType;

    public PlaceActionLink withProviderType(PlaceActionLinkProviderTypeEnum providerType) {
        this.providerType = providerType;
        return this;
    }
    
    /**
     * Output only. The time when the place action link was last modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public PlaceActionLink withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * Required. The link uri. The same uri can be reused for different action types across different locations. However, only one place action link is allowed for each unique combination of (uri, place action type, location).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;

    public PlaceActionLink withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
    public PlaceActionLink(){}
}
