// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// WebhookDisabledReasonEnum - Indicates if the webhook has has been disabled as it reached its retry limit or if account is over the usage allocated by it's plan.
type WebhookDisabledReasonEnum string

const (
	WebhookDisabledReasonEnumNone       WebhookDisabledReasonEnum = "none"
	WebhookDisabledReasonEnumRetryLimit WebhookDisabledReasonEnum = "retry_limit"
	WebhookDisabledReasonEnumUsageLimit WebhookDisabledReasonEnum = "usage_limit"
)

func (e WebhookDisabledReasonEnum) ToPointer() *WebhookDisabledReasonEnum {
	return &e
}

func (e *WebhookDisabledReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "retry_limit":
		fallthrough
	case "usage_limit":
		*e = WebhookDisabledReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookDisabledReasonEnum: %v", v)
	}
}

type Webhook struct {
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The delivery url of the webhook endpoint.
	DeliveryURL string `json:"delivery_url"`
	// A description of the object.
	Description *string `json:"description,omitempty"`
	// Indicates if the webhook has has been disabled as it reached its retry limit or if account is over the usage allocated by it's plan.
	DisabledReason *WebhookDisabledReasonEnum `json:"disabled_reason,omitempty"`
	// The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
	Events []WebhookEventTypeEnum `json:"events"`
	// The Unify Base URL events from connectors will be sent to after service id is appended.
	ExecuteBaseURL string  `json:"execute_base_url"`
	ID             *string `json:"id,omitempty"`
	// The status of the webhook.
	Status StatusEnum `json:"status"`
	// Name of Apideck Unified API
	UnifiedAPI UnifiedAPIIDEnum `json:"unified_api"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}
