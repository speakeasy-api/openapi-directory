<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ZypperSettings - Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ZypperSettings
{
    /**
     * Install only patches with these categories. Common categories include security, recommended, and feature.
     * 
     * @var ?array<string> $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $categories = null;
    
    /**
     * List of patches to exclude from update.
     * 
     * @var ?array<string> $excludes
     */
	#[\JMS\Serializer\Annotation\SerializedName('excludes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $excludes = null;
    
    /**
     * An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields.
     * 
     * @var ?array<string> $exclusivePatches
     */
	#[\JMS\Serializer\Annotation\SerializedName('exclusivePatches')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $exclusivePatches = null;
    
    /**
     * Install only patches with these severities. Common severities include critical, important, moderate, and low.
     * 
     * @var ?array<string> $severities
     */
	#[\JMS\Serializer\Annotation\SerializedName('severities')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $severities = null;
    
    /**
     * Adds the `--with-optional` flag to `zypper patch`.
     * 
     * @var ?bool $withOptional
     */
	#[\JMS\Serializer\Annotation\SerializedName('withOptional')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $withOptional = null;
    
    /**
     * Adds the `--with-update` flag, to `zypper patch`.
     * 
     * @var ?bool $withUpdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('withUpdate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $withUpdate = null;
    
	public function __construct()
	{
		$this->categories = null;
		$this->excludes = null;
		$this->exclusivePatches = null;
		$this->severities = null;
		$this->withOptional = null;
		$this->withUpdate = null;
	}
}
