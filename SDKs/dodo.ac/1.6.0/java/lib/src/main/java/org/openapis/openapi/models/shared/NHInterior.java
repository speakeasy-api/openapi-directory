/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NHInterior - A JSON object describing the interior item.
 */
public class NHInterior {
    /**
     * Where the clothing may be obtained from (could be multiple sources). `from` is a brief description of the source; `note`, when provided, provides additional details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availability")
    public NHInteriorAvailability[] availability;

    public NHInterior withAvailability(NHInteriorAvailability[] availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * An array of prices, for when the interior may be purchased with Bells, Nook Miles, etc..
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buy")
    public NHInteriorBuy[] buy;

    public NHInterior withBuy(NHInteriorBuy[] buy) {
        this.buy = buy;
        return this;
    }
    
    /**
     * The category of item as shown in the player's inventory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public NHInteriorCategoryEnum category;

    public NHInterior withCategory(NHInteriorCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * (WIP)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("colors")
    public NHInteriorColorsEnum colors;

    public NHInterior withColors(NHInteriorColorsEnum colors) {
        this.colors = colors;
        return this;
    }
    
    /**
     * The number of lengthwise grid spaces this item takes up.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grid_length")
    public Float gridLength;

    public NHInterior withGridLength(Float gridLength) {
        this.gridLength = gridLength;
        return this;
    }
    
    /**
     * The number of widthwise grid spaces this item takes up.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grid_width")
    public Float gridWidth;

    public NHInterior withGridWidth(Float gridWidth) {
        this.gridWidth = gridWidth;
        return this;
    }
    
    /**
     * The base value that the item provides to a player's Happy Home Academy score when placed in their home.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hha_base")
    public Long hhaBase;

    public NHInterior withHhaBase(Long hhaBase) {
        this.hhaBase = hhaBase;
        return this;
    }
    
    /**
     * The HHA category the item is a part of, if any. If the item does not have an HHA category, this will be an empty string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hha_category")
    public String hhaCategory;

    public NHInterior withHhaCategory(String hhaCategory) {
        this.hhaCategory = hhaCategory;
        return this;
    }
    
    /**
     * Image of the interior.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image_url")
    public String imageUrl;

    public NHInterior withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * The [furniture series](https://nookipedia.com/wiki/Series_(furniture)) the item is a part of, if any. A series is a collection of furniture and interior items, all with the same theme. If the item is not part of a series, this will be an empty string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("item_series")
    public String itemSeries;

    public NHInterior withItemSeries(String itemSeries) {
        this.itemSeries = itemSeries;
        return this;
    }
    
    /**
     * The [furniture set](https://nookipedia.com/wiki/Set) the item is a part of, if any. A set is a smaller collection of related furniture items. If the item is not part of a set, this will be an empty string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("item_set")
    public String itemSet;

    public NHInterior withItemSet(String itemSet) {
        this.itemSet = itemSet;
        return this;
    }
    
    /**
     * The name of the interior.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NHInterior withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Any additional miscellaneous information about the item, such as a name change from a past update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public NHInterior withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The number of Bells the interior can be sold to Nook's store for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sell")
    public Long sell;

    public NHInterior withSell(Long sell) {
        this.sell = sell;
        return this;
    }
    
    /**
     * The tag of an item, if any, which denotes a specific use or relation to an event. Tags are determined by Nintendo. Examples include "Chair", "Musical Instrument", and "Mario". If the item does not have a tag, this will be an empty string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag")
    public String tag;

    public NHInterior withTag(String tag) {
        this.tag = tag;
        return this;
    }
    
    /**
     * A list of [themes](https://nookipedia.com/wiki/Theme_(furniture)) (if any) that the item belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("themes")
    public String[] themes;

    public NHInterior withThemes(String[] themes) {
        this.themes = themes;
        return this;
    }
    
    /**
     * Whether the item is available through legitimate gameplay. Some items are added to the game files in an update, but aren't actually made available until a subsequent update unlocks them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unlocked")
    public Boolean unlocked;

    public NHInterior withUnlocked(Boolean unlocked) {
        this.unlocked = unlocked;
        return this;
    }
    
    /**
     * Link to the respective Nookipedia article.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public NHInterior withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The version of *New Horizons* that the item was added. Items that were included at the game's launch have version "1.0.0".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version_added")
    public String versionAdded;

    public NHInterior withVersionAdded(String versionAdded) {
        this.versionAdded = versionAdded;
        return this;
    }
    
    public NHInterior(){}
}
