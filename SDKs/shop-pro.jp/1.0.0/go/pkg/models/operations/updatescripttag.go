// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateScriptTagSecurity struct {
	OAuth2 shared.SchemeOAuth2 `security:"scheme,type=oauth2"`
}

type UpdateScriptTagPathParams struct {
	// スクリプトタグID
	ScriptTagID int64 `pathParam:"style=simple,explode=false,name=scriptTagId"`
}

// UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum - スクリプトを出力するページ。
//
// - `all`: ショップページと注文完了ページの両方
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
// - `cart`: カートの途中のページ
type UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum string

const (
	UpdateScriptTagRequestBodyScriptTagDisplayScopeEnumAll        UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum = "all"
	UpdateScriptTagRequestBodyScriptTagDisplayScopeEnumShop       UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum = "shop"
	UpdateScriptTagRequestBodyScriptTagDisplayScopeEnumThanksPage UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum = "thanks_page"
	UpdateScriptTagRequestBodyScriptTagDisplayScopeEnumCart       UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum = "cart"
)

func (e *UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "shop":
		fallthrough
	case "thanks_page":
		fallthrough
	case "cart":
		*e = UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum: %s", s)
	}
}

type UpdateScriptTagRequestBodyScriptTag struct {
	// スクリプトを出力するページ。
	//
	// - `all`: ショップページと注文完了ページの両方
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	// - `cart`: カートの途中のページ
	//
	DisplayScope *UpdateScriptTagRequestBodyScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
}

// UpdateScriptTagRequestBody - 作成するスクリプトタグの情報
type UpdateScriptTagRequestBody struct {
	ScriptTag *UpdateScriptTagRequestBodyScriptTag `json:"script_tag,omitempty"`
}

type UpdateScriptTagRequest struct {
	PathParams UpdateScriptTagPathParams
	// 作成するスクリプトタグの情報
	Request  *UpdateScriptTagRequestBody `request:"mediaType=application/json"`
	Security UpdateScriptTagSecurity
}

// UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum - スクリプトを出力するページ。
//
// - `all`: ショップページと注文完了ページの両方
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
// - `cart`: カートの途中のページ
type UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum string

const (
	UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnumAll        UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "all"
	UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnumShop       UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "shop"
	UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnumThanksPage UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "thanks_page"
	UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnumCart       UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "cart"
)

func (e *UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "shop":
		fallthrough
	case "thanks_page":
		fallthrough
	case "cart":
		*e = UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum: %s", s)
	}
}

type UpdateScriptTag200ApplicationJSONScriptTag struct {
	// スクリプトを出力するページ。
	//
	// - `all`: ショップページと注文完了ページの両方
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	// - `cart`: カートの途中のページ
	//
	DisplayScope *UpdateScriptTag200ApplicationJSONScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトタグID
	ID *int64 `json:"id,omitempty"`
	// 作成日時
	MakeDate *int64 `json:"make_date,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
	// 更新日時
	UpdateDate *int64 `json:"update_date,omitempty"`
}

type UpdateScriptTag200ApplicationJSON struct {
	ScriptTag *UpdateScriptTag200ApplicationJSONScriptTag `json:"script_tag,omitempty"`
}

type UpdateScriptTagResponse struct {
	ContentType                             string
	StatusCode                              int
	RawResponse                             *http.Response
	UpdateScriptTag200ApplicationJSONObject *UpdateScriptTag200ApplicationJSON
}
