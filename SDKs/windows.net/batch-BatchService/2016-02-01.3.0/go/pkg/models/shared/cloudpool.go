// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CloudPoolAllocationStateEnum - Whether the pool is resizing.
type CloudPoolAllocationStateEnum string

const (
	CloudPoolAllocationStateEnumSteady   CloudPoolAllocationStateEnum = "steady"
	CloudPoolAllocationStateEnumResizing CloudPoolAllocationStateEnum = "resizing"
	CloudPoolAllocationStateEnumStopping CloudPoolAllocationStateEnum = "stopping"
)

func (e *CloudPoolAllocationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "steady":
		fallthrough
	case "resizing":
		fallthrough
	case "stopping":
		*e = CloudPoolAllocationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudPoolAllocationStateEnum: %s", s)
	}
}

// CloudPoolStateEnum - The current state of the pool.
type CloudPoolStateEnum string

const (
	CloudPoolStateEnumActive    CloudPoolStateEnum = "active"
	CloudPoolStateEnumDeleting  CloudPoolStateEnum = "deleting"
	CloudPoolStateEnumUpgrading CloudPoolStateEnum = "upgrading"
)

func (e *CloudPoolStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "deleting":
		fallthrough
	case "upgrading":
		*e = CloudPoolStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudPoolStateEnum: %s", s)
	}
}

// CloudPool - A pool in the Azure Batch service.
type CloudPool struct {
	// Whether the pool is resizing.
	AllocationState *CloudPoolAllocationStateEnum `json:"allocationState,omitempty"`
	// The time at which the pool entered its current allocation state.
	AllocationStateTransitionTime *time.Time `json:"allocationStateTransitionTime,omitempty"`
	// The list of application packages to be installed on each compute node in the pool.
	ApplicationPackageReferences []ApplicationPackageReference `json:"applicationPackageReferences,omitempty"`
	// A time interval for the desired AutoScale evaluation period in the pool.
	AutoScaleEvaluationInterval *string `json:"autoScaleEvaluationInterval,omitempty"`
	// A formula for the desired number of compute nodes in the pool.
	AutoScaleFormula *string `json:"autoScaleFormula,omitempty"`
	// The results and errors from an execution of a pool autoscale formula.
	AutoScaleRun *AutoScaleRun `json:"autoScaleRun,omitempty"`
	// The list of certificates to be installed on each compute node in the pool.
	CertificateReferences []CertificateReference `json:"certificateReferences,omitempty"`
	// The configuration for nodes in a pool based on the Azure Cloud Services platform.
	CloudServiceConfiguration *CloudServiceConfiguration `json:"cloudServiceConfiguration,omitempty"`
	// The creation time of the pool.
	CreationTime *time.Time `json:"creationTime,omitempty"`
	// The number of compute nodes currently in the pool.
	CurrentDedicated *int `json:"currentDedicated,omitempty"`
	// The display name for the pool.
	DisplayName *string `json:"displayName,omitempty"`
	// The ETag of the pool.
	ETag *string `json:"eTag,omitempty"`
	// Whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set.
	EnableAutoScale *bool `json:"enableAutoScale,omitempty"`
	// Whether the pool permits direct communication between nodes.
	EnableInterNodeCommunication *bool `json:"enableInterNodeCommunication,omitempty"`
	// A string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
	ID *string `json:"id,omitempty"`
	// The last modified time of the pool.
	LastModified *time.Time `json:"lastModified,omitempty"`
	// The maximum number of tasks that can run concurrently on a single compute node in the pool.
	MaxTasksPerNode *int `json:"maxTasksPerNode,omitempty"`
	// A list of name-value pairs associated with the pool as metadata.
	Metadata []MetadataItem `json:"metadata,omitempty"`
	// An error that occurred when resizing a pool.
	ResizeError *ResizeError `json:"resizeError,omitempty"`
	// The timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes.
	ResizeTimeout *string `json:"resizeTimeout,omitempty"`
	// A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
	StartTask *StartTask `json:"startTask,omitempty"`
	// The current state of the pool.
	State *CloudPoolStateEnum `json:"state,omitempty"`
	// The time at which the pool entered its current state.
	StateTransitionTime *time.Time `json:"stateTransitionTime,omitempty"`
	// Contains utilization and resource usage statistics for the lifetime of a pool.
	Stats *PoolStatistics `json:"stats,omitempty"`
	// The desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false.
	TargetDedicated *int `json:"targetDedicated,omitempty"`
	// Specifies how tasks should be distributed across compute nodes.
	TaskSchedulingPolicy *TaskSchedulingPolicy `json:"taskSchedulingPolicy,omitempty"`
	// The URL of the pool.
	URL *string `json:"url,omitempty"`
	// The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.
	VirtualMachineConfiguration *VirtualMachineConfiguration `json:"virtualMachineConfiguration,omitempty"`
	// The size of virtual machines in the pool. All virtual machines in a pool are the same size.
	VMSize *string `json:"vmSize,omitempty"`
}
