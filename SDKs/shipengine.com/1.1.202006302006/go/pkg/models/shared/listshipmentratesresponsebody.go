// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ListShipmentRatesResponseBodyRateMonetaryValue - A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.
type ListShipmentRatesResponseBodyRateMonetaryValue struct {
	// The monetary amount, in the specified currency.
	Amount   float64      `json:"amount"`
	Currency CurrencyEnum `json:"currency"`
}

// ListShipmentRatesResponseBodyRateRateTypeEnum - The possible rate type values
type ListShipmentRatesResponseBodyRateRateTypeEnum string

const (
	ListShipmentRatesResponseBodyRateRateTypeEnumCheck    ListShipmentRatesResponseBodyRateRateTypeEnum = "check"
	ListShipmentRatesResponseBodyRateRateTypeEnumShipment ListShipmentRatesResponseBodyRateRateTypeEnum = "shipment"
)

func (e *ListShipmentRatesResponseBodyRateRateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "check":
		fallthrough
	case "shipment":
		*e = ListShipmentRatesResponseBodyRateRateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListShipmentRatesResponseBodyRateRateTypeEnum: %s", s)
	}
}

// ListShipmentRatesResponseBodyRateValidationStatusEnum - The possible validation status values
type ListShipmentRatesResponseBodyRateValidationStatusEnum string

const (
	ListShipmentRatesResponseBodyRateValidationStatusEnumValid       ListShipmentRatesResponseBodyRateValidationStatusEnum = "valid"
	ListShipmentRatesResponseBodyRateValidationStatusEnumInvalid     ListShipmentRatesResponseBodyRateValidationStatusEnum = "invalid"
	ListShipmentRatesResponseBodyRateValidationStatusEnumHasWarnings ListShipmentRatesResponseBodyRateValidationStatusEnum = "has_warnings"
	ListShipmentRatesResponseBodyRateValidationStatusEnumUnknown     ListShipmentRatesResponseBodyRateValidationStatusEnum = "unknown"
)

func (e *ListShipmentRatesResponseBodyRateValidationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "valid":
		fallthrough
	case "invalid":
		fallthrough
	case "has_warnings":
		fallthrough
	case "unknown":
		*e = ListShipmentRatesResponseBodyRateValidationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListShipmentRatesResponseBodyRateValidationStatusEnum: %s", s)
	}
}

// ListShipmentRatesResponseBodyRate - A rate
type ListShipmentRatesResponseBodyRate struct {
	// carrier code
	CarrierCode string `json:"carrier_code"`
	// The carrier delivery days
	CarrierDeliveryDays *string `json:"carrier_delivery_days,omitempty"`
	// carrier friendly name
	CarrierFriendlyName string `json:"carrier_friendly_name"`
	// A string that uniquely identifies the carrier
	CarrierID string `json:"carrier_id"`
	// carrier nickname
	CarrierNickname string `json:"carrier_nickname"`
	// The confirmation amount
	ConfirmationAmount ListShipmentRatesResponseBodyRateMonetaryValue `json:"confirmation_amount"`
	// The number of days estimated for delivery, this will show the _actual_ deliverty
	// time if for example, the package gets shipped on a Friday
	//
	DeliveryDays *int `json:"delivery_days,omitempty"`
	// The error messages
	ErrorMessages         []string   `json:"error_messages"`
	EstimatedDeliveryDate *time.Time `json:"estimated_delivery_date,omitempty"`
	// Indicates if the rate is guaranteed.
	GuaranteedService bool `json:"guaranteed_service"`
	// The insurance amount
	InsuranceAmount ListShipmentRatesResponseBodyRateMonetaryValue `json:"insurance_amount"`
	// Indicates if the rates been negotiated
	NegotiatedRate bool `json:"negotiated_rate"`
	// Any other charges associated with this rate
	OtherAmount ListShipmentRatesResponseBodyRateMonetaryValue `json:"other_amount"`
	// package type that this rate was estimated for
	PackageType string `json:"package_type"`
	// A string that uniquely identifies the rate
	RateID   string                                        `json:"rate_id"`
	RateType ListShipmentRatesResponseBodyRateRateTypeEnum `json:"rate_type"`
	// service code for the rate
	ServiceCode string `json:"service_code"`
	// service type
	ServiceType string `json:"service_type"`
	// ship date
	ShipDate *time.Time `json:"ship_date,omitempty"`
	// The shipping amount
	ShippingAmount ListShipmentRatesResponseBodyRateMonetaryValue `json:"shipping_amount"`
	// Tariff and additional taxes associated with an international shipment.
	TaxAmount *ListShipmentRatesResponseBodyRateMonetaryValue `json:"tax_amount,omitempty"`
	// Indicates if rate is trackable
	Trackable        bool                                                  `json:"trackable"`
	ValidationStatus ListShipmentRatesResponseBodyRateValidationStatusEnum `json:"validation_status"`
	// The warning messages
	WarningMessages []string `json:"warning_messages"`
	// Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of
	// custom zones that vary depending upon the ship_to and ship_from location
	//
	Zone int `json:"zone"`
}

// ListShipmentRatesResponseBodyRateResponseStatusEnum - The possible rate response status values
type ListShipmentRatesResponseBodyRateResponseStatusEnum string

const (
	ListShipmentRatesResponseBodyRateResponseStatusEnumWorking   ListShipmentRatesResponseBodyRateResponseStatusEnum = "working"
	ListShipmentRatesResponseBodyRateResponseStatusEnumCompleted ListShipmentRatesResponseBodyRateResponseStatusEnum = "completed"
	ListShipmentRatesResponseBodyRateResponseStatusEnumPartial   ListShipmentRatesResponseBodyRateResponseStatusEnum = "partial"
	ListShipmentRatesResponseBodyRateResponseStatusEnumError     ListShipmentRatesResponseBodyRateResponseStatusEnum = "error"
)

func (e *ListShipmentRatesResponseBodyRateResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "working":
		fallthrough
	case "completed":
		fallthrough
	case "partial":
		fallthrough
	case "error":
		*e = ListShipmentRatesResponseBodyRateResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListShipmentRatesResponseBodyRateResponseStatusEnum: %s", s)
	}
}

// ListShipmentRatesResponseBody - A rates information resource
type ListShipmentRatesResponseBody struct {
	// When the rate was created
	CreatedAt time.Time `json:"created_at"`
	Errors    []Error   `json:"errors"`
	// An array of invalid shipment rates
	InvalidRates []ListShipmentRatesResponseBodyRate `json:"invalid_rates"`
	// A string that uniquely identifies the rate request
	RateRequestID string `json:"rate_request_id"`
	// An array of shipment rates
	Rates []ListShipmentRatesResponseBodyRate `json:"rates"`
	// A string that uniquely identifies the shipment
	ShipmentID string                                              `json:"shipment_id"`
	Status     ListShipmentRatesResponseBodyRateResponseStatusEnum `json:"status"`
}
