/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { POSTInvoiceCollectCreditMemosType } from "./postinvoicecollectcreditmemostype";
import { POSTInvoiceCollectInvoicesType } from "./postinvoicecollectinvoicestype";
import { Expose, Type } from "class-transformer";

export class POSTInvoiceCollectResponseType extends SpeakeasyBase {
  /**
   * Payment amount applied.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amountCollected" })
  amountCollected?: string;

  /**
   * Information on one or more credit memos associated with this operation.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: POSTInvoiceCollectCreditMemosType })
  @Expose({ name: "creditMemos" })
  @Type(() => POSTInvoiceCollectCreditMemosType)
  creditMemos?: POSTInvoiceCollectCreditMemosType[];

  /**
   * Information on one or more invoices associated with this operation.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: POSTInvoiceCollectInvoicesType })
  @Expose({ name: "invoices" })
  @Type(() => POSTInvoiceCollectInvoicesType)
  invoices?: POSTInvoiceCollectInvoicesType[];

  /**
   * Payment ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentId" })
  paymentId?: string;

  /**
   * Returns `true` if the request was processed successfully.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;
}
