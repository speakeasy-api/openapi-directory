/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * <p>The format of the batch you are uploading. Amazon CloudSearch supports two document batch formats:</p> <ul> <li>application/json</li> <li>application/xml</li> </ul>
 */
export enum UploadDocumentsContentTypeEnum {
  ApplicationJson = "application/json",
  ApplicationXml = "application/xml",
}

export class UploadDocumentsRequestBody extends SpeakeasyBase {
  /**
   * A batch of documents formatted in JSON or HTML.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documents" })
  documents: string;
}

export enum UploadDocumentsFormatEnum {
  SDK = "sdk",
}

export class UploadDocumentsRequest extends SpeakeasyBase {
  /**
   * <p>The format of the batch you are uploading. Amazon CloudSearch supports two document batch formats:</p> <ul> <li>application/json</li> <li>application/xml</li> </ul>
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: UploadDocumentsContentTypeEnum;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UploadDocumentsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=format",
  })
  format: UploadDocumentsFormatEnum;
}

export class UploadDocumentsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * DocumentServiceException
   */
  @SpeakeasyMetadata()
  documentServiceException?: shared.DocumentServiceException;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  uploadDocumentsResponse?: shared.UploadDocumentsResponse;
}
