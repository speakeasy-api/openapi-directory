"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import obaddresstypecode_enum as shared_obaddresstypecode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBPostalAddress6:
    r"""Information that locates and identifies a specific address, as defined by postal services."""
    
    address_line: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AddressLine'), 'exclude': lambda f: f is None }})  
    address_type: Optional[shared_obaddresstypecode_enum.OBAddressTypeCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AddressType'), 'exclude': lambda f: f is None }})
    r"""Identifies the nature of the postal address."""  
    building_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BuildingNumber'), 'exclude': lambda f: f is None }})
    r"""Number that identifies the position of a building on a street."""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Country'), 'exclude': lambda f: f is None }})
    r"""Nation with its own government."""  
    country_sub_division: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CountrySubDivision'), 'exclude': lambda f: f is None }})
    r"""Identifies a subdivision of a country such as state, region, county."""  
    department: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Department'), 'exclude': lambda f: f is None }})
    r"""Identification of a division of a large organisation or building."""  
    post_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PostCode'), 'exclude': lambda f: f is None }})
    r"""Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail."""  
    street_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StreetName'), 'exclude': lambda f: f is None }})
    r"""Name of a street or thoroughfare."""  
    sub_department: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubDepartment'), 'exclude': lambda f: f is None }})
    r"""Identification of a sub-division of a large organisation or building."""  
    town_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TownName'), 'exclude': lambda f: f is None }})
    r"""Name of a built-up area, with defined boundaries, and a local government."""  
    