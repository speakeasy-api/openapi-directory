// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RegisterEmailRequestProviderEnum - The delivery method by which the value would be assigned. Always `email`
type RegisterEmailRequestProviderEnum string

const (
	RegisterEmailRequestProviderEnumEmail RegisterEmailRequestProviderEnum = "email"
)

func (e *RegisterEmailRequestProviderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "email":
		*e = RegisterEmailRequestProviderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterEmailRequestProviderEnum: %s", s)
	}
}

type RegisterEmailRequest struct {
	// An optional array of additional ApplicationID's that the value is to be assigned to.
	ApplicationIds map[string]interface{} `json:"application_ids,omitempty"`
	// An optional name to be attached to this binding
	Name *string `json:"name,omitempty"`
	// The delivery method by which the value would be assigned. Always `email`
	Provider RegisterEmailRequestProviderEnum `json:"provider"`
	// The email adress to attach to the application(s)
	Value string `json:"value"`
}
