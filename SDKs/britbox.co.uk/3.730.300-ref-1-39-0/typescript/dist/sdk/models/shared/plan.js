"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Plan = exports.PlanTypeEnum = exports.PlanRevenueTypeEnum = exports.PlanBillingPeriodTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The type of billing period used.
 */
var PlanBillingPeriodTypeEnum;
(function (PlanBillingPeriodTypeEnum) {
    PlanBillingPeriodTypeEnum["Day"] = "day";
    PlanBillingPeriodTypeEnum["Week"] = "week";
    PlanBillingPeriodTypeEnum["Month"] = "month";
    PlanBillingPeriodTypeEnum["Year"] = "year";
    PlanBillingPeriodTypeEnum["None"] = "none";
})(PlanBillingPeriodTypeEnum = exports.PlanBillingPeriodTypeEnum || (exports.PlanBillingPeriodTypeEnum = {}));
/**
 * The revenue type a plan targets.
 */
var PlanRevenueTypeEnum;
(function (PlanRevenueTypeEnum) {
    PlanRevenueTypeEnum["Tvod"] = "TVOD";
    PlanRevenueTypeEnum["Svod"] = "SVOD";
})(PlanRevenueTypeEnum = exports.PlanRevenueTypeEnum || (exports.PlanRevenueTypeEnum = {}));
/**
 * The type of plan.
 */
var PlanTypeEnum;
(function (PlanTypeEnum) {
    PlanTypeEnum["Free"] = "Free";
    PlanTypeEnum["Subscription"] = "Subscription";
})(PlanTypeEnum = exports.PlanTypeEnum || (exports.PlanTypeEnum = {}));
/**
 * The Plan requested.
 */
var Plan = /** @class */ (function (_super) {
    __extends(Plan, _super);
    function Plan() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alias" }),
        __metadata("design:type", String)
    ], Plan.prototype, "alias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "benefits" }),
        __metadata("design:type", Array)
    ], Plan.prototype, "benefits", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billingPeriodFrequency" }),
        __metadata("design:type", Number)
    ], Plan.prototype, "billingPeriodFrequency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billingPeriodType" }),
        __metadata("design:type", String)
    ], Plan.prototype, "billingPeriodType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], Plan.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customFields" }),
        __metadata("design:type", Object)
    ], Plan.prototype, "customFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hasTrialPeriod" }),
        __metadata("design:type", Boolean)
    ], Plan.prototype, "hasTrialPeriod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Plan.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isActive" }),
        __metadata("design:type", Boolean)
    ], Plan.prototype, "isActive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isFeatured" }),
        __metadata("design:type", Boolean)
    ], Plan.prototype, "isFeatured", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isPrivate" }),
        __metadata("design:type", Boolean)
    ], Plan.prototype, "isPrivate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "price" }),
        __metadata("design:type", Number)
    ], Plan.prototype, "price", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revenueType" }),
        __metadata("design:type", String)
    ], Plan.prototype, "revenueType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subscriptionCode" }),
        __metadata("design:type", String)
    ], Plan.prototype, "subscriptionCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tagline" }),
        __metadata("design:type", String)
    ], Plan.prototype, "tagline", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "termsAndConditions" }),
        __metadata("design:type", String)
    ], Plan.prototype, "termsAndConditions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], Plan.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trialPeriodDays" }),
        __metadata("design:type", Number)
    ], Plan.prototype, "trialPeriodDays", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Plan.prototype, "type", void 0);
    return Plan;
}(utils_1.SpeakeasyBase));
exports.Plan = Plan;
