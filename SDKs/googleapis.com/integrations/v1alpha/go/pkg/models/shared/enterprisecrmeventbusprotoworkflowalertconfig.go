// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum string

const (
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumMetricTypeUnspecified   EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "METRIC_TYPE_UNSPECIFIED"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumEventErrorRate          EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "EVENT_ERROR_RATE"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumEventWarningRate        EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "EVENT_WARNING_RATE"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumTaskErrorRate           EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "TASK_ERROR_RATE"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumTaskWarningRate         EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "TASK_WARNING_RATE"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumTaskRate                EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "TASK_RATE"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumEventRate               EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "EVENT_RATE"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumEventAverageDuration    EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "EVENT_AVERAGE_DURATION"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumEventPercentileDuration EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "EVENT_PERCENTILE_DURATION"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumTaskAverageDuration     EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "TASK_AVERAGE_DURATION"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnumTaskPercentileDuration  EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum = "TASK_PERCENTILE_DURATION"
)

func (e EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum) ToPointer() *EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum {
	return &e
}

func (e *EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "METRIC_TYPE_UNSPECIFIED":
		fallthrough
	case "EVENT_ERROR_RATE":
		fallthrough
	case "EVENT_WARNING_RATE":
		fallthrough
	case "TASK_ERROR_RATE":
		fallthrough
	case "TASK_WARNING_RATE":
		fallthrough
	case "TASK_RATE":
		fallthrough
	case "EVENT_RATE":
		fallthrough
	case "EVENT_AVERAGE_DURATION":
		fallthrough
	case "EVENT_PERCENTILE_DURATION":
		fallthrough
	case "TASK_AVERAGE_DURATION":
		fallthrough
	case "TASK_PERCENTILE_DURATION":
		*e = EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum: %v", v)
	}
}

// EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum - The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
type EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum string

const (
	EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnumUnspecifiedThresholdType EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum = "UNSPECIFIED_THRESHOLD_TYPE"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnumExpectedMin              EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum = "EXPECTED_MIN"
	EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnumExpectedMax              EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum = "EXPECTED_MAX"
)

func (e EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum) ToPointer() *EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum {
	return &e
}

func (e *EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED_THRESHOLD_TYPE":
		fallthrough
	case "EXPECTED_MIN":
		fallthrough
	case "EXPECTED_MAX":
		*e = EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum: %v", v)
	}
}

// EnterpriseCrmEventbusProtoWorkflowAlertConfig - Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.
type EnterpriseCrmEventbusProtoWorkflowAlertConfig struct {
	// For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
	AggregationPeriod *string `json:"aggregationPeriod,omitempty"`
	// Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this workflow alert.
	AlertDisabled *bool `json:"alertDisabled,omitempty"`
	// A name to identify this alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the workflow.
	AlertName *string `json:"alertName,omitempty"`
	// Client associated with this alert configuration.
	ClientID *string `json:"clientId,omitempty"`
	// Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
	DurationThresholdMs *string `json:"durationThresholdMs,omitempty"`
	// List of error enums for alerts.
	ErrorEnumList *EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList      `json:"errorEnumList,omitempty"`
	MetricType    *EnterpriseCrmEventbusProtoWorkflowAlertConfigMetricTypeEnum `json:"metricType,omitempty"`
	// For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
	NumAggregationPeriods *int `json:"numAggregationPeriods,omitempty"`
	// For either events or tasks, depending on the type of alert, count only final attempts, not retries.
	OnlyFinalAttempt *bool `json:"onlyFinalAttempt,omitempty"`
	// Link to a playbook for resolving the issue that triggered this alert.
	PlaybookURL *string `json:"playbookUrl,omitempty"`
	// The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
	ThresholdType *EnterpriseCrmEventbusProtoWorkflowAlertConfigThresholdTypeEnum `json:"thresholdType,omitempty"`
	// The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
	ThresholdValue *EnterpriseCrmEventbusProtoBaseAlertConfigThresholdValue `json:"thresholdValue,omitempty"`
	// List of error enums for alerts.
	WarningEnumList *EnterpriseCrmEventbusProtoBaseAlertConfigErrorEnumList `json:"warningEnumList,omitempty"`
}
