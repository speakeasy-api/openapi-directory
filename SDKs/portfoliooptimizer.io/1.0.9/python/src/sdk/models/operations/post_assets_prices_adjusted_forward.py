"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsPricesAdjustedForwardRequestBodyAssetsAssetDividends:
    
    amount: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    r"""The dividend amount distributed by the asset at the date t"""  
    date_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date') }})
    r"""The date corresponding to the date t in format YYYY-MM-DD, which is usually the ex-distribution date"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsPricesAdjustedForwardRequestBodyAssetsAssetPrices:
    
    close: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('close') }})
    r"""The unadjusted close price of the asset at the date t"""  
    date_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date') }})
    r"""The date corresponding to the date t in format YYYY-MM-DD"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsPricesAdjustedForwardRequestBodyAssetsAssetSplits:
    
    date_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date') }})
    r"""The date corresponding to the date t in format YYYY-MM-DD, which is usually the ex-distribution date"""  
    factor: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('factor') }})
    r"""The split factor of the asset at the date t"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsPricesAdjustedForwardRequestBodyAssets:
    
    asset_prices: list[PostAssetsPricesAdjustedForwardRequestBodyAssetsAssetPrices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetPrices') }})
    r"""assetPrices[t] contains price information for the asset at the date t"""  
    asset_dividends: Optional[list[PostAssetsPricesAdjustedForwardRequestBodyAssetsAssetDividends]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetDividends'), 'exclude': lambda f: f is None }})
    r"""assetDividends[t] contains dividend information for the asset at the date t"""  
    asset_splits: Optional[list[PostAssetsPricesAdjustedForwardRequestBodyAssetsAssetSplits]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetSplits'), 'exclude': lambda f: f is None }})
    r"""assetSplits[t] contains split information for the asset at the date t"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsPricesAdjustedForwardRequestBody:
    
    assets: list[PostAssetsPricesAdjustedForwardRequestBodyAssets] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assets') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsPricesAdjustedForward200ApplicationJSONAssetsAssetAdjustedPrices:
    
    date_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date') }})
    r"""The date corresponding to the date t in format YYYY-MM-DD"""  
    fully_adjusted_close: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullyAdjustedClose') }})
    r"""The dividend(s) and split(s) adjusted close price of the asset at the date t"""  
    dividend_adjusted_close: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dividendAdjustedClose'), 'exclude': lambda f: f is None }})
    r"""The dividend(s) adjusted close price of the asset at the date t, only present if dividend(s) information are provided"""  
    split_adjusted_close: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('splitAdjustedClose'), 'exclude': lambda f: f is None }})
    r"""The split(s) adjusted close price of the asset at the date t, only present if split(s) information are provided"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsPricesAdjustedForward200ApplicationJSONAssets:
    
    asset_adjusted_prices: list[PostAssetsPricesAdjustedForward200ApplicationJSONAssetsAssetAdjustedPrices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetAdjustedPrices') }})
    r"""assetAdjustedPrices[t] contains adjusted price information for the asset at the date t"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsPricesAdjustedForward200ApplicationJSON:
    r"""OK"""
    
    assets: list[PostAssetsPricesAdjustedForward200ApplicationJSONAssets] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assets') }})  
    

@dataclasses.dataclass
class PostAssetsPricesAdjustedForwardResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_assets_prices_adjusted_forward_200_application_json_object: Optional[PostAssetsPricesAdjustedForward200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    