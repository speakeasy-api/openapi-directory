/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ValidationErrorErrors extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  field?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "index" })
  index?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  resource?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: any;
}

/**
 * Validation Error
 */
export class ValidationError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl: string;

  @SpeakeasyMetadata({ elemType: ValidationErrorErrors })
  @Expose({ name: "errors" })
  @Type(() => ValidationErrorErrors)
  errors?: ValidationErrorErrors[];

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}
