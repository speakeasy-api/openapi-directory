/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CountOrgaUsersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

export class CountOrgaUsersRequest extends SpeakeasyBase {
  /**
   * Filter users by group
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=group" })
  group?: string[];

  /**
   * Filter users who don't have an active license
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=noActiveLicense",
  })
  noActiveLicense?: boolean;

  /**
   * The query to search
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  /**
   * Filter users by role
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=role" })
  role?: shared.RoleEnum[];
}

export class CountOrgaUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  flatErrorResponse?: shared.FlatErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Number of users
   */
  @SpeakeasyMetadata()
  countOrgaUsers200ApplicationJSONInteger?: number;
}
