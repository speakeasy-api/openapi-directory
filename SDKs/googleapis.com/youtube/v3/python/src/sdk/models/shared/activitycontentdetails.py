"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import activitycontentdetailsbulletin as shared_activitycontentdetailsbulletin
from ..shared import activitycontentdetailschannelitem as shared_activitycontentdetailschannelitem
from ..shared import activitycontentdetailscomment as shared_activitycontentdetailscomment
from ..shared import activitycontentdetailsfavorite as shared_activitycontentdetailsfavorite
from ..shared import activitycontentdetailslike as shared_activitycontentdetailslike
from ..shared import activitycontentdetailsplaylistitem as shared_activitycontentdetailsplaylistitem
from ..shared import activitycontentdetailspromoteditem as shared_activitycontentdetailspromoteditem
from ..shared import activitycontentdetailsrecommendation as shared_activitycontentdetailsrecommendation
from ..shared import activitycontentdetailssocial as shared_activitycontentdetailssocial
from ..shared import activitycontentdetailssubscription as shared_activitycontentdetailssubscription
from ..shared import activitycontentdetailsupload as shared_activitycontentdetailsupload
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActivityContentDetails:
    r"""Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc."""
    
    bulletin: Optional[shared_activitycontentdetailsbulletin.ActivityContentDetailsBulletin] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bulletin'), 'exclude': lambda f: f is None }})
    r"""Details about a channel bulletin post."""  
    channel_item: Optional[shared_activitycontentdetailschannelitem.ActivityContentDetailsChannelItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelItem'), 'exclude': lambda f: f is None }})
    r"""Details about a resource which was added to a channel."""  
    comment: Optional[shared_activitycontentdetailscomment.ActivityContentDetailsComment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""Information about a resource that received a comment."""  
    favorite: Optional[shared_activitycontentdetailsfavorite.ActivityContentDetailsFavorite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('favorite'), 'exclude': lambda f: f is None }})
    r"""Information about a video that was marked as a favorite video."""  
    like: Optional[shared_activitycontentdetailslike.ActivityContentDetailsLike] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('like'), 'exclude': lambda f: f is None }})
    r"""Information about a resource that received a positive (like) rating."""  
    playlist_item: Optional[shared_activitycontentdetailsplaylistitem.ActivityContentDetailsPlaylistItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('playlistItem'), 'exclude': lambda f: f is None }})
    r"""Information about a new playlist item."""  
    promoted_item: Optional[shared_activitycontentdetailspromoteditem.ActivityContentDetailsPromotedItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('promotedItem'), 'exclude': lambda f: f is None }})
    r"""Details about a resource which is being promoted."""  
    recommendation: Optional[shared_activitycontentdetailsrecommendation.ActivityContentDetailsRecommendation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recommendation'), 'exclude': lambda f: f is None }})
    r"""Information that identifies the recommended resource."""  
    social: Optional[shared_activitycontentdetailssocial.ActivityContentDetailsSocial] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('social'), 'exclude': lambda f: f is None }})
    r"""Details about a social network post."""  
    subscription: Optional[shared_activitycontentdetailssubscription.ActivityContentDetailsSubscription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscription'), 'exclude': lambda f: f is None }})
    r"""Information about a channel that a user subscribed to."""  
    upload: Optional[shared_activitycontentdetailsupload.ActivityContentDetailsUpload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upload'), 'exclude': lambda f: f is None }})
    r"""Information about the uploaded video."""  
    