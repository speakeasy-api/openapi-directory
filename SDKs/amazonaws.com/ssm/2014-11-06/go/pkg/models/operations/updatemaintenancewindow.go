// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateMaintenanceWindowXAmzTargetEnum
type UpdateMaintenanceWindowXAmzTargetEnum string

const (
	UpdateMaintenanceWindowXAmzTargetEnumAmazonSsmUpdateMaintenanceWindow UpdateMaintenanceWindowXAmzTargetEnum = "AmazonSSM.UpdateMaintenanceWindow"
)

func (e *UpdateMaintenanceWindowXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.UpdateMaintenanceWindow":
		*e = UpdateMaintenanceWindowXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateMaintenanceWindowXAmzTargetEnum: %s", s)
	}
}

type UpdateMaintenanceWindowHeaders struct {
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateMaintenanceWindowXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateMaintenanceWindowRequest struct {
	Headers UpdateMaintenanceWindowHeaders
	Request shared.UpdateMaintenanceWindowRequest `request:"mediaType=application/json"`
}

type UpdateMaintenanceWindowResponse struct {
	ContentType string
	// DoesNotExistException
	DoesNotExistException interface{}
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
	// Success
	UpdateMaintenanceWindowResult *shared.UpdateMaintenanceWindowResult
}
