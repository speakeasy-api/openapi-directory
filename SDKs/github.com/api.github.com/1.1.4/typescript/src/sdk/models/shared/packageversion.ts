/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class PackageVersionPackageVersionMetadataContainerMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags: string[];
}

export class PackageVersionPackageVersionMetadataDockerMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag?: string[];
}

export enum PackageVersionPackageVersionMetadataPackageTypeEnum {
  Npm = "npm",
  Maven = "maven",
  Rubygems = "rubygems",
  Docker = "docker",
  Nuget = "nuget",
  Container = "container",
}

export class PackageVersionPackageVersionMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "container" })
  @Type(() => PackageVersionPackageVersionMetadataContainerMetadata)
  container?: PackageVersionPackageVersionMetadataContainerMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "docker" })
  @Type(() => PackageVersionPackageVersionMetadataDockerMetadata)
  docker?: PackageVersionPackageVersionMetadataDockerMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "package_type" })
  packageType: PackageVersionPackageVersionMetadataPackageTypeEnum;
}

/**
 * A version of a software package
 */
export class PackageVersion extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deletedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl?: string;

  /**
   * Unique identifier of the package version.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "license" })
  license?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => PackageVersionPackageVersionMetadata)
  metadata?: PackageVersionPackageVersionMetadata;

  /**
   * The name of the package version.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "package_html_url" })
  packageHtmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
