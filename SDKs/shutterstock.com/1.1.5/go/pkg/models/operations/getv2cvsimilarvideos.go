// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetV2CvSimilarVideosSecurity struct {
	Basic              *shared.SchemeBasic              `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *shared.SchemeCustomerAccessCode `security:"scheme,type=oauth2"`
}

type GetV2CvSimilarVideosLicenseEnum string

const (
	GetV2CvSimilarVideosLicenseEnumCommercial GetV2CvSimilarVideosLicenseEnum = "commercial"
	GetV2CvSimilarVideosLicenseEnumEditorial  GetV2CvSimilarVideosLicenseEnum = "editorial"
)

func (e *GetV2CvSimilarVideosLicenseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "commercial":
		fallthrough
	case "editorial":
		*e = GetV2CvSimilarVideosLicenseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV2CvSimilarVideosLicenseEnum: %s", s)
	}
}

// GetV2CvSimilarVideosViewEnum - Amount of detail to render in the response
type GetV2CvSimilarVideosViewEnum string

const (
	GetV2CvSimilarVideosViewEnumMinimal GetV2CvSimilarVideosViewEnum = "minimal"
	GetV2CvSimilarVideosViewEnumFull    GetV2CvSimilarVideosViewEnum = "full"
)

func (e *GetV2CvSimilarVideosViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "minimal":
		fallthrough
	case "full":
		*e = GetV2CvSimilarVideosViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV2CvSimilarVideosViewEnum: %s", s)
	}
}

type GetV2CvSimilarVideosQueryParams struct {
	// The asset ID or upload ID to find similar videos for
	AssetID string `queryParam:"style=form,explode=true,name=asset_id"`
	// Language for the keywords and categories in the response
	Language *shared.LanguageEnum `queryParam:"style=form,explode=true,name=language"`
	// Show only videos with the specified license
	License []GetV2CvSimilarVideosLicenseEnum `queryParam:"style=form,explode=true,name=license"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Enable or disable safe search
	Safe *bool `queryParam:"style=form,explode=true,name=safe"`
	// Amount of detail to render in the response
	View *GetV2CvSimilarVideosViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type GetV2CvSimilarVideosRequest struct {
	QueryParams GetV2CvSimilarVideosQueryParams
	Security    GetV2CvSimilarVideosSecurity
}

type GetV2CvSimilarVideosResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	VideoSearchResults *shared.VideoSearchResults
}
