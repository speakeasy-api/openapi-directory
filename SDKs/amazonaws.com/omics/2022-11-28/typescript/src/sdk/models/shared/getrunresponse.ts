/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RunLogLevelEnum } from "./runloglevelenum";
import { RunStatusEnum } from "./runstatusenum";
import { WorkflowTypeEnum } from "./workflowtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class GetRunResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  definition?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "digest" })
  digest?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logLevel" })
  logLevel?: RunLogLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "outputUri" })
  outputUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  parameters?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceDigests" })
  resourceDigests?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "runGroupId" })
  runGroupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "runId" })
  runId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "startedBy" })
  startedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: RunStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stopTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stopTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "storageCapacity" })
  storageCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowId" })
  workflowId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowType" })
  workflowType?: WorkflowTypeEnum;
}
