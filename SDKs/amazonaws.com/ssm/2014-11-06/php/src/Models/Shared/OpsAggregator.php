<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OpsAggregator - One or more aggregators for viewing counts of OpsData using different dimensions such as <code>Source</code>, <code>CreatedTime</code>, or <code>Source and CreatedTime</code>, to name a few.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OpsAggregator
{
	#[\JMS\Serializer\Annotation\SerializedName('AggregatorType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $aggregatorType = null;
    
    /**
     * $aggregators
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OpsAggregator> $aggregators
     */
	#[\JMS\Serializer\Annotation\SerializedName('Aggregators')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OpsAggregator>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $aggregators = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('AttributeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $attributeName = null;
    
    /**
     * $filters
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OpsFilter> $filters
     */
	#[\JMS\Serializer\Annotation\SerializedName('Filters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OpsFilter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filters = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('TypeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $typeName = null;
    
    /**
     * $values
     * 
     * @var ?array<string, string> $values
     */
	#[\JMS\Serializer\Annotation\SerializedName('Values')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $values = null;
    
	public function __construct()
	{
		$this->aggregatorType = null;
		$this->aggregators = null;
		$this->attributeName = null;
		$this->filters = null;
		$this->typeName = null;
		$this->values = null;
	}
}
