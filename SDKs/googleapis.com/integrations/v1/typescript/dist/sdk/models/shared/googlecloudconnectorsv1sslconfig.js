"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleCloudConnectorsV1SslConfig = exports.GoogleCloudConnectorsV1SslConfigTypeEnum = exports.GoogleCloudConnectorsV1SslConfigTrustModelEnum = exports.GoogleCloudConnectorsV1SslConfigServerCertTypeEnum = exports.GoogleCloudConnectorsV1SslConfigClientCertTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var googlecloudconnectorsv1configvariable_1 = require("./googlecloudconnectorsv1configvariable");
var googlecloudconnectorsv1secret_1 = require("./googlecloudconnectorsv1secret");
var class_transformer_1 = require("class-transformer");
/**
 * Type of Client Cert (PEM/JKS/.. etc.)
 */
var GoogleCloudConnectorsV1SslConfigClientCertTypeEnum;
(function (GoogleCloudConnectorsV1SslConfigClientCertTypeEnum) {
    GoogleCloudConnectorsV1SslConfigClientCertTypeEnum["CertTypeUnspecified"] = "CERT_TYPE_UNSPECIFIED";
    GoogleCloudConnectorsV1SslConfigClientCertTypeEnum["Pem"] = "PEM";
})(GoogleCloudConnectorsV1SslConfigClientCertTypeEnum = exports.GoogleCloudConnectorsV1SslConfigClientCertTypeEnum || (exports.GoogleCloudConnectorsV1SslConfigClientCertTypeEnum = {}));
/**
 * Type of Server Cert (PEM/JKS/.. etc.)
 */
var GoogleCloudConnectorsV1SslConfigServerCertTypeEnum;
(function (GoogleCloudConnectorsV1SslConfigServerCertTypeEnum) {
    GoogleCloudConnectorsV1SslConfigServerCertTypeEnum["CertTypeUnspecified"] = "CERT_TYPE_UNSPECIFIED";
    GoogleCloudConnectorsV1SslConfigServerCertTypeEnum["Pem"] = "PEM";
})(GoogleCloudConnectorsV1SslConfigServerCertTypeEnum = exports.GoogleCloudConnectorsV1SslConfigServerCertTypeEnum || (exports.GoogleCloudConnectorsV1SslConfigServerCertTypeEnum = {}));
/**
 * Trust Model of the SSL connection
 */
var GoogleCloudConnectorsV1SslConfigTrustModelEnum;
(function (GoogleCloudConnectorsV1SslConfigTrustModelEnum) {
    GoogleCloudConnectorsV1SslConfigTrustModelEnum["Public"] = "PUBLIC";
    GoogleCloudConnectorsV1SslConfigTrustModelEnum["Private"] = "PRIVATE";
    GoogleCloudConnectorsV1SslConfigTrustModelEnum["Insecure"] = "INSECURE";
})(GoogleCloudConnectorsV1SslConfigTrustModelEnum = exports.GoogleCloudConnectorsV1SslConfigTrustModelEnum || (exports.GoogleCloudConnectorsV1SslConfigTrustModelEnum = {}));
/**
 * Controls the ssl type for the given connector version.
 */
var GoogleCloudConnectorsV1SslConfigTypeEnum;
(function (GoogleCloudConnectorsV1SslConfigTypeEnum) {
    GoogleCloudConnectorsV1SslConfigTypeEnum["SslTypeUnspecified"] = "SSL_TYPE_UNSPECIFIED";
    GoogleCloudConnectorsV1SslConfigTypeEnum["Tls"] = "TLS";
    GoogleCloudConnectorsV1SslConfigTypeEnum["Mtls"] = "MTLS";
})(GoogleCloudConnectorsV1SslConfigTypeEnum = exports.GoogleCloudConnectorsV1SslConfigTypeEnum || (exports.GoogleCloudConnectorsV1SslConfigTypeEnum = {}));
/**
 * SSL Configuration of a connection
 */
var GoogleCloudConnectorsV1SslConfig = /** @class */ (function (_super) {
    __extends(GoogleCloudConnectorsV1SslConfig, _super);
    function GoogleCloudConnectorsV1SslConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: googlecloudconnectorsv1configvariable_1.GoogleCloudConnectorsV1ConfigVariable }),
        (0, class_transformer_1.Expose)({ name: "additionalVariables" }),
        (0, class_transformer_1.Type)(function () { return googlecloudconnectorsv1configvariable_1.GoogleCloudConnectorsV1ConfigVariable; }),
        __metadata("design:type", Array)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "additionalVariables", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientCertType" }),
        __metadata("design:type", String)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "clientCertType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientCertificate" }),
        (0, class_transformer_1.Type)(function () { return googlecloudconnectorsv1secret_1.GoogleCloudConnectorsV1Secret; }),
        __metadata("design:type", googlecloudconnectorsv1secret_1.GoogleCloudConnectorsV1Secret)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "clientCertificate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientPrivateKey" }),
        (0, class_transformer_1.Type)(function () { return googlecloudconnectorsv1secret_1.GoogleCloudConnectorsV1Secret; }),
        __metadata("design:type", googlecloudconnectorsv1secret_1.GoogleCloudConnectorsV1Secret)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "clientPrivateKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientPrivateKeyPass" }),
        (0, class_transformer_1.Type)(function () { return googlecloudconnectorsv1secret_1.GoogleCloudConnectorsV1Secret; }),
        __metadata("design:type", googlecloudconnectorsv1secret_1.GoogleCloudConnectorsV1Secret)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "clientPrivateKeyPass", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privateServerCertificate" }),
        (0, class_transformer_1.Type)(function () { return googlecloudconnectorsv1secret_1.GoogleCloudConnectorsV1Secret; }),
        __metadata("design:type", googlecloudconnectorsv1secret_1.GoogleCloudConnectorsV1Secret)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "privateServerCertificate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serverCertType" }),
        __metadata("design:type", String)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "serverCertType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trustModel" }),
        __metadata("design:type", String)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "trustModel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "useSsl" }),
        __metadata("design:type", Boolean)
    ], GoogleCloudConnectorsV1SslConfig.prototype, "useSsl", void 0);
    return GoogleCloudConnectorsV1SslConfig;
}(utils_1.SpeakeasyBase));
exports.GoogleCloudConnectorsV1SslConfig = GoogleCloudConnectorsV1SslConfig;
