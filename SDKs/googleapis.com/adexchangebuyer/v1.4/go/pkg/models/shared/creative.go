// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type CreativeAdTechnologyProviders struct {
	// The detected ad technology provider IDs for this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/providers.csv for mapping of provider ID to provided name, a privacy policy URL, and a list of domains which can be attributed to the provider. If this creative contains provider IDs that are outside of those listed in the `BidRequest.adslot.consented_providers_settings.consented_providers` field on the  Authorized Buyers Real-Time Bidding protocol or the `BidRequest.user.ext.consented_providers_settings.consented_providers` field on the OpenRTB protocol, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the "Third-party Ad Technology Vendors" section of Authorized Buyers Program Guidelines.
	DetectedProviderIds []string `json:"detectedProviderIds,omitempty"`
	// Whether the creative contains an unidentified ad technology provider. If true, a bid submitted for a European Economic Area (EEA) user with this creative is not compliant with the GDPR policies as mentioned in the "Third-party Ad Technology Vendors" section of Authorized Buyers Program Guidelines.
	HasUnidentifiedProvider *bool `json:"hasUnidentifiedProvider,omitempty"`
}

type CreativeCorrectionsContexts struct {
	// Only set when contextType=AUCTION_TYPE. Represents the auction types this correction applies to.
	AuctionType []string `json:"auctionType,omitempty"`
	// The type of context (e.g., location, platform, auction type, SSL-ness).
	ContextType *string `json:"contextType,omitempty"`
	// Only set when contextType=LOCATION. Represents the geo criterias this correction applies to.
	GeoCriteriaID []int `json:"geoCriteriaId,omitempty"`
	// Only set when contextType=PLATFORM. Represents the platforms this correction applies to.
	Platform []string `json:"platform,omitempty"`
}

type CreativeCorrections struct {
	// All known serving contexts containing serving status information.
	Contexts []CreativeCorrectionsContexts `json:"contexts,omitempty"`
	// Additional details about the correction.
	Details []string `json:"details,omitempty"`
	// The type of correction that was applied to the creative.
	Reason *string `json:"reason,omitempty"`
}

type CreativeFilteringReasonsReasons struct {
	// The number of times the creative was filtered for the status. The count is aggregated across all publishers on the exchange.
	FilteringCount *string `json:"filteringCount,omitempty"`
	// The filtering status code as defined in  creative-status-codes.txt.
	FilteringStatus *int `json:"filteringStatus,omitempty"`
}

// CreativeFilteringReasons - The filtering reasons for the creative. Read-only. This field should not be set in requests.
type CreativeFilteringReasons struct {
	// The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST.
	Date *string `json:"date,omitempty"`
	// The filtering reasons.
	Reasons []CreativeFilteringReasonsReasons `json:"reasons,omitempty"`
}

// CreativeNativeAdAppIcon - The app icon, for app download ads.
type CreativeNativeAdAppIcon struct {
	Height *int    `json:"height,omitempty"`
	URL    *string `json:"url,omitempty"`
	Width  *int    `json:"width,omitempty"`
}

// CreativeNativeAdImage - A large image.
type CreativeNativeAdImage struct {
	Height *int    `json:"height,omitempty"`
	URL    *string `json:"url,omitempty"`
	Width  *int    `json:"width,omitempty"`
}

// CreativeNativeAdLogo - A smaller image, for the advertiser logo.
type CreativeNativeAdLogo struct {
	Height *int    `json:"height,omitempty"`
	URL    *string `json:"url,omitempty"`
	Width  *int    `json:"width,omitempty"`
}

// CreativeNativeAd - If nativeAd is set, HTMLSnippet, videoVastXML, and the videoURL outside of nativeAd should not be set. (The videoURL inside nativeAd can be set.)
type CreativeNativeAd struct {
	Advertiser *string `json:"advertiser,omitempty"`
	// The app icon, for app download ads.
	AppIcon *CreativeNativeAdAppIcon `json:"appIcon,omitempty"`
	// A long description of the ad.
	Body *string `json:"body,omitempty"`
	// A label for the button that the user is supposed to click.
	CallToAction *string `json:"callToAction,omitempty"`
	// The URL that the browser/SDK will load when the user clicks the ad.
	ClickLinkURL *string `json:"clickLinkUrl,omitempty"`
	// The URL to use for click tracking.
	ClickTrackingURL *string `json:"clickTrackingUrl,omitempty"`
	// A short title for the ad.
	Headline *string `json:"headline,omitempty"`
	// A large image.
	Image *CreativeNativeAdImage `json:"image,omitempty"`
	// The URLs are called when the impression is rendered.
	ImpressionTrackingURL []string `json:"impressionTrackingUrl,omitempty"`
	// A smaller image, for the advertiser logo.
	Logo *CreativeNativeAdLogo `json:"logo,omitempty"`
	// The price of the promoted app including the currency info.
	Price *string `json:"price,omitempty"`
	// The app rating in the app store. Must be in the range [0-5].
	StarRating *float64 `json:"starRating,omitempty"`
	// The URL of the XML VAST for a native ad. Note this is a separate field from resource.video_url.
	VideoURL *string `json:"videoURL,omitempty"`
}

type CreativeServingRestrictionsContexts struct {
	// Only set when contextType=AUCTION_TYPE. Represents the auction types this restriction applies to.
	AuctionType []string `json:"auctionType,omitempty"`
	// The type of context (e.g., location, platform, auction type, SSL-ness).
	ContextType *string `json:"contextType,omitempty"`
	// Only set when contextType=LOCATION. Represents the geo criterias this restriction applies to. Impressions are considered to match a context if either the user location or publisher location matches a given geoCriteriaId.
	GeoCriteriaID []int `json:"geoCriteriaId,omitempty"`
	// Only set when contextType=PLATFORM. Represents the platforms this restriction applies to.
	Platform []string `json:"platform,omitempty"`
}

type CreativeServingRestrictionsDisapprovalReasons struct {
	// Additional details about the reason for disapproval.
	Details []string `json:"details,omitempty"`
	// The categorized reason for disapproval.
	Reason *string `json:"reason,omitempty"`
}

type CreativeServingRestrictions struct {
	// All known contexts/restrictions.
	Contexts []CreativeServingRestrictionsContexts `json:"contexts,omitempty"`
	// The reasons for disapproval within this restriction, if any. Note that not all disapproval reasons may be categorized, so it is possible for the creative to have a status of DISAPPROVED or CONDITIONALLY_APPROVED with an empty list for disapproval_reasons. In this case, please reach out to your TAM to help debug the issue.
	DisapprovalReasons []CreativeServingRestrictionsDisapprovalReasons `json:"disapprovalReasons,omitempty"`
	// Why the creative is ineligible to serve in this context (e.g., it has been explicitly disapproved or is pending review).
	Reason *string `json:"reason,omitempty"`
}

// Creative - A creative and its classification data.
type Creative struct {
	// The HTML snippet that displays the ad when inserted in the web page. If set, videoURL, videoVastXML, and nativeAd should not be set.
	HTMLSnippet *string `json:"HTMLSnippet,omitempty"`
	// Account id.
	AccountID *int `json:"accountId,omitempty"`
	// The link to the Ad Preferences page. This is only supported for native ads.
	AdChoicesDestinationURL *string                        `json:"adChoicesDestinationUrl,omitempty"`
	AdTechnologyProviders   *CreativeAdTechnologyProviders `json:"adTechnologyProviders,omitempty"`
	// Detected advertiser id, if any. Read-only. This field should not be set in requests.
	AdvertiserID []string `json:"advertiserId,omitempty"`
	// The name of the company being advertised in the creative. A list of advertisers is provided in the advertisers.txt file.
	AdvertiserName *string `json:"advertiserName,omitempty"`
	// The agency id for this creative.
	AgencyID *string `json:"agencyId,omitempty"`
	// The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp).
	APIUploadTimestamp *time.Time `json:"apiUploadTimestamp,omitempty"`
	// List of buyer selectable attributes for the ads that may be shown from this snippet. Each attribute is represented by an integer as defined in  buyer-declarable-creative-attributes.txt.
	Attribute []int `json:"attribute,omitempty"`
	// A buyer-specific id identifying the creative in this ad.
	BuyerCreativeID *string `json:"buyerCreativeId,omitempty"`
	// The set of destination urls for the snippet.
	ClickThroughURL []string `json:"clickThroughUrl,omitempty"`
	// Shows any corrections that were applied to this creative. Read-only. This field should not be set in requests.
	Corrections []CreativeCorrections `json:"corrections,omitempty"`
	// Creative status identity type that the creative item applies to. Ad Exchange real-time bidding is migrating to the sizeless creative verification. Originally, Ad Exchange assigned creative verification status to a unique combination of a buyer creative ID and creative dimensions. Post-migration, a single verification status will be assigned at the buyer creative ID level. This field allows to distinguish whether a given creative status applies to a unique combination of a buyer creative ID and creative dimensions, or to a buyer creative ID as a whole.
	CreativeStatusIdentityType *string `json:"creativeStatusIdentityType,omitempty"`
	// Top-level deals status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=DIRECT_DEALS (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from servingRestrictions directly.
	DealsStatus *string `json:"dealsStatus,omitempty"`
	// Detected domains for this creative. Read-only. This field should not be set in requests.
	DetectedDomains []string `json:"detectedDomains,omitempty"`
	// The filtering reasons for the creative. Read-only. This field should not be set in requests.
	FilteringReasons *CreativeFilteringReasons `json:"filteringReasons,omitempty"`
	// Ad height.
	Height *int `json:"height,omitempty"`
	// The set of urls to be called to record an impression.
	ImpressionTrackingURL []string `json:"impressionTrackingUrl,omitempty"`
	// Resource type.
	Kind *string `json:"kind,omitempty"`
	// Detected languages for this creative. Read-only. This field should not be set in requests.
	Languages []string `json:"languages,omitempty"`
	// If nativeAd is set, HTMLSnippet, videoVastXML, and the videoURL outside of nativeAd should not be set. (The videoURL inside nativeAd can be set.)
	NativeAd *CreativeNativeAd `json:"nativeAd,omitempty"`
	// Top-level open auction status. Read-only. This field should not be set in requests. If disapproved, an entry for auctionType=OPEN_AUCTION (or ALL) in servingRestrictions will also exist. Note that this may be nuanced with other contextual restrictions, in which case it may be preferable to read from ServingRestrictions directly.
	OpenAuctionStatus *string `json:"openAuctionStatus,omitempty"`
	// Detected product categories, if any. Each category is represented by an integer as defined in  ad-product-categories.txt. Read-only. This field should not be set in requests.
	ProductCategories []int `json:"productCategories,omitempty"`
	// All restricted categories for the ads that may be shown from this snippet. Each category is represented by an integer as defined in the  ad-restricted-categories.txt.
	RestrictedCategories []int `json:"restrictedCategories,omitempty"`
	// Detected sensitive categories, if any. Each category is represented by an integer as defined in  ad-sensitive-categories.txt. Read-only. This field should not be set in requests.
	SensitiveCategories []int `json:"sensitiveCategories,omitempty"`
	// The granular status of this ad in specific contexts. A context here relates to where something ultimately serves (for example, a physical location, a platform, an HTTPS vs HTTP request, or the type of auction). Read-only. This field should not be set in requests. See the examples in the Creatives guide for more details.
	ServingRestrictions []CreativeServingRestrictions `json:"servingRestrictions,omitempty"`
	// List of vendor types for the ads that may be shown from this snippet. Each vendor type is represented by an integer as defined in vendors.txt.
	VendorType []int `json:"vendorType,omitempty"`
	// The version for this creative. Read-only. This field should not be set in requests.
	Version *int `json:"version,omitempty"`
	// The URL to fetch a video ad. If set, HTMLSnippet, videoVastXML, and nativeAd should not be set. Note, this is different from resource.native_ad.video_url above.
	VideoURL *string `json:"videoURL,omitempty"`
	// The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard. If set, HTMLSnippet, videoURL, and nativeAd and should not be set.
	VideoVastXML *string `json:"videoVastXML,omitempty"`
	// Ad width.
	Width *int `json:"width,omitempty"`
}
