/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FacetResult } from "./facetresult";
import { QueryResultItem } from "./queryresultitem";
import { SpellCorrectedQuery } from "./spellcorrectedquery";
import { Warning } from "./warning";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class QueryResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: FacetResult })
  @Expose({ name: "FacetResults" })
  @Type(() => FacetResult)
  facetResults?: FacetResult[];

  @SpeakeasyMetadata()
  @Expose({ name: "QueryId" })
  queryId?: string;

  @SpeakeasyMetadata({ elemType: QueryResultItem })
  @Expose({ name: "ResultItems" })
  @Type(() => QueryResultItem)
  resultItems?: QueryResultItem[];

  @SpeakeasyMetadata({ elemType: SpellCorrectedQuery })
  @Expose({ name: "SpellCorrectedQueries" })
  @Type(() => SpellCorrectedQuery)
  spellCorrectedQueries?: SpellCorrectedQuery[];

  @SpeakeasyMetadata()
  @Expose({ name: "TotalNumberOfResults" })
  totalNumberOfResults?: number;

  @SpeakeasyMetadata({ elemType: Warning })
  @Expose({ name: "Warnings" })
  @Type(() => Warning)
  warnings?: Warning[];
}
