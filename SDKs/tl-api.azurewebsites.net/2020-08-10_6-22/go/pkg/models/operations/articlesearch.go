// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ArticleSearchRequest struct {
	// Active Status 1 : Active, 2: Inactive, 3: All, Default : 1
	ActiveStatus *int `queryParam:"style=form,explode=true,name=activeStatus"`
	// -1 for all gyms
	GymID *int `queryParam:"style=form,explode=true,name=gymId"`
	// number of recode in result and default is 100. use negative numbers to order by desc
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// number of recodes to skip
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// order by column.!-- invalid column will give internal server error
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// part of article name
	SearchText *string `queryParam:"style=form,explode=true,name=searchText"`
	// filter article type. default is 'all'
	Type *string `queryParam:"style=form,explode=true,name=type"`
}

type ArticleSearchResponse struct {
	APIResponse *shared.APIResponse
	ContentType string
	// API Response with set of a Article entities
	DefaultResponseDTOOfListOfArticleSearchDTO *shared.DefaultResponseDTOOfListOfArticleSearchDTO
	StatusCode                                 int
	RawResponse                                *http.Response
}
