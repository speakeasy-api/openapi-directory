// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CloseAnAccountPathParams struct {
	AccountID string `pathParam:"style=simple,explode=false,name=account_id"`
}

type CloseAnAccountRequest struct {
	PathParams CloseAnAccountPathParams
}

type CloseAnAccountDefaultApplicationJSON13StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CloseAnAccountDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CloseAnAccountDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CloseAnAccountDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON13TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON13TypeEnumRateLimitedError CloseAnAccountDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CloseAnAccountDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CloseAnAccountDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON13 struct {
	Detail     string                                           `json:"detail"`
	RetryAfter *int64                                           `json:"retry_after,omitempty"`
	Status     CloseAnAccountDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                           `json:"title"`
	Type       CloseAnAccountDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON12StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON12StatusEnumFourHundredAndThree CloseAnAccountDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CloseAnAccountDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CloseAnAccountDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON12TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON12TypeEnumPrivateFeatureError CloseAnAccountDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CloseAnAccountDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CloseAnAccountDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON12 struct {
	Detail string                                           `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                           `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON11StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON11StatusEnumFourHundredAndFour CloseAnAccountDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CloseAnAccountDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CloseAnAccountDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON11TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON11TypeEnumObjectNotFoundError CloseAnAccountDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CloseAnAccountDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CloseAnAccountDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON11 struct {
	Detail string                                           `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                           `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON10StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON10StatusEnumFourHundred CloseAnAccountDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CloseAnAccountDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CloseAnAccountDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON10TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON10TypeEnumMalformedRequestError CloseAnAccountDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CloseAnAccountDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CloseAnAccountDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON10 struct {
	Detail string                                           `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                           `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON9StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON9StatusEnumFourHundred CloseAnAccountDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CloseAnAccountDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CloseAnAccountDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON9TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON9TypeEnumInvalidParametersError CloseAnAccountDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CloseAnAccountDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CloseAnAccountDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                        `json:"errors,omitempty"`
	Status CloseAnAccountDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON8StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON8StatusEnumFourHundredAndNine CloseAnAccountDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CloseAnAccountDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CloseAnAccountDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON8TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON8TypeEnumInvalidOperationError CloseAnAccountDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CloseAnAccountDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CloseAnAccountDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON8 struct {
	Detail string                                          `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON7StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON7StatusEnumFourHundredAndOne CloseAnAccountDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CloseAnAccountDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CloseAnAccountDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON7TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CloseAnAccountDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CloseAnAccountDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CloseAnAccountDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON7 struct {
	Detail string                                          `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON6StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON6StatusEnumFiveHundred CloseAnAccountDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CloseAnAccountDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CloseAnAccountDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON6TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON6TypeEnumInternalServerError CloseAnAccountDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CloseAnAccountDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CloseAnAccountDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON6 struct {
	Detail string                                          `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON5StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON5StatusEnumFourHundredAndThree CloseAnAccountDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CloseAnAccountDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CloseAnAccountDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON5TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CloseAnAccountDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CloseAnAccountDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CloseAnAccountDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON5 struct {
	Detail string                                          `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON4StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CloseAnAccountDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CloseAnAccountDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CloseAnAccountDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON4TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CloseAnAccountDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CloseAnAccountDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CloseAnAccountDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON4 struct {
	Detail string                                          `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON3StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON3StatusEnumFourHundredAndNine CloseAnAccountDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CloseAnAccountDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CloseAnAccountDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON3TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON3TypeEnumIdempotencyConflictError CloseAnAccountDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CloseAnAccountDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CloseAnAccountDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON3 struct {
	Detail string                                          `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON2StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON2StatusEnumFourHundredAndThree CloseAnAccountDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CloseAnAccountDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CloseAnAccountDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON2TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CloseAnAccountDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CloseAnAccountDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CloseAnAccountDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON2 struct {
	Detail string                                          `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CloseAnAccountDefaultApplicationJSON1StatusEnum string

const (
	CloseAnAccountDefaultApplicationJSON1StatusEnumFourHundredAndFour CloseAnAccountDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CloseAnAccountDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CloseAnAccountDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON1TypeEnum string

const (
	CloseAnAccountDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CloseAnAccountDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CloseAnAccountDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CloseAnAccountDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseAnAccountDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CloseAnAccountDefaultApplicationJSON1 struct {
	Detail string                                          `json:"detail"`
	Status CloseAnAccountDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   CloseAnAccountDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CloseAnAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account
	Account *shared.Account
	// Error
	Error interface{}
}
