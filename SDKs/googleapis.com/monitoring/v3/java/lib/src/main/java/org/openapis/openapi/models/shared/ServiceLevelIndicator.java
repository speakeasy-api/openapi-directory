/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ServiceLevelIndicator - A Service-Level Indicator (SLI) describes the "performance" of a service. For some services, the SLI is well-defined. In such cases, the SLI can be described easily by referencing the well-known SLI and providing the needed parameters. Alternatively, a "custom" SLI can be defined with a query to the underlying metric store. An SLI is defined to be good_service / total_service over any queried time interval. The value of performance always falls into the range 0 &lt;= performance &lt;= 1. A custom SLI describes how to compute this ratio, whether this is by dividing values from a pair of time series, cutting a Distribution into good and bad counts, or counting time windows in which the service complies with a criterion. For separation of concerns, a single Service-Level Indicator measures performance for only one aspect of service quality, such as fraction of successful queries or fast-enough queries.
 */
public class ServiceLevelIndicator {
    /**
     * An SLI measuring performance on a well-known service type. Performance will be computed on the basis of pre-defined metrics. The type of the service_resource determines the metrics to use and the service_resource.labels and metric_labels are used to construct a monitoring filter to filter that metric down to just the data relevant to this service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basicSli")
    public BasicSli basicSli;

    public ServiceLevelIndicator withBasicSli(BasicSli basicSli) {
        this.basicSli = basicSli;
        return this;
    }
    
    /**
     * Service Level Indicators for which atomic units of service are counted directly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestBased")
    public RequestBasedSli requestBased;

    public ServiceLevelIndicator withRequestBased(RequestBasedSli requestBased) {
        this.requestBased = requestBased;
        return this;
    }
    
    /**
     * A WindowsBasedSli defines good_service as the count of time windows for which the provided service was of good quality. Criteria for determining if service was good are embedded in the window_criterion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("windowsBased")
    public WindowsBasedSli windowsBased;

    public ServiceLevelIndicator withWindowsBased(WindowsBasedSli windowsBased) {
        this.windowsBased = windowsBased;
        return this;
    }
    
    public ServiceLevelIndicator(){}
}
