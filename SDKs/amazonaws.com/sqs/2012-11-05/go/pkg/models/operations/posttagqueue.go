// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTTagQueueActionEnum
type POSTTagQueueActionEnum string

const (
	POSTTagQueueActionEnumTagQueue POSTTagQueueActionEnum = "TagQueue"
)

func (e POSTTagQueueActionEnum) ToPointer() *POSTTagQueueActionEnum {
	return &e
}

func (e *POSTTagQueueActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TagQueue":
		*e = POSTTagQueueActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTTagQueueActionEnum: %v", v)
	}
}

// POSTTagQueueVersionEnum
type POSTTagQueueVersionEnum string

const (
	POSTTagQueueVersionEnumTwoThousandAndTwelve1105 POSTTagQueueVersionEnum = "2012-11-05"
)

func (e POSTTagQueueVersionEnum) ToPointer() *POSTTagQueueVersionEnum {
	return &e
}

func (e *POSTTagQueueVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-11-05":
		*e = POSTTagQueueVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTTagQueueVersionEnum: %v", v)
	}
}

type POSTTagQueueRequest struct {
	Action            POSTTagQueueActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                  `request:"mediaType=text/xml"`
	Version           POSTTagQueueVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTTagQueueResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
