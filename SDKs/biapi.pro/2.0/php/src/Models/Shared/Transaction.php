<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Transaction - Successful DELETE on Transaction resource
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Transaction
{
    /**
     * If false, PFM services will ignore this transaction
     * 
     * @var bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $active;
    
    /**
     * Date considered by PFM services. It is used to change the month of a transaction, for example.
     * 
     * @var ?\DateTime $applicationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('application_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $applicationDate = null;
    
    /**
     * Date used by the bank for the transaction
     * 
     * @var ?\DateTime $bdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('bdate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $bdate = null;
    
    /**
     * Datetime used by the bank
     * 
     * @var ?\DateTime $bdatetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('bdatetime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $bdatetime = null;
    
    /**
     * Card number associated to the transaction
     * 
     * @var ?string $card
     */
	#[\JMS\Serializer\Annotation\SerializedName('card')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $card = null;
    
    /**
     * If true, this transaction hasn't been yet debited
     * 
     * @var bool $coming
     */
	#[\JMS\Serializer\Annotation\SerializedName('coming')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $coming;
    
    /**
     * User comment
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * Commission taken on the transaction
     * 
     * @var ?float $commission
     */
	#[\JMS\Serializer\Annotation\SerializedName('commission')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $commission = null;
    
    /**
     * Commission currency
     * 
     * @var ?array<string, mixed> $commissionCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('commission_currency')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $commissionCurrency = null;
    
    /**
     * Counterparty
     * 
     * @var ?string $counterparty
     */
	#[\JMS\Serializer\Annotation\SerializedName('counterparty')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $counterparty = null;
    
    /**
     * Original country
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * Debit date
     * 
     * @var \DateTime $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $date;
    
    /**
     * Date when the transaction has been seen
     * 
     * @var \DateTime $dateScraped
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_scraped')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $dateScraped;
    
    /**
     * Datetime of the debit of the transaction
     * 
     * @var ?\DateTime $datetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('datetime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $datetime = null;
    
    /**
     * If set, this transaction has been removed from the bank
     * 
     * @var ?\DateTime $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $deleted = null;
    
    /**
     * Gross value of the transaction
     * 
     * @var ?float $grossValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('gross_value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $grossValue = null;
    
    /**
     * ID of the transaction
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * ID of the related account
     * 
     * @var int $idAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_account')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $idAccount;
    
    /**
     * ID of the related category
     * 
     * @var ?int $idCategory
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_category')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idCategory = null;
    
    /**
     * If the transaction is part of a cluster
     * 
     * @var ?int $idCluster
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_cluster')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idCluster = null;
    
    /**
     * Last update of the transaction
     * 
     * @var ?\DateTime $lastUpdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_update')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastUpdate = null;
    
    /**
     * Type of transaction
     * 
     * @var string $nature
     */
	#[\JMS\Serializer\Annotation\SerializedName('nature')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nature;
    
    /**
     * Original currency
     * 
     * @var ?array<string, mixed> $originalCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('original_currency')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $originalCurrency = null;
    
    /**
     * Gross value in the original currency
     * 
     * @var ?float $originalGrossValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('original_gross_value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $originalGrossValue = null;
    
    /**
     * Value in the original currency
     * 
     * @var ?float $originalValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('original_value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $originalValue = null;
    
    /**
     * Full label of the transaction
     * 
     * @var string $originalWording
     */
	#[\JMS\Serializer\Annotation\SerializedName('original_wording')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $originalWording;
    
    /**
     * Realization of the transaction
     * 
     * @var \DateTime $rdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('rdate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $rdate;
    
    /**
     * Datetime of the realization of the transaction
     * 
     * @var ?\DateTime $rdatetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('rdatetime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $rdatetime = null;
    
    /**
     * Simplified label of the transaction
     * 
     * @var string $simplifiedWording
     */
	#[\JMS\Serializer\Annotation\SerializedName('simplified_wording')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $simplifiedWording;
    
    /**
     * Internal state of the transaction
     * 
     * @var string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $state;
    
    /**
     * Do not use it
     * 
     * @var string $stemmedWording
     */
	#[\JMS\Serializer\Annotation\SerializedName('stemmed_wording')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $stemmedWording;
    
    /**
     * Value of the transaction
     * 
     * @var ?float $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $value = null;
    
    /**
     * Value date of the transaction
     * 
     * @var ?\DateTime $vdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('vdate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $vdate = null;
    
    /**
     * Datetime of the Value of the transaction
     * 
     * @var ?\DateTime $vdatetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('vdatetime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $vdatetime = null;
    
    /**
     * Webid of the transaction
     * 
     * @var ?string $webid
     */
	#[\JMS\Serializer\Annotation\SerializedName('webid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webid = null;
    
    /**
     * Label set by the user
     * 
     * @var ?string $wording
     */
	#[\JMS\Serializer\Annotation\SerializedName('wording')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wording = null;
    
	public function __construct()
	{
		$this->active = false;
		$this->applicationDate = null;
		$this->bdate = null;
		$this->bdatetime = null;
		$this->card = null;
		$this->coming = false;
		$this->comment = null;
		$this->commission = null;
		$this->commissionCurrency = null;
		$this->counterparty = null;
		$this->country = null;
		$this->date = new \DateTime();
		$this->dateScraped = new \DateTime();
		$this->datetime = null;
		$this->deleted = null;
		$this->grossValue = null;
		$this->id = 0;
		$this->idAccount = 0;
		$this->idCategory = null;
		$this->idCluster = null;
		$this->lastUpdate = null;
		$this->nature = "";
		$this->originalCurrency = null;
		$this->originalGrossValue = null;
		$this->originalValue = null;
		$this->originalWording = "";
		$this->rdate = new \DateTime();
		$this->rdatetime = null;
		$this->simplifiedWording = "";
		$this->state = "";
		$this->stemmedWording = "";
		$this->value = null;
		$this->vdate = null;
		$this->vdatetime = null;
		$this->webid = null;
		$this->wording = null;
	}
}
