// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteInferenceExperimentXAmzTargetEnum
type DeleteInferenceExperimentXAmzTargetEnum string

const (
	DeleteInferenceExperimentXAmzTargetEnumSageMakerDeleteInferenceExperiment DeleteInferenceExperimentXAmzTargetEnum = "SageMaker.DeleteInferenceExperiment"
)

func (e DeleteInferenceExperimentXAmzTargetEnum) ToPointer() *DeleteInferenceExperimentXAmzTargetEnum {
	return &e
}

func (e *DeleteInferenceExperimentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.DeleteInferenceExperiment":
		*e = DeleteInferenceExperimentXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteInferenceExperimentXAmzTargetEnum: %v", v)
	}
}

type DeleteInferenceExperimentRequest struct {
	DeleteInferenceExperimentRequest shared.DeleteInferenceExperimentRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       DeleteInferenceExperimentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteInferenceExperimentResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	DeleteInferenceExperimentResponse *shared.DeleteInferenceExperimentResponse
	StatusCode                        int
	RawResponse                       *http.Response
	// ResourceNotFound
	ResourceNotFound interface{}
}
