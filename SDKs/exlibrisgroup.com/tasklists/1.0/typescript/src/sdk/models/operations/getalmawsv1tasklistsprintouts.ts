/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetAlmawsV1TaskListsPrintoutsRequest extends SpeakeasyBase {
  /**
   * Printout Name. Optional.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=letter",
  })
  letter?: string;

  /**
   * Limits the number of results. Optional. Valid values are 0-100. Default value: 10.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Offset of the results returned. Optional. Default value: 0, which means that the first results will be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Printout Printer
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=printer_id",
  })
  printerId?: string;

  /**
   * A list of Printout IDs (for example: 123,456,778) from 1 to the limit of 100 Optional. Use of this option overrides all of the filtering parameters
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=printout_id",
  })
  printoutId?: string;

  /**
   * Printout status. Optional. Valid values are: Printed, Pending, Canceled.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: string;
}

/**
 * The printer.
 */
export class GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutPrinter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Status of the printout (Pending/Printed/Canceled).
 */
export class GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Printout Object.
 */
export class GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintout extends SpeakeasyBase {
  /**
   * The time that the letter has been send to the Printout Queue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  /**
   * The printout id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Letter Html body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "letter" })
  letter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  /**
   * The printer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "printer" })
  @Type(() => GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutPrinter)
  printer?: GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutPrinter;

  /**
   * The printout name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "printout" })
  printout?: string;

  /**
   * The size of the letter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: string;

  /**
   * The user who printed the letter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  /**
   * Status of the printout (Pending/Printed/Canceled).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutStatus)
  status?: GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutStatus;
}

/**
 * A list of printouts.
 */
export class GetAlmawsV1TaskListsPrintouts200ApplicationJSON extends SpeakeasyBase {
  /**
   * printout object.
   */
  @SpeakeasyMetadata({
    elemType: GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintout,
  })
  @Expose({ name: "printout" })
  @Type(() => GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintout)
  printout?: GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintout[];

  /**
   * The total number of printouts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_record_count" })
  totalRecordCount?: number;
}

export class GetAlmawsV1TaskListsPrintoutsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK - This method returns an object based on rest_printouts.xsd. See [here](/alma/apis/docs/xsd/rest_printouts.xsd)
   */
  @SpeakeasyMetadata()
  getAlmawsV1TaskListsPrintouts200ApplicationJSONObject?: GetAlmawsV1TaskListsPrintouts200ApplicationJSON;
}
