/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class MemberListLinksSelf extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class MemberListLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => MemberListLinksSelf)
  self?: MemberListLinksSelf;
}

/**
 * The state that the member is in for this conversation
 */
export enum MemberListStateEnum {
  Invited = "INVITED",
  Joined = "JOINED",
}

export class MemberList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => MemberListLinks)
  links?: MemberListLinks;

  /**
   * The display name of the User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * Member ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The name of the User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The state that the member is in for this conversation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: MemberListStateEnum;

  /**
   * The ID of the User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;
}
