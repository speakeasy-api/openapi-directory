/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression - Information about a current character's status with a Progression. A progression is a value that can increase with activity and has levels. Think Character Level and Reputation Levels. Combine this "live" data with the related DestinyProgressionDefinition for a full picture of the Progression.
 */
public class DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression {
    /**
     * This is the total amount of progress obtained overall for this progression (for instance, the total amount of Character Level experience earned)
     */
    
    public Integer currentProgress;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withCurrentProgress(Integer currentProgress) {
        this.currentProgress = currentProgress;
        return this;
    }
    
    /**
     * The number of resets of this progression you've executed this season, if applicable to this progression.
     */
    
    public Integer currentResetCount;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withCurrentResetCount(Integer currentResetCount) {
        this.currentResetCount = currentResetCount;
        return this;
    }
    
    /**
     * If this progression has a daily limit, this is that limit.
     */
    
    public Integer dailyLimit;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withDailyLimit(Integer dailyLimit) {
        this.dailyLimit = dailyLimit;
        return this;
    }
    
    /**
     * The amount of progress earned today for this progression.
     */
    
    public Integer dailyProgress;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withDailyProgress(Integer dailyProgress) {
        this.dailyProgress = dailyProgress;
        return this;
    }
    
    /**
     * This is the level of the progression (for instance, the Character Level).
     */
    
    public Integer level;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withLevel(Integer level) {
        this.level = level;
        return this;
    }
    
    /**
     * This is the maximum possible level you can achieve for this progression (for example, the maximum character level obtainable)
     */
    
    public Integer levelCap;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withLevelCap(Integer levelCap) {
        this.levelCap = levelCap;
        return this;
    }
    
    /**
     * The total amount of progression (i.e. "Experience") needed in order to reach the next level.
     */
    
    public Integer nextLevelAt;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withNextLevelAt(Integer nextLevelAt) {
        this.nextLevelAt = nextLevelAt;
        return this;
    }
    
    /**
     * The amount of progression (i.e. "Experience") needed to reach the next level of this Progression. Jeez, progression is such an overloaded word.
     */
    
    public Integer progressToNextLevel;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withProgressToNextLevel(Integer progressToNextLevel) {
        this.progressToNextLevel = progressToNextLevel;
        return this;
    }
    
    /**
     * The hash identifier of the Progression in question. Use it to look up the DestinyProgressionDefinition in static data.
     */
    
    public Long progressionHash;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withProgressionHash(Long progressionHash) {
        this.progressionHash = progressionHash;
        return this;
    }
    
    /**
     * Information about historical rewards for this progression, if there is any data for it.
     */
    
    public Integer[] rewardItemStates;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withRewardItemStates(Integer[] rewardItemStates) {
        this.rewardItemStates = rewardItemStates;
        return this;
    }
    
    /**
     * Information about historical resets of this progression, if there is any data for it.
     */
    
    public DestinyDestinyProgressionResetEntry[] seasonResets;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withSeasonResets(DestinyDestinyProgressionResetEntry[] seasonResets) {
        this.seasonResets = seasonResets;
        return this;
    }
    
    /**
     * Progressions define their levels in "steps". Since the last step may be repeatable, the user may be at a higher level than the actual Step achieved in the progression. Not necessarily useful, but potentially interesting for those cruising the API. Relate this to the "steps" property of the DestinyProgression to see which step the user is on, if you care about that. (Note that this is Content Version dependent since it refers to indexes.)
     */
    
    public Integer stepIndex;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withStepIndex(Integer stepIndex) {
        this.stepIndex = stepIndex;
        return this;
    }
    
    /**
     * If this progression has a weekly limit, this is that limit.
     */
    
    public Integer weeklyLimit;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withWeeklyLimit(Integer weeklyLimit) {
        this.weeklyLimit = weeklyLimit;
        return this;
    }
    
    /**
     * The amount of progress earned toward this progression in the current week.
     */
    
    public Integer weeklyProgress;

    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression withWeeklyProgress(Integer weeklyProgress) {
        this.weeklyProgress = weeklyProgress;
        return this;
    }
    
    public DestinyEntitiesItemsDestinyItemTalentGridComponentGridProgression(){}
}
