"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrackingfieldListTrackingFieldListTrackingField:
    r"""Tracking Field"""
    
    field: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field'), 'exclude': lambda f: f is None }})
    r"""Label/ Name for the tracking field."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of Tracking Field"""  
    recommended_values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recommended_values'), 'exclude': lambda f: f is None }})
    r"""Array of recommended values"""  
    required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required'), 'exclude': lambda f: f is None }})
    r"""Tracking Field Required"""  
    visible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visible'), 'exclude': lambda f: f is None }})
    r"""Tracking Field Visible"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrackingfieldListTrackingFieldList:
    r"""Tracking Field List"""
    
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""The number of all records available across pages"""  
    tracking_fields: Optional[list[TrackingfieldListTrackingFieldListTrackingField]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tracking_fields'), 'exclude': lambda f: f is None }})
    r"""Array of Tracking Fields"""  
    

@dataclasses.dataclass
class TrackingfieldListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tracking_field_list: Optional[TrackingfieldListTrackingFieldList] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    List of Tracking Fields returned.
    """  
    