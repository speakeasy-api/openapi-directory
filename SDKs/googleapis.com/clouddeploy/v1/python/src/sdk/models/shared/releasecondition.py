"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import releasereadycondition as shared_releasereadycondition
from ..shared import skaffoldsupportedcondition as shared_skaffoldsupportedcondition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReleaseCondition:
    r"""ReleaseCondition contains all conditions relevant to a Release."""
    
    release_ready_condition: Optional[shared_releasereadycondition.ReleaseReadyCondition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('releaseReadyCondition'), 'exclude': lambda f: f is None }})
    r"""ReleaseReadyCondition contains information around the status of the Release. If a release is not ready, you cannot create a rollout with the release."""  
    skaffold_supported_condition: Optional[shared_skaffoldsupportedcondition.SkaffoldSupportedCondition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skaffoldSupportedCondition'), 'exclude': lambda f: f is None }})
    r"""SkaffoldSupportedCondition contains information about when support for the release's version of skaffold ends."""  
    