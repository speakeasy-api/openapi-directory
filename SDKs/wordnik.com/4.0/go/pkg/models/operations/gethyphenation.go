// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetHyphenationPathParams struct {
	// Word to get syllables for
	Word string `pathParam:"style=simple,explode=false,name=word"`
}

// GetHyphenationSourceDictionaryEnum - Get from a single dictionary. Valid options: ahd-5, century, wiktionary, webster, and wordnet.
type GetHyphenationSourceDictionaryEnum string

const (
	GetHyphenationSourceDictionaryEnumAhd5       GetHyphenationSourceDictionaryEnum = "ahd-5"
	GetHyphenationSourceDictionaryEnumCentury    GetHyphenationSourceDictionaryEnum = "century"
	GetHyphenationSourceDictionaryEnumWiktionary GetHyphenationSourceDictionaryEnum = "wiktionary"
	GetHyphenationSourceDictionaryEnumWebster    GetHyphenationSourceDictionaryEnum = "webster"
	GetHyphenationSourceDictionaryEnumWordnet    GetHyphenationSourceDictionaryEnum = "wordnet"
)

func (e *GetHyphenationSourceDictionaryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ahd-5":
		fallthrough
	case "century":
		fallthrough
	case "wiktionary":
		fallthrough
	case "webster":
		fallthrough
	case "wordnet":
		*e = GetHyphenationSourceDictionaryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHyphenationSourceDictionaryEnum: %s", s)
	}
}

// GetHyphenationUseCanonicalEnum - If true will try to return a correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
type GetHyphenationUseCanonicalEnum string

const (
	GetHyphenationUseCanonicalEnumFalse GetHyphenationUseCanonicalEnum = "false"
	GetHyphenationUseCanonicalEnumTrue  GetHyphenationUseCanonicalEnum = "true"
)

func (e *GetHyphenationUseCanonicalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "false":
		fallthrough
	case "true":
		*e = GetHyphenationUseCanonicalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHyphenationUseCanonicalEnum: %s", s)
	}
}

type GetHyphenationQueryParams struct {
	// Maximum number of results to return
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Get from a single dictionary. Valid options: ahd-5, century, wiktionary, webster, and wordnet.
	SourceDictionary *GetHyphenationSourceDictionaryEnum `queryParam:"style=form,explode=true,name=sourceDictionary"`
	// If true will try to return a correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
	UseCanonical *GetHyphenationUseCanonicalEnum `queryParam:"style=form,explode=true,name=useCanonical"`
}

type GetHyphenationRequest struct {
	PathParams  GetHyphenationPathParams
	QueryParams GetHyphenationQueryParams
}

type GetHyphenationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
