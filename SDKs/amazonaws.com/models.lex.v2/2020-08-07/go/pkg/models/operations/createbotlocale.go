// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateBotLocalePathParams struct {
	// The identifier of the bot to create the locale for.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
	// The version of the bot to create the locale for. This can only be the draft version of the bot.
	BotVersion string `pathParam:"style=simple,explode=false,name=botVersion"`
}

type CreateBotLocaleHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateBotLocaleRequestBodyVoiceSettings - Defines settings for using an Amazon Polly voice to communicate with a user.
type CreateBotLocaleRequestBodyVoiceSettings struct {
	Engine  *shared.VoiceEngineEnum `json:"engine,omitempty"`
	VoiceID *string                 `json:"voiceId,omitempty"`
}

type CreateBotLocaleRequestBody struct {
	// A description of the bot locale. Use this to help identify the bot locale in lists.
	Description *string `json:"description,omitempty"`
	// The identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.
	LocaleID string `json:"localeId"`
	// <p>Determines the threshold where Amazon Lex will insert the <code>AMAZON.FallbackIntent</code>, <code>AMAZON.KendraSearchIntent</code>, or both when returning alternative intents. <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> are only inserted if they are configured for the bot.</p> <p>For example, suppose a bot is configured with the confidence threshold of 0.80 and the <code>AMAZON.FallbackIntent</code>. Amazon Lex returns three alternative intents with the following confidence scores: IntentA (0.70), IntentB (0.60), IntentC (0.50). The response from the <code>RecognizeText</code> operation would be:</p> <ul> <li> <p>AMAZON.FallbackIntent</p> </li> <li> <p>IntentA</p> </li> <li> <p>IntentB</p> </li> <li> <p>IntentC</p> </li> </ul>
	NluIntentConfidenceThreshold float64 `json:"nluIntentConfidenceThreshold"`
	// Defines settings for using an Amazon Polly voice to communicate with a user.
	VoiceSettings *CreateBotLocaleRequestBodyVoiceSettings `json:"voiceSettings,omitempty"`
}

type CreateBotLocaleRequest struct {
	PathParams CreateBotLocalePathParams
	Headers    CreateBotLocaleHeaders
	Request    CreateBotLocaleRequestBody `request:"mediaType=application/json"`
}

type CreateBotLocaleResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateBotLocaleResponse *shared.CreateBotLocaleResponse
	// InternalServerException
	InternalServerException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
