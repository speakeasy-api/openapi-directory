// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ScriptProcessesListScriptProcessesSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum string

const (
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumProcessStatusUnspecified ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "PROCESS_STATUS_UNSPECIFIED"
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumRunning                  ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "RUNNING"
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumPaused                   ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "PAUSED"
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumCompleted                ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "COMPLETED"
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumCanceled                 ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "CANCELED"
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumFailed                   ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "FAILED"
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumTimedOut                 ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "TIMED_OUT"
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumUnknown                  ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "UNKNOWN"
	ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnumDelayed                  ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum = "DELAYED"
)

func (e *ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESS_STATUS_UNSPECIFIED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "PAUSED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "CANCELED":
		fallthrough
	case "FAILED":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "DELAYED":
		*e = ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum: %s", s)
	}
}

type ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum string

const (
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumProcessTypeUnspecified ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "PROCESS_TYPE_UNSPECIFIED"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumAddOn                  ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "ADD_ON"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumExecutionAPI           ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "EXECUTION_API"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumTimeDriven             ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "TIME_DRIVEN"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumTrigger                ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "TRIGGER"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumWebapp                 ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "WEBAPP"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumEditor                 ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "EDITOR"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumSimpleTrigger          ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "SIMPLE_TRIGGER"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumMenu                   ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "MENU"
	ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnumBatchTask              ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum = "BATCH_TASK"
)

func (e *ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESS_TYPE_UNSPECIFIED":
		fallthrough
	case "ADD_ON":
		fallthrough
	case "EXECUTION_API":
		fallthrough
	case "TIME_DRIVEN":
		fallthrough
	case "TRIGGER":
		fallthrough
	case "WEBAPP":
		fallthrough
	case "EDITOR":
		fallthrough
	case "SIMPLE_TRIGGER":
		fallthrough
	case "MENU":
		fallthrough
	case "BATCH_TASK":
		*e = ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum: %s", s)
	}
}

type ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum string

const (
	ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnumUserAccessLevelUnspecified ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum = "USER_ACCESS_LEVEL_UNSPECIFIED"
	ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnumNone                       ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum = "NONE"
	ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnumRead                       ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum = "READ"
	ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnumWrite                      ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum = "WRITE"
	ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnumOwner                      ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum = "OWNER"
)

func (e *ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USER_ACCESS_LEVEL_UNSPECIFIED":
		fallthrough
	case "NONE":
		fallthrough
	case "READ":
		fallthrough
	case "WRITE":
		fallthrough
	case "OWNER":
		*e = ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum: %s", s)
	}
}

type ScriptProcessesListScriptProcessesRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of returned processes per page of results. Defaults to 50.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// The token for continuing a previous list request on the next page. This should be set to the value of `nextPageToken` from a previous response.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The script ID of the project whose processes are listed.
	ScriptID *string `queryParam:"style=form,explode=true,name=scriptId"`
	// Optional field used to limit returned processes to those originating from projects with a specific deployment ID.
	ScriptProcessFilterDeploymentID *string `queryParam:"style=form,explode=true,name=scriptProcessFilter.deploymentId"`
	// Optional field used to limit returned processes to those that completed on or before the given timestamp.
	ScriptProcessFilterEndTime *string `queryParam:"style=form,explode=true,name=scriptProcessFilter.endTime"`
	// Optional field used to limit returned processes to those originating from a script function with the given function name.
	ScriptProcessFilterFunctionName *string `queryParam:"style=form,explode=true,name=scriptProcessFilter.functionName"`
	// Optional field used to limit returned processes to those that were started on or after the given timestamp.
	ScriptProcessFilterStartTime *string `queryParam:"style=form,explode=true,name=scriptProcessFilter.startTime"`
	// Optional field used to limit returned processes to those having one of the specified process statuses.
	ScriptProcessFilterStatuses []ScriptProcessesListScriptProcessesScriptProcessFilterStatusesEnum `queryParam:"style=form,explode=true,name=scriptProcessFilter.statuses"`
	// Optional field used to limit returned processes to those having one of the specified process types.
	ScriptProcessFilterTypes []ScriptProcessesListScriptProcessesScriptProcessFilterTypesEnum `queryParam:"style=form,explode=true,name=scriptProcessFilter.types"`
	// Optional field used to limit returned processes to those having one of the specified user access levels.
	ScriptProcessFilterUserAccessLevels []ScriptProcessesListScriptProcessesScriptProcessFilterUserAccessLevelsEnum `queryParam:"style=form,explode=true,name=scriptProcessFilter.userAccessLevels"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type ScriptProcessesListScriptProcessesResponse struct {
	ContentType string
	// Successful response
	ListScriptProcessesResponse *shared.ListScriptProcessesResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
