/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FindingInput - Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding.
 */
public class FindingInput {
    /**
     * Represents an access event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access")
    public Access access;
    public FindingInput withAccess(Access access) {
        this.access = access;
        return this;
    }
    
    /**
     * The canonical name of the finding. It's either "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}", "folders/{folder_id}/sources/{source_id}/findings/{finding_id}" or "projects/{project_number}/sources/{source_id}/findings/{finding_id}", depending on the closest CRM ancestor of the resource associated with the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canonicalName")
    public String canonicalName;
    public FindingInput withCanonicalName(String canonicalName) {
        this.canonicalName = canonicalName;
        return this;
    }
    
    /**
     * The additional taxonomy group within findings from a given source. This field is immutable after creation time. Example: "XSS_FLASH_INJECTION"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public String category;
    public FindingInput withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * The [data profile](https://cloud.google.com/dlp/docs/data-profiles) associated with the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudDlpDataProfile")
    public CloudDlpDataProfile cloudDlpDataProfile;
    public FindingInput withCloudDlpDataProfile(CloudDlpDataProfile cloudDlpDataProfile) {
        this.cloudDlpDataProfile = cloudDlpDataProfile;
        return this;
    }
    
    /**
     * Details about the Cloud Data Loss Prevention (Cloud DLP) [inspection job](https://cloud.google.com/dlp/docs/concepts-job-triggers) that produced the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudDlpInspection")
    public CloudDlpInspection cloudDlpInspection;
    public FindingInput withCloudDlpInspection(CloudDlpInspection cloudDlpInspection) {
        this.cloudDlpInspection = cloudDlpInspection;
        return this;
    }
    
    /**
     * Contains compliance information for security standards associated to the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compliances")
    public Compliance[] compliances;
    public FindingInput withCompliances(Compliance[] compliances) {
        this.compliances = compliances;
        return this;
    }
    
    /**
     * Contains information about the IP connection associated with the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connections")
    public Connection[] connections;
    public FindingInput withConnections(Connection[] connections) {
        this.connections = connections;
        return this;
    }
    
    /**
     * Containers associated with the finding. containers provides information for both Kubernetes and non-Kubernetes containers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containers")
    public Container[] containers;
    public FindingInput withContainers(Container[] containers) {
        this.containers = containers;
        return this;
    }
    
    /**
     * The time at which the finding was created in Security Command Center.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public FindingInput withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Represents database access information, such as queries. A database may be a sub-resource of an instance (as in the case of CloudSQL instances or Cloud Spanner instances), or the database instance itself. Some database resources may not have the full resource name populated because these resource types are not yet supported by Cloud Asset Inventory (e.g. CloudSQL databases). In these cases only the display name will be provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("database")
    public Database database;
    public FindingInput withDatabase(Database database) {
        this.database = database;
        return this;
    }
    
    /**
     * Contains more detail about the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public FindingInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The time the finding was first detected. If an existing finding is updated, then this is the time the update occurred. For example, if the finding represents an open firewall, this property captures the time the detector believes the firewall became open. The accuracy is determined by the detector. If the finding is later resolved, then this time reflects when the finding was resolved. This must not be set to a value greater than the current timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTime")
    public String eventTime;
    public FindingInput withEventTime(String eventTime) {
        this.eventTime = eventTime;
        return this;
    }
    
    /**
     * Exfiltration represents a data exfiltration attempt of one or more sources to one or more targets. Sources represent the source of data that is exfiltrated, and Targets represents the destination the data was copied to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exfiltration")
    public Exfiltration exfiltration;
    public FindingInput withExfiltration(Exfiltration exfiltration) {
        this.exfiltration = exfiltration;
        return this;
    }
    
    /**
     * The URI that, if available, points to a web page outside of Security Command Center where additional information about the finding can be found. This field is guaranteed to be either empty or a well formed URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalUri")
    public String externalUri;
    public FindingInput withExternalUri(String externalUri) {
        this.externalUri = externalUri;
        return this;
    }
    
    /**
     * File associated with the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("files")
    public File[] files;
    public FindingInput withFiles(File[] files) {
        this.files = files;
        return this;
    }
    
    /**
     * The class of the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("findingClass")
    public FindingFindingClassEnum findingClass;
    public FindingInput withFindingClass(FindingFindingClassEnum findingClass) {
        this.findingClass = findingClass;
        return this;
    }
    
    /**
     * Represents IAM bindings associated with the Finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iamBindings")
    public IamBinding[] iamBindings;
    public FindingInput withIamBindings(IamBinding[] iamBindings) {
        this.iamBindings = iamBindings;
        return this;
    }
    
    /**
     * Represents what's commonly known as an _indicator of compromise_ (IoC) in computer forensics. This is an artifact observed on a network or in an operating system that, with high confidence, indicates a computer intrusion. For more information, see [Indicator of compromise](https://en.wikipedia.org/wiki/Indicator_of_compromise).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indicator")
    public Indicator indicator;
    public FindingInput withIndicator(Indicator indicator) {
        this.indicator = indicator;
        return this;
    }
    
    /**
     * Kernel mode rootkit signatures.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kernelRootkit")
    public KernelRootkit kernelRootkit;
    public FindingInput withKernelRootkit(KernelRootkit kernelRootkit) {
        this.kernelRootkit = kernelRootkit;
        return this;
    }
    
    /**
     * Kubernetes-related attributes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kubernetes")
    public Kubernetes kubernetes;
    public FindingInput withKubernetes(Kubernetes kubernetes) {
        this.kubernetes = kubernetes;
        return this;
    }
    
    /**
     * MITRE ATT&amp;CK tactics and techniques related to this finding. See: https://attack.mitre.org
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mitreAttack")
    public MitreAttack mitreAttack;
    public FindingInput withMitreAttack(MitreAttack mitreAttack) {
        this.mitreAttack = mitreAttack;
        return this;
    }
    
    /**
     * Unique identifier of the module which generated the finding. Example: folders/598186756061/securityHealthAnalyticsSettings/customModules/56799441161885
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("moduleName")
    public String moduleName;
    public FindingInput withModuleName(String moduleName) {
        this.moduleName = moduleName;
        return this;
    }
    
    /**
     * Indicates the mute state of a finding (either muted, unmuted or undefined). Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mute")
    public FindingMuteEnum mute;
    public FindingInput withMute(FindingMuteEnum mute) {
        this.mute = mute;
        return this;
    }
    
    /**
     * First known as mute_annotation. Records additional information about the mute operation e.g. mute config that muted the finding, user who muted the finding, etc. Unlike other attributes of a finding, a finding provider shouldn't set the value of mute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("muteInitiator")
    public String muteInitiator;
    public FindingInput withMuteInitiator(String muteInitiator) {
        this.muteInitiator = muteInitiator;
        return this;
    }
    
    /**
     * The relative resource name of this finding. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/sources/{source_id}/findings/{finding_id}"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public FindingInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Next steps associate to the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextSteps")
    public String nextSteps;
    public FindingInput withNextSteps(String nextSteps) {
        this.nextSteps = nextSteps;
        return this;
    }
    
    /**
     * Contains information about the org policy constraints associated with the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orgPolicyConstraints")
    public OrgPolicyConstraint[] orgPolicyConstraints;
    public FindingInput withOrgPolicyConstraints(OrgPolicyConstraint[] orgPolicyConstraints) {
        this.orgPolicyConstraints = orgPolicyConstraints;
        return this;
    }
    
    /**
     * The relative resource name of the source the finding belongs to. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name This field is immutable after creation time. For example: "organizations/{organization_id}/sources/{source_id}"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public String parent;
    public FindingInput withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * Represents operating system processes associated with the Finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processes")
    public Process[] processes;
    public FindingInput withProcesses(Process[] processes) {
        this.processes = processes;
        return this;
    }
    
    /**
     * For findings on Google Cloud resources, the full resource name of the Google Cloud resource this finding is for. See: https://cloud.google.com/apis/design/resource_names#full_resource_name When the finding is for a non-Google Cloud resource, the resourceName can be a customer or partner defined string. This field is immutable after creation time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceName")
    public String resourceName;
    public FindingInput withResourceName(String resourceName) {
        this.resourceName = resourceName;
        return this;
    }
    
    /**
     * User specified security marks that are attached to the parent Security Command Center resource. Security marks are scoped within a Security Command Center organization -- they can be modified and viewed by all users who have proper permissions on the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityMarks")
    public SecurityMarks securityMarks;
    public FindingInput withSecurityMarks(SecurityMarks securityMarks) {
        this.securityMarks = securityMarks;
        return this;
    }
    
    /**
     * The severity of the finding. This field is managed by the source that writes the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public FindingSeverityEnum severity;
    public FindingInput withSeverity(FindingSeverityEnum severity) {
        this.severity = severity;
        return this;
    }
    
    /**
     * Source specific properties. These properties are managed by the source that writes the finding. The key names in the source_properties map must be between 1 and 255 characters, and must start with a letter and contain alphanumeric characters or underscores only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceProperties")
    public java.util.Map<String, Object> sourceProperties;
    public FindingInput withSourceProperties(java.util.Map<String, Object> sourceProperties) {
        this.sourceProperties = sourceProperties;
        return this;
    }
    
    /**
     * The state of the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public FindingStateEnum state;
    public FindingInput withState(FindingStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Refers to common vulnerability fields e.g. cve, cvss, cwe etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vulnerability")
    public Vulnerability vulnerability;
    public FindingInput withVulnerability(Vulnerability vulnerability) {
        this.vulnerability = vulnerability;
        return this;
    }
    
}
