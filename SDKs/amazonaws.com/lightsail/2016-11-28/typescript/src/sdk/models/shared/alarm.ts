/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlarmStateEnum } from "./alarmstateenum";
import { ComparisonOperatorEnum } from "./comparisonoperatorenum";
import { ContactProtocolEnum } from "./contactprotocolenum";
import { MetricNameEnum } from "./metricnameenum";
import { MetricStatisticEnum } from "./metricstatisticenum";
import { MetricUnitEnum } from "./metricunitenum";
import { MonitoredResourceInfo } from "./monitoredresourceinfo";
import { ResourceLocation } from "./resourcelocation";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { TreatMissingDataEnum } from "./treatmissingdataenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>Describes an alarm.</p> <p>An alarm is a way to monitor your Lightsail resource metrics. For more information, see <a href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-alarms">Alarms in Amazon Lightsail</a>.</p>
 */
export class Alarm extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comparisonOperator" })
  comparisonOperator?: ComparisonOperatorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "contactProtocols" })
  contactProtocols?: ContactProtocolEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "datapointsToAlarm" })
  datapointsToAlarm?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "evaluationPeriods" })
  evaluationPeriods?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => ResourceLocation)
  location?: ResourceLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "metricName" })
  metricName?: MetricNameEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "monitoredResourceInfo" })
  @Type(() => MonitoredResourceInfo)
  monitoredResourceInfo?: MonitoredResourceInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notificationEnabled" })
  notificationEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "notificationTriggers" })
  notificationTriggers?: AlarmStateEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "period" })
  period?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType?: ResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: AlarmStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statistic" })
  statistic?: MetricStatisticEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "supportCode" })
  supportCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "threshold" })
  threshold?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "treatMissingData" })
  treatMissingData?: TreatMissingDataEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: MetricUnitEnum;
}
