// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PartnerUnclaimSectionTypeEnum - Required. The section type of the device's provisioning record.
type PartnerUnclaimSectionTypeEnum string

const (
	PartnerUnclaimSectionTypeEnumSectionTypeUnspecified PartnerUnclaimSectionTypeEnum = "SECTION_TYPE_UNSPECIFIED"
	PartnerUnclaimSectionTypeEnumSectionTypeSimLock     PartnerUnclaimSectionTypeEnum = "SECTION_TYPE_SIM_LOCK"
	PartnerUnclaimSectionTypeEnumSectionTypeZeroTouch   PartnerUnclaimSectionTypeEnum = "SECTION_TYPE_ZERO_TOUCH"
)

func (e *PartnerUnclaimSectionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SECTION_TYPE_UNSPECIFIED":
		fallthrough
	case "SECTION_TYPE_SIM_LOCK":
		fallthrough
	case "SECTION_TYPE_ZERO_TOUCH":
		*e = PartnerUnclaimSectionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PartnerUnclaimSectionTypeEnum: %s", s)
	}
}

// PartnerUnclaim - Identifies one unclaim request.
type PartnerUnclaim struct {
	// Required. Device ID of the device.
	DeviceID *string `json:"deviceId,omitempty"`
	// Encapsulates hardware and product IDs to identify a manufactured device. To understand requirements on identifier sets, read [Identifiers](https://developers.google.com/zero-touch/guides/identifiers).
	DeviceIdentifier *DeviceIdentifier `json:"deviceIdentifier,omitempty"`
	// Required. The section type of the device's provisioning record.
	SectionType *PartnerUnclaimSectionTypeEnum `json:"sectionType,omitempty"`
	// Optional. The duration of the vacation unlock starting from when the request is processed. (1 day is treated as 24 hours)
	VacationModeDays *int `json:"vacationModeDays,omitempty"`
	// Optional. The expiration time of the vacation unlock.
	VacationModeExpireTime *string `json:"vacationModeExpireTime,omitempty"`
}
