/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateTokenRequestBody {
    /**
     * For &lt;i&gt;type=ACTION&lt;/i&gt; only; defines token action to be perfromed
     */
    @SpeakeasyMetadata("form:name=action")
    public CreateTokenRequestBodyActionEnum action;

    public CreateTokenRequestBody withAction(CreateTokenRequestBodyActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=APIKEY&lt;/i&gt; only (default: ROLE_APIKEY_LICENSEE); defines token RoleID
     */
    @SpeakeasyMetadata("form:name=apiKeyRole")
    public CreateTokenRequestBodyApiKeyRoleEnum apiKeyRole;

    public CreateTokenRequestBody withApiKeyRole(CreateTokenRequestBodyApiKeyRoleEnum apiKeyRole) {
        this.apiKeyRole = apiKeyRole;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=SHOP&lt;/i&gt; only; take customers to this URL when they cancel their checkout
     */
    @SpeakeasyMetadata("form:name=cancelURL")
    public String cancelURL;

    public CreateTokenRequestBody withCancelURL(String cancelURL) {
        this.cancelURL = cancelURL;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=SHOP&lt;/i&gt; only; shop link title for cancel checkout process
     */
    @SpeakeasyMetadata("form:name=cancelURLTitle")
    public String cancelURLTitle;

    public CreateTokenRequestBody withCancelURLTitle(String cancelURLTitle) {
        this.cancelURLTitle = cancelURLTitle;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=SHOP&lt;/i&gt; only; identifies LicenseTemplate that will be assigned to the shop token
     */
    @SpeakeasyMetadata("form:name=licenseTemplateNumber")
    public String licenseTemplateNumber;

    public CreateTokenRequestBody withLicenseTemplateNumber(String licenseTemplateNumber) {
        this.licenseTemplateNumber = licenseTemplateNumber;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=SHOP&lt;/i&gt; or &lt;i&gt;type=ACTION&lt;/i&gt; only (mandatory); identifies Licensee that will be assigned to the shop token
     */
    @SpeakeasyMetadata("form:name=licenseeNumber")
    public String licenseeNumber;

    public CreateTokenRequestBody withLicenseeNumber(String licenseeNumber) {
        this.licenseeNumber = licenseeNumber;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=SHOP&lt;/i&gt; only; identifies Shopping Item name that will be shown to the customer
     */
    @SpeakeasyMetadata("form:name=predefinedShoppingItem")
    public String predefinedShoppingItem;

    public CreateTokenRequestBody withPredefinedShoppingItem(String predefinedShoppingItem) {
        this.predefinedShoppingItem = predefinedShoppingItem;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=APIKEY&lt;/i&gt; only (optional); defines PrivateKey to be used with the validate method&lt;br/&gt;&lt;strong&gt;Please Note:&lt;/strong&gt; PrivateKey need to be provided as one line without spaces
     */
    @SpeakeasyMetadata("form:name=privateKey")
    public String privateKey;

    public CreateTokenRequestBody withPrivateKey(String privateKey) {
        this.privateKey = privateKey;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=SHOP&lt;/i&gt; only (mandatory); identifies Product that will be assigned to the shop token
     */
    @SpeakeasyMetadata("form:name=productNumber")
    public String productNumber;

    public CreateTokenRequestBody withProductNumber(String productNumber) {
        this.productNumber = productNumber;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=SHOP&lt;/i&gt; only; take customers to this URL when they finish checkout
     */
    @SpeakeasyMetadata("form:name=successURL")
    public String successURL;

    public CreateTokenRequestBody withSuccessURL(String successURL) {
        this.successURL = successURL;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=SHOP&lt;/i&gt; only; shop link title for successful checkout process
     */
    @SpeakeasyMetadata("form:name=successURLTitle")
    public String successURLTitle;

    public CreateTokenRequestBody withSuccessURLTitle(String successURLTitle) {
        this.successURLTitle = successURLTitle;
        return this;
    }
    
    /**
     * Token type to be generated
     */
    @SpeakeasyMetadata("form:name=tokenType")
    public CreateTokenRequestBodyTokenTypeEnum tokenType;

    public CreateTokenRequestBody withTokenType(CreateTokenRequestBodyTokenTypeEnum tokenType) {
        this.tokenType = tokenType;
        return this;
    }
    
    /**
     * For &lt;i&gt;tokenType=DEFAULT&lt;/i&gt; only; action type to be set
     */
    @SpeakeasyMetadata("form:name=type")
    public CreateTokenRequestBodyTypeEnum type;

    public CreateTokenRequestBody withType(CreateTokenRequestBodyTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public CreateTokenRequestBody(@JsonProperty("tokenType") CreateTokenRequestBodyTokenTypeEnum tokenType) {
        this.tokenType = tokenType;
  }
}
