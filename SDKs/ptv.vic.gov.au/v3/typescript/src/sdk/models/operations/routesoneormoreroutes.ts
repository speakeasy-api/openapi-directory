/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum RoutesOneOrMoreRoutesRouteTypesEnum {
  Zero = "0",
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
}

export class RoutesOneOrMoreRoutesRequest extends SpeakeasyBase {
  /**
   * Your developer id
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=devid" })
  devid?: string;

  /**
   * Filter by name  of route (accepts partial route name matches)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=route_name",
  })
  routeName?: string;

  /**
   * Filter by route_type; values returned via RouteTypes API
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=route_types",
  })
  routeTypes?: RoutesOneOrMoreRoutesRouteTypesEnum[];

  /**
   * Authentication signature for request
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=signature",
  })
  signature?: string;

  /**
   * Please ignore
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token?: string;
}

export class RoutesOneOrMoreRoutesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid Request
   */
  @SpeakeasyMetadata()
  v3ErrorResponse?: shared.V3ErrorResponse;

  /**
   * Route names and numbers for all routes of all route types.
   */
  @SpeakeasyMetadata()
  v3RouteResponse?: shared.V3RouteResponse;
}
