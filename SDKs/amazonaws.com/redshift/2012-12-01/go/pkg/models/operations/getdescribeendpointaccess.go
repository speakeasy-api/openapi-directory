// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeEndpointAccessActionEnum
type GETDescribeEndpointAccessActionEnum string

const (
	GETDescribeEndpointAccessActionEnumDescribeEndpointAccess GETDescribeEndpointAccessActionEnum = "DescribeEndpointAccess"
)

func (e *GETDescribeEndpointAccessActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeEndpointAccess":
		*e = GETDescribeEndpointAccessActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEndpointAccessActionEnum: %s", s)
	}
}

// GETDescribeEndpointAccessVersionEnum
type GETDescribeEndpointAccessVersionEnum string

const (
	GETDescribeEndpointAccessVersionEnumTwoThousandAndTwelve1201 GETDescribeEndpointAccessVersionEnum = "2012-12-01"
)

func (e *GETDescribeEndpointAccessVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETDescribeEndpointAccessVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeEndpointAccessVersionEnum: %s", s)
	}
}

type GETDescribeEndpointAccessQueryParams struct {
	Action GETDescribeEndpointAccessActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The cluster identifier associated with the described endpoint.
	ClusterIdentifier *string `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	// The name of the endpoint to be described.
	EndpointName *string `queryParam:"style=form,explode=true,name=EndpointName"`
	// An optional pagination token provided by a previous <code>DescribeEndpointAccess</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a <code>Marker</code> is included in the response so that the remaining results can be retrieved.
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// The Amazon Web Services account ID of the owner of the cluster.
	ResourceOwner *string                              `queryParam:"style=form,explode=true,name=ResourceOwner"`
	Version       GETDescribeEndpointAccessVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The virtual private cloud (VPC) identifier with access to the cluster.
	VpcID *string `queryParam:"style=form,explode=true,name=VpcId"`
}

type GETDescribeEndpointAccessHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeEndpointAccessRequest struct {
	QueryParams GETDescribeEndpointAccessQueryParams
	Headers     GETDescribeEndpointAccessHeaders
}

type GETDescribeEndpointAccessResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
