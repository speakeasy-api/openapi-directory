// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteGroupPolicyActionEnum
type POSTDeleteGroupPolicyActionEnum string

const (
	POSTDeleteGroupPolicyActionEnumDeleteGroupPolicy POSTDeleteGroupPolicyActionEnum = "DeleteGroupPolicy"
)

func (e *POSTDeleteGroupPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteGroupPolicy":
		*e = POSTDeleteGroupPolicyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteGroupPolicyActionEnum: %s", s)
	}
}

// POSTDeleteGroupPolicyVersionEnum
type POSTDeleteGroupPolicyVersionEnum string

const (
	POSTDeleteGroupPolicyVersionEnumTwoThousandAndTen0508 POSTDeleteGroupPolicyVersionEnum = "2010-05-08"
)

func (e *POSTDeleteGroupPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = POSTDeleteGroupPolicyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteGroupPolicyVersionEnum: %s", s)
	}
}

type POSTDeleteGroupPolicyQueryParams struct {
	Action  POSTDeleteGroupPolicyActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDeleteGroupPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDeleteGroupPolicyHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteGroupPolicyRequest struct {
	QueryParams POSTDeleteGroupPolicyQueryParams
	Headers     POSTDeleteGroupPolicyHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDeleteGroupPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
