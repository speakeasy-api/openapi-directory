"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import patchcompliancelevel_enum as shared_patchcompliancelevel_enum
from ..shared import patchdeploymentstatus_enum as shared_patchdeploymentstatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchStatus:
    r"""Information about the approval status of a patch."""
    
    approval_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApprovalDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    compliance_level: Optional[shared_patchcompliancelevel_enum.PatchComplianceLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComplianceLevel'), 'exclude': lambda f: f is None }})  
    deployment_status: Optional[shared_patchdeploymentstatus_enum.PatchDeploymentStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeploymentStatus'), 'exclude': lambda f: f is None }})  
    