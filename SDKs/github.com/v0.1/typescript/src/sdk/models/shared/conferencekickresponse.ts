/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Response message
 */
export enum ConferenceKickResponseMessageEnum {
  ConferenceKickExecuted = "Conference Kick Executed",
  ConferenceNameParameterMustBePresent = "ConferenceName Parameter must be present",
  MemberIDParameterMustBePresent = "MemberID Parameter must be present",
  ConferenceKickFailedConferenceNotFound = "Conference Kick Failed -- Conference not found",
}

/**
 * Response
 */
export class ConferenceKickResponse extends SpeakeasyBase {
  /**
   * List of affected members
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Members" })
  members?: string[];

  /**
   * Response message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message: ConferenceKickResponseMessageEnum;

  /**
   * Whether the request was successful or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Success" })
  success: boolean;
}
