"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetOrganizationInsightApplicationsRequest:
    
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetOrganizationInsightApplications200ApplicationJSONThresholdsByNetwork:
    
    goodput: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goodput'), 'exclude': lambda f: f is None }})
    r"""Number of useful information bits delivered over a network per unit of time"""  
    network_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkId'), 'exclude': lambda f: f is None }})
    r"""Network identifier"""  
    response_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseDuration'), 'exclude': lambda f: f is None }})
    r"""Duration of the response, in milliseconds"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetOrganizationInsightApplications200ApplicationJSONThresholds:
    r"""Thresholds defined by a user or Meraki models for each application"""
    
    by_network: Optional[list[GetOrganizationInsightApplications200ApplicationJSONThresholdsByNetwork]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('byNetwork'), 'exclude': lambda f: f is None }})
    r"""Threshold for each network"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Threshold type (static or smart)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetOrganizationInsightApplications200ApplicationJSON:
    
    application_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationId'), 'exclude': lambda f: f is None }})
    r"""Application identifier"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Application name"""  
    thresholds: Optional[GetOrganizationInsightApplications200ApplicationJSONThresholds] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thresholds'), 'exclude': lambda f: f is None }})
    r"""Thresholds defined by a user or Meraki models for each application"""  
    

@dataclasses.dataclass
class GetOrganizationInsightApplicationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_organization_insight_applications_200_application_json_objects: Optional[list[GetOrganizationInsightApplications200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    