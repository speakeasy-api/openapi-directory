/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleSearchIdeahubV1alphaAvailableLocale } from "./googlesearchideahubv1alphaavailablelocale";
import { Expose, Type } from "class-transformer";

/**
 * Response for whether ideas are available for a given web property on a platform, for the currently logged-in user.
 */
export class GoogleSearchIdeahubV1alphaListAvailableLocalesResponse extends SpeakeasyBase {
  /**
   * Locales for which ideas are available for the given Creator.
   */
  @SpeakeasyMetadata({ elemType: GoogleSearchIdeahubV1alphaAvailableLocale })
  @Expose({ name: "availableLocales" })
  @Type(() => GoogleSearchIdeahubV1alphaAvailableLocale)
  availableLocales?: GoogleSearchIdeahubV1alphaAvailableLocale[];

  /**
   * A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
