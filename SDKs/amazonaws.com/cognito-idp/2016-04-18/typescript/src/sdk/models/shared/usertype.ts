/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttributeType } from "./attributetype";
import { MFAOptionType } from "./mfaoptiontype";
import { UserStatusTypeEnum } from "./userstatustypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A user profile in a Amazon Cognito user pool.
 */
export class UserType extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AttributeType })
  @Expose({ name: "Attributes" })
  @Type(() => AttributeType)
  attributes?: AttributeType[];

  @SpeakeasyMetadata()
  @Expose({ name: "Enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata({ elemType: MFAOptionType })
  @Expose({ name: "MFAOptions" })
  @Type(() => MFAOptionType)
  mfaOptions?: MFAOptionType[];

  @SpeakeasyMetadata()
  @Expose({ name: "UserCreateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  userCreateDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "UserLastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  userLastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "UserStatus" })
  userStatus?: UserStatusTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Username" })
  username?: string;
}
