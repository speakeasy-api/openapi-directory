/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateOrganizationRequestBodyManagementDetails extends SpeakeasyBase {
  /**
   * Name of management data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Value of management data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Information about the organization's management system
 */
export class CreateOrganizationRequestBodyManagement extends SpeakeasyBase {
  /**
   * Details related to organization management, possibly empty
   */
  @SpeakeasyMetadata({
    elemType: CreateOrganizationRequestBodyManagementDetails,
  })
  @Expose({ name: "details" })
  @Type(() => CreateOrganizationRequestBodyManagementDetails)
  details?: CreateOrganizationRequestBodyManagementDetails[];
}

export class CreateOrganizationRequestBody extends SpeakeasyBase {
  /**
   * Information about the organization's management system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "management" })
  @Type(() => CreateOrganizationRequestBodyManagement)
  management?: CreateOrganizationRequestBodyManagement;

  /**
   * The name of the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * API related settings
 */
export class CreateOrganization201ApplicationJSONApi extends SpeakeasyBase {
  /**
   * Enable API access
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * Region info
 */
export class CreateOrganization201ApplicationJSONCloudRegion extends SpeakeasyBase {
  /**
   * Name of region
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Data for this organization
 */
export class CreateOrganization201ApplicationJSONCloud extends SpeakeasyBase {
  /**
   * Region info
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  @Type(() => CreateOrganization201ApplicationJSONCloudRegion)
  region?: CreateOrganization201ApplicationJSONCloudRegion;
}

/**
 * Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
 */
export enum CreateOrganization201ApplicationJSONLicensingModelEnum {
  CoTerm = "co-term",
  PerDevice = "per-device",
  Subscription = "subscription",
}

/**
 * Licensing related settings
 */
export class CreateOrganization201ApplicationJSONLicensing extends SpeakeasyBase {
  /**
   * Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: CreateOrganization201ApplicationJSONLicensingModelEnum;
}

export class CreateOrganization201ApplicationJSONManagementDetails extends SpeakeasyBase {
  /**
   * Name of management data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Value of management data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Information about the organization's management system
 */
export class CreateOrganization201ApplicationJSONManagement extends SpeakeasyBase {
  /**
   * Details related to organization management, possibly empty
   */
  @SpeakeasyMetadata({
    elemType: CreateOrganization201ApplicationJSONManagementDetails,
  })
  @Expose({ name: "details" })
  @Type(() => CreateOrganization201ApplicationJSONManagementDetails)
  details?: CreateOrganization201ApplicationJSONManagementDetails[];
}

/**
 * Successful operation
 */
export class CreateOrganization201ApplicationJSON extends SpeakeasyBase {
  /**
   * API related settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api" })
  @Type(() => CreateOrganization201ApplicationJSONApi)
  api?: CreateOrganization201ApplicationJSONApi;

  /**
   * Data for this organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cloud" })
  @Type(() => CreateOrganization201ApplicationJSONCloud)
  cloud?: CreateOrganization201ApplicationJSONCloud;

  /**
   * Organization ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Licensing related settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "licensing" })
  @Type(() => CreateOrganization201ApplicationJSONLicensing)
  licensing?: CreateOrganization201ApplicationJSONLicensing;

  /**
   * Information about the organization's management system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "management" })
  @Type(() => CreateOrganization201ApplicationJSONManagement)
  management?: CreateOrganization201ApplicationJSONManagement;

  /**
   * Organization name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Organization URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class CreateOrganizationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createOrganization201ApplicationJSONObject?: CreateOrganization201ApplicationJSON;
}
