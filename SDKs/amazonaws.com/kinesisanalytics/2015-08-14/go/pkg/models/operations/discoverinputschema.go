// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DiscoverInputSchemaXAmzTargetEnum
type DiscoverInputSchemaXAmzTargetEnum string

const (
	DiscoverInputSchemaXAmzTargetEnumKinesisAnalytics20150814DiscoverInputSchema DiscoverInputSchemaXAmzTargetEnum = "KinesisAnalytics_20150814.DiscoverInputSchema"
)

func (e *DiscoverInputSchemaXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KinesisAnalytics_20150814.DiscoverInputSchema":
		*e = DiscoverInputSchemaXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DiscoverInputSchemaXAmzTargetEnum: %s", s)
	}
}

type DiscoverInputSchemaRequest struct {
	DiscoverInputSchemaRequest shared.DiscoverInputSchemaRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 DiscoverInputSchemaXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DiscoverInputSchemaResponse struct {
	ContentType string
	// Success
	DiscoverInputSchemaResponse *shared.DiscoverInputSchemaResponse
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// ResourceProvisionedThroughputExceededException
	ResourceProvisionedThroughputExceededException interface{}
	StatusCode                                     int
	RawResponse                                    *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// UnableToDetectSchemaException
	UnableToDetectSchemaException interface{}
}
