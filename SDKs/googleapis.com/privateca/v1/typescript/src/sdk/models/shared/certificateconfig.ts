/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PublicKey } from "./publickey";
import { SubjectConfig } from "./subjectconfig";
import { X509Parameters } from "./x509parameters";
import { Expose, Type } from "class-transformer";

/**
 * A CertificateConfig describes an X.509 certificate or CSR that is to be created, as an alternative to using ASN.1.
 */
export class CertificateConfig extends SpeakeasyBase {
  /**
   * A PublicKey describes a public key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publicKey" })
  @Type(() => PublicKey)
  publicKey?: PublicKey;

  /**
   * These values are used to create the distinguished name and subject alternative name fields in an X.509 certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subjectConfig" })
  @Type(() => SubjectConfig)
  subjectConfig?: SubjectConfig;

  /**
   * An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "x509Config" })
  @Type(() => X509Parameters)
  x509Config?: X509Parameters;
}
