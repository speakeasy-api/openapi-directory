/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateSimServerList = ["https://supersim.twilio.com"] as const;

export class UpdateSimSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
 */
export enum UpdateSimUpdateSimRequestCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class UpdateSimUpdateSimRequest extends SpeakeasyBase {
  /**
   * The SID of the Account to which the Sim resource should belong. The Account SID can only be that of the requesting Account or that of a Subaccount of the requesting Account. Only valid when the Sim resource's status is new.
   */
  @SpeakeasyMetadata({ data: "form, name=AccountSid" })
  accountSid?: string;

  /**
   * The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackMethod" })
  callbackMethod?: UpdateSimUpdateSimRequestCallbackMethodEnum;

  /**
   * The URL we should call using the `callback_method` after an asynchronous update has finished.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackUrl" })
  callbackUrl?: string;

  /**
   * The SID or unique name of the Fleet to which the SIM resource should be assigned.
   */
  @SpeakeasyMetadata({ data: "form, name=Fleet" })
  fleet?: string;

  @SpeakeasyMetadata({ data: "form, name=Status" })
  status?: shared.SimEnumStatusUpdateEnum;

  /**
   * An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
   */
  @SpeakeasyMetadata({ data: "form, name=UniqueName" })
  uniqueName?: string;
}

export class UpdateSimRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateSimUpdateSimRequest;

  /**
   * The SID of the Sim resource to update.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateSimResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  supersimV1Sim?: shared.SupersimV1Sim;
}
