// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AddAnumberToBlockedListSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// AddAnumberToBlockedListApplicationJSONBlockTypeEnum - State whether you want the block type to be inbound or outbound.<br>
// `inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>
// `outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.
type AddAnumberToBlockedListApplicationJSONBlockTypeEnum string

const (
	AddAnumberToBlockedListApplicationJSONBlockTypeEnumInbound  AddAnumberToBlockedListApplicationJSONBlockTypeEnum = "inbound"
	AddAnumberToBlockedListApplicationJSONBlockTypeEnumOutbound AddAnumberToBlockedListApplicationJSONBlockTypeEnum = "outbound"
)

func (e *AddAnumberToBlockedListApplicationJSONBlockTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "inbound":
		fallthrough
	case "outbound":
		*e = AddAnumberToBlockedListApplicationJSONBlockTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddAnumberToBlockedListApplicationJSONBlockTypeEnum: %s", s)
	}
}

// AddAnumberToBlockedListApplicationJSONMatchTypeEnum - Specify the match type for the blocked list. The values can be one of the following:<br><br>
// `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>
// `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.
type AddAnumberToBlockedListApplicationJSONMatchTypeEnum string

const (
	AddAnumberToBlockedListApplicationJSONMatchTypeEnumPhoneNumber AddAnumberToBlockedListApplicationJSONMatchTypeEnum = "phoneNumber"
	AddAnumberToBlockedListApplicationJSONMatchTypeEnumPrefix      AddAnumberToBlockedListApplicationJSONMatchTypeEnum = "prefix"
)

func (e *AddAnumberToBlockedListApplicationJSONMatchTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "phoneNumber":
		fallthrough
	case "prefix":
		*e = AddAnumberToBlockedListApplicationJSONMatchTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddAnumberToBlockedListApplicationJSONMatchTypeEnum: %s", s)
	}
}

// AddAnumberToBlockedListApplicationJSONStatusEnum - Enable or disable the blocking. One of the following values are allowed:<br>
// `active`: Keep the blocking active.<br>
// `inactive`: Disable the blocking.
type AddAnumberToBlockedListApplicationJSONStatusEnum string

const (
	AddAnumberToBlockedListApplicationJSONStatusEnumActive   AddAnumberToBlockedListApplicationJSONStatusEnum = "active"
	AddAnumberToBlockedListApplicationJSONStatusEnumInactive AddAnumberToBlockedListApplicationJSONStatusEnum = "inactive"
)

func (e *AddAnumberToBlockedListApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = AddAnumberToBlockedListApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddAnumberToBlockedListApplicationJSONStatusEnum: %s", s)
	}
}

type AddAnumberToBlockedListApplicationJSON struct {
	// State whether you want the block type to be inbound or outbound.<br>
	// `inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>
	// `outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.
	BlockType *AddAnumberToBlockedListApplicationJSONBlockTypeEnum `json:"block_type,omitempty"`
	// Provide a comment to help you identify the blocked number or prefix.
	Comment *string `json:"comment,omitempty"`
	// Specify the match type for the blocked list. The values can be one of the following:<br><br>
	// `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>
	// `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.
	MatchType *AddAnumberToBlockedListApplicationJSONMatchTypeEnum `json:"match_type,omitempty"`
	// The phone number to be blocked if you passed "phoneNumber" as the value for the `match_type` field. If you passed "prefix" as the value for the `match_type` field, provide the prefix of the phone number here including the country code. For example, entering 1905 blocks numbers with country code 1 and area code 905.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Enable or disable the blocking. One of the following values are allowed:<br>
	// `active`: Keep the blocking active.<br>
	// `inactive`: Disable the blocking.
	Status *AddAnumberToBlockedListApplicationJSONStatusEnum `json:"status,omitempty"`
}

// AddAnumberToBlockedList201ApplicationXML - **HTTP Status Code:** `201` **Created**<br>
// Number added to the blocked list successfully.
type AddAnumberToBlockedList201ApplicationXML struct {
	// Unique identifier of the blocked list.
	ID *string
}

// AddAnumberToBlockedList201ApplicationJSON - **HTTP Status Code:** `201` **Created**<br>
// Number added to the blocked list successfully.
type AddAnumberToBlockedList201ApplicationJSON struct {
	// Unique identifier of the blocked list.
	ID *string `json:"id,omitempty"`
}

type AddAnumberToBlockedListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `201` **Created**<br>
	// Number added to the blocked list successfully.
	AddAnumberToBlockedList201ApplicationJSONObject *AddAnumberToBlockedList201ApplicationJSON
}
