/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Request to get the IDP authentication URL.
 */
export class IdentitytoolkitRelyingpartyCreateAuthUriRequest extends SpeakeasyBase {
  /**
   * The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appId" })
  appId?: string;

  /**
   * Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authFlowType" })
  authFlowType?: string;

  /**
   * The relying party OAuth client ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "context" })
  context?: string;

  /**
   * The URI to which the IDP redirects the user after the federated login flow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "continueUri" })
  continueUri?: string;

  /**
   * The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customParameter" })
  customParameter?: Record<string, string>;

  /**
   * The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hostedDomain" })
  hostedDomain?: string;

  /**
   * The email or federated ID of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  /**
   * The developer's consumer key for OpenId OAuth Extension
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauthConsumerKey" })
  oauthConsumerKey?: string;

  /**
   * Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauthScope" })
  oauthScope?: string;

  /**
   * Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "openidRealm" })
  openidRealm?: string;

  /**
   * The native app package for OTA installation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "otaApp" })
  otaApp?: string;

  /**
   * The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "providerId" })
  providerId?: string;

  /**
   * The session_id passed by client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sessionId" })
  sessionId?: string;

  /**
   * For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tenantId" })
  tenantId?: string;

  /**
   * Tenant project number to be used for idp discovery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tenantProjectNumber" })
  tenantProjectNumber?: string;
}
