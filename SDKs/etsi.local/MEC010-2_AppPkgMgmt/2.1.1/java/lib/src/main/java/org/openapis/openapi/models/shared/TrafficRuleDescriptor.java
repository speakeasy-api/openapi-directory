/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



public class TrafficRuleDescriptor {
    /**
     * 'Identifies the action of the MEC host data plane, when a packet matches the trafficFilter.'
     */
    
    public ActionEnum action;
    public TrafficRuleDescriptor withAction(ActionEnum action) {
        this.action = action;
        return this;
    }
    
    
    public InterfaceDescriptor[] dstInterface;
    public TrafficRuleDescriptor withDstInterface(InterfaceDescriptor[] dstInterface) {
        this.dstInterface = dstInterface;
        return this;
    }
    
    /**
     * Definition of filter type: per FLOW or PACKET
     */
    
    public FilterTypeEnum filterType;
    public TrafficRuleDescriptor withFilterType(FilterTypeEnum filterType) {
        this.filterType = filterType;
        return this;
    }
    
    /**
     * Priority of this traffic rule. If traffic rule conflicts, the one with higher priority take precedence.
     */
    
    public Long priority;
    public TrafficRuleDescriptor withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * The filter used to identify specific flow/packets that need to be handled by the MEC host.
     */
    
    public TrafficFilter[] trafficFilter;
    public TrafficRuleDescriptor withTrafficFilter(TrafficFilter[] trafficFilter) {
        this.trafficFilter = trafficFilter;
        return this;
    }
    
    /**
     * Identifies the traffic rule.
     */
    
    public String trafficRuleId;
    public TrafficRuleDescriptor withTrafficRuleId(String trafficRuleId) {
        this.trafficRuleId = trafficRuleId;
        return this;
    }
    
}
