/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssessmentRunNotification } from "./assessmentrunnotification";
import { AssessmentRunStateChange } from "./assessmentrunstatechange";
import { AssessmentRunStateEnum } from "./assessmentrunstateenum";
import { Attribute } from "./attribute";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>A snapshot of an Amazon Inspector assessment run that contains the findings of the assessment run .</p> <p>Used as the response element in the <a>DescribeAssessmentRuns</a> action.</p>
 */
export class AssessmentRun extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentTemplateArn" })
  assessmentTemplateArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "completedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dataCollected" })
  dataCollected: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "durationInSeconds" })
  durationInSeconds: number;

  @SpeakeasyMetadata()
  @Expose({ name: "findingCounts" })
  findingCounts: Record<string, number>;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: AssessmentRunNotification })
  @Expose({ name: "notifications" })
  @Type(() => AssessmentRunNotification)
  notifications: AssessmentRunNotification[];

  @SpeakeasyMetadata()
  @Expose({ name: "rulesPackageArns" })
  rulesPackageArns: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "startedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: AssessmentRunStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stateChangedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stateChangedAt: Date;

  @SpeakeasyMetadata({ elemType: AssessmentRunStateChange })
  @Expose({ name: "stateChanges" })
  @Type(() => AssessmentRunStateChange)
  stateChanges: AssessmentRunStateChange[];

  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "userAttributesForFindings" })
  @Type(() => Attribute)
  userAttributesForFindings: Attribute[];
}
