"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import paragraph as shared_paragraph
from ..shared import sectionbreak as shared_sectionbreak
from ..shared import table as shared_table
from ..shared import tableofcontents as shared_tableofcontents
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StructuralElement:
    r"""A StructuralElement describes content that provides structure to the document."""
    
    end_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endIndex'), 'exclude': lambda f: f is None }})
    r"""The zero-based end index of this structural element, exclusive, in UTF-16 code units."""  
    paragraph: Optional[shared_paragraph.Paragraph] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paragraph'), 'exclude': lambda f: f is None }})
    r"""A StructuralElement representing a paragraph. A paragraph is a range of content that's terminated with a newline character."""  
    section_break: Optional[shared_sectionbreak.SectionBreak] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionBreak'), 'exclude': lambda f: f is None }})
    r"""A StructuralElement representing a section break. A section is a range of content that has the same SectionStyle. A section break represents the start of a new section, and the section style applies to the section after the section break. The document body always begins with a section break."""  
    start_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startIndex'), 'exclude': lambda f: f is None }})
    r"""The zero-based start index of this structural element, in UTF-16 code units."""  
    table: Optional[shared_table.Table] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('table'), 'exclude': lambda f: f is None }})
    r"""A StructuralElement representing a table."""  
    table_of_contents: Optional[shared_tableofcontents.TableOfContents] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableOfContents'), 'exclude': lambda f: f is None }})
    r"""A StructuralElement representing a table of contents."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StructuralElementInput:
    r"""A StructuralElement describes content that provides structure to the document."""
    
    end_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endIndex'), 'exclude': lambda f: f is None }})
    r"""The zero-based end index of this structural element, exclusive, in UTF-16 code units."""  
    paragraph: Optional[shared_paragraph.ParagraphInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paragraph'), 'exclude': lambda f: f is None }})
    r"""A StructuralElement representing a paragraph. A paragraph is a range of content that's terminated with a newline character."""  
    section_break: Optional[shared_sectionbreak.SectionBreak] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionBreak'), 'exclude': lambda f: f is None }})
    r"""A StructuralElement representing a section break. A section is a range of content that has the same SectionStyle. A section break represents the start of a new section, and the section style applies to the section after the section break. The document body always begins with a section break."""  
    start_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startIndex'), 'exclude': lambda f: f is None }})
    r"""The zero-based start index of this structural element, in UTF-16 code units."""  
    table: Optional[shared_table.Table] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('table'), 'exclude': lambda f: f is None }})
    r"""A StructuralElement representing a table."""  
    table_of_contents: Optional[shared_tableofcontents.TableOfContents] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableOfContents'), 'exclude': lambda f: f is None }})
    r"""A StructuralElement representing a table of contents."""  
    