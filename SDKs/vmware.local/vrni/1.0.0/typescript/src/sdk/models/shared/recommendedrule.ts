/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Reference } from "./reference";
import { SimplePortRange } from "./simpleportrange";
import { Expose, Type } from "class-transformer";

export enum RecommendedRuleActionEnum {
  Allow = "ALLOW",
  Drop = "DROP",
}

export class RecommendedRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: RecommendedRuleActionEnum;

  @SpeakeasyMetadata({ elemType: Reference })
  @Expose({ name: "destinations" })
  @Type(() => Reference)
  destinations?: Reference[];

  @SpeakeasyMetadata({ elemType: SimplePortRange })
  @Expose({ name: "port_ranges" })
  @Type(() => SimplePortRange)
  portRanges?: SimplePortRange[];

  @SpeakeasyMetadata()
  @Expose({ name: "protocols" })
  protocols?: string[];

  @SpeakeasyMetadata({ elemType: Reference })
  @Expose({ name: "sources" })
  @Type(() => Reference)
  sources?: Reference[];
}
