// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ModelMetadataFilterTypeEnum string

const (
	ModelMetadataFilterTypeEnumDomain           ModelMetadataFilterTypeEnum = "Domain"
	ModelMetadataFilterTypeEnumFramework        ModelMetadataFilterTypeEnum = "Framework"
	ModelMetadataFilterTypeEnumTask             ModelMetadataFilterTypeEnum = "Task"
	ModelMetadataFilterTypeEnumFrameworkVersion ModelMetadataFilterTypeEnum = "FrameworkVersion"
)

func (e ModelMetadataFilterTypeEnum) ToPointer() *ModelMetadataFilterTypeEnum {
	return &e
}

func (e *ModelMetadataFilterTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Domain":
		fallthrough
	case "Framework":
		fallthrough
	case "Task":
		fallthrough
	case "FrameworkVersion":
		*e = ModelMetadataFilterTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelMetadataFilterTypeEnum: %v", v)
	}
}
