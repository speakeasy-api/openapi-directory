<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GPUSharingConfig - GPUSharingConfig represents the GPU sharing configuration for Hardware Accelerators.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GPUSharingConfig
{
    /**
     * The type of GPU sharing strategy to enable on the GPU node.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GPUSharingConfigGPUSharingStrategyEnum $gpuSharingStrategy
     */
	#[\JMS\Serializer\Annotation\SerializedName('gpuSharingStrategy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GPUSharingConfigGPUSharingStrategyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GPUSharingConfigGPUSharingStrategyEnum $gpuSharingStrategy = null;
    
    /**
     * The max number of containers that can share a physical GPU.
     * 
     * @var ?string $maxSharedClientsPerGpu
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxSharedClientsPerGpu')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maxSharedClientsPerGpu = null;
    
	public function __construct()
	{
		$this->gpuSharingStrategy = null;
		$this->maxSharedClientsPerGpu = null;
	}
}
