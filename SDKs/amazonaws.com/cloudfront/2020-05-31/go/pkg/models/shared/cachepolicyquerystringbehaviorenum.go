// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CachePolicyQueryStringBehaviorEnum string

const (
	CachePolicyQueryStringBehaviorEnumNone      CachePolicyQueryStringBehaviorEnum = "none"
	CachePolicyQueryStringBehaviorEnumWhitelist CachePolicyQueryStringBehaviorEnum = "whitelist"
	CachePolicyQueryStringBehaviorEnumAllExcept CachePolicyQueryStringBehaviorEnum = "allExcept"
	CachePolicyQueryStringBehaviorEnumAll       CachePolicyQueryStringBehaviorEnum = "all"
)

func (e *CachePolicyQueryStringBehaviorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "whitelist":
		fallthrough
	case "allExcept":
		fallthrough
	case "all":
		*e = CachePolicyQueryStringBehaviorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CachePolicyQueryStringBehaviorEnum: %s", s)
	}
}
