/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * VideoRecordingDetails - Recording information associated with the video.
 */
public class VideoRecordingDetails {
    /**
     * Geographical coordinates of a point, in WGS84.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public GeoPoint location;
    public VideoRecordingDetails withLocation(GeoPoint location) {
        this.location = location;
        return this;
    }
    
    /**
     * The text description of the location where the video was recorded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationDescription")
    public String locationDescription;
    public VideoRecordingDetails withLocationDescription(String locationDescription) {
        this.locationDescription = locationDescription;
        return this;
    }
    
    /**
     * The date and time when the video was recorded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("recordingDate")
    public OffsetDateTime recordingDate;
    public VideoRecordingDetails withRecordingDate(OffsetDateTime recordingDate) {
        this.recordingDate = recordingDate;
        return this;
    }
    
}
