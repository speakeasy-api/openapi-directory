/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RecommendedLocation - Description of a particular point or place in physical space
 */
public class RecommendedLocation {
    /**
     * Geographic coordinates describing the position of any location on the surface of Earth
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geoCode")
    public RecommendedLocationGeoCode geoCode;

    public RecommendedLocation withGeoCode(RecommendedLocationGeoCode geoCode) {
        this.geoCode = geoCode;
        return this;
    }
    
    /**
     * IATA location code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iataCode")
    public String iataCode;

    public RecommendedLocation withIataCode(String iataCode) {
        this.iataCode = iataCode;
        return this;
    }
    
    /**
     * Label associated to the location (e.g. Eiffel Tower, Madison Square)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public RecommendedLocation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * percentage of similarity.
     * 
     * 0 for not similar to 1 for exactly the same
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relevance")
    public Double relevance;

    public RecommendedLocation withRelevance(Double relevance) {
        this.relevance = relevance;
        return this;
    }
    
    /**
     * Location sub-type (e.g. airport, port, rail-station, restaurant, atm...)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtype")
    public String subtype;

    public RecommendedLocation withSubtype(String subtype) {
        this.subtype = subtype;
        return this;
    }
    
    /**
     * Ressource type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public RecommendedLocation withType(String type) {
        this.type = type;
        return this;
    }
    
    public RecommendedLocation(){}
}
