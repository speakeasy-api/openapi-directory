// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateACardParametersBillingAddress - The card's updated billing address.
type UpdateACardParametersBillingAddress struct {
	// The city of the billing address.
	City string `json:"city"`
	// The first line of the billing address.
	Line1 string `json:"line1"`
	// The second line of the billing address.
	Line2 *string `json:"line2,omitempty"`
	// The postal code of the billing address.
	PostalCode string `json:"postal_code"`
	// The US state of the billing address.
	State string `json:"state"`
}

// UpdateACardParametersDigitalWallet - The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.
type UpdateACardParametersDigitalWallet struct {
	// The card profile assigned to this digital card. Card profiles may also be assigned at the program level.
	CardProfileID *string `json:"card_profile_id,omitempty"`
	// An email address that can be used to verify the cardholder via one-time passcode over email.
	Email *string `json:"email,omitempty"`
	// A phone number that can be used to verify the cardholder via one-time passcode over SMS.
	Phone *string `json:"phone,omitempty"`
}

// UpdateACardParametersStatusEnum - The status to update the Card with.
type UpdateACardParametersStatusEnum string

const (
	UpdateACardParametersStatusEnumActive   UpdateACardParametersStatusEnum = "active"
	UpdateACardParametersStatusEnumDisabled UpdateACardParametersStatusEnum = "disabled"
	UpdateACardParametersStatusEnumCanceled UpdateACardParametersStatusEnum = "canceled"
)

func (e UpdateACardParametersStatusEnum) ToPointer() *UpdateACardParametersStatusEnum {
	return &e
}

func (e *UpdateACardParametersStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "disabled":
		fallthrough
	case "canceled":
		*e = UpdateACardParametersStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateACardParametersStatusEnum: %v", v)
	}
}

type UpdateACardParameters struct {
	// The card's updated billing address.
	BillingAddress *UpdateACardParametersBillingAddress `json:"billing_address,omitempty"`
	// The description you choose to give the card.
	Description *string `json:"description,omitempty"`
	// The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.
	DigitalWallet *UpdateACardParametersDigitalWallet `json:"digital_wallet,omitempty"`
	// The status to update the Card with.
	Status *UpdateACardParametersStatusEnum `json:"status,omitempty"`
}
