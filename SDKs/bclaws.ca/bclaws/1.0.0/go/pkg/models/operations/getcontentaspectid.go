// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetContentAspectIDAspectIDEnum - The identifier of the 'aspect' (content group) to search
type GetContentAspectIDAspectIDEnum string

const (
	GetContentAspectIDAspectIDEnumComplete GetContentAspectIDAspectIDEnum = "complete"
	GetContentAspectIDAspectIDEnumCorpreg  GetContentAspectIDAspectIDEnum = "corpreg"
	GetContentAspectIDAspectIDEnumBcgaz1   GetContentAspectIDAspectIDEnum = "bcgaz1"
	GetContentAspectIDAspectIDEnumBcgaz2   GetContentAspectIDAspectIDEnum = "bcgaz2"
	GetContentAspectIDAspectIDEnumOic      GetContentAspectIDAspectIDEnum = "oic"
	GetContentAspectIDAspectIDEnumPsl      GetContentAspectIDAspectIDEnum = "psl"
	GetContentAspectIDAspectIDEnumEcb      GetContentAspectIDAspectIDEnum = "ecb"
	GetContentAspectIDAspectIDEnumHscr     GetContentAspectIDAspectIDEnum = "hscr"
	GetContentAspectIDAspectIDEnumArchOic  GetContentAspectIDAspectIDEnum = "arch_oic"
)

func (e GetContentAspectIDAspectIDEnum) ToPointer() *GetContentAspectIDAspectIDEnum {
	return &e
}

func (e *GetContentAspectIDAspectIDEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "complete":
		fallthrough
	case "corpreg":
		fallthrough
	case "bcgaz1":
		fallthrough
	case "bcgaz2":
		fallthrough
	case "oic":
		fallthrough
	case "psl":
		fallthrough
	case "ecb":
		fallthrough
	case "hscr":
		fallthrough
	case "arch_oic":
		*e = GetContentAspectIDAspectIDEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetContentAspectIDAspectIDEnum: %v", v)
	}
}

type GetContentAspectIDRequest struct {
	// The identifier of the 'aspect' (content group) to search
	AspectID GetContentAspectIDAspectIDEnum `pathParam:"style=simple,explode=false,name=aspectId"`
}

type GetContentAspectIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
