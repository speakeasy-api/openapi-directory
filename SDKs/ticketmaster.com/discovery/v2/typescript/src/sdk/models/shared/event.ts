/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Accessibility } from "./accessibility";
import { Classification } from "./classification";
import { EventDates } from "./eventdates";
import { EventSalesDates } from "./eventsalesdates";
import { ExternalLink } from "./externallink";
import { Image } from "./image";
import { Location } from "./location";
import { Outlet } from "./outlet";
import { Place } from "./place";
import { PriceRange } from "./pricerange";
import { Product } from "./product";
import { Promoter } from "./promoter";
import { SeatMap } from "./seatmap";

/**
 * Type of the entity
 */
export enum EventTypeEnum {
  Event = "event",
  Venue = "venue",
  Attraction = "attraction",
}

/**
 * Event
 */
export class Event extends SpeakeasyBase {
  /**
   * Additional information for people who experience disabilities
   */
  @SpeakeasyMetadata()
  accessibility?: Accessibility;

  /**
   * Additional information of the entity
   */
  @SpeakeasyMetadata()
  additionalInfo?: string;

  /**
   * Event's classifications
   */
  @SpeakeasyMetadata({ elemType: Classification })
  classifications?: Classification[];

  /**
   * Event's Dates
   */
  @SpeakeasyMetadata()
  dates?: EventDates;

  /**
   * Description's of the entity
   */
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  distance?: number;

  /**
   * List of external links
   */
  @SpeakeasyMetadata({ elemType: ExternalLink, elemDepth: 2 })
  externalLinks?: Record<string, ExternalLink[]>;

  /**
   * Unique id of the entity in the discovery API
   */
  @SpeakeasyMetadata()
  id: string;

  /**
   * Images of the entity
   */
  @SpeakeasyMetadata({ elemType: Image })
  images?: Image[];

  /**
   * Any information related to the event
   */
  @SpeakeasyMetadata()
  info?: string;

  /**
   * Locale in which the content is returned
   */
  @SpeakeasyMetadata()
  locale?: string;

  /**
   * Location
   */
  @SpeakeasyMetadata()
  location?: Location;

  /**
   * Name of the entity
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Related outlets informations
   */
  @SpeakeasyMetadata({ elemType: Outlet })
  outlets?: Outlet[];

  /**
   * Place
   */
  @SpeakeasyMetadata()
  place?: Place;

  /**
   * Any notes related to the event
   */
  @SpeakeasyMetadata()
  pleaseNote?: string;

  /**
   * Price ranges of this event
   */
  @SpeakeasyMetadata({ elemType: PriceRange })
  priceRanges?: PriceRange[];

  /**
   * Related products informations
   */
  @SpeakeasyMetadata({ elemType: Product })
  products?: Product[];

  /**
   * Promoter
   */
  @SpeakeasyMetadata()
  promoter?: Promoter;

  /**
   * Event's promoters
   */
  @SpeakeasyMetadata({ elemType: Promoter })
  promoters?: Promoter[];

  /**
   * Event's Sales Dates
   */
  @SpeakeasyMetadata()
  sales?: EventSalesDates;

  /**
   * Seatmap
   */
  @SpeakeasyMetadata()
  seatmap?: SeatMap;

  /**
   * Indicate if this is a test entity, by default test entities won't appear in discovery API
   */
  @SpeakeasyMetadata()
  test?: boolean;

  /**
   * Type of the entity
   */
  @SpeakeasyMetadata()
  type: EventTypeEnum;

  @SpeakeasyMetadata()
  units?: string;

  /**
   * URL of a web site detail page of the entity
   */
  @SpeakeasyMetadata()
  url?: string;
}
