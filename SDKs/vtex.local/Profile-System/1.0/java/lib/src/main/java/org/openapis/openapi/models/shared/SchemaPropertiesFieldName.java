/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SchemaPropertiesFieldName - Schema of any given field described in the `properties` field.
 */
public class SchemaPropertiesFieldName {
    /**
     * Object containing the type of the items if the field is an array. Typically, arrays will contain strings and will be used for fields such as `email`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public java.util.Map<String, Object> items;

    public SchemaPropertiesFieldName withItems(java.util.Map<String, Object> items) {
        this.items = items;
        return this;
    }
    
    /**
     * Indicates whether property is Personal Identifiable Information.
     */
    @JsonProperty("pii")
    public Boolean pii;

    public SchemaPropertiesFieldName withPii(Boolean pii) {
        this.pii = pii;
        return this;
    }
    
    /**
     * Indicates whether property is sensitive data.
     */
    @JsonProperty("sensitive")
    public Boolean sensitive;

    public SchemaPropertiesFieldName withSensitive(Boolean sensitive) {
        this.sensitive = sensitive;
        return this;
    }
    
    /**
     * Schema property type.
     */
    @JsonProperty("type")
    public String type;

    public SchemaPropertiesFieldName withType(String type) {
        this.type = type;
        return this;
    }
    
    public SchemaPropertiesFieldName(@JsonProperty("pii") Boolean pii, @JsonProperty("sensitive") Boolean sensitive, @JsonProperty("type") String type) {
        this.pii = pii;
        this.sensitive = sensitive;
        this.type = type;
  }
}
