"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import canvasappsettings as shared_canvasappsettings
from ..shared import jupyterserverappsettings as shared_jupyterserverappsettings
from ..shared import kernelgatewayappsettings as shared_kernelgatewayappsettings
from ..shared import rsessionappsettings as shared_rsessionappsettings
from ..shared import rstudioserverproappsettings as shared_rstudioserverproappsettings
from ..shared import sharingsettings as shared_sharingsettings
from ..shared import tensorboardappsettings as shared_tensorboardappsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserSettings:
    r"""<p>A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the <code>CreateUserProfile</code> API is called, and as <code>DefaultUserSettings</code> when the <code>CreateDomain</code> API is called.</p> <p> <code>SecurityGroups</code> is aggregated when specified in both calls. For all other settings in <code>UserSettings</code>, the values specified in <code>CreateUserProfile</code> take precedence over those specified in <code>CreateDomain</code>.</p>"""
    
    canvas_app_settings: Optional[shared_canvasappsettings.CanvasAppSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CanvasAppSettings'), 'exclude': lambda f: f is None }})  
    execution_role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionRole'), 'exclude': lambda f: f is None }})  
    jupyter_server_app_settings: Optional[shared_jupyterserverappsettings.JupyterServerAppSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JupyterServerAppSettings'), 'exclude': lambda f: f is None }})  
    kernel_gateway_app_settings: Optional[shared_kernelgatewayappsettings.KernelGatewayAppSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KernelGatewayAppSettings'), 'exclude': lambda f: f is None }})  
    r_session_app_settings: Optional[shared_rsessionappsettings.RSessionAppSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RSessionAppSettings'), 'exclude': lambda f: f is None }})  
    r_studio_server_pro_app_settings: Optional[shared_rstudioserverproappsettings.RStudioServerProAppSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RStudioServerProAppSettings'), 'exclude': lambda f: f is None }})  
    security_groups: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityGroups'), 'exclude': lambda f: f is None }})  
    sharing_settings: Optional[shared_sharingsettings.SharingSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SharingSettings'), 'exclude': lambda f: f is None }})  
    tensor_board_app_settings: Optional[shared_tensorboardappsettings.TensorBoardAppSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TensorBoardAppSettings'), 'exclude': lambda f: f is None }})  
    