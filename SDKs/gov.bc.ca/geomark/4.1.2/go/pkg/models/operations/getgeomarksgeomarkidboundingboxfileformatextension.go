// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum - The file format name extension used to represent the geomark download.
type GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum string

const (
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumJSON    GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "json"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumXML     GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "xml"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumKml     GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "kml"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumKmz     GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "kmz"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumShp     GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "shp"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumShpz    GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "shpz"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumGeojson GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "geojson"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumGml     GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "gml"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnumWkt     GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum = "wkt"
)

func (e *GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "kml":
		fallthrough
	case "kmz":
		fallthrough
	case "shp":
		fallthrough
	case "shpz":
		fallthrough
	case "geojson":
		fallthrough
	case "gml":
		fallthrough
	case "wkt":
		*e = GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum: %s", s)
	}
}

type GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionPathParams struct {
	// The file format name extension used to represent the geomark download.
	FileFormatExtension GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionFileFormatExtensionEnum `pathParam:"style=simple,explode=false,name=fileFormatExtension"`
	// The unique identifier for the geomark
	GeomarkID string `pathParam:"style=simple,explode=false,name=geomarkId"`
}

// GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum - The srid of the coordinate system the geometry should be converted to.
type GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum string

const (
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnumFourThousandThreeHundredAndTwentySix   GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum = "4326"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnumThreeThousandAndFive                   GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum = "3005"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnumThreeThousandEightHundredAndFiftySeven GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum = "3857"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnumTwentySixThousandNineHundredAndSeven   GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum = "26907"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnumTwentySixThousandNineHundredAndEight   GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum = "26908"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnumTwentySixThousandNineHundredAndNine    GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum = "26909"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnumTwentySixThousandNineHundredAndTen     GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum = "26910"
	GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnumTwentySixThousandNineHundredAndEleven  GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum = "26911"
)

func (e *GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "4326":
		fallthrough
	case "3005":
		fallthrough
	case "3857":
		fallthrough
	case "26907":
		fallthrough
	case "26908":
		fallthrough
	case "26909":
		fallthrough
	case "26910":
		fallthrough
	case "26911":
		*e = GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum: %s", s)
	}
}

type GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionQueryParams struct {
	// The srid of the coordinate system the geometry should be converted to.
	Srid *GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionSridEnum `queryParam:"style=form,explode=true,name=srid"`
}

type GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionRequest struct {
	PathParams  GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionPathParams
	QueryParams GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionQueryParams
}

type GetGeomarksGeomarkIDBoundingBoxFileFormatExtensionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
