/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NodesViewOnlyLinksReadViewOnlyLinks - OK
 */
public class NodesViewOnlyLinksReadViewOnlyLinks {
    /**
     * The properties of the view only link entity.
     */
    
    public NodesViewOnlyLinksReadViewOnlyLinksAttributes attributes;

    public NodesViewOnlyLinksReadViewOnlyLinks withAttributes(NodesViewOnlyLinksReadViewOnlyLinksAttributes attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * The unique identifier of the view only link.
     */
    
    public String id;

    public NodesViewOnlyLinksReadViewOnlyLinks withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * URLs to other entities or entity collections that have a relationship to the view only link entity.
     */
    
    public NodesViewOnlyLinksReadViewOnlyLinksRelationships relationships;

    public NodesViewOnlyLinksReadViewOnlyLinks withRelationships(NodesViewOnlyLinksReadViewOnlyLinksRelationships relationships) {
        this.relationships = relationships;
        return this;
    }
    
    /**
     * The type identifier of the view only link ('view-only-links').
     */
    
    public String type;

    public NodesViewOnlyLinksReadViewOnlyLinks withType(String type) {
        this.type = type;
        return this;
    }
    
    public NodesViewOnlyLinksReadViewOnlyLinks(@JsonProperty("attributes") NodesViewOnlyLinksReadViewOnlyLinksAttributes attributes, @JsonProperty("id") String id, @JsonProperty("relationships") NodesViewOnlyLinksReadViewOnlyLinksRelationships relationships, @JsonProperty("type") String type) {
        this.attributes = attributes;
        this.id = id;
        this.relationships = relationships;
        this.type = type;
  }
}
