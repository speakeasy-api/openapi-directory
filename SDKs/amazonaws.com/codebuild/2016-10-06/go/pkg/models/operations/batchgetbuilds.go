// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// BatchGetBuildsXAmzTargetEnum
type BatchGetBuildsXAmzTargetEnum string

const (
	BatchGetBuildsXAmzTargetEnumCodeBuild20161006BatchGetBuilds BatchGetBuildsXAmzTargetEnum = "CodeBuild_20161006.BatchGetBuilds"
)

func (e BatchGetBuildsXAmzTargetEnum) ToPointer() *BatchGetBuildsXAmzTargetEnum {
	return &e
}

func (e *BatchGetBuildsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeBuild_20161006.BatchGetBuilds":
		*e = BatchGetBuildsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchGetBuildsXAmzTargetEnum: %v", v)
	}
}

type BatchGetBuildsRequest struct {
	BatchGetBuildsInput shared.BatchGetBuildsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          BatchGetBuildsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type BatchGetBuildsResponse struct {
	// Success
	BatchGetBuildsOutput *shared.BatchGetBuildsOutput
	ContentType          string
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
