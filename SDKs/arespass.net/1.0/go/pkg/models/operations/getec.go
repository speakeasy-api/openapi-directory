// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetEcQueryParams struct {
	// **The format of the returned analysis.**
	//
	// Allowed values are *json*, *xml* and *yaml*.
	//
	// The default value is *xml*.
	//
	OutputFormat *string `queryParam:"style=form,explode=true,name=outputFormat"`
	// **The password to be analyzed.**
	//
	// Minimum length is 4 characters; maximum length is 128 characters.
	//
	// Beware that certain characters like '&#35;', '&#61;' or '&#63;' must be properly encoded.
	//
	// For more information about this issue, please refer to RFC 3986 ("*Uniform Resource Identifier (URI): Generic Syntax*"), sections 2.1, 2.2 and 2.4.
	//
	Password string `queryParam:"style=form,explode=true,name=password"`
	// **The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc.**
	//
	// The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
	//
	// The character used as decimal separator is always '&#46;'. Hence, a parameter value like *0,33* would be illegal.
	//
	// The default value is *0.25*.
	//
	Penalty *float64 `queryParam:"style=form,explode=true,name=penalty"`
	// **An identifier for this request.**
	//
	// The request identifier is a string that must match the regular expression */(?i)^[a-z0-9]{8,16}$/*.
	//
	// This identifier is echoed in the returned response. Its value has no effect on the password analysis.
	//
	// If this parameter is unset, a randomly generated identifier will be automatically assigned to this request.
	//
	ReqID *string `queryParam:"style=form,explode=true,name=reqId"`
}

type GetEcRequest struct {
	QueryParams GetEcQueryParams
}

type GetEcResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The password analysis, including the calculated entropy.
	Ec *shared.Ec
}
