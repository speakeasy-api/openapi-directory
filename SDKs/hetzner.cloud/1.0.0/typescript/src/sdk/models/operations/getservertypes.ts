/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetServerTypesRequest extends SpeakeasyBase {
  /**
   * Can be used to filter Server types by their name. The response will only contain the Server type matching the specified name.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;
}

/**
 * Type of cpu
 */
export enum GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum {
  Shared = "shared",
  Dedicated = "dedicated",
}

/**
 * Hourly costs for a Server type in this Location
 */
export class GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly extends SpeakeasyBase {
  /**
   * Price with VAT added
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gross" })
  gross: string;

  /**
   * Price without VAT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "net" })
  net: string;
}

/**
 * Monthly costs for a Server type in this Location
 */
export class GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly extends SpeakeasyBase {
  /**
   * Price with VAT added
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gross" })
  gross: string;

  /**
   * Price without VAT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "net" })
  net: string;
}

export class GetServerTypes200ApplicationJSONServerTypesPrices extends SpeakeasyBase {
  /**
   * Name of the Location the price is for
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location: string;

  /**
   * Hourly costs for a Server type in this Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_hourly" })
  @Type(() => GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly)
  priceHourly: GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly;

  /**
   * Monthly costs for a Server type in this Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_monthly" })
  @Type(() => GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly)
  priceMonthly: GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly;
}

/**
 * Type of Server boot drive. Local has higher speed. Network has better availability.
 */
export enum GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum {
  Local = "local",
  Network = "network",
}

export class GetServerTypes200ApplicationJSONServerTypes extends SpeakeasyBase {
  /**
   * Number of cpu cores a Server of this type will have
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cores" })
  cores: number;

  /**
   * Type of cpu
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cpu_type" })
  cpuType: GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum;

  /**
   * True if Server type is deprecated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprecated" })
  deprecated: boolean;

  /**
   * Description of the Server type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Disk size a Server of this type will have in GB
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disk" })
  disk: number;

  /**
   * ID of the Server type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Memory a Server of this type will have in GB
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memory" })
  memory: number;

  /**
   * Unique identifier of the Server type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Prices in different Locations
   */
  @SpeakeasyMetadata({
    elemType: GetServerTypes200ApplicationJSONServerTypesPrices,
  })
  @Expose({ name: "prices" })
  @Type(() => GetServerTypes200ApplicationJSONServerTypesPrices)
  prices: GetServerTypes200ApplicationJSONServerTypesPrices[];

  /**
   * Type of Server boot drive. Local has higher speed. Network has better availability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storage_type" })
  storageType: GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum;
}

/**
 * The `server_types` key in the reply contains an array of Server type objects with this structure
 */
export class GetServerTypes200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetServerTypes200ApplicationJSONServerTypes })
  @Expose({ name: "server_types" })
  @Type(() => GetServerTypes200ApplicationJSONServerTypes)
  serverTypes: GetServerTypes200ApplicationJSONServerTypes[];
}

export class GetServerTypesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The `server_types` key in the reply contains an array of Server type objects with this structure
   */
  @SpeakeasyMetadata()
  getServerTypes200ApplicationJSONObject?: GetServerTypes200ApplicationJSON;
}
