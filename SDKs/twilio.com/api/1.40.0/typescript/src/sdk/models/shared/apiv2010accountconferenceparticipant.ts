/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParticipantEnumStatusEnum } from "./participantenumstatusenum";
import { Expose } from "class-transformer";

/**
 * Created
 */
export class ApiV2010AccountConferenceParticipant extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Participant resource is associated with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_sid" })
  callSid?: string;

  /**
   * The SID of the participant who is being `coached`. The participant being coached is the only participant who can hear the participant who is `coaching`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_sid_to_coach" })
  callSidToCoach?: string;

  /**
   * Whether the participant is coaching another call. Can be: `true` or `false`. If not present, defaults to `false` unless `call_sid_to_coach` is defined. If `true`, `call_sid_to_coach` must be defined.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coaching" })
  coaching?: boolean;

  /**
   * The SID of the conference the participant is in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conference_sid" })
  conferenceSid?: string;

  /**
   * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  dateCreated?: string;

  /**
   * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  dateUpdated?: string;

  /**
   * Whether the conference ends when the participant leaves. Can be: `true` or `false` and the default is `false`. If `true`, the conference ends and all other participants drop out when the participant leaves.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_conference_on_exit" })
  endConferenceOnExit?: boolean;

  /**
   * Whether the participant is on hold. Can be `true` or `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hold" })
  hold?: boolean;

  /**
   * The user-specified label of this participant, if one was given when the participant was created. This may be used to fetch, update or delete the participant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * Whether the participant is muted. Can be `true` or `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "muted" })
  muted?: boolean;

  /**
   * Whether the conference starts when the participant joins the conference, if it has not already started. Can be: `true` or `false` and the default is `true`. If `false` and the conference has not started, the participant is muted and hears background music until another participant starts the conference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_conference_on_enter" })
  startConferenceOnEnter?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ParticipantEnumStatusEnum;

  /**
   * The URI of the resource, relative to `https://api.twilio.com`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}
