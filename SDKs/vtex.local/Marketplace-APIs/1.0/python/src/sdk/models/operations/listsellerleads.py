"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class ListSellerLeadsRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."""  
    account_name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'accountName', 'style': 'form', 'explode': True }})
    r"""Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Describes the type of the content being sent."""  
    environment: str = dataclasses.field(metadata={'query_param': { 'field_name': 'environment', 'style': 'form', 'explode': True }})
    r"""Environment to use. Used as part of the URL."""  
    is_connected: str = dataclasses.field(metadata={'query_param': { 'field_name': 'isConnected', 'style': 'form', 'explode': True }})
    r"""Query param that enables results to be filter by whether the seller lead is already connected to the marketplace or not."""  
    limit: int = dataclasses.field(metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""This field determines the limit used to retrieve the list of sellers. The response includes objects until the value inputted here."""  
    offset: int = dataclasses.field(metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""This field determines the limit used to retrieve the list of sellers. The response includes objects starting `from` the value inputted here."""  
    order_by: str = dataclasses.field(metadata={'query_param': { 'field_name': 'orderBy', 'style': 'form', 'explode': True }})
    r"""Query param determining how data will be ordered in the response, ordering by name or ID in descending our ascending order. Includes the following values:
    
    `namesort` = desc/asc 
    
    `idsort` = desc/asc
    """  
    search: str = dataclasses.field(metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""Custom search field, that filters sellers invited by specific marketplace operator's  email."""  
    status: str = dataclasses.field(metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Seller Lead's status. Includes `accepted`, `connected` or `invited`."""  
    

@dataclasses.dataclass
class ListSellerLeadsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    