// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VirtualTariffConsumptionDataTariffTypeEnum - The type of the virtual tariff (e.g. solar)
type VirtualTariffConsumptionDataTariffTypeEnum string

const (
	VirtualTariffConsumptionDataTariffTypeEnumBattery VirtualTariffConsumptionDataTariffTypeEnum = "Battery"
	VirtualTariffConsumptionDataTariffTypeEnumSolar   VirtualTariffConsumptionDataTariffTypeEnum = "Solar"
	VirtualTariffConsumptionDataTariffTypeEnumNormal  VirtualTariffConsumptionDataTariffTypeEnum = "Normal"
)

func (e *VirtualTariffConsumptionDataTariffTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Battery":
		fallthrough
	case "Solar":
		fallthrough
	case "Normal":
		*e = VirtualTariffConsumptionDataTariffTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualTariffConsumptionDataTariffTypeEnum: %s", s)
	}
}

// VirtualTariffConsumptionData - Container class for the virtual tariff consumption
type VirtualTariffConsumptionData struct {
	// The consumption (e.g. kWh) of this tariff
	Consumption *float64 `json:"Consumption,omitempty"`
	// The currency of the price
	Currency *string `json:"Currency,omitempty"`
	// The Name of this virtual tariff
	Name *string `json:"Name,omitempty"`
	// The price of the energy in this timerange
	Price *float64 `json:"Price,omitempty"`
	// The type of the virtual tariff (e.g. solar)
	TariffType *VirtualTariffConsumptionDataTariffTypeEnum `json:"TariffType,omitempty"`
}
