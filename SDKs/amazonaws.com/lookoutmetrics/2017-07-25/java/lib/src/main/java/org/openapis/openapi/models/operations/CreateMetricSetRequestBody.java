/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateMetricSetRequestBody {
    /**
     * The ARN of the anomaly detector that will use the dataset.
     */
    @JsonProperty("AnomalyDetectorArn")
    public String anomalyDetectorArn;

    public CreateMetricSetRequestBody withAnomalyDetectorArn(String anomalyDetectorArn) {
        this.anomalyDetectorArn = anomalyDetectorArn;
        return this;
    }
    
    /**
     * A list of filters that specify which data is kept for anomaly detection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DimensionFilterList")
    public org.openapis.openapi.models.shared.MetricSetDimensionFilter[] dimensionFilterList;

    public CreateMetricSetRequestBody withDimensionFilterList(org.openapis.openapi.models.shared.MetricSetDimensionFilter[] dimensionFilterList) {
        this.dimensionFilterList = dimensionFilterList;
        return this;
    }
    
    /**
     * A list of the fields you want to treat as dimensions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DimensionList")
    public String[] dimensionList;

    public CreateMetricSetRequestBody withDimensionList(String[] dimensionList) {
        this.dimensionList = dimensionList;
        return this;
    }
    
    /**
     * A list of metrics that the dataset will contain.
     */
    @JsonProperty("MetricList")
    public org.openapis.openapi.models.shared.Metric[] metricList;

    public CreateMetricSetRequestBody withMetricList(org.openapis.openapi.models.shared.Metric[] metricList) {
        this.metricList = metricList;
        return this;
    }
    
    /**
     * A description of the dataset you are creating.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricSetDescription")
    public String metricSetDescription;

    public CreateMetricSetRequestBody withMetricSetDescription(String metricSetDescription) {
        this.metricSetDescription = metricSetDescription;
        return this;
    }
    
    /**
     * The frequency with which the source data will be analyzed for anomalies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricSetFrequency")
    public CreateMetricSetRequestBodyMetricSetFrequencyEnum metricSetFrequency;

    public CreateMetricSetRequestBody withMetricSetFrequency(CreateMetricSetRequestBodyMetricSetFrequencyEnum metricSetFrequency) {
        this.metricSetFrequency = metricSetFrequency;
        return this;
    }
    
    /**
     * The name of the dataset.
     */
    @JsonProperty("MetricSetName")
    public String metricSetName;

    public CreateMetricSetRequestBody withMetricSetName(String metricSetName) {
        this.metricSetName = metricSetName;
        return this;
    }
    
    /**
     * Contains information about source data used to generate metrics.
     */
    @JsonProperty("MetricSource")
    public CreateMetricSetRequestBodyMetricSource metricSource;

    public CreateMetricSetRequestBody withMetricSource(CreateMetricSetRequestBodyMetricSource metricSource) {
        this.metricSource = metricSource;
        return this;
    }
    
    /**
     * After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Offset")
    public Long offset;

    public CreateMetricSetRequestBody withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * A list of &lt;a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html"&gt;tags&lt;/a&gt; to apply to the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;

    public CreateMetricSetRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Contains information about the column used to track time in a source data file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimestampColumn")
    public CreateMetricSetRequestBodyTimestampColumn timestampColumn;

    public CreateMetricSetRequestBody withTimestampColumn(CreateMetricSetRequestBodyTimestampColumn timestampColumn) {
        this.timestampColumn = timestampColumn;
        return this;
    }
    
    /**
     * The time zone in which your source data was recorded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Timezone")
    public String timezone;

    public CreateMetricSetRequestBody withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }
    
    public CreateMetricSetRequestBody(@JsonProperty("AnomalyDetectorArn") String anomalyDetectorArn, @JsonProperty("MetricList") org.openapis.openapi.models.shared.Metric[] metricList, @JsonProperty("MetricSetName") String metricSetName, @JsonProperty("MetricSource") CreateMetricSetRequestBodyMetricSource metricSource) {
        this.anomalyDetectorArn = anomalyDetectorArn;
        this.metricList = metricList;
        this.metricSetName = metricSetName;
        this.metricSource = metricSource;
  }
}
