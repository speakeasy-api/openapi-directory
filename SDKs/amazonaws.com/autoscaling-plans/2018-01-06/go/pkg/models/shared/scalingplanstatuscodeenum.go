// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScalingPlanStatusCodeEnum string

const (
	ScalingPlanStatusCodeEnumActive             ScalingPlanStatusCodeEnum = "Active"
	ScalingPlanStatusCodeEnumActiveWithProblems ScalingPlanStatusCodeEnum = "ActiveWithProblems"
	ScalingPlanStatusCodeEnumCreationInProgress ScalingPlanStatusCodeEnum = "CreationInProgress"
	ScalingPlanStatusCodeEnumCreationFailed     ScalingPlanStatusCodeEnum = "CreationFailed"
	ScalingPlanStatusCodeEnumDeletionInProgress ScalingPlanStatusCodeEnum = "DeletionInProgress"
	ScalingPlanStatusCodeEnumDeletionFailed     ScalingPlanStatusCodeEnum = "DeletionFailed"
	ScalingPlanStatusCodeEnumUpdateInProgress   ScalingPlanStatusCodeEnum = "UpdateInProgress"
	ScalingPlanStatusCodeEnumUpdateFailed       ScalingPlanStatusCodeEnum = "UpdateFailed"
)

func (e *ScalingPlanStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "ActiveWithProblems":
		fallthrough
	case "CreationInProgress":
		fallthrough
	case "CreationFailed":
		fallthrough
	case "DeletionInProgress":
		fallthrough
	case "DeletionFailed":
		fallthrough
	case "UpdateInProgress":
		fallthrough
	case "UpdateFailed":
		*e = ScalingPlanStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScalingPlanStatusCodeEnum: %s", s)
	}
}
