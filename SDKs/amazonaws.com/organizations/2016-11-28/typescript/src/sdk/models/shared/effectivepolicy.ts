/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EffectivePolicyTypeEnum } from "./effectivepolicytypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains rules to be applied to the affected accounts. The effective policy is the aggregation of any policies the account inherits, plus any policy directly attached to the account.
 */
export class EffectivePolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "PolicyContent" })
  policyContent?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PolicyType" })
  policyType?: EffectivePolicyTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TargetId" })
  targetId?: string;
}
