// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PrimaryStepRollUpEnum - Rollup test status of multiple steps that were run with the same configuration as a group.
type PrimaryStepRollUpEnum string

const (
	PrimaryStepRollUpEnumUnset        PrimaryStepRollUpEnum = "unset"
	PrimaryStepRollUpEnumSuccess      PrimaryStepRollUpEnum = "success"
	PrimaryStepRollUpEnumFailure      PrimaryStepRollUpEnum = "failure"
	PrimaryStepRollUpEnumInconclusive PrimaryStepRollUpEnum = "inconclusive"
	PrimaryStepRollUpEnumSkipped      PrimaryStepRollUpEnum = "skipped"
	PrimaryStepRollUpEnumFlaky        PrimaryStepRollUpEnum = "flaky"
)

func (e *PrimaryStepRollUpEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "unset":
		fallthrough
	case "success":
		fallthrough
	case "failure":
		fallthrough
	case "inconclusive":
		fallthrough
	case "skipped":
		fallthrough
	case "flaky":
		*e = PrimaryStepRollUpEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PrimaryStepRollUpEnum: %s", s)
	}
}

// PrimaryStep - Stores rollup test status of multiple steps that were run as a group and outcome of each individual step.
type PrimaryStep struct {
	// Step Id and outcome of each individual step.
	IndividualOutcome []IndividualOutcome `json:"individualOutcome,omitempty"`
	// Rollup test status of multiple steps that were run with the same configuration as a group.
	RollUp *PrimaryStepRollUpEnum `json:"rollUp,omitempty"`
}
