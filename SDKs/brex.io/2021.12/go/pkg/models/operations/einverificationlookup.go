// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type EinVerificationLookupSecurity struct {
	UserKey shared.SchemeUserKey `security:"scheme,type=apiKey,subtype=header"`
}

type EinVerificationLookupQueryParams struct {
	// Business name of the company
	Name string `queryParam:"style=form,explode=true,name=name"`
	// Optional state parameter to improve results. (Two letter code for example CA or US-CA for California)
	State *string `queryParam:"style=form,explode=true,name=state"`
	// Optional parameter to do tight matching. (Only the best match will be returned rather then the top 5)
	Tight *bool `queryParam:"style=form,explode=true,name=tight"`
	// Optional zip code parameter to improve results. (Zip is preferred over state)
	Zip *string `queryParam:"style=form,explode=true,name=zip"`
}

type EinVerificationLookupRequest struct {
	QueryParams EinVerificationLookupQueryParams
	Security    EinVerificationLookupSecurity
}

// EinVerificationLookupDefaultApplicationJSON - Detailed information about the error
type EinVerificationLookupDefaultApplicationJSON struct {
	Code    int     `json:"code"`
	Fault   *string `json:"fault,omitempty"`
	Message string  `json:"message"`
	Tag     string  `json:"tag"`
}

type EinVerificationLookup200ApplicationJSONMatchedEinCompanies struct {
	Address                    []string `json:"address,omitempty"`
	CompanyScore               *float64 `json:"company_score,omitempty"`
	CompanyScoreExplanation    *string  `json:"company_score_explanation,omitempty"`
	ConfidenceScore            *float64 `json:"confidence_score,omitempty"`
	ConfidenceScoreExplanation *string  `json:"confidence_score_explanation,omitempty"`
	DbaScore                   *string  `json:"dba_score,omitempty"`
	DbaScoreExplanation        *string  `json:"dba_score_explanation,omitempty"`
	Ein                        *string  `json:"ein,omitempty"`
	FormattedAddress           []string `json:"formattedAddress,omitempty"`
	IrsScore                   *string  `json:"irs_score,omitempty"`
	IrsScoreExplanation        *string  `json:"irs_score_explanation,omitempty"`
	Name                       *string  `json:"name,omitempty"`
	ProvidedStatus             *string  `json:"provided_status,omitempty"`
	ProvidedStatusExplanation  *string  `json:"provided_status_explanation,omitempty"`
}

// EinVerificationLookup200ApplicationJSON - Result of a EIN reverse lookup
type EinVerificationLookup200ApplicationJSON struct {
	MatchedEinCompanies []EinVerificationLookup200ApplicationJSONMatchedEinCompanies `json:"matched_ein_companies,omitempty"`
	SearchtermName      string                                                       `json:"searchterm_name"`
	SearchtermState     string                                                       `json:"searchterm_state"`
	SearchtermZip       string                                                       `json:"searchterm_zip"`
	TightSearch         bool                                                         `json:"tight_search"`
	Timestamp           float64                                                      `json:"timestamp"`
}

type EinVerificationLookupResponse struct {
	ContentType string
	// Result of a EIN reverse lookup
	EinVerificationLookup200ApplicationJSONObject *EinVerificationLookup200ApplicationJSON
	// Detailed information about the error
	EinVerificationLookupDefaultApplicationJSONObject *EinVerificationLookupDefaultApplicationJSON
	StatusCode                                        int
	RawResponse                                       *http.Response
}
