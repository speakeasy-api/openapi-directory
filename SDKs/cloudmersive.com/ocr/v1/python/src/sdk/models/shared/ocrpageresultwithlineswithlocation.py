"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ocrlineelement as shared_ocrlineelement
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OcrPageResultWithLinesWithLocation:
    r"""OCR results of a page, including lines of text and their location"""
    
    lines: Optional[list[shared_ocrlineelement.OcrLineElement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Lines'), 'exclude': lambda f: f is None }})
    r"""Word elements in the image"""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PageNumber'), 'exclude': lambda f: f is None }})
    r"""Page number of the page that was OCR-ed, starting with 1 for the first page in the PDF file"""  
    successful: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Successful'), 'exclude': lambda f: f is None }})
    r"""True if successful, false otherwise"""  
    