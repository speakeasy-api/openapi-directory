// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartStreamProcessorXAmzTargetEnum
type StartStreamProcessorXAmzTargetEnum string

const (
	StartStreamProcessorXAmzTargetEnumRekognitionServiceStartStreamProcessor StartStreamProcessorXAmzTargetEnum = "RekognitionService.StartStreamProcessor"
)

func (e *StartStreamProcessorXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RekognitionService.StartStreamProcessor":
		*e = StartStreamProcessorXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartStreamProcessorXAmzTargetEnum: %s", s)
	}
}

type StartStreamProcessorRequest struct {
	StartStreamProcessorRequest shared.StartStreamProcessorRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  StartStreamProcessorXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartStreamProcessorResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerError
	InternalServerError interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartStreamProcessorResponse *shared.StartStreamProcessorResponse
	StatusCode                   int
	RawResponse                  *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
