// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum - The state of the prefix list reference.
type CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum string

const (
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnumPending   CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum = "pending"
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnumAvailable CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum = "available"
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnumModifying CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum = "modifying"
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnumDeleting  CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum = "deleting"
)

func (e CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum) ToPointer() *CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum {
	return &e
}

func (e *CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		*e = CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum: %v", v)
	}
}

// CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum - The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
type CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum string

const (
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnumVpc                  CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum = "vpc"
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnumVpn                  CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum = "vpn"
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnumDirectConnectGateway CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum = "direct-connect-gateway"
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnumConnect              CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum = "connect"
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnumPeering              CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum = "peering"
	CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnumTgwPeering           CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum = "tgw-peering"
)

func (e CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum) ToPointer() *CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum {
	return &e
}

func (e *CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum: %v", v)
	}
}

// CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachment - Information about the transit gateway attachment.
type CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachment struct {
	ResourceID                 *string
	ResourceType               *CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachmentResourceTypeEnum
	TransitGatewayAttachmentID *string
}

// CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReference - Information about the prefix list reference.
type CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReference struct {
	Blackhole                  *bool
	PrefixListID               *string
	PrefixListOwnerID          *string
	State                      *CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceStateEnum
	TransitGatewayAttachment   *CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReferenceTransitGatewayAttachment
	TransitGatewayRouteTableID *string
}

// CreateTransitGatewayPrefixListReferenceResult - Success
type CreateTransitGatewayPrefixListReferenceResult struct {
	TransitGatewayPrefixListReference *CreateTransitGatewayPrefixListReferenceResultTransitGatewayPrefixListReference
}
