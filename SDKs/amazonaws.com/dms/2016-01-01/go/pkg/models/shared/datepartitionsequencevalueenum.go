// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DatePartitionSequenceValueEnum string

const (
	DatePartitionSequenceValueEnumYyyymmdd   DatePartitionSequenceValueEnum = "YYYYMMDD"
	DatePartitionSequenceValueEnumYyyymmddhh DatePartitionSequenceValueEnum = "YYYYMMDDHH"
	DatePartitionSequenceValueEnumYyyymm     DatePartitionSequenceValueEnum = "YYYYMM"
	DatePartitionSequenceValueEnumMmyyyydd   DatePartitionSequenceValueEnum = "MMYYYYDD"
	DatePartitionSequenceValueEnumDdmmyyyy   DatePartitionSequenceValueEnum = "DDMMYYYY"
)

func (e *DatePartitionSequenceValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "YYYYMMDD":
		fallthrough
	case "YYYYMMDDHH":
		fallthrough
	case "YYYYMM":
		fallthrough
	case "MMYYYYDD":
		fallthrough
	case "DDMMYYYY":
		*e = DatePartitionSequenceValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DatePartitionSequenceValueEnum: %s", s)
	}
}
