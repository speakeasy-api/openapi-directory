/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BulkInsertInstanceResource } from "./bulkinsertinstanceresource";
import { QueuedResourceStatus } from "./queuedresourcestatus";
import { QueuingPolicy } from "./queuingpolicy";
import { Expose, Type } from "class-transformer";

/**
 * [Output only] High-level status of the request.
 */
export enum QueuedResourceStateEnum {
  Accepted = "ACCEPTED",
  Cancelled = "CANCELLED",
  Creating = "CREATING",
  Deleting = "DELETING",
  Failed = "FAILED",
  Provisioning = "PROVISIONING",
  StateUnspecified = "STATE_UNSPECIFIED",
  Succeeded = "SUCCEEDED",
}

/**
 * QueuedResource represents a request for future capacity. The capacity is delivered in the form of other GCE resources, either Instances or Reservations.
 */
export class QueuedResource extends SpeakeasyBase {
  /**
   * A transient resource used in compute.instances.bulkInsert and compute.regionInstances.bulkInsert . This resource is not persisted anywhere, it is used only for processing the requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bulkInsertInstanceResource" })
  @Type(() => BulkInsertInstanceResource)
  bulkInsertInstanceResource?: BulkInsertInstanceResource;

  /**
   * [Output Only] Creation timestamp in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTimestamp" })
  creationTimestamp?: string;

  /**
   * An optional description of this resource. Provide this property when you create the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * [Output Only] Type of the resource. Always compute#queuedResource for QueuedResources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Queuing parameters for the requested deferred capacity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queuingPolicy" })
  @Type(() => QueuingPolicy)
  queuingPolicy?: QueuingPolicy;

  /**
   * [Output only] Server-defined URL for the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * [Output Only] Server-defined URL for this resource with the resource id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLinkWithId" })
  selfLinkWithId?: string;

  /**
   * [Output only] High-level status of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: QueuedResourceStateEnum;

  /**
   * [Output only] Result of queuing and provisioning based on deferred capacity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => QueuedResourceStatus)
  status?: QueuedResourceStatus;

  /**
   * [Output Only] URL of the zone where the resource resides. Only applicable for zonal resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zone" })
  zone?: string;
}
