/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Container } from "./container";
import { CustomerEncryptionKey } from "./customerencryptionkey";
import { Host } from "./host";
import { PersistentDirectory } from "./persistentdirectory";
import { Status } from "./status";
import { Expose, Type } from "class-transformer";

/**
 * A set of configuration options describing how a workstation will be run. Workstation configurations are intended to be shared across multiple workstations.
 */
export class WorkstationConfig extends SpeakeasyBase {
  /**
   * Client-specified annotations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotations" })
  annotations?: Record<string, string>;

  /**
   * Output only. Status conditions describing the current resource state.
   */
  @SpeakeasyMetadata({ elemType: Status })
  @Expose({ name: "conditions" })
  @Type(() => Status)
  conditions?: Status[];

  /**
   * A Docker container.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "container" })
  @Type(() => Container)
  container?: Container;

  /**
   * Output only. Time when this resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "degraded" })
  degraded?: boolean;

  /**
   * Output only. Time when this resource was soft-deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleteTime" })
  deleteTime?: string;

  /**
   * Human-readable name for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * A customer-managed encryption key for the Compute Engine resources of this workstation configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionKey" })
  @Type(() => CustomerEncryptionKey)
  encryptionKey?: CustomerEncryptionKey;

  /**
   * Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Runtime host for a workstation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  @Type(() => Host)
  host?: Host;

  /**
   * How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idleTimeout" })
  idleTimeout?: string;

  /**
   * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Full name of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Directories to persist across workstation sessions.
   */
  @SpeakeasyMetadata({ elemType: PersistentDirectory })
  @Expose({ name: "persistentDirectories" })
  @Type(() => PersistentDirectory)
  persistentDirectories?: PersistentDirectory[];

  /**
   * Output only. Indicates whether this resource is currently being updated to match its intended state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reconciling" })
  reconciling?: boolean;

  /**
   * How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this configuration should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runningTimeout" })
  runningTimeout?: string;

  /**
   * Output only. A system-assigned unique identified for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  /**
   * Output only. Time when this resource was most recently updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * A set of configuration options describing how a workstation will be run. Workstation configurations are intended to be shared across multiple workstations.
 */
export class WorkstationConfigInput extends SpeakeasyBase {
  /**
   * Client-specified annotations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotations" })
  annotations?: Record<string, string>;

  /**
   * A Docker container.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "container" })
  @Type(() => Container)
  container?: Container;

  /**
   * Human-readable name for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * A customer-managed encryption key for the Compute Engine resources of this workstation configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionKey" })
  @Type(() => CustomerEncryptionKey)
  encryptionKey?: CustomerEncryptionKey;

  /**
   * Checksum computed by the server. May be sent on update and delete requests to ensure that the client has an up-to-date value before proceeding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Runtime host for a workstation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  @Type(() => Host)
  host?: Host;

  /**
   * How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idleTimeout" })
  idleTimeout?: string;

  /**
   * Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Full name of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Directories to persist across workstation sessions.
   */
  @SpeakeasyMetadata({ elemType: PersistentDirectory })
  @Expose({ name: "persistentDirectories" })
  @Type(() => PersistentDirectory)
  persistentDirectories?: PersistentDirectory[];

  /**
   * How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this configuration should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runningTimeout" })
  runningTimeout?: string;
}
