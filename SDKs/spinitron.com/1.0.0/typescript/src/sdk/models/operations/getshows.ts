/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetShowsRequest extends SpeakeasyBase {
  /**
   * Amount of items to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: number;

  /**
   * The ending datetime. Maximum 1 hour in past.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  end?: Date;

  /**
   * Allows to select extra fields
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string[];

  /**
   * Allows to select only needed fields
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string[];

  /**
   * Offset, used together with count
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The datetime starting from items must be returned. Maximum 1 hour in past.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=start;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  start?: Date;
}

export class GetShows200ApplicationXMLLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  self?: shared.Link;
}

/**
 * The shows
 */
export class GetShows200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata()
  links?: GetShows200ApplicationXMLLinks;

  @SpeakeasyMetadata()
  meta?: shared.Pagination;

  @SpeakeasyMetadata({ elemType: shared.Show })
  items?: shared.Show[];
}

export class GetShows200ApplicationJSONLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => shared.Link)
  self?: shared.Link;
}

/**
 * The shows
 */
export class GetShows200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => GetShows200ApplicationJSONLinks)
  links?: GetShows200ApplicationJSONLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "_meta" })
  @Type(() => shared.Pagination)
  meta?: shared.Pagination;

  @SpeakeasyMetadata({ elemType: shared.Show })
  @Expose({ name: "items" })
  @Type(() => shared.Show)
  items?: shared.Show[];
}

export class GetShowsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid datetimes in filter: either too old or {end} is less than {start}.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The shows
   */
  @SpeakeasyMetadata()
  getShows200ApplicationJSONObject?: GetShows200ApplicationJSON;
}
