// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateTextBroadcastSecurity struct {
	BasicAuth shared.SchemeBasicAuth `security:"scheme,type=http,subtype=basic"`
}

type CreateTextBroadcastQueryParams struct {
	// If true then starts the campaign immediately (not required).
	Start *bool `queryParam:"style=form,explode=true,name=start"`
	// Turns on strict validation for recipients. System will reply with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't pass validation
	StrictValidation *bool `queryParam:"style=form,explode=true,name=strictValidation"`
}

type CreateTextBroadcastRequest struct {
	QueryParams CreateTextBroadcastQueryParams
	// A TextBroadcast object
	Request  *shared.TextBroadcastInput `request:"mediaType=application/json"`
	Security CreateTextBroadcastSecurity
}

type CreateTextBroadcastResponse struct {
	ContentType string
	// Bad request
	ErrorResponse *shared.ErrorResponse
	// successful operation
	ResourceID  *shared.ResourceID
	StatusCode  int
	RawResponse *http.Response
}
