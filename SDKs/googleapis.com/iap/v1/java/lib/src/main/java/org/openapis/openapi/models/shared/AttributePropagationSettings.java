/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AttributePropagationSettings - Configuration for propagating attributes to applications protected by IAP.
 */
public class AttributePropagationSettings {
    /**
     * Whether the provided attribute propagation settings should be evaluated on user requests. If set to true, attributes returned from the expression will be propagated in the set output credentials.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enable")
    public Boolean enable;

    public AttributePropagationSettings withEnable(Boolean enable) {
        this.enable = enable;
        return this;
    }
    
    /**
     * Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can be selected. Expressions can select different attribute types from `attributes`: `attributes.saml_attributes`, `attributes.iap_attributes`. The following functions are supported: - filter `.filter(, )`: Returns a subset of `` where `` is true for every item. - in ` in `: Returns true if `` contains ``. - selectByName `.selectByName()`: Returns the attribute in `` with the given `` name, otherwise returns empty. - emitAs `.emitAs()`: Sets the `` name field to the given `` for propagation in selected output credentials. - strict `.strict()`: Ignores the `x-goog-iap-attr-` prefix for the provided `` when propagating with the `HEADER` output credential, such as request headers. - append `.append()` OR `.append()`: Appends the provided `` or `` to the end of ``. Example expression: `attributes.saml_attributes.filter(x, x.name in ['test']).append(attributes.iap_attributes.selectByName('exact').emitAs('custom').strict())`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expression")
    public String expression;

    public AttributePropagationSettings withExpression(String expression) {
        this.expression = expression;
        return this;
    }
    
    /**
     * Which output credentials attributes selected by the CEL expression should be propagated in. All attributes will be fully duplicated in each selected output credential.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputCredentials")
    public AttributePropagationSettingsOutputCredentialsEnum[] outputCredentials;

    public AttributePropagationSettings withOutputCredentials(AttributePropagationSettingsOutputCredentialsEnum[] outputCredentials) {
        this.outputCredentials = outputCredentials;
        return this;
    }
    
    public AttributePropagationSettings(){}
}
