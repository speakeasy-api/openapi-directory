<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EmployeeDepartmentPosition - Add or update home department cost center, position, supervisor, reviewer, employment type, EEO class, pay settings, and union information.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EmployeeDepartmentPosition
{
    /**
     * Employee department/position change reason. Must match Company setup. <br  />Max length: 15
     * 
     * @var ?string $changeReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('changeReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $changeReason = null;
    
    /**
     * Employee clock badge number. Defaults to employeeId. <br  />Max length: 10
     * 
     * @var ?string $clockBadgeNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('clockBadgeNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clockBadgeNumber = null;
    
    /**
     * Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10
     * 
     * @var ?string $costCenter1
     */
	#[\JMS\Serializer\Annotation\SerializedName('costCenter1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $costCenter1 = null;
    
    /**
     * Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10
     * 
     * @var ?string $costCenter2
     */
	#[\JMS\Serializer\Annotation\SerializedName('costCenter2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $costCenter2 = null;
    
    /**
     * Employer defined location, like *branch, division, department*, etc. Must match Company setup. <br  />Max length: 10
     * 
     * @var ?string $costCenter3
     */
	#[\JMS\Serializer\Annotation\SerializedName('costCenter3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $costCenter3 = null;
    
    /**
     * The date the position takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     * 
     * @var ?string $effectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveDate = null;
    
    /**
     * Employee current employment type. Common values *RFT (Regular Full Time), RPT (Regular Part Time), SNL (Seasonal), TFT (Temporary Full Time), TPT (Temporary Part Time)*. <br  />Max length: 10
     * 
     * @var ?string $employeeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('employeeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $employeeType = null;
    
    /**
     * Values are configured in Company > Setup > HR > EEO Classes.<br  /> Max length: 10
     * 
     * @var ?string $equalEmploymentOpportunityClass
     */
	#[\JMS\Serializer\Annotation\SerializedName('equalEmploymentOpportunityClass')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $equalEmploymentOpportunityClass = null;
    
    /**
     * Indicates if employee is exempt from minimum wage.
     * 
     * @var ?bool $isMinimumWageExempt
     */
	#[\JMS\Serializer\Annotation\SerializedName('isMinimumWageExempt')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isMinimumWageExempt = null;
    
    /**
     * Indicates if employee is exempt from overtime.
     * 
     * @var ?bool $isOvertimeExempt
     */
	#[\JMS\Serializer\Annotation\SerializedName('isOvertimeExempt')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isOvertimeExempt = null;
    
    /**
     * Indicates if employee is a supervisor or reviewer.
     * 
     * @var ?bool $isSupervisorReviewer
     */
	#[\JMS\Serializer\Annotation\SerializedName('isSupervisorReviewer')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSupervisorReviewer = null;
    
    /**
     * Indicates if union dues are collected.
     * 
     * @var ?bool $isUnionDuesCollected
     */
	#[\JMS\Serializer\Annotation\SerializedName('isUnionDuesCollected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isUnionDuesCollected = null;
    
    /**
     * Indicates if initiations fees are collected.
     * 
     * @var ?bool $isUnionInitiationCollected
     */
	#[\JMS\Serializer\Annotation\SerializedName('isUnionInitiationCollected')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isUnionInitiationCollected = null;
    
    /**
     * Employee current job title. <br  />Max length: 50
     * 
     * @var ?string $jobTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobTitle')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jobTitle = null;
    
    /**
     * Employee pay group. Must match Company setup. <br  /> Max length: 20
     * 
     * @var ?string $payGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('payGroup')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payGroup = null;
    
    /**
     * Employee position code. Must match Company setup.<br  />Max length: 20
     * 
     * @var ?string $positionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('positionCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $positionCode = null;
    
    /**
     * Company number of reviewer.<br />Max length: 9
     * 
     * @var ?string $reviewerCompanyNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('reviewerCompanyNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reviewerCompanyNumber = null;
    
    /**
     * Employee id of the reviewer.<br />Max length: 10
     * 
     * @var ?string $reviewerEmployeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('reviewerEmployeeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reviewerEmployeeId = null;
    
    /**
     * Employee work shift.<br  />Max length: 255
     * 
     * @var ?string $shift
     */
	#[\JMS\Serializer\Annotation\SerializedName('shift')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shift = null;
    
    /**
     * Supervisor's company number. Defaults to employee company number.<br  />Max length: 9
     * 
     * @var ?string $supervisorCompanyNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('supervisorCompanyNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $supervisorCompanyNumber = null;
    
    /**
     * EmployeeId of the supervisor. <br  />Max length: 10
     * 
     * @var ?string $supervisorEmployeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('supervisorEmployeeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $supervisorEmployeeId = null;
    
    /**
     * Indicates if employee receives tips.
     * 
     * @var ?string $tipped
     */
	#[\JMS\Serializer\Annotation\SerializedName('tipped')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tipped = null;
    
    /**
     * Employee union affiliation effective date. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     * 
     * @var ?string $unionAffiliationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('unionAffiliationDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unionAffiliationDate = null;
    
    /**
     * Employee union code. Must match Company setup. <br  />Max length: 10
     * 
     * @var ?string $unionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('unionCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unionCode = null;
    
    /**
     * Employee union position. Must match Company setup. <br  />Max length: 30
     * 
     * @var ?string $unionPosition
     */
	#[\JMS\Serializer\Annotation\SerializedName('unionPosition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unionPosition = null;
    
    /**
     * Employee worker compensation code. Must match Company setup.<br  /> Max length: 10
     * 
     * @var ?string $workersCompensation
     */
	#[\JMS\Serializer\Annotation\SerializedName('workersCompensation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workersCompensation = null;
    
	public function __construct()
	{
		$this->changeReason = null;
		$this->clockBadgeNumber = null;
		$this->costCenter1 = null;
		$this->costCenter2 = null;
		$this->costCenter3 = null;
		$this->effectiveDate = null;
		$this->employeeType = null;
		$this->equalEmploymentOpportunityClass = null;
		$this->isMinimumWageExempt = null;
		$this->isOvertimeExempt = null;
		$this->isSupervisorReviewer = null;
		$this->isUnionDuesCollected = null;
		$this->isUnionInitiationCollected = null;
		$this->jobTitle = null;
		$this->payGroup = null;
		$this->positionCode = null;
		$this->reviewerCompanyNumber = null;
		$this->reviewerEmployeeId = null;
		$this->shift = null;
		$this->supervisorCompanyNumber = null;
		$this->supervisorEmployeeId = null;
		$this->tipped = null;
		$this->unionAffiliationDate = null;
		$this->unionCode = null;
		$this->unionPosition = null;
		$this->workersCompensation = null;
	}
}
