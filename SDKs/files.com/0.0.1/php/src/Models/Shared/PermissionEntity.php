<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PermissionEntity - List Permissions
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PermissionEntity
{
    /**
     * Group ID
     * 
     * @var ?int $groupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('group_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $groupId = null;
    
    /**
     * Group name if applicable
     * 
     * @var ?string $groupName
     */
	#[\JMS\Serializer\Annotation\SerializedName('group_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $groupName = null;
    
    /**
     * Permission ID
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Folder path
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * Permission type
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PermissionEntityPermissionEnum $permission
     */
	#[\JMS\Serializer\Annotation\SerializedName('permission')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PermissionEntityPermissionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PermissionEntityPermissionEnum $permission = null;
    
    /**
     * Does this permission apply to subfolders?
     * 
     * @var ?bool $recursive
     */
	#[\JMS\Serializer\Annotation\SerializedName('recursive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recursive = null;
    
    /**
     * User ID
     * 
     * @var ?int $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $userId = null;
    
    /**
     * User's username
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->groupId = null;
		$this->groupName = null;
		$this->id = null;
		$this->path = null;
		$this->permission = null;
		$this->recursive = null;
		$this->userId = null;
		$this->username = null;
	}
}
