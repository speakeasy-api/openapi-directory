// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PolicyControllerTemplateLibraryConfigInstallationEnum - Configures the manner in which the template library is installed on the cluster.
type PolicyControllerTemplateLibraryConfigInstallationEnum string

const (
	PolicyControllerTemplateLibraryConfigInstallationEnumInstallationUnspecified PolicyControllerTemplateLibraryConfigInstallationEnum = "INSTALLATION_UNSPECIFIED"
	PolicyControllerTemplateLibraryConfigInstallationEnumNotInstalled            PolicyControllerTemplateLibraryConfigInstallationEnum = "NOT_INSTALLED"
	PolicyControllerTemplateLibraryConfigInstallationEnumAll                     PolicyControllerTemplateLibraryConfigInstallationEnum = "ALL"
)

func (e PolicyControllerTemplateLibraryConfigInstallationEnum) ToPointer() *PolicyControllerTemplateLibraryConfigInstallationEnum {
	return &e
}

func (e *PolicyControllerTemplateLibraryConfigInstallationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INSTALLATION_UNSPECIFIED":
		fallthrough
	case "NOT_INSTALLED":
		fallthrough
	case "ALL":
		*e = PolicyControllerTemplateLibraryConfigInstallationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PolicyControllerTemplateLibraryConfigInstallationEnum: %v", v)
	}
}

// PolicyControllerTemplateLibraryConfig - The config specifying which default library templates to install.
type PolicyControllerTemplateLibraryConfig struct {
	// Whether the standard template library should be installed or not.
	Included *bool `json:"included,omitempty"`
	// Configures the manner in which the template library is installed on the cluster.
	Installation *PolicyControllerTemplateLibraryConfigInstallationEnum `json:"installation,omitempty"`
}
