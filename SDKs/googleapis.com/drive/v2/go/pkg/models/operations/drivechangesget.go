// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DriveChangesGetSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChangesGetSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChangesGetSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChangesGetSecurityOption4 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChangesGetSecurityOption5 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChangesGetSecurityOption6 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChangesGetSecurityOption7 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChangesGetSecurityOption8 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DriveChangesGetSecurity struct {
	Option1 *DriveChangesGetSecurityOption1 `security:"option"`
	Option2 *DriveChangesGetSecurityOption2 `security:"option"`
	Option3 *DriveChangesGetSecurityOption3 `security:"option"`
	Option4 *DriveChangesGetSecurityOption4 `security:"option"`
	Option5 *DriveChangesGetSecurityOption5 `security:"option"`
	Option6 *DriveChangesGetSecurityOption6 `security:"option"`
	Option7 *DriveChangesGetSecurityOption7 `security:"option"`
	Option8 *DriveChangesGetSecurityOption8 `security:"option"`
}

type DriveChangesGetPathParams struct {
	// The ID of the change.
	ChangeID string `pathParam:"style=simple,explode=false,name=changeId"`
}

type DriveChangesGetQueryParams struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// The shared drive from which the change is returned.
	DriveID *string `queryParam:"style=form,explode=true,name=driveId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Whether the requesting application supports both My Drives and shared drives.
	SupportsAllDrives *bool `queryParam:"style=form,explode=true,name=supportsAllDrives"`
	// Deprecated use supportsAllDrives instead.
	SupportsTeamDrives *bool `queryParam:"style=form,explode=true,name=supportsTeamDrives"`
	// Deprecated use driveId instead.
	TeamDriveID *string `queryParam:"style=form,explode=true,name=teamDriveId"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type DriveChangesGetRequest struct {
	PathParams  DriveChangesGetPathParams
	QueryParams DriveChangesGetQueryParams
	Security    DriveChangesGetSecurity
}

type DriveChangesGetResponse struct {
	// Successful response
	Change      *shared.Change
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
