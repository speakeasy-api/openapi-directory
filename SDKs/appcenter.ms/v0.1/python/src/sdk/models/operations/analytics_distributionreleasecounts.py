"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AnalyticsDistributionReleaseCountsSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsDistributionReleaseCountsRequestBodyReleases:
    
    release: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('release') }})
    r"""Release Id."""  
    distribution_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distribution_group'), 'exclude': lambda f: f is None }})
    r"""Distribution group Id."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsDistributionReleaseCountsRequestBody:
    r"""The releases to retrieve."""
    
    releases: list[AnalyticsDistributionReleaseCountsRequestBodyReleases] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('releases') }})  
    

@dataclasses.dataclass
class AnalyticsDistributionReleaseCountsRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    request_body: AnalyticsDistributionReleaseCountsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The releases to retrieve."""  
    
class AnalyticsDistributionReleaseCountsDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsDistributionReleaseCountsDefaultApplicationJSONError:
    
    code: AnalyticsDistributionReleaseCountsDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsDistributionReleaseCountsDefaultApplicationJSON:
    r"""Error code with reason."""
    
    error: AnalyticsDistributionReleaseCountsDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsDistributionReleaseCounts200ApplicationJSONCounts:
    
    release_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('release_id') }})  
    total_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_count') }})
    r"""Total count of downloads."""  
    unique_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unique_count') }})
    r"""Count of unique downloads against user id."""  
    distribution_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distribution_group'), 'exclude': lambda f: f is None }})
    r"""Distribution group queried."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsDistributionReleaseCounts200ApplicationJSON:
    r"""Count of total downloads for the provided distribution release(s)."""
    
    counts: list[AnalyticsDistributionReleaseCounts200ApplicationJSONCounts] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('counts') }})  
    total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class AnalyticsDistributionReleaseCountsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    analytics_distribution_release_counts_200_application_json_object: Optional[AnalyticsDistributionReleaseCounts200ApplicationJSON] = dataclasses.field(default=None)
    r"""Count of total downloads for the provided distribution release(s)."""  
    analytics_distribution_release_counts_default_application_json_object: Optional[AnalyticsDistributionReleaseCountsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error code with reason."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    