<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class BookingPricingmatrix200ApplicationJSONDataAgeBandPrices
{
    /**
     * **unique numeric identifier** for the age band
     * 
     * - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
     * 
     * 
     * @var ?int $bandId
     */
	#[\JMS\Serializer\Annotation\SerializedName('bandId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bandId = null;
    
    /**
     * **maximum number of travelers** that this pricing schedule can be applied to
     * 
     * - use this field to specify the largest group size you are interested in making a booking for
     * 
     * 
     * @var ?int $maximumCountRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximumCountRequired')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maximumCountRequired = null;
    
    /**
     * **minimum number of travelers** that this pricing schedule can be applied to
     * 
     * - use this field to specify the smallest group size you are interested in making a booking for
     * 
     * 
     * @var ?int $minimumCountRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimumCountRequired')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minimumCountRequired = null;
    
    /**
     * **array** of prices available for *this* age band (based on the min and max count required)
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\BookingPricingmatrix200ApplicationJSONDataAgeBandPricesPrices> $prices
     */
	#[\JMS\Serializer\Annotation\SerializedName('prices')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\BookingPricingmatrix200ApplicationJSONDataAgeBandPricesPrices>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $prices = null;
    
    /**
     * **sort order** for *this* age band
     * 
     * @var ?int $sortOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('sortOrder')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sortOrder = null;
    
	public function __construct()
	{
		$this->bandId = null;
		$this->maximumCountRequired = null;
		$this->minimumCountRequired = null;
		$this->prices = null;
		$this->sortOrder = null;
	}
}
