/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class CreatePotSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

/**
 * If not populated, will be defaulted to tenancy currency
 */
export enum CreatePotRequestBodyPotCurrencyEnum {
  Gbp = "GBP",
  Cad = "CAD",
  Usd = "USD",
}

export enum CreatePotRequestBodyStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class CreatePotRequestBodyInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "custodian_account_reference" })
  custodianAccountReference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custodian_client_ref" })
  custodianClientRef?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custodian_id" })
  custodianId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "financial_product_id" })
  financialProductId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "investor_id" })
  investorId: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_template_id" })
  portfolioTemplateId?: string;

  /**
   * If not populated, will be defaulted to tenancy currency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_currency" })
  potCurrency?: CreatePotRequestBodyPotCurrencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "pot_name" })
  potName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "regulator_advisor_id" })
  regulatorAdvisorId?: string;

  /**
   * Unique request id to ensure idempotency. (ex: UUID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreatePotRequestBodyStatusEnum;
}

export class CreatePotRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CreatePotRequestBodyInput;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class CreatePot500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class CreatePot429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum CreatePot409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class CreatePot409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreatePot409ApplicationJSONStatusEnum;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class CreatePot403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class CreatePot401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class CreatePot400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * If not populated, will be defaulted to tenancy currency
 */
export enum CreatePot201ApplicationJSONPotCurrencyEnum {
  Gbp = "GBP",
  Cad = "CAD",
  Usd = "USD",
}

export enum CreatePot201ApplicationJSONStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

/**
 * success
 */
export class CreatePot201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custodian_account_reference" })
  custodianAccountReference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custodian_client_ref" })
  custodianClientRef?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custodian_id" })
  custodianId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "financial_product_id" })
  financialProductId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "investor_id" })
  investorId: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_template_id" })
  portfolioTemplateId?: string;

  /**
   * If not populated, will be defaulted to tenancy currency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_currency" })
  potCurrency?: CreatePot201ApplicationJSONPotCurrencyEnum;

  /**
   * system generated id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pot_name" })
  potName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reference_version" })
  referenceVersion?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "regulator_advisor_id" })
  regulatorAdvisorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CreatePot201ApplicationJSONStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

export class CreatePotResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  createPot201ApplicationJSONObject?: CreatePot201ApplicationJSON;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  createPot400ApplicationJSONObject?: CreatePot400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  createPot401ApplicationJSONObject?: CreatePot401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  createPot403ApplicationJSONObject?: CreatePot403ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  createPot409ApplicationJSONObject?: CreatePot409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  createPot429ApplicationJSONObject?: CreatePot429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  createPot500ApplicationJSONObject?: CreatePot500ApplicationJSON;
}
