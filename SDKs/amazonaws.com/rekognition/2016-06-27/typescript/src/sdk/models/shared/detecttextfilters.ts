/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DetectionFilter } from "./detectionfilter";
import { RegionOfInterest } from "./regionofinterest";
import { Expose, Type } from "class-transformer";

/**
 * A set of optional parameters that you can use to set the criteria that the text must meet to be included in your response. <code>WordFilter</code> looks at a wordâ€™s height, width, and minimum confidence. <code>RegionOfInterest</code> lets you set a specific region of the image to look for text in.
 */
export class DetectTextFilters extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: RegionOfInterest })
  @Expose({ name: "RegionsOfInterest" })
  @Type(() => RegionOfInterest)
  regionsOfInterest?: RegionOfInterest[];

  /**
   * A set of parameters that allow you to filter out certain results from your returned results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "WordFilter" })
  @Type(() => DetectionFilter)
  wordFilter?: DetectionFilter;
}
