/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClassicProjectCreateDTO - Created a new Classic Project.
 */
public class ClassicProjectCreateDTO {
    /**
     * list of language categories
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoriesIds")
    public Long[] categoriesIds;
    public ClassicProjectCreateDTO withCategoriesIds(Long[] categoriesIds) {
        this.categoriesIds = categoriesIds;
        return this;
    }
    
    @JsonProperty("customerId")
    public Long customerId;
    public ClassicProjectCreateDTO withCustomerId(Long customerId) {
        this.customerId = customerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dates")
    public ProjectDatesDTO dates;
    public ClassicProjectCreateDTO withDates(ProjectDatesDTO dates) {
        this.dates = dates;
        return this;
    }
    
    /**
     * input files
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputFiles")
    public TaskFileDTO[] inputFiles;
    public ClassicProjectCreateDTO withInputFiles(TaskFileDTO[] inputFiles) {
        this.inputFiles = inputFiles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instructions")
    public InstructionsDTO instructions;
    public ClassicProjectCreateDTO withInstructions(InstructionsDTO instructions) {
        this.instructions = instructions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ClassicProjectCreateDTO withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * people
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("people")
    public ClassicPeopleDTO people;
    public ClassicProjectCreateDTO withPeople(ClassicPeopleDTO people) {
        this.people = people;
        return this;
    }
    
    @JsonProperty("serviceId")
    public Long serviceId;
    public ClassicProjectCreateDTO withServiceId(Long serviceId) {
        this.serviceId = serviceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceLanguageId")
    public Long sourceLanguageId;
    public ClassicProjectCreateDTO withSourceLanguageId(Long sourceLanguageId) {
        this.sourceLanguageId = sourceLanguageId;
        return this;
    }
    
    @JsonProperty("specializationId")
    public Long specializationId;
    public ClassicProjectCreateDTO withSpecializationId(Long specializationId) {
        this.specializationId = specializationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetLanguagesIds")
    public Long[] targetLanguagesIds;
    public ClassicProjectCreateDTO withTargetLanguagesIds(Long[] targetLanguagesIds) {
        this.targetLanguagesIds = targetLanguagesIds;
        return this;
    }
    
}
