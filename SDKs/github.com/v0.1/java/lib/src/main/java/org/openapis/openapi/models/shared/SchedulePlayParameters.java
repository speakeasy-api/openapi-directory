/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * SchedulePlayParameters - POST parameters
 */
public class SchedulePlayParameters {
    /**
     * Unique identifier of the call to play media into
     */
    @SpeakeasyMetadata("form:name=CallUUID")
    public String callUUID;

    public SchedulePlayParameters withCallUUID(String callUUID) {
        this.callUUID = callUUID;
        return this;
    }
    
    /**
     * Call leg(s) for which the media will be played; `aleg` refers to the initial call leg, `bleg` refers to the bridged call leg, if applicable.
     */
    @SpeakeasyMetadata("form:name=Legs")
    public SchedulePlayParametersLegsEnum legs;

    public SchedulePlayParameters withLegs(SchedulePlayParametersLegsEnum legs) {
        this.legs = legs;
        return this;
    }
    
    /**
     * Maximum amount of time (in seconds) to playback the media
     */
    @SpeakeasyMetadata("form:name=Length")
    public Long length;

    public SchedulePlayParameters withLength(Long length) {
        this.length = length;
        return this;
    }
    
    /**
     * Loops the media file(s) indefinitely
     */
    @SpeakeasyMetadata("form:name=Loop")
    public Boolean loop;

    public SchedulePlayParameters withLoop(Boolean loop) {
        this.loop = loop;
        return this;
    }
    
    /**
     * Whether the media should be mixed with the call's audio stream
     */
    @SpeakeasyMetadata("form:name=Mix")
    public Boolean mix;

    public SchedulePlayParameters withMix(Boolean mix) {
        this.mix = mix;
        return this;
    }
    
    /**
     * Comma separated list of file paths/URIs to be played
     */
    @SpeakeasyMetadata("form:name=Sounds")
    public String sounds;

    public SchedulePlayParameters withSounds(String sounds) {
        this.sounds = sounds;
        return this;
    }
    
    /**
     * Time (in seconds) after which the media will be playedback
     */
    @SpeakeasyMetadata("form:name=Time")
    public Long time;

    public SchedulePlayParameters withTime(Long time) {
        this.time = time;
        return this;
    }
    
    public SchedulePlayParameters(@JsonProperty("CallUUID") String callUUID, @JsonProperty("Sounds") String sounds, @JsonProperty("Time") Long time) {
        this.callUUID = callUUID;
        this.sounds = sounds;
        this.time = time;
  }
}
