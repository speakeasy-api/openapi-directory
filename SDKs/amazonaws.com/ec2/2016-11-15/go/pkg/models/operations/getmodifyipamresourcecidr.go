// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyIpamResourceCidrActionEnum
type GETModifyIpamResourceCidrActionEnum string

const (
	GETModifyIpamResourceCidrActionEnumModifyIpamResourceCidr GETModifyIpamResourceCidrActionEnum = "ModifyIpamResourceCidr"
)

func (e *GETModifyIpamResourceCidrActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyIpamResourceCidr":
		*e = GETModifyIpamResourceCidrActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyIpamResourceCidrActionEnum: %s", s)
	}
}

// GETModifyIpamResourceCidrVersionEnum
type GETModifyIpamResourceCidrVersionEnum string

const (
	GETModifyIpamResourceCidrVersionEnumTwoThousandAndSixteen1115 GETModifyIpamResourceCidrVersionEnum = "2016-11-15"
)

func (e *GETModifyIpamResourceCidrVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETModifyIpamResourceCidrVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyIpamResourceCidrVersionEnum: %s", s)
	}
}

type GETModifyIpamResourceCidrRequest struct {
	Action GETModifyIpamResourceCidrActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the current scope that the resource CIDR is in.
	CurrentIpamScopeID string `queryParam:"style=form,explode=true,name=CurrentIpamScopeId"`
	// The ID of the scope you want to transfer the resource CIDR to.
	DestinationIpamScopeID *string `queryParam:"style=form,explode=true,name=DestinationIpamScopeId"`
	// A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// Determines if the resource is monitored by IPAM. If a resource is monitored, the resource is discovered by IPAM and you can view details about the resourceâ€™s CIDR.
	Monitored bool `queryParam:"style=form,explode=true,name=Monitored"`
	// The CIDR of the resource you want to modify.
	ResourceCidr string `queryParam:"style=form,explode=true,name=ResourceCidr"`
	// The ID of the resource you want to modify.
	ResourceID string `queryParam:"style=form,explode=true,name=ResourceId"`
	// The Amazon Web Services Region of the resource you want to modify.
	ResourceRegion    string                               `queryParam:"style=form,explode=true,name=ResourceRegion"`
	Version           GETModifyIpamResourceCidrVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyIpamResourceCidrResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
