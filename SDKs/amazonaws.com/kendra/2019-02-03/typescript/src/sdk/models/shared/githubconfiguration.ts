/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataSourceToIndexFieldMapping } from "./datasourcetoindexfieldmapping";
import { DataSourceVpcConfiguration } from "./datasourcevpcconfiguration";
import { GitHubDocumentCrawlProperties } from "./githubdocumentcrawlproperties";
import { OnPremiseConfiguration } from "./onpremiseconfiguration";
import { SaaSConfiguration } from "./saasconfiguration";
import { TypeEnum } from "./typeenum";
import { Expose, Type } from "class-transformer";

/**
 * Provides the configuration information to connect to GitHub as your data source.
 */
export class GitHubConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ExclusionFileNamePatterns" })
  exclusionFileNamePatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ExclusionFileTypePatterns" })
  exclusionFileTypePatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ExclusionFolderNamePatterns" })
  exclusionFolderNamePatterns?: string[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "GitHubCommitConfigurationFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  gitHubCommitConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "GitHubDocumentCrawlProperties" })
  @Type(() => GitHubDocumentCrawlProperties)
  gitHubDocumentCrawlProperties?: GitHubDocumentCrawlProperties;

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "GitHubIssueAttachmentConfigurationFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  gitHubIssueAttachmentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "GitHubIssueCommentConfigurationFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  gitHubIssueCommentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "GitHubIssueDocumentConfigurationFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  gitHubIssueDocumentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "GitHubPullRequestCommentConfigurationFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  gitHubPullRequestCommentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({
    name: "GitHubPullRequestDocumentAttachmentConfigurationFieldMappings",
  })
  @Type(() => DataSourceToIndexFieldMapping)
  gitHubPullRequestDocumentAttachmentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "GitHubPullRequestDocumentConfigurationFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  gitHubPullRequestDocumentConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "GitHubRepositoryConfigurationFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  gitHubRepositoryConfigurationFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "InclusionFileNamePatterns" })
  inclusionFileNamePatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "InclusionFileTypePatterns" })
  inclusionFileTypePatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "InclusionFolderNamePatterns" })
  inclusionFolderNamePatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "OnPremiseConfiguration" })
  @Type(() => OnPremiseConfiguration)
  onPremiseConfiguration?: OnPremiseConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "RepositoryFilter" })
  repositoryFilter?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SaaSConfiguration" })
  @Type(() => SaaSConfiguration)
  saaSConfiguration?: SaaSConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretArn" })
  secretArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: TypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UseChangeLog" })
  useChangeLog?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfiguration" })
  @Type(() => DataSourceVpcConfiguration)
  vpcConfiguration?: DataSourceVpcConfiguration;
}
