/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LanguageEnum } from "./languageenum";
import { Expose } from "class-transformer";

/**
 * Indicates the provenance of a place.
 *
 * @remarks
 *
 *   - `geonames` GeoNames place
 */
export enum PlaceDatasetEnum {
  Geonames = "geonames",
}

/**
 * Represents a geographical place
 */
export class Place extends SpeakeasyBase {
  /**
   *   3 letter country code (ISO 3166-1)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country_iso" })
  countryIso: string;

  /**
   * Indicates the provenance of a place.
   *
   * @remarks
   *
   *   - `geonames` GeoNames place
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataset" })
  dataset: PlaceDatasetEnum;

  /**
   * Longer form description of the place.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "descriptive_name" })
  descriptiveName: string;

  /**
   * Global unique internally generated identifier for a place
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Language represented by 2 letter ISO Code (639-1)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language: LanguageEnum;

  /**
   * The latitude of the postcode (WGS84/ETRS89).
   *
   * @remarks
   *
   * Can be a positive or negative decimal. E.g. `51.5083983`.
   *
   * Returns an empty string if no location data is available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude: any;

  /**
   * The longitude of the postcode (WGS84/ETRS89).
   *
   * @remarks
   *
   * Can be a positive or negative decimal. E.g. -0.1283983
   *
   * Returns an empty string if no location data is available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude: any;

  /**
   * Place name
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Native representation of a place
   */
  @SpeakeasyMetadata()
  @Expose({ name: "native" })
  native?: any;
}
