/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SafeguardPolicyEnum } from "./safeguardpolicyenum";
import { TlogAccessModeEnum } from "./tlogaccessmodeenum";
import { Expose } from "class-transformer";

/**
 * Provides information that defines a Microsoft SQL Server endpoint.
 */
export class MicrosoftSQLServerSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BcpPacketSize" })
  bcpPacketSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ControlTablesFileGroup" })
  controlTablesFileGroup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseName" })
  databaseName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ForceLobLookup" })
  forceLobLookup?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Password" })
  password?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Port" })
  port?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "QuerySingleAlwaysOnNode" })
  querySingleAlwaysOnNode?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ReadBackupOnly" })
  readBackupOnly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "SafeguardPolicy" })
  safeguardPolicy?: SafeguardPolicyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretsManagerAccessRoleArn" })
  secretsManagerAccessRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretsManagerSecretId" })
  secretsManagerSecretId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerName" })
  serverName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TlogAccessMode" })
  tlogAccessMode?: TlogAccessModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TrimSpaceInChar" })
  trimSpaceInChar?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "UseBcpFullLoad" })
  useBcpFullLoad?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "UseThirdPartyBackupDevice" })
  useThirdPartyBackupDevice?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Username" })
  username?: string;
}
