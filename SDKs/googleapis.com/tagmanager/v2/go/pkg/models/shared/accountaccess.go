// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountAccessPermissionEnum - Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
type AccountAccessPermissionEnum string

const (
	AccountAccessPermissionEnumAccountPermissionUnspecified AccountAccessPermissionEnum = "accountPermissionUnspecified"
	AccountAccessPermissionEnumNoAccess                     AccountAccessPermissionEnum = "noAccess"
	AccountAccessPermissionEnumUser                         AccountAccessPermissionEnum = "user"
	AccountAccessPermissionEnumAdmin                        AccountAccessPermissionEnum = "admin"
)

func (e AccountAccessPermissionEnum) ToPointer() *AccountAccessPermissionEnum {
	return &e
}

func (e *AccountAccessPermissionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accountPermissionUnspecified":
		fallthrough
	case "noAccess":
		fallthrough
	case "user":
		fallthrough
	case "admin":
		*e = AccountAccessPermissionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountAccessPermissionEnum: %v", v)
	}
}

// AccountAccess - Defines the Google Tag Manager Account access permissions.
type AccountAccess struct {
	// Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update
	Permission *AccountAccessPermissionEnum `json:"permission,omitempty"`
}
