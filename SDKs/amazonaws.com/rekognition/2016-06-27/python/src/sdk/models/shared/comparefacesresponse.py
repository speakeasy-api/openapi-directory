"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import comparedface as shared_comparedface
from ..shared import comparedsourceimageface as shared_comparedsourceimageface
from ..shared import comparefacesmatch as shared_comparefacesmatch
from ..shared import orientationcorrection_enum as shared_orientationcorrection_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompareFacesResponse:
    r"""Success"""
    
    face_matches: Optional[list[shared_comparefacesmatch.CompareFacesMatch]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FaceMatches'), 'exclude': lambda f: f is None }})  
    source_image_face: Optional[shared_comparedsourceimageface.ComparedSourceImageFace] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceImageFace'), 'exclude': lambda f: f is None }})  
    source_image_orientation_correction: Optional[shared_orientationcorrection_enum.OrientationCorrectionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceImageOrientationCorrection'), 'exclude': lambda f: f is None }})  
    target_image_orientation_correction: Optional[shared_orientationcorrection_enum.OrientationCorrectionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetImageOrientationCorrection'), 'exclude': lambda f: f is None }})  
    unmatched_faces: Optional[list[shared_comparedface.ComparedFace]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnmatchedFaces'), 'exclude': lambda f: f is None }})  
    