"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatalabelingv1beta1annotationspec as shared_googleclouddatalabelingv1beta1annotationspec
from ..shared import googleclouddatalabelingv1beta1confidencemetricsentry as shared_googleclouddatalabelingv1beta1confidencemetricsentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatalabelingV1beta1PrCurve:
    
    annotation_spec: Optional[shared_googleclouddatalabelingv1beta1annotationspec.GoogleCloudDatalabelingV1beta1AnnotationSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotationSpec'), 'exclude': lambda f: f is None }})
    r"""Container of information related to one possible annotation that can be used in a labeling task. For example, an image classification task where images are labeled as `dog` or `cat` must reference an AnnotationSpec for `dog` and an AnnotationSpec for `cat`."""  
    area_under_curve: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('areaUnderCurve'), 'exclude': lambda f: f is None }})
    r"""Area under the precision-recall curve. Not to be confused with area under a receiver operating characteristic (ROC) curve."""  
    confidence_metrics_entries: Optional[list[shared_googleclouddatalabelingv1beta1confidencemetricsentry.GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confidenceMetricsEntries'), 'exclude': lambda f: f is None }})
    r"""Entries that make up the precision-recall graph. Each entry is a \\"point\\" on the graph drawn for a different `confidence_threshold`."""  
    mean_average_precision: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meanAveragePrecision'), 'exclude': lambda f: f is None }})
    r"""Mean average prcision of this curve."""  
    