/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TimePeriod } from "./timeperiod";
import { Expose, Type } from "class-transformer";

export class DescribeBudgetActionHistoriesRequest extends SpeakeasyBase {
  /**
   * The account ID of the user. It's a 12-digit number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ActionId" })
  actionId: string;

  /**
   *  A string that represents the budget name. The ":" and "\" characters aren't allowed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BudgetName" })
  budgetName: string;

  /**
   *  An integer that represents how many entries a paginated response contains. The maximum is 100.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  /**
   *  A generic string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  /**
   * The period of time that's covered by a budget. The period has a start date and an end date. The start date must come before the end date. There are no restrictions on the end date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TimePeriod" })
  @Type(() => TimePeriod)
  timePeriod?: TimePeriod;
}
