// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type PatchProfileEmailSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PatchProfileEmailRequestBody2 struct {
	Email     *string `json:"Email,omitempty"`
	EmailCode *string `json:"EmailCode,omitempty"`
	SMSCode   *string `json:"SMSCode,omitempty"`
}

type PatchProfileEmailRequestBody1 struct {
	Email *string `json:"Email,omitempty"`
}

type PatchProfileEmailRequestBodyType string

const (
	PatchProfileEmailRequestBodyTypePatchProfileEmailRequestBody1 PatchProfileEmailRequestBodyType = "patch_/profile/email_requestBody_1"
	PatchProfileEmailRequestBodyTypePatchProfileEmailRequestBody2 PatchProfileEmailRequestBodyType = "patch_/profile/email_requestBody_2"
)

type PatchProfileEmailRequestBody struct {
	PatchProfileEmailRequestBody1 *PatchProfileEmailRequestBody1
	PatchProfileEmailRequestBody2 *PatchProfileEmailRequestBody2

	Type PatchProfileEmailRequestBodyType
}

func CreatePatchProfileEmailRequestBodyPatchProfileEmailRequestBody1(patchProfileEmailRequestBody1 PatchProfileEmailRequestBody1) PatchProfileEmailRequestBody {
	typ := PatchProfileEmailRequestBodyTypePatchProfileEmailRequestBody1

	return PatchProfileEmailRequestBody{
		PatchProfileEmailRequestBody1: &patchProfileEmailRequestBody1,
		Type:                          typ,
	}
}

func CreatePatchProfileEmailRequestBodyPatchProfileEmailRequestBody2(patchProfileEmailRequestBody2 PatchProfileEmailRequestBody2) PatchProfileEmailRequestBody {
	typ := PatchProfileEmailRequestBodyTypePatchProfileEmailRequestBody2

	return PatchProfileEmailRequestBody{
		PatchProfileEmailRequestBody2: &patchProfileEmailRequestBody2,
		Type:                          typ,
	}
}

func (u *PatchProfileEmailRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	patchProfileEmailRequestBody1 := new(PatchProfileEmailRequestBody1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&patchProfileEmailRequestBody1); err == nil {
		u.PatchProfileEmailRequestBody1 = patchProfileEmailRequestBody1
		u.Type = PatchProfileEmailRequestBodyTypePatchProfileEmailRequestBody1
		return nil
	}

	patchProfileEmailRequestBody2 := new(PatchProfileEmailRequestBody2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&patchProfileEmailRequestBody2); err == nil {
		u.PatchProfileEmailRequestBody2 = patchProfileEmailRequestBody2
		u.Type = PatchProfileEmailRequestBodyTypePatchProfileEmailRequestBody2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PatchProfileEmailRequestBody) MarshalJSON() ([]byte, error) {
	if u.PatchProfileEmailRequestBody1 != nil {
		return json.Marshal(u.PatchProfileEmailRequestBody1)
	}

	if u.PatchProfileEmailRequestBody2 != nil {
		return json.Marshal(u.PatchProfileEmailRequestBody2)
	}

	return nil, nil
}

type PatchProfileEmailRequest struct {
	// Email to modify
	Request  PatchProfileEmailRequestBody `request:"mediaType=application/json"`
	Security PatchProfileEmailSecurity
}

type PatchProfileEmailResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
