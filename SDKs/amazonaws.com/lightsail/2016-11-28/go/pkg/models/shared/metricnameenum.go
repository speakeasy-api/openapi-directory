// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MetricNameEnum string

const (
	MetricNameEnumCPUUtilization                 MetricNameEnum = "CPUUtilization"
	MetricNameEnumNetworkIn                      MetricNameEnum = "NetworkIn"
	MetricNameEnumNetworkOut                     MetricNameEnum = "NetworkOut"
	MetricNameEnumStatusCheckFailed              MetricNameEnum = "StatusCheckFailed"
	MetricNameEnumStatusCheckFailedInstance      MetricNameEnum = "StatusCheckFailed_Instance"
	MetricNameEnumStatusCheckFailedSystem        MetricNameEnum = "StatusCheckFailed_System"
	MetricNameEnumClientTLSNegotiationErrorCount MetricNameEnum = "ClientTLSNegotiationErrorCount"
	MetricNameEnumHealthyHostCount               MetricNameEnum = "HealthyHostCount"
	MetricNameEnumUnhealthyHostCount             MetricNameEnum = "UnhealthyHostCount"
	MetricNameEnumHTTPCodeLb4XxCount             MetricNameEnum = "HTTPCode_LB_4XX_Count"
	MetricNameEnumHTTPCodeLb5XxCount             MetricNameEnum = "HTTPCode_LB_5XX_Count"
	MetricNameEnumHTTPCodeInstance2XxCount       MetricNameEnum = "HTTPCode_Instance_2XX_Count"
	MetricNameEnumHTTPCodeInstance3XxCount       MetricNameEnum = "HTTPCode_Instance_3XX_Count"
	MetricNameEnumHTTPCodeInstance4XxCount       MetricNameEnum = "HTTPCode_Instance_4XX_Count"
	MetricNameEnumHTTPCodeInstance5XxCount       MetricNameEnum = "HTTPCode_Instance_5XX_Count"
	MetricNameEnumInstanceResponseTime           MetricNameEnum = "InstanceResponseTime"
	MetricNameEnumRejectedConnectionCount        MetricNameEnum = "RejectedConnectionCount"
	MetricNameEnumRequestCount                   MetricNameEnum = "RequestCount"
	MetricNameEnumDatabaseConnections            MetricNameEnum = "DatabaseConnections"
	MetricNameEnumDiskQueueDepth                 MetricNameEnum = "DiskQueueDepth"
	MetricNameEnumFreeStorageSpace               MetricNameEnum = "FreeStorageSpace"
	MetricNameEnumNetworkReceiveThroughput       MetricNameEnum = "NetworkReceiveThroughput"
	MetricNameEnumNetworkTransmitThroughput      MetricNameEnum = "NetworkTransmitThroughput"
	MetricNameEnumBurstCapacityTime              MetricNameEnum = "BurstCapacityTime"
	MetricNameEnumBurstCapacityPercentage        MetricNameEnum = "BurstCapacityPercentage"
)

func (e MetricNameEnum) ToPointer() *MetricNameEnum {
	return &e
}

func (e *MetricNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CPUUtilization":
		fallthrough
	case "NetworkIn":
		fallthrough
	case "NetworkOut":
		fallthrough
	case "StatusCheckFailed":
		fallthrough
	case "StatusCheckFailed_Instance":
		fallthrough
	case "StatusCheckFailed_System":
		fallthrough
	case "ClientTLSNegotiationErrorCount":
		fallthrough
	case "HealthyHostCount":
		fallthrough
	case "UnhealthyHostCount":
		fallthrough
	case "HTTPCode_LB_4XX_Count":
		fallthrough
	case "HTTPCode_LB_5XX_Count":
		fallthrough
	case "HTTPCode_Instance_2XX_Count":
		fallthrough
	case "HTTPCode_Instance_3XX_Count":
		fallthrough
	case "HTTPCode_Instance_4XX_Count":
		fallthrough
	case "HTTPCode_Instance_5XX_Count":
		fallthrough
	case "InstanceResponseTime":
		fallthrough
	case "RejectedConnectionCount":
		fallthrough
	case "RequestCount":
		fallthrough
	case "DatabaseConnections":
		fallthrough
	case "DiskQueueDepth":
		fallthrough
	case "FreeStorageSpace":
		fallthrough
	case "NetworkReceiveThroughput":
		fallthrough
	case "NetworkTransmitThroughput":
		fallthrough
	case "BurstCapacityTime":
		fallthrough
	case "BurstCapacityPercentage":
		*e = MetricNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricNameEnum: %v", v)
	}
}
