/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AllMocks200ApplicationJSONMocks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collection" })
  collection?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  environment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mockUrl" })
  mockUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}

/**
 * Successful Response
 */
export class AllMocks200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AllMocks200ApplicationJSONMocks })
  @Expose({ name: "mocks" })
  @Type(() => AllMocks200ApplicationJSONMocks)
  mocks?: AllMocks200ApplicationJSONMocks[];
}

export class AllMocksResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata()
  allMocks200ApplicationJSONObject?: AllMocks200ApplicationJSON;
}
