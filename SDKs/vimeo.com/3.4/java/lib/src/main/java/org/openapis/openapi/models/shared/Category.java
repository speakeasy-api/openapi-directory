/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Category - The category was returned.
 */
public class Category {
    /**
     * The active icon for the category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon")
    public Picture icon;
    public Category withIcon(Picture icon) {
        this.icon = icon;
        return this;
    }
    
    /**
     * The last time, in ISO 8601 format, that a video was featured.
     */
    @JsonProperty("last_video_featured_time")
    public String lastVideoFeaturedTime;
    public Category withLastVideoFeaturedTime(String lastVideoFeaturedTime) {
        this.lastVideoFeaturedTime = lastVideoFeaturedTime;
        return this;
    }
    
    /**
     * The URL to access the category in a browser.
     */
    @JsonProperty("link")
    public String link;
    public Category withLink(String link) {
        this.link = link;
        return this;
    }
    
    /**
     * Metadata about the category.
     */
    @JsonProperty("metadata")
    public CategoryMetadata metadata;
    public Category withMetadata(CategoryMetadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The display name that identifies the category.
     */
    @JsonProperty("name")
    public String name;
    public Category withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The container of this category's parent category, if the current category is a subcategory.
     */
    @JsonProperty("parent")
    public CategoryParent parent;
    public Category withParent(CategoryParent parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * The active picture for this category; defaults to vertical color bars.
     */
    @JsonProperty("pictures")
    public Picture pictures;
    public Category withPictures(Picture pictures) {
        this.pictures = pictures;
        return this;
    }
    
    /**
     * The resource key of the category.
     */
    @JsonProperty("resource_key")
    public String resourceKey;
    public Category withResourceKey(String resourceKey) {
        this.resourceKey = resourceKey;
        return this;
    }
    
    /**
     * All the subcategories that belong to this category, if the current category is a top-level parent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subcategories")
    public CategorySubcategories[] subcategories;
    public Category withSubcategories(CategorySubcategories[] subcategories) {
        this.subcategories = subcategories;
        return this;
    }
    
    /**
     * Whether the category isn't a subcategory of another category.
     */
    @JsonProperty("top_level")
    public Boolean topLevel;
    public Category withTopLevel(Boolean topLevel) {
        this.topLevel = topLevel;
        return this;
    }
    
    /**
     * The unique identifier to access the category resource.
     */
    @JsonProperty("uri")
    public String uri;
    public Category withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
}
