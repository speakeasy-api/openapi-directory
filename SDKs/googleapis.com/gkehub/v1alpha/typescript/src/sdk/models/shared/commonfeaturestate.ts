/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppDevExperienceFeatureState } from "./appdevexperiencefeaturestate";
import { FeatureState } from "./featurestate";
import { ServiceMeshFeatureState } from "./servicemeshfeaturestate";
import { Expose, Type } from "class-transformer";

/**
 * CommonFeatureState contains Hub-wide Feature status information.
 */
export class CommonFeatureState extends SpeakeasyBase {
  /**
   * State for App Dev Exp Feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appdevexperience" })
  @Type(() => AppDevExperienceFeatureState)
  appdevexperience?: AppDevExperienceFeatureState;

  /**
   * **FleetObservability**: An empty state left as an example Hub-wide Feature state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fleetobservability" })
  fleetobservability?: Record<string, any>;

  /**
   * **Service Mesh**: State for the whole Hub, as analyzed by the Service Mesh Hub Controller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "servicemesh" })
  @Type(() => ServiceMeshFeatureState)
  servicemesh?: ServiceMeshFeatureState;

  /**
   * FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(() => FeatureState)
  state?: FeatureState;
}

/**
 * CommonFeatureState contains Hub-wide Feature status information.
 */
export class CommonFeatureStateInput extends SpeakeasyBase {
  /**
   * State for App Dev Exp Feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appdevexperience" })
  @Type(() => AppDevExperienceFeatureState)
  appdevexperience?: AppDevExperienceFeatureState;

  /**
   * **FleetObservability**: An empty state left as an example Hub-wide Feature state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fleetobservability" })
  fleetobservability?: Record<string, any>;

  /**
   * FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(() => FeatureState)
  state?: FeatureState;
}
