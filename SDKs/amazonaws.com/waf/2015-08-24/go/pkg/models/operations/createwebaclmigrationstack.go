// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateWebACLMigrationStackXAmzTargetEnum
type CreateWebACLMigrationStackXAmzTargetEnum string

const (
	CreateWebACLMigrationStackXAmzTargetEnumAwswaf20150824CreateWebACLMigrationStack CreateWebACLMigrationStackXAmzTargetEnum = "AWSWAF_20150824.CreateWebACLMigrationStack"
)

func (e CreateWebACLMigrationStackXAmzTargetEnum) ToPointer() *CreateWebACLMigrationStackXAmzTargetEnum {
	return &e
}

func (e *CreateWebACLMigrationStackXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_20150824.CreateWebACLMigrationStack":
		*e = CreateWebACLMigrationStackXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWebACLMigrationStackXAmzTargetEnum: %v", v)
	}
}

type CreateWebACLMigrationStackRequest struct {
	CreateWebACLMigrationStackRequest shared.CreateWebACLMigrationStackRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        CreateWebACLMigrationStackXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateWebACLMigrationStackResponse struct {
	ContentType string
	// Success
	CreateWebACLMigrationStackResponse *shared.CreateWebACLMigrationStackResponse
	StatusCode                         int
	RawResponse                        *http.Response
	// WAFEntityMigrationException
	WAFEntityMigrationException interface{}
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidOperationException
	WAFInvalidOperationException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
}
