/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ActivitySetThreadSubscriptionRequestBody extends SpeakeasyBase {
  /**
   * Whether to block all notifications from a thread.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ignored" })
  ignored?: boolean;
}

export class ActivitySetThreadSubscriptionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: ActivitySetThreadSubscriptionRequestBody;

  /**
   * thread_id parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=thread_id",
  })
  threadId: number;
}

export class ActivitySetThreadSubscriptionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  threadSubscription?: shared.ThreadSubscription;
}
