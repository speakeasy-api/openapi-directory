/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PaymentInstrumentUpdateRequest {
    /**
     * The unique identifier of the balance account associated with this payment instrument.
     * &gt;You can only change the balance account ID if the payment instrument has **Requested** or **Inactive** status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balanceAccountId")
    public String balanceAccountId;
    public PaymentInstrumentUpdateRequest withBalanceAccountId(String balanceAccountId) {
        this.balanceAccountId = balanceAccountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card")
    public CardInfo card;
    public PaymentInstrumentUpdateRequest withCard(CardInfo card) {
        this.card = card;
        return this;
    }
    
    /**
     * The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **Active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **Requested**.
     * 
     * Possible values: 
     * 
     *  * **Active**:  The payment instrument is active and can be used to make payments. 
     * 
     *  * **Requested**: The payment instrument has been requested. This state is applicable for physical cards. 
     * 
     * * **Inactive**: The payment instrument is inactive and cannot be used to make payments. 
     * 
     *  * **Suspended**: The payment instrument is temporarily suspended and cannot be used to make payments. 
     * 
     *  * **Closed**: The payment instrument is permanently closed. This action cannot be undone. 
     * 
     * * **Stolen** 
     * 
     *  * **Lost**
     * 
     *  
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PaymentInstrumentUpdateRequestStatusEnum status;
    public PaymentInstrumentUpdateRequest withStatus(PaymentInstrumentUpdateRequestStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Comment for the status of the payment instrument.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusComment")
    public String statusComment;
    public PaymentInstrumentUpdateRequest withStatusComment(String statusComment) {
        this.statusComment = statusComment;
        return this;
    }
    
}
