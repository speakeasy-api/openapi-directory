// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdatePageElementTransformRequestApplyModeEnum - The apply mode of the transform update.
type UpdatePageElementTransformRequestApplyModeEnum string

const (
	UpdatePageElementTransformRequestApplyModeEnumApplyModeUnspecified UpdatePageElementTransformRequestApplyModeEnum = "APPLY_MODE_UNSPECIFIED"
	UpdatePageElementTransformRequestApplyModeEnumRelative             UpdatePageElementTransformRequestApplyModeEnum = "RELATIVE"
	UpdatePageElementTransformRequestApplyModeEnumAbsolute             UpdatePageElementTransformRequestApplyModeEnum = "ABSOLUTE"
)

func (e UpdatePageElementTransformRequestApplyModeEnum) ToPointer() *UpdatePageElementTransformRequestApplyModeEnum {
	return &e
}

func (e *UpdatePageElementTransformRequestApplyModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APPLY_MODE_UNSPECIFIED":
		fallthrough
	case "RELATIVE":
		fallthrough
	case "ABSOLUTE":
		*e = UpdatePageElementTransformRequestApplyModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePageElementTransformRequestApplyModeEnum: %v", v)
	}
}

// UpdatePageElementTransformRequest - Updates the transform of a page element. Updating the transform of a group will change the absolute transform of the page elements in that group, which can change their visual appearance. See the documentation for PageElement.transform for more details.
type UpdatePageElementTransformRequest struct {
	// The apply mode of the transform update.
	ApplyMode *UpdatePageElementTransformRequestApplyModeEnum `json:"applyMode,omitempty"`
	// The object ID of the page element to update.
	ObjectID *string `json:"objectId,omitempty"`
	// AffineTransform uses a 3x3 matrix with an implied last row of [ 0 0 1 ] to transform source coordinates (x,y) into destination coordinates (x', y') according to: x' x = shear_y scale_y translate_y 1 [ 1 ] After transformation, x' = scale_x * x + shear_x * y + translate_x; y' = scale_y * y + shear_y * x + translate_y; This message is therefore composed of these six matrix elements.
	Transform *AffineTransform `json:"transform,omitempty"`
}
