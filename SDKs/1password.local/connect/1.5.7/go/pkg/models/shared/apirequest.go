// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type APIRequestActionEnum string

const (
	APIRequestActionEnumRead   APIRequestActionEnum = "READ"
	APIRequestActionEnumCreate APIRequestActionEnum = "CREATE"
	APIRequestActionEnumUpdate APIRequestActionEnum = "UPDATE"
	APIRequestActionEnumDelete APIRequestActionEnum = "DELETE"
)

func (e *APIRequestActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "READ":
		fallthrough
	case "CREATE":
		fallthrough
	case "UPDATE":
		fallthrough
	case "DELETE":
		*e = APIRequestActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for APIRequestActionEnum: %s", s)
	}
}

type APIRequestActor struct {
	Account   *string `json:"account,omitempty"`
	ID        *string `json:"id,omitempty"`
	Jti       *string `json:"jti,omitempty"`
	RequestIP *string `json:"requestIp,omitempty"`
	UserAgent *string `json:"userAgent,omitempty"`
}

type APIRequestResourceItem struct {
	ID *string `json:"id,omitempty"`
}

type APIRequestResourceTypeEnum string

const (
	APIRequestResourceTypeEnumItem  APIRequestResourceTypeEnum = "ITEM"
	APIRequestResourceTypeEnumVault APIRequestResourceTypeEnum = "VAULT"
)

func (e *APIRequestResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ITEM":
		fallthrough
	case "VAULT":
		*e = APIRequestResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for APIRequestResourceTypeEnum: %s", s)
	}
}

type APIRequestResourceVault struct {
	ID *string `json:"id,omitempty"`
}

type APIRequestResource struct {
	Item        *APIRequestResourceItem     `json:"item,omitempty"`
	ItemVersion *int64                      `json:"itemVersion,omitempty"`
	Type        *APIRequestResourceTypeEnum `json:"type,omitempty"`
	Vault       *APIRequestResourceVault    `json:"vault,omitempty"`
}

type APIRequestResultEnum string

const (
	APIRequestResultEnumSuccess APIRequestResultEnum = "SUCCESS"
	APIRequestResultEnumDeny    APIRequestResultEnum = "DENY"
)

func (e *APIRequestResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUCCESS":
		fallthrough
	case "DENY":
		*e = APIRequestResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for APIRequestResultEnum: %s", s)
	}
}

// APIRequest - Represents a request that was made to the API. Including what Token was used and what resource was accessed.
type APIRequest struct {
	Action *APIRequestActionEnum `json:"action,omitempty"`
	Actor  *APIRequestActor      `json:"actor,omitempty"`
	// The unique id used to identify a single request.
	RequestID *string               `json:"requestId,omitempty"`
	Resource  *APIRequestResource   `json:"resource,omitempty"`
	Result    *APIRequestResultEnum `json:"result,omitempty"`
	// The time at which the request was processed by the server.
	Timestamp *time.Time `json:"timestamp,omitempty"`
}
