/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { LoyaltyAccount } from "./loyaltyaccount";
import { Expose, Type } from "class-transformer";

/**
 * A response that includes loyalty accounts that satisfy the search criteria.
 */
export class SearchLoyaltyAccountsResponse extends SpeakeasyBase {
  /**
   * The pagination cursor to use in a subsequent
   *
   * @remarks
   * request. If empty, this is the final response.
   * For more information,
   * see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * Any errors that occurred during the request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * The loyalty accounts that met the search criteria,
   *
   * @remarks
   * in order of creation date.
   */
  @SpeakeasyMetadata({ elemType: LoyaltyAccount })
  @Expose({ name: "loyalty_accounts" })
  @Type(() => LoyaltyAccount)
  loyaltyAccounts?: LoyaltyAccount[];
}
