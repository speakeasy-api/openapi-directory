/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HttpRouteDestination } from "./httproutedestination";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the policy on how requests are shadowed to a separate mirrored destination service. The proxy does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host/authority header is suffixed with -shadow.
 */
export class HttpRouteRequestMirrorPolicy extends SpeakeasyBase {
  /**
   * Specifications of a destination to which the request should be routed to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  @Type(() => HttpRouteDestination)
  destination?: HttpRouteDestination;
}
