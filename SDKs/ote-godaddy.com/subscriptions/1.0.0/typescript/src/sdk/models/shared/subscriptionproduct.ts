/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The unit of time that `renewalPeriod` is measured in
 */
export enum SubscriptionProductRenewalPeriodUnitEnum {
  Month = "MONTH",
  Quarter = "QUARTER",
  SemiAnnual = "SEMI_ANNUAL",
  Year = "YEAR",
}

export class SubscriptionProduct extends SpeakeasyBase {
  /**
   * A human readable description of the Product that is subscribed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  /**
   * Grouping of related Subscriptions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "namespace" })
  namespace: string;

  /**
   * Unique identifier of the Product that is subscribed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pfid" })
  pfid: number;

  /**
   * Primary key of a grouping of related Subscriptions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productGroupKey" })
  productGroupKey: string;

  /**
   * The number of `renewalPeriodUnits` that will be added by the `renewalPfid`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renewalPeriod" })
  renewalPeriod: number;

  /**
   * The unit of time that `renewalPeriod` is measured in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renewalPeriodUnit" })
  renewalPeriodUnit: SubscriptionProductRenewalPeriodUnitEnum;

  /**
   * Unique identifier of the renewal Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renewalPfid" })
  renewalPfid: number;

  /**
   * Whether the product supports the `billOn` option on the renewal endpoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supportBillOn" })
  supportBillOn: boolean;
}
