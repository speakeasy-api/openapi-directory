<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DatabaseDump - A specification of the location of and metadata about a database dump from a relational database management system.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DatabaseDump
{
    /**
     * The type of the database.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DatabaseDumpDatabaseTypeEnum $databaseType
     */
	#[\JMS\Serializer\Annotation\SerializedName('databaseType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DatabaseDumpDatabaseTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DatabaseDumpDatabaseTypeEnum $databaseType = null;
    
    /**
     * A Cloud Storage object or folder URI that specifies the source from which to import metadata. It must begin with gs://.
     * 
     * @var ?string $gcsUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('gcsUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gcsUri = null;
    
    /**
     * The name of the source database.
     * 
     * @var ?string $sourceDatabase
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceDatabase')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceDatabase = null;
    
    /**
     * Optional. The type of the database dump. If unspecified, defaults to MYSQL.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DatabaseDumpTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DatabaseDumpTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DatabaseDumpTypeEnum $type = null;
    
	public function __construct()
	{
		$this->databaseType = null;
		$this->gcsUri = null;
		$this->sourceDatabase = null;
		$this->type = null;
	}
}
