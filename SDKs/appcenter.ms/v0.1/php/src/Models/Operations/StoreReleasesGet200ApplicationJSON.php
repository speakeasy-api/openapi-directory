<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * StoreReleasesGet200ApplicationJSON - Details of an uploaded release
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class StoreReleasesGet200ApplicationJSON
{
    /**
     * The release's minimum required Android API level.
     * 
     * @var ?string $androidMinApiLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('android_min_api_level')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $androidMinApiLevel = null;
    
    /**
     * The app's display name.
     * 
     * @var ?string $appDisplayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('app_display_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $appDisplayName = null;
    
    /**
     * The app's name (extracted from the uploaded release).
     * 
     * @var ?string $appName
     */
	#[\JMS\Serializer\Annotation\SerializedName('app_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $appName = null;
    
    /**
     * The identifier of the apps bundle.
     * 
     * @var ?string $bundleIdentifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('bundle_identifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bundleIdentifier = null;
    
    /**
     * a list of distribution stores that are associated with this release.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\StoreReleasesGet200ApplicationJSONDistributionStores> $distributionStores
     */
	#[\JMS\Serializer\Annotation\SerializedName('distribution_stores')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\StoreReleasesGet200ApplicationJSONDistributionStores>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $distributionStores = null;
    
    /**
     * The URL that hosts the binary for this release.
     * 
     * @var ?string $downloadUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('download_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $downloadUrl = null;
    
    /**
     * MD5 checksum of the release binary.
     * 
     * @var ?string $fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
    /**
     * ID identifying this unique release.
     * 
     * @var ?float $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $id = null;
    
    /**
     * The href required to install a release on a mobile device. On iOS devices will be prefixed with `itms-services://?action=download-manifest&url=`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\StoreReleasesGet200ApplicationJSONInstallUrlEnum $installUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('install_url')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\StoreReleasesGet200ApplicationJSONInstallUrlEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoreReleasesGet200ApplicationJSONInstallUrlEnum $installUrl = null;
    
    /**
     * The release's minimum required operating system.
     * 
     * @var ?string $minOs
     */
	#[\JMS\Serializer\Annotation\SerializedName('min_os')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minOs = null;
    
    /**
     * The release's release notes.
     * 
     * @var ?string $releaseNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('release_notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $releaseNotes = null;
    
    /**
     * The release's short version.<br>
     * 
     * For iOS: CFBundleShortVersionString from info.plist.
     * For Android: android:versionName from AppManifest.xml.
     * 
     * 
     * @var ?string $shortVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('short_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shortVersion = null;
    
    /**
     * The release's size in bytes.
     * 
     * @var ?float $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $size = null;
    
    /**
     * OBSOLETE. Will be removed in next version. The availability concept is now replaced with distributed. Any 'available' release will be associated with the default distribution group of an app.</br>
     * 
     * The release state.<br>
     * <b>available</b>: The uploaded release has been distributed.<br>
     * <b>unavailable</b>: The uploaded release is not visible to the user. <br>
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\StoreReleasesGet200ApplicationJSONStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\StoreReleasesGet200ApplicationJSONStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoreReleasesGet200ApplicationJSONStatusEnum $status = null;
    
    /**
     * UTC time in ISO 8601 format of the uploaded time.
     * 
     * @var ?string $uploadedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('uploaded_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uploadedAt = null;
    
    /**
     * The release's version.<br>
     * 
     * For iOS: CFBundleVersion from info.plist.
     * For Android: android:versionCode from AppManifest.xml.
     * 
     * 
     * @var ?string $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $version = null;
    
	public function __construct()
	{
		$this->androidMinApiLevel = null;
		$this->appDisplayName = null;
		$this->appName = null;
		$this->bundleIdentifier = null;
		$this->distributionStores = null;
		$this->downloadUrl = null;
		$this->fingerprint = null;
		$this->id = null;
		$this->installUrl = null;
		$this->minOs = null;
		$this->releaseNotes = null;
		$this->shortVersion = null;
		$this->size = null;
		$this->status = null;
		$this->uploadedAt = null;
		$this->version = null;
	}
}
