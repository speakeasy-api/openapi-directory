// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutImageScanningConfigurationXAmzTargetEnum
type PutImageScanningConfigurationXAmzTargetEnum string

const (
	PutImageScanningConfigurationXAmzTargetEnumAmazonEc2ContainerRegistryV20150921PutImageScanningConfiguration PutImageScanningConfigurationXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.PutImageScanningConfiguration"
)

func (e *PutImageScanningConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerRegistry_V20150921.PutImageScanningConfiguration":
		*e = PutImageScanningConfigurationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutImageScanningConfigurationXAmzTargetEnum: %s", s)
	}
}

type PutImageScanningConfigurationRequest struct {
	PutImageScanningConfigurationRequest shared.PutImageScanningConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           PutImageScanningConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutImageScanningConfigurationResponse struct {
	ContentType string
	// InvalidParameterException
	InvalidParameterException interface{}
	// Success
	PutImageScanningConfigurationResponse *shared.PutImageScanningConfigurationResponse
	// RepositoryNotFoundException
	RepositoryNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
	// ValidationException
	ValidationException interface{}
}
