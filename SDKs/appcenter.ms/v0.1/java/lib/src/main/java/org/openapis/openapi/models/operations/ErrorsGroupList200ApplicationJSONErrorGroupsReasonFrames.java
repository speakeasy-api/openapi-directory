/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames {
    /**
     * this line isn't from any framework
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appCode")
    public Boolean appCode;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withAppCode(Boolean appCode) {
        this.appCode = appCode;
        return this;
    }
    
    /**
     * is a class method
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classMethod")
    public Boolean classMethod;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withClassMethod(Boolean classMethod) {
        this.classMethod = classMethod;
        return this;
    }
    
    /**
     * name of the class
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("className")
    public String className;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withClassName(String className) {
        this.className = className;
        return this;
    }
    
    /**
     * Formatted frame string
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codeFormatted")
    public String codeFormatted;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withCodeFormatted(String codeFormatted) {
        this.codeFormatted = codeFormatted;
        return this;
    }
    
    /**
     * Unformatted Frame string
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codeRaw")
    public String codeRaw;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withCodeRaw(String codeRaw) {
        this.codeRaw = codeRaw;
        return this;
    }
    
    /**
     * Exception type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exceptionType")
    public String exceptionType;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withExceptionType(String exceptionType) {
        this.exceptionType = exceptionType;
        return this;
    }
    
    /**
     * name of the file
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file")
    public String file;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withFile(String file) {
        this.file = file;
        return this;
    }
    
    /**
     * Name of the framework
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frameworkName")
    public String frameworkName;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withFrameworkName(String frameworkName) {
        this.frameworkName = frameworkName;
        return this;
    }
    
    /**
     * programming language of the frame
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFramesLanguageEnum language;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withLanguage(ErrorsGroupList200ApplicationJSONErrorGroupsReasonFramesLanguageEnum language) {
        this.language = language;
        return this;
    }
    
    /**
     * line number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("line")
    public Long line;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withLine(Long line) {
        this.line = line;
        return this;
    }
    
    /**
     * name of the method
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("method")
    public String method;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withMethod(String method) {
        this.method = method;
        return this;
    }
    
    /**
     * parameters of the frames method
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("methodParams")
    public String methodParams;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withMethodParams(String methodParams) {
        this.methodParams = methodParams;
        return this;
    }
    
    /**
     * OS exception type. (aka. SIGNAL)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osExceptionType")
    public String osExceptionType;
    public ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames withOsExceptionType(String osExceptionType) {
        this.osExceptionType = osExceptionType;
        return this;
    }
    
}
