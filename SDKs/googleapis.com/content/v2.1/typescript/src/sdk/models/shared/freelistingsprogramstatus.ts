/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FreeListingsProgramStatusRegionStatus } from "./freelistingsprogramstatusregionstatus";
import { Expose, Type } from "class-transformer";

/**
 * State of the program. `ENABLED` if there are offers for at least one region.
 */
export enum FreeListingsProgramStatusGlobalStateEnum {
  ProgramStateUnspecified = "PROGRAM_STATE_UNSPECIFIED",
  NotEnabled = "NOT_ENABLED",
  NoOffersUploaded = "NO_OFFERS_UPLOADED",
  Enabled = "ENABLED",
}

/**
 * Response message for GetFreeListingsProgramStatus.
 */
export class FreeListingsProgramStatus extends SpeakeasyBase {
  /**
   * State of the program. `ENABLED` if there are offers for at least one region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "globalState" })
  globalState?: FreeListingsProgramStatusGlobalStateEnum;

  /**
   * Status of the program in each region. Regions with the same status and review eligibility are grouped together in `regionCodes`.
   */
  @SpeakeasyMetadata({ elemType: FreeListingsProgramStatusRegionStatus })
  @Expose({ name: "regionStatuses" })
  @Type(() => FreeListingsProgramStatusRegionStatus)
  regionStatuses?: FreeListingsProgramStatusRegionStatus[];
}
