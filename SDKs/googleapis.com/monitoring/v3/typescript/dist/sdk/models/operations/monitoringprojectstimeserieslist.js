"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MonitoringProjectsTimeSeriesListResponse = exports.MonitoringProjectsTimeSeriesListRequest = exports.MonitoringProjectsTimeSeriesListViewEnum = exports.MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum = exports.MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum = exports.MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum = exports.MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum = exports.MonitoringProjectsTimeSeriesListSecurity = exports.MonitoringProjectsTimeSeriesListSecurityOption3 = exports.MonitoringProjectsTimeSeriesListSecurityOption2 = exports.MonitoringProjectsTimeSeriesListSecurityOption1 = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var MonitoringProjectsTimeSeriesListSecurityOption1 = /** @class */ (function (_super) {
    __extends(MonitoringProjectsTimeSeriesListSecurityOption1, _super);
    function MonitoringProjectsTimeSeriesListSecurityOption1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListSecurityOption1.prototype, "oauth2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListSecurityOption1.prototype, "oauth2c", void 0);
    return MonitoringProjectsTimeSeriesListSecurityOption1;
}(utils_1.SpeakeasyBase));
exports.MonitoringProjectsTimeSeriesListSecurityOption1 = MonitoringProjectsTimeSeriesListSecurityOption1;
var MonitoringProjectsTimeSeriesListSecurityOption2 = /** @class */ (function (_super) {
    __extends(MonitoringProjectsTimeSeriesListSecurityOption2, _super);
    function MonitoringProjectsTimeSeriesListSecurityOption2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListSecurityOption2.prototype, "oauth2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListSecurityOption2.prototype, "oauth2c", void 0);
    return MonitoringProjectsTimeSeriesListSecurityOption2;
}(utils_1.SpeakeasyBase));
exports.MonitoringProjectsTimeSeriesListSecurityOption2 = MonitoringProjectsTimeSeriesListSecurityOption2;
var MonitoringProjectsTimeSeriesListSecurityOption3 = /** @class */ (function (_super) {
    __extends(MonitoringProjectsTimeSeriesListSecurityOption3, _super);
    function MonitoringProjectsTimeSeriesListSecurityOption3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListSecurityOption3.prototype, "oauth2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListSecurityOption3.prototype, "oauth2c", void 0);
    return MonitoringProjectsTimeSeriesListSecurityOption3;
}(utils_1.SpeakeasyBase));
exports.MonitoringProjectsTimeSeriesListSecurityOption3 = MonitoringProjectsTimeSeriesListSecurityOption3;
var MonitoringProjectsTimeSeriesListSecurity = /** @class */ (function (_super) {
    __extends(MonitoringProjectsTimeSeriesListSecurity, _super);
    function MonitoringProjectsTimeSeriesListSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "security, option=true" }),
        __metadata("design:type", MonitoringProjectsTimeSeriesListSecurityOption1)
    ], MonitoringProjectsTimeSeriesListSecurity.prototype, "option1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "security, option=true" }),
        __metadata("design:type", MonitoringProjectsTimeSeriesListSecurityOption2)
    ], MonitoringProjectsTimeSeriesListSecurity.prototype, "option2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "security, option=true" }),
        __metadata("design:type", MonitoringProjectsTimeSeriesListSecurityOption3)
    ], MonitoringProjectsTimeSeriesListSecurity.prototype, "option3", void 0);
    return MonitoringProjectsTimeSeriesListSecurity;
}(utils_1.SpeakeasyBase));
exports.MonitoringProjectsTimeSeriesListSecurity = MonitoringProjectsTimeSeriesListSecurity;
/**
 * The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.Not all reducer operations can be applied to all time series. The valid choices depend on the metric_kind and the value_type of the original time series. Reduction can yield a time series with a different metric_kind or value_type than the input time series.Time series data must first be aligned (see per_series_aligner) in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified, and must not be ALIGN_NONE. An alignment_period must also be specified; otherwise, an error is returned.
 */
var MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum;
(function (MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum) {
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceNone"] = "REDUCE_NONE";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceMean"] = "REDUCE_MEAN";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceMin"] = "REDUCE_MIN";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceMax"] = "REDUCE_MAX";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceSum"] = "REDUCE_SUM";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceStddev"] = "REDUCE_STDDEV";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceCount"] = "REDUCE_COUNT";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceCountTrue"] = "REDUCE_COUNT_TRUE";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceCountFalse"] = "REDUCE_COUNT_FALSE";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReduceFractionTrue"] = "REDUCE_FRACTION_TRUE";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReducePercentile99"] = "REDUCE_PERCENTILE_99";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReducePercentile95"] = "REDUCE_PERCENTILE_95";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReducePercentile50"] = "REDUCE_PERCENTILE_50";
    MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum["ReducePercentile05"] = "REDUCE_PERCENTILE_05";
})(MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum = exports.MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum || (exports.MonitoringProjectsTimeSeriesListAggregationCrossSeriesReducerEnum = {}));
/**
 * An Aligner describes how to bring the data points in a single time series into temporal alignment. Except for ALIGN_NONE, all alignments cause all the data points in an alignment_period to be mathematically grouped together, resulting in a single data point for each alignment_period with end timestamp at the end of the period.Not all alignment operations may be applied to all time series. The valid choices depend on the metric_kind and value_type of the original time series. Alignment can change the metric_kind or the value_type of the time series.Time series data must be aligned in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified and not equal to ALIGN_NONE and alignment_period must be specified; otherwise, an error is returned.
 */
var MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum;
(function (MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum) {
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignNone"] = "ALIGN_NONE";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignDelta"] = "ALIGN_DELTA";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignRate"] = "ALIGN_RATE";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignInterpolate"] = "ALIGN_INTERPOLATE";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignNextOlder"] = "ALIGN_NEXT_OLDER";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignMin"] = "ALIGN_MIN";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignMax"] = "ALIGN_MAX";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignMean"] = "ALIGN_MEAN";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignCount"] = "ALIGN_COUNT";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignSum"] = "ALIGN_SUM";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignStddev"] = "ALIGN_STDDEV";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignCountTrue"] = "ALIGN_COUNT_TRUE";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignCountFalse"] = "ALIGN_COUNT_FALSE";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignFractionTrue"] = "ALIGN_FRACTION_TRUE";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignPercentile99"] = "ALIGN_PERCENTILE_99";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignPercentile95"] = "ALIGN_PERCENTILE_95";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignPercentile50"] = "ALIGN_PERCENTILE_50";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignPercentile05"] = "ALIGN_PERCENTILE_05";
    MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum["AlignPercentChange"] = "ALIGN_PERCENT_CHANGE";
})(MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum = exports.MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum || (exports.MonitoringProjectsTimeSeriesListAggregationPerSeriesAlignerEnum = {}));
/**
 * The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.Not all reducer operations can be applied to all time series. The valid choices depend on the metric_kind and the value_type of the original time series. Reduction can yield a time series with a different metric_kind or value_type than the input time series.Time series data must first be aligned (see per_series_aligner) in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified, and must not be ALIGN_NONE. An alignment_period must also be specified; otherwise, an error is returned.
 */
var MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum;
(function (MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum) {
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceNone"] = "REDUCE_NONE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceMean"] = "REDUCE_MEAN";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceMin"] = "REDUCE_MIN";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceMax"] = "REDUCE_MAX";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceSum"] = "REDUCE_SUM";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceStddev"] = "REDUCE_STDDEV";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceCount"] = "REDUCE_COUNT";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceCountTrue"] = "REDUCE_COUNT_TRUE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceCountFalse"] = "REDUCE_COUNT_FALSE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReduceFractionTrue"] = "REDUCE_FRACTION_TRUE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReducePercentile99"] = "REDUCE_PERCENTILE_99";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReducePercentile95"] = "REDUCE_PERCENTILE_95";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReducePercentile50"] = "REDUCE_PERCENTILE_50";
    MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum["ReducePercentile05"] = "REDUCE_PERCENTILE_05";
})(MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum = exports.MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum || (exports.MonitoringProjectsTimeSeriesListSecondaryAggregationCrossSeriesReducerEnum = {}));
/**
 * An Aligner describes how to bring the data points in a single time series into temporal alignment. Except for ALIGN_NONE, all alignments cause all the data points in an alignment_period to be mathematically grouped together, resulting in a single data point for each alignment_period with end timestamp at the end of the period.Not all alignment operations may be applied to all time series. The valid choices depend on the metric_kind and value_type of the original time series. Alignment can change the metric_kind or the value_type of the time series.Time series data must be aligned in order to perform cross-time series reduction. If cross_series_reducer is specified, then per_series_aligner must be specified and not equal to ALIGN_NONE and alignment_period must be specified; otherwise, an error is returned.
 */
var MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum;
(function (MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum) {
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignNone"] = "ALIGN_NONE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignDelta"] = "ALIGN_DELTA";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignRate"] = "ALIGN_RATE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignInterpolate"] = "ALIGN_INTERPOLATE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignNextOlder"] = "ALIGN_NEXT_OLDER";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignMin"] = "ALIGN_MIN";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignMax"] = "ALIGN_MAX";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignMean"] = "ALIGN_MEAN";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignCount"] = "ALIGN_COUNT";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignSum"] = "ALIGN_SUM";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignStddev"] = "ALIGN_STDDEV";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignCountTrue"] = "ALIGN_COUNT_TRUE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignCountFalse"] = "ALIGN_COUNT_FALSE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignFractionTrue"] = "ALIGN_FRACTION_TRUE";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignPercentile99"] = "ALIGN_PERCENTILE_99";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignPercentile95"] = "ALIGN_PERCENTILE_95";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignPercentile50"] = "ALIGN_PERCENTILE_50";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignPercentile05"] = "ALIGN_PERCENTILE_05";
    MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum["AlignPercentChange"] = "ALIGN_PERCENT_CHANGE";
})(MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum = exports.MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum || (exports.MonitoringProjectsTimeSeriesListSecondaryAggregationPerSeriesAlignerEnum = {}));
/**
 * Required. Specifies which information is returned about the time series.
 */
var MonitoringProjectsTimeSeriesListViewEnum;
(function (MonitoringProjectsTimeSeriesListViewEnum) {
    MonitoringProjectsTimeSeriesListViewEnum["Full"] = "FULL";
    MonitoringProjectsTimeSeriesListViewEnum["Headers"] = "HEADERS";
})(MonitoringProjectsTimeSeriesListViewEnum = exports.MonitoringProjectsTimeSeriesListViewEnum || (exports.MonitoringProjectsTimeSeriesListViewEnum = {}));
var MonitoringProjectsTimeSeriesListRequest = /** @class */ (function (_super) {
    __extends(MonitoringProjectsTimeSeriesListRequest, _super);
    function MonitoringProjectsTimeSeriesListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=$.xgafv",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "dollarXgafv", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=access_token",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "accessToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=aggregation.alignmentPeriod",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "aggregationAlignmentPeriod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=aggregation.crossSeriesReducer",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "aggregationCrossSeriesReducer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=aggregation.groupByFields",
        }),
        __metadata("design:type", Array)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "aggregationGroupByFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=aggregation.perSeriesAligner",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "aggregationPerSeriesAligner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=alt" }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "alt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=callback",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "callback", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=fields",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "fields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=filter",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "filter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=interval.endTime",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "intervalEndTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=interval.startTime",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "intervalStartTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=key" }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=name",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=oauth_token",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "oauthToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=orderBy",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "orderBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=pageSize",
        }),
        __metadata("design:type", Number)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "pageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=pageToken",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "pageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=prettyPrint",
        }),
        __metadata("design:type", Boolean)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "prettyPrint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=quotaUser",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "quotaUser", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=secondaryAggregation.alignmentPeriod",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "secondaryAggregationAlignmentPeriod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=secondaryAggregation.crossSeriesReducer",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "secondaryAggregationCrossSeriesReducer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=secondaryAggregation.groupByFields",
        }),
        __metadata("design:type", Array)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "secondaryAggregationGroupByFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=secondaryAggregation.perSeriesAligner",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "secondaryAggregationPerSeriesAligner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=uploadType",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "uploadType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=upload_protocol",
        }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "uploadProtocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=view" }),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListRequest.prototype, "view", void 0);
    return MonitoringProjectsTimeSeriesListRequest;
}(utils_1.SpeakeasyBase));
exports.MonitoringProjectsTimeSeriesListRequest = MonitoringProjectsTimeSeriesListRequest;
var MonitoringProjectsTimeSeriesListResponse = /** @class */ (function (_super) {
    __extends(MonitoringProjectsTimeSeriesListResponse, _super);
    function MonitoringProjectsTimeSeriesListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], MonitoringProjectsTimeSeriesListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.ListTimeSeriesResponse)
    ], MonitoringProjectsTimeSeriesListResponse.prototype, "listTimeSeriesResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], MonitoringProjectsTimeSeriesListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], MonitoringProjectsTimeSeriesListResponse.prototype, "rawResponse", void 0);
    return MonitoringProjectsTimeSeriesListResponse;
}(utils_1.SpeakeasyBase));
exports.MonitoringProjectsTimeSeriesListResponse = MonitoringProjectsTimeSeriesListResponse;
