"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import detectlabelsimagepropertiessettings as shared_detectlabelsimagepropertiessettings
from ..shared import generallabelssettings as shared_generallabelssettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DetectLabelsSettings:
    r"""Settings for the DetectLabels request. Settings can include filters for both GENERAL_LABELS and IMAGE_PROPERTIES. GENERAL_LABELS filters can be inclusive or exclusive and applied to individual labels or label categories. IMAGE_PROPERTIES filters allow specification of a maximum number of dominant colors."""
    
    general_labels: Optional[shared_generallabelssettings.GeneralLabelsSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GeneralLabels'), 'exclude': lambda f: f is None }})  
    image_properties: Optional[shared_detectlabelsimagepropertiessettings.DetectLabelsImagePropertiesSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageProperties'), 'exclude': lambda f: f is None }})  
    