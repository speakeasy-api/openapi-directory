/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Group - Group information
 */
public class Group {
    /**
     * Amount of users
     */
    @JsonProperty("cntUsers")
    public Integer cntUsers;
    public Group withCntUsers(Integer cntUsers) {
        this.cntUsers = cntUsers;
        return this;
    }
    
    /**
     * Creation date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public Group withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonProperty("createdBy")
    public UserInfo createdBy;
    public Group withCreatedBy(UserInfo createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Expiration date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expireAt")
    public OffsetDateTime expireAt;
    public Group withExpireAt(OffsetDateTime expireAt) {
        this.expireAt = expireAt;
        return this;
    }
    
    /**
     * List of roles
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupRoles")
    public RoleList groupRoles;
    public Group withGroupRoles(RoleList groupRoles) {
        this.groupRoles = groupRoles;
        return this;
    }
    
    /**
     * Unique identifier for the group
     */
    @JsonProperty("id")
    public Long id;
    public Group withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Group name
     */
    @JsonProperty("name")
    public String name;
    public Group withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Modification date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public Group withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public UserInfo updatedBy;
    public Group withUpdatedBy(UserInfo updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
}
