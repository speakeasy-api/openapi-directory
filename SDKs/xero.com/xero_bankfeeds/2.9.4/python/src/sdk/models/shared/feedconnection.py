"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import countrycode_enum as shared_countrycode_enum
from ..shared import currencycode_enum as shared_currencycode_enum
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FeedConnectionAccountTypeEnum(str, Enum):
    r"""High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."""
    BANK = 'BANK'
    CREDITCARD = 'CREDITCARD'

class FeedConnectionStatusEnum(str, Enum):
    r"""the current status of the feed connection"""
    PENDING = 'PENDING'
    REJECTED = 'REJECTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FeedConnection:
    r"""success returns a FeedConnection object matching the id in response
    https://developer.xero.com/documentation/bank-feeds-api/feed-connections
    """
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified."""  
    account_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountName'), 'exclude': lambda f: f is None }})
    r"""The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found."""  
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountNumber'), 'exclude': lambda f: f is None }})
    r"""String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified."""  
    account_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountToken'), 'exclude': lambda f: f is None }})
    r"""This account identifier is generated by the financial institute (FI). This must be unique for your financial institute."""  
    account_type: Optional[FeedConnectionAccountTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountType'), 'exclude': lambda f: f is None }})
    r"""High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards."""  
    country: Optional[shared_countrycode_enum.CountryCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case."""  
    currency: Optional[shared_currencycode_enum.CurrencyCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD."""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""GUID used to identify the Account."""  
    status: Optional[FeedConnectionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""the current status of the feed connection"""  
    