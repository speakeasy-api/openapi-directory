"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateMetricSetResponse = exports.UpdateMetricSetRequest = exports.UpdateMetricSetRequestBody = exports.UpdateMetricSetRequestBodyTimestampColumn = exports.UpdateMetricSetRequestBodyMetricSource = exports.UpdateMetricSetRequestBodyMetricSetFrequencyEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * The dataset's interval.
 */
var UpdateMetricSetRequestBodyMetricSetFrequencyEnum;
(function (UpdateMetricSetRequestBodyMetricSetFrequencyEnum) {
    UpdateMetricSetRequestBodyMetricSetFrequencyEnum["P1D"] = "P1D";
    UpdateMetricSetRequestBodyMetricSetFrequencyEnum["Pt1H"] = "PT1H";
    UpdateMetricSetRequestBodyMetricSetFrequencyEnum["Pt10M"] = "PT10M";
    UpdateMetricSetRequestBodyMetricSetFrequencyEnum["Pt5M"] = "PT5M";
})(UpdateMetricSetRequestBodyMetricSetFrequencyEnum = exports.UpdateMetricSetRequestBodyMetricSetFrequencyEnum || (exports.UpdateMetricSetRequestBodyMetricSetFrequencyEnum = {}));
/**
 * Contains information about source data used to generate metrics.
 */
var UpdateMetricSetRequestBodyMetricSource = /** @class */ (function (_super) {
    __extends(UpdateMetricSetRequestBodyMetricSource, _super);
    function UpdateMetricSetRequestBodyMetricSource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AppFlowConfig" }),
        (0, class_transformer_1.Type)(function () { return shared.AppFlowConfig; }),
        __metadata("design:type", shared.AppFlowConfig)
    ], UpdateMetricSetRequestBodyMetricSource.prototype, "appFlowConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AthenaSourceConfig" }),
        (0, class_transformer_1.Type)(function () { return shared.AthenaSourceConfig; }),
        __metadata("design:type", shared.AthenaSourceConfig)
    ], UpdateMetricSetRequestBodyMetricSource.prototype, "athenaSourceConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CloudWatchConfig" }),
        (0, class_transformer_1.Type)(function () { return shared.CloudWatchConfig; }),
        __metadata("design:type", shared.CloudWatchConfig)
    ], UpdateMetricSetRequestBodyMetricSource.prototype, "cloudWatchConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RDSSourceConfig" }),
        (0, class_transformer_1.Type)(function () { return shared.RDSSourceConfig; }),
        __metadata("design:type", shared.RDSSourceConfig)
    ], UpdateMetricSetRequestBodyMetricSource.prototype, "rdsSourceConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RedshiftSourceConfig" }),
        (0, class_transformer_1.Type)(function () { return shared.RedshiftSourceConfig; }),
        __metadata("design:type", shared.RedshiftSourceConfig)
    ], UpdateMetricSetRequestBodyMetricSource.prototype, "redshiftSourceConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "S3SourceConfig" }),
        (0, class_transformer_1.Type)(function () { return shared.S3SourceConfig; }),
        __metadata("design:type", shared.S3SourceConfig)
    ], UpdateMetricSetRequestBodyMetricSource.prototype, "s3SourceConfig", void 0);
    return UpdateMetricSetRequestBodyMetricSource;
}(utils_1.SpeakeasyBase));
exports.UpdateMetricSetRequestBodyMetricSource = UpdateMetricSetRequestBodyMetricSource;
/**
 * Contains information about the column used to track time in a source data file.
 */
var UpdateMetricSetRequestBodyTimestampColumn = /** @class */ (function (_super) {
    __extends(UpdateMetricSetRequestBodyTimestampColumn, _super);
    function UpdateMetricSetRequestBodyTimestampColumn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ColumnFormat" }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequestBodyTimestampColumn.prototype, "columnFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ColumnName" }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequestBodyTimestampColumn.prototype, "columnName", void 0);
    return UpdateMetricSetRequestBodyTimestampColumn;
}(utils_1.SpeakeasyBase));
exports.UpdateMetricSetRequestBodyTimestampColumn = UpdateMetricSetRequestBodyTimestampColumn;
var UpdateMetricSetRequestBody = /** @class */ (function (_super) {
    __extends(UpdateMetricSetRequestBody, _super);
    function UpdateMetricSetRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.MetricSetDimensionFilter }),
        (0, class_transformer_1.Expose)({ name: "DimensionFilterList" }),
        (0, class_transformer_1.Type)(function () { return shared.MetricSetDimensionFilter; }),
        __metadata("design:type", Array)
    ], UpdateMetricSetRequestBody.prototype, "dimensionFilterList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DimensionList" }),
        __metadata("design:type", Array)
    ], UpdateMetricSetRequestBody.prototype, "dimensionList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.Metric }),
        (0, class_transformer_1.Expose)({ name: "MetricList" }),
        (0, class_transformer_1.Type)(function () { return shared.Metric; }),
        __metadata("design:type", Array)
    ], UpdateMetricSetRequestBody.prototype, "metricList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MetricSetArn" }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequestBody.prototype, "metricSetArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MetricSetDescription" }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequestBody.prototype, "metricSetDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MetricSetFrequency" }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequestBody.prototype, "metricSetFrequency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MetricSource" }),
        (0, class_transformer_1.Type)(function () { return UpdateMetricSetRequestBodyMetricSource; }),
        __metadata("design:type", UpdateMetricSetRequestBodyMetricSource)
    ], UpdateMetricSetRequestBody.prototype, "metricSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Offset" }),
        __metadata("design:type", Number)
    ], UpdateMetricSetRequestBody.prototype, "offset", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TimestampColumn" }),
        (0, class_transformer_1.Type)(function () { return UpdateMetricSetRequestBodyTimestampColumn; }),
        __metadata("design:type", UpdateMetricSetRequestBodyTimestampColumn)
    ], UpdateMetricSetRequestBody.prototype, "timestampColumn", void 0);
    return UpdateMetricSetRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateMetricSetRequestBody = UpdateMetricSetRequestBody;
var UpdateMetricSetRequest = /** @class */ (function (_super) {
    __extends(UpdateMetricSetRequest, _super);
    function UpdateMetricSetRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateMetricSetRequestBody)
    ], UpdateMetricSetRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], UpdateMetricSetRequest.prototype, "xAmzSignedHeaders", void 0);
    return UpdateMetricSetRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateMetricSetRequest = UpdateMetricSetRequest;
var UpdateMetricSetResponse = /** @class */ (function (_super) {
    __extends(UpdateMetricSetResponse, _super);
    function UpdateMetricSetResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateMetricSetResponse.prototype, "accessDeniedException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateMetricSetResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateMetricSetResponse.prototype, "internalServerException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateMetricSetResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateMetricSetResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateMetricSetResponse.prototype, "resourceNotFoundException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateMetricSetResponse.prototype, "serviceQuotaExceededException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateMetricSetResponse.prototype, "tooManyRequestsException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.UpdateMetricSetResponse)
    ], UpdateMetricSetResponse.prototype, "updateMetricSetResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateMetricSetResponse.prototype, "validationException", void 0);
    return UpdateMetricSetResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateMetricSetResponse = UpdateMetricSetResponse;
