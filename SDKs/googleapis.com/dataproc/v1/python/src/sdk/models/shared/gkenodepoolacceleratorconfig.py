"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GkeNodePoolAcceleratorConfig:
    r"""A GkeNodeConfigAcceleratorConfig represents a Hardware Accelerator request for a node pool."""
    
    accelerator_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceleratorCount'), 'exclude': lambda f: f is None }})
    r"""The number of accelerator cards exposed to an instance."""  
    accelerator_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceleratorType'), 'exclude': lambda f: f is None }})
    r"""The accelerator type resource namename (see GPUs on Compute Engine)."""  
    gpu_partition_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gpuPartitionSize'), 'exclude': lambda f: f is None }})
    r"""Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)."""  
    