Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/quotes.rest/3.1/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.DeleteQuoteRequest(
    id="corrupti",
)
    
res = s.private_quotes.delete_quote(req, operations.DeleteQuoteSecurity(
    x_they_said_so_api_secret="YOUR_API_KEY_HERE",
))

if res.status_code == 200:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### private_quotes

* `delete_quote` - Delete a quote. The user needs to be the owner of the quote to be able to delete it.

* `get_quote` - Gets a `Quote` with a given `id`.
* `get_quote_list` - Get the list of quotes in your private collection.
* `patch_quote` - Update a quote
* `post_quote` - Add a new quote to your private collection. Same as 'PUT' but added since some clients don't handle PUT well.
* `post_quote_tags_add` - Add a tag to a given Quote.
* `post_quote_tags_remove` - Remove a tag from a given quote.
* `put_quote` - Add a new quote to your private collection.

### qshow

* `delete_qshow` - Delete a qshow.

* `get_qshow` - Gets a details about a qshow.

* `get_qshow_list` - Get the list of Qshows in They Said So platform.
* `get_qshow_quotes` - Get the quotes in a given Qshow.
* `patch_qshow` - Update an existing qshow.
* `post_qshow_quotes_add` - Add a quote to a given Qshow.
* `post_qshow_quotes_remove` - Remove a quote to a given Qshow.
* `put_qshow` - Create and add a new qshow to your private collection.

### quote

* `delete_quote_dislike` - Remove the disLike for the given Quote as a user of the API Key.
* `delete_quote_like` - Remove the Like for the given Quote as a user of the API Key.
* `get_quote` - Gets a `Quote` with a given `id`.
* `get_quote_authors_popular` - Gets a list of popular author names in the system. 

* `get_quote_authors_search` - Gets a list of author names in the system. 

* `get_quote_categories_popular` - Gets a list of popular `Quote` Categories.

* `get_quote_categories_search` - Gets a list of `Quote` Categories matching the query string.

* `get_quote_random` - Gets a `Random Quote`. When you are in a hurry this is what you call to get a random famous quote.
* `get_quote_search` - Search for a `Quote` in They Said So platform. Optional `category` , `author`, `minlength`, `maxlength` params determines the filters applied while searching for the quote. 
* `post_quote_dislike` - Dislike the given Quote as a user of the API Key. Same as `put` but a convenient alias for those clients that don't support `put` cleanly.
* `post_quote_like` - Like the given Quote as a user of the API Key. Same as `PUT` but a convenient alias for those clients that don't support `PUT` cleanly.
* `put_quote_dislike` - Dislike the given Quote as a user of the API Key. Some clients don't cleanly support `PUT`, in such scenarios use the `POST` version of this.
* `put_quote_like` - Like the given Quote as a user of the API Key. Some clients don't cleanly support `PUT`, in such scenarios use the `POST` version of this.

### quote_images

* `delete_quote_image` - Delete a quote image. The user needs to be the owner of the quote image to be able to delete it.

* `delete_quote_image_background` - Delete a background image file. The user needs to be the owner of the background image to be able to delete it.

* `delete_quote_image_font` - Delete a font file. The user needs to be the owner of the font to be able to delete it.

* `get_quote_image` - Gets a Quote image for a given id. Response can be an image file as a binary or a base64 encoded contents wrapped in json. `TODO`

* `get_quote_image_background_list` - Lists background images in your private collection. 

* `get_quote_image_background_search` - Searches for a background image with a given tag. 

* `get_quote_image_font_list` - Lists background images in your private collection. 

* `get_quote_image_font_search` - Searches for a font with a given tag. 

* `get_quote_image_search` - Gets a Random Quote image. Optional `category` param determines the category of quote used in the image. Optional `author` param gets the quote image of a given author. 

* `post_quote_image_background` - Add an image for use later as a quote background image.
* `post_quote_image_background_tags_add` - Add a tag to a given Image.
* `post_quote_image_background_tags_remove` - Remove a tag from a given Image.
* `post_quote_image_font` - Add a font file for use later in creating a quote image. This is essentially a `PUT` but not many clients handle PUT with binary stream i.e. a file, gracefully.
* `post_quote_image_font_tags_add` - Add a tag to a given font.
* `post_quote_image_font_tags_remove` - Remove a tag from a given Font.
* `put_quote_image` - Create a new quote image for a given quote. Choose background colors/images , choose different font styles and generate a beautiful quote image. Did you just had a feeling of being a god or what?!


### quote_of_the_day

* `get_qod` - Gets `Quote of the Day`. Optional `category` param determines the category of returned quote of the day

* `get_qod_categories` - Gets a list of `Quote of the Day` Categories.

* `get_qod_languages` - Gets a list of supported languages for `Quote of the Day`. 

<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
