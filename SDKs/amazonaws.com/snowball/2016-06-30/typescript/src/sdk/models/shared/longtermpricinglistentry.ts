/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LongTermPricingTypeEnum } from "./longtermpricingtypeenum";
import { SnowballTypeEnum } from "./snowballtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Each <code>LongTermPricingListEntry</code> object contains information about a long-term pricing type.
 */
export class LongTermPricingListEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CurrentActiveJob" })
  currentActiveJob?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsLongTermPricingAutoRenew" })
  isLongTermPricingAutoRenew?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "JobIds" })
  jobIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "LongTermPricingEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  longTermPricingEndDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LongTermPricingId" })
  longTermPricingId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LongTermPricingStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  longTermPricingStartDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LongTermPricingStatus" })
  longTermPricingStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LongTermPricingType" })
  longTermPricingType?: LongTermPricingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplacementJob" })
  replacementJob?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SnowballType" })
  snowballType?: SnowballTypeEnum;
}
