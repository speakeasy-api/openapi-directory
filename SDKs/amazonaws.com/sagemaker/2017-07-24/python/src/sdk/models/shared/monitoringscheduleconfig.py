"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import monitoringjobdefinition as shared_monitoringjobdefinition
from ..shared import monitoringtype_enum as shared_monitoringtype_enum
from ..shared import scheduleconfig as shared_scheduleconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonitoringScheduleConfig:
    r"""Configures the monitoring schedule and defines the monitoring job."""
    
    monitoring_job_definition: Optional[shared_monitoringjobdefinition.MonitoringJobDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringJobDefinition'), 'exclude': lambda f: f is None }})  
    monitoring_job_definition_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringJobDefinitionName'), 'exclude': lambda f: f is None }})  
    monitoring_type: Optional[shared_monitoringtype_enum.MonitoringTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringType'), 'exclude': lambda f: f is None }})  
    schedule_config: Optional[shared_scheduleconfig.ScheduleConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ScheduleConfig'), 'exclude': lambda f: f is None }})  
    