<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CertificateImportRequest - Request to import a certificate.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CertificateImportRequest
{
    /**
     * ID of the certificate signing request (CSR) associated with the imported certificate.
     * 
     * @var ?string $csrId
     */
	#[\JMS\Serializer\Annotation\SerializedName('csrId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $csrId = null;
    
    /**
     * User-friendly description for the certificate.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Display name for the certificate.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The certificates, and optionally private key to be imported, in PEM format.
     * 
     * @var string $pemFile
     */
	#[\JMS\Serializer\Annotation\SerializedName('pemFile')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $pemFile;
    
    /**
     * The private key, in PEM format, to be imported. If a private key is provided using this field instead of the pemFile field, the import fails if the private key is not successfully parsed.
     * 
     * @var ?string $privateKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $privateKey = null;
    
	public function __construct()
	{
		$this->csrId = null;
		$this->description = null;
		$this->name = "";
		$this->pemFile = "";
		$this->privateKey = null;
	}
}
