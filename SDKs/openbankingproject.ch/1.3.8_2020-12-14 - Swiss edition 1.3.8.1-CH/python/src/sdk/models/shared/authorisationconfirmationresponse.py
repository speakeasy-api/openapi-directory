"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import hreftype as shared_hreftype
from ..shared import scastatusauthorisationconfirmation_enum as shared_scastatusauthorisationconfirmation_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuthorisationConfirmationResponse:
    r"""Body of the JSON response for an authorisation confirmation request."""
    
    links: dict[str, shared_hreftype.HrefType] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('_links') }})
    r"""A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when processing the request.
    
    **Remark:** All links can be relative or full links, to be decided by the ASPSP.
    
    Type of links admitted in this response, (further links might be added for ASPSP 
    defined extensions):
    
    - 'scaStatus': The link to retrieve the status of the corresponding transaction resource.
    """  
    sca_status: shared_scastatusauthorisationconfirmation_enum.ScaStatusAuthorisationConfirmationEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scaStatus') }})
    r"""This data element is containing information about the status of the SCA method in an authorisation confirmation response.
    
    The following codes are defined for this data type.
    
      * 'finalised': if the transaction authorisation and confirmation was successfule.
      * 'failed': if the transaction authorisation or confirmation was not successful.
    """  
    psu_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('psuMessage'), 'exclude': lambda f: f is None }})
    r"""Text to be displayed to the PSU."""  
    