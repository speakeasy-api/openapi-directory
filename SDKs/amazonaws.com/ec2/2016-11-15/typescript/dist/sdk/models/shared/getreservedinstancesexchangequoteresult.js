"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetReservedInstancesExchangeQuoteResult = exports.GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet = exports.GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration = exports.GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue = exports.GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup = exports.GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet = exports.GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue = exports.GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The cost associated with the Reserved Instance.
 */
var GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup = /** @class */ (function (_super) {
    __extends(GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup, _super);
    function GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup.prototype, "hourlyPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup.prototype, "remainingTotalValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup.prototype, "remainingUpfrontValue", void 0);
    return GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup;
}(utils_1.SpeakeasyBase));
exports.GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup = GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup;
/**
 * The total value of the Convertible Reserved Instance that you are exchanging.
 */
var GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue = /** @class */ (function (_super) {
    __extends(GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue, _super);
    function GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue.prototype, "hourlyPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue.prototype, "remainingTotalValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue.prototype, "remainingUpfrontValue", void 0);
    return GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue;
}(utils_1.SpeakeasyBase));
exports.GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue = GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue;
/**
 * The total value of the Convertible Reserved Instance.
 */
var GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet = /** @class */ (function (_super) {
    __extends(GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet, _super);
    function GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetReservedInstancesExchangeQuoteResultReservedInstanceValueSetReservationValue)
    ], GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet.prototype, "reservationValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet.prototype, "reservedInstanceId", void 0);
    return GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet;
}(utils_1.SpeakeasyBase));
exports.GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet = GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet;
/**
 * The cost associated with the Reserved Instance.
 */
var GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup = /** @class */ (function (_super) {
    __extends(GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup, _super);
    function GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup.prototype, "hourlyPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup.prototype, "remainingTotalValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup.prototype, "remainingUpfrontValue", void 0);
    return GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup;
}(utils_1.SpeakeasyBase));
exports.GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup = GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup;
/**
 * The total value of the Convertible Reserved Instances that make up the exchange. This is the sum of the list value, remaining upfront price, and additional upfront cost of the exchange.
 */
var GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue = /** @class */ (function (_super) {
    __extends(GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue, _super);
    function GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue.prototype, "hourlyPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue.prototype, "remainingTotalValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue.prototype, "remainingUpfrontValue", void 0);
    return GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue;
}(utils_1.SpeakeasyBase));
exports.GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue = GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue;
/**
 * The configuration of the Convertible Reserved Instances that make up the exchange.
 */
var GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration = /** @class */ (function (_super) {
    __extends(GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration, _super);
    function GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration.prototype, "instanceCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration.prototype, "offeringId", void 0);
    return GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration;
}(utils_1.SpeakeasyBase));
exports.GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration = GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration;
/**
 * The total value of the new Convertible Reserved Instances.
 */
var GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet = /** @class */ (function (_super) {
    __extends(GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet, _super);
    function GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetReservationValue)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet.prototype, "reservationValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSetTargetConfiguration)
    ], GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet.prototype, "targetConfiguration", void 0);
    return GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet;
}(utils_1.SpeakeasyBase));
exports.GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet = GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet;
/**
 * Contains the output of GetReservedInstancesExchangeQuote.
 */
var GetReservedInstancesExchangeQuoteResult = /** @class */ (function (_super) {
    __extends(GetReservedInstancesExchangeQuoteResult, _super);
    function GetReservedInstancesExchangeQuoteResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "currencyCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "isValidExchange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "outputReservedInstancesWillExpireAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "paymentDue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetReservedInstancesExchangeQuoteResultReservedInstanceValueRollup)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "reservedInstanceValueRollup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetReservedInstancesExchangeQuoteResultReservedInstanceValueSet,
        }),
        __metadata("design:type", Array)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "reservedInstanceValueSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetReservedInstancesExchangeQuoteResultTargetConfigurationValueRollup)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "targetConfigurationValueRollup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetReservedInstancesExchangeQuoteResultTargetConfigurationValueSet,
        }),
        __metadata("design:type", Array)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "targetConfigurationValueSet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetReservedInstancesExchangeQuoteResult.prototype, "validationFailureReason", void 0);
    return GetReservedInstancesExchangeQuoteResult;
}(utils_1.SpeakeasyBase));
exports.GetReservedInstancesExchangeQuoteResult = GetReservedInstancesExchangeQuoteResult;
