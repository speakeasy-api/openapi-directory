// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum - The [reaction type](https://docs.github.com/enterprise-server@3.7/rest/reference/reactions#reaction-types) to add to the team discussion.
type ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum string

const (
	ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnumPlus1    ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum = "+1"
	ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnumMinus1   ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum = "-1"
	ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnumLaugh    ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum = "laugh"
	ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnumConfused ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum = "confused"
	ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnumHeart    ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum = "heart"
	ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnumHooray   ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum = "hooray"
	ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnumRocket   ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum = "rocket"
	ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnumEyes     ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum = "eyes"
)

func (e *ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "+1":
		fallthrough
	case "-1":
		fallthrough
	case "laugh":
		fallthrough
	case "confused":
		fallthrough
	case "heart":
		fallthrough
	case "hooray":
		fallthrough
	case "rocket":
		fallthrough
	case "eyes":
		*e = ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum: %s", s)
	}
}

type ReactionsCreateForTeamDiscussionLegacyRequestBody struct {
	// The [reaction type](https://docs.github.com/enterprise-server@3.7/rest/reference/reactions#reaction-types) to add to the team discussion.
	Content ReactionsCreateForTeamDiscussionLegacyRequestBodyContentEnum `json:"content"`
}

type ReactionsCreateForTeamDiscussionLegacyRequest struct {
	RequestBody ReactionsCreateForTeamDiscussionLegacyRequestBody `request:"mediaType=application/json"`
	// The number that identifies the discussion.
	DiscussionNumber int64 `pathParam:"style=simple,explode=false,name=discussion_number"`
	// The unique identifier of the team.
	TeamID int64 `pathParam:"style=simple,explode=false,name=team_id"`
}

type ReactionsCreateForTeamDiscussionLegacyResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Reaction *shared.Reaction
}
