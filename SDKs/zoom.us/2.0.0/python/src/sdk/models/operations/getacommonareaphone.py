"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetACommonAreaPhoneSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetACommonAreaPhoneRequest:
    
    common_area_phone_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'commonAreaPhoneId', 'style': 'simple', 'explode': False }})
    r"""Unique Identifier of the Common Area Phone. Use the unique identifier or the Mac address of the common area phone. The Mac address can be hyphenated (00-04-f2-5e-ec-3c) or not hyphenated (0004f25eec3c). You can retrieved this from the [List Common Area Phones API](https://marketplace.zoom.us/docs/api-reference/zoom-api/common-area-phones/listcommonareaphones)."""  
    

@dataclasses.dataclass
class GetACommonAreaPhone200ApplicationXMLProvisionSipAccounts:
    
    authorization_id: Optional[str] = dataclasses.field(default=None)
    r"""Authorization ID of the SIP account provided in the provisioning process."""  
    outbound_proxy: Optional[str] = dataclasses.field(default=None)
    r"""Outbound proxy provided in the provisioning process."""  
    password: Optional[str] = dataclasses.field(default=None)
    r"""Password entered during the  provisioning process."""  
    sip_domain: Optional[str] = dataclasses.field(default=None)
    r"""SIP Domain provided in the provisioning process.<br>"""  
    user_name: Optional[str] = dataclasses.field(default=None)
    r"""User name of the SIP account provided in the provisioning process."""  
    
class GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum(str, Enum):
    r"""[Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
    
    * `ztp` : Zero touch provisioning.
    * `assisted`: Assisted provisioning.
    * `manual`: Manual provisioning.
    """
    ASSISTED = 'assisted'
    ZTP = 'ztp'
    MANUAL = 'manual'


@dataclasses.dataclass
class GetACommonAreaPhone200ApplicationXMLProvision:
    r"""Provisioning information of the common area phone."""
    
    sip_accounts: Optional[list[GetACommonAreaPhone200ApplicationXMLProvisionSipAccounts]] = dataclasses.field(default=None)
    r"""SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device."""  
    type: Optional[GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum] = dataclasses.field(default=None)
    r"""[Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
    
    * `ztp` : Zero touch provisioning.
    * `assisted`: Assisted provisioning.
    * `manual`: Manual provisioning.
    """  
    url: Optional[str] = dataclasses.field(default=None)
    r"""Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type."""  
    

@dataclasses.dataclass
class GetACommonAreaPhone200ApplicationXMLSite:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the site."""  
    

@dataclasses.dataclass
class GetACommonAreaPhone200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Common Area Phone details returned successfully.
    """
    
    device_type: Optional[str] = dataclasses.field(default=None)
    r"""Type of device (manufacturer name + model name)."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the common area phone."""  
    mac_address: Optional[str] = dataclasses.field(default=None)
    r"""Mac address or serial number."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Display name of the common area phone."""  
    provision: Optional[GetACommonAreaPhone200ApplicationXMLProvision] = dataclasses.field(default=None)
    r"""Provisioning information of the common area phone."""  
    site: Optional[GetACommonAreaPhone200ApplicationXMLSite] = dataclasses.field(default=None)  
    status: Optional[str] = dataclasses.field(default=None)
    r"""Status of the common area phone. It can be either `online` or `offline`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACommonAreaPhone200ApplicationJSONProvisionSipAccounts:
    
    authorization_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorization_id'), 'exclude': lambda f: f is None }})
    r"""Authorization ID of the SIP account provided in the provisioning process."""  
    outbound_proxy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outbound_proxy'), 'exclude': lambda f: f is None }})
    r"""Outbound proxy provided in the provisioning process."""  
    password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""Password entered during the  provisioning process."""  
    sip_domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sip_domain'), 'exclude': lambda f: f is None }})
    r"""SIP Domain provided in the provisioning process.<br>"""  
    user_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_name'), 'exclude': lambda f: f is None }})
    r"""User name of the SIP account provided in the provisioning process."""  
    
class GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum(str, Enum):
    r"""[Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
    
    * `ztp` : Zero touch provisioning.
    * `assisted`: Assisted provisioning.
    * `manual`: Manual provisioning.
    """
    ASSISTED = 'assisted'
    ZTP = 'ztp'
    MANUAL = 'manual'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACommonAreaPhone200ApplicationJSONProvision:
    r"""Provisioning information of the common area phone."""
    
    sip_accounts: Optional[list[GetACommonAreaPhone200ApplicationJSONProvisionSipAccounts]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sip_accounts'), 'exclude': lambda f: f is None }})
    r"""SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device."""  
    type: Optional[GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""[Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
    
    * `ztp` : Zero touch provisioning.
    * `assisted`: Assisted provisioning.
    * `manual`: Manual provisioning.
    """  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACommonAreaPhone200ApplicationJSONSite:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the site."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACommonAreaPhone200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Common Area Phone details returned successfully.
    """
    
    device_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device_type'), 'exclude': lambda f: f is None }})
    r"""Type of device (manufacturer name + model name)."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the common area phone."""  
    mac_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mac_address'), 'exclude': lambda f: f is None }})
    r"""Mac address or serial number."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Display name of the common area phone."""  
    provision: Optional[GetACommonAreaPhone200ApplicationJSONProvision] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provision'), 'exclude': lambda f: f is None }})
    r"""Provisioning information of the common area phone."""  
    site: Optional[GetACommonAreaPhone200ApplicationJSONSite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the common area phone. It can be either `online` or `offline`."""  
    

@dataclasses.dataclass
class GetACommonAreaPhoneResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_a_common_area_phone_200_application_json_object: Optional[GetACommonAreaPhone200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Common Area Phone details returned successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    