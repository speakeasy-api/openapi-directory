/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppliedLicense } from "./appliedlicense";
import { ComputeScheduling } from "./computescheduling";
import { NetworkInterface } from "./networkinterface";
import { Expose, Type } from "class-transformer";

/**
 * The VM Boot Option, as set in the source vm.
 */
export enum ComputeEngineTargetDetailsBootOptionEnum {
  ComputeEngineBootOptionUnspecified = "COMPUTE_ENGINE_BOOT_OPTION_UNSPECIFIED",
  ComputeEngineBootOptionEfi = "COMPUTE_ENGINE_BOOT_OPTION_EFI",
  ComputeEngineBootOptionBios = "COMPUTE_ENGINE_BOOT_OPTION_BIOS",
}

/**
 * The disk type to use in the VM.
 */
export enum ComputeEngineTargetDetailsDiskTypeEnum {
  ComputeEngineDiskTypeUnspecified = "COMPUTE_ENGINE_DISK_TYPE_UNSPECIFIED",
  ComputeEngineDiskTypeStandard = "COMPUTE_ENGINE_DISK_TYPE_STANDARD",
  ComputeEngineDiskTypeSsd = "COMPUTE_ENGINE_DISK_TYPE_SSD",
  ComputeEngineDiskTypeBalanced = "COMPUTE_ENGINE_DISK_TYPE_BALANCED",
}

/**
 * The license type to use in OS adaptation.
 */
export enum ComputeEngineTargetDetailsLicenseTypeEnum {
  ComputeEngineLicenseTypeDefault = "COMPUTE_ENGINE_LICENSE_TYPE_DEFAULT",
  ComputeEngineLicenseTypePayg = "COMPUTE_ENGINE_LICENSE_TYPE_PAYG",
  ComputeEngineLicenseTypeByol = "COMPUTE_ENGINE_LICENSE_TYPE_BYOL",
}

/**
 * ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.
 */
export class ComputeEngineTargetDetails extends SpeakeasyBase {
  /**
   * Additional licenses to assign to the VM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalLicenses" })
  additionalLicenses?: string[];

  /**
   * AppliedLicense holds the license data returned by adaptation module report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appliedLicense" })
  @Type(() => AppliedLicense)
  appliedLicense?: AppliedLicense;

  /**
   * The VM Boot Option, as set in the source vm.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bootOption" })
  bootOption?: ComputeEngineTargetDetailsBootOptionEnum;

  /**
   * Scheduling information for VM on maintenance/restart behaviour and node allocation in sole tenant nodes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "computeScheduling" })
  @Type(() => ComputeScheduling)
  computeScheduling?: ComputeScheduling;

  /**
   * The disk type to use in the VM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "diskType" })
  diskType?: ComputeEngineTargetDetailsDiskTypeEnum;

  /**
   * The hostname to assign to the VM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hostname" })
  hostname?: string;

  /**
   * A map of labels to associate with the VM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * The license type to use in OS adaptation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "licenseType" })
  licenseType?: ComputeEngineTargetDetailsLicenseTypeEnum;

  /**
   * The machine type to create the VM with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machineType" })
  machineType?: string;

  /**
   * The machine type series to create the VM with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machineTypeSeries" })
  machineTypeSeries?: string;

  /**
   * The metadata key/value pairs to assign to the VM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, string>;

  /**
   * List of NICs connected to this VM.
   */
  @SpeakeasyMetadata({ elemType: NetworkInterface })
  @Expose({ name: "networkInterfaces" })
  @Type(() => NetworkInterface)
  networkInterfaces?: NetworkInterface[];

  /**
   * A map of network tags to associate with the VM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "networkTags" })
  networkTags?: string[];

  /**
   * The Google Cloud target project ID or project name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "project" })
  project?: string;

  /**
   * Defines whether the instance has Secure Boot enabled. This can be set to true only if the vm boot option is EFI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secureBoot" })
  secureBoot?: boolean;

  /**
   * The service account to associate the VM with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceAccount" })
  serviceAccount?: string;

  /**
   * The name of the VM to create.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmName" })
  vmName?: string;

  /**
   * The zone in which to create the VM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zone" })
  zone?: string;
}
