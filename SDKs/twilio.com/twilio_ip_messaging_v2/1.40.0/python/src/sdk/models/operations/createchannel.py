"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import channel_enum_channel_type_enum as shared_channel_enum_channel_type_enum
from ..shared import channel_enum_webhook_enabled_type_enum as shared_channel_enum_webhook_enabled_type_enum
from ..shared import ip_messaging_v2_service_channel as shared_ip_messaging_v2_service_channel
from datetime import datetime
from typing import Optional

CREATE_CHANNEL_SERVERS = [
	"https://ip-messaging.twilio.com",
]


@dataclasses.dataclass
class CreateChannelSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateChannelCreateChannelRequest:
    
    attributes: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Attributes' }})  
    created_by: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CreatedBy' }})  
    date_created: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DateCreated' }})  
    date_updated: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DateUpdated' }})  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})  
    type: Optional[shared_channel_enum_channel_type_enum.ChannelEnumChannelTypeEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Type' }})  
    unique_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'UniqueName' }})  
    

@dataclasses.dataclass
class CreateChannelRequest:
    
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})  
    request_body: Optional[CreateChannelCreateChannelRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    x_twilio_webhook_enabled: Optional[shared_channel_enum_webhook_enabled_type_enum.ChannelEnumWebhookEnabledTypeEnum] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Twilio-Webhook-Enabled', 'style': 'simple', 'explode': False }})
    r"""The X-Twilio-Webhook-Enabled HTTP request header"""  
    

@dataclasses.dataclass
class CreateChannelResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    ip_messaging_v2_service_channel: Optional[shared_ip_messaging_v2_service_channel.IPMessagingV2ServiceChannel] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    