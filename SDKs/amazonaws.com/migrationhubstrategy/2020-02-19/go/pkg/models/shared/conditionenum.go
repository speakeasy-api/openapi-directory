// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConditionEnum string

const (
	ConditionEnumEquals      ConditionEnum = "EQUALS"
	ConditionEnumNotEquals   ConditionEnum = "NOT_EQUALS"
	ConditionEnumContains    ConditionEnum = "CONTAINS"
	ConditionEnumNotContains ConditionEnum = "NOT_CONTAINS"
)

func (e ConditionEnum) ToPointer() *ConditionEnum {
	return &e
}

func (e *ConditionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EQUALS":
		fallthrough
	case "NOT_EQUALS":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "NOT_CONTAINS":
		*e = ConditionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConditionEnum: %v", v)
	}
}
