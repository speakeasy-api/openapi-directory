// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ImportaddressRequestBodyContentCryptoCipherparams struct {
	Iv *string `json:"iv,omitempty"`
}

type ImportaddressRequestBodyContentCryptoKdfparams struct {
	Dklen *float64 `json:"dklen,omitempty"`
	N     *float64 `json:"n,omitempty"`
	P     *float64 `json:"p,omitempty"`
	R     *float64 `json:"r,omitempty"`
	Salt  *string  `json:"salt,omitempty"`
}

type ImportaddressRequestBodyContentCrypto struct {
	Cipher       *string                                            `json:"cipher,omitempty"`
	Cipherparams *ImportaddressRequestBodyContentCryptoCipherparams `json:"cipherparams,omitempty"`
	Ciphertext   *string                                            `json:"ciphertext,omitempty"`
	Kdf          *string                                            `json:"kdf,omitempty"`
	Kdfparams    *ImportaddressRequestBodyContentCryptoKdfparams    `json:"kdfparams,omitempty"`
	Mac          *string                                            `json:"mac,omitempty"`
}

type ImportaddressRequestBodyContent struct {
	Address *string                                `json:"address,omitempty"`
	Crypto  *ImportaddressRequestBodyContentCrypto `json:"crypto,omitempty"`
	ID      *string                                `json:"id,omitempty"`
	Version *float64                               `json:"version,omitempty"`
}

type ImportaddressRequestBody struct {
	Content  *ImportaddressRequestBodyContent `json:"content,omitempty"`
	Filename *string                          `json:"filename,omitempty"`
	Password *string                          `json:"password,omitempty"`
}

type Importaddress200ApplicationJSONData struct {
	Address *string `json:"address,omitempty"`
}

// Importaddress200ApplicationJSON - importAddress
type Importaddress200ApplicationJSON struct {
	Data    *Importaddress200ApplicationJSONData `json:"data,omitempty"`
	Message *string                              `json:"message,omitempty"`
	Ok      *bool                                `json:"ok,omitempty"`
	Status  *float64                             `json:"status,omitempty"`
}

type ImportaddressResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// importAddress
	Importaddress200ApplicationJSONObject *Importaddress200ApplicationJSON
}
