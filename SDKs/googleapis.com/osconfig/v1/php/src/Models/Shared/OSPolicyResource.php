<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OSPolicyResource - An OS policy resource is used to define the desired state configuration and provides a specific functionality like installing/removing packages, executing a script etc. The system ensures that resources are always in their desired state by taking necessary actions if they have drifted from their desired state.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OSPolicyResource
{
    /**
     * A resource that allows executing scripts on the VM. The `ExecResource` has 2 stages: `validate` and `enforce` and both stages accept a script as an argument to execute. When the `ExecResource` is applied by the agent, it first executes the script in the `validate` stage. The `validate` stage can signal that the `ExecResource` is already in the desired state by returning an exit code of `100`. If the `ExecResource` is not in the desired state, it should return an exit code of `101`. Any other exit code returned by this stage is considered an error. If the `ExecResource` is not in the desired state based on the exit code from the `validate` stage, the agent proceeds to execute the script from the `enforce` stage. If the `ExecResource` is already in the desired state, the `enforce` stage will not be run. Similar to `validate` stage, the `enforce` stage should return an exit code of `100` to indicate that the resource in now in its desired state. Any other exit code is considered an error. NOTE: An exit code of `100` was chosen over `0` (and `101` vs `1`) to have an explicit indicator of `in desired state`, `not in desired state` and errors. Because, for example, Powershell will always return an exit code of `0` unless an `exit` statement is provided in the script. So, for reasons of consistency and being explicit, exit codes `100` and `101` were chosen.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyResourceExecResource $exec
     */
	#[\JMS\Serializer\Annotation\SerializedName('exec')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OSPolicyResourceExecResource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyResourceExecResource $exec = null;
    
    /**
     * A resource that manages the state of a file.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyResourceFileResource $file
     */
	#[\JMS\Serializer\Annotation\SerializedName('file')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OSPolicyResourceFileResource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyResourceFileResource $file = null;
    
    /**
     * Required. The id of the resource with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the OS policy.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * A resource that manages a system package.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyResourcePackageResource $pkg
     */
	#[\JMS\Serializer\Annotation\SerializedName('pkg')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OSPolicyResourcePackageResource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyResourcePackageResource $pkg = null;
    
    /**
     * A resource that manages a package repository.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyResourceRepositoryResource $repository
     */
	#[\JMS\Serializer\Annotation\SerializedName('repository')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OSPolicyResourceRepositoryResource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyResourceRepositoryResource $repository = null;
    
	public function __construct()
	{
		$this->exec = null;
		$this->file = null;
		$this->id = null;
		$this->pkg = null;
		$this->repository = null;
	}
}
