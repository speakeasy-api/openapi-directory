/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateTransformJobRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BatchStrategy")
    public BatchStrategyEnum batchStrategy;
    public CreateTransformJobRequest withBatchStrategy(BatchStrategyEnum batchStrategy) {
        this.batchStrategy = batchStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataCaptureConfig")
    public BatchDataCaptureConfig dataCaptureConfig;
    public CreateTransformJobRequest withDataCaptureConfig(BatchDataCaptureConfig dataCaptureConfig) {
        this.dataCaptureConfig = dataCaptureConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataProcessing")
    public DataProcessing dataProcessing;
    public CreateTransformJobRequest withDataProcessing(DataProcessing dataProcessing) {
        this.dataProcessing = dataProcessing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Environment")
    public java.util.Map<String, String> environment;
    public CreateTransformJobRequest withEnvironment(java.util.Map<String, String> environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * &lt;p&gt;Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateProcessingJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateTrainingJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateTransformJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExperimentConfig")
    public ExperimentConfig experimentConfig;
    public CreateTransformJobRequest withExperimentConfig(ExperimentConfig experimentConfig) {
        this.experimentConfig = experimentConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxConcurrentTransforms")
    public Long maxConcurrentTransforms;
    public CreateTransformJobRequest withMaxConcurrentTransforms(Long maxConcurrentTransforms) {
        this.maxConcurrentTransforms = maxConcurrentTransforms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxPayloadInMB")
    public Long maxPayloadInMB;
    public CreateTransformJobRequest withMaxPayloadInMB(Long maxPayloadInMB) {
        this.maxPayloadInMB = maxPayloadInMB;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModelClientConfig")
    public ModelClientConfig modelClientConfig;
    public CreateTransformJobRequest withModelClientConfig(ModelClientConfig modelClientConfig) {
        this.modelClientConfig = modelClientConfig;
        return this;
    }
    
    @JsonProperty("ModelName")
    public String modelName;
    public CreateTransformJobRequest withModelName(String modelName) {
        this.modelName = modelName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public CreateTransformJobRequest withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonProperty("TransformInput")
    public TransformInput transformInput;
    public CreateTransformJobRequest withTransformInput(TransformInput transformInput) {
        this.transformInput = transformInput;
        return this;
    }
    
    @JsonProperty("TransformJobName")
    public String transformJobName;
    public CreateTransformJobRequest withTransformJobName(String transformJobName) {
        this.transformJobName = transformJobName;
        return this;
    }
    
    @JsonProperty("TransformOutput")
    public TransformOutput transformOutput;
    public CreateTransformJobRequest withTransformOutput(TransformOutput transformOutput) {
        this.transformOutput = transformOutput;
        return this;
    }
    
    @JsonProperty("TransformResources")
    public TransformResources transformResources;
    public CreateTransformJobRequest withTransformResources(TransformResources transformResources) {
        this.transformResources = transformResources;
        return this;
    }
    
}
