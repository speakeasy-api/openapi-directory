/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Iteration model to be sent over JSON.
 */
export class IterationInput extends SpeakeasyBase {
  /**
   * Gets or sets the name of the iteration.
   */
  @SpeakeasyMetadata({ data: "form, name=name" })
  @Expose({ name: "name" })
  name: string;
}

/**
 * Gets the classification type of the project.
 */
export enum IterationClassificationTypeEnum {
  Multiclass = "Multiclass",
  Multilabel = "Multilabel",
}

export enum IterationExportableToEnum {
  CoreML = "CoreML",
  TensorFlow = "TensorFlow",
  DockerFile = "DockerFile",
  Onnx = "ONNX",
  Vaidk = "VAIDK",
}

/**
 * Gets the training type of the iteration.
 */
export enum IterationTrainingTypeEnum {
  Regular = "Regular",
  Advanced = "Advanced",
}

/**
 * Iteration model to be sent over JSON.
 */
export class Iteration extends SpeakeasyBase {
  /**
   * Gets the classification type of the project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classificationType" })
  classificationType?: IterationClassificationTypeEnum;

  /**
   * Gets the time this iteration was completed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Get or sets a guid of the domain the iteration has been trained on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domainId" })
  domainId?: string;

  /**
   * Whether the iteration can be exported to another format for download.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exportable" })
  exportable?: boolean;

  /**
   * A set of platforms this iteration can export to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exportableTo" })
  exportableTo?: IterationExportableToEnum[];

  /**
   * Gets the id of the iteration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Gets the time this iteration was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModified?: Date;

  /**
   * Gets or sets the name of the iteration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Resource Provider Id this iteration was originally published to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originalPublishResourceId" })
  originalPublishResourceId?: string;

  /**
   * Gets the project id of the iteration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projectId" })
  projectId?: string;

  /**
   * Name of the published model.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publishName" })
  publishName?: string;

  /**
   * Gets the reserved advanced training budget for the iteration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reservedBudgetInHours" })
  reservedBudgetInHours?: number;

  /**
   * Gets the current iteration status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Gets the time this iteration was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trainedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainedAt?: Date;

  /**
   * Gets the training type of the iteration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trainingType" })
  trainingType?: IterationTrainingTypeEnum;
}
