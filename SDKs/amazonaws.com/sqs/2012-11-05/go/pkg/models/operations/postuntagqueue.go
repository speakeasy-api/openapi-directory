// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTUntagQueueActionEnum
type POSTUntagQueueActionEnum string

const (
	POSTUntagQueueActionEnumUntagQueue POSTUntagQueueActionEnum = "UntagQueue"
)

func (e *POSTUntagQueueActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UntagQueue":
		*e = POSTUntagQueueActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTUntagQueueActionEnum: %s", s)
	}
}

// POSTUntagQueueVersionEnum
type POSTUntagQueueVersionEnum string

const (
	POSTUntagQueueVersionEnumTwoThousandAndTwelve1105 POSTUntagQueueVersionEnum = "2012-11-05"
)

func (e *POSTUntagQueueVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-11-05":
		*e = POSTUntagQueueVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTUntagQueueVersionEnum: %s", s)
	}
}

type POSTUntagQueueRequest struct {
	Action            POSTUntagQueueActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                    `request:"mediaType=text/xml"`
	Version           POSTUntagQueueVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTUntagQueueResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
