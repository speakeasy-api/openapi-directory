// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type StartDeploymentPathParams struct {
	//  The unique ID for an Amplify app.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	//  The name for the branch, for the job.
	BranchName string `pathParam:"style=simple,explode=false,name=branchName"`
}

type StartDeploymentHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type StartDeploymentRequestBody struct {
	//  The job ID for this deployment, generated by the create deployment request.
	JobID *string `json:"jobId,omitempty"`
	//  The source URL for this deployment, used when calling start deployment without create deployment. The source URL can be any HTTP GET URL that is publicly accessible and downloads a single .zip file.
	SourceURL *string `json:"sourceUrl,omitempty"`
}

type StartDeploymentRequest struct {
	PathParams StartDeploymentPathParams
	Headers    StartDeploymentHeaders
	Request    StartDeploymentRequestBody `request:"mediaType=application/json"`
}

type StartDeploymentResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// InternalFailureException
	InternalFailureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	// Success
	StartDeploymentResult *shared.StartDeploymentResult
	StatusCode            int
	RawResponse           *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
}
