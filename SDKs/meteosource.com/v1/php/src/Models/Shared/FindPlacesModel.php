<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FindPlacesModel - Successful Response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FindPlacesModel
{
    /**
     * first-level administrative area (a US state, for example)
     * 
     * @var ?string $admArea1
     */
	#[\JMS\Serializer\Annotation\SerializedName('adm_area1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $admArea1 = null;
    
    /**
     * second-level administrative area (a US county, for example)
     * 
     * @var ?string $admArea2
     */
	#[\JMS\Serializer\Annotation\SerializedName('adm_area2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $admArea2 = null;
    
    /**
     * name of the country
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * Latitude of the point, always in the format \<float><N/S>, for example ``23.5S``
     * 
     * @var ?string $lat
     */
	#[\JMS\Serializer\Annotation\SerializedName('lat')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lat = null;
    
    /**
     * Longitude of the point, always in format \<float><E/W>, for example ``23.5W``
     * 
     * @var ?string $lon
     */
	#[\JMS\Serializer\Annotation\SerializedName('lon')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lon = null;
    
    /**
     * name of the place
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * unique identifier of the place, which can be used in /point and /map endpoints
     * 
     * @var ?string $placeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('place_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $placeId = null;
    
    /**
     * Timezone of the point in tzinfo format.
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
    /**
     * The character of the place. May be one of the following values:
     * 
     * 
     * * administrative areas (states, counties, districts...): ``administrative_area``
     * * country: ``country``
     * * a different political entity from a country (for example, a dependent teritory): ``political_entity``
     * * villages, towns and cities: ``settlement``
     * * air industry locations: ``airbase``, ``airfield``, ``heliport``, ``airport``, ``airport_terminal``
     * * places related to water: ``bay``, ``channel``, ``fjord``, ``lake``, ``pond``, ``falls``, ``gulf``,
     *     ``harbor``, ``reservoir``, ``sea``, ``dam``, ``cape``, ``island``, ``peninsula``
     * * places related to mountain areas: ``hill``, ``mountain``, ``peak``, ``valley``, ``volcano``, ``canyon``
     * * other places related to nature: ``park``, ``reserve``, ``resort``, ``desert``
     * * places based on postcodes: ``postcode``
     *         
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->admArea1 = null;
		$this->admArea2 = null;
		$this->country = null;
		$this->lat = null;
		$this->lon = null;
		$this->name = null;
		$this->placeId = null;
		$this->timezone = null;
		$this->type = null;
	}
}
