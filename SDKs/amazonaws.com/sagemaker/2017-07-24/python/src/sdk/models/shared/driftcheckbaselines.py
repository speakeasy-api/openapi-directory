"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import driftcheckbias as shared_driftcheckbias
from ..shared import driftcheckexplainability as shared_driftcheckexplainability
from ..shared import driftcheckmodeldataquality as shared_driftcheckmodeldataquality
from ..shared import driftcheckmodelquality as shared_driftcheckmodelquality
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DriftCheckBaselines:
    r"""Represents the drift check baselines that can be used when the model monitor is set using the model package."""
    
    bias: Optional[shared_driftcheckbias.DriftCheckBias] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Bias'), 'exclude': lambda f: f is None }})  
    explainability: Optional[shared_driftcheckexplainability.DriftCheckExplainability] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Explainability'), 'exclude': lambda f: f is None }})  
    model_data_quality: Optional[shared_driftcheckmodeldataquality.DriftCheckModelDataQuality] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelDataQuality'), 'exclude': lambda f: f is None }})  
    model_quality: Optional[shared_driftcheckmodelquality.DriftCheckModelQuality] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelQuality'), 'exclude': lambda f: f is None }})  
    