// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FileListFromComputeNodePathParams struct {
	// The id of the compute node whose files you want to list.
	NodeID string `pathParam:"style=simple,explode=false,name=nodeId"`
	// The id of the pool that contains the compute node.
	PoolID string `pathParam:"style=simple,explode=false,name=poolId"`
}

type FileListFromComputeNodeQueryParams struct {
	// Sets an OData $filter clause.
	DollarFilter *string `queryParam:"style=form,explode=true,name=$filter"`
	// Client API Version.
	APIVersion string `queryParam:"style=form,explode=true,name=api-version"`
	// Sets the maximum number of items to return in the response.
	Maxresults *int `queryParam:"style=form,explode=true,name=maxresults"`
	// Sets whether to list children of a directory.
	Recursive *bool `queryParam:"style=form,explode=true,name=recursive"`
	// Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
	Timeout *int `queryParam:"style=form,explode=true,name=timeout"`
}

type FileListFromComputeNodeHeaders struct {
	// Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
	ClientRequestID *string `header:"style=simple,explode=false,name=client-request-id"`
	// The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
	OcpDate *string `header:"style=simple,explode=false,name=ocp-date"`
	// Specifies if the server should return the client-request-id identifier in the response.
	ReturnClientRequestID *bool `header:"style=simple,explode=false,name=return-client-request-id"`
}

type FileListFromComputeNodeRequest struct {
	PathParams  FileListFromComputeNodePathParams
	QueryParams FileListFromComputeNodeQueryParams
	Headers     FileListFromComputeNodeHeaders
}

type FileListFromComputeNodeResponse struct {
	// Error from the Batch service
	BatchError         *shared.BatchError
	ContentType        string
	Headers            map[string][]string
	NodeFileListResult *shared.NodeFileListResult
	StatusCode         int
	RawResponse        *http.Response
}
