"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filter as shared_filter
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CompositeFilterLogicOperatorEnum(str, Enum):
    r"""The logic operator of the sub filter."""
    AND = 'AND'
    OR = 'OR'
    NOT = 'NOT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompositeFilter:
    
    logic_operator: Optional[CompositeFilterLogicOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logicOperator'), 'exclude': lambda f: f is None }})
    r"""The logic operator of the sub filter."""  
    sub_filters: Optional[list[shared_filter.Filter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subFilters'), 'exclude': lambda f: f is None }})
    r"""Sub filters."""  
    