// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RuleSetRuleSetTypeEnum string

const (
	RuleSetRuleSetTypeEnumNsxStandard RuleSetRuleSetTypeEnum = "NSX_STANDARD"
	RuleSetRuleSetTypeEnumNsxRedirect RuleSetRuleSetTypeEnum = "NSX_REDIRECT"
	RuleSetRuleSetTypeEnumAwsStandard RuleSetRuleSetTypeEnum = "AWS_STANDARD"
)

func (e *RuleSetRuleSetTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NSX_STANDARD":
		fallthrough
	case "NSX_REDIRECT":
		fallthrough
	case "AWS_STANDARD":
		*e = RuleSetRuleSetTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleSetRuleSetTypeEnum: %s", s)
	}
}

type RuleSet struct {
	Firewall    *Reference              `json:"firewall,omitempty"`
	RuleSetType *RuleSetRuleSetTypeEnum `json:"rule_set_type,omitempty"`
	Rules       []Reference             `json:"rules,omitempty"`
}
