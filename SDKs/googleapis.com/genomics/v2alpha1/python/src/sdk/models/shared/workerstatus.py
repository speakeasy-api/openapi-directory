"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import diskstatus as shared_diskstatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkerStatus:
    r"""The status of the worker VM."""
    
    attached_disks: Optional[dict[str, shared_diskstatus.DiskStatus]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachedDisks'), 'exclude': lambda f: f is None }})
    r"""Status of attached disks."""  
    boot_disk: Optional[shared_diskstatus.DiskStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bootDisk'), 'exclude': lambda f: f is None }})
    r"""The status of a disk on a VM."""  
    free_ram_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freeRamBytes'), 'exclude': lambda f: f is None }})
    r"""Free RAM."""  
    total_ram_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalRamBytes'), 'exclude': lambda f: f is None }})
    r"""Total RAM."""  
    uptime_seconds: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uptimeSeconds'), 'exclude': lambda f: f is None }})
    r"""System uptime."""  
    