/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FrontPortRearPort } from "./frontportrearport";
import { NestedCable } from "./nestedcable";
import { NestedDevice } from "./nesteddevice";
import { Expose, Type } from "class-transformer";

export enum FrontPortTypeLabelEnum {
  EightP8C = "8P8C",
  OneHundredAndTenPunch = "110 Punch",
  Bnc = "BNC",
  Mrj21 = "MRJ21",
  Fc = "FC",
  Lc = "LC",
  LcApc = "LC/APC",
  Lsh = "LSH",
  LshApc = "LSH/APC",
  Mpo = "MPO",
  Mtrj = "MTRJ",
  Sc = "SC",
  ScApc = "SC/APC",
  St = "ST",
}

export enum FrontPortTypeValueEnum {
  Eightp8c = "8p8c",
  OneHundredAndTenPunch = "110-punch",
  Bnc = "bnc",
  Mrj21 = "mrj21",
  Fc = "fc",
  Lc = "lc",
  LcApc = "lc-apc",
  Lsh = "lsh",
  LshApc = "lsh-apc",
  Mpo = "mpo",
  Mtrj = "mtrj",
  Sc = "sc",
  ScApc = "sc-apc",
  St = "st",
}

export class FrontPortType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: FrontPortTypeLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: FrontPortTypeValueEnum;
}

export class FrontPort extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cable" })
  @Type(() => NestedCable)
  cable?: NestedCable;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "device" })
  @Type(() => NestedDevice)
  device: NestedDevice;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rear_port" })
  @Type(() => FrontPortRearPort)
  rearPort: FrontPortRearPort;

  @SpeakeasyMetadata()
  @Expose({ name: "rear_port_position" })
  rearPortPosition?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => FrontPortType)
  type: FrontPortType;
}
