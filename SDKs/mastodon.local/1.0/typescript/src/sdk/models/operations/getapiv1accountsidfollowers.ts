/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetApiV1AccountsIdFollowersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

export class GetApiV1AccountsIdFollowersRequest extends SpeakeasyBase {
  /**
   * The id of the account in the database
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Maximum number of results to return. Defaults to 40.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Internal parameter. Use HTTP `Link` header for pagination.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_id",
  })
  maxId?: string;

  /**
   * Internal parameter. Use HTTP `Link` header for pagination.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=since_id",
  })
  sinceId?: string;
}

export class GetApiV1AccountsIdFollowersResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: shared.Account })
  accounts?: shared.Account[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid or missing Authorization header, or instance is in whitelist mode and your token is not authorized with a user
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
