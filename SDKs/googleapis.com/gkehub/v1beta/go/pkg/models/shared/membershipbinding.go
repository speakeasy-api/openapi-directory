// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// MembershipBinding - MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.
type MembershipBinding struct {
	// Output only. When the membership binding was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. When the membership binding was deleted.
	DeleteTime *string `json:"deleteTime,omitempty"`
	// Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to all Namespaces in this entire Fleet.
	Fleet *bool `json:"fleet,omitempty"`
	// The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
	Name *string `json:"name,omitempty"`
	// A Workspace resource name in the format `projects/*/locations/*/scopes/*`.
	Scope *string `json:"scope,omitempty"`
	// MembershipBindingLifecycleState describes the state of a Binding resource.
	State *MembershipBindingLifecycleState `json:"state,omitempty"`
	// Output only. Google-generated UUID for this resource. This is unique across all membershipbinding resources. If a membershipbinding resource is deleted and another resource with the same name is created, it gets a different uid.
	UID *string `json:"uid,omitempty"`
	// Output only. When the membership binding was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// MembershipBindingInput - MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.
type MembershipBindingInput struct {
	// Whether the membershipbinding is Fleet-wide; true means that this Membership should be bound to all Namespaces in this entire Fleet.
	Fleet *bool `json:"fleet,omitempty"`
	// The resource name for the membershipbinding itself `projects/{project}/locations/{location}/memberships/{membership}/bindings/{membershipbinding}`
	Name *string `json:"name,omitempty"`
	// A Workspace resource name in the format `projects/*/locations/*/scopes/*`.
	Scope *string `json:"scope,omitempty"`
}
