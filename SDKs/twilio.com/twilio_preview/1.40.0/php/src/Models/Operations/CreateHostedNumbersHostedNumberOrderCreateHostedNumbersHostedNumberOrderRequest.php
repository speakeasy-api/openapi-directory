<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateHostedNumbersHostedNumberOrderCreateHostedNumbersHostedNumberOrderRequest
{
    /**
     * This defaults to the AccountSid of the authorization the user is using. This can be provided to specify a subaccount to add the HostedNumberOrder to.
     * 
     * @var ?string $accountSid
     */
	#[SpeakeasyMetadata('form:name=AccountSid')]
    public ?string $accountSid = null;
    
    /**
     * Optional. A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.
     * 
     * @var ?string $addressSid
     */
	#[SpeakeasyMetadata('form:name=AddressSid')]
    public ?string $addressSid = null;
    
    /**
     * Optional. A list of emails that the LOA document for this HostedNumberOrder will be carbon copied to.
     * 
     * @var ?array<string> $ccEmails
     */
	#[SpeakeasyMetadata('form:name=CcEmails')]
    public ?array $ccEmails = null;
    
    /**
     * Optional. Email of the owner of this phone number that is being hosted.
     * 
     * @var ?string $email
     */
	#[SpeakeasyMetadata('form:name=Email')]
    public ?string $email = null;
    
    /**
     * A 64 character string that is a human readable text that describes this resource.
     * 
     * @var ?string $friendlyName
     */
	#[SpeakeasyMetadata('form:name=FriendlyName')]
    public ?string $friendlyName = null;
    
    /**
     * The number to host in [+E.164](https://en.wikipedia.org/wiki/E.164) format
     * 
     * @var string $phoneNumber
     */
	#[SpeakeasyMetadata('form:name=PhoneNumber')]
    public string $phoneNumber;
    
    /**
     * Optional. The 34 character sid of the application Twilio should use to handle SMS messages sent to this number. If a `SmsApplicationSid` is present, Twilio will ignore all of the SMS urls above and use those set on the application.
     * 
     * @var ?string $smsApplicationSid
     */
	#[SpeakeasyMetadata('form:name=SmsApplicationSid')]
    public ?string $smsApplicationSid = null;
    
    /**
     * Used to specify that the SMS capability will be hosted on Twilio's platform.
     * 
     * @var bool $smsCapability
     */
	#[SpeakeasyMetadata('form:name=SmsCapability')]
    public bool $smsCapability;
    
    /**
     * The HTTP method that should be used to request the SmsFallbackUrl. Must be either `GET` or `POST`. This will be copied onto the IncomingPhoneNumber resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateHostedNumbersHostedNumberOrderCreateHostedNumbersHostedNumberOrderRequestSmsFallbackMethodEnum $smsFallbackMethod
     */
	#[SpeakeasyMetadata('form:name=SmsFallbackMethod')]
    public ?CreateHostedNumbersHostedNumberOrderCreateHostedNumbersHostedNumberOrderRequestSmsFallbackMethodEnum $smsFallbackMethod = null;
    
    /**
     * A URL that Twilio will request if an error occurs requesting or executing the TwiML defined by SmsUrl. This will be copied onto the IncomingPhoneNumber resource.
     * 
     * @var ?string $smsFallbackUrl
     */
	#[SpeakeasyMetadata('form:name=SmsFallbackUrl')]
    public ?string $smsFallbackUrl = null;
    
    /**
     * The HTTP method that should be used to request the SmsUrl. Must be either `GET` or `POST`.  This will be copied onto the IncomingPhoneNumber resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateHostedNumbersHostedNumberOrderCreateHostedNumbersHostedNumberOrderRequestSmsMethodEnum $smsMethod
     */
	#[SpeakeasyMetadata('form:name=SmsMethod')]
    public ?CreateHostedNumbersHostedNumberOrderCreateHostedNumbersHostedNumberOrderRequestSmsMethodEnum $smsMethod = null;
    
    /**
     * The URL that Twilio should request when somebody sends an SMS to the phone number. This will be copied onto the IncomingPhoneNumber resource.
     * 
     * @var ?string $smsUrl
     */
	#[SpeakeasyMetadata('form:name=SmsUrl')]
    public ?string $smsUrl = null;
    
    /**
     * Optional. The Status Callback Method attached to the IncomingPhoneNumber resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateHostedNumbersHostedNumberOrderCreateHostedNumbersHostedNumberOrderRequestStatusCallbackMethodEnum $statusCallbackMethod
     */
	#[SpeakeasyMetadata('form:name=StatusCallbackMethod')]
    public ?CreateHostedNumbersHostedNumberOrderCreateHostedNumbersHostedNumberOrderRequestStatusCallbackMethodEnum $statusCallbackMethod = null;
    
    /**
     * Optional. The Status Callback URL attached to the IncomingPhoneNumber resource.
     * 
     * @var ?string $statusCallbackUrl
     */
	#[SpeakeasyMetadata('form:name=StatusCallbackUrl')]
    public ?string $statusCallbackUrl = null;
    
    /**
     * Optional. Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.
     * 
     * @var ?string $uniqueName
     */
	#[SpeakeasyMetadata('form:name=UniqueName')]
    public ?string $uniqueName = null;
    
    /**
     * Optional. The unique sid identifier of the Identity Document that represents the document for verifying ownership of the number to be hosted. Required when VerificationType is phone-bill.
     * 
     * @var ?string $verificationDocumentSid
     */
	#[SpeakeasyMetadata('form:name=VerificationDocumentSid')]
    public ?string $verificationDocumentSid = null;
    
	#[SpeakeasyMetadata('form:name=VerificationType')]
    public ?\OpenAPI\OpenAPI\Models\Shared\HostedNumberOrderEnumVerificationTypeEnum $verificationType = null;
    
	public function __construct()
	{
		$this->accountSid = null;
		$this->addressSid = null;
		$this->ccEmails = null;
		$this->email = null;
		$this->friendlyName = null;
		$this->phoneNumber = "";
		$this->smsApplicationSid = null;
		$this->smsCapability = false;
		$this->smsFallbackMethod = null;
		$this->smsFallbackUrl = null;
		$this->smsMethod = null;
		$this->smsUrl = null;
		$this->statusCallbackMethod = null;
		$this->statusCallbackUrl = null;
		$this->uniqueName = null;
		$this->verificationDocumentSid = null;
		$this->verificationType = null;
	}
}
