"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deploymentalarms as shared_deploymentalarms
from ..shared import deploymentcircuitbreaker as shared_deploymentcircuitbreaker
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeploymentConfiguration:
    r"""Optional deployment parameters that control how many tasks run during a deployment and the ordering of stopping and starting tasks."""
    
    alarms: Optional[shared_deploymentalarms.DeploymentAlarms] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alarms'), 'exclude': lambda f: f is None }})  
    deployment_circuit_breaker: Optional[shared_deploymentcircuitbreaker.DeploymentCircuitBreaker] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deploymentCircuitBreaker'), 'exclude': lambda f: f is None }})  
    maximum_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maximumPercent'), 'exclude': lambda f: f is None }})  
    minimum_healthy_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumHealthyPercent'), 'exclude': lambda f: f is None }})  
    