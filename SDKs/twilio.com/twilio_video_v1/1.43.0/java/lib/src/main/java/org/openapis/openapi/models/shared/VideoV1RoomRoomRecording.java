/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * VideoV1RoomRoomRecording - OK
 */
public class VideoV1RoomRoomRecording {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the RoomRecording resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public VideoV1RoomRoomRecording withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codec")
    public RoomRecordingEnumCodecEnum codec;

    public VideoV1RoomRoomRecording withCodec(RoomRecordingEnumCodecEnum codec) {
        this.codec = codec;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("container_format")
    public RoomRecordingEnumFormatEnum containerFormat;

    public VideoV1RoomRoomRecording withContainerFormat(RoomRecordingEnumFormatEnum containerFormat) {
        this.containerFormat = containerFormat;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public VideoV1RoomRoomRecording withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The duration of the recording rounded to the nearest second. Sub-second duration tracks have a `duration` of 1 second
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;

    public VideoV1RoomRoomRecording withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * A list of SIDs related to the Recording. Includes the `room_sid` and `participant_sid`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grouping_sids")
    public Object groupingSids;

    public VideoV1RoomRoomRecording withGroupingSids(Object groupingSids) {
        this.groupingSids = groupingSids;
        return this;
    }
    
    /**
     * The URLs of related resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public VideoV1RoomRoomRecording withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The URL of the media file associated with the recording when stored externally. See [External S3 Recordings](/docs/video/api/external-s3-recordings) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media_external_location")
    public String mediaExternalLocation;

    public VideoV1RoomRoomRecording withMediaExternalLocation(String mediaExternalLocation) {
        this.mediaExternalLocation = mediaExternalLocation;
        return this;
    }
    
    /**
     * The time in milliseconds elapsed between an arbitrary point in time, common to all group rooms, and the moment when the source room of this track started. This information provides a synchronization mechanism for recordings belonging to the same room.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Long offset;

    public VideoV1RoomRoomRecording withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The SID of the Room resource the recording is associated with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("room_sid")
    public String roomSid;

    public VideoV1RoomRoomRecording withRoomSid(String roomSid) {
        this.roomSid = roomSid;
        return this;
    }
    
    /**
     * The unique string that we created to identify the RoomRecording resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public VideoV1RoomRoomRecording withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * The size of the recorded track in bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;

    public VideoV1RoomRoomRecording withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * The SID of the recording source. For a Room Recording, this value is a `track_sid`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_sid")
    public String sourceSid;

    public VideoV1RoomRoomRecording withSourceSid(String sourceSid) {
        this.sourceSid = sourceSid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public RoomRecordingEnumStatusEnum status;

    public VideoV1RoomRoomRecording withStatus(RoomRecordingEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The name that was given to the source track of the recording. If no name is given, the `source_sid` is used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("track_name")
    public String trackName;

    public VideoV1RoomRoomRecording withTrackName(String trackName) {
        this.trackName = trackName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public RoomRecordingEnumTypeEnum type;

    public VideoV1RoomRoomRecording withType(RoomRecordingEnumTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The absolute URL of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public VideoV1RoomRoomRecording withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public VideoV1RoomRoomRecording(){}
}
