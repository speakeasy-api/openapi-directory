"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import additionalresultattribute as shared_additionalresultattribute
from ..shared import documentattribute as shared_documentattribute
from ..shared import queryresultformat_enum as shared_queryresultformat_enum
from ..shared import queryresulttype_enum as shared_queryresulttype_enum
from ..shared import scoreattributes as shared_scoreattributes
from ..shared import tableexcerpt as shared_tableexcerpt
from ..shared import textwithhighlights as shared_textwithhighlights
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryResultItem:
    r"""<p>A single query result.</p> <p>A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.</p>"""
    
    additional_attributes: Optional[list[shared_additionalresultattribute.AdditionalResultAttribute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalAttributes'), 'exclude': lambda f: f is None }})  
    document_attributes: Optional[list[shared_documentattribute.DocumentAttribute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentAttributes'), 'exclude': lambda f: f is None }})  
    document_excerpt: Optional[shared_textwithhighlights.TextWithHighlights] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentExcerpt'), 'exclude': lambda f: f is None }})  
    document_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentId'), 'exclude': lambda f: f is None }})  
    document_title: Optional[shared_textwithhighlights.TextWithHighlights] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentTitle'), 'exclude': lambda f: f is None }})  
    document_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentURI'), 'exclude': lambda f: f is None }})  
    feedback_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeedbackToken'), 'exclude': lambda f: f is None }})  
    format: Optional[shared_queryresultformat_enum.QueryResultFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Format'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    score_attributes: Optional[shared_scoreattributes.ScoreAttributes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ScoreAttributes'), 'exclude': lambda f: f is None }})  
    table_excerpt: Optional[shared_tableexcerpt.TableExcerpt] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableExcerpt'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_queryresulttype_enum.QueryResultTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    