"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import clarifyshapbaselineconfig as shared_clarifyshapbaselineconfig
from ..shared import clarifytextconfig as shared_clarifytextconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClarifyShapConfig:
    r"""The configuration for SHAP analysis using SageMaker Clarify Explainer."""
    
    shap_baseline_config: shared_clarifyshapbaselineconfig.ClarifyShapBaselineConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShapBaselineConfig') }})  
    number_of_samples: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfSamples'), 'exclude': lambda f: f is None }})  
    seed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Seed'), 'exclude': lambda f: f is None }})  
    text_config: Optional[shared_clarifytextconfig.ClarifyTextConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TextConfig'), 'exclude': lambda f: f is None }})  
    use_logit: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UseLogit'), 'exclude': lambda f: f is None }})  
    