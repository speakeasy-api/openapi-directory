"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import glueschema as shared_glueschema
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AthenaConnectorSource:
    r"""Specifies a connector to an Amazon Athena data source."""
    
    connection_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectionName') }})  
    connection_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectionType') }})  
    connector_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectorName') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    schema_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SchemaName') }})  
    connection_table: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectionTable'), 'exclude': lambda f: f is None }})  
    output_schemas: Optional[list[shared_glueschema.GlueSchema]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputSchemas'), 'exclude': lambda f: f is None }})  
    