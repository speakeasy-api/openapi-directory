"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProvisionNetworkClientsResponse = exports.ProvisionNetworkClientsRequest = exports.ProvisionNetworkClientsRequestBody = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid9 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid8 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid7 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid6 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid5 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid4 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid3 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid2 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid14 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid13 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid12 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid11 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid10 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid1 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid0 = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance = exports.ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyDevicePolicyEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The policy to apply to the specified client. Can be 'Group policy', 'Whitelisted', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.
 */
var ProvisionNetworkClientsRequestBodyDevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyDevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyDevicePolicyEnum["Allowed"] = "Allowed";
    ProvisionNetworkClientsRequestBodyDevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyDevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyDevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyDevicePolicyEnum["PerConnection"] = "Per connection";
    ProvisionNetworkClientsRequestBodyDevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyDevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyDevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyDevicePolicyEnum = {}));
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked' or 'Normal'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum = {}));
/**
 * An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance.prototype, "devicePolicy", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance = ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid0 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid0, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid0() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid0.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid0.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid0;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid0 = ProvisionNetworkClientsRequestBodyPoliciesBySsid0;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid1 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid1, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid1.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid1.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid1;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid1 = ProvisionNetworkClientsRequestBodyPoliciesBySsid1;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid10 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid10, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid10() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid10.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid10.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid10;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid10 = ProvisionNetworkClientsRequestBodyPoliciesBySsid10;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid11 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid11, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid11() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid11.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid11.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid11;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid11 = ProvisionNetworkClientsRequestBodyPoliciesBySsid11;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid12 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid12, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid12() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid12.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid12.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid12;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid12 = ProvisionNetworkClientsRequestBodyPoliciesBySsid12;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid13 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid13, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid13() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid13.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid13.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid13;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid13 = ProvisionNetworkClientsRequestBodyPoliciesBySsid13;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid14 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid14, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid14() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid14.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid14.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid14;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid14 = ProvisionNetworkClientsRequestBodyPoliciesBySsid14;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid2 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid2, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid2.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid2.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid2;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid2 = ProvisionNetworkClientsRequestBodyPoliciesBySsid2;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid3 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid3, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid3.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid3.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid3;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid3 = ProvisionNetworkClientsRequestBodyPoliciesBySsid3;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid4 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid4, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid4() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid4.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid4.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid4;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid4 = ProvisionNetworkClientsRequestBodyPoliciesBySsid4;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid5 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid5, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid5() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid5.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid5.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid5;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid5 = ProvisionNetworkClientsRequestBodyPoliciesBySsid5;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid6 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid6, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid6() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid6.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid6.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid6;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid6 = ProvisionNetworkClientsRequestBodyPoliciesBySsid6;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid7 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid7, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid7() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid7.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid7.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid7;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid7 = ProvisionNetworkClientsRequestBodyPoliciesBySsid7;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid8 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid8, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid8() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid8.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid8.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid8;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid8 = ProvisionNetworkClientsRequestBodyPoliciesBySsid8;
/**
 * The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum;
(function (ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum) {
    ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum["Blocked"] = "Blocked";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum["GroupPolicy"] = "Group policy";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum["Normal"] = "Normal";
    ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum["Whitelisted"] = "Whitelisted";
})(ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum = exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum || (exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum = {}));
/**
 * The number for the SSID
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid9 = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid9, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid9() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid9.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid9.prototype, "groupPolicyId", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid9;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid9 = ProvisionNetworkClientsRequestBodyPoliciesBySsid9;
/**
 * An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy
 */
var ProvisionNetworkClientsRequestBodyPoliciesBySsid = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBodyPoliciesBySsid, _super);
    function ProvisionNetworkClientsRequestBodyPoliciesBySsid() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "0" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid0; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid0)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "zero", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "1" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid1; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid1)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "one", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "10" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid10; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid10)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "ten", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "11" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid11; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid11)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "eleven", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "12" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid12; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid12)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "twelve", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "13" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid13; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid13)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "thirteen", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "14" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid14; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid14)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "fourteen", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "2" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid2; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid2)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "two", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "3" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid3; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid3)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "three", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "4" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid4; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid4)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "four", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "5" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid5; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid5)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "five", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "6" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid6; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid6)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "six", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "7" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid7; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid7)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "seven", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "8" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid8; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid8)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "eight", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "9" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid9; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid9)
    ], ProvisionNetworkClientsRequestBodyPoliciesBySsid.prototype, "nine", void 0);
    return ProvisionNetworkClientsRequestBodyPoliciesBySsid;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBodyPoliciesBySsid = ProvisionNetworkClientsRequestBodyPoliciesBySsid;
var ProvisionNetworkClientsRequestBody = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequestBody, _super);
    function ProvisionNetworkClientsRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicePolicy" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBody.prototype, "devicePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupPolicyId" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBody.prototype, "groupPolicyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mac" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBody.prototype, "mac", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequestBody.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "policiesBySecurityAppliance" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance)
    ], ProvisionNetworkClientsRequestBody.prototype, "policiesBySecurityAppliance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "policiesBySsid" }),
        (0, class_transformer_1.Type)(function () { return ProvisionNetworkClientsRequestBodyPoliciesBySsid; }),
        __metadata("design:type", ProvisionNetworkClientsRequestBodyPoliciesBySsid)
    ], ProvisionNetworkClientsRequestBody.prototype, "policiesBySsid", void 0);
    return ProvisionNetworkClientsRequestBody;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequestBody = ProvisionNetworkClientsRequestBody;
var ProvisionNetworkClientsRequest = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsRequest, _super);
    function ProvisionNetworkClientsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", ProvisionNetworkClientsRequestBody)
    ], ProvisionNetworkClientsRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsRequest.prototype, "networkId", void 0);
    return ProvisionNetworkClientsRequest;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsRequest = ProvisionNetworkClientsRequest;
var ProvisionNetworkClientsResponse = /** @class */ (function (_super) {
    __extends(ProvisionNetworkClientsResponse, _super);
    function ProvisionNetworkClientsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ProvisionNetworkClientsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ProvisionNetworkClientsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ProvisionNetworkClientsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ProvisionNetworkClientsResponse.prototype, "provisionNetworkClients201ApplicationJSONObject", void 0);
    return ProvisionNetworkClientsResponse;
}(utils_1.SpeakeasyBase));
exports.ProvisionNetworkClientsResponse = ProvisionNetworkClientsResponse;
