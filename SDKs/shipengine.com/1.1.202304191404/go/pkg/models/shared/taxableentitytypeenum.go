// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaxableEntityTypeEnum - The taxable entity type for this tax item. Valid values include the following
//
// |Value       |Description
// |:---------  |:-----------------------------------------------------
// |`shipper`   | The shipper is responsible for this tax.
// |`recipient` | The recipient of the shipment is responsible for this tax.
type TaxableEntityTypeEnum string

const (
	TaxableEntityTypeEnumShipper   TaxableEntityTypeEnum = "shipper"
	TaxableEntityTypeEnumRecipient TaxableEntityTypeEnum = "recipient"
)

func (e TaxableEntityTypeEnum) ToPointer() *TaxableEntityTypeEnum {
	return &e
}

func (e *TaxableEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shipper":
		fallthrough
	case "recipient":
		*e = TaxableEntityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaxableEntityTypeEnum: %v", v)
	}
}
