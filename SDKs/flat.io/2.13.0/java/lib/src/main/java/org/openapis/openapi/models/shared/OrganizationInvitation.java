/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrganizationInvitation - Details of an invitation to join an organization
 */
public class OrganizationInvitation {
    /**
     * Enrollment code to use when joining this organization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customCode")
    public String customCode;

    public OrganizationInvitation withCustomCode(String customCode) {
        this.customCode = customCode;
        return this;
    }
    
    /**
     * The email address this invitation was sent to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public OrganizationInvitation withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The invitation unique identifier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public OrganizationInvitation withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The unique identifier of the User who created this invitation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invitedBy")
    public String invitedBy;

    public OrganizationInvitation withInvitedBy(String invitedBy) {
        this.invitedBy = invitedBy;
        return this;
    }
    
    /**
     * The unique identifier of the Organization owning this class
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization")
    public String organization;

    public OrganizationInvitation withOrganization(String organization) {
        this.organization = organization;
        return this;
    }
    
    /**
     * User's Organization Role (for Edu users only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationRole")
    public OrganizationRolesEnum organizationRole;

    public OrganizationInvitation withOrganizationRole(OrganizationRolesEnum organizationRole) {
        this.organizationRole = organizationRole;
        return this;
    }
    
    /**
     * The unique identifier of the User who used this invitation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usedBy")
    public String usedBy;

    public OrganizationInvitation withUsedBy(String usedBy) {
        this.usedBy = usedBy;
        return this;
    }
    
    public OrganizationInvitation(){}
}
