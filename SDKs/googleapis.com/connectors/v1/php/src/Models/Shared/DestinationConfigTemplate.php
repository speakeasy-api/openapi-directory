<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DestinationConfigTemplate - DestinationConfigTemplate defines required destinations supported by the Connector.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DestinationConfigTemplate
{
    /**
     * The default port.
     * 
     * @var ?int $defaultPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $defaultPort = null;
    
    /**
     * Description.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Display name of the parameter.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Whether the current destination tempalate is part of Advanced settings
     * 
     * @var ?bool $isAdvanced
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAdvanced')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAdvanced = null;
    
    /**
     * Key of the destination.
     * 
     * @var ?string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $key = null;
    
    /**
     * The maximum number of destinations supported for this key.
     * 
     * @var ?int $max
     */
	#[\JMS\Serializer\Annotation\SerializedName('max')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $max = null;
    
    /**
     * The minimum number of destinations supported for this key.
     * 
     * @var ?int $min
     */
	#[\JMS\Serializer\Annotation\SerializedName('min')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $min = null;
    
    /**
     * Whether port number should be provided by customers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinationConfigTemplatePortFieldTypeEnum $portFieldType
     */
	#[\JMS\Serializer\Annotation\SerializedName('portFieldType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DestinationConfigTemplatePortFieldTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DestinationConfigTemplatePortFieldTypeEnum $portFieldType = null;
    
    /**
     * Regex pattern for host.
     * 
     * @var ?string $regexPattern
     */
	#[\JMS\Serializer\Annotation\SerializedName('regexPattern')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $regexPattern = null;
    
	public function __construct()
	{
		$this->defaultPort = null;
		$this->description = null;
		$this->displayName = null;
		$this->isAdvanced = null;
		$this->key = null;
		$this->max = null;
		$this->min = null;
		$this->portFieldType = null;
		$this->regexPattern = null;
	}
}
