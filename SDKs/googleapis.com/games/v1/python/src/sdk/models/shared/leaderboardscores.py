"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import leaderboardentry as shared_leaderboardentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LeaderboardScores:
    r"""A ListScores response."""
    
    items: Optional[list[shared_leaderboardentry.LeaderboardEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})
    r"""The scores in the leaderboard."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboardScores`."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""The pagination token for the next page of results."""  
    num_scores: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numScores'), 'exclude': lambda f: f is None }})
    r"""The total number of scores in the leaderboard."""  
    player_score: Optional[shared_leaderboardentry.LeaderboardEntry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('playerScore'), 'exclude': lambda f: f is None }})
    r"""The Leaderboard Entry resource."""  
    prev_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prevPageToken'), 'exclude': lambda f: f is None }})
    r"""The pagination token for the previous page of results."""  
    