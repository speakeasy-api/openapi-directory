// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PrincipalMappingStatusEnum string

const (
	PrincipalMappingStatusEnumFailed     PrincipalMappingStatusEnum = "FAILED"
	PrincipalMappingStatusEnumSucceeded  PrincipalMappingStatusEnum = "SUCCEEDED"
	PrincipalMappingStatusEnumProcessing PrincipalMappingStatusEnum = "PROCESSING"
	PrincipalMappingStatusEnumDeleting   PrincipalMappingStatusEnum = "DELETING"
	PrincipalMappingStatusEnumDeleted    PrincipalMappingStatusEnum = "DELETED"
)

func (e PrincipalMappingStatusEnum) ToPointer() *PrincipalMappingStatusEnum {
	return &e
}

func (e *PrincipalMappingStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = PrincipalMappingStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrincipalMappingStatusEnum: %v", v)
	}
}
