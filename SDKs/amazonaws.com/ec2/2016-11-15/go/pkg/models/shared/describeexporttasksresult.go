// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum - The container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.
type DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum string

const (
	DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnumOva DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum = "ova"
)

func (e DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum) ToPointer() *DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum {
	return &e
}

func (e *DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ova":
		*e = DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum: %v", v)
	}
}

// DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum - The format for the exported image.
type DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum string

const (
	DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnumVmdk DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum = "VMDK"
	DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnumRaw  DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum = "RAW"
	DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnumVhd  DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum = "VHD"
)

func (e DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum) ToPointer() *DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum {
	return &e
}

func (e *DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VMDK":
		fallthrough
	case "RAW":
		fallthrough
	case "VHD":
		*e = DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum: %v", v)
	}
}

// DescribeExportTasksResultExportTasksExportToS3Task - Information about the export task.
type DescribeExportTasksResultExportTasksExportToS3Task struct {
	ContainerFormat *DescribeExportTasksResultExportTasksExportToS3TaskContainerFormatEnum
	DiskImageFormat *DescribeExportTasksResultExportTasksExportToS3TaskDiskImageFormatEnum
	S3Bucket        *string
	S3Key           *string
}

// DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum - The target virtualization environment.
type DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum string

const (
	DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnumCitrix    DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum = "citrix"
	DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnumVmware    DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum = "vmware"
	DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnumMicrosoft DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum = "microsoft"
)

func (e DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum) ToPointer() *DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum {
	return &e
}

func (e *DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "citrix":
		fallthrough
	case "vmware":
		fallthrough
	case "microsoft":
		*e = DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum: %v", v)
	}
}

// DescribeExportTasksResultExportTasksInstanceExportDetails - Information about the instance to export.
type DescribeExportTasksResultExportTasksInstanceExportDetails struct {
	InstanceID        *string
	TargetEnvironment *DescribeExportTasksResultExportTasksInstanceExportDetailsTargetEnvironmentEnum
}

// DescribeExportTasksResultExportTasksStateEnum - The state of the export task.
type DescribeExportTasksResultExportTasksStateEnum string

const (
	DescribeExportTasksResultExportTasksStateEnumActive     DescribeExportTasksResultExportTasksStateEnum = "active"
	DescribeExportTasksResultExportTasksStateEnumCancelling DescribeExportTasksResultExportTasksStateEnum = "cancelling"
	DescribeExportTasksResultExportTasksStateEnumCancelled  DescribeExportTasksResultExportTasksStateEnum = "cancelled"
	DescribeExportTasksResultExportTasksStateEnumCompleted  DescribeExportTasksResultExportTasksStateEnum = "completed"
)

func (e DescribeExportTasksResultExportTasksStateEnum) ToPointer() *DescribeExportTasksResultExportTasksStateEnum {
	return &e
}

func (e *DescribeExportTasksResultExportTasksStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "cancelling":
		fallthrough
	case "cancelled":
		fallthrough
	case "completed":
		*e = DescribeExportTasksResultExportTasksStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeExportTasksResultExportTasksStateEnum: %v", v)
	}
}

// DescribeExportTasksResultExportTasksTags - Describes a tag.
type DescribeExportTasksResultExportTasksTags struct {
	Key   *string
	Value *string
}

// DescribeExportTasksResultExportTasks - Describes an export instance task.
type DescribeExportTasksResultExportTasks struct {
	Description           *string
	ExportTaskID          *string
	ExportToS3Task        *DescribeExportTasksResultExportTasksExportToS3Task
	InstanceExportDetails *DescribeExportTasksResultExportTasksInstanceExportDetails
	State                 *DescribeExportTasksResultExportTasksStateEnum
	StatusMessage         *string
	Tags                  []DescribeExportTasksResultExportTasksTags
}

// DescribeExportTasksResult - Success
type DescribeExportTasksResult struct {
	ExportTasks []DescribeExportTasksResultExportTasks
}
