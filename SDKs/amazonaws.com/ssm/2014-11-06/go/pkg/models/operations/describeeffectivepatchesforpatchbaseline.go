// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeEffectivePatchesForPatchBaselineQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// DescribeEffectivePatchesForPatchBaselineXAmzTargetEnum
type DescribeEffectivePatchesForPatchBaselineXAmzTargetEnum string

const (
	DescribeEffectivePatchesForPatchBaselineXAmzTargetEnumAmazonSsmDescribeEffectivePatchesForPatchBaseline DescribeEffectivePatchesForPatchBaselineXAmzTargetEnum = "AmazonSSM.DescribeEffectivePatchesForPatchBaseline"
)

func (e *DescribeEffectivePatchesForPatchBaselineXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.DescribeEffectivePatchesForPatchBaseline":
		*e = DescribeEffectivePatchesForPatchBaselineXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeEffectivePatchesForPatchBaselineXAmzTargetEnum: %s", s)
	}
}

type DescribeEffectivePatchesForPatchBaselineHeaders struct {
	XAmzAlgorithm     *string                                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeEffectivePatchesForPatchBaselineXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeEffectivePatchesForPatchBaselineRequest struct {
	QueryParams DescribeEffectivePatchesForPatchBaselineQueryParams
	Headers     DescribeEffectivePatchesForPatchBaselineHeaders
	Request     shared.DescribeEffectivePatchesForPatchBaselineRequest `request:"mediaType=application/json"`
}

type DescribeEffectivePatchesForPatchBaselineResponse struct {
	ContentType string
	// Success
	DescribeEffectivePatchesForPatchBaselineResult *shared.DescribeEffectivePatchesForPatchBaselineResult
	// DoesNotExistException
	DoesNotExistException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidResourceId
	InvalidResourceID interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnsupportedOperatingSystem
	UnsupportedOperatingSystem interface{}
}
