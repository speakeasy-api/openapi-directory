"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import application as shared_application
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdateApplicationRequestBodyTypeEnum(str, Enum):
    r"""The Nexmo product or products that you access with this application. Currently `voice` and `messages` application types are supported. You  can't change the type of application."""
    VOICE = 'voice'
    MESSAGES = 'messages'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateApplicationRequestBody:
    
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    r"""You can find your API key in your [account overview](https://dashboard.nexmo.com/account-overview)"""  
    api_secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_secret') }})
    r"""You can find your API secret in your [account overview](https://dashboard.nexmo.com/account-overview)"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of your application."""  
    type: UpdateApplicationRequestBodyTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The Nexmo product or products that you access with this application. Currently `voice` and `messages` application types are supported. You  can't change the type of application."""  
    answer_method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answer_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method used to make the request to `answer_url`. The default value is `GET`."""  
    answer_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answer_url'), 'exclude': lambda f: f is None }})
    r"""The URL where your webhook delivers the Nexmo Call Control Object that governs this call. As soon as your user answers a call Nexmo makes a request to `answer_url`."""  
    event_method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method used to send event information to `event_url`. The default value is POST."""  
    event_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_url'), 'exclude': lambda f: f is None }})
    r"""Nexmo sends event information asynchronously to this URL when status changes."""  
    

@dataclasses.dataclass
class UpdateApplicationRequest:
    
    app_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_id', 'style': 'simple', 'explode': False }})
    r"""The ID allocated to your application by Nexmo."""  
    request_body: Optional[UpdateApplicationRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateApplicationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    application: Optional[shared_application.Application] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    