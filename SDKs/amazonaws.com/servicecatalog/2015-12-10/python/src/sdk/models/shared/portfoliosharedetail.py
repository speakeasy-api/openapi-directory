"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import describeportfoliosharetype_enum as shared_describeportfoliosharetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PortfolioShareDetail:
    r"""Information about the portfolio share."""
    
    accepted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Accepted'), 'exclude': lambda f: f is None }})  
    principal_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrincipalId'), 'exclude': lambda f: f is None }})  
    share_principals: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SharePrincipals'), 'exclude': lambda f: f is None }})  
    share_tag_options: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShareTagOptions'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_describeportfoliosharetype_enum.DescribePortfolioShareTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    