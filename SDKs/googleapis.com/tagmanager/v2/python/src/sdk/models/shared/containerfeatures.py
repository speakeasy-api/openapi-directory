"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContainerFeatures:
    
    support_built_in_variables: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportBuiltInVariables'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports built-in variables"""  
    support_clients: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportClients'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports clients."""  
    support_environments: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportEnvironments'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports environments."""  
    support_folders: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportFolders'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports folders."""  
    support_gtag_configs: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportGtagConfigs'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports Google tag config."""  
    support_tags: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportTags'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports tags."""  
    support_templates: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportTemplates'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports templates."""  
    support_triggers: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportTriggers'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports triggers."""  
    support_user_permissions: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportUserPermissions'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports user permissions managed by GTM."""  
    support_variables: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportVariables'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports variables."""  
    support_versions: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportVersions'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports Container versions."""  
    support_workspaces: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportWorkspaces'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports workspaces."""  
    support_zones: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportZones'), 'exclude': lambda f: f is None }})
    r"""Whether this Container supports zones."""  
    