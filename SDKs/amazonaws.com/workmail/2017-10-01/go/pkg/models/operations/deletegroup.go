// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteGroupXAmzTargetEnum
type DeleteGroupXAmzTargetEnum string

const (
	DeleteGroupXAmzTargetEnumWorkMailServiceDeleteGroup DeleteGroupXAmzTargetEnum = "WorkMailService.DeleteGroup"
)

func (e *DeleteGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkMailService.DeleteGroup":
		*e = DeleteGroupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteGroupXAmzTargetEnum: %s", s)
	}
}

type DeleteGroupHeaders struct {
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteGroupRequest struct {
	Headers DeleteGroupHeaders
	Request shared.DeleteGroupRequest `request:"mediaType=application/json"`
}

type DeleteGroupResponse struct {
	ContentType string
	// Success
	DeleteGroupResponse map[string]interface{}
	// DirectoryServiceAuthenticationFailedException
	DirectoryServiceAuthenticationFailedException interface{}
	// DirectoryUnavailableException
	DirectoryUnavailableException interface{}
	// EntityStateException
	EntityStateException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// OrganizationNotFoundException
	OrganizationNotFoundException interface{}
	// OrganizationStateException
	OrganizationStateException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
