"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import transactiondetail as shared_transactiondetail
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SaveTransactionsResponseData:
    
    server_knowledge: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('server_knowledge') }})
    r"""The knowledge of the server"""  
    transaction_ids: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transaction_ids') }})
    r"""The transaction ids that were saved"""  
    duplicate_import_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duplicate_import_ids'), 'exclude': lambda f: f is None }})
    r"""If multiple transactions were specified, a list of import_ids that were not created because of an existing `import_id` found on the same account"""  
    transaction: Optional[shared_transactiondetail.TransactionDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transaction'), 'exclude': lambda f: f is None }})  
    transactions: Optional[list[shared_transactiondetail.TransactionDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactions'), 'exclude': lambda f: f is None }})
    r"""If multiple transactions were specified, the transactions that were saved"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SaveTransactionsResponse:
    r"""The transactions were successfully updated"""
    
    data: SaveTransactionsResponseData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})  
    