"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DailyStatsNestedJSON:
    r"""All nested JSON of stats"""
    
    interquartile_range: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interquartile_range'), 'exclude': lambda f: f is None }})
    r"""Interquartile range"""  
    mean: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mean'), 'exclude': lambda f: f is None }})
    r"""Mean"""  
    median: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('median'), 'exclude': lambda f: f is None }})
    r"""Median"""  
    population_standard_deviation: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('population_standard_deviation'), 'exclude': lambda f: f is None }})
    r"""population standard deviation"""  
    standard_deviation: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('standard_deviation'), 'exclude': lambda f: f is None }})
    r"""Standard Deviation"""  
    trimmed_mean: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trimmed_mean'), 'exclude': lambda f: f is None }})
    r"""Trimmed Mean"""  
    variance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variance'), 'exclude': lambda f: f is None }})
    r"""variance"""  
    