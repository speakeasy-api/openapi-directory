// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerGameStatsByDateFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerGameStatsByDateFormatEnum string

const (
	ProjectedPlayerGameStatsByDateFormatEnumXML  ProjectedPlayerGameStatsByDateFormatEnum = "XML"
	ProjectedPlayerGameStatsByDateFormatEnumJSON ProjectedPlayerGameStatsByDateFormatEnum = "JSON"
)

func (e ProjectedPlayerGameStatsByDateFormatEnum) ToPointer() *ProjectedPlayerGameStatsByDateFormatEnum {
	return &e
}

func (e *ProjectedPlayerGameStatsByDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = ProjectedPlayerGameStatsByDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerGameStatsByDateFormatEnum: %v", v)
	}
}

type ProjectedPlayerGameStatsByDateRequest struct {
	// The date of the game(s).
	// <br>Examples: <code>2018-FEB-27</code>, <code>2017-DEC-01</code>.
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerGameStatsByDateFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type ProjectedPlayerGameStatsByDateResponse struct {
	ContentType           string
	PlayerGameProjections []shared.PlayerGameProjection
	StatusCode            int
	RawResponse           *http.Response
}
