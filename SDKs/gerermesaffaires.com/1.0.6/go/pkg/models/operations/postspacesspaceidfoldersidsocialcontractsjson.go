// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"net/http"
)

type PostSpacesSpaceIDFoldersIDSocialContractsJSONSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum string

const (
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumCustomer    PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "customer"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumProvider    PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "provider"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumBank        PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "bank"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumCashWoucher PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "cashWoucher"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumFiscal      PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "fiscal"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumInsurance   PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "insurance"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumSocial      PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "social"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumOther       PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "other"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnumPermanent   PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum = "permanent"
)

func (e *PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum: %s", s)
	}
}

type PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2Accounting struct {
	AccountedOn *string                                                                          `json:"AccountedOn,omitempty"`
	Workbook    *PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2AccountingWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth   *string                                                                          `json:"YearMonth,omitempty"`
}

type PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2File struct {
	Content64Encoded *string `json:"Content64Encoded,omitempty"`
	Name             *string `json:"Name,omitempty"`
}

type PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2 struct {
	Accounting        *PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2Accounting `json:"Accounting,omitempty"`
	Author            *string                                                              `json:"Author,omitempty"`
	Code              *string                                                              `json:"Code,omitempty"`
	Comment           *string                                                              `json:"Comment,omitempty"`
	ContractDate      *string                                                              `json:"ContractDate,omitempty"`
	ContractDuration  *string                                                              `json:"ContractDuration,omitempty"`
	ContractualChange *string                                                              `json:"ContractualChange,omitempty"`
	Date              *string                                                              `json:"Date,omitempty"`
	File              PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2File        `json:"File"`
	Position          *string                                                              `json:"Position,omitempty"`
	Title             string                                                               `json:"Title"`
	WageDevelopments  *float32                                                             `json:"WageDevelopments,omitempty"`
}

type PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1 struct {
	ContractDate      *string  `json:"ContractDate,omitempty"`
	ContractDuration  *string  `json:"ContractDuration,omitempty"`
	ContractualChange *string  `json:"ContractualChange,omitempty"`
	DocumentID        string   `json:"DocumentId"`
	Position          *string  `json:"Position,omitempty"`
	WageDevelopments  *float32 `json:"WageDevelopments,omitempty"`
}

type PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONType string

const (
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONTypePostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1 PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONType = "post_/spaces/{spaceId}/folders/{id}/social-contracts_ApplicationJSON_1"
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONTypePostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2 PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONType = "post_/spaces/{spaceId}/folders/{id}/social-contracts_ApplicationJSON_2"
)

type PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON struct {
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1 *PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1
	PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2 *PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2

	Type PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONType
}

func CreatePostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONPostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1(postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1 PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1) PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON {
	typ := PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONTypePostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1

	return PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON{
		PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1: &postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1,
		Type: typ,
	}
}

func CreatePostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONPostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2(postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2 PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2) PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON {
	typ := PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONTypePostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2

	return PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON{
		PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2: &postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2,
		Type: typ,
	}
}

func (u *PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1 := new(PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1); err == nil {
		u.PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1 = postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1
		u.Type = PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONTypePostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1
		return nil
	}

	postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2 := new(PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2); err == nil {
		u.PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2 = postSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2
		u.Type = PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSONTypePostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1 != nil {
		return json.Marshal(u.PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON1)
	}

	if u.PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2 != nil {
		return json.Marshal(u.PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON2)
	}

	return nil, nil
}

type PostSpacesSpaceIDFoldersIDSocialContractsJSONRequest struct {
	// Social contract to add (either DocumentId either (File,Name,Content64Encoded,Title) is mandatory)
	RequestBody PostSpacesSpaceIDFoldersIDSocialContractsApplicationJSON `request:"mediaType=application/json"`
	// Id of the folder employee
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

// PostSpacesSpaceIDFoldersIDSocialContractsJSON201ApplicationJSON - Id of document created
type PostSpacesSpaceIDFoldersIDSocialContractsJSON201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDFoldersIDSocialContractsJSONResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of document created
	PostSpacesSpaceIDFoldersIDSocialContractsJSON201ApplicationJSONObject *PostSpacesSpaceIDFoldersIDSocialContractsJSON201ApplicationJSON
}
