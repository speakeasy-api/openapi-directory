// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RemoveTagsFromCertificateXAmzTargetEnum
type RemoveTagsFromCertificateXAmzTargetEnum string

const (
	RemoveTagsFromCertificateXAmzTargetEnumCertificateManagerRemoveTagsFromCertificate RemoveTagsFromCertificateXAmzTargetEnum = "CertificateManager.RemoveTagsFromCertificate"
)

func (e RemoveTagsFromCertificateXAmzTargetEnum) ToPointer() *RemoveTagsFromCertificateXAmzTargetEnum {
	return &e
}

func (e *RemoveTagsFromCertificateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CertificateManager.RemoveTagsFromCertificate":
		*e = RemoveTagsFromCertificateXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveTagsFromCertificateXAmzTargetEnum: %v", v)
	}
}

type RemoveTagsFromCertificateRequest struct {
	RemoveTagsFromCertificateRequest shared.RemoveTagsFromCertificateRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       RemoveTagsFromCertificateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RemoveTagsFromCertificateResponse struct {
	ContentType string
	// InvalidArnException
	InvalidArnException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidTagException
	InvalidTagException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TagPolicyException
	TagPolicyException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
