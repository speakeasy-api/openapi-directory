// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListCardDisputesStatusInEnum string

const (
	ListCardDisputesStatusInEnumPendingReviewing ListCardDisputesStatusInEnum = "pending_reviewing"
	ListCardDisputesStatusInEnumAccepted         ListCardDisputesStatusInEnum = "accepted"
	ListCardDisputesStatusInEnumRejected         ListCardDisputesStatusInEnum = "rejected"
)

func (e ListCardDisputesStatusInEnum) ToPointer() *ListCardDisputesStatusInEnum {
	return &e
}

func (e *ListCardDisputesStatusInEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending_reviewing":
		fallthrough
	case "accepted":
		fallthrough
	case "rejected":
		*e = ListCardDisputesStatusInEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesStatusInEnum: %v", v)
	}
}

type ListCardDisputesRequest struct {
	CreatedAtAfter      *time.Time                     `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time                     `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time                     `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time                     `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string                        `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64                         `queryParam:"style=form,explode=true,name=limit"`
	StatusIn            []ListCardDisputesStatusInEnum `queryParam:"style=form,explode=true,name=status.in"`
}

type ListCardDisputesDefaultApplicationJSON13StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListCardDisputesDefaultApplicationJSON13StatusEnum = 429
)

func (e ListCardDisputesDefaultApplicationJSON13StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListCardDisputesDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON13TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON13TypeEnumRateLimitedError ListCardDisputesDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListCardDisputesDefaultApplicationJSON13TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListCardDisputesDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON13 struct {
	Detail     string                                             `json:"detail"`
	RetryAfter *int64                                             `json:"retry_after,omitempty"`
	Status     ListCardDisputesDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                             `json:"title"`
	Type       ListCardDisputesDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON12StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON12StatusEnumFourHundredAndThree ListCardDisputesDefaultApplicationJSON12StatusEnum = 403
)

func (e ListCardDisputesDefaultApplicationJSON12StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListCardDisputesDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON12TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON12TypeEnumPrivateFeatureError ListCardDisputesDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListCardDisputesDefaultApplicationJSON12TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListCardDisputesDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON12 struct {
	Detail string                                             `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON11StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON11StatusEnumFourHundredAndFour ListCardDisputesDefaultApplicationJSON11StatusEnum = 404
)

func (e ListCardDisputesDefaultApplicationJSON11StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListCardDisputesDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON11TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON11TypeEnumObjectNotFoundError ListCardDisputesDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListCardDisputesDefaultApplicationJSON11TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListCardDisputesDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON11 struct {
	Detail string                                             `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON10StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON10StatusEnumFourHundred ListCardDisputesDefaultApplicationJSON10StatusEnum = 400
)

func (e ListCardDisputesDefaultApplicationJSON10StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListCardDisputesDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON10TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON10TypeEnumMalformedRequestError ListCardDisputesDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListCardDisputesDefaultApplicationJSON10TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListCardDisputesDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON10 struct {
	Detail string                                             `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON9StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON9StatusEnumFourHundred ListCardDisputesDefaultApplicationJSON9StatusEnum = 400
)

func (e ListCardDisputesDefaultApplicationJSON9StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListCardDisputesDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON9TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON9TypeEnumInvalidParametersError ListCardDisputesDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListCardDisputesDefaultApplicationJSON9TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListCardDisputesDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                          `json:"errors"`
	Status ListCardDisputesDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON8StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON8StatusEnumFourHundredAndNine ListCardDisputesDefaultApplicationJSON8StatusEnum = 409
)

func (e ListCardDisputesDefaultApplicationJSON8StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListCardDisputesDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON8TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON8TypeEnumInvalidOperationError ListCardDisputesDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListCardDisputesDefaultApplicationJSON8TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListCardDisputesDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON8 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON7StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON7StatusEnumFourHundredAndOne ListCardDisputesDefaultApplicationJSON7StatusEnum = 401
)

func (e ListCardDisputesDefaultApplicationJSON7StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListCardDisputesDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON7TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListCardDisputesDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListCardDisputesDefaultApplicationJSON7TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListCardDisputesDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON7 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON6StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON6StatusEnumFiveHundred ListCardDisputesDefaultApplicationJSON6StatusEnum = 500
)

func (e ListCardDisputesDefaultApplicationJSON6StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListCardDisputesDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON6TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON6TypeEnumInternalServerError ListCardDisputesDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListCardDisputesDefaultApplicationJSON6TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListCardDisputesDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON6 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON5StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON5StatusEnumFourHundredAndThree ListCardDisputesDefaultApplicationJSON5StatusEnum = 403
)

func (e ListCardDisputesDefaultApplicationJSON5StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListCardDisputesDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON5TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListCardDisputesDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListCardDisputesDefaultApplicationJSON5TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListCardDisputesDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON5 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON4StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListCardDisputesDefaultApplicationJSON4StatusEnum = 422
)

func (e ListCardDisputesDefaultApplicationJSON4StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListCardDisputesDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON4TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListCardDisputesDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListCardDisputesDefaultApplicationJSON4TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListCardDisputesDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON4 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON3StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON3StatusEnumFourHundredAndNine ListCardDisputesDefaultApplicationJSON3StatusEnum = 409
)

func (e ListCardDisputesDefaultApplicationJSON3StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListCardDisputesDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON3TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListCardDisputesDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListCardDisputesDefaultApplicationJSON3TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListCardDisputesDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON3 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON2StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON2StatusEnumFourHundredAndThree ListCardDisputesDefaultApplicationJSON2StatusEnum = 403
)

func (e ListCardDisputesDefaultApplicationJSON2StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListCardDisputesDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON2TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListCardDisputesDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListCardDisputesDefaultApplicationJSON2TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListCardDisputesDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON2 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON1StatusEnum int64

const (
	ListCardDisputesDefaultApplicationJSON1StatusEnumFourHundredAndFour ListCardDisputesDefaultApplicationJSON1StatusEnum = 404
)

func (e ListCardDisputesDefaultApplicationJSON1StatusEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListCardDisputesDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON1TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListCardDisputesDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListCardDisputesDefaultApplicationJSON1TypeEnum) ToPointer() *ListCardDisputesDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListCardDisputesDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListCardDisputesDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListCardDisputesDefaultApplicationJSON1 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListCardDisputesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Card Dispute List
	CardDisputeList *shared.CardDisputeList
	// Error
	Error interface{}
}
