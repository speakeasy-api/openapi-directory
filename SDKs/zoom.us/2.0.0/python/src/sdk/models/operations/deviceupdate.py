"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeviceUpdateTheH323SIPDeviceObjectEncryptionEnum(str, Enum):
    r"""Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."""
    AUTO = 'auto'
    YES = 'yes'
    NO = 'no'

class DeviceUpdateTheH323SIPDeviceObjectProtocolEnum(str, Enum):
    r"""Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."""
    H_323 = 'H.323'
    SIP = 'SIP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceUpdateTheH323SIPDeviceObject:
    r"""The H.323/SIP device object."""
    
    encryption: DeviceUpdateTheH323SIPDeviceObjectEncryptionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryption') }, 'multipart_form': { 'field_name': 'encryption' }})
    r"""Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."""  
    ip: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip') }, 'multipart_form': { 'field_name': 'ip' }})
    r"""Device IP."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }, 'multipart_form': { 'field_name': 'name' }})
    r"""Device name."""  
    protocol: DeviceUpdateTheH323SIPDeviceObjectProtocolEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol') }, 'multipart_form': { 'field_name': 'protocol' }})
    r"""Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."""  
    

@dataclasses.dataclass
class DeviceUpdateRequest:
    
    device_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'deviceId', 'style': 'simple', 'explode': False }})
    r"""The device ID."""  
    request_body: DeviceUpdateTheH323SIPDeviceObject = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class DeviceUpdateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    