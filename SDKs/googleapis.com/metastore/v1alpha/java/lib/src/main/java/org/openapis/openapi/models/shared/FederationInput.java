/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FederationInput - Represents a federation of multiple backend metastores.
 */
public class FederationInput {
    /**
     * A map from BackendMetastore rank to BackendMetastores from which the federation service serves metadata at query time. The map key represents the order in which BackendMetastores should be evaluated to resolve database names at query time and should be greater than or equal to zero. A BackendMetastore with a lower number will be evaluated before a BackendMetastore with a higher number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backendMetastores")
    public java.util.Map<String, BackendMetastore> backendMetastores;

    public FederationInput withBackendMetastores(java.util.Map<String, BackendMetastore> backendMetastores) {
        this.backendMetastores = backendMetastores;
        return this;
    }
    
    /**
     * User-defined labels for the metastore federation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public FederationInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Immutable. The relative resource name of the federation, of the form: projects/{project_number}/locations/{location_id}/federations/{federation_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public FederationInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Immutable. The Apache Hive metastore version of the federation. All backend metastore versions must be compatible with the federation version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public FederationInput withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public FederationInput(){}
}
