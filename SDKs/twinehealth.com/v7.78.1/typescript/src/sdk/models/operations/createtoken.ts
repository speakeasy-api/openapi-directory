/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CreateTokenSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * List of related resources to include in the response
 */
export enum CreateTokenIncludeEnum {
  Groups = "groups",
  Organization = "organization",
}

export class CreateTokenRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  createTokenRequest: shared.CreateTokenRequest;

  /**
   * List of related resources to include in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include",
  })
  include?: CreateTokenIncludeEnum;
}

export class CreateTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  createOrUpdateErrorResponse?: shared.CreateOrUpdateErrorResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  createTokenResponse?: shared.CreateTokenResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
