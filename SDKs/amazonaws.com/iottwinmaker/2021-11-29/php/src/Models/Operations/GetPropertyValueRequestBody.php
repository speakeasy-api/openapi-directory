<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetPropertyValueRequestBody
{
    /**
     * The name of the component whose property values the operation returns.
     * 
     * @var ?string $componentName
     */
	#[\JMS\Serializer\Annotation\SerializedName('componentName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $componentName = null;
    
    /**
     * The ID of the component type whose property values the operation returns.
     * 
     * @var ?string $componentTypeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('componentTypeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $componentTypeId = null;
    
    /**
     * The ID of the entity whose property values the operation returns.
     * 
     * @var ?string $entityId
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $entityId = null;
    
    /**
     * <p>The maximum number of results to return at one time. The default is 25.</p> <p>Valid Range: Minimum value of 1. Maximum value of 250.</p>
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxResults')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * The string that specifies the next page of results.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     * The property group name.
     * 
     * @var ?string $propertyGroupName
     */
	#[\JMS\Serializer\Annotation\SerializedName('propertyGroupName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $propertyGroupName = null;
    
    /**
     * The properties whose values the operation returns.
     * 
     * @var array<string> $selectedProperties
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectedProperties')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $selectedProperties;
    
    /**
     * The tabular conditions.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetPropertyValueRequestBodyTabularConditions $tabularConditions
     */
	#[\JMS\Serializer\Annotation\SerializedName('tabularConditions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetPropertyValueRequestBodyTabularConditions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetPropertyValueRequestBodyTabularConditions $tabularConditions = null;
    
	public function __construct()
	{
		$this->componentName = null;
		$this->componentTypeId = null;
		$this->entityId = null;
		$this->maxResults = null;
		$this->nextToken = null;
		$this->propertyGroupName = null;
		$this->selectedProperties = [];
		$this->tabularConditions = null;
	}
}
