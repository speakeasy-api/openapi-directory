/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination - Destination of 'custom' type traffic filter
 */
public class UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination {
    /**
     * CIDR format address (e.g."192.168.10.1", which is the same as "192.168.10.1/32"), or "any". Cannot be used in combination with the "vlan" or "fqdn" property
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cidr")
    public String cidr;

    public UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination withCidr(String cidr) {
        this.cidr = cidr;
        return this;
    }
    
    /**
     * FQDN format address. Cannot be used in combination with the "cidr" or "fqdn" property and is currently only available in the "destination" object of the "vpnTrafficUplinkPreference" object. E.g.: "www.google.com"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fqdn")
    public String fqdn;

    public UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination withFqdn(String fqdn) {
        this.fqdn = fqdn;
        return this;
    }
    
    /**
     * Host ID in the VLAN. Should not exceed the VLAN subnet capacity. Must be used along with the "vlan" property and is currently only available under a template network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host")
    public Long host;

    public UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination withHost(Long host) {
        this.host = host;
        return this;
    }
    
    /**
     * Meraki network ID. Currently only available under a template network, and the value should be ID of either same template network, or another template network currently. E.g.: "L_12345678".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * E.g.: "any", "0" (also means "any"), "8080", "1-1024"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public String port;

    public UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination withPort(String port) {
        this.port = port;
        return this;
    }
    
    /**
     * VLAN ID of the configured VLAN in the Meraki network. Cannot be used in combination with the "cidr" or "fqdn" property and is currently only available under a template network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public Long vlan;

    public UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination withVlan(Long vlan) {
        this.vlan = vlan;
        return this;
    }
    
    public UpdateNetworkApplianceTrafficShapingUplinkSelection200ApplicationJSONVpnTrafficUplinkPreferencesTrafficFiltersValueDestination(){}
}
