// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BooksVolumesMybooksListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BooksVolumesMybooksListAcquireMethodEnum string

const (
	BooksVolumesMybooksListAcquireMethodEnumAcquireMethodUndefined BooksVolumesMybooksListAcquireMethodEnum = "ACQUIRE_METHOD_UNDEFINED"
	BooksVolumesMybooksListAcquireMethodEnumFamilyShared           BooksVolumesMybooksListAcquireMethodEnum = "FAMILY_SHARED"
	BooksVolumesMybooksListAcquireMethodEnumPreordered             BooksVolumesMybooksListAcquireMethodEnum = "PREORDERED"
	BooksVolumesMybooksListAcquireMethodEnumPreviouslyRented       BooksVolumesMybooksListAcquireMethodEnum = "PREVIOUSLY_RENTED"
	BooksVolumesMybooksListAcquireMethodEnumPublicDomain           BooksVolumesMybooksListAcquireMethodEnum = "PUBLIC_DOMAIN"
	BooksVolumesMybooksListAcquireMethodEnumPurchased              BooksVolumesMybooksListAcquireMethodEnum = "PURCHASED"
	BooksVolumesMybooksListAcquireMethodEnumRented                 BooksVolumesMybooksListAcquireMethodEnum = "RENTED"
	BooksVolumesMybooksListAcquireMethodEnumSample                 BooksVolumesMybooksListAcquireMethodEnum = "SAMPLE"
	BooksVolumesMybooksListAcquireMethodEnumUploaded               BooksVolumesMybooksListAcquireMethodEnum = "UPLOADED"
)

func (e BooksVolumesMybooksListAcquireMethodEnum) ToPointer() *BooksVolumesMybooksListAcquireMethodEnum {
	return &e
}

func (e *BooksVolumesMybooksListAcquireMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACQUIRE_METHOD_UNDEFINED":
		fallthrough
	case "FAMILY_SHARED":
		fallthrough
	case "PREORDERED":
		fallthrough
	case "PREVIOUSLY_RENTED":
		fallthrough
	case "PUBLIC_DOMAIN":
		fallthrough
	case "PURCHASED":
		fallthrough
	case "RENTED":
		fallthrough
	case "SAMPLE":
		fallthrough
	case "UPLOADED":
		*e = BooksVolumesMybooksListAcquireMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BooksVolumesMybooksListAcquireMethodEnum: %v", v)
	}
}

type BooksVolumesMybooksListProcessingStateEnum string

const (
	BooksVolumesMybooksListProcessingStateEnumProcessingStateUndefined BooksVolumesMybooksListProcessingStateEnum = "PROCESSING_STATE_UNDEFINED"
	BooksVolumesMybooksListProcessingStateEnumCompletedFailed          BooksVolumesMybooksListProcessingStateEnum = "COMPLETED_FAILED"
	BooksVolumesMybooksListProcessingStateEnumCompletedSuccess         BooksVolumesMybooksListProcessingStateEnum = "COMPLETED_SUCCESS"
	BooksVolumesMybooksListProcessingStateEnumRunning                  BooksVolumesMybooksListProcessingStateEnum = "RUNNING"
)

func (e BooksVolumesMybooksListProcessingStateEnum) ToPointer() *BooksVolumesMybooksListProcessingStateEnum {
	return &e
}

func (e *BooksVolumesMybooksListProcessingStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROCESSING_STATE_UNDEFINED":
		fallthrough
	case "COMPLETED_FAILED":
		fallthrough
	case "COMPLETED_SUCCESS":
		fallthrough
	case "RUNNING":
		*e = BooksVolumesMybooksListProcessingStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BooksVolumesMybooksListProcessingStateEnum: %v", v)
	}
}

type BooksVolumesMybooksListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// How the book was acquired
	AcquireMethod []BooksVolumesMybooksListAcquireMethodEnum `queryParam:"style=form,explode=true,name=acquireMethod"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// ISO-3166-1 code to override the IP-based location.
	Country *string `queryParam:"style=form,explode=true,name=country"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
	// Maximum number of results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.
	ProcessingState []BooksVolumesMybooksListProcessingStateEnum `queryParam:"style=form,explode=true,name=processingState"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// String to identify the originator of this request.
	Source *string `queryParam:"style=form,explode=true,name=source"`
	// Index of the first result to return (starts at 0)
	StartIndex *int64 `queryParam:"style=form,explode=true,name=startIndex"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type BooksVolumesMybooksListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	Volumes *shared.Volumes
}
