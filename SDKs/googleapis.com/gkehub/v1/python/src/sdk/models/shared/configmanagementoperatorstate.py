"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configmanagementinstallerror as shared_configmanagementinstallerror
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ConfigManagementOperatorStateDeploymentStateEnum(str, Enum):
    r"""The state of the Operator's deployment"""
    DEPLOYMENT_STATE_UNSPECIFIED = 'DEPLOYMENT_STATE_UNSPECIFIED'
    NOT_INSTALLED = 'NOT_INSTALLED'
    INSTALLED = 'INSTALLED'
    ERROR = 'ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfigManagementOperatorState:
    r"""State information for an ACM's Operator"""
    
    deployment_state: Optional[ConfigManagementOperatorStateDeploymentStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deploymentState'), 'exclude': lambda f: f is None }})
    r"""The state of the Operator's deployment"""  
    errors: Optional[list[shared_configmanagementinstallerror.ConfigManagementInstallError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""Install errors."""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""The semenatic version number of the operator"""  
    