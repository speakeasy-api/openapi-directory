// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetAddonEnum string

const (
	GetAddonEnumContinent        GetAddonEnum = "continent"
	GetAddonEnumCountry          GetAddonEnum = "country"
	GetAddonEnumRegion           GetAddonEnum = "region"
	GetAddonEnumCity             GetAddonEnum = "city"
	GetAddonEnumGeotargeting     GetAddonEnum = "geotargeting"
	GetAddonEnumCountryGroupings GetAddonEnum = "country_groupings"
	GetAddonEnumTimeZoneInfo     GetAddonEnum = "time_zone_info"
)

func (e *GetAddonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "continent":
		fallthrough
	case "country":
		fallthrough
	case "region":
		fallthrough
	case "city":
		fallthrough
	case "geotargeting":
		fallthrough
	case "country_groupings":
		fallthrough
	case "time_zone_info":
		*e = GetAddonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAddonEnum: %s", s)
	}
}

// GetFormatEnum - Format of the response message.
type GetFormatEnum string

const (
	GetFormatEnumJSON GetFormatEnum = "json"
	GetFormatEnumXML  GetFormatEnum = "xml"
)

func (e *GetFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		*e = GetFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFormatEnum: %s", s)
	}
}

// GetLangEnum - Translation information. The translation only applicable for continent, country, region and city name for the addon package.
type GetLangEnum string

const (
	GetLangEnumAr   GetLangEnum = "ar"
	GetLangEnumCs   GetLangEnum = "cs"
	GetLangEnumDa   GetLangEnum = "da"
	GetLangEnumDe   GetLangEnum = "de"
	GetLangEnumEn   GetLangEnum = "en"
	GetLangEnumEs   GetLangEnum = "es"
	GetLangEnumEt   GetLangEnum = "et"
	GetLangEnumFi   GetLangEnum = "fi"
	GetLangEnumFr   GetLangEnum = "fr"
	GetLangEnumGa   GetLangEnum = "ga"
	GetLangEnumIt   GetLangEnum = "it"
	GetLangEnumJa   GetLangEnum = "ja"
	GetLangEnumKo   GetLangEnum = "ko"
	GetLangEnumMs   GetLangEnum = "ms"
	GetLangEnumNl   GetLangEnum = "nl"
	GetLangEnumPt   GetLangEnum = "pt"
	GetLangEnumRu   GetLangEnum = "ru"
	GetLangEnumSv   GetLangEnum = "sv"
	GetLangEnumTr   GetLangEnum = "tr"
	GetLangEnumVi   GetLangEnum = "vi"
	GetLangEnumZhCn GetLangEnum = "zh-cn"
	GetLangEnumZhTw GetLangEnum = "zh-tw"
)

func (e *GetLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ar":
		fallthrough
	case "cs":
		fallthrough
	case "da":
		fallthrough
	case "de":
		fallthrough
	case "en":
		fallthrough
	case "es":
		fallthrough
	case "et":
		fallthrough
	case "fi":
		fallthrough
	case "fr":
		fallthrough
	case "ga":
		fallthrough
	case "it":
		fallthrough
	case "ja":
		fallthrough
	case "ko":
		fallthrough
	case "ms":
		fallthrough
	case "nl":
		fallthrough
	case "pt":
		fallthrough
	case "ru":
		fallthrough
	case "sv":
		fallthrough
	case "tr":
		fallthrough
	case "vi":
		fallthrough
	case "zh-cn":
		fallthrough
	case "zh-tw":
		*e = GetLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLangEnum: %s", s)
	}
}

// GetPackageEnum - Web service package of different granularity of return information.
type GetPackageEnum string

const (
	GetPackageEnumWs1  GetPackageEnum = "WS1"
	GetPackageEnumWs2  GetPackageEnum = "WS2"
	GetPackageEnumWs3  GetPackageEnum = "WS3"
	GetPackageEnumWs4  GetPackageEnum = "WS4"
	GetPackageEnumWs5  GetPackageEnum = "WS5"
	GetPackageEnumWs6  GetPackageEnum = "WS6"
	GetPackageEnumWs7  GetPackageEnum = "WS7"
	GetPackageEnumWs8  GetPackageEnum = "WS8"
	GetPackageEnumWs9  GetPackageEnum = "WS9"
	GetPackageEnumWs10 GetPackageEnum = "WS10"
	GetPackageEnumWs11 GetPackageEnum = "WS11"
	GetPackageEnumWs12 GetPackageEnum = "WS12"
	GetPackageEnumWs13 GetPackageEnum = "WS13"
	GetPackageEnumWs14 GetPackageEnum = "WS14"
	GetPackageEnumWs15 GetPackageEnum = "WS15"
	GetPackageEnumWs16 GetPackageEnum = "WS16"
	GetPackageEnumWs17 GetPackageEnum = "WS17"
	GetPackageEnumWs18 GetPackageEnum = "WS18"
	GetPackageEnumWs19 GetPackageEnum = "WS19"
	GetPackageEnumWs20 GetPackageEnum = "WS20"
	GetPackageEnumWs21 GetPackageEnum = "WS21"
	GetPackageEnumWs22 GetPackageEnum = "WS22"
	GetPackageEnumWs23 GetPackageEnum = "WS23"
	GetPackageEnumWs24 GetPackageEnum = "WS24"
	GetPackageEnumWs25 GetPackageEnum = "WS25"
)

func (e *GetPackageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WS1":
		fallthrough
	case "WS2":
		fallthrough
	case "WS3":
		fallthrough
	case "WS4":
		fallthrough
	case "WS5":
		fallthrough
	case "WS6":
		fallthrough
	case "WS7":
		fallthrough
	case "WS8":
		fallthrough
	case "WS9":
		fallthrough
	case "WS10":
		fallthrough
	case "WS11":
		fallthrough
	case "WS12":
		fallthrough
	case "WS13":
		fallthrough
	case "WS14":
		fallthrough
	case "WS15":
		fallthrough
	case "WS16":
		fallthrough
	case "WS17":
		fallthrough
	case "WS18":
		fallthrough
	case "WS19":
		fallthrough
	case "WS20":
		fallthrough
	case "WS21":
		fallthrough
	case "WS22":
		fallthrough
	case "WS23":
		fallthrough
	case "WS24":
		fallthrough
	case "WS25":
		*e = GetPackageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPackageEnum: %s", s)
	}
}

type GetQueryParams struct {
	// Extra information in addition to the above selected package.
	Addon []GetAddonEnum `queryParam:"style=form,explode=false,name=addon"`
	// Format of the response message.
	Format *GetFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// IP address (IPv4 or IPv6) for reverse IP location lookup purpose. If not present, the server IP address will be used for the location lookup.
	IP string `queryParam:"style=form,explode=true,name=ip"`
	// API Key. Please sign up free trial license key at ip2location.com
	Key string `queryParam:"style=form,explode=true,name=key"`
	// Translation information. The translation only applicable for continent, country, region and city name for the addon package.
	Lang *GetLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// Web service package of different granularity of return information.
	Package *GetPackageEnum `queryParam:"style=form,explode=true,name=package"`
}

type GetRequest struct {
	QueryParams GetQueryParams
}

type GetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Get response from IP lookup
	Get200ApplicationJSONString *string
}
