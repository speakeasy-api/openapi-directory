/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { S3Location } from "./s3location";
import { ScriptTypeEnum } from "./scripttypeenum";
import { Server } from "./server";
import { UserData } from "./userdata";
import { Expose, Type } from "class-transformer";

/**
 * Launch configuration for a server.
 */
export class ServerLaunchConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "associatePublicIpAddress" })
  associatePublicIpAddress?: boolean;

  /**
   * Location of an Amazon S3 object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configureScript" })
  @Type(() => S3Location)
  configureScript?: S3Location;

  @SpeakeasyMetadata()
  @Expose({ name: "configureScriptType" })
  configureScriptType?: ScriptTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ec2KeyName" })
  ec2KeyName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iamInstanceProfileName" })
  iamInstanceProfileName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceType" })
  instanceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logicalId" })
  logicalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "securityGroup" })
  securityGroup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "server" })
  @Type(() => Server)
  server?: Server;

  @SpeakeasyMetadata()
  @Expose({ name: "subnet" })
  subnet?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userData" })
  @Type(() => UserData)
  userData?: UserData;

  @SpeakeasyMetadata()
  @Expose({ name: "vpc" })
  vpc?: string;
}
