/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderAddress } from "./orderaddress";
import { OrderPickupDetailsCollector } from "./orderpickupdetailscollector";
import { Expose, Type } from "class-transformer";

export class OrderPickupDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => OrderAddress)
  address?: OrderAddress;

  /**
   * Collectors authorized to pick up shipment from the pickup location.
   */
  @SpeakeasyMetadata({ elemType: OrderPickupDetailsCollector })
  @Expose({ name: "collectors" })
  @Type(() => OrderPickupDetailsCollector)
  collectors?: OrderPickupDetailsCollector[];

  /**
   * ID of the pickup location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationId" })
  locationId?: string;

  /**
   * The pickup type of this order. Acceptable values are: - "`merchantStore`" - "`merchantStoreCurbside`" - "`merchantStoreLocker`" - "`thirdPartyPickupPoint`" - "`thirdPartyLocker`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupType" })
  pickupType?: string;
}
