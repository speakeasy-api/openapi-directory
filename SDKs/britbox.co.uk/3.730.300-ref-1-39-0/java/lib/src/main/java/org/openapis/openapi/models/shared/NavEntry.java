/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NavEntry {
    /**
     * Child nav entries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("children")
    public NavEntry[] children;

    public NavEntry withChildren(NavEntry[] children) {
        this.children = children;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public NavContent content;

    public NavEntry withContent(NavContent content) {
        this.content = content;
        return this;
    }
    
    /**
     * A map of custom fields defined by a curator for a nav entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public java.util.Map<String, Object> customFields;

    public NavEntry withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * The depth of the NavEntry (top level is 0)
     */
    @JsonProperty("depth")
    public Integer depth;

    public NavEntry withDepth(Integer depth) {
        this.depth = depth;
        return this;
    }
    
    /**
     * True if this is a featured menu item.
     * 
     * Featured menu items may have a more prominent presentation than others in the navigation.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("featured")
    public Boolean featured;

    public NavEntry withFeatured(Boolean featured) {
        this.featured = featured;
        return this;
    }
    
    /**
     * The icon for this nav entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon")
    public String icon;

    public NavEntry withIcon(String icon) {
        this.icon = icon;
        return this;
    }
    
    /**
     * The text label for this nav entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;

    public NavEntry withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * The path this nav entry links to.
     * May be undefined if the nav entry is not clickable e.g. a nav heading.
     * If the value begins with `http` then it's an external url.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public NavEntry withPath(String path) {
        this.path = path;
        return this;
    }
    
    public NavEntry(@JsonProperty("depth") Integer depth) {
        this.depth = depth;
  }
}
