// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAssociateVpcCidrBlockActionEnum
type GETAssociateVpcCidrBlockActionEnum string

const (
	GETAssociateVpcCidrBlockActionEnumAssociateVpcCidrBlock GETAssociateVpcCidrBlockActionEnum = "AssociateVpcCidrBlock"
)

func (e GETAssociateVpcCidrBlockActionEnum) ToPointer() *GETAssociateVpcCidrBlockActionEnum {
	return &e
}

func (e *GETAssociateVpcCidrBlockActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AssociateVpcCidrBlock":
		*e = GETAssociateVpcCidrBlockActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateVpcCidrBlockActionEnum: %v", v)
	}
}

// GETAssociateVpcCidrBlockVersionEnum
type GETAssociateVpcCidrBlockVersionEnum string

const (
	GETAssociateVpcCidrBlockVersionEnumTwoThousandAndSixteen1115 GETAssociateVpcCidrBlockVersionEnum = "2016-11-15"
)

func (e GETAssociateVpcCidrBlockVersionEnum) ToPointer() *GETAssociateVpcCidrBlockVersionEnum {
	return &e
}

func (e *GETAssociateVpcCidrBlockVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETAssociateVpcCidrBlockVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateVpcCidrBlockVersionEnum: %v", v)
	}
}

type GETAssociateVpcCidrBlockRequest struct {
	Action GETAssociateVpcCidrBlockActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IPv6 addresses, or the size of the CIDR block.
	AmazonProvidedIpv6CidrBlock *bool `queryParam:"style=form,explode=true,name=AmazonProvidedIpv6CidrBlock"`
	// An IPv4 CIDR block to associate with the VPC.
	CidrBlock *string `queryParam:"style=form,explode=true,name=CidrBlock"`
	// Associate a CIDR allocated from an IPv4 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.
	Ipv4IpamPoolID *string `queryParam:"style=form,explode=true,name=Ipv4IpamPoolId"`
	// The netmask length of the IPv4 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.
	Ipv4NetmaskLength *int64 `queryParam:"style=form,explode=true,name=Ipv4NetmaskLength"`
	// <p>An IPv6 CIDR block from the IPv6 address pool. You must also specify <code>Ipv6Pool</code> in the request.</p> <p>To let Amazon choose the IPv6 CIDR block for you, omit this parameter.</p>
	Ipv6CidrBlock *string `queryParam:"style=form,explode=true,name=Ipv6CidrBlock"`
	// <p>The name of the location from which we advertise the IPV6 CIDR block. Use this parameter to limit the CIDR block to this location.</p> <p> You must set <code>AmazonProvidedIpv6CidrBlock</code> to <code>true</code> to use this parameter.</p> <p> You can have one IPv6 CIDR block association per network border group.</p>
	Ipv6CidrBlockNetworkBorderGroup *string `queryParam:"style=form,explode=true,name=Ipv6CidrBlockNetworkBorderGroup"`
	// Associates a CIDR allocated from an IPv6 IPAM pool to a VPC. For more information about Amazon VPC IP Address Manager (IPAM), see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.
	Ipv6IpamPoolID *string `queryParam:"style=form,explode=true,name=Ipv6IpamPoolId"`
	// The netmask length of the IPv6 CIDR you would like to associate from an Amazon VPC IP Address Manager (IPAM) pool. For more information about IPAM, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html">What is IPAM?</a> in the <i>Amazon VPC IPAM User Guide</i>.
	Ipv6NetmaskLength *int64 `queryParam:"style=form,explode=true,name=Ipv6NetmaskLength"`
	// The ID of an IPv6 address pool from which to allocate the IPv6 CIDR block.
	Ipv6Pool *string                             `queryParam:"style=form,explode=true,name=Ipv6Pool"`
	Version  GETAssociateVpcCidrBlockVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the VPC.
	VpcID             string  `queryParam:"style=form,explode=true,name=VpcId"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAssociateVpcCidrBlockResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
