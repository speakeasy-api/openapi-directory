// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum
type UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum string

const (
	UpdateApprovalRuleTemplateDescriptionXAmzTargetEnumCodeCommit20150413UpdateApprovalRuleTemplateDescription UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum = "CodeCommit_20150413.UpdateApprovalRuleTemplateDescription"
)

func (e UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum) ToPointer() *UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum {
	return &e
}

func (e *UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeCommit_20150413.UpdateApprovalRuleTemplateDescription":
		*e = UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum: %v", v)
	}
}

type UpdateApprovalRuleTemplateDescriptionRequest struct {
	UpdateApprovalRuleTemplateDescriptionInput shared.UpdateApprovalRuleTemplateDescriptionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                              *string                                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                          *string                                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                             *string                                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                   *string                                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                          *string                                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                              *string                                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                          *string                                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                 UpdateApprovalRuleTemplateDescriptionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateApprovalRuleTemplateDescriptionResponse struct {
	// ApprovalRuleTemplateDoesNotExistException
	ApprovalRuleTemplateDoesNotExistException interface{}
	// ApprovalRuleTemplateNameRequiredException
	ApprovalRuleTemplateNameRequiredException interface{}
	ContentType                               string
	// InvalidApprovalRuleTemplateDescriptionException
	InvalidApprovalRuleTemplateDescriptionException interface{}
	// InvalidApprovalRuleTemplateNameException
	InvalidApprovalRuleTemplateNameException interface{}
	StatusCode                               int
	RawResponse                              *http.Response
	// Success
	UpdateApprovalRuleTemplateDescriptionOutput *shared.UpdateApprovalRuleTemplateDescriptionOutput
}
