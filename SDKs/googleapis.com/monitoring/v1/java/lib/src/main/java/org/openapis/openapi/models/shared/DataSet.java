/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DataSet - Groups a time series query definition with charting options.
 */
public class DataSet {
    /**
     * A template string for naming TimeSeries in the resulting data set. This should be a string with interpolations of the form ${label_name}, which will resolve to the label's value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legendTemplate")
    public String legendTemplate;
    public DataSet withLegendTemplate(String legendTemplate) {
        this.legendTemplate = legendTemplate;
        return this;
    }
    
    /**
     * Optional. The lower bound on data point frequency for this data set, implemented by specifying the minimum alignment period to use in a time series query For example, if the data is published once every 10 minutes, the min_alignment_period should be at least 10 minutes. It would not make sense to fetch and align data at one minute intervals.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minAlignmentPeriod")
    public String minAlignmentPeriod;
    public DataSet withMinAlignmentPeriod(String minAlignmentPeriod) {
        this.minAlignmentPeriod = minAlignmentPeriod;
        return this;
    }
    
    /**
     * How this data should be plotted on the chart.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plotType")
    public DataSetPlotTypeEnum plotType;
    public DataSet withPlotType(DataSetPlotTypeEnum plotType) {
        this.plotType = plotType;
        return this;
    }
    
    /**
     * Optional. The target axis to use for plotting the metric.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetAxis")
    public DataSetTargetAxisEnum targetAxis;
    public DataSet withTargetAxis(DataSetTargetAxisEnum targetAxis) {
        this.targetAxis = targetAxis;
        return this;
    }
    
    /**
     * TimeSeriesQuery collects the set of supported methods for querying time series data from the Stackdriver metrics API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeSeriesQuery")
    public TimeSeriesQuery timeSeriesQuery;
    public DataSet withTimeSeriesQuery(TimeSeriesQuery timeSeriesQuery) {
        this.timeSeriesQuery = timeSeriesQuery;
        return this;
    }
    
}
