// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ManagedCredentialsStatusEnum string

const (
	ManagedCredentialsStatusEnumEnabledOnCreate                   ManagedCredentialsStatusEnum = "ENABLED_ON_CREATE"
	ManagedCredentialsStatusEnumEnabledByOwner                    ManagedCredentialsStatusEnum = "ENABLED_BY_OWNER"
	ManagedCredentialsStatusEnumDisabledByDefault                 ManagedCredentialsStatusEnum = "DISABLED_BY_DEFAULT"
	ManagedCredentialsStatusEnumDisabledByOwner                   ManagedCredentialsStatusEnum = "DISABLED_BY_OWNER"
	ManagedCredentialsStatusEnumDisabledByCollaborator            ManagedCredentialsStatusEnum = "DISABLED_BY_COLLABORATOR"
	ManagedCredentialsStatusEnumPendingRemovalByCollaborator      ManagedCredentialsStatusEnum = "PENDING_REMOVAL_BY_COLLABORATOR"
	ManagedCredentialsStatusEnumPendingStartRemovalByCollaborator ManagedCredentialsStatusEnum = "PENDING_START_REMOVAL_BY_COLLABORATOR"
	ManagedCredentialsStatusEnumPendingRemovalByOwner             ManagedCredentialsStatusEnum = "PENDING_REMOVAL_BY_OWNER"
	ManagedCredentialsStatusEnumPendingStartRemovalByOwner        ManagedCredentialsStatusEnum = "PENDING_START_REMOVAL_BY_OWNER"
	ManagedCredentialsStatusEnumFailedRemovalByCollaborator       ManagedCredentialsStatusEnum = "FAILED_REMOVAL_BY_COLLABORATOR"
	ManagedCredentialsStatusEnumFailedRemovalByOwner              ManagedCredentialsStatusEnum = "FAILED_REMOVAL_BY_OWNER"
)

func (e *ManagedCredentialsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED_ON_CREATE":
		fallthrough
	case "ENABLED_BY_OWNER":
		fallthrough
	case "DISABLED_BY_DEFAULT":
		fallthrough
	case "DISABLED_BY_OWNER":
		fallthrough
	case "DISABLED_BY_COLLABORATOR":
		fallthrough
	case "PENDING_REMOVAL_BY_COLLABORATOR":
		fallthrough
	case "PENDING_START_REMOVAL_BY_COLLABORATOR":
		fallthrough
	case "PENDING_REMOVAL_BY_OWNER":
		fallthrough
	case "PENDING_START_REMOVAL_BY_OWNER":
		fallthrough
	case "FAILED_REMOVAL_BY_COLLABORATOR":
		fallthrough
	case "FAILED_REMOVAL_BY_OWNER":
		*e = ManagedCredentialsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ManagedCredentialsStatusEnum: %s", s)
	}
}
