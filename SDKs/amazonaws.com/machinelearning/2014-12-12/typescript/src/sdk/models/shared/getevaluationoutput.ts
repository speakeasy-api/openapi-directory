/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntityStatusEnum } from "./entitystatusenum";
import { PerformanceMetrics } from "./performancemetrics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents the output of a <code>GetEvaluation</code> operation and describes an <code>Evaluation</code>.
 */
export class GetEvaluationOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ComputeTime" })
  computeTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedByIamUser" })
  createdByIamUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationDataSourceId" })
  evaluationDataSourceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationId" })
  evaluationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FinishedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  finishedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataLocationS3" })
  inputDataLocationS3?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LogUri" })
  logUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MLModelId" })
  mlModelId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PerformanceMetrics" })
  @Type(() => PerformanceMetrics)
  performanceMetrics?: PerformanceMetrics;

  @SpeakeasyMetadata()
  @Expose({ name: "StartedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: EntityStatusEnum;
}
