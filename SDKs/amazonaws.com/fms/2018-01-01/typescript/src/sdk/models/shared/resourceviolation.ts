/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AwsEc2InstanceViolation } from "./awsec2instanceviolation";
import { AwsEc2NetworkInterfaceViolation } from "./awsec2networkinterfaceviolation";
import { AwsVPCSecurityGroupViolation } from "./awsvpcsecuritygroupviolation";
import { DnsDuplicateRuleGroupViolation } from "./dnsduplicaterulegroupviolation";
import { DnsRuleGroupLimitExceededViolation } from "./dnsrulegrouplimitexceededviolation";
import { DnsRuleGroupPriorityConflictViolation } from "./dnsrulegrouppriorityconflictviolation";
import { FirewallSubnetIsOutOfScopeViolation } from "./firewallsubnetisoutofscopeviolation";
import { FirewallSubnetMissingVPCEndpointViolation } from "./firewallsubnetmissingvpcendpointviolation";
import { NetworkFirewallBlackHoleRouteDetectedViolation } from "./networkfirewallblackholeroutedetectedviolation";
import { NetworkFirewallInternetTrafficNotInspectedViolation } from "./networkfirewallinternettrafficnotinspectedviolation";
import { NetworkFirewallInvalidRouteConfigurationViolation } from "./networkfirewallinvalidrouteconfigurationviolation";
import { NetworkFirewallMissingExpectedRoutesViolation } from "./networkfirewallmissingexpectedroutesviolation";
import { NetworkFirewallMissingExpectedRTViolation } from "./networkfirewallmissingexpectedrtviolation";
import { NetworkFirewallMissingFirewallViolation } from "./networkfirewallmissingfirewallviolation";
import { NetworkFirewallMissingSubnetViolation } from "./networkfirewallmissingsubnetviolation";
import { NetworkFirewallPolicyModifiedViolation } from "./networkfirewallpolicymodifiedviolation";
import { NetworkFirewallUnexpectedFirewallRoutesViolation } from "./networkfirewallunexpectedfirewallroutesviolation";
import { NetworkFirewallUnexpectedGatewayRoutesViolation } from "./networkfirewallunexpectedgatewayroutesviolation";
import { PossibleRemediationActions } from "./possibleremediationactions";
import { RouteHasOutOfScopeEndpointViolation } from "./routehasoutofscopeendpointviolation";
import { ThirdPartyFirewallMissingExpectedRouteTableViolation } from "./thirdpartyfirewallmissingexpectedroutetableviolation";
import { ThirdPartyFirewallMissingFirewallViolation } from "./thirdpartyfirewallmissingfirewallviolation";
import { ThirdPartyFirewallMissingSubnetViolation } from "./thirdpartyfirewallmissingsubnetviolation";
import { Expose, Type } from "class-transformer";

/**
 * Violation detail based on resource type.
 */
export class ResourceViolation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AwsEc2InstanceViolation" })
  @Type(() => AwsEc2InstanceViolation)
  awsEc2InstanceViolation?: AwsEc2InstanceViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "AwsEc2NetworkInterfaceViolation" })
  @Type(() => AwsEc2NetworkInterfaceViolation)
  awsEc2NetworkInterfaceViolation?: AwsEc2NetworkInterfaceViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "AwsVPCSecurityGroupViolation" })
  @Type(() => AwsVPCSecurityGroupViolation)
  awsVPCSecurityGroupViolation?: AwsVPCSecurityGroupViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "DnsDuplicateRuleGroupViolation" })
  @Type(() => DnsDuplicateRuleGroupViolation)
  dnsDuplicateRuleGroupViolation?: DnsDuplicateRuleGroupViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "DnsRuleGroupLimitExceededViolation" })
  @Type(() => DnsRuleGroupLimitExceededViolation)
  dnsRuleGroupLimitExceededViolation?: DnsRuleGroupLimitExceededViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "DnsRuleGroupPriorityConflictViolation" })
  @Type(() => DnsRuleGroupPriorityConflictViolation)
  dnsRuleGroupPriorityConflictViolation?: DnsRuleGroupPriorityConflictViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "FirewallSubnetIsOutOfScopeViolation" })
  @Type(() => FirewallSubnetIsOutOfScopeViolation)
  firewallSubnetIsOutOfScopeViolation?: FirewallSubnetIsOutOfScopeViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "FirewallSubnetMissingVPCEndpointViolation" })
  @Type(() => FirewallSubnetMissingVPCEndpointViolation)
  firewallSubnetMissingVPCEndpointViolation?: FirewallSubnetMissingVPCEndpointViolation;

  /**
   * Violation detail for an internet gateway route with an inactive state in the customer subnet route table or Network Firewall subnet route table.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallBlackHoleRouteDetectedViolation" })
  @Type(() => NetworkFirewallBlackHoleRouteDetectedViolation)
  networkFirewallBlackHoleRouteDetectedViolation?: NetworkFirewallBlackHoleRouteDetectedViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallInternetTrafficNotInspectedViolation" })
  @Type(() => NetworkFirewallInternetTrafficNotInspectedViolation)
  networkFirewallInternetTrafficNotInspectedViolation?: NetworkFirewallInternetTrafficNotInspectedViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallInvalidRouteConfigurationViolation" })
  @Type(() => NetworkFirewallInvalidRouteConfigurationViolation)
  networkFirewallInvalidRouteConfigurationViolation?: NetworkFirewallInvalidRouteConfigurationViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallMissingExpectedRTViolation" })
  @Type(() => NetworkFirewallMissingExpectedRTViolation)
  networkFirewallMissingExpectedRTViolation?: NetworkFirewallMissingExpectedRTViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallMissingExpectedRoutesViolation" })
  @Type(() => NetworkFirewallMissingExpectedRoutesViolation)
  networkFirewallMissingExpectedRoutesViolation?: NetworkFirewallMissingExpectedRoutesViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallMissingFirewallViolation" })
  @Type(() => NetworkFirewallMissingFirewallViolation)
  networkFirewallMissingFirewallViolation?: NetworkFirewallMissingFirewallViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallMissingSubnetViolation" })
  @Type(() => NetworkFirewallMissingSubnetViolation)
  networkFirewallMissingSubnetViolation?: NetworkFirewallMissingSubnetViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallPolicyModifiedViolation" })
  @Type(() => NetworkFirewallPolicyModifiedViolation)
  networkFirewallPolicyModifiedViolation?: NetworkFirewallPolicyModifiedViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallUnexpectedFirewallRoutesViolation" })
  @Type(() => NetworkFirewallUnexpectedFirewallRoutesViolation)
  networkFirewallUnexpectedFirewallRoutesViolation?: NetworkFirewallUnexpectedFirewallRoutesViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkFirewallUnexpectedGatewayRoutesViolation" })
  @Type(() => NetworkFirewallUnexpectedGatewayRoutesViolation)
  networkFirewallUnexpectedGatewayRoutesViolation?: NetworkFirewallUnexpectedGatewayRoutesViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "PossibleRemediationActions" })
  @Type(() => PossibleRemediationActions)
  possibleRemediationActions?: PossibleRemediationActions;

  @SpeakeasyMetadata()
  @Expose({ name: "RouteHasOutOfScopeEndpointViolation" })
  @Type(() => RouteHasOutOfScopeEndpointViolation)
  routeHasOutOfScopeEndpointViolation?: RouteHasOutOfScopeEndpointViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "ThirdPartyFirewallMissingExpectedRouteTableViolation" })
  @Type(() => ThirdPartyFirewallMissingExpectedRouteTableViolation)
  thirdPartyFirewallMissingExpectedRouteTableViolation?: ThirdPartyFirewallMissingExpectedRouteTableViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "ThirdPartyFirewallMissingFirewallViolation" })
  @Type(() => ThirdPartyFirewallMissingFirewallViolation)
  thirdPartyFirewallMissingFirewallViolation?: ThirdPartyFirewallMissingFirewallViolation;

  @SpeakeasyMetadata()
  @Expose({ name: "ThirdPartyFirewallMissingSubnetViolation" })
  @Type(() => ThirdPartyFirewallMissingSubnetViolation)
  thirdPartyFirewallMissingSubnetViolation?: ThirdPartyFirewallMissingSubnetViolation;
}
