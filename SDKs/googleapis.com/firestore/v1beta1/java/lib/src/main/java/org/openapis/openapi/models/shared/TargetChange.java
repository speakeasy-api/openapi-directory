/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TargetChange - Targets being watched have changed.
 */
public class TargetChange {
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cause")
    public Status cause;

    public TargetChange withCause(Status cause) {
        this.cause = cause;
        return this;
    }
    
    /**
     * The consistent `read_time` for the given `target_ids` (omitted when the target_ids are not at a consistent snapshot). The stream is guaranteed to send a `read_time` with `target_ids` empty whenever the entire stream reaches a new consistent snapshot. ADD, CURRENT, and RESET messages are guaranteed to (eventually) result in a new consistent snapshot (while NO_CHANGE and REMOVE messages are not). For a given stream, `read_time` is guaranteed to be monotonically increasing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readTime")
    public String readTime;

    public TargetChange withReadTime(String readTime) {
        this.readTime = readTime;
        return this;
    }
    
    /**
     * A token that can be used to resume the stream for the given `target_ids`, or all targets if `target_ids` is empty. Not set on every target change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resumeToken")
    public String resumeToken;

    public TargetChange withResumeToken(String resumeToken) {
        this.resumeToken = resumeToken;
        return this;
    }
    
    /**
     * The type of change that occurred.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetChangeType")
    public TargetChangeTargetChangeTypeEnum targetChangeType;

    public TargetChange withTargetChangeType(TargetChangeTargetChangeTypeEnum targetChangeType) {
        this.targetChangeType = targetChangeType;
        return this;
    }
    
    /**
     * The target IDs of targets that have changed. If empty, the change applies to all targets. The order of the target IDs is not defined.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetIds")
    public Integer[] targetIds;

    public TargetChange withTargetIds(Integer[] targetIds) {
        this.targetIds = targetIds;
        return this;
    }
    
    public TargetChange(){}
}
