"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import customroutingdestinationdescription as shared_customroutingdestinationdescription
from ..shared import customroutingendpointdescription as shared_customroutingendpointdescription
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomRoutingEndpointGroup:
    r"""A complex type for the endpoint group for a custom routing accelerator. An Amazon Web Services Region can have only one endpoint group for a specific listener."""
    
    destination_descriptions: Optional[list[shared_customroutingdestinationdescription.CustomRoutingDestinationDescription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DestinationDescriptions'), 'exclude': lambda f: f is None }})  
    endpoint_descriptions: Optional[list[shared_customroutingendpointdescription.CustomRoutingEndpointDescription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointDescriptions'), 'exclude': lambda f: f is None }})  
    endpoint_group_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointGroupArn'), 'exclude': lambda f: f is None }})  
    endpoint_group_region: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointGroupRegion'), 'exclude': lambda f: f is None }})  
    