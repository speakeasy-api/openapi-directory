/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomAttribute } from "./customattribute";
import { Price } from "./price";
import { Expose, Type } from "class-transformer";

/**
 * Regional inventory resource. contains the regional name and all attributes which are overridden for the specified region.
 */
export class RegionalInventory extends SpeakeasyBase {
  /**
   * The availability of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availability" })
  availability?: string;

  /**
   * A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form.
   */
  @SpeakeasyMetadata({ elemType: CustomAttribute })
  @Expose({ name: "customAttributes" })
  @Type(() => CustomAttribute)
  customAttributes?: CustomAttribute[];

  /**
   * Identifies what kind of resource this is. Value: the fixed string "`content#regionalInventory`".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  @Type(() => Price)
  price?: Price;

  /**
   * The ID uniquely identifying each region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "regionId" })
  regionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "salePrice" })
  @Type(() => Price)
  salePrice?: Price;

  /**
   * A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "salePriceEffectiveDate" })
  salePriceEffectiveDate?: string;
}
