<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NamespaceFilter - A complex type that identifies the namespaces that you want to list. You can choose to list public or private namespaces.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NamespaceFilter
{
	#[\JMS\Serializer\Annotation\SerializedName('Condition')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FilterConditionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FilterConditionEnum $condition = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NamespaceFilterNameEnum>')]
    public NamespaceFilterNameEnum $name;
    
    /**
     * $values
     * 
     * @var array<string> $values
     */
	#[\JMS\Serializer\Annotation\SerializedName('Values')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $values;
    
	public function __construct()
	{
		$this->condition = null;
		$this->name = \OpenAPI\OpenAPI\Models\Shared\NamespaceFilterNameEnum::TYPE;
		$this->values = [];
	}
}
