// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PlanDataTypeOfPlanBasedOnTheSourceEnum string

const (
	PlanDataTypeOfPlanBasedOnTheSourceEnumStarter         PlanDataTypeOfPlanBasedOnTheSourceEnum = "STARTER"
	PlanDataTypeOfPlanBasedOnTheSourceEnumSfdc1MEdition   PlanDataTypeOfPlanBasedOnTheSourceEnum = "SFDC_1M_EDITION"
	PlanDataTypeOfPlanBasedOnTheSourceEnumBronze          PlanDataTypeOfPlanBasedOnTheSourceEnum = "BRONZE"
	PlanDataTypeOfPlanBasedOnTheSourceEnumSilver          PlanDataTypeOfPlanBasedOnTheSourceEnum = "SILVER"
	PlanDataTypeOfPlanBasedOnTheSourceEnumGold            PlanDataTypeOfPlanBasedOnTheSourceEnum = "GOLD"
	PlanDataTypeOfPlanBasedOnTheSourceEnumDatasetDownload PlanDataTypeOfPlanBasedOnTheSourceEnum = "DATASET_DOWNLOAD"
)

func (e PlanDataTypeOfPlanBasedOnTheSourceEnum) ToPointer() *PlanDataTypeOfPlanBasedOnTheSourceEnum {
	return &e
}

func (e *PlanDataTypeOfPlanBasedOnTheSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STARTER":
		fallthrough
	case "SFDC_1M_EDITION":
		fallthrough
	case "BRONZE":
		fallthrough
	case "SILVER":
		fallthrough
	case "GOLD":
		fallthrough
	case "DATASET_DOWNLOAD":
		*e = PlanDataTypeOfPlanBasedOnTheSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlanDataTypeOfPlanBasedOnTheSourceEnum: %v", v)
	}
}

type PlanDataServiceThatProvisionedThePlanEnum string

const (
	PlanDataServiceThatProvisionedThePlanEnumSalesforce           PlanDataServiceThatProvisionedThePlanEnum = "SALESFORCE"
	PlanDataServiceThatProvisionedThePlanEnumHeroku               PlanDataServiceThatProvisionedThePlanEnum = "HEROKU"
	PlanDataServiceThatProvisionedThePlanEnumSfAutoProvision      PlanDataServiceThatProvisionedThePlanEnum = "SF_AUTO_PROVISION"
	PlanDataServiceThatProvisionedThePlanEnumSfAutoProvisionBound PlanDataServiceThatProvisionedThePlanEnum = "SF_AUTO_PROVISION_BOUND"
)

func (e PlanDataServiceThatProvisionedThePlanEnum) ToPointer() *PlanDataServiceThatProvisionedThePlanEnum {
	return &e
}

func (e *PlanDataServiceThatProvisionedThePlanEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SALESFORCE":
		fallthrough
	case "HEROKU":
		fallthrough
	case "SF_AUTO_PROVISION":
		fallthrough
	case "SF_AUTO_PROVISION_BOUND":
		*e = PlanDataServiceThatProvisionedThePlanEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlanDataServiceThatProvisionedThePlanEnum: %v", v)
	}
}

type PlanData struct {
	Amount *int                                       `json:"amount,omitempty"`
	Plan   *PlanDataTypeOfPlanBasedOnTheSourceEnum    `json:"plan,omitempty"`
	Source *PlanDataServiceThatProvisionedThePlanEnum `json:"source,omitempty"`
}
