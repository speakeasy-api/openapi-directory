// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// DeleteOrganizationXAmzTargetEnum
type DeleteOrganizationXAmzTargetEnum string

const (
	DeleteOrganizationXAmzTargetEnumAwsOrganizationsV20161128DeleteOrganization DeleteOrganizationXAmzTargetEnum = "AWSOrganizationsV20161128.DeleteOrganization"
)

func (e DeleteOrganizationXAmzTargetEnum) ToPointer() *DeleteOrganizationXAmzTargetEnum {
	return &e
}

func (e *DeleteOrganizationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSOrganizationsV20161128.DeleteOrganization":
		*e = DeleteOrganizationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteOrganizationXAmzTargetEnum: %v", v)
	}
}

type DeleteOrganizationRequest struct {
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteOrganizationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteOrganizationResponse struct {
	// AWSOrganizationsNotInUseException
	AWSOrganizationsNotInUseException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidInputException
	InvalidInputException interface{}
	// OrganizationNotEmptyException
	OrganizationNotEmptyException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
