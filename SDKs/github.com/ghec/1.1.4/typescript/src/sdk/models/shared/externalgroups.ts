/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ExternalGroupsGroups extends SpeakeasyBase {
  /**
   * The internal ID of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId: number;

  /**
   * The display name of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_name" })
  groupName: string;

  /**
   * The time of the last update for this group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;
}

/**
 * A list of external groups available to be connected to a team
 */
export class ExternalGroups extends SpeakeasyBase {
  /**
   * An array of external groups available to be mapped to a team
   */
  @SpeakeasyMetadata({ elemType: ExternalGroupsGroups })
  @Expose({ name: "groups" })
  @Type(() => ExternalGroupsGroups)
  groups?: ExternalGroupsGroups[];
}
