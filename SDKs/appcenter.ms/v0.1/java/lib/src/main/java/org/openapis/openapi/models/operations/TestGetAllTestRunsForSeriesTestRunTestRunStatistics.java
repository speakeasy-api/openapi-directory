/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TestGetAllTestRunsForSeriesTestRunTestRunStatistics - Summary single test run on Xamarin Test Cloud
 */
public class TestGetAllTestRunsForSeriesTestRunTestRunStatistics {
    /**
     * Number of devices running the test
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("devices")
    public Double devices;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withDevices(Double devices) {
        this.devices = devices;
        return this;
    }
    
    /**
     * Number of failed devices
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("devicesFailed")
    public Double devicesFailed;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withDevicesFailed(Double devicesFailed) {
        this.devicesFailed = devicesFailed;
        return this;
    }
    
    /**
     * Number of finished devices
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("devicesFinished")
    public Double devicesFinished;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withDevicesFinished(Double devicesFinished) {
        this.devicesFinished = devicesFinished;
        return this;
    }
    
    /**
     * Number of failed tests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failed")
    public Double failed;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withFailed(Double failed) {
        this.failed = failed;
        return this;
    }
    
    /**
     * Number of passed tests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passed")
    public Double passed;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withPassed(Double passed) {
        this.passed = passed;
        return this;
    }
    
    /**
     * The max amount of MB used during the test run
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("peakMemory")
    public Double peakMemory;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withPeakMemory(Double peakMemory) {
        this.peakMemory = peakMemory;
        return this;
    }
    
    /**
     * Number of skipped tests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skipped")
    public Double skipped;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withSkipped(Double skipped) {
        this.skipped = skipped;
        return this;
    }
    
    /**
     * Number of tests in total
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    /**
     * The number of minutes of device time the test has been runnign
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalDeviceMinutes")
    public Double totalDeviceMinutes;
    public TestGetAllTestRunsForSeriesTestRunTestRunStatistics withTotalDeviceMinutes(Double totalDeviceMinutes) {
        this.totalDeviceMinutes = totalDeviceMinutes;
        return this;
    }
    
}
