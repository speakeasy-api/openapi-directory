/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetPullrequestsForCommitRequest extends SpeakeasyBase {
  /**
   * The SHA1 of the commit
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=commit",
  })
  commit: string;

  /**
   * Which page to retrieve
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * How many pull requests to retrieve per page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pagelen",
  })
  pagelen?: number;

  /**
   * The repository; either the UUID in curly braces, or the slug
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo_slug",
  })
  repoSlug: string;

  /**
   * This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=workspace",
  })
  workspace: string;
}

export class GetPullrequestsForCommitResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Either the repository does not exist, or pull request commit links have not yet been indexed.
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * The paginated list of pull requests.
   */
  @SpeakeasyMetadata()
  paginatedPullrequests?: shared.PaginatedPullrequests;
}
