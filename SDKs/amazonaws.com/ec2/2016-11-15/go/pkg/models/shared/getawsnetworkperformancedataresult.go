// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum - The metric used for the network performance request. Only <code>aggregate-latency</code> is supported, which shows network latency during a specified period.
type GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum string

const (
	GetAwsNetworkPerformanceDataResultDataResponsesMetricEnumAggregateLatency GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum = "aggregate-latency"
)

func (e GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum) ToPointer() *GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum {
	return &e
}

func (e *GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aggregate-latency":
		*e = GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum: %v", v)
	}
}

// GetAwsNetworkPerformanceDataResultDataResponsesMetricPoints - Indicates whether the network was healthy or degraded at a particular point. The value is aggregated from the <code>startDate</code> to the <code>endDate</code>. Currently only <code>five_minutes</code> is supported.
type GetAwsNetworkPerformanceDataResultDataResponsesMetricPoints struct {
	EndDate   *time.Time
	StartDate *time.Time
	Status    *string
	Value     *float32
}

// GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum - The period used for the network performance request.
type GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum string

const (
	GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnumFiveMinutes    GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum = "five-minutes"
	GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnumFifteenMinutes GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum = "fifteen-minutes"
	GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnumOneHour        GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum = "one-hour"
	GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnumThreeHours     GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum = "three-hours"
	GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnumOneDay         GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum = "one-day"
	GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnumOneWeek        GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum = "one-week"
)

func (e GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum) ToPointer() *GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum {
	return &e
}

func (e *GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "five-minutes":
		fallthrough
	case "fifteen-minutes":
		fallthrough
	case "one-hour":
		fallthrough
	case "three-hours":
		fallthrough
	case "one-day":
		fallthrough
	case "one-week":
		*e = GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum: %v", v)
	}
}

// GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum - The statistic used for the network performance request.
type GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum string

const (
	GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnumP50 GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum = "p50"
)

func (e GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum) ToPointer() *GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum {
	return &e
}

func (e *GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "p50":
		*e = GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum: %v", v)
	}
}

// GetAwsNetworkPerformanceDataResultDataResponses - The response to a <code>DataQuery</code>.
type GetAwsNetworkPerformanceDataResultDataResponses struct {
	Destination  *string
	ID           *string
	Metric       *GetAwsNetworkPerformanceDataResultDataResponsesMetricEnum
	MetricPoints []GetAwsNetworkPerformanceDataResultDataResponsesMetricPoints
	Period       *GetAwsNetworkPerformanceDataResultDataResponsesPeriodEnum
	Source       *string
	Statistic    *GetAwsNetworkPerformanceDataResultDataResponsesStatisticEnum
}

// GetAwsNetworkPerformanceDataResult - Success
type GetAwsNetworkPerformanceDataResult struct {
	DataResponses []GetAwsNetworkPerformanceDataResultDataResponses
	NextToken     *string
}
