/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * PostFormFieldSets - Create Form Field Set
 */
public class PostFormFieldSets {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form_fields")
    @SpeakeasyMetadata("form:name=form_fields,json multipartForm:name=form_fields,json")
    public PostFormFieldSetsFormFields[] formFields;

    public PostFormFieldSets withFormFields(PostFormFieldSetsFormFields[] formFields) {
        this.formFields = formFields;
        return this;
    }
    
    /**
     * Skip validating company
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skip_company")
    @SpeakeasyMetadata("form:name=skip_company multipartForm:name=skip_company")
    public Boolean skipCompany;

    public PostFormFieldSets withSkipCompany(Boolean skipCompany) {
        this.skipCompany = skipCompany;
        return this;
    }
    
    /**
     * Skip validating form email
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skip_email")
    @SpeakeasyMetadata("form:name=skip_email multipartForm:name=skip_email")
    public Boolean skipEmail;

    public PostFormFieldSets withSkipEmail(Boolean skipEmail) {
        this.skipEmail = skipEmail;
        return this;
    }
    
    /**
     * Skip validating form name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skip_name")
    @SpeakeasyMetadata("form:name=skip_name multipartForm:name=skip_name")
    public Boolean skipName;

    public PostFormFieldSets withSkipName(Boolean skipName) {
        this.skipName = skipName;
        return this;
    }
    
    /**
     * Title to be displayed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    @SpeakeasyMetadata("form:name=title multipartForm:name=title")
    public String title;

    public PostFormFieldSets withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * User ID.  Provide a value of `0` to operate the current session's user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    @SpeakeasyMetadata("form:name=user_id multipartForm:name=user_id")
    public Integer userId;

    public PostFormFieldSets withUserId(Integer userId) {
        this.userId = userId;
        return this;
    }
    
    public PostFormFieldSets(){}
}
