// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type NodesWikisListPathParams struct {
	// The unique identifier of the node.
	NodeID string `pathParam:"style=simple,explode=false,name=node_id"`
}

type NodesWikisListRequest struct {
	PathParams NodesWikisListPathParams
}

// NodesWikisListWikiAttributes - The properties of the wiki.
type NodesWikisListWikiAttributes struct {
	// Content type of the wiki (`text/markdown`).
	ContentType string
	// Whether the current user is allowed to post comments on this wiki.
	CurrentUserCanComment string
	// The date and time at which the wiki was last modified, as an iso8601 formatted timestamp.
	DateModified time.Time
	// A dictionary containing additional metadata about this wiki, including version information.
	Extra string
	// The type of object.
	Kind string
	// Materialized path to the wiki object.
	MaterializedPath string
	// The name/title of the wiki page.
	Name string
	// Path to the wiki object.
	Path string
	// Size of the wiki.
	Size string
}

// NodesWikisListWikiLinks - URLs to alternative representations of the wiki.
type NodesWikisListWikiLinks struct {
	// The URL to download the content of the wiki.
	Download *string
	// A link to the detail page for the wiki.
	Info *string
	// A link to the detail page for the wiki.
	Self *string
}

// NodesWikisListWikiRelationships - URLs to other entities or entity collections that have a relationship to the wiki.
type NodesWikisListWikiRelationships struct {
	// A relationship to the comments related to this wiki.
	Comments string
	// A relationship to the associated node.
	Node string
	// A relationship to the user associated with this wiki.
	User string
}

type NodesWikisListWiki struct {
	// The properties of the wiki.
	Attributes *NodesWikisListWikiAttributes
	// The identifier of the wiki.
	ID *string
	// URLs to alternative representations of the wiki.
	Links *NodesWikisListWikiLinks
	// URLs to other entities or entity collections that have a relationship to the wiki.
	Relationships NodesWikisListWikiRelationships
	// The type identifier of the wiki (`wikis`).
	Type string
}

type NodesWikisListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
