// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteFlywheelXAmzTargetEnum
type DeleteFlywheelXAmzTargetEnum string

const (
	DeleteFlywheelXAmzTargetEnumComprehend20171127DeleteFlywheel DeleteFlywheelXAmzTargetEnum = "Comprehend_20171127.DeleteFlywheel"
)

func (e DeleteFlywheelXAmzTargetEnum) ToPointer() *DeleteFlywheelXAmzTargetEnum {
	return &e
}

func (e *DeleteFlywheelXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Comprehend_20171127.DeleteFlywheel":
		*e = DeleteFlywheelXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteFlywheelXAmzTargetEnum: %v", v)
	}
}

type DeleteFlywheelRequest struct {
	DeleteFlywheelRequest shared.DeleteFlywheelRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DeleteFlywheelXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteFlywheelResponse struct {
	ContentType string
	// Success
	DeleteFlywheelResponse map[string]interface{}
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceUnavailableException
	ResourceUnavailableException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
