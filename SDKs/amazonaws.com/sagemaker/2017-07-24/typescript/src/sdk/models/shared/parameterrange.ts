/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CategoricalParameterRangeSpecification } from "./categoricalparameterrangespecification";
import { ContinuousParameterRangeSpecification } from "./continuousparameterrangespecification";
import { IntegerParameterRangeSpecification } from "./integerparameterrangespecification";
import { Expose, Type } from "class-transformer";

/**
 * Defines the possible values for categorical, continuous, and integer hyperparameters to be used by an algorithm.
 */
export class ParameterRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CategoricalParameterRangeSpecification" })
  @Type(() => CategoricalParameterRangeSpecification)
  categoricalParameterRangeSpecification?: CategoricalParameterRangeSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "ContinuousParameterRangeSpecification" })
  @Type(() => ContinuousParameterRangeSpecification)
  continuousParameterRangeSpecification?: ContinuousParameterRangeSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "IntegerParameterRangeSpecification" })
  @Type(() => IntegerParameterRangeSpecification)
  integerParameterRangeSpecification?: IntegerParameterRangeSpecification;
}
