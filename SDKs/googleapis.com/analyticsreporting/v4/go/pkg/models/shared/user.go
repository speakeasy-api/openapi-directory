// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UserTypeEnum - Type of the user in the request. The field `userId` is associated with this type.
type UserTypeEnum string

const (
	UserTypeEnumUserIDTypeUnspecified UserTypeEnum = "USER_ID_TYPE_UNSPECIFIED"
	UserTypeEnumUserID                UserTypeEnum = "USER_ID"
	UserTypeEnumClientID              UserTypeEnum = "CLIENT_ID"
)

func (e *UserTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USER_ID_TYPE_UNSPECIFIED":
		fallthrough
	case "USER_ID":
		fallthrough
	case "CLIENT_ID":
		*e = UserTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserTypeEnum: %s", s)
	}
}

// User - Contains information to identify a particular user uniquely.
type User struct {
	// Type of the user in the request. The field `userId` is associated with this type.
	Type *UserTypeEnum `json:"type,omitempty"`
	// Unique Id of the user for which the data is being requested.
	UserID *string `json:"userId,omitempty"`
}
