/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Model - An ML model hosted in Firebase ML
 */
public class Model {
    /**
     * Output only. Lists operation ids associated with this model whose status is NOT done.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeOperations")
    public Operation[] activeOperations;

    public Model withActiveOperations(Operation[] activeOperations) {
        this.activeOperations = activeOperations;
        return this;
    }
    
    /**
     * Output only. Timestamp when this model was created in Firebase ML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Model withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Required. The name of the model to create. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores(_) and ASCII digits 0-9. It must start with a letter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Model withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Output only. See RFC7232 https://tools.ietf.org/html/rfc7232#section-2.3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Model withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Output only. The model_hash will change if a new file is available for download.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modelHash")
    public String modelHash;

    public Model withModelHash(String modelHash) {
        this.modelHash = modelHash;
        return this;
    }
    
    /**
     * The resource name of the Model. Model names have the form `projects/{project_id}/models/{model_id}` The name is ignored when creating a model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Model withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * State common to all model types. Includes publishing and validation information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ModelState state;

    public Model withState(ModelState state) {
        this.state = state;
        return this;
    }
    
    /**
     * User defined tags which can be used to group/filter models during listing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;

    public Model withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Information that is specific to TfLite models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tfliteModel")
    public TfLiteModel tfliteModel;

    public Model withTfliteModel(TfLiteModel tfliteModel) {
        this.tfliteModel = tfliteModel;
        return this;
    }
    
    /**
     * Output only. Timestamp when this model was updated in Firebase ML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Model withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Model(){}
}
