/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETAccountingCodeItemType - Container for custom fields of an Accounting Code object.
 * 
 */
public class GETAccountingCodeItemType {
    /**
     * The category associated with the accounting code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public GETAccountingCodeItemTypeCategoryEnum category;
    public GETAccountingCodeItemType withCategory(GETAccountingCodeItemTypeCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * The ID of the user who created the accounting code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public String createdBy;
    public GETAccountingCodeItemType withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Date and time when the accounting code was created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdOn")
    public OffsetDateTime createdOn;
    public GETAccountingCodeItemType withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }
    
    /**
     * Name of the account in your general ledger.
     * 
     * Field only available if you have Zuora Finance enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("glAccountName")
    public String glAccountName;
    public GETAccountingCodeItemType withGlAccountName(String glAccountName) {
        this.glAccountName = glAccountName;
        return this;
    }
    
    /**
     * Account number in your general ledger.
     * 
     * Field only available if you have Zuora Finance enabled.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("glAccountNumber")
    public String glAccountNumber;
    public GETAccountingCodeItemType withGlAccountNumber(String glAccountNumber) {
        this.glAccountNumber = glAccountNumber;
        return this;
    }
    
    /**
     * ID of the accounting code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETAccountingCodeItemType withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the accounting code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GETAccountingCodeItemType withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Any optional notes for the accounting code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public GETAccountingCodeItemType withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The accounting code status.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GETAccountingCodeItemTypeStatusEnum status;
    public GETAccountingCodeItemType withStatus(GETAccountingCodeItemTypeStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public GETAccountingCodeItemType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Accounting code type. 
     * 
     * Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public GETAccountingCodeItemTypeTypeEnum type;
    public GETAccountingCodeItemType withType(GETAccountingCodeItemTypeTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The ID of the user who last updated the accounting code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public String updatedBy;
    public GETAccountingCodeItemType withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
    /**
     * Date and time when the accounting code was last updated.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedOn")
    public OffsetDateTime updatedOn;
    public GETAccountingCodeItemType withUpdatedOn(OffsetDateTime updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }
    
}
