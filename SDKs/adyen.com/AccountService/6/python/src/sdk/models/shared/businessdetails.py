"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import shareholdercontact as shared_shareholdercontact
from ..shared import signatorycontact as shared_signatorycontact
from ..shared import ultimateparentcompany as shared_ultimateparentcompany
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BusinessDetails:
    
    doing_business_as: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doingBusinessAs'), 'exclude': lambda f: f is None }})
    r"""The registered name of the company (if it differs from the legal name of the company)."""  
    legal_business_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalBusinessName'), 'exclude': lambda f: f is None }})
    r"""The legal name of the company."""  
    listed_ultimate_parent_company: Optional[list[shared_ultimateparentcompany.UltimateParentCompany]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listedUltimateParentCompany'), 'exclude': lambda f: f is None }})
    r"""Information about the parent public company. Required if the account holder is 100% owned by a publicly listed company."""  
    registration_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrationNumber'), 'exclude': lambda f: f is None }})
    r"""The registration number of the company."""  
    shareholders: Optional[list[shared_shareholdercontact.ShareholderContact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shareholders'), 'exclude': lambda f: f is None }})
    r"""Array containing information about individuals associated with the account holder either through ownership or control. For details about how you can identify them, refer to [our verification guide](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process#identify-ubos)."""  
    signatories: Optional[list[shared_signatorycontact.SignatoryContact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signatories'), 'exclude': lambda f: f is None }})
    r"""Signatories associated with the company.
    Each array entry should represent one signatory.
    """  
    stock_exchange: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stockExchange'), 'exclude': lambda f: f is None }})
    r"""Market Identifier Code (MIC)."""  
    stock_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stockNumber'), 'exclude': lambda f: f is None }})
    r"""International Securities Identification Number (ISIN)."""  
    stock_ticker: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stockTicker'), 'exclude': lambda f: f is None }})
    r"""Stock Ticker symbol."""  
    tax_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxId'), 'exclude': lambda f: f is None }})
    r"""The tax ID of the company."""  
    