/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PatientAuthPurposeEnum } from "./patientauthpurposeenum";
import { PatientAuthRequester } from "./patientauthrequester";
import { Expose, Transform, Type } from "class-transformer";

export class AccessTokenValidity extends SpeakeasyBase {
  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiry" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiry: Date;

  /**
   * number of times, the token can be used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit: number;

  /**
   * what is the purpose of user auth
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purpose" })
  purpose: PatientAuthPurposeEnum;

  /**
   * identification of requester
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requester" })
  @Type(() => PatientAuthRequester)
  requester: PatientAuthRequester;
}
