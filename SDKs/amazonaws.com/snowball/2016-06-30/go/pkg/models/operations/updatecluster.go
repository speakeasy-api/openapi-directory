// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateClusterXAmzTargetEnum
type UpdateClusterXAmzTargetEnum string

const (
	UpdateClusterXAmzTargetEnumAwsieSnowballJobManagementServiceUpdateCluster UpdateClusterXAmzTargetEnum = "AWSIESnowballJobManagementService.UpdateCluster"
)

func (e *UpdateClusterXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSIESnowballJobManagementService.UpdateCluster":
		*e = UpdateClusterXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateClusterXAmzTargetEnum: %s", s)
	}
}

type UpdateClusterHeaders struct {
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateClusterXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateClusterRequest struct {
	Headers UpdateClusterHeaders
	Request shared.UpdateClusterRequest `request:"mediaType=application/json"`
}

type UpdateClusterResponse struct {
	ContentType string
	// Ec2RequestFailedException
	Ec2RequestFailedException interface{}
	// InvalidInputCombinationException
	InvalidInputCombinationException interface{}
	// InvalidJobStateException
	InvalidJobStateException interface{}
	// InvalidResourceException
	InvalidResourceException interface{}
	// KMSRequestFailedException
	KMSRequestFailedException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateClusterResult map[string]interface{}
}
