<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class SearchCasesRequestBody
{
    /**
     * The list of field identifiers to be returned as part of the response.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FieldIdentifier> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FieldIdentifier>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fields = null;
    
    /**
     * A filter for cases. Only one value can be provided.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchCasesRequestBodyFilter $filter
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\SearchCasesRequestBodyFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SearchCasesRequestBodyFilter $filter = null;
    
    /**
     * The maximum number of cases to return. The current maximum supported value is 25. This is also the default value when no other value is provided.
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxResults')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     * A word or phrase used to perform a quick search.
     * 
     * @var ?string $searchTerm
     */
	#[\JMS\Serializer\Annotation\SerializedName('searchTerm')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $searchTerm = null;
    
    /**
     * A list of sorts where each sort specifies a field and their sort order to be applied to the results. 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Sort> $sorts
     */
	#[\JMS\Serializer\Annotation\SerializedName('sorts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Sort>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sorts = null;
    
	public function __construct()
	{
		$this->fields = null;
		$this->filter = null;
		$this->maxResults = null;
		$this->nextToken = null;
		$this->searchTerm = null;
		$this->sorts = null;
	}
}
