// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AttributionSettingsAttributionModelEnum - Required. Attribution model.
type AttributionSettingsAttributionModelEnum string

const (
	AttributionSettingsAttributionModelEnumAttributionModelUnspecified AttributionSettingsAttributionModelEnum = "ATTRIBUTION_MODEL_UNSPECIFIED"
	AttributionSettingsAttributionModelEnumCrossChannelLastClick       AttributionSettingsAttributionModelEnum = "CROSS_CHANNEL_LAST_CLICK"
	AttributionSettingsAttributionModelEnumAdsPreferredLastClick       AttributionSettingsAttributionModelEnum = "ADS_PREFERRED_LAST_CLICK"
	AttributionSettingsAttributionModelEnumCrossChannelDataDriven      AttributionSettingsAttributionModelEnum = "CROSS_CHANNEL_DATA_DRIVEN"
	AttributionSettingsAttributionModelEnumCrossChannelFirstClick      AttributionSettingsAttributionModelEnum = "CROSS_CHANNEL_FIRST_CLICK"
	AttributionSettingsAttributionModelEnumCrossChannelLinear          AttributionSettingsAttributionModelEnum = "CROSS_CHANNEL_LINEAR"
	AttributionSettingsAttributionModelEnumCrossChannelPositionBased   AttributionSettingsAttributionModelEnum = "CROSS_CHANNEL_POSITION_BASED"
	AttributionSettingsAttributionModelEnumCrossChannelTimeDecay       AttributionSettingsAttributionModelEnum = "CROSS_CHANNEL_TIME_DECAY"
)

func (e *AttributionSettingsAttributionModelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ATTRIBUTION_MODEL_UNSPECIFIED":
		fallthrough
	case "CROSS_CHANNEL_LAST_CLICK":
		fallthrough
	case "ADS_PREFERRED_LAST_CLICK":
		fallthrough
	case "CROSS_CHANNEL_DATA_DRIVEN":
		fallthrough
	case "CROSS_CHANNEL_FIRST_CLICK":
		fallthrough
	case "CROSS_CHANNEL_LINEAR":
		fallthrough
	case "CROSS_CHANNEL_POSITION_BASED":
		fallthrough
	case "CROSS_CHANNEL_TIME_DECAY":
		*e = AttributionSettingsAttributionModelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AttributionSettingsAttributionModelEnum: %s", s)
	}
}

// AttributionSettingsInput - Represents attribution settings for conversion sources receiving pre-attribution data.
type AttributionSettingsInput struct {
	// Required. Lookback windows (in days) used for attribution in this source. Supported values are 7, 30, 60, 90.
	AttributionLookbackWindowInDays *int `json:"attributionLookbackWindowInDays,omitempty"`
	// Required. Attribution model.
	AttributionModel *AttributionSettingsAttributionModelEnum `json:"attributionModel,omitempty"`
}

// AttributionSettings - Represents attribution settings for conversion sources receiving pre-attribution data.
type AttributionSettings struct {
	// Required. Lookback windows (in days) used for attribution in this source. Supported values are 7, 30, 60, 90.
	AttributionLookbackWindowInDays *int `json:"attributionLookbackWindowInDays,omitempty"`
	// Required. Attribution model.
	AttributionModel *AttributionSettingsAttributionModelEnum `json:"attributionModel,omitempty"`
	// Immutable. Unordered list. List of different conversion types a conversion event can be classified as. A standard "purchase" type will be automatically created if this list is empty at creation time.
	ConversionType []AttributionSettingsConversionType `json:"conversionType,omitempty"`
}
