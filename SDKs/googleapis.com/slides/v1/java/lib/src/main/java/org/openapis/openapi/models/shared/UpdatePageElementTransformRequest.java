/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdatePageElementTransformRequest - Updates the transform of a page element. Updating the transform of a group will change the absolute transform of the page elements in that group, which can change their visual appearance. See the documentation for PageElement.transform for more details.
 */
public class UpdatePageElementTransformRequest {
    /**
     * The apply mode of the transform update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applyMode")
    public UpdatePageElementTransformRequestApplyModeEnum applyMode;
    public UpdatePageElementTransformRequest withApplyMode(UpdatePageElementTransformRequestApplyModeEnum applyMode) {
        this.applyMode = applyMode;
        return this;
    }
    
    /**
     * The object ID of the page element to update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectId")
    public String objectId;
    public UpdatePageElementTransformRequest withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * AffineTransform uses a 3x3 matrix with an implied last row of [ 0 0 1 ] to transform source coordinates (x,y) into destination coordinates (x', y') according to: x' x = shear_y scale_y translate_y 1 [ 1 ] After transformation, x' = scale_x * x + shear_x * y + translate_x; y' = scale_y * y + shear_y * x + translate_y; This message is therefore composed of these six matrix elements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transform")
    public AffineTransform transform;
    public UpdatePageElementTransformRequest withTransform(AffineTransform transform) {
        this.transform = transform;
        return this;
    }
    
}
