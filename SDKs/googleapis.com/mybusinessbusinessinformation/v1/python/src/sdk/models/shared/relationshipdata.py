"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import relevantlocation as shared_relevantlocation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RelationshipData:
    r"""Information of all parent and children locations related to this one."""
    
    children_locations: Optional[list[shared_relevantlocation.RelevantLocation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('childrenLocations'), 'exclude': lambda f: f is None }})
    r"""The list of children locations that this location has relations with."""  
    parent_chain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentChain'), 'exclude': lambda f: f is None }})
    r"""The resource name of the Chain that this location is member of. How to find Chain ID"""  
    parent_location: Optional[shared_relevantlocation.RelevantLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentLocation'), 'exclude': lambda f: f is None }})
    r"""Information about another location that is related to current one. The relation can be any one of DEPARTMENT_OF or INDEPENDENT_ESTABLISHMENT_OF, and the location specified here can be on either side (parent/child) of the location."""  
    