"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import date, datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class DpsMessageDpsMessageMessageStatusEnum(str, Enum):
    r"""The dps messages' message status"""
    RETRIEVED = 'Retrieved'
    APPLIED = 'Applied'
    UNRESOLVED = 'Unresolved'
    IGNORED = 'Ignored'
    INFORMATION = 'Information'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DpsMessageDpsMessage:
    
    form_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FormType'), 'exclude': lambda f: f is None }})
    r"""The dps messages' form type"""  
    issue_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IssueDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The dps messages' issue date"""  
    last_updated: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastUpdated'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The dps messages' last updated"""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message'), 'exclude': lambda f: f is None }})
    r"""The dps messages' message"""  
    message_status: Optional[DpsMessageDpsMessageMessageStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MessageStatus'), 'exclude': lambda f: f is None }})
    r"""The dps messages' message status"""  
    message_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MessageType'), 'exclude': lambda f: f is None }})
    r"""The dps messages' message type"""  
    processing_result: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProcessingResult'), 'exclude': lambda f: f is None }})
    r"""The dps messages' processing result"""  
    retrieve_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RetrieveDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The dps messages' retrieve date"""  
    sequence_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SequenceNumber'), 'exclude': lambda f: f is None }})
    r"""The dps messages' sequence number"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DpsMessage:
    r"""The dps message object."""
    
    dps_message: Optional[DpsMessageDpsMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DpsMessage'), 'exclude': lambda f: f is None }})  
    