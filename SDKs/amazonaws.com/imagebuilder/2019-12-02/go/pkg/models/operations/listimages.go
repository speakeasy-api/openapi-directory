// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListImagesRequestBodyOwnerEnum - The owner defines which images you want to list. By default, this request will only show images owned by your account. You can use this field to specify if you want to view images owned by yourself, by Amazon, or those images that have been shared with you by other customers.
type ListImagesRequestBodyOwnerEnum string

const (
	ListImagesRequestBodyOwnerEnumSelf       ListImagesRequestBodyOwnerEnum = "Self"
	ListImagesRequestBodyOwnerEnumShared     ListImagesRequestBodyOwnerEnum = "Shared"
	ListImagesRequestBodyOwnerEnumAmazon     ListImagesRequestBodyOwnerEnum = "Amazon"
	ListImagesRequestBodyOwnerEnumThirdParty ListImagesRequestBodyOwnerEnum = "ThirdParty"
)

func (e ListImagesRequestBodyOwnerEnum) ToPointer() *ListImagesRequestBodyOwnerEnum {
	return &e
}

func (e *ListImagesRequestBodyOwnerEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Self":
		fallthrough
	case "Shared":
		fallthrough
	case "Amazon":
		fallthrough
	case "ThirdParty":
		*e = ListImagesRequestBodyOwnerEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListImagesRequestBodyOwnerEnum: %v", v)
	}
}

type ListImagesRequestBody struct {
	// Requests a list of images with a specific recipe name.
	ByName *bool `json:"byName,omitempty"`
	// <p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>
	Filters []shared.Filter `json:"filters,omitempty"`
	// Includes deprecated images in the response list.
	IncludeDeprecated *bool `json:"includeDeprecated,omitempty"`
	// The maximum items to return in a request.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// A token to specify where to start paginating. This is the NextToken from a previously truncated response.
	NextToken *string `json:"nextToken,omitempty"`
	// The owner defines which images you want to list. By default, this request will only show images owned by your account. You can use this field to specify if you want to view images owned by yourself, by Amazon, or those images that have been shared with you by other customers.
	Owner *ListImagesRequestBodyOwnerEnum `json:"owner,omitempty"`
}

type ListImagesRequest struct {
	RequestBody       ListImagesRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListImagesResponse struct {
	// CallRateLimitExceededException
	CallRateLimitExceededException interface{}
	// ClientException
	ClientException interface{}
	ContentType     string
	// ForbiddenException
	ForbiddenException interface{}
	// InvalidPaginationTokenException
	InvalidPaginationTokenException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListImagesResponse *shared.ListImagesResponse
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
}
