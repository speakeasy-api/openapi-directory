/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum ExclusionRuleExcludeDeliveryEnum {
  Stream = "Stream",
  Download = "Download",
  StreamOrDownload = "StreamOrDownload",
  ProgressiveDownload = "ProgressiveDownload",
  None = "None",
}

export enum ExclusionRuleExcludeMinResolutionEnum {
  Sd = "SD",
  Hd720 = "HD-720",
  Hd1080 = "HD-1080",
  Hd4K = "HD-4K",
  External = "External",
  Unknown = "Unknown",
}

/**
 * Defines playback exclusion rules for an Offer or Entitlement.
 */
export class ExclusionRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The device type that the exclusion rules apply to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device" })
  device?: string;

  /**
   * Prevent airplay from an apple device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludeAirplay" })
  excludeAirplay?: boolean;

  /**
   * Prevent chromecasting.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludeChromecast" })
  excludeChromecast?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "excludeDelivery" })
  excludeDelivery?: ExclusionRuleExcludeDeliveryEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "excludeMinResolution" })
  excludeMinResolution?: ExclusionRuleExcludeMinResolutionEnum;
}
