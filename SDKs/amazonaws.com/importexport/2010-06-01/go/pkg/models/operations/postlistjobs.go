// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListJobsActionEnum
type POSTListJobsActionEnum string

const (
	POSTListJobsActionEnumListJobs POSTListJobsActionEnum = "ListJobs"
)

func (e *POSTListJobsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListJobs":
		*e = POSTListJobsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListJobsActionEnum: %s", s)
	}
}

// POSTListJobsOperationEnum
type POSTListJobsOperationEnum string

const (
	POSTListJobsOperationEnumListJobs POSTListJobsOperationEnum = "ListJobs"
)

func (e *POSTListJobsOperationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListJobs":
		*e = POSTListJobsOperationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListJobsOperationEnum: %s", s)
	}
}

// POSTListJobsVersionEnum
type POSTListJobsVersionEnum string

const (
	POSTListJobsVersionEnumTwoThousandAndTen0601 POSTListJobsVersionEnum = "2010-06-01"
)

func (e *POSTListJobsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-06-01":
		*e = POSTListJobsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListJobsVersionEnum: %s", s)
	}
}

type POSTListJobsRequest struct {
	AWSAccessKeyID string                 `queryParam:"style=form,explode=true,name=AWSAccessKeyId"`
	Action         POSTListJobsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxJobs          *string                   `queryParam:"style=form,explode=true,name=MaxJobs"`
	Operation        POSTListJobsOperationEnum `queryParam:"style=form,explode=true,name=Operation"`
	RequestBody      []byte                    `request:"mediaType=text/xml"`
	Signature        string                    `queryParam:"style=form,explode=true,name=Signature"`
	SignatureMethod  string                    `queryParam:"style=form,explode=true,name=SignatureMethod"`
	SignatureVersion string                    `queryParam:"style=form,explode=true,name=SignatureVersion"`
	Timestamp        string                    `queryParam:"style=form,explode=true,name=Timestamp"`
	Version          POSTListJobsVersionEnum   `queryParam:"style=form,explode=true,name=Version"`
}

type POSTListJobsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
