"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var axios_1 = __importDefault(require("axios"));
var accountingcodes_1 = require("./accountingcodes");
var accountingperiods_1 = require("./accountingperiods");
var accounts_1 = require("./accounts");
var actions_1 = require("./actions");
var amendments_1 = require("./amendments");
var attachments_1 = require("./attachments");
var billrun_1 = require("./billrun");
var billingdocuments_1 = require("./billingdocuments");
var billingpreviewrun_1 = require("./billingpreviewrun");
var catalog_1 = require("./catalog");
var chargemetrics_1 = require("./chargemetrics");
var chargerevenuesummaries_1 = require("./chargerevenuesummaries");
var communicationprofiles_1 = require("./communicationprofiles");
var connections_1 = require("./connections");
var contacts_1 = require("./contacts");
var creditbalanceadjustments_1 = require("./creditbalanceadjustments");
var creditmemos_1 = require("./creditmemos");
var customexchangerates_1 = require("./customexchangerates");
var customobjectdefinitions_1 = require("./customobjectdefinitions");
var customobjectjobs_1 = require("./customobjectjobs");
var customobjectrecords_1 = require("./customobjectrecords");
var dataqueries_1 = require("./dataqueries");
var debitmemos_1 = require("./debitmemos");
var describe_1 = require("./describe");
var documentproperties_1 = require("./documentproperties");
var entities_1 = require("./entities");
var entityconnections_1 = require("./entityconnections");
var eventtriggers_1 = require("./eventtriggers");
var exports_1 = require("./exports");
var features_1 = require("./features");
var files_1 = require("./files");
var hmacsignatures_1 = require("./hmacsignatures");
var hostedpages_1 = require("./hostedpages");
var imports_1 = require("./imports");
var invoiceadjustments_1 = require("./invoiceadjustments");
var invoiceitemadjustments_1 = require("./invoiceitemadjustments");
var invoiceitems_1 = require("./invoiceitems");
var invoicepayments_1 = require("./invoicepayments");
var invoicesplititems_1 = require("./invoicesplititems");
var invoicesplits_1 = require("./invoicesplits");
var invoices_1 = require("./invoices");
var journalruns_1 = require("./journalruns");
var massupdater_1 = require("./massupdater");
var notifications_1 = require("./notifications");
var oauth_1 = require("./oauth");
var operations_1 = require("./operations");
var orderlineitems_1 = require("./orderlineitems");
var orders_1 = require("./orders");
var paymentgatewayreconciliation_1 = require("./paymentgatewayreconciliation");
var paymentgateways_1 = require("./paymentgateways");
var paymentmethodsnapshots_1 = require("./paymentmethodsnapshots");
var paymentmethodtransactionlogs_1 = require("./paymentmethodtransactionlogs");
var paymentmethods_1 = require("./paymentmethods");
var paymentruns_1 = require("./paymentruns");
var paymenttransactionlogs_1 = require("./paymenttransactionlogs");
var payments_1 = require("./payments");
var productfeatures_1 = require("./productfeatures");
var productrateplanchargetiers_1 = require("./productrateplanchargetiers");
var productrateplancharges_1 = require("./productrateplancharges");
var productrateplans_1 = require("./productrateplans");
var products_1 = require("./products");
var quotesdocument_1 = require("./quotesdocument");
var rsasignatures_1 = require("./rsasignatures");
var ramps_1 = require("./ramps");
var rateplanchargetiers_1 = require("./rateplanchargetiers");
var rateplancharges_1 = require("./rateplancharges");
var rateplans_1 = require("./rateplans");
var refundinvoicepayments_1 = require("./refundinvoicepayments");
var refundtransactionlogs_1 = require("./refundtransactionlogs");
var refunds_1 = require("./refunds");
var revenueevents_1 = require("./revenueevents");
var revenueitems_1 = require("./revenueitems");
var revenuerules_1 = require("./revenuerules");
var revenueschedules_1 = require("./revenueschedules");
var sequencesets_1 = require("./sequencesets");
var settings_1 = require("./settings");
var subscriptionproductfeatures_1 = require("./subscriptionproductfeatures");
var subscriptions_1 = require("./subscriptions");
var summaryjournalentries_1 = require("./summaryjournalentries");
var taxationitems_1 = require("./taxationitems");
var transactions_1 = require("./transactions");
var unitofmeasure_1 = require("./unitofmeasure");
var usage_1 = require("./usage");
var users_1 = require("./users");
var workflows_1 = require("./workflows");
var zuorarevenueintegration_1 = require("./zuorarevenueintegration");
exports.ServerList = [
    "https://rest.zuora.com",
];
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props.serverUrl) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient = (_b = props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.accountingCodes = new accountingcodes_1.AccountingCodes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accountingPeriods = new accountingperiods_1.AccountingPeriods(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accounts = new accounts_1.Accounts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.actions = new actions_1.Actions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.amendments = new amendments_1.Amendments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.attachments = new attachments_1.Attachments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.billRun = new billrun_1.BillRun(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.billingDocuments = new billingdocuments_1.BillingDocuments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.billingPreviewRun = new billingpreviewrun_1.BillingPreviewRun(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.catalog = new catalog_1.Catalog(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.chargeMetrics = new chargemetrics_1.ChargeMetrics(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.chargeRevenueSummaries = new chargerevenuesummaries_1.ChargeRevenueSummaries(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.communicationProfiles = new communicationprofiles_1.CommunicationProfiles(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.connections = new connections_1.Connections(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.contacts = new contacts_1.Contacts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.creditBalanceAdjustments = new creditbalanceadjustments_1.CreditBalanceAdjustments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.creditMemos = new creditmemos_1.CreditMemos(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customExchangeRates = new customexchangerates_1.CustomExchangeRates(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customObjectDefinitions = new customobjectdefinitions_1.CustomObjectDefinitions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customObjectJobs = new customobjectjobs_1.CustomObjectJobs(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customObjectRecords = new customobjectrecords_1.CustomObjectRecords(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.dataQueries = new dataqueries_1.DataQueries(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.debitMemos = new debitmemos_1.DebitMemos(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.describe = new describe_1.Describe(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.documentProperties = new documentproperties_1.DocumentProperties(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.entities = new entities_1.Entities(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.entityConnections = new entityconnections_1.EntityConnections(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.eventTriggers = new eventtriggers_1.EventTriggers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.exports = new exports_1.Exports(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.features = new features_1.Features(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.files = new files_1.Files(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.hmacSignatures = new hmacsignatures_1.HmacSignatures(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.hostedPages = new hostedpages_1.HostedPages(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.imports = new imports_1.Imports(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoiceAdjustments = new invoiceadjustments_1.InvoiceAdjustments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoiceItemAdjustments = new invoiceitemadjustments_1.InvoiceItemAdjustments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoiceItems = new invoiceitems_1.InvoiceItems(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoicePayments = new invoicepayments_1.InvoicePayments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoiceSplitItems = new invoicesplititems_1.InvoiceSplitItems(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoiceSplits = new invoicesplits_1.InvoiceSplits(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoices = new invoices_1.Invoices(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.journalRuns = new journalruns_1.JournalRuns(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.massUpdater = new massupdater_1.MassUpdater(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.notifications = new notifications_1.Notifications(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.oAuth = new oauth_1.OAuth(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.operations = new operations_1.Operations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.orderLineItems = new orderlineitems_1.OrderLineItems(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.orders = new orders_1.Orders(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentGatewayReconciliation = new paymentgatewayreconciliation_1.PaymentGatewayReconciliation(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentGateways = new paymentgateways_1.PaymentGateways(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentMethodSnapshots = new paymentmethodsnapshots_1.PaymentMethodSnapshots(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentMethodTransactionLogs = new paymentmethodtransactionlogs_1.PaymentMethodTransactionLogs(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentMethods = new paymentmethods_1.PaymentMethods(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentRuns = new paymentruns_1.PaymentRuns(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentTransactionLogs = new paymenttransactionlogs_1.PaymentTransactionLogs(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payments = new payments_1.Payments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.productFeatures = new productfeatures_1.ProductFeatures(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.productRatePlanChargeTiers = new productrateplanchargetiers_1.ProductRatePlanChargeTiers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.productRatePlanCharges = new productrateplancharges_1.ProductRatePlanCharges(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.productRatePlans = new productrateplans_1.ProductRatePlans(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.products = new products_1.Products(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.quotesDocument = new quotesdocument_1.QuotesDocument(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.rsaSignatures = new rsasignatures_1.RsaSignatures(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ramps = new ramps_1.Ramps(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ratePlanChargeTiers = new rateplanchargetiers_1.RatePlanChargeTiers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ratePlanCharges = new rateplancharges_1.RatePlanCharges(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ratePlans = new rateplans_1.RatePlans(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.refundInvoicePayments = new refundinvoicepayments_1.RefundInvoicePayments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.refundTransactionLogs = new refundtransactionlogs_1.RefundTransactionLogs(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.refunds = new refunds_1.Refunds(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.revenueEvents = new revenueevents_1.RevenueEvents(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.revenueItems = new revenueitems_1.RevenueItems(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.revenueRules = new revenuerules_1.RevenueRules(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.revenueSchedules = new revenueschedules_1.RevenueSchedules(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.sequenceSets = new sequencesets_1.SequenceSets(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.settings = new settings_1.Settings(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.subscriptionProductFeatures = new subscriptionproductfeatures_1.SubscriptionProductFeatures(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.subscriptions = new subscriptions_1.Subscriptions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.summaryJournalEntries = new summaryjournalentries_1.SummaryJournalEntries(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.taxationItems = new taxationitems_1.TaxationItems(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.transactions = new transactions_1.Transactions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.unitOfMeasure = new unitofmeasure_1.UnitOfMeasure(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.usage = new usage_1.Usage(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.users = new users_1.Users(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.workflows = new workflows_1.Workflows(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.zuoraRevenueIntegration = new zuorarevenueintegration_1.ZuoraRevenueIntegration(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
