// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ContentAccountsListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ContentAccountsListPathParams struct {
	// The ID of the managing account. This must be a multi-client account.
	MerchantID string `pathParam:"style=simple,explode=false,name=merchantId"`
}

// ContentAccountsListViewEnum - Controls which fields will be populated. Acceptable values are: "merchant" and "css". The default value is "merchant".
type ContentAccountsListViewEnum string

const (
	ContentAccountsListViewEnumMerchant ContentAccountsListViewEnum = "MERCHANT"
	ContentAccountsListViewEnumCSS      ContentAccountsListViewEnum = "CSS"
)

func (e *ContentAccountsListViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MERCHANT":
		fallthrough
	case "CSS":
		*e = ContentAccountsListViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentAccountsListViewEnum: %s", s)
	}
}

type ContentAccountsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// If view is set to "css", only return accounts that are assigned label with given ID.
	Label *string `queryParam:"style=form,explode=true,name=label"`
	// The maximum number of accounts to return in the response, used for paging.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// If set, only the accounts with the given name (case sensitive) will be returned.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The token returned by the previous request.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Controls which fields will be populated. Acceptable values are: "merchant" and "css". The default value is "merchant".
	View *ContentAccountsListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type ContentAccountsListRequest struct {
	PathParams  ContentAccountsListPathParams
	QueryParams ContentAccountsListQueryParams
	Security    ContentAccountsListSecurity
}

type ContentAccountsListResponse struct {
	// Successful response
	AccountsListResponse *shared.AccountsListResponse
	ContentType          string
	StatusCode           int
	RawResponse          *http.Response
}
