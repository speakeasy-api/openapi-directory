/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudContactcenterinsightsV1PhraseMatcherInput - The phrase matcher resource.
 */
public class GoogleCloudContactcenterinsightsV1PhraseMatcherInput {
    /**
     * Applies the phrase matcher only when it is active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public GoogleCloudContactcenterinsightsV1PhraseMatcherInput withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * The human-readable name of the phrase matcher.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public GoogleCloudContactcenterinsightsV1PhraseMatcherInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleCloudContactcenterinsightsV1PhraseMatcherInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A list of phase match rule groups that are included in this matcher.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phraseMatchRuleGroups")
    public GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup[] phraseMatchRuleGroups;
    public GoogleCloudContactcenterinsightsV1PhraseMatcherInput withPhraseMatchRuleGroups(GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup[] phraseMatchRuleGroups) {
        this.phraseMatchRuleGroups = phraseMatchRuleGroups;
        return this;
    }
    
    /**
     * The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roleMatch")
    public GoogleCloudContactcenterinsightsV1PhraseMatcherRoleMatchEnum roleMatch;
    public GoogleCloudContactcenterinsightsV1PhraseMatcherInput withRoleMatch(GoogleCloudContactcenterinsightsV1PhraseMatcherRoleMatchEnum roleMatch) {
        this.roleMatch = roleMatch;
        return this;
    }
    
    /**
     * Required. The type of this phrase matcher.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public GoogleCloudContactcenterinsightsV1PhraseMatcherTypeEnum type;
    public GoogleCloudContactcenterinsightsV1PhraseMatcherInput withType(GoogleCloudContactcenterinsightsV1PhraseMatcherTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionTag")
    public String versionTag;
    public GoogleCloudContactcenterinsightsV1PhraseMatcherInput withVersionTag(String versionTag) {
        this.versionTag = versionTag;
        return this;
    }
    
}
