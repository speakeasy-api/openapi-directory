// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UploadStatusEnum string

const (
	UploadStatusEnumInitialized UploadStatusEnum = "INITIALIZED"
	UploadStatusEnumProcessing  UploadStatusEnum = "PROCESSING"
	UploadStatusEnumSucceeded   UploadStatusEnum = "SUCCEEDED"
	UploadStatusEnumFailed      UploadStatusEnum = "FAILED"
)

func (e UploadStatusEnum) ToPointer() *UploadStatusEnum {
	return &e
}

func (e *UploadStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INITIALIZED":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		*e = UploadStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UploadStatusEnum: %v", v)
	}
}
