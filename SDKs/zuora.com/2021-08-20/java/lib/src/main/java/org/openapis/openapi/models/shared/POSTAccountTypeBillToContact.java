/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * POSTAccountTypeBillToContact - Container for custom fields of a Contact object.
 * 
 */
public class POSTAccountTypeBillToContact {
    /**
     * First address line, 255 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address1")
    public String address1;
    public POSTAccountTypeBillToContact withAddress1(String address1) {
        this.address1 = address1;
        return this;
    }
    
    /**
     * Second address line, 255 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address2")
    public String address2;
    public POSTAccountTypeBillToContact withAddress2(String address2) {
        this.address2 = address2;
        return this;
    }
    
    /**
     * City, 40 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public POSTAccountTypeBillToContact withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Country; must be a valid country name or abbreviation. If using Zuora Tax, you must specify a country in the sold-to contact to calculate tax. A bill-to contact may be used if no sold-to contact is provided.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public POSTAccountTypeBillToContact withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * County; 32 characters or less. May optionally be used by Zuora Tax to calculate county tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("county")
    public String county;
    public POSTAccountTypeBillToContact withCounty(String county) {
        this.county = county;
        return this;
    }
    
    /**
     * Fax phone number, 40 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fax")
    public String fax;
    public POSTAccountTypeBillToContact withFax(String fax) {
        this.fax = fax;
        return this;
    }
    
    /**
     * First name, 100 characters or less.
     * 
     */
    @JsonProperty("firstName")
    public String firstName;
    public POSTAccountTypeBillToContact withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Home phone number, 40 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("homePhone")
    public String homePhone;
    public POSTAccountTypeBillToContact withHomePhone(String homePhone) {
        this.homePhone = homePhone;
        return this;
    }
    
    /**
     * Last name, 100 characters or less.
     * 
     */
    @JsonProperty("lastName")
    public String lastName;
    public POSTAccountTypeBillToContact withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Mobile phone number, 40 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilePhone")
    public String mobilePhone;
    public POSTAccountTypeBillToContact withMobilePhone(String mobilePhone) {
        this.mobilePhone = mobilePhone;
        return this;
    }
    
    /**
     * Nickname for this contact
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nickname")
    public String nickname;
    public POSTAccountTypeBillToContact withNickname(String nickname) {
        this.nickname = nickname;
        return this;
    }
    
    /**
     * Other phone number, 40 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otherPhone")
    public String otherPhone;
    public POSTAccountTypeBillToContact withOtherPhone(String otherPhone) {
        this.otherPhone = otherPhone;
        return this;
    }
    
    /**
     * Possible values are: `Work`, `Mobile`, `Home`, `Other`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otherPhoneType")
    public String otherPhoneType;
    public POSTAccountTypeBillToContact withOtherPhoneType(String otherPhoneType) {
        this.otherPhoneType = otherPhoneType;
        return this;
    }
    
    /**
     * Personal email address, 80 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("personalEmail")
    public String personalEmail;
    public POSTAccountTypeBillToContact withPersonalEmail(String personalEmail) {
        this.personalEmail = personalEmail;
        return this;
    }
    
    /**
     * State; must be a valid state or province name or 2-character abbreviation. If using Zuora Tax, be aware that Zuora tax requires a state (in the US) or province (in Canada) in this field for the sold-to contact to calculate tax, and that a bill-to contact may be used if no sold-to contact is provided.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public POSTAccountTypeBillToContact withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * If using Zuora Tax, a region string as optionally defined in your tax rules. Not required.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxRegion")
    public String taxRegion;
    public POSTAccountTypeBillToContact withTaxRegion(String taxRegion) {
        this.taxRegion = taxRegion;
        return this;
    }
    
    /**
     * Work email address, 80 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workEmail")
    public String workEmail;
    public POSTAccountTypeBillToContact withWorkEmail(String workEmail) {
        this.workEmail = workEmail;
        return this;
    }
    
    /**
     * Work phone number, 40 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workPhone")
    public String workPhone;
    public POSTAccountTypeBillToContact withWorkPhone(String workPhone) {
        this.workPhone = workPhone;
        return this;
    }
    
    /**
     * Zip code, 20 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zipCode")
    public String zipCode;
    public POSTAccountTypeBillToContact withZipCode(String zipCode) {
        this.zipCode = zipCode;
        return this;
    }
    
}
