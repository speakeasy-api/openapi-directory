"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import imageidcreateentry as shared_imageidcreateentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageIDCreateBatch:
    r"""Image and tag ids. Limited to 64 images and 20 tags per batch"""
    
    images: Optional[list[shared_imageidcreateentry.ImageIDCreateEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Images'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Images', 'json': True }})  
    tag_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TagIds'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'TagIds' }})  
    