/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecommendationengineV1beta1ProductCatalogItem - ProductCatalogItem captures item metadata specific to retail products.
 */
public class GoogleCloudRecommendationengineV1beta1ProductCatalogItem {
    /**
     * Optional. The available quantity of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableQuantity")
    public String availableQuantity;

    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem withAvailableQuantity(String availableQuantity) {
        this.availableQuantity = availableQuantity;
        return this;
    }
    
    /**
     * Optional. Canonical URL directly linking to the item detail page with a length limit of 5 KiB..
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canonicalProductUri")
    public String canonicalProductUri;

    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem withCanonicalProductUri(String canonicalProductUri) {
        this.canonicalProductUri = canonicalProductUri;
        return this;
    }
    
    /**
     * Optional. A map to pass the costs associated with the product. For example: {"manufacturing": 45.5} The profit of selling this item is computed like so: * If 'exactPrice' is provided, profit = displayPrice - sum(costs) * If 'priceRange' is provided, profit = minPrice - sum(costs)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("costs")
    public java.util.Map<String, Float> costs;

    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem withCosts(java.util.Map<String, Float> costs) {
        this.costs = costs;
        return this;
    }
    
    /**
     * Optional. Only required if the price is set. Currency code for price/costs. Use three-character ISO-4217 code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;

    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * Exact product price.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exactPrice")
    public GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice exactPrice;

    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem withExactPrice(GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice exactPrice) {
        this.exactPrice = exactPrice;
        return this;
    }
    
    /**
     * Optional. Product images for the catalog item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("images")
    public GoogleCloudRecommendationengineV1beta1Image[] images;

    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem withImages(GoogleCloudRecommendationengineV1beta1Image[] images) {
        this.images = images;
        return this;
    }
    
    /**
     * Product price range when there are a range of prices for different variations of the same product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceRange")
    public GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange priceRange;

    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem withPriceRange(GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange priceRange) {
        this.priceRange = priceRange;
        return this;
    }
    
    /**
     * Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stockState")
    public GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockStateEnum stockState;

    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem withStockState(GoogleCloudRecommendationengineV1beta1ProductCatalogItemStockStateEnum stockState) {
        this.stockState = stockState;
        return this;
    }
    
    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem(){}
}
