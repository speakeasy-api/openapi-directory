// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateBackupXAmzTargetEnum
type CreateBackupXAmzTargetEnum string

const (
	CreateBackupXAmzTargetEnumAwsSimbaAPIServiceV20180301CreateBackup CreateBackupXAmzTargetEnum = "AWSSimbaAPIService_v20180301.CreateBackup"
)

func (e CreateBackupXAmzTargetEnum) ToPointer() *CreateBackupXAmzTargetEnum {
	return &e
}

func (e *CreateBackupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSSimbaAPIService_v20180301.CreateBackup":
		*e = CreateBackupXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackupXAmzTargetEnum: %v", v)
	}
}

type CreateBackupRequest struct {
	CreateBackupRequest shared.CreateBackupRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          CreateBackupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateBackupResponse struct {
	// BackupInProgress
	BackupInProgress interface{}
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// Success
	CreateBackupResponse *shared.CreateBackupResponse
	// FileSystemNotFound
	FileSystemNotFound interface{}
	// IncompatibleParameterError
	IncompatibleParameterError interface{}
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
	// ServiceLimitExceeded
	ServiceLimitExceeded interface{}
	// UnsupportedOperation
	UnsupportedOperation interface{}
	// VolumeNotFound
	VolumeNotFound interface{}
}
