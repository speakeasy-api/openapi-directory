/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AlarmConfiguration } from "./alarmconfiguration";
import { AlarmStateInformation } from "./alarmstateinformation";
import { MaintenanceWindowExecutionStatusEnum } from "./maintenancewindowexecutionstatusenum";
import { MaintenanceWindowTaskParameterValueExpression } from "./maintenancewindowtaskparametervalueexpression";
import { MaintenanceWindowTaskTypeEnum } from "./maintenancewindowtasktypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetMaintenanceWindowExecutionTaskResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AlarmConfiguration" })
  @Type(() => AlarmConfiguration)
  alarmConfiguration?: AlarmConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrency" })
  maxConcurrency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxErrors" })
  maxErrors?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Priority" })
  priority?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceRole" })
  serviceRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: MaintenanceWindowExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusDetails" })
  statusDetails?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TaskArn" })
  taskArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TaskExecutionId" })
  taskExecutionId?: string;

  @SpeakeasyMetadata({
    elemType: MaintenanceWindowTaskParameterValueExpression,
    elemDepth: 2,
  })
  @Expose({ name: "TaskParameters" })
  @Transform(
    ({ value }) => {
      const arr: Record<
        string,
        MaintenanceWindowTaskParameterValueExpression
      >[] = [];
      for (const item of value) {
        arr.push(
          objectToClass(item, MaintenanceWindowTaskParameterValueExpression)
        );
      }
      return arr;
    },
    { toClassOnly: true }
  )
  taskParameters?: Record<
    string,
    MaintenanceWindowTaskParameterValueExpression
  >[];

  @SpeakeasyMetadata({ elemType: AlarmStateInformation })
  @Expose({ name: "TriggeredAlarms" })
  @Type(() => AlarmStateInformation)
  triggeredAlarms?: AlarmStateInformation[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: MaintenanceWindowTaskTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "WindowExecutionId" })
  windowExecutionId?: string;
}
