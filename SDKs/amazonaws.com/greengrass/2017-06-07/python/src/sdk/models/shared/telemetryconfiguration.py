"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configurationsyncstatus_enum as shared_configurationsyncstatus_enum
from ..shared import telemetry_enum as shared_telemetry_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TelemetryConfiguration:
    r"""Configuration settings for running telemetry."""
    
    telemetry: shared_telemetry_enum.TelemetryEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Telemetry') }})  
    configuration_sync_status: Optional[shared_configurationsyncstatus_enum.ConfigurationSyncStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationSyncStatus'), 'exclude': lambda f: f is None }})  
    