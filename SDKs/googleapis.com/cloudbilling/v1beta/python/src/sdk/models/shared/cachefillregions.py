"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CacheFillRegionsDestinationRegionEnum(str, Enum):
    r"""The destination region for cache fill."""
    CACHE_FILL_DESTINATION_REGION_UNSPECIFIED = 'CACHE_FILL_DESTINATION_REGION_UNSPECIFIED'
    CACHE_FILL_DESTINATION_REGION_ASIA_PACIFIC = 'CACHE_FILL_DESTINATION_REGION_ASIA_PACIFIC'
    CACHE_FILL_DESTINATION_REGION_EUROPE = 'CACHE_FILL_DESTINATION_REGION_EUROPE'
    CACHE_FILL_DESTINATION_REGION_NORTH_AMERICA = 'CACHE_FILL_DESTINATION_REGION_NORTH_AMERICA'
    CACHE_FILL_DESTINATION_REGION_OCEANIA = 'CACHE_FILL_DESTINATION_REGION_OCEANIA'
    CACHE_FILL_DESTINATION_REGION_SOUTH_AMERICA = 'CACHE_FILL_DESTINATION_REGION_SOUTH_AMERICA'
    CACHE_FILL_DESTINATION_REGION_CHINA = 'CACHE_FILL_DESTINATION_REGION_CHINA'
    CACHE_FILL_DESTINATION_REGION_OTHERS = 'CACHE_FILL_DESTINATION_REGION_OTHERS'

class CacheFillRegionsSourceRegionEnum(str, Enum):
    r"""The source region for cache fill."""
    CACHE_FILL_SOURCE_REGION_UNSPECIFIED = 'CACHE_FILL_SOURCE_REGION_UNSPECIFIED'
    CACHE_FILL_REGION_ASIA_PACIFIC = 'CACHE_FILL_REGION_ASIA_PACIFIC'
    CACHE_FILL_SOURCE_REGION_EUROPE = 'CACHE_FILL_SOURCE_REGION_EUROPE'
    CACHE_FILL_SOURCE_REGION_NORTH_AMERICA = 'CACHE_FILL_SOURCE_REGION_NORTH_AMERICA'
    CACHE_FILL_SOURCE_REGION_OCEANIA = 'CACHE_FILL_SOURCE_REGION_OCEANIA'
    CACHE_FILL_SOURCE_REGION_SOUTH_AMERICA = 'CACHE_FILL_SOURCE_REGION_SOUTH_AMERICA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CacheFillRegions:
    r"""Specifies the regions for Cache Fill."""
    
    destination_region: Optional[CacheFillRegionsDestinationRegionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationRegion'), 'exclude': lambda f: f is None }})
    r"""The destination region for cache fill."""  
    source_region: Optional[CacheFillRegionsSourceRegionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceRegion'), 'exclude': lambda f: f is None }})
    r"""The source region for cache fill."""  
    