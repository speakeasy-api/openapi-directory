// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AnalyticsDeleteAudienceSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type AnalyticsDeleteAudiencePathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the audience
	AudienceName string `pathParam:"style=simple,explode=false,name=audience_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AnalyticsDeleteAudienceRequest struct {
	PathParams AnalyticsDeleteAudiencePathParams
	Security   AnalyticsDeleteAudienceSecurity
}

type AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum string

const (
	AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnumBadRequest          AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnumConflict            AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnumNotAcceptable       AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnumNotFound            AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnumInternalServerError AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnumUnauthorized        AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnumTooManyRequests     AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AnalyticsDeleteAudienceDefaultApplicationJSONError struct {
	Code    AnalyticsDeleteAudienceDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                     `json:"message"`
}

// AnalyticsDeleteAudienceDefaultApplicationJSON - Error code with reason
type AnalyticsDeleteAudienceDefaultApplicationJSON struct {
	Error AnalyticsDeleteAudienceDefaultApplicationJSONError `json:"error"`
}

type AnalyticsDeleteAudienceResponse struct {
	// Error code with reason
	AnalyticsDeleteAudienceDefaultApplicationJSONObject *AnalyticsDeleteAudienceDefaultApplicationJSON
	ContentType                                         string
	StatusCode                                          int
	RawResponse                                         *http.Response
}
