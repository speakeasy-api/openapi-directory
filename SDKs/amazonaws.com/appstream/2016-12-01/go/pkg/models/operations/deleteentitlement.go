// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteEntitlementXAmzTargetEnum
type DeleteEntitlementXAmzTargetEnum string

const (
	DeleteEntitlementXAmzTargetEnumPhotonAdminProxyServiceDeleteEntitlement DeleteEntitlementXAmzTargetEnum = "PhotonAdminProxyService.DeleteEntitlement"
)

func (e DeleteEntitlementXAmzTargetEnum) ToPointer() *DeleteEntitlementXAmzTargetEnum {
	return &e
}

func (e *DeleteEntitlementXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PhotonAdminProxyService.DeleteEntitlement":
		*e = DeleteEntitlementXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteEntitlementXAmzTargetEnum: %v", v)
	}
}

type DeleteEntitlementRequest struct {
	DeleteEntitlementRequest shared.DeleteEntitlementRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               DeleteEntitlementXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteEntitlementResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	DeleteEntitlementResult map[string]interface{}
	// EntitlementNotFoundException
	EntitlementNotFoundException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
