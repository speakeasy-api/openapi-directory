"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MinimalRepository = exports.MinimalRepositoryPermissions = exports.MinimalRepositoryLicense = void 0;
var utils_1 = require("../../../internal/utils");
var codeofconduct_1 = require("./codeofconduct");
var nullablerepository_1 = require("./nullablerepository");
var simpleuser_1 = require("./simpleuser");
var class_transformer_1 = require("class-transformer");
var MinimalRepositoryLicense = /** @class */ (function (_super) {
    __extends(MinimalRepositoryLicense, _super);
    function MinimalRepositoryLicense() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], MinimalRepositoryLicense.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], MinimalRepositoryLicense.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "node_id" }),
        __metadata("design:type", String)
    ], MinimalRepositoryLicense.prototype, "nodeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "spdx_id" }),
        __metadata("design:type", String)
    ], MinimalRepositoryLicense.prototype, "spdxId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], MinimalRepositoryLicense.prototype, "url", void 0);
    return MinimalRepositoryLicense;
}(utils_1.SpeakeasyBase));
exports.MinimalRepositoryLicense = MinimalRepositoryLicense;
var MinimalRepositoryPermissions = /** @class */ (function (_super) {
    __extends(MinimalRepositoryPermissions, _super);
    function MinimalRepositoryPermissions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "admin" }),
        __metadata("design:type", Boolean)
    ], MinimalRepositoryPermissions.prototype, "admin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintain" }),
        __metadata("design:type", Boolean)
    ], MinimalRepositoryPermissions.prototype, "maintain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pull" }),
        __metadata("design:type", Boolean)
    ], MinimalRepositoryPermissions.prototype, "pull", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "push" }),
        __metadata("design:type", Boolean)
    ], MinimalRepositoryPermissions.prototype, "push", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "triage" }),
        __metadata("design:type", Boolean)
    ], MinimalRepositoryPermissions.prototype, "triage", void 0);
    return MinimalRepositoryPermissions;
}(utils_1.SpeakeasyBase));
exports.MinimalRepositoryPermissions = MinimalRepositoryPermissions;
/**
 * Minimal Repository
 */
var MinimalRepository = /** @class */ (function (_super) {
    __extends(MinimalRepository, _super);
    function MinimalRepository() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_forking" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "allowForking", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "anonymous_access_enabled" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "anonymousAccessEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "archive_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "archiveUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "archived" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "archived", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assignees_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "assigneesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blobs_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "blobsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "branches_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "branchesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clone_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "cloneUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code_of_conduct" }),
        (0, class_transformer_1.Type)(function () { return codeofconduct_1.CodeOfConduct; }),
        __metadata("design:type", codeofconduct_1.CodeOfConduct)
    ], MinimalRepository.prototype, "codeOfConduct", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "collaborators_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "collaboratorsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comments_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "commentsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "commits_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "commitsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "compare_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "compareUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contents_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "contentsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contributors_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "contributorsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], MinimalRepository.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "default_branch" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "defaultBranch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "delete_branch_on_merge" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "deleteBranchOnMerge", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deployments_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "deploymentsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disabled" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "disabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "downloads_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "downloadsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "events_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "eventsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fork" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "fork", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forks" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "forks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forks_count" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "forksCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forks_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "forksUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "full_name" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "fullName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "git_commits_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "gitCommitsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "git_refs_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "gitRefsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "git_tags_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "gitTagsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "git_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "gitUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_downloads" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "hasDownloads", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_issues" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "hasIssues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_pages" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "hasPages", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_projects" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "hasProjects", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "has_wiki" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "hasWiki", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "homepage" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "homepage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hooks_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "hooksUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "html_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "htmlUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_template" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "isTemplate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issue_comment_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "issueCommentUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issue_events_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "issueEventsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issues_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "issuesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keys_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "keysUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "labelsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "language" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "language", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "languages_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "languagesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "license" }),
        (0, class_transformer_1.Type)(function () { return MinimalRepositoryLicense; }),
        __metadata("design:type", MinimalRepositoryLicense)
    ], MinimalRepository.prototype, "license", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "merges_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "mergesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "milestones_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "milestonesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mirror_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "mirrorUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network_count" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "networkCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "node_id" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "nodeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notifications_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "notificationsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "open_issues" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "openIssues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "open_issues_count" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "openIssuesCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "owner" }),
        (0, class_transformer_1.Type)(function () { return simpleuser_1.SimpleUser; }),
        __metadata("design:type", simpleuser_1.SimpleUser)
    ], MinimalRepository.prototype, "owner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "permissions" }),
        (0, class_transformer_1.Type)(function () { return MinimalRepositoryPermissions; }),
        __metadata("design:type", MinimalRepositoryPermissions)
    ], MinimalRepository.prototype, "permissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "private" }),
        __metadata("design:type", Boolean)
    ], MinimalRepository.prototype, "private", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pulls_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "pullsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pushed_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], MinimalRepository.prototype, "pushedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "releases_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "releasesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "size" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ssh_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "sshUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stargazers_count" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "stargazersCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stargazers_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "stargazersUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "statuses_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "statusesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subscribers_count" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "subscribersCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subscribers_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "subscribersUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subscription_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "subscriptionUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "svn_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "svnUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "tagsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "teams_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "teamsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "template_repository" }),
        (0, class_transformer_1.Type)(function () { return nullablerepository_1.NullableRepository; }),
        __metadata("design:type", nullablerepository_1.NullableRepository)
    ], MinimalRepository.prototype, "templateRepository", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "topics" }),
        __metadata("design:type", Array)
    ], MinimalRepository.prototype, "topics", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trees_url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "treesUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], MinimalRepository.prototype, "updatedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "url", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "visibility" }),
        __metadata("design:type", String)
    ], MinimalRepository.prototype, "visibility", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "watchers" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "watchers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "watchers_count" }),
        __metadata("design:type", Number)
    ], MinimalRepository.prototype, "watchersCount", void 0);
    return MinimalRepository;
}(utils_1.SpeakeasyBase));
exports.MinimalRepository = MinimalRepository;
