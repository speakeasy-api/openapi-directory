<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IdentitytoolkitRelyingpartyVerifyPasswordRequest - Request to verify the password.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IdentitytoolkitRelyingpartyVerifyPasswordRequest
{
    /**
     * The captcha challenge.
     * 
     * @var ?string $captchaChallenge
     */
	#[\JMS\Serializer\Annotation\SerializedName('captchaChallenge')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $captchaChallenge = null;
    
    /**
     * Response to the captcha.
     * 
     * @var ?string $captchaResponse
     */
	#[\JMS\Serializer\Annotation\SerializedName('captchaResponse')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $captchaResponse = null;
    
    /**
     * GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
     * 
     * @var ?string $delegatedProjectNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('delegatedProjectNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $delegatedProjectNumber = null;
    
    /**
     * The email of the user.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * The GITKit token of the authenticated user.
     * 
     * @var ?string $idToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('idToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idToken = null;
    
    /**
     * Instance id token of the app.
     * 
     * @var ?string $instanceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceId = null;
    
    /**
     * The password inputed by the user.
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
    /**
     * The GITKit token for the non-trusted IDP, which is to be confirmed by the user.
     * 
     * @var ?string $pendingIdToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('pendingIdToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pendingIdToken = null;
    
    /**
     * Whether return sts id token and refresh token instead of gitkit token.
     * 
     * @var ?bool $returnSecureToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnSecureToken')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $returnSecureToken = null;
    
    /**
     * For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
     * 
     * @var ?string $tenantId
     */
	#[\JMS\Serializer\Annotation\SerializedName('tenantId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tenantId = null;
    
    /**
     * Tenant project number to be used for idp discovery.
     * 
     * @var ?string $tenantProjectNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('tenantProjectNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tenantProjectNumber = null;
    
	public function __construct()
	{
		$this->captchaChallenge = null;
		$this->captchaResponse = null;
		$this->delegatedProjectNumber = null;
		$this->email = null;
		$this->idToken = null;
		$this->instanceId = null;
		$this->password = null;
		$this->pendingIdToken = null;
		$this->returnSecureToken = null;
		$this->tenantId = null;
		$this->tenantProjectNumber = null;
	}
}
