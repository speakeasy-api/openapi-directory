<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PackageDTO - The PackageDTO Class.
 * 
 * Contains relevant fields of Package DTO by masking actual Package entity's fields in application.
 *             
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PackageDTO
{
    /**
     * Extra articles list added to the given package.
     * 
     *             
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PackageItemDTO> $addOns
     */
	#[\JMS\Serializer\Annotation\SerializedName('addOns')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PackageItemDTO>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $addOns = null;
    
    /**
     * sum of addon fees.
     * 
     * incoming values for this filed will ignore.
     *             
     * 
     * @var ?float $addonFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('addonFee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $addonFee = null;
    
    /**
     * Boolean value to indicate wheather package is available in all the gyms.
     * 
     *             
     * 
     * @var ?bool $applyForAllGyms
     */
	#[\JMS\Serializer\Annotation\SerializedName('applyForAllGyms')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $applyForAllGyms = null;
    
    /**
     * Gyms list where this package is available.
     * 
     *             
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GymDTO> $availableGyms
     */
	#[\JMS\Serializer\Annotation\SerializedName('availableGyms')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GymDTO>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $availableGyms = null;
    
    /**
     * Range of period a member is bound to the contract if he/she choose this package.
     * 
     *             
     * 
     * @var ?int $bindingPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('bindingPeriod')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bindingPeriod = null;
    
    /**
     * Package created DateTime.
     * 
     *             
     * 
     * @var ?\DateTime $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdDate = null;
    
    /**
     * Package created user.
     * 
     *             
     * 
     * @var ?string $createdUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdUser')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdUser = null;
    
    /**
     * Common descriptions about package.If there are more instructions 
     * 
     *              can be stored as comma separated values.
     *             
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * End date of the package.After that package is not valid for use.
     * 
     *             
     * 
     * @var ?\DateTime $endDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('endDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $endDate = null;
    
    /**
     * No of months the fixed package is valid for sale
     * 
     *             
     * 
     * @var ?int $expireInMonths
     */
	#[\JMS\Serializer\Annotation\SerializedName('expireInMonths')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $expireInMonths = null;
    
    /**
     * What are the facilities, features available for package.ex:- wifi,
     * 
     * ACm etc.Can be stored as comma seperated values.
     *             
     * 
     * @var ?string $features
     */
	#[\JMS\Serializer\Annotation\SerializedName('features')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $features = null;
    
    /**
     * No of months gym member can come without payments.
     * 
     *             
     * 
     * @var ?int $freeMonths
     */
	#[\JMS\Serializer\Annotation\SerializedName('freeMonths')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $freeMonths = null;
    
    /**
     * Instruction to the gym members relevant to the package.
     * 
     *              If there are more instructions can be stored as comma seperated values.
     *             
     * 
     * @var ?string $instructionsToGymUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('instructionsToGymUsers')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instructionsToGymUsers = null;
    
    /**
     * Instruction to the MRM members relevant to the package.
     * 
     *              If there are more instructions can be stored as comma seperated values.
     *             
     * 
     * @var ?string $instructionsToWebUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('instructionsToWebUsers')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instructionsToWebUsers = null;
    
    /**
     * Boolean value to indicate this package is still active or not.
     * 
     *             
     * 
     * @var ?bool $isActive
     */
	#[\JMS\Serializer\Annotation\SerializedName('isActive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isActive = null;
    
    /**
     * Boolean value to indicate ATG transaction from bank is applicable or not.
     * 
     *             
     * 
     * @var ?bool $isAtg
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAtg')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAtg = null;
    
    /**
     * Boolean value to indicate the contract will auto renew after expiration 
     * 
     *              if this package would be chosen.
     *             
     * 
     * @var ?bool $isAutoRenew
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAutoRenew')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAutoRenew = null;
    
    /**
     * Boolean value to indicate if the first month charges is free.
     * 
     *             
     * 
     * @var ?bool $isFirstMonthFree
     */
	#[\JMS\Serializer\Annotation\SerializedName('isFirstMonthFree')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isFirstMonthFree = null;
    
    /**
     * Boolean value to indicate this package has registration fee or not.
     * 
     *             
     * 
     * @var ?bool $isRegistrationFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRegistrationFee')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isRegistrationFee = null;
    
    /**
     * Boolean value to indicate rest amount is applicable or not.
     * 
     *             
     * 
     * @var ?bool $isRestAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRestAmount')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isRestAmount = null;
    
    /**
     * Boolean value to indicate package is visible in Mobile App or not.
     * 
     *             
     * 
     * @var ?bool $isShownInMobile
     */
	#[\JMS\Serializer\Annotation\SerializedName('isShownInMobile')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isShownInMobile = null;
    
    /**
     * Boolean value to indicate package can be sponsored or not by other party.
     * 
     *             
     * 
     * @var ?bool $isSponsorPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('isSponsorPackage')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSponsorPackage = null;
    
    /**
     * If a member join the gym middle of a month via this package, 
     * 
     *              what is the maximum amount of price can be neglected from payment from the member.
     *             
     * 
     * @var ?float $maximumGiveAwayRestAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximumGiveAwayRestAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maximumGiveAwayRestAmount = null;
    
    /**
     * Boolean value to indicate member can add extra addons he wish if he choose this package.
     * 
     *             
     * 
     * @var ?bool $memberCanAddAddOns
     */
	#[\JMS\Serializer\Annotation\SerializedName('memberCanAddAddOns')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $memberCanAddAddOns = null;
    
    /**
     * Boolean value to indicate if member can leave from contract within 
     * 
     *              free period if he/she choose this package.
     *             
     * 
     * @var ?bool $memberCanLeaveWithinFreePeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('memberCanLeaveWithinFreePeriod')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $memberCanLeaveWithinFreePeriod = null;
    
    /**
     * Boolean value to indicate member can remove already added addons if he choose this package.
     * 
     *             
     * 
     * @var ?bool $memberCanRemoveAddOns
     */
	#[\JMS\Serializer\Annotation\SerializedName('memberCanRemoveAddOns')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $memberCanRemoveAddOns = null;
    
    /**
     * Package last modified DateTime.
     * 
     *             
     * 
     * @var ?\DateTime $modifiedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $modifiedDate = null;
    
    /**
     * Package last modified user.
     * 
     *             
     * 
     * @var ?string $modifiedUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedUser')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modifiedUser = null;
    
    /**
     * Monthly installment fee if package is not fixed visit.
     * 
     * addition of the servicefee and addon fees divided by binding period.
     *              read only
     *             
     * 
     * @var ?float $monthlyFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('monthlyFee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $monthlyFee = null;
    
    /**
     * Next Package the contract continue after the binding period of this package.
     * 
     *             
     * 
     * @var ?int $nextPackageNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextPackageNumber')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $nextPackageNumber = null;
    
    /**
     * Maximum Number of installment a member can divide the package price/cost to pay.
     * 
     *             
     * 
     * @var ?int $numberOfInstallments
     */
	#[\JMS\Serializer\Annotation\SerializedName('numberOfInstallments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numberOfInstallments = null;
    
    /**
     * If package is fixed visit type, then how many visits are available for this package.
     * 
     *             
     * 
     * @var ?int $numberOfVisits
     */
	#[\JMS\Serializer\Annotation\SerializedName('numberOfVisits')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numberOfVisits = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('packageId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $packageId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('packageName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $packageName;
    
	#[\JMS\Serializer\Annotation\SerializedName('packageNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $packageNumber = null;
    
    /**
     * Package type can be either fixed visit or unlimited.
     * 
     *             
     * 
     * @var string $packageType
     */
	#[\JMS\Serializer\Annotation\SerializedName('packageType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $packageType;
    
    /**
     * Cost/Price of the single visit to gym.
     * 
     *             
     * 
     * @var ?float $perVisitPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('perVisitPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $perVisitPrice = null;
    
    /**
     * Registartion fee for the package at a gym.
     * 
     *              read only
     *             
     * 
     * @var float $registrationFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('registrationFee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $registrationFee;
    
    /**
     * total Service charge of the package for entire period.
     * 
     *             
     * 
     * @var float $serviceFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceFee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $serviceFee;
    
    /**
     * Boolean value to show this package in MRM system or not.
     * 
     *             
     * 
     * @var ?bool $shownInWeb
     */
	#[\JMS\Serializer\Annotation\SerializedName('shownInWeb')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shownInWeb = null;
    
    /**
     * Start date of the package.
     * 
     *             
     * 
     * @var ?\DateTime $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('startDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $startDate = null;
    
    /**
     * Comma separated string values in case of need of maintain some labels kind of 
     * 
     *              stuff relevant to the package.
     *             
     * 
     * @var ?string $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tags = null;
    
    /**
     * total price for the package including Addon fees, service fee and registration fee.
     * 
     * incoming values for this field will ignore.
     *             
     * 
     * @var ?float $totalPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalPrice = null;
    
	public function __construct()
	{
		$this->addOns = null;
		$this->addonFee = null;
		$this->applyForAllGyms = null;
		$this->availableGyms = null;
		$this->bindingPeriod = null;
		$this->createdDate = null;
		$this->createdUser = null;
		$this->description = null;
		$this->endDate = null;
		$this->expireInMonths = null;
		$this->features = null;
		$this->freeMonths = null;
		$this->instructionsToGymUsers = null;
		$this->instructionsToWebUsers = null;
		$this->isActive = null;
		$this->isAtg = null;
		$this->isAutoRenew = null;
		$this->isFirstMonthFree = null;
		$this->isRegistrationFee = null;
		$this->isRestAmount = null;
		$this->isShownInMobile = null;
		$this->isSponsorPackage = null;
		$this->maximumGiveAwayRestAmount = null;
		$this->memberCanAddAddOns = null;
		$this->memberCanLeaveWithinFreePeriod = null;
		$this->memberCanRemoveAddOns = null;
		$this->modifiedDate = null;
		$this->modifiedUser = null;
		$this->monthlyFee = null;
		$this->nextPackageNumber = null;
		$this->numberOfInstallments = null;
		$this->numberOfVisits = null;
		$this->packageId = null;
		$this->packageName = "";
		$this->packageNumber = null;
		$this->packageType = "";
		$this->perVisitPrice = null;
		$this->registrationFee = 0;
		$this->serviceFee = 0;
		$this->shownInWeb = null;
		$this->startDate = null;
		$this->tags = null;
		$this->totalPrice = null;
	}
}
