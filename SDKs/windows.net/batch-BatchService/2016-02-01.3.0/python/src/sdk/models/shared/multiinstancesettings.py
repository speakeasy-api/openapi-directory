"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resourcefile as shared_resourcefile
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MultiInstanceSettings:
    r"""Settings which specify how to run a multi-instance task. Multi-instance tasks are commonly used to support MPI tasks."""
    
    number_of_instances: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfInstances') }})
    r"""The number of compute nodes required by the multi-instance task."""  
    common_resource_files: Optional[list[shared_resourcefile.ResourceFile]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commonResourceFiles'), 'exclude': lambda f: f is None }})
    r"""A list of files that the Batch service will download before running the coordination command line. The difference between common resource files and task resource files is that common resource files are downloaded for all subtasks including the primary, whereas task resource files are downloaded only for the primary."""  
    coordination_command_line: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('coordinationCommandLine'), 'exclude': lambda f: f is None }})
    r"""The command to run on the compute node instances for coordinating among the subtasks."""  
    