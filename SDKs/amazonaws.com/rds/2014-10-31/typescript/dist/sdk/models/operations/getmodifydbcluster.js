"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETModifyDBClusterResponse = exports.GETModifyDBClusterRequest = exports.GETModifyDBClusterVersionEnum = exports.GETModifyDBClusterServerlessV2ScalingConfiguration = exports.GETModifyDBClusterScalingConfiguration = exports.GETModifyDBClusterCloudwatchLogsExportConfiguration = exports.GETModifyDBClusterActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETModifyDBClusterActionEnum;
(function (GETModifyDBClusterActionEnum) {
    GETModifyDBClusterActionEnum["ModifyDBCluster"] = "ModifyDBCluster";
})(GETModifyDBClusterActionEnum = exports.GETModifyDBClusterActionEnum || (exports.GETModifyDBClusterActionEnum = {}));
/**
 * <p>The configuration setting for the log types to be enabled for export to CloudWatch Logs for a specific DB instance or DB cluster.</p> <p>The <code>EnableLogTypes</code> and <code>DisableLogTypes</code> arrays determine which logs will be exported (or not exported) to CloudWatch Logs. The values within these arrays depend on the DB engine being used.</p> <p>For more information about exporting CloudWatch Logs for Amazon RDS DB instances, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs </a> in the <i>Amazon RDS User Guide</i>.</p> <p>For more information about exporting CloudWatch Logs for Amazon Aurora DB clusters, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch">Publishing Database Logs to Amazon CloudWatch Logs</a> in the <i>Amazon Aurora User Guide</i>.</p>
 */
var GETModifyDBClusterCloudwatchLogsExportConfiguration = /** @class */ (function (_super) {
    __extends(GETModifyDBClusterCloudwatchLogsExportConfiguration, _super);
    function GETModifyDBClusterCloudwatchLogsExportConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=DisableLogTypes" }),
        __metadata("design:type", Array)
    ], GETModifyDBClusterCloudwatchLogsExportConfiguration.prototype, "disableLogTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=EnableLogTypes" }),
        __metadata("design:type", Array)
    ], GETModifyDBClusterCloudwatchLogsExportConfiguration.prototype, "enableLogTypes", void 0);
    return GETModifyDBClusterCloudwatchLogsExportConfiguration;
}(utils_1.SpeakeasyBase));
exports.GETModifyDBClusterCloudwatchLogsExportConfiguration = GETModifyDBClusterCloudwatchLogsExportConfiguration;
/**
 * <p>Contains the scaling configuration of an Aurora Serverless v1 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html">Using Amazon Aurora Serverless v1</a> in the <i>Amazon Aurora User Guide</i>.</p>
 */
var GETModifyDBClusterScalingConfiguration = /** @class */ (function (_super) {
    __extends(GETModifyDBClusterScalingConfiguration, _super);
    function GETModifyDBClusterScalingConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=AutoPause" }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterScalingConfiguration.prototype, "autoPause", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=MaxCapacity" }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterScalingConfiguration.prototype, "maxCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=MinCapacity" }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterScalingConfiguration.prototype, "minCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=SecondsBeforeTimeout" }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterScalingConfiguration.prototype, "secondsBeforeTimeout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=SecondsUntilAutoPause" }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterScalingConfiguration.prototype, "secondsUntilAutoPause", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=TimeoutAction" }),
        __metadata("design:type", String)
    ], GETModifyDBClusterScalingConfiguration.prototype, "timeoutAction", void 0);
    return GETModifyDBClusterScalingConfiguration;
}(utils_1.SpeakeasyBase));
exports.GETModifyDBClusterScalingConfiguration = GETModifyDBClusterScalingConfiguration;
/**
 * <p>Contains the scaling configuration of an Aurora Serverless v2 DB cluster.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless-v2.html">Using Amazon Aurora Serverless v2</a> in the <i>Amazon Aurora User Guide</i>.</p>
 */
var GETModifyDBClusterServerlessV2ScalingConfiguration = /** @class */ (function (_super) {
    __extends(GETModifyDBClusterServerlessV2ScalingConfiguration, _super);
    function GETModifyDBClusterServerlessV2ScalingConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=MaxCapacity" }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterServerlessV2ScalingConfiguration.prototype, "maxCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=MinCapacity" }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterServerlessV2ScalingConfiguration.prototype, "minCapacity", void 0);
    return GETModifyDBClusterServerlessV2ScalingConfiguration;
}(utils_1.SpeakeasyBase));
exports.GETModifyDBClusterServerlessV2ScalingConfiguration = GETModifyDBClusterServerlessV2ScalingConfiguration;
var GETModifyDBClusterVersionEnum;
(function (GETModifyDBClusterVersionEnum) {
    GETModifyDBClusterVersionEnum["TwoThousandAndFourteen1031"] = "2014-10-31";
})(GETModifyDBClusterVersionEnum = exports.GETModifyDBClusterVersionEnum || (exports.GETModifyDBClusterVersionEnum = {}));
var GETModifyDBClusterRequest = /** @class */ (function (_super) {
    __extends(GETModifyDBClusterRequest, _super);
    function GETModifyDBClusterRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=AllocatedStorage",
        }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterRequest.prototype, "allocatedStorage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=AllowMajorVersionUpgrade",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "allowMajorVersionUpgrade", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=ApplyImmediately",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "applyImmediately", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=AutoMinorVersionUpgrade",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "autoMinorVersionUpgrade", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=BacktrackWindow",
        }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterRequest.prototype, "backtrackWindow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=BackupRetentionPeriod",
        }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterRequest.prototype, "backupRetentionPeriod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=CloudwatchLogsExportConfiguration",
        }),
        __metadata("design:type", GETModifyDBClusterCloudwatchLogsExportConfiguration)
    ], GETModifyDBClusterRequest.prototype, "cloudwatchLogsExportConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=CopyTagsToSnapshot",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "copyTagsToSnapshot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DBClusterIdentifier",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "dbClusterIdentifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DBClusterInstanceClass",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "dbClusterInstanceClass", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DBClusterParameterGroupName",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "dbClusterParameterGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DBInstanceParameterGroupName",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "dbInstanceParameterGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DeletionProtection",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "deletionProtection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Domain",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "domain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DomainIAMRoleName",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "domainIAMRoleName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableGlobalWriteForwarding",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "enableGlobalWriteForwarding", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableHttpEndpoint",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "enableHttpEndpoint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableIAMDatabaseAuthentication",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "enableIAMDatabaseAuthentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnablePerformanceInsights",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "enablePerformanceInsights", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EngineVersion",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "engineVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=Iops" }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterRequest.prototype, "iops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=ManageMasterUserPassword",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "manageMasterUserPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MasterUserPassword",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "masterUserPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MasterUserSecretKmsKeyId",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "masterUserSecretKmsKeyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MonitoringInterval",
        }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterRequest.prototype, "monitoringInterval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MonitoringRoleArn",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "monitoringRoleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=NetworkType",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "networkType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=NewDBClusterIdentifier",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "newDBClusterIdentifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=OptionGroupName",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "optionGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PerformanceInsightsKMSKeyId",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "performanceInsightsKMSKeyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PerformanceInsightsRetentionPeriod",
        }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterRequest.prototype, "performanceInsightsRetentionPeriod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=Port" }),
        __metadata("design:type", Number)
    ], GETModifyDBClusterRequest.prototype, "port", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PreferredBackupWindow",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "preferredBackupWindow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PreferredMaintenanceWindow",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "preferredMaintenanceWindow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=RotateMasterUserPassword",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyDBClusterRequest.prototype, "rotateMasterUserPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=ScalingConfiguration",
        }),
        __metadata("design:type", GETModifyDBClusterScalingConfiguration)
    ], GETModifyDBClusterRequest.prototype, "scalingConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=ServerlessV2ScalingConfiguration",
        }),
        __metadata("design:type", GETModifyDBClusterServerlessV2ScalingConfiguration)
    ], GETModifyDBClusterRequest.prototype, "serverlessV2ScalingConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=StorageType",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "storageType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=VpcSecurityGroupIds",
        }),
        __metadata("design:type", Array)
    ], GETModifyDBClusterRequest.prototype, "vpcSecurityGroupIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETModifyDBClusterRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETModifyDBClusterRequest;
}(utils_1.SpeakeasyBase));
exports.GETModifyDBClusterRequest = GETModifyDBClusterRequest;
var GETModifyDBClusterResponse = /** @class */ (function (_super) {
    __extends(GETModifyDBClusterResponse, _super);
    function GETModifyDBClusterResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETModifyDBClusterResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETModifyDBClusterResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETModifyDBClusterResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETModifyDBClusterResponse.prototype, "rawResponse", void 0);
    return GETModifyDBClusterResponse;
}(utils_1.SpeakeasyBase));
exports.GETModifyDBClusterResponse = GETModifyDBClusterResponse;
