// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GetOrderOrderStatusEnum string

const (
	GetOrderOrderStatusEnumActive    GetOrderOrderStatusEnum = "Active"
	GetOrderOrderStatusEnumCancelled GetOrderOrderStatusEnum = "Cancelled"
	GetOrderOrderStatusEnumCompleted GetOrderOrderStatusEnum = "Completed"
)

func (e *GetOrderOrderStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Completed":
		*e = GetOrderOrderStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrderOrderStatusEnum: %s", s)
	}
}

// GetOrder - OK
type GetOrder struct {
	ID                string                  `json:"id"`
	Links             *PaginationLinks        `json:"links,omitempty"`
	NumberOfLineItems int64                   `json:"numberOfLineItems"`
	OrderLineItems    []OrderLineItem         `json:"orderLineItems,omitempty"`
	OrderNumber       string                  `json:"orderNumber"`
	OrderStatus       GetOrderOrderStatusEnum `json:"orderStatus"`
}
