/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ContentRestriction - A restriction for accessing the content of the file.
 */
public class ContentRestriction {
    /**
     * Whether the content of the file is read-only. If a file is read-only, a new revision of the file may not be added, comments may not be added or modified, and the title of the file may not be modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readOnly")
    public Boolean readOnly;

    public ContentRestriction withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }
    
    /**
     * Reason for why the content of the file is restricted. This is only mutable on requests that also set readOnly=true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public ContentRestriction withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * Information about a Drive user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restrictingUser")
    public User restrictingUser;

    public ContentRestriction withRestrictingUser(User restrictingUser) {
        this.restrictingUser = restrictingUser;
        return this;
    }
    
    /**
     * The time at which the content restriction was set (formatted RFC 3339 timestamp). Only populated if readOnly is true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("restrictionTime")
    public OffsetDateTime restrictionTime;

    public ContentRestriction withRestrictionTime(OffsetDateTime restrictionTime) {
        this.restrictionTime = restrictionTime;
        return this;
    }
    
    /**
     * The type of the content restriction. Currently the only possible value is globalContentRestriction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public ContentRestriction withType(String type) {
        this.type = type;
        return this;
    }
    
    public ContentRestriction(){}
}
