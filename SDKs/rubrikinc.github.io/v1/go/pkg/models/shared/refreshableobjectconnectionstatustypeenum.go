// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RefreshableObjectConnectionStatusTypeEnum - Status of the refreshable object. Possible values are "Disconnected" (no communication possible with object), "Refreshing" (able to communicate with object but has not refreshed yet), "Connected" (refreshed the metadata for the object), "BadlyConfigured" (object not configured correctly), "Deleting" (in process of removing the object), and "Remote" (replicated object that we should not connect to).
type RefreshableObjectConnectionStatusTypeEnum string

const (
	RefreshableObjectConnectionStatusTypeEnumDisconnected    RefreshableObjectConnectionStatusTypeEnum = "Disconnected"
	RefreshableObjectConnectionStatusTypeEnumRefreshing      RefreshableObjectConnectionStatusTypeEnum = "Refreshing"
	RefreshableObjectConnectionStatusTypeEnumConnected       RefreshableObjectConnectionStatusTypeEnum = "Connected"
	RefreshableObjectConnectionStatusTypeEnumBadlyConfigured RefreshableObjectConnectionStatusTypeEnum = "BadlyConfigured"
	RefreshableObjectConnectionStatusTypeEnumDeleting        RefreshableObjectConnectionStatusTypeEnum = "Deleting"
	RefreshableObjectConnectionStatusTypeEnumRemote          RefreshableObjectConnectionStatusTypeEnum = "Remote"
)

func (e RefreshableObjectConnectionStatusTypeEnum) ToPointer() *RefreshableObjectConnectionStatusTypeEnum {
	return &e
}

func (e *RefreshableObjectConnectionStatusTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Disconnected":
		fallthrough
	case "Refreshing":
		fallthrough
	case "Connected":
		fallthrough
	case "BadlyConfigured":
		fallthrough
	case "Deleting":
		fallthrough
	case "Remote":
		*e = RefreshableObjectConnectionStatusTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RefreshableObjectConnectionStatusTypeEnum: %v", v)
	}
}
