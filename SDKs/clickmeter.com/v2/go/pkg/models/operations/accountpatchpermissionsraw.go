// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AccountPatchPermissionsRawTypeEnum - Can be "datapoint" or "group"
type AccountPatchPermissionsRawTypeEnum string

const (
	AccountPatchPermissionsRawTypeEnumDatapoint AccountPatchPermissionsRawTypeEnum = "datapoint"
	AccountPatchPermissionsRawTypeEnumGroup     AccountPatchPermissionsRawTypeEnum = "group"
)

func (e AccountPatchPermissionsRawTypeEnum) ToPointer() *AccountPatchPermissionsRawTypeEnum {
	return &e
}

func (e *AccountPatchPermissionsRawTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "datapoint":
		fallthrough
	case "group":
		*e = AccountPatchPermissionsRawTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPatchPermissionsRawTypeEnum: %v", v)
	}
}

type AccountPatchPermissionsRawRequest struct {
	// The patch permission request
	RequestBody []byte `request:"mediaType=text/xml"`
	// Id of the guest
	GuestID int64 `pathParam:"style=simple,explode=false,name=guestId"`
	// Can be "datapoint" or "group"
	Type AccountPatchPermissionsRawTypeEnum `pathParam:"style=simple,explode=false,name=type"`
}

type AccountPatchPermissionsRawResponse struct {
	APICoreResponsesEntityURISystemInt64 *shared.APICoreResponsesEntityURISystemInt64
	Body                                 []byte
	ContentType                          string
	StatusCode                           int
	RawResponse                          *http.Response
}
