// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateProjectClassificationTypeEnum - The type of classifier to create for this project.
type CreateProjectClassificationTypeEnum string

const (
	CreateProjectClassificationTypeEnumMulticlass CreateProjectClassificationTypeEnum = "Multiclass"
	CreateProjectClassificationTypeEnumMultilabel CreateProjectClassificationTypeEnum = "Multilabel"
)

func (e *CreateProjectClassificationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Multiclass":
		fallthrough
	case "Multilabel":
		*e = CreateProjectClassificationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProjectClassificationTypeEnum: %s", s)
	}
}

type CreateProjectRequest struct {
	TrainingKey string `header:"style=simple,explode=false,name=Training-Key"`
	// The type of classifier to create for this project.
	ClassificationType *CreateProjectClassificationTypeEnum `queryParam:"style=form,explode=true,name=classificationType"`
	// The description of the project.
	Description *string `queryParam:"style=form,explode=true,name=description"`
	// The id of the domain to use for this project. Defaults to General.
	DomainID *string `queryParam:"style=form,explode=true,name=domainId"`
	// Name of the project.
	Name string `queryParam:"style=form,explode=true,name=name"`
}

type CreateProjectResponse struct {
	Body        []byte
	ContentType string
	// OK
	Project     *shared.Project
	StatusCode  int
	RawResponse *http.Response
}
