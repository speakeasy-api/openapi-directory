/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RowAccessPolicyReference } from "./rowaccesspolicyreference";
import { Expose, Type } from "class-transformer";

/**
 * Represents access on a subset of rows on the specified table, defined by its filter predicate. Access to the subset of rows is controlled by its IAM policy.
 */
export class RowAccessPolicy extends SpeakeasyBase {
  /**
   * Output only. The time when this row access policy was created, in milliseconds since the epoch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  creationTime?: string;

  /**
   * Output only. A hash of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Required. A SQL boolean expression that represents the rows defined by this row access policy, similar to the boolean expression in a WHERE clause of a SELECT query on a table. References to other tables, routines, and temporary functions are not supported. Examples: region="EU" date_field = CAST('2019-9-27' as DATE) nullable_field is not NULL numeric_field BETWEEN 1.0 AND 5.0
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filterPredicate" })
  filterPredicate?: string;

  /**
   * Output only. The time when this row access policy was last modified, in milliseconds since the epoch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedTime" })
  lastModifiedTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rowAccessPolicyReference" })
  @Type(() => RowAccessPolicyReference)
  rowAccessPolicyReference?: RowAccessPolicyReference;
}
