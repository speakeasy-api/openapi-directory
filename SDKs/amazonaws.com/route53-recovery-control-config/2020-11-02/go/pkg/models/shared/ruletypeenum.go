// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RuleTypeEnum - <p>An enumerated type that determines how the evaluated rules are processed. RuleType can be one of the following:</p> <p>ATLEAST - At least N routing controls must be set. You specify N as the Threshold in the rule configuration.</p> <p>AND - All routing controls must be set. This is a shortcut for "At least N," where N is the total number of controls in the rule.</p> <p>OR - Any control must be set. This is a shortcut for "At least N," where N is 1.</p>
type RuleTypeEnum string

const (
	RuleTypeEnumAtleast RuleTypeEnum = "ATLEAST"
	RuleTypeEnumAnd     RuleTypeEnum = "AND"
	RuleTypeEnumOr      RuleTypeEnum = "OR"
)

func (e RuleTypeEnum) ToPointer() *RuleTypeEnum {
	return &e
}

func (e *RuleTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ATLEAST":
		fallthrough
	case "AND":
		fallthrough
	case "OR":
		*e = RuleTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleTypeEnum: %v", v)
	}
}
