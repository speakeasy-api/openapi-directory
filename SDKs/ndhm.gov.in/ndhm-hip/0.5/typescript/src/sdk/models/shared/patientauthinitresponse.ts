/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthenticationModeEnum } from "./authenticationmodeenum";
import { AuthMeta } from "./authmeta";
import { ErrorT } from "./error";
import { RequestReference } from "./requestreference";
import { Expose, Transform, Type } from "class-transformer";

export class PatientAuthInitResponseAuth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => AuthMeta)
  meta?: AuthMeta;

  /**
   * Subjected to CM specific capability
   *
   * @remarks
   *  1. MOBILE_OTP - for SMS OTP
   *  2. DIRECT - for authentication directly with the patient. e.g. Mobile App, SMS
   *  3. AADHAAR_OTP - for auth using OTP sent to Aadhaar number
   *  4. DEMOGRAPHICS - for auth using demographic verification.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mode" })
  mode: AuthenticationModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "transactionId" })
  transactionId: string;
}

export class PatientAuthInitResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "auth" })
  @Type(() => PatientAuthInitResponseAuth)
  auth?: PatientAuthInitResponseAuth;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorT)
  error?: ErrorT;

  /**
   * a nonce, unique for each HTTP request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resp" })
  @Type(() => RequestReference)
  resp: RequestReference;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;
}
