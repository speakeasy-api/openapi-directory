"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import discountresponse as shared_discountresponse
from ..shared import productresponse as shared_productresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LibraryResponse:
    r"""List of library items"""
    
    deleted_discounts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deletedDiscounts'), 'exclude': lambda f: f is None }})  
    deleted_products: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deletedProducts'), 'exclude': lambda f: f is None }})  
    discounts: Optional[list[shared_discountresponse.DiscountResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discounts'), 'exclude': lambda f: f is None }})  
    from_event_log_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fromEventLogUuid'), 'exclude': lambda f: f is None }})  
    products: Optional[list[shared_productresponse.ProductResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('products'), 'exclude': lambda f: f is None }})  
    until_event_log_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('untilEventLogUuid'), 'exclude': lambda f: f is None }})  
    