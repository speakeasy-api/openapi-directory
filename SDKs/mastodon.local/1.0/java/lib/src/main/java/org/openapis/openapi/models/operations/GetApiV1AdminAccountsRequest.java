/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetApiV1AdminAccountsRequest {
    /**
     * Filter for currently active accounts?
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=active")
    public Boolean active;

    public GetApiV1AdminAccountsRequest withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Filter by the given domain
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=by_domain")
    public String byDomain;

    public GetApiV1AdminAccountsRequest withByDomain(String byDomain) {
        this.byDomain = byDomain;
        return this;
    }
    
    /**
     * Filter for currently disabled accounts?
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=disabled")
    public Boolean disabled;

    public GetApiV1AdminAccountsRequest withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * Display name to search for
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=display_name")
    public String displayName;

    public GetApiV1AdminAccountsRequest withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Lookup a user with this email
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=email")
    public String email;

    public GetApiV1AdminAccountsRequest withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Lookup a user with this IP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ip")
    public String ip;

    public GetApiV1AdminAccountsRequest withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    /**
     * Filter for local accounts?
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=local")
    public Boolean local;

    public GetApiV1AdminAccountsRequest withLocal(Boolean local) {
        this.local = local;
        return this;
    }
    
    /**
     * Filter for currently pending accounts?
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pending")
    public Boolean pending;

    public GetApiV1AdminAccountsRequest withPending(Boolean pending) {
        this.pending = pending;
        return this;
    }
    
    /**
     * Filter for remote accounts?
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=remote")
    public Boolean remote;

    public GetApiV1AdminAccountsRequest withRemote(Boolean remote) {
        this.remote = remote;
        return this;
    }
    
    /**
     * Filter for currently silenced accounts?
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=silenced")
    public Boolean silenced;

    public GetApiV1AdminAccountsRequest withSilenced(Boolean silenced) {
        this.silenced = silenced;
        return this;
    }
    
    /**
     * Filter for staff accounts?
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=staff")
    public Boolean staff;

    public GetApiV1AdminAccountsRequest withStaff(Boolean staff) {
        this.staff = staff;
        return this;
    }
    
    /**
     * Filter for currently suspended accounts?
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=suspended")
    public Boolean suspended;

    public GetApiV1AdminAccountsRequest withSuspended(Boolean suspended) {
        this.suspended = suspended;
        return this;
    }
    
    /**
     * Username to search for
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=username")
    public String username;

    public GetApiV1AdminAccountsRequest withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public GetApiV1AdminAccountsRequest(){}
}
