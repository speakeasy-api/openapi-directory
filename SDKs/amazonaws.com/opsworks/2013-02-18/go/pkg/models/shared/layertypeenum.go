// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LayerTypeEnum string

const (
	LayerTypeEnumAwsFlowRuby      LayerTypeEnum = "aws-flow-ruby"
	LayerTypeEnumEcsCluster       LayerTypeEnum = "ecs-cluster"
	LayerTypeEnumJavaApp          LayerTypeEnum = "java-app"
	LayerTypeEnumLb               LayerTypeEnum = "lb"
	LayerTypeEnumWeb              LayerTypeEnum = "web"
	LayerTypeEnumPhpApp           LayerTypeEnum = "php-app"
	LayerTypeEnumRailsApp         LayerTypeEnum = "rails-app"
	LayerTypeEnumNodejsApp        LayerTypeEnum = "nodejs-app"
	LayerTypeEnumMemcached        LayerTypeEnum = "memcached"
	LayerTypeEnumDbMaster         LayerTypeEnum = "db-master"
	LayerTypeEnumMonitoringMaster LayerTypeEnum = "monitoring-master"
	LayerTypeEnumCustom           LayerTypeEnum = "custom"
)

func (e *LayerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "aws-flow-ruby":
		fallthrough
	case "ecs-cluster":
		fallthrough
	case "java-app":
		fallthrough
	case "lb":
		fallthrough
	case "web":
		fallthrough
	case "php-app":
		fallthrough
	case "rails-app":
		fallthrough
	case "nodejs-app":
		fallthrough
	case "memcached":
		fallthrough
	case "db-master":
		fallthrough
	case "monitoring-master":
		fallthrough
	case "custom":
		*e = LayerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LayerTypeEnum: %s", s)
	}
}
