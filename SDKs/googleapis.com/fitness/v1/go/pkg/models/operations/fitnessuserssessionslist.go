// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FitnessUsersSessionsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption10 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption11 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption12 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption13 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption14 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption15 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption16 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption17 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption18 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption19 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption20 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption21 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption22 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption5 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption6 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption7 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption8 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurityOption9 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersSessionsListSecurity struct {
	Option1  *FitnessUsersSessionsListSecurityOption1  `security:"option"`
	Option10 *FitnessUsersSessionsListSecurityOption10 `security:"option"`
	Option11 *FitnessUsersSessionsListSecurityOption11 `security:"option"`
	Option12 *FitnessUsersSessionsListSecurityOption12 `security:"option"`
	Option13 *FitnessUsersSessionsListSecurityOption13 `security:"option"`
	Option14 *FitnessUsersSessionsListSecurityOption14 `security:"option"`
	Option15 *FitnessUsersSessionsListSecurityOption15 `security:"option"`
	Option16 *FitnessUsersSessionsListSecurityOption16 `security:"option"`
	Option17 *FitnessUsersSessionsListSecurityOption17 `security:"option"`
	Option18 *FitnessUsersSessionsListSecurityOption18 `security:"option"`
	Option19 *FitnessUsersSessionsListSecurityOption19 `security:"option"`
	Option2  *FitnessUsersSessionsListSecurityOption2  `security:"option"`
	Option20 *FitnessUsersSessionsListSecurityOption20 `security:"option"`
	Option21 *FitnessUsersSessionsListSecurityOption21 `security:"option"`
	Option22 *FitnessUsersSessionsListSecurityOption22 `security:"option"`
	Option3  *FitnessUsersSessionsListSecurityOption3  `security:"option"`
	Option4  *FitnessUsersSessionsListSecurityOption4  `security:"option"`
	Option5  *FitnessUsersSessionsListSecurityOption5  `security:"option"`
	Option6  *FitnessUsersSessionsListSecurityOption6  `security:"option"`
	Option7  *FitnessUsersSessionsListSecurityOption7  `security:"option"`
	Option8  *FitnessUsersSessionsListSecurityOption8  `security:"option"`
	Option9  *FitnessUsersSessionsListSecurityOption9  `security:"option"`
}

type FitnessUsersSessionsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// If non-empty, only sessions with these activity types should be returned.
	ActivityType []int64 `queryParam:"style=form,explode=true,name=activityType"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// An RFC3339 timestamp. Only sessions ending between the start and end times will be included in the response. If this time is omitted but startTime is specified, all sessions from startTime to the end of time will be returned.
	EndTime *string `queryParam:"style=form,explode=true,name=endTime"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// If true, and if both startTime and endTime are omitted, session deletions will be returned.
	IncludeDeleted *bool `queryParam:"style=form,explode=true,name=includeDeleted"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The continuation token, which is used for incremental syncing. To get the next batch of changes, set this parameter to the value of nextPageToken from the previous response. The page token is ignored if either start or end time is specified. If none of start time, end time, and the page token is specified, sessions modified in the last 30 days are returned.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// An RFC3339 timestamp. Only sessions ending between the start and end times will be included in the response. If this time is omitted but endTime is specified, all sessions from the start of time up to endTime will be returned.
	StartTime *string `queryParam:"style=form,explode=true,name=startTime"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// List sessions for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type FitnessUsersSessionsListResponse struct {
	ContentType string
	// Successful response
	ListSessionsResponse *shared.ListSessionsResponse
	StatusCode           int
	RawResponse          *http.Response
}
