"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class MeetingStatusSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class MeetingStatusApplicationJSONActionEnum(str, Enum):
    r"""`end` - End a meeting.<br>
    `recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting.
    """
    END = 'end'
    RECOVER = 'recover'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MeetingStatusApplicationJSON:
    
    action: Optional[MeetingStatusApplicationJSONActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})
    r"""`end` - End a meeting.<br>
    `recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting.
    """  
    

@dataclasses.dataclass
class MeetingStatusRequest:
    
    meeting_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'meetingId', 'style': 'simple', 'explode': False }})
    r"""The meeting ID in **long** format. The data type of this field is \\"long\\"(represented as int64 in JSON).
    
    While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
    """  
    request_body: MeetingStatusApplicationJSON = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class MeetingStatusResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    