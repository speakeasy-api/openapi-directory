/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Pools - Swimming pool or recreational water facilities available at the hotel.
 */
public class Pools {
    /**
     * Adult pool. A pool restricted for use by adults only. Can be indoors or outdoors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adultPool")
    public Boolean adultPool;

    public Pools withAdultPool(Boolean adultPool) {
        this.adultPool = adultPool;
        return this;
    }
    
    /**
     * Adult pool exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adultPoolException")
    public PoolsAdultPoolExceptionEnum adultPoolException;

    public Pools withAdultPoolException(PoolsAdultPoolExceptionEnum adultPoolException) {
        this.adultPoolException = adultPoolException;
        return this;
    }
    
    /**
     * Hot tub. A man-made pool containing bubbling water maintained at a higher temperature and circulated by aerating jets for the purpose of soaking, relaxation and hydrotherapy. Can be indoors or outdoors. Not used for active swimming. Also known as Jacuzzi. Hot tub must be in a common area where all guests can access it. Does not apply to room-specific hot tubs that are only accessible to guest occupying that room.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hotTub")
    public Boolean hotTub;

    public Pools withHotTub(Boolean hotTub) {
        this.hotTub = hotTub;
        return this;
    }
    
    /**
     * Hot tub exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hotTubException")
    public PoolsHotTubExceptionEnum hotTubException;

    public Pools withHotTubException(PoolsHotTubExceptionEnum hotTubException) {
        this.hotTubException = hotTubException;
        return this;
    }
    
    /**
     * Indoor pool. A pool located inside the hotel and available for guests to use for swimming and/or soaking. Use may or may not be restricted to adults and/or children.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indoorPool")
    public Boolean indoorPool;

    public Pools withIndoorPool(Boolean indoorPool) {
        this.indoorPool = indoorPool;
        return this;
    }
    
    /**
     * Indoor pool exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indoorPoolException")
    public PoolsIndoorPoolExceptionEnum indoorPoolException;

    public Pools withIndoorPoolException(PoolsIndoorPoolExceptionEnum indoorPoolException) {
        this.indoorPoolException = indoorPoolException;
        return this;
    }
    
    /**
     * Indoor pools count. The sum of all indoor pools at the hotel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indoorPoolsCount")
    public Integer indoorPoolsCount;

    public Pools withIndoorPoolsCount(Integer indoorPoolsCount) {
        this.indoorPoolsCount = indoorPoolsCount;
        return this;
    }
    
    /**
     * Indoor pools count exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indoorPoolsCountException")
    public PoolsIndoorPoolsCountExceptionEnum indoorPoolsCountException;

    public Pools withIndoorPoolsCountException(PoolsIndoorPoolsCountExceptionEnum indoorPoolsCountException) {
        this.indoorPoolsCountException = indoorPoolsCountException;
        return this;
    }
    
    /**
     * Lazy river. A man-made pool or several interconnected recreational pools built to mimic the shape and current of a winding river where guests float in the water on inflated rubber tubes. Can be indoors or outdoors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lazyRiver")
    public Boolean lazyRiver;

    public Pools withLazyRiver(Boolean lazyRiver) {
        this.lazyRiver = lazyRiver;
        return this;
    }
    
    /**
     * Lazy river exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lazyRiverException")
    public PoolsLazyRiverExceptionEnum lazyRiverException;

    public Pools withLazyRiverException(PoolsLazyRiverExceptionEnum lazyRiverException) {
        this.lazyRiverException = lazyRiverException;
        return this;
    }
    
    /**
     * Lifeguard. A trained member of the hotel staff stationed by the hotel's indoor or outdoor swimming area and responsible for the safety of swimming guests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lifeguard")
    public Boolean lifeguard;

    public Pools withLifeguard(Boolean lifeguard) {
        this.lifeguard = lifeguard;
        return this;
    }
    
    /**
     * Lifeguard exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lifeguardException")
    public PoolsLifeguardExceptionEnum lifeguardException;

    public Pools withLifeguardException(PoolsLifeguardExceptionEnum lifeguardException) {
        this.lifeguardException = lifeguardException;
        return this;
    }
    
    /**
     * Outdoor pool. A pool located outside on the grounds of the hotel and available for guests to use for swimming, soaking or recreation. Use may or may not be restricted to adults and/or children.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outdoorPool")
    public Boolean outdoorPool;

    public Pools withOutdoorPool(Boolean outdoorPool) {
        this.outdoorPool = outdoorPool;
        return this;
    }
    
    /**
     * Outdoor pool exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outdoorPoolException")
    public PoolsOutdoorPoolExceptionEnum outdoorPoolException;

    public Pools withOutdoorPoolException(PoolsOutdoorPoolExceptionEnum outdoorPoolException) {
        this.outdoorPoolException = outdoorPoolException;
        return this;
    }
    
    /**
     * Outdoor pools count. The sum of all outdoor pools at the hotel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outdoorPoolsCount")
    public Integer outdoorPoolsCount;

    public Pools withOutdoorPoolsCount(Integer outdoorPoolsCount) {
        this.outdoorPoolsCount = outdoorPoolsCount;
        return this;
    }
    
    /**
     * Outdoor pools count exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outdoorPoolsCountException")
    public PoolsOutdoorPoolsCountExceptionEnum outdoorPoolsCountException;

    public Pools withOutdoorPoolsCountException(PoolsOutdoorPoolsCountExceptionEnum outdoorPoolsCountException) {
        this.outdoorPoolsCountException = outdoorPoolsCountException;
        return this;
    }
    
    /**
     * Pool. The presence of a pool, either indoors or outdoors, for guests to use for swimming and/or soaking. Use may or may not be restricted to adults and/or children.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pool")
    public Boolean pool;

    public Pools withPool(Boolean pool) {
        this.pool = pool;
        return this;
    }
    
    /**
     * Pool exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("poolException")
    public PoolsPoolExceptionEnum poolException;

    public Pools withPoolException(PoolsPoolExceptionEnum poolException) {
        this.poolException = poolException;
        return this;
    }
    
    /**
     * Pools count. The sum of all pools at the hotel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("poolsCount")
    public Integer poolsCount;

    public Pools withPoolsCount(Integer poolsCount) {
        this.poolsCount = poolsCount;
        return this;
    }
    
    /**
     * Pools count exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("poolsCountException")
    public PoolsPoolsCountExceptionEnum poolsCountException;

    public Pools withPoolsCountException(PoolsPoolsCountExceptionEnum poolsCountException) {
        this.poolsCountException = poolsCountException;
        return this;
    }
    
    /**
     * Wading pool. A shallow pool designed for small children to play in. Can be indoors or outdoors. Also known as kiddie pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wadingPool")
    public Boolean wadingPool;

    public Pools withWadingPool(Boolean wadingPool) {
        this.wadingPool = wadingPool;
        return this;
    }
    
    /**
     * Wading pool exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wadingPoolException")
    public PoolsWadingPoolExceptionEnum wadingPoolException;

    public Pools withWadingPoolException(PoolsWadingPoolExceptionEnum wadingPoolException) {
        this.wadingPoolException = wadingPoolException;
        return this;
    }
    
    /**
     * Water park. An aquatic recreation area with a large pool or series of pools that has features such as a water slide or tube, wavepool, fountains, rope swings, and/or obstacle course. Can be indoors or outdoors. Also known as adventure pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waterPark")
    public Boolean waterPark;

    public Pools withWaterPark(Boolean waterPark) {
        this.waterPark = waterPark;
        return this;
    }
    
    /**
     * Water park exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waterParkException")
    public PoolsWaterParkExceptionEnum waterParkException;

    public Pools withWaterParkException(PoolsWaterParkExceptionEnum waterParkException) {
        this.waterParkException = waterParkException;
        return this;
    }
    
    /**
     * Waterslide. A continuously wetted chute positioned by an indoor or outdoor pool which people slide down into the water.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waterslide")
    public Boolean waterslide;

    public Pools withWaterslide(Boolean waterslide) {
        this.waterslide = waterslide;
        return this;
    }
    
    /**
     * Waterslide exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waterslideException")
    public PoolsWaterslideExceptionEnum waterslideException;

    public Pools withWaterslideException(PoolsWaterslideExceptionEnum waterslideException) {
        this.waterslideException = waterslideException;
        return this;
    }
    
    /**
     * Wave pool. A large indoor or outdoor pool with a machine that produces water currents to mimic the ocean's crests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wavePool")
    public Boolean wavePool;

    public Pools withWavePool(Boolean wavePool) {
        this.wavePool = wavePool;
        return this;
    }
    
    /**
     * Wave pool exception.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wavePoolException")
    public PoolsWavePoolExceptionEnum wavePoolException;

    public Pools withWavePoolException(PoolsWavePoolExceptionEnum wavePoolException) {
        this.wavePoolException = wavePoolException;
        return this;
    }
    
    public Pools(){}
}
