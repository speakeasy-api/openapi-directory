/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class RegisterOrganizationDelegatedAdminResponse {
    /**
     * AccountNotFoundException
     */
    
    public Object accountNotFoundException;
    public RegisterOrganizationDelegatedAdminResponse withAccountNotFoundException(Object accountNotFoundException) {
        this.accountNotFoundException = accountNotFoundException;
        return this;
    }
    
    /**
     * AccountRegisteredException
     */
    
    public Object accountRegisteredException;
    public RegisterOrganizationDelegatedAdminResponse withAccountRegisteredException(Object accountRegisteredException) {
        this.accountRegisteredException = accountRegisteredException;
        return this;
    }
    
    /**
     * CannotDelegateManagementAccountException
     */
    
    public Object cannotDelegateManagementAccountException;
    public RegisterOrganizationDelegatedAdminResponse withCannotDelegateManagementAccountException(Object cannotDelegateManagementAccountException) {
        this.cannotDelegateManagementAccountException = cannotDelegateManagementAccountException;
        return this;
    }
    
    /**
     * CloudTrailAccessNotEnabledException
     */
    
    public Object cloudTrailAccessNotEnabledException;
    public RegisterOrganizationDelegatedAdminResponse withCloudTrailAccessNotEnabledException(Object cloudTrailAccessNotEnabledException) {
        this.cloudTrailAccessNotEnabledException = cloudTrailAccessNotEnabledException;
        return this;
    }
    
    /**
     * ConflictException
     */
    
    public Object conflictException;
    public RegisterOrganizationDelegatedAdminResponse withConflictException(Object conflictException) {
        this.conflictException = conflictException;
        return this;
    }
    
    
    public String contentType;
    public RegisterOrganizationDelegatedAdminResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DelegatedAdminAccountLimitExceededException
     */
    
    public Object delegatedAdminAccountLimitExceededException;
    public RegisterOrganizationDelegatedAdminResponse withDelegatedAdminAccountLimitExceededException(Object delegatedAdminAccountLimitExceededException) {
        this.delegatedAdminAccountLimitExceededException = delegatedAdminAccountLimitExceededException;
        return this;
    }
    
    /**
     * InsufficientDependencyServiceAccessPermissionException
     */
    
    public Object insufficientDependencyServiceAccessPermissionException;
    public RegisterOrganizationDelegatedAdminResponse withInsufficientDependencyServiceAccessPermissionException(Object insufficientDependencyServiceAccessPermissionException) {
        this.insufficientDependencyServiceAccessPermissionException = insufficientDependencyServiceAccessPermissionException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;
    public RegisterOrganizationDelegatedAdminResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * NotOrganizationManagementAccountException
     */
    
    public Object notOrganizationManagementAccountException;
    public RegisterOrganizationDelegatedAdminResponse withNotOrganizationManagementAccountException(Object notOrganizationManagementAccountException) {
        this.notOrganizationManagementAccountException = notOrganizationManagementAccountException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;
    public RegisterOrganizationDelegatedAdminResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * OrganizationNotInAllFeaturesModeException
     */
    
    public Object organizationNotInAllFeaturesModeException;
    public RegisterOrganizationDelegatedAdminResponse withOrganizationNotInAllFeaturesModeException(Object organizationNotInAllFeaturesModeException) {
        this.organizationNotInAllFeaturesModeException = organizationNotInAllFeaturesModeException;
        return this;
    }
    
    /**
     * OrganizationsNotInUseException
     */
    
    public Object organizationsNotInUseException;
    public RegisterOrganizationDelegatedAdminResponse withOrganizationsNotInUseException(Object organizationsNotInUseException) {
        this.organizationsNotInUseException = organizationsNotInUseException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> registerOrganizationDelegatedAdminResponse;
    public RegisterOrganizationDelegatedAdminResponse withRegisterOrganizationDelegatedAdminResponse(java.util.Map<String, Object> registerOrganizationDelegatedAdminResponse) {
        this.registerOrganizationDelegatedAdminResponse = registerOrganizationDelegatedAdminResponse;
        return this;
    }
    
    
    public Integer statusCode;
    public RegisterOrganizationDelegatedAdminResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public RegisterOrganizationDelegatedAdminResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;
    public RegisterOrganizationDelegatedAdminResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
}
