/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SubscriptionProductFeature - Container for custom fields of a Subscription Product Feature object.
 * 
 */
public class SubscriptionProductFeature {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public SubscriptionProductFeature withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     *  Date and time when the product feature was added to the subscription.
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public SubscriptionProductFeature withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     *  Description of the subscription product feature.
     * 
     * 
     * **Character limit**: 500
     * 
     * 
     * **Values**: 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public SubscriptionProductFeature withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     *  Unique code of the feature.
     * 
     * 
     * **Character limit**: 255
     * 
     * 
     * **Values**: 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeatureCode")
    public String featureCode;
    public SubscriptionProductFeature withFeatureCode(String featureCode) {
        this.featureCode = featureCode;
        return this;
    }
    
    /**
     *  Internal Zuora ID of the feature.
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: 
     */
    @JsonProperty("FeatureId")
    public String featureId;
    public SubscriptionProductFeature withFeatureId(String featureId) {
        this.featureId = featureId;
        return this;
    }
    
    /**
     *  Name of the feature.
     * 
     * 
     * **Character limit**: 255
     * 
     * 
     * **Values**: 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public SubscriptionProductFeature withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     *  Id of the product rate plan to which the feature belongs.
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RatePlanId")
    public String ratePlanId;
    public SubscriptionProductFeature withRatePlanId(String ratePlanId) {
        this.ratePlanId = ratePlanId;
        return this;
    }
    
    /**
     *  Internal Zuora ID of the user who last updated the subscription product feature.
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public SubscriptionProductFeature withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     *  Date and time when the subscription product feature was last updated.
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public SubscriptionProductFeature withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
