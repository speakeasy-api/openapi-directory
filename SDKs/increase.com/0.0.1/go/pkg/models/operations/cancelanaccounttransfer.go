// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CancelAnAccountTransferRequest struct {
	AccountTransferID string `pathParam:"style=simple,explode=false,name=account_transfer_id"`
}

type CancelAnAccountTransferDefaultApplicationJSON13StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CancelAnAccountTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CancelAnAccountTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON13TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON13TypeEnumRateLimitedError CancelAnAccountTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON13 struct {
	Detail     string                                                    `json:"detail"`
	RetryAfter *int64                                                    `json:"retry_after,omitempty"`
	Status     CancelAnAccountTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                    `json:"title"`
	Type       CancelAnAccountTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON12StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree CancelAnAccountTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CancelAnAccountTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON12TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError CancelAnAccountTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON12 struct {
	Detail string                                                    `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON11StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour CancelAnAccountTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CancelAnAccountTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON11TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError CancelAnAccountTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON11 struct {
	Detail string                                                    `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON10StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON10StatusEnumFourHundred CancelAnAccountTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CancelAnAccountTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON10TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON10TypeEnumMalformedRequestError CancelAnAccountTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON10 struct {
	Detail string                                                    `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON9StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON9StatusEnumFourHundred CancelAnAccountTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CancelAnAccountTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON9TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON9TypeEnumInvalidParametersError CancelAnAccountTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                 `json:"errors,omitempty"`
	Status CancelAnAccountTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON8StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine CancelAnAccountTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CancelAnAccountTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON8TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON8TypeEnumInvalidOperationError CancelAnAccountTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON8 struct {
	Detail string                                                   `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON7StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne CancelAnAccountTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CancelAnAccountTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON7TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CancelAnAccountTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON7 struct {
	Detail string                                                   `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON6StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON6StatusEnumFiveHundred CancelAnAccountTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CancelAnAccountTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON6TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON6TypeEnumInternalServerError CancelAnAccountTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON6 struct {
	Detail string                                                   `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON5StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree CancelAnAccountTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CancelAnAccountTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON5TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CancelAnAccountTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON5 struct {
	Detail string                                                   `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON4StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CancelAnAccountTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CancelAnAccountTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON4TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CancelAnAccountTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON4 struct {
	Detail string                                                   `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON3StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine CancelAnAccountTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CancelAnAccountTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON3TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError CancelAnAccountTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON3 struct {
	Detail string                                                   `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON2StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree CancelAnAccountTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CancelAnAccountTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON2TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CancelAnAccountTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON2 struct {
	Detail string                                                   `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CancelAnAccountTransferDefaultApplicationJSON1StatusEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour CancelAnAccountTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CancelAnAccountTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON1TypeEnum string

const (
	CancelAnAccountTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CancelAnAccountTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CancelAnAccountTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CancelAnAccountTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAnAccountTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CancelAnAccountTransferDefaultApplicationJSON1 struct {
	Detail string                                                   `json:"detail"`
	Status CancelAnAccountTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   CancelAnAccountTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CancelAnAccountTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account Transfer
	AccountTransfer *shared.AccountTransfer
	// Error
	Error interface{}
}
