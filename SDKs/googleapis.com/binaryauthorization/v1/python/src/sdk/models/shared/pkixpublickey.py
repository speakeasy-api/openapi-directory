"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PkixPublicKeySignatureAlgorithmEnum(str, Enum):
    r"""The signature algorithm used to verify a message against a signature using this key. These signature algorithm must match the structure and any object identifiers encoded in `public_key_pem` (i.e. this algorithm must match that of the public key)."""
    SIGNATURE_ALGORITHM_UNSPECIFIED = 'SIGNATURE_ALGORITHM_UNSPECIFIED'
    RSA_PSS_2048_SHA256 = 'RSA_PSS_2048_SHA256'
    RSA_SIGN_PSS_2048_SHA256 = 'RSA_SIGN_PSS_2048_SHA256'
    RSA_PSS_3072_SHA256 = 'RSA_PSS_3072_SHA256'
    RSA_SIGN_PSS_3072_SHA256 = 'RSA_SIGN_PSS_3072_SHA256'
    RSA_PSS_4096_SHA256 = 'RSA_PSS_4096_SHA256'
    RSA_SIGN_PSS_4096_SHA256 = 'RSA_SIGN_PSS_4096_SHA256'
    RSA_PSS_4096_SHA512 = 'RSA_PSS_4096_SHA512'
    RSA_SIGN_PSS_4096_SHA512 = 'RSA_SIGN_PSS_4096_SHA512'
    RSA_SIGN_PKCS1_2048_SHA256 = 'RSA_SIGN_PKCS1_2048_SHA256'
    RSA_SIGN_PKCS1_3072_SHA256 = 'RSA_SIGN_PKCS1_3072_SHA256'
    RSA_SIGN_PKCS1_4096_SHA256 = 'RSA_SIGN_PKCS1_4096_SHA256'
    RSA_SIGN_PKCS1_4096_SHA512 = 'RSA_SIGN_PKCS1_4096_SHA512'
    ECDSA_P256_SHA256 = 'ECDSA_P256_SHA256'
    EC_SIGN_P256_SHA256 = 'EC_SIGN_P256_SHA256'
    ECDSA_P384_SHA384 = 'ECDSA_P384_SHA384'
    EC_SIGN_P384_SHA384 = 'EC_SIGN_P384_SHA384'
    ECDSA_P521_SHA512 = 'ECDSA_P521_SHA512'
    EC_SIGN_P521_SHA512 = 'EC_SIGN_P521_SHA512'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PkixPublicKey:
    r"""A public key in the PkixPublicKey format (see https://tools.ietf.org/html/rfc5280#section-4.1.2.7 for details). Public keys of this type are typically textually encoded using the PEM format."""
    
    public_key_pem: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicKeyPem'), 'exclude': lambda f: f is None }})
    r"""A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13"""  
    signature_algorithm: Optional[PkixPublicKeySignatureAlgorithmEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signatureAlgorithm'), 'exclude': lambda f: f is None }})
    r"""The signature algorithm used to verify a message against a signature using this key. These signature algorithm must match the structure and any object identifiers encoded in `public_key_pem` (i.e. this algorithm must match that of the public key)."""  
    