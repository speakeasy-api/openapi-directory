"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetOrganizationClientsBandwidthUsageHistoryRequest:
    
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})  
    t0: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 't0', 'style': 'form', 'explode': True }})
    r"""The beginning of the timespan for the data."""  
    t1: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 't1', 'style': 'form', 'explode': True }})
    r"""The end of the timespan for the data. t1 can be a maximum of 31 days after t0."""  
    timespan: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'timespan', 'style': 'form', 'explode': True }})
    r"""The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetOrganizationClientsBandwidthUsageHistory200ApplicationJSON:
    
    downstream: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downstream'), 'exclude': lambda f: f is None }})
    r"""Downloaded data, in mbps."""  
    total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""Total bandwidth usage, in mbps."""  
    ts: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ts'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Timestamp for the bandwidth usage snapshot."""  
    upstream: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upstream'), 'exclude': lambda f: f is None }})
    r"""Uploaded data, in mbps."""  
    

@dataclasses.dataclass
class GetOrganizationClientsBandwidthUsageHistoryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_organization_clients_bandwidth_usage_history_200_application_json_objects: Optional[list[GetOrganizationClientsBandwidthUsageHistory200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    