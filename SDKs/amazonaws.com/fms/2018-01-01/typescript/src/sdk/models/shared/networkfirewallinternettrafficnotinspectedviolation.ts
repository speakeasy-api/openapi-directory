/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExpectedRoute } from "./expectedroute";
import { Route } from "./route";
import { Expose, Type } from "class-transformer";

/**
 * Violation detail for the subnet for which internet traffic that hasn't been inspected.
 */
export class NetworkFirewallInternetTrafficNotInspectedViolation extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Route })
  @Expose({ name: "ActualFirewallSubnetRoutes" })
  @Type(() => Route)
  actualFirewallSubnetRoutes?: Route[];

  @SpeakeasyMetadata({ elemType: Route })
  @Expose({ name: "ActualInternetGatewayRoutes" })
  @Type(() => Route)
  actualInternetGatewayRoutes?: Route[];

  @SpeakeasyMetadata()
  @Expose({ name: "CurrentFirewallSubnetRouteTable" })
  currentFirewallSubnetRouteTable?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrentInternetGatewayRouteTable" })
  currentInternetGatewayRouteTable?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExpectedFirewallEndpoint" })
  expectedFirewallEndpoint?: string;

  @SpeakeasyMetadata({ elemType: ExpectedRoute })
  @Expose({ name: "ExpectedFirewallSubnetRoutes" })
  @Type(() => ExpectedRoute)
  expectedFirewallSubnetRoutes?: ExpectedRoute[];

  @SpeakeasyMetadata({ elemType: ExpectedRoute })
  @Expose({ name: "ExpectedInternetGatewayRoutes" })
  @Type(() => ExpectedRoute)
  expectedInternetGatewayRoutes?: ExpectedRoute[];

  @SpeakeasyMetadata()
  @Expose({ name: "FirewallSubnetId" })
  firewallSubnetId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InternetGatewayId" })
  internetGatewayId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsRouteTableUsedInDifferentAZ" })
  isRouteTableUsedInDifferentAZ?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "RouteTableId" })
  routeTableId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetAvailabilityZone" })
  subnetAvailabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetId" })
  subnetId?: string;

  @SpeakeasyMetadata({ elemType: Route })
  @Expose({ name: "ViolatingRoutes" })
  @Type(() => Route)
  violatingRoutes?: Route[];

  @SpeakeasyMetadata()
  @Expose({ name: "VpcId" })
  vpcId?: string;
}
