/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum UsersGetDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class UsersGetDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: UsersGetDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class UsersGetDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => UsersGetDefaultApplicationJSONError)
  error: UsersGetDefaultApplicationJSONError;
}

/**
 * The creation origin of this user
 */
export enum UsersGet200ApplicationJSONOriginEnum {
  Appcenter = "appcenter",
  Hockeyapp = "hockeyapp",
  Codepush = "codepush",
}

export enum UsersGet200ApplicationJSONPermissionsEnum {
  Manager = "manager",
  Developer = "developer",
  Viewer = "viewer",
  Tester = "tester",
}

/**
 * Success
 */
export class UsersGet200ApplicationJSON extends SpeakeasyBase {
  /**
   * The avatar URL of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl?: string;

  /**
   * User is required to send an old password in order to change the password.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "can_change_password" })
  canChangePassword?: boolean;

  /**
   * The full name of the user. Might for example be first and last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The email address of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * The unique id (UUID) of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The unique name that is used to identify the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The creation origin of this user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: UsersGet200ApplicationJSONOriginEnum;

  /**
   * The permissions the user has for the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: UsersGet200ApplicationJSONPermissionsEnum[];
}

export class UsersGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  usersGet200ApplicationJSONObject?: UsersGet200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  usersGetDefaultApplicationJSONObject?: UsersGetDefaultApplicationJSON;
}
