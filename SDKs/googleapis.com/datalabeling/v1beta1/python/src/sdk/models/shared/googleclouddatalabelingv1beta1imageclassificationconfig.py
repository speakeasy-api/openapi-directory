"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum(str, Enum):
    r"""Optional. The type of how to aggregate answers."""
    STRING_AGGREGATION_TYPE_UNSPECIFIED = 'STRING_AGGREGATION_TYPE_UNSPECIFIED'
    MAJORITY_VOTE = 'MAJORITY_VOTE'
    UNANIMOUS_VOTE = 'UNANIMOUS_VOTE'
    NO_AGGREGATION = 'NO_AGGREGATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatalabelingV1beta1ImageClassificationConfig:
    r"""Config for image classification human labeling task."""
    
    allow_multi_label: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowMultiLabel'), 'exclude': lambda f: f is None }})
    r"""Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image."""  
    annotation_spec_set: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotationSpecSet'), 'exclude': lambda f: f is None }})
    r"""Required. Annotation spec set resource name."""  
    answer_aggregation_type: Optional[GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answerAggregationType'), 'exclude': lambda f: f is None }})
    r"""Optional. The type of how to aggregate answers."""  
    