"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class UserUpdateUserRequest:
    
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AccountNumber', 'style': 'form', 'explode': True }})
    r"""Account number of the user.It can be any stakeholder of the application.even can be a gym."""  
    external_entity_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ExternalEntityNumber', 'style': 'form', 'explode': True }})
    r"""Entity number that make a relationship with BOX API DB."""  
    guardian: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Guardian', 'style': 'form', 'explode': True }})
    r"""Gaurdian of the this user if he/she is under 18 years old."""  
    gym_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'GymNumber', 'style': 'form', 'explode': True }})
    r"""If this user is a gym, then the gym number."""  
    introduce_by: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'IntroduceBy', 'style': 'form', 'explode': True }})
    r"""If Someone introduced this user to the system, then that user's UserId."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Name', 'style': 'form', 'explode': True }})
    r"""Name of the user."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Number', 'style': 'form', 'explode': True }})
    r"""Unique number maintain by application to idenify user."""  
    type_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'TypeId', 'style': 'form', 'explode': True }})
    r"""Type of the user."""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'UserId', 'style': 'form', 'explode': True }})
    r"""Indentity number(primary key) for user object. Generated in DB table when inserting a record."""  
    

@dataclasses.dataclass
class UserUpdateUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    