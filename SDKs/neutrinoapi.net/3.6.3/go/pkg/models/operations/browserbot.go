// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type BrowserBotRequestBody struct {
	// Delay in seconds to wait before capturing any page data, executing selectors or JavaScript
	Delay *int `form:"name=delay"`
	// Execute JavaScript on the website. This parameter accepts JavaScript as either a string containing JavaScript or for sending multiple separate statements a JSON array or POST array can also be used. If a statement returns any value it will be returned in the 'exec-results' response. You can also use the following specially defined user interaction functions: <br> <br> <div> sleep(seconds); Just wait/sleep for the specified number of seconds. <br>click('selector'); Click on the first element matching the given selector. <br>focus('selector'); Focus on the first element matching the given selector. <br>keys('characters'); Send the specified keyboard characters. Use click() or focus() first to send keys to a specific element. <br>enter(); Send the Enter key. <br>tab(); Send the Tab key. <br> </div>
	Exec []string `form:"name=exec"`
	// Ignore any TLS/SSL certificate errors and load the page anyway
	IgnoreCertificateErrors *bool `form:"name=ignore-certificate-errors"`
	// Extract content from the page DOM using this selector. Commonly known as a CSS selector, you can find a good reference <a href="https://www.w3schools.com/cssref/css_selectors.asp">here</a>
	Selector *string `form:"name=selector"`
	// Timeout in seconds. Give up if still trying to load the page after this number of seconds
	Timeout *int `form:"name=timeout"`
	// The URL to load
	URL string `form:"name=url"`
	// Override the browsers default user-agent string with this one
	UserAgent *string `form:"name=user-agent"`
}

type BrowserBotRequest struct {
	Request BrowserBotRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
}

type BrowserBotResponse struct {
	// Your API request has been rejected. Check error code for details
	APIError           *shared.APIError
	BrowserBotResponse *shared.BrowserBotResponse
	ContentType        string
	StatusCode         int
	RawResponse        *http.Response
}
