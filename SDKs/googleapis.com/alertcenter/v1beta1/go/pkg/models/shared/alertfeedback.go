// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AlertFeedbackTypeEnum - Required. The type of the feedback.
type AlertFeedbackTypeEnum string

const (
	AlertFeedbackTypeEnumAlertFeedbackTypeUnspecified AlertFeedbackTypeEnum = "ALERT_FEEDBACK_TYPE_UNSPECIFIED"
	AlertFeedbackTypeEnumNotUseful                    AlertFeedbackTypeEnum = "NOT_USEFUL"
	AlertFeedbackTypeEnumSomewhatUseful               AlertFeedbackTypeEnum = "SOMEWHAT_USEFUL"
	AlertFeedbackTypeEnumVeryUseful                   AlertFeedbackTypeEnum = "VERY_USEFUL"
)

func (e AlertFeedbackTypeEnum) ToPointer() *AlertFeedbackTypeEnum {
	return &e
}

func (e *AlertFeedbackTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALERT_FEEDBACK_TYPE_UNSPECIFIED":
		fallthrough
	case "NOT_USEFUL":
		fallthrough
	case "SOMEWHAT_USEFUL":
		fallthrough
	case "VERY_USEFUL":
		*e = AlertFeedbackTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AlertFeedbackTypeEnum: %v", v)
	}
}

// AlertFeedback - A customer feedback about an alert.
type AlertFeedback struct {
	// Output only. The alert identifier.
	AlertID *string `json:"alertId,omitempty"`
	// Output only. The time this feedback was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The unique identifier of the Google Workspace account of the customer.
	CustomerID *string `json:"customerId,omitempty"`
	// Output only. The email of the user that provided the feedback.
	Email *string `json:"email,omitempty"`
	// Output only. The unique identifier for the feedback.
	FeedbackID *string `json:"feedbackId,omitempty"`
	// Required. The type of the feedback.
	Type *AlertFeedbackTypeEnum `json:"type,omitempty"`
}
