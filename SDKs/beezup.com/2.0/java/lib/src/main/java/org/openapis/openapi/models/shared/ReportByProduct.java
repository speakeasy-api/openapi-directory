/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ReportByProduct {
    /**
     * The channel count where this product can be enabled
     */
    @JsonProperty("channelCount")
    public Long channelCount;

    public ReportByProduct withChannelCount(Long channelCount) {
        this.channelCount = channelCount;
        return this;
    }
    
    /**
     * The click count for this product
     */
    @JsonProperty("clickCount")
    public Long clickCount;

    public ReportByProduct withClickCount(Long clickCount) {
        this.clickCount = clickCount;
        return this;
    }
    
    /**
     * The cost for this product
     */
    @JsonProperty("cost")
    public Double cost;

    public ReportByProduct withCost(Double cost) {
        this.cost = cost;
        return this;
    }
    
    /**
     * The count of channel where this product is enabled
     */
    @JsonProperty("enabledOnChannelCount")
    public Long enabledOnChannelCount;

    public ReportByProduct withEnabledOnChannelCount(Long enabledOnChannelCount) {
        this.enabledOnChannelCount = enabledOnChannelCount;
        return this;
    }
    
    /**
     * Depending if the report concerned multiple channels or one channel.
     */
    @JsonProperty("links")
    public ReportByProductLinks links;

    public ReportByProduct withLinks(ReportByProductLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * The margin for this product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("margin")
    public Double margin;

    public ReportByProduct withMargin(Double margin) {
        this.margin = margin;
        return this;
    }
    
    /**
     * The order count for this product
     */
    @JsonProperty("orderCount")
    public Long orderCount;

    public ReportByProduct withOrderCount(Long orderCount) {
        this.orderCount = orderCount;
        return this;
    }
    
    /**
     * The performance indicator based on the performance indicator formula indicated in the request for this product
     */
    @JsonProperty("performanceIndicator")
    public Double performanceIndicator;

    public ReportByProduct withPerformanceIndicator(Double performanceIndicator) {
        this.performanceIndicator = performanceIndicator;
        return this;
    }
    
    /**
     * The basic information related to a product
     */
    @JsonProperty("product")
    public BeezUPCommonProductBasicInfo product;

    public ReportByProduct withProduct(BeezUPCommonProductBasicInfo product) {
        this.product = product;
        return this;
    }
    
    /**
     * The Return On Investment for this product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roi")
    public Double roi;

    public ReportByProduct withRoi(Double roi) {
        this.roi = roi;
        return this;
    }
    
    /**
     * The product sold count count for this product
     */
    @JsonProperty("soldProductCount")
    public Long soldProductCount;

    public ReportByProduct withSoldProductCount(Long soldProductCount) {
        this.soldProductCount = soldProductCount;
        return this;
    }
    
    /**
     * The total sales for this product
     */
    @JsonProperty("totalSales")
    public Double totalSales;

    public ReportByProduct withTotalSales(Double totalSales) {
        this.totalSales = totalSales;
        return this;
    }
    
    public ReportByProduct(@JsonProperty("channelCount") Long channelCount, @JsonProperty("clickCount") Long clickCount, @JsonProperty("cost") Double cost, @JsonProperty("enabledOnChannelCount") Long enabledOnChannelCount, @JsonProperty("links") ReportByProductLinks links, @JsonProperty("orderCount") Long orderCount, @JsonProperty("performanceIndicator") Double performanceIndicator, @JsonProperty("product") BeezUPCommonProductBasicInfo product, @JsonProperty("soldProductCount") Long soldProductCount, @JsonProperty("totalSales") Double totalSales) {
        this.channelCount = channelCount;
        this.clickCount = clickCount;
        this.cost = cost;
        this.enabledOnChannelCount = enabledOnChannelCount;
        this.links = links;
        this.orderCount = orderCount;
        this.performanceIndicator = performanceIndicator;
        this.product = product;
        this.soldProductCount = soldProductCount;
        this.totalSales = totalSales;
  }
}
