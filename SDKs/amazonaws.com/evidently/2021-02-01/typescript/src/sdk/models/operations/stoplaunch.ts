/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Specify whether to consider the launch as <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.
 */
export enum StopLaunchRequestBodyDesiredStateEnum {
  Completed = "COMPLETED",
  Cancelled = "CANCELLED",
}

export class StopLaunchRequestBody extends SpeakeasyBase {
  /**
   * Specify whether to consider the launch as <code>COMPLETED</code> or <code>CANCELLED</code> after it stops.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desiredState" })
  desiredState?: StopLaunchRequestBodyDesiredStateEnum;

  /**
   * A string that describes why you are stopping the launch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

export class StopLaunchRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: StopLaunchRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name of the launch to stop.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=launch",
  })
  launch: string;

  /**
   * The name or ARN of the project that contains the launch that you want to stop.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project",
  })
  project: string;
}

export class StopLaunchResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  stopLaunchResponse?: shared.StopLaunchResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
