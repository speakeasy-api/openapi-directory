// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRejectVpcEndpointConnectionsActionEnum
type GETRejectVpcEndpointConnectionsActionEnum string

const (
	GETRejectVpcEndpointConnectionsActionEnumRejectVpcEndpointConnections GETRejectVpcEndpointConnectionsActionEnum = "RejectVpcEndpointConnections"
)

func (e *GETRejectVpcEndpointConnectionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RejectVpcEndpointConnections":
		*e = GETRejectVpcEndpointConnectionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRejectVpcEndpointConnectionsActionEnum: %s", s)
	}
}

// GETRejectVpcEndpointConnectionsVersionEnum
type GETRejectVpcEndpointConnectionsVersionEnum string

const (
	GETRejectVpcEndpointConnectionsVersionEnumTwoThousandAndSixteen1115 GETRejectVpcEndpointConnectionsVersionEnum = "2016-11-15"
)

func (e *GETRejectVpcEndpointConnectionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETRejectVpcEndpointConnectionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRejectVpcEndpointConnectionsVersionEnum: %s", s)
	}
}

type GETRejectVpcEndpointConnectionsQueryParams struct {
	Action GETRejectVpcEndpointConnectionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the service.
	ServiceID string                                     `queryParam:"style=form,explode=true,name=ServiceId"`
	Version   GETRejectVpcEndpointConnectionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The IDs of the VPC endpoints.
	VpcEndpointID []string `queryParam:"style=form,explode=true,name=VpcEndpointId"`
}

type GETRejectVpcEndpointConnectionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRejectVpcEndpointConnectionsRequest struct {
	QueryParams GETRejectVpcEndpointConnectionsQueryParams
	Headers     GETRejectVpcEndpointConnectionsHeaders
}

type GETRejectVpcEndpointConnectionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
