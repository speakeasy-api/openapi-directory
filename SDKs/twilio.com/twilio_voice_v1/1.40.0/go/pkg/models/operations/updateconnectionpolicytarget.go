// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateConnectionPolicyTargetServerList = []string{
	"https://voice.twilio.com",
}

type UpdateConnectionPolicyTargetSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateConnectionPolicyTargetPathParams struct {
	// The SID of the Connection Policy that owns the Target.
	ConnectionPolicySid string `pathParam:"style=simple,explode=false,name=ConnectionPolicySid"`
	// The unique string that we created to identify the Target resource to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

type UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest struct {
	// Whether the Target is enabled.
	Enabled *bool `form:"name=Enabled"`
	// A descriptive string that you create to describe the resource. It is not unique and can be up to 255 characters long.
	FriendlyName *string `form:"name=FriendlyName"`
	// The relative importance of the target. Can be an integer from 0 to 65535, inclusive. The lowest number represents the most important target.
	Priority *int64 `form:"name=Priority"`
	// The SIP address you want Twilio to route your calls to. This must be a `sip:` schema. `sips` is NOT supported.
	Target *string `form:"name=Target"`
	// The value that determines the relative share of the load the Target should receive compared to other Targets with the same priority. Can be an integer from 1 to 65535, inclusive. Targets with higher values receive more load than those with lower ones with the same priority.
	Weight *int64 `form:"name=Weight"`
}

type UpdateConnectionPolicyTargetRequest struct {
	PathParams UpdateConnectionPolicyTargetPathParams
	Request    *UpdateConnectionPolicyTargetUpdateConnectionPolicyTargetRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateConnectionPolicyTargetSecurity
	ServerURL  *string
}

type UpdateConnectionPolicyTargetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	VoiceV1ConnectionPolicyConnectionPolicyTarget *shared.VoiceV1ConnectionPolicyConnectionPolicyTarget
}
