// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetProjectDocumentPathParams struct {
	// Document ID
	DocumentID int64 `pathParam:"style=simple,explode=false,name=documentId"`
	// Project ID
	ProjectID int64 `pathParam:"style=simple,explode=false,name=projectId"`
}

type GetProjectDocumentWithEnum string

const (
	GetProjectDocumentWithEnumPreview GetProjectDocumentWithEnum = "preview"
	GetProjectDocumentWithEnumEditors GetProjectDocumentWithEnum = "editors"
)

func (e *GetProjectDocumentWithEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "preview":
		fallthrough
	case "editors":
		*e = GetProjectDocumentWithEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProjectDocumentWithEnum: %s", s)
	}
}

type GetProjectDocumentQueryParams struct {
	// Attach further information. Possible values 'preview' to fetch temporary preview URLs for Box.com or native PDF. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
	With []GetProjectDocumentWithEnum `queryParam:"style=form,explode=true,name=with[]"`
}

type GetProjectDocumentRequest struct {
	PathParams  GetProjectDocumentPathParams
	QueryParams GetProjectDocumentQueryParams
}

type GetProjectDocumentResponse struct {
	ContentType string
	// Document model
	Document *shared.Document
	// DocumentNotFound
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
