/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TeamEventStatus - Successful response
 */
public class TeamEventStatus {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alliance")
    public TeamEventStatusAlliance alliance;
    public TeamEventStatus withAlliance(TeamEventStatusAlliance alliance) {
        this.alliance = alliance;
        return this;
    }
    
    /**
     * An HTML formatted string suitable for display to the user containing the team's alliance pick status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alliance_status_str")
    public String allianceStatusStr;
    public TeamEventStatus withAllianceStatusStr(String allianceStatusStr) {
        this.allianceStatusStr = allianceStatusStr;
        return this;
    }
    
    /**
     * TBA match key for the last match the team played in at this event, or null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_match_key")
    public String lastMatchKey;
    public TeamEventStatus withLastMatchKey(String lastMatchKey) {
        this.lastMatchKey = lastMatchKey;
        return this;
    }
    
    /**
     * TBA match key for the next match the team is scheduled to play in at this event, or null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_match_key")
    public String nextMatchKey;
    public TeamEventStatus withNextMatchKey(String nextMatchKey) {
        this.nextMatchKey = nextMatchKey;
        return this;
    }
    
    /**
     * An HTML formatted string suitable for display to the user containing the team's overall status summary of the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overall_status_str")
    public String overallStatusStr;
    public TeamEventStatus withOverallStatusStr(String overallStatusStr) {
        this.overallStatusStr = overallStatusStr;
        return this;
    }
    
    /**
     * Playoff status for this team, may be null if the team did not make playoffs, or playoffs have not begun.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playoff")
    public TeamEventStatusPlayoff playoff;
    public TeamEventStatus withPlayoff(TeamEventStatusPlayoff playoff) {
        this.playoff = playoff;
        return this;
    }
    
    /**
     * An HTML formatter string suitable for display to the user containing the team's playoff status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playoff_status_str")
    public String playoffStatusStr;
    public TeamEventStatus withPlayoffStatusStr(String playoffStatusStr) {
        this.playoffStatusStr = playoffStatusStr;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("qual")
    public TeamEventStatusRank qual;
    public TeamEventStatus withQual(TeamEventStatusRank qual) {
        this.qual = qual;
        return this;
    }
    
}
