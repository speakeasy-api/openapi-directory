/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SearchPlaceIndexForSuggestionsRequestBody {
    /**
     * &lt;p&gt;An optional parameter that indicates a preference for place suggestions that are closer to a specified position.&lt;/p&gt; &lt;p&gt; If provided, this parameter must contain a pair of numbers. The first number represents the X coordinate, or longitude; the second number represents the Y coordinate, or latitude.&lt;/p&gt; &lt;p&gt;For example, &lt;code&gt;[-123.1174, 49.2847]&lt;/code&gt; represents the position with longitude &lt;code&gt;-123.1174&lt;/code&gt; and latitude &lt;code&gt;49.2847&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt; &lt;code&gt;BiasPosition&lt;/code&gt; and &lt;code&gt;FilterBBox&lt;/code&gt; are mutually exclusive. Specifying both options results in an error. &lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BiasPosition")
    public Double[] biasPosition;
    public SearchPlaceIndexForSuggestionsRequestBody withBiasPosition(Double[] biasPosition) {
        this.biasPosition = biasPosition;
        return this;
    }
    
    /**
     * &lt;p&gt;An optional parameter that limits the search results by returning only suggestions within a specified bounding box.&lt;/p&gt; &lt;p&gt; If provided, this parameter must contain a total of four consecutive numbers in two pairs. The first pair of numbers represents the X and Y coordinates (longitude and latitude, respectively) of the southwest corner of the bounding box; the second pair of numbers represents the X and Y coordinates (longitude and latitude, respectively) of the northeast corner of the bounding box.&lt;/p&gt; &lt;p&gt;For example, &lt;code&gt;[-12.7935, -37.4835, -12.0684, -36.9542]&lt;/code&gt; represents a bounding box where the southwest corner has longitude &lt;code&gt;-12.7935&lt;/code&gt; and latitude &lt;code&gt;-37.4835&lt;/code&gt;, and the northeast corner has longitude &lt;code&gt;-12.0684&lt;/code&gt; and latitude &lt;code&gt;-36.9542&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt; &lt;code&gt;FilterBBox&lt;/code&gt; and &lt;code&gt;BiasPosition&lt;/code&gt; are mutually exclusive. Specifying both options results in an error. &lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FilterBBox")
    public Double[] filterBBox;
    public SearchPlaceIndexForSuggestionsRequestBody withFilterBBox(Double[] filterBBox) {
        this.filterBBox = filterBBox;
        return this;
    }
    
    /**
     * &lt;p&gt;An optional parameter that limits the search results by returning only suggestions within the provided list of countries.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use the &lt;a href="https://www.iso.org/iso-3166-country-codes.html"&gt;ISO 3166&lt;/a&gt; 3-digit country code. For example, Australia uses three upper-case characters: &lt;code&gt;AUS&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FilterCountries")
    public String[] filterCountries;
    public SearchPlaceIndexForSuggestionsRequestBody withFilterCountries(String[] filterCountries) {
        this.filterCountries = filterCountries;
        return this;
    }
    
    /**
     * &lt;p&gt;The preferred language used to return results. The value must be a valid &lt;a href="https://tools.ietf.org/search/bcp47"&gt;BCP 47&lt;/a&gt; language tag, for example, &lt;code&gt;en&lt;/code&gt; for English.&lt;/p&gt; &lt;p&gt;This setting affects the languages used in the results. If no language is specified, or not supported for a particular result, the partner automatically chooses a language for the result.&lt;/p&gt; &lt;p&gt;For an example, we'll use the Greek language. You search for &lt;code&gt;Athens, Gr&lt;/code&gt; to get suggestions with the &lt;code&gt;language&lt;/code&gt; parameter set to &lt;code&gt;en&lt;/code&gt;. The results found will most likely be returned as &lt;code&gt;Athens, Greece&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If you set the &lt;code&gt;language&lt;/code&gt; parameter to &lt;code&gt;el&lt;/code&gt;, for Greek, then the result found will more likely be returned as &lt;code&gt;\u0391\u03b8\u03ae\u03bd\u03b1, \u0395\u03bb\u03bb\u03ac\u03b4\u03b1&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;If the data provider does not have a value for Greek, the result will be in a language that the provider does support.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Language")
    public String language;
    public SearchPlaceIndexForSuggestionsRequestBody withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * &lt;p&gt;An optional parameter. The maximum number of results returned per request. &lt;/p&gt; &lt;p&gt;The default: &lt;code&gt;5&lt;/code&gt; &lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;
    public SearchPlaceIndexForSuggestionsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The free-form partial text to use to generate place suggestions. For example, &lt;code&gt;eiffel tow&lt;/code&gt;.
     */
    @JsonProperty("Text")
    public String text;
    public SearchPlaceIndexForSuggestionsRequestBody withText(String text) {
        this.text = text;
        return this;
    }
    
}
