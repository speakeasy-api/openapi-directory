// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnum string

const (
	ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnumXML  ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnum = "xml"
	ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnumJSON ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnum = "json"
)

func (e *ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnum: %s", s)
	}
}

type ProjectedPlayerGameStatsByPlayerWDfsSalariesRequest struct {
	// The date of the game(s).
	// <br>Examples: <code>2017-02-27</code>, <code>2017-09-01</code>.
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerGameStatsByPlayerWDfsSalariesFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Player ID.
	// Example:<code>90026231</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
}

type ProjectedPlayerGameStatsByPlayerWDfsSalariesResponse struct {
	ContentType           string
	PlayerGameProjections []shared.PlayerGameProjection
	StatusCode            int
	RawResponse           *http.Response
}
