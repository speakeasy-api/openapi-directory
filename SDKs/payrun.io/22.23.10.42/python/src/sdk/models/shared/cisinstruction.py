"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CisInstructionCisInstructionPayFrequencyEnum(str, Enum):
    r"""The cis instructions' pay frequency"""
    MONTHLY = 'Monthly'
    WEEKLY = 'Weekly'

class CisInstructionCisInstructionUOMEnum(str, Enum):
    r"""The cis instructions' u o m"""
    NOT_SET = 'NotSet'
    MINUTE = 'Minute'
    HOUR = 'Hour'
    DAY = 'Day'
    WEEK = 'Week'
    MONTH = 'Month'
    YEAR = 'Year'
    UNIT = 'Unit'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CisInstructionCisInstruction:
    
    cis_line_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CisLineTag'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' cis line tag"""  
    cis_line_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CisLineType'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' cis line type"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' description"""  
    pay_frequency: Optional[CisInstructionCisInstructionPayFrequencyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PayFrequency'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' pay frequency"""  
    period_end: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PeriodEnd'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' period end"""  
    period_start: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PeriodStart'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' period start"""  
    tax_year_end: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxYearEnd'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' tax year end"""  
    tax_year_start: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxYearStart'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' tax year start"""  
    units: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Units'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' units"""  
    uom: Optional[CisInstructionCisInstructionUOMEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UOM'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' u o m"""  
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Value'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' value"""  
    vat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VAT'), 'exclude': lambda f: f is None }})
    r"""The cis instructions' v a t"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CisInstruction:
    r"""The cis instruction object."""
    
    cis_instruction: Optional[CisInstructionCisInstruction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CisInstruction'), 'exclude': lambda f: f is None }})  
    