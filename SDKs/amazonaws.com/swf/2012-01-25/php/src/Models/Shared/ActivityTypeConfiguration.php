<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ActivityTypeConfiguration - Configuration settings registered with the activity type.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ActivityTypeConfiguration
{
	#[\JMS\Serializer\Annotation\SerializedName('defaultTaskHeartbeatTimeout')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultTaskHeartbeatTimeout = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('defaultTaskList')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TaskList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TaskList $defaultTaskList = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('defaultTaskPriority')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultTaskPriority = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('defaultTaskScheduleToCloseTimeout')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultTaskScheduleToCloseTimeout = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('defaultTaskScheduleToStartTimeout')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultTaskScheduleToStartTimeout = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('defaultTaskStartToCloseTimeout')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultTaskStartToCloseTimeout = null;
    
	public function __construct()
	{
		$this->defaultTaskHeartbeatTimeout = null;
		$this->defaultTaskList = null;
		$this->defaultTaskPriority = null;
		$this->defaultTaskScheduleToCloseTimeout = null;
		$this->defaultTaskScheduleToStartTimeout = null;
		$this->defaultTaskStartToCloseTimeout = null;
	}
}
