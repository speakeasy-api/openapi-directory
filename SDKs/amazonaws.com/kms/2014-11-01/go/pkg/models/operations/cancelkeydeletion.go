// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CancelKeyDeletionXAmzTargetEnum
type CancelKeyDeletionXAmzTargetEnum string

const (
	CancelKeyDeletionXAmzTargetEnumTrentServiceCancelKeyDeletion CancelKeyDeletionXAmzTargetEnum = "TrentService.CancelKeyDeletion"
)

func (e CancelKeyDeletionXAmzTargetEnum) ToPointer() *CancelKeyDeletionXAmzTargetEnum {
	return &e
}

func (e *CancelKeyDeletionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TrentService.CancelKeyDeletion":
		*e = CancelKeyDeletionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelKeyDeletionXAmzTargetEnum: %v", v)
	}
}

type CancelKeyDeletionRequest struct {
	CancelKeyDeletionRequest shared.CancelKeyDeletionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               CancelKeyDeletionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CancelKeyDeletionResponse struct {
	// Success
	CancelKeyDeletionResponse *shared.CancelKeyDeletionResponse
	ContentType               string
	// DependencyTimeoutException
	DependencyTimeoutException interface{}
	// InvalidArnException
	InvalidArnException interface{}
	// KMSInternalException
	KMSInternalException interface{}
	// KMSInvalidStateException
	KMSInvalidStateException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
