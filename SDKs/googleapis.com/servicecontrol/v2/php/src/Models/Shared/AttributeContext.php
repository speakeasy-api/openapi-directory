<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AttributeContext - This message defines the standard attribute vocabulary for Google APIs. An attribute is a piece of metadata that describes an activity on a network service. For example, the size of an HTTP request, or the status code of an HTTP response. Each attribute has a type and a name, which is logically defined as a proto message field in `AttributeContext`. The field type becomes the attribute type, and the field path becomes the attribute name. For example, the attribute `source.ip` maps to field `AttributeContext.source.ip`. This message definition is guaranteed not to have any wire breaking change. So you can use it directly for passing attributes across different systems. NOTE: Different system may generate different subset of attributes. Please verify the system specification before relying on an attribute generated a system.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AttributeContext
{
    /**
     * This message defines attributes associated with API operations, such as a network API request. The terminology is based on the conventions used by Google APIs, Istio, and OpenAPI.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Api $api
     */
	#[\JMS\Serializer\Annotation\SerializedName('api')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Api')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Api $api = null;
    
    /**
     * This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Peer $destination
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Peer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Peer $destination = null;
    
    /**
     * Supports extensions for advanced use cases, such as logs and metrics.
     * 
     * @var ?array<array<string, mixed>> $extensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('extensions')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $extensions = null;
    
    /**
     * This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Peer $origin
     */
	#[\JMS\Serializer\Annotation\SerializedName('origin')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Peer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Peer $origin = null;
    
    /**
     * This message defines attributes for an HTTP request. If the actual request is not an HTTP request, the runtime system should try to map the actual request to an equivalent HTTP request.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Request $request
     */
	#[\JMS\Serializer\Annotation\SerializedName('request')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Request')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Request $request = null;
    
    /**
     * This message defines core attributes for a resource. A resource is an addressable (named) entity provided by the destination service. For example, a file stored on a network storage service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Resource $resource
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Resource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Resource $resource = null;
    
    /**
     * This message defines attributes for a typical network response. It generally models semantics of an HTTP response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Response $response
     */
	#[\JMS\Serializer\Annotation\SerializedName('response')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Response')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Response $response = null;
    
    /**
     * This message defines attributes for a node that handles a network request. The node can be either a service or an application that sends, forwards, or receives the request. Service peers should fill in `principal` and `labels` as appropriate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Peer $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Peer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Peer $source = null;
    
	public function __construct()
	{
		$this->api = null;
		$this->destination = null;
		$this->extensions = null;
		$this->origin = null;
		$this->request = null;
		$this->resource = null;
		$this->response = null;
		$this->source = null;
	}
}
