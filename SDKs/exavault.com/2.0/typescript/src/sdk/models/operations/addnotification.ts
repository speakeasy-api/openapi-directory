/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Type of action be notified about. Notifications will only be fired for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)
 */
export enum AddNotificationAddNotificationRequestBodyActionEnum {
  Upload = "upload",
  Download = "download",
  Delete = "delete",
  All = "all",
}

/**
 * What kind of notification you're making. Valid choices are:
 *
 * @remarks
 *
 * - **file** to monitor activity for a file resource
 * - **folder** to monitor activity for a folder resource
 */
export enum AddNotificationAddNotificationRequestBodyTypeEnum {
  File = "file",
  Folder = "folder",
}

export class AddNotificationAddNotificationRequestBody extends SpeakeasyBase {
  /**
   * Type of action be notified about. Notifications will only be fired for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: AddNotificationAddNotificationRequestBodyActionEnum;

  /**
   * Custom message to include in notification emails.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Email addresses to send notification emails to. If not specified, sends to the current user's email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recipients" })
  recipients?: string[];

  /**
   * Resources for this notification. See details on [how to specify resources](#section/Identifying-Resources) above.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  resource: string;

  /**
   * Set to true if the user should be notified by email when the notification is triggered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sendEmail" })
  sendEmail: boolean;

  /**
   * What kind of notification you're making. Valid choices are:
   *
   * @remarks
   *
   * - **file** to monitor activity for a file resource
   * - **folder** to monitor activity for a folder resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AddNotificationAddNotificationRequestBodyTypeEnum;

  /**
   * Determines which users' actions should trigger the notification.
   *
   * @remarks
   *
   * Rather than listing  individual users, you can also use 3 special options:
   *
   * - **notice\_user\_all** for activity by any user or share recipient
   * - **notice\_user\_all\_users** for activity only by user accounts
   * - **notice\_user\_all\_recipient** for activity only by share recipients
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usernames" })
  usernames: string[];
}

export class AddNotificationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: AddNotificationAddNotificationRequestBody;

  /**
   * Access token required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-access-token",
  })
  evAccessToken: string;

  /**
   * API Key required to make API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-api-key",
  })
  evApiKey: string;
}

export class AddNotificationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful Operation
   */
  @SpeakeasyMetadata()
  notificationResponse?: shared.NotificationResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
