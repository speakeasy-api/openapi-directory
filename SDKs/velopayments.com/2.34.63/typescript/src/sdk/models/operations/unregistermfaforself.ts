/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class UnregisterMFAForSelfRequest extends SpeakeasyBase {
  /**
   * Bearer token authorization leg of validate
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Authorization",
  })
  authorization?: string;

  /**
   * The MFA Type to unregister
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  selfMFATypeUnregisterRequest: shared.SelfMFATypeUnregisterRequest;
}

export class UnregisterMFAForSelfResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid request. See Error message payload for details of failure
   */
  @SpeakeasyMetadata()
  inlineResponse400?: shared.InlineResponse400;

  /**
   * Invalid access token. May be expired or invalid
   */
  @SpeakeasyMetadata()
  inlineResponse401?: shared.InlineResponse401;

  /**
   * The authentication does not have permissions to access the resource
   *
   * @remarks
   * This usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions
   *
   */
  @SpeakeasyMetadata()
  inlineResponse403?: shared.InlineResponse403;
}
