// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateCustomRoutingEndpointGroupXAmzTargetEnum
type CreateCustomRoutingEndpointGroupXAmzTargetEnum string

const (
	CreateCustomRoutingEndpointGroupXAmzTargetEnumGlobalAcceleratorV20180706CreateCustomRoutingEndpointGroup CreateCustomRoutingEndpointGroupXAmzTargetEnum = "GlobalAccelerator_V20180706.CreateCustomRoutingEndpointGroup"
)

func (e *CreateCustomRoutingEndpointGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GlobalAccelerator_V20180706.CreateCustomRoutingEndpointGroup":
		*e = CreateCustomRoutingEndpointGroupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCustomRoutingEndpointGroupXAmzTargetEnum: %s", s)
	}
}

type CreateCustomRoutingEndpointGroupRequest struct {
	CreateCustomRoutingEndpointGroupRequest shared.CreateCustomRoutingEndpointGroupRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                           *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                       *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                          *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                       *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                           *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                       *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                              CreateCustomRoutingEndpointGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateCustomRoutingEndpointGroupResponse struct {
	// AcceleratorNotFoundException
	AcceleratorNotFoundException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateCustomRoutingEndpointGroupResponse *shared.CreateCustomRoutingEndpointGroupResponse
	// EndpointGroupAlreadyExistsException
	EndpointGroupAlreadyExistsException interface{}
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// InvalidPortRangeException
	InvalidPortRangeException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ListenerNotFoundException
	ListenerNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
