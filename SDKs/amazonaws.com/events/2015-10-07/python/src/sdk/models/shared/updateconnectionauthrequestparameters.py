"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import connectionhttpparameters as shared_connectionhttpparameters
from ..shared import updateconnectionapikeyauthrequestparameters as shared_updateconnectionapikeyauthrequestparameters
from ..shared import updateconnectionbasicauthrequestparameters as shared_updateconnectionbasicauthrequestparameters
from ..shared import updateconnectionoauthrequestparameters as shared_updateconnectionoauthrequestparameters
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateConnectionAuthRequestParameters:
    r"""Contains the additional parameters to use for the connection."""
    
    api_key_auth_parameters: Optional[shared_updateconnectionapikeyauthrequestparameters.UpdateConnectionAPIKeyAuthRequestParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApiKeyAuthParameters'), 'exclude': lambda f: f is None }})  
    basic_auth_parameters: Optional[shared_updateconnectionbasicauthrequestparameters.UpdateConnectionBasicAuthRequestParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BasicAuthParameters'), 'exclude': lambda f: f is None }})  
    invocation_http_parameters: Optional[shared_connectionhttpparameters.ConnectionHTTPParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvocationHttpParameters'), 'exclude': lambda f: f is None }})  
    o_auth_parameters: Optional[shared_updateconnectionoauthrequestparameters.UpdateConnectionOAuthRequestParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OAuthParameters'), 'exclude': lambda f: f is None }})  
    