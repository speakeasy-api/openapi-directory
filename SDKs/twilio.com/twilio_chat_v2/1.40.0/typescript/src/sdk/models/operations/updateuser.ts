/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateUserServerList = ["https://chat.twilio.com"] as const;

export class UpdateUserSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateUserUpdateUserRequest extends SpeakeasyBase {
  /**
   * A valid JSON string that contains application-specific data.
   */
  @SpeakeasyMetadata({ data: "form, name=Attributes" })
  attributes?: string;

  /**
   * A descriptive string that you create to describe the resource. It is often used for display purposes.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * The SID of the [Role](https://www.twilio.com/docs/chat/rest/role-resource) to assign to the User.
   */
  @SpeakeasyMetadata({ data: "form, name=RoleSid" })
  roleSid?: string;
}

export class UpdateUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateUserUpdateUserRequest;

  /**
   * The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to update the User resource in.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;

  /**
   * The SID of the User resource to update. This value can be either the `sid` or the `identity` of the User resource to update.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;

  /**
   * The X-Twilio-Webhook-Enabled HTTP request header
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Twilio-Webhook-Enabled",
  })
  xTwilioWebhookEnabled?: shared.UserEnumWebhookEnabledTypeEnum;
}

export class UpdateUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  chatV2ServiceUser?: shared.ChatV2ServiceUser;
}
