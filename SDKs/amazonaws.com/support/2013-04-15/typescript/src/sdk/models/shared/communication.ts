/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttachmentDetails } from "./attachmentdetails";
import { Expose, Type } from "class-transformer";

/**
 * A communication associated with a support case. The communication consists of the case ID, the message body, attachment information, the submitter of the communication, and the date and time of the communication.
 */
export class Communication extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AttachmentDetails })
  @Expose({ name: "attachmentSet" })
  @Type(() => AttachmentDetails)
  attachmentSet?: AttachmentDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "caseId" })
  caseId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "submittedBy" })
  submittedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeCreated" })
  timeCreated?: string;
}
