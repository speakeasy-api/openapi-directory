/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PaymentDebitMemoApplicationUnapplyRequestType } from "./paymentdebitmemoapplicationunapplyrequesttype";
import { PaymentInvoiceApplicationUnapplyRequestType } from "./paymentinvoiceapplicationunapplyrequesttype";
import { Expose, Transform, Type } from "class-transformer";

export class UnapplyPaymentType extends SpeakeasyBase {
  /**
   * Container for debit memos. The maximum number of debit memos is 1,000.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    elemType: PaymentDebitMemoApplicationUnapplyRequestType,
  })
  @Expose({ name: "debitMemos" })
  @Type(() => PaymentDebitMemoApplicationUnapplyRequestType)
  debitMemos?: PaymentDebitMemoApplicationUnapplyRequestType[];

  /**
   * The date when the payment is unapplied, in `yyyy-mm-dd` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  effectiveDate?: Date;

  /**
   * Container for invoices. The maximum number of invoice is 1,000.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: PaymentInvoiceApplicationUnapplyRequestType })
  @Expose({ name: "invoices" })
  @Type(() => PaymentInvoiceApplicationUnapplyRequestType)
  invoices?: PaymentInvoiceApplicationUnapplyRequestType[];
}
