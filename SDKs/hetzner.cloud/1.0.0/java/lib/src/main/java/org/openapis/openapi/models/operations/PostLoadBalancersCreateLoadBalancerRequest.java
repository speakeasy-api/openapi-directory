/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostLoadBalancersCreateLoadBalancerRequest {
    /**
     * Algorithm of the Load Balancer
     */
    @JsonProperty("algorithm")
    public PostLoadBalancersCreateLoadBalancerRequestLoadBalancerAlgorithm algorithm;

    public PostLoadBalancersCreateLoadBalancerRequest withAlgorithm(PostLoadBalancersCreateLoadBalancerRequestLoadBalancerAlgorithm algorithm) {
        this.algorithm = algorithm;
        return this;
    }
    
    /**
     * User-defined labels (key-value pairs)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public PostLoadBalancersCreateLoadBalancerRequestLabels labels;

    public PostLoadBalancersCreateLoadBalancerRequest withLabels(PostLoadBalancersCreateLoadBalancerRequestLabels labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * ID or name of the Load Balancer type this Load Balancer should be created with
     */
    @JsonProperty("load_balancer_type")
    public String loadBalancerType;

    public PostLoadBalancersCreateLoadBalancerRequest withLoadBalancerType(String loadBalancerType) {
        this.loadBalancerType = loadBalancerType;
        return this;
    }
    
    /**
     * ID or name of Location to create Load Balancer in
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;

    public PostLoadBalancersCreateLoadBalancerRequest withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Name of the Load Balancer
     */
    @JsonProperty("name")
    public String name;

    public PostLoadBalancersCreateLoadBalancerRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * ID of the network the Load Balancer should be attached to on creation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public Long network;

    public PostLoadBalancersCreateLoadBalancerRequest withNetwork(Long network) {
        this.network = network;
        return this;
    }
    
    /**
     * Name of network zone
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network_zone")
    public String networkZone;

    public PostLoadBalancersCreateLoadBalancerRequest withNetworkZone(String networkZone) {
        this.networkZone = networkZone;
        return this;
    }
    
    /**
     * Enable or disable the public interface of the Load Balancer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public_interface")
    public Boolean publicInterface;

    public PostLoadBalancersCreateLoadBalancerRequest withPublicInterface(Boolean publicInterface) {
        this.publicInterface = publicInterface;
        return this;
    }
    
    /**
     * Array of services
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("services")
    public PostLoadBalancersCreateLoadBalancerRequestLoadBalancerService[] services;

    public PostLoadBalancersCreateLoadBalancerRequest withServices(PostLoadBalancersCreateLoadBalancerRequestLoadBalancerService[] services) {
        this.services = services;
        return this;
    }
    
    /**
     * Array of targets
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targets")
    public PostLoadBalancersCreateLoadBalancerRequestLoadBalancerTarget[] targets;

    public PostLoadBalancersCreateLoadBalancerRequest withTargets(PostLoadBalancersCreateLoadBalancerRequestLoadBalancerTarget[] targets) {
        this.targets = targets;
        return this;
    }
    
    public PostLoadBalancersCreateLoadBalancerRequest(@JsonProperty("algorithm") PostLoadBalancersCreateLoadBalancerRequestLoadBalancerAlgorithm algorithm, @JsonProperty("load_balancer_type") String loadBalancerType, @JsonProperty("name") String name) {
        this.algorithm = algorithm;
        this.loadBalancerType = loadBalancerType;
        this.name = name;
  }
}
