"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddocumentaiv1beta3ocrconfighints as shared_googleclouddocumentaiv1beta3ocrconfighints
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDocumentaiV1beta3OcrConfig:
    r"""Config for Document OCR."""
    
    advanced_ocr_options: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advancedOcrOptions'), 'exclude': lambda f: f is None }})
    r"""A list of advanced OCR options to further fine-tune OCR behavior. Current valid values are: - \\"legacy_layout\\": a heuristics layout detection algorithm, which serves as an alternative to the current ML-based layout detection algorithm. Customers can choose the best suitable layout algorithm based on their situation."""  
    enable_image_quality_scores: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableImageQualityScores'), 'exclude': lambda f: f is None }})
    r"""Enables intelligent document quality scores after OCR. Can help with diagnosing why OCR responses are of poor quality for a given input. Adds additional latency comparable to regular OCR to the process call."""  
    enable_native_pdf_parsing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableNativePdfParsing'), 'exclude': lambda f: f is None }})
    r"""Enables special handling for PDFs with existing text information. Results in better text extraction quality in such PDF inputs."""  
    enable_symbol: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableSymbol'), 'exclude': lambda f: f is None }})
    r"""Includes symbol level OCR information if set to true."""  
    hints: Optional[shared_googleclouddocumentaiv1beta3ocrconfighints.GoogleCloudDocumentaiV1beta3OcrConfigHints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hints'), 'exclude': lambda f: f is None }})
    r"""Hints for OCR Engine"""  
    