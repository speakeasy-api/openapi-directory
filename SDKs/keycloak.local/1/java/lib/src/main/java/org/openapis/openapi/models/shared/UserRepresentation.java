/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserRepresentation - success
 */
public class UserRepresentation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access")
    public java.util.Map<String, Object> access;
    public UserRepresentation withAccess(java.util.Map<String, Object> access) {
        this.access = access;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public java.util.Map<String, Object> attributes;
    public UserRepresentation withAttributes(java.util.Map<String, Object> attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientConsents")
    public UserConsentRepresentation[] clientConsents;
    public UserRepresentation withClientConsents(UserConsentRepresentation[] clientConsents) {
        this.clientConsents = clientConsents;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientRoles")
    public java.util.Map<String, Object> clientRoles;
    public UserRepresentation withClientRoles(java.util.Map<String, Object> clientRoles) {
        this.clientRoles = clientRoles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdTimestamp")
    public Long createdTimestamp;
    public UserRepresentation withCreatedTimestamp(Long createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentials")
    public CredentialRepresentation[] credentials;
    public UserRepresentation withCredentials(CredentialRepresentation[] credentials) {
        this.credentials = credentials;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableableCredentialTypes")
    public String[] disableableCredentialTypes;
    public UserRepresentation withDisableableCredentialTypes(String[] disableableCredentialTypes) {
        this.disableableCredentialTypes = disableableCredentialTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public UserRepresentation withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailVerified")
    public Boolean emailVerified;
    public UserRepresentation withEmailVerified(Boolean emailVerified) {
        this.emailVerified = emailVerified;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public UserRepresentation withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("federatedIdentities")
    public FederatedIdentityRepresentation[] federatedIdentities;
    public UserRepresentation withFederatedIdentities(FederatedIdentityRepresentation[] federatedIdentities) {
        this.federatedIdentities = federatedIdentities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("federationLink")
    public String federationLink;
    public UserRepresentation withFederationLink(String federationLink) {
        this.federationLink = federationLink;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstName")
    public String firstName;
    public UserRepresentation withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groups")
    public String[] groups;
    public UserRepresentation withGroups(String[] groups) {
        this.groups = groups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public UserRepresentation withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastName")
    public String lastName;
    public UserRepresentation withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notBefore")
    public Integer notBefore;
    public UserRepresentation withNotBefore(Integer notBefore) {
        this.notBefore = notBefore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin")
    public String origin;
    public UserRepresentation withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("realmRoles")
    public String[] realmRoles;
    public UserRepresentation withRealmRoles(String[] realmRoles) {
        this.realmRoles = realmRoles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requiredActions")
    public String[] requiredActions;
    public UserRepresentation withRequiredActions(String[] requiredActions) {
        this.requiredActions = requiredActions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("self")
    public String self;
    public UserRepresentation withSelf(String self) {
        this.self = self;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccountClientId")
    public String serviceAccountClientId;
    public UserRepresentation withServiceAccountClientId(String serviceAccountClientId) {
        this.serviceAccountClientId = serviceAccountClientId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;
    public UserRepresentation withUsername(String username) {
        this.username = username;
        return this;
    }
    
}
