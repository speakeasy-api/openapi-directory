/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const GetComputedPricebypricetableServerList = [
  "https://api.vtex.com/{account}/pricing",
] as const;

export class GetComputedPricebypricetableRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Brand ID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=brandId",
  })
  brandId: number;

  /**
   * Category ID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=categoryIds",
  })
  categoryIds: number;

  /**
   * SKU ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=itemId",
  })
  itemId: number;

  /**
   * SKU Price Table Name.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=priceTableId",
  })
  priceTableId: string;

  /**
   * SKU quantity.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quantity",
  })
  quantity: number;
}

export class GetComputedPricebypricetableResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getcomputedprice?: shared.Getcomputedprice;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
