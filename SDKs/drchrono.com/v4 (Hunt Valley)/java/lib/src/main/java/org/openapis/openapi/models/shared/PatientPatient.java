/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PatientPatient {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;
    public PatientPatient withAddress(String address) {
        this.address = address;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public PatientPatient withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Should follow format "xxx-xx-xxxx"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fax")
    public String fax;
    public PatientPatient withFax(String fax) {
        this.fax = fax;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    public String firstName;
    public PatientPatient withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    public String lastName;
    public PatientPatient withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middle_name")
    public String middleName;
    public PatientPatient withMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("npi")
    public String npi;
    public PatientPatient withNpi(String npi) {
        this.npi = npi;
        return this;
    }
    
    /**
     * Should follow format "xxx-xx-xxxx"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;
    public PatientPatient withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provider_number")
    public String providerNumber;
    public PatientPatient withProviderNumber(String providerNumber) {
        this.providerNumber = providerNumber;
        return this;
    }
    
    /**
     * Can be one of following, `''`, `'0B'`(State License #), `'1G'`(Provider UPIN #), `'G2'`(Provider Commercial #)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provider_qualifier")
    public PatientPatientProviderQualifierEnum providerQualifier;
    public PatientPatient withProviderQualifier(PatientPatientProviderQualifierEnum providerQualifier) {
        this.providerQualifier = providerQualifier;
        return this;
    }
    
    /**
     * Can be one of following, `''`, `'Acupuncture'`, `'Advanced Practice Midwife'`, `'Aesthetic Medicine'`, `'Aesthetician'`, `'Allergist/Immunologist'`, `'Anesthesiologist'`, `'Cardiac Electrophysiologist'`, `'Cardiologist'`, `'Cardiothoracic Surgeon'`, `'Child/Adolescent Psychiatry'`, `'Chiropractor'`, `'Clinical Social Worker'`, `'Colorectal Surgeon'`, `'Correactology'`, `'Cosmetic Medicine'`, `'Counselor Mental Health'`, `'Counselor Professional'`, `'Counselor'`, `'Dentist'`, `'Diabetology'`, `'Dermatologist'`, `'Diagnostic Medical Sonographer'`, `'Dietitian, Registered'`, `'Ear-Nose-Throat Specialist (ENT)'`, `'Emergency Medicine Physician'`, `'Endocrinologist'`, `'Endodontist'`, `'Epidemiologist'`, `'Family Practitioner'`, `'Gastroenterologist'`, `'General Practice'`, `'General Surgeon'`, `'Geneticist'`, `'Geriatrician'`, `'Gerontologist'`, `'Gynecologist (no OB)'`, `'Gynegologic Oncologist'`, `'Hand Surgeon'`, `'Hematologist'`, `'Home Care'`, `'Hospice'`, `'Hospitalist'`, `'Infectious Disease Specialist'`, `'Integrative and Functional Medicine'`, `'Integrative Medicine'`, `'Internist'`, `'Interventional Radiology'`, `'Laboratory Medicine Specialist'`, `'Laser Surgery'`, `'Massage Therapist'`, `'Naturopathic Physician'`, `'Neonatologist'`, `'Nephrologist'`, `'Neurologist'`, `'Neuropsychology'`, `'Neurosurgeon'`, `'Not Actively Practicing'`, `'Nuclear Medicine Specialist'`, `'Nurse Practitioner'`, `'Nursing'`, `'Nutritionist'`, `'Obstetrician/Gynecologist'`, `'Occupational Medicine'`, `'Occupational Therapist'`, `'Oncologist'`, `'Ophthalmologist'`, `'Optometrist'`, `'Oral Surgeon'`, `'Orofacial Pain'`, `'Orthodontist'`, `'Orthopedic Surgeon'`, `'Orthotist'`, `'Other'`, `'Pain Management Specialist'`, `'Pathologist'`, `'Pediatric Dentist'`, `'Pediatric Gastroenterology'`, `'Pediatric Surgeon'`, `'Pediatrician'`, `'Perinatologist'`, `'Periodontist'`, `'Physical Medicine and Rehab Specialist'`, `'Physical Therapist'`, `'Physician Assistant'`, `'Plastic Surgeon'`, `'Podiatrist'`, `'Preventive-Aging Medicine'`, `'Preventive Medicine/Occupational-Environmental Medicine'`, `'Primary Care Physician'`, `'Prosthetist'`, `'Prosthodontist'`, `'Psychiatrist'`, `'Psychologist'`, `'Public Health Professional'`, `'Pulmonologist'`, `'Radiation Oncologist'`, `'Radiologist'`, `'Registered Nurse'`, `'Religious Nonmedical Practitioner'`, `'Reproductive Endocrinologist'`, `'Reproductive Medicine'`, `'Rheumatologist'`, `'Sleep Medicine'`, `'Speech-Language Pathologist'`, `'Sports Medicine Specialist'`, `'Urologist'`, `'Urgent Care'`, `'Vascular Surgeon'`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specialty")
    public PatientPatientSpecialtyEnum specialty;
    public PatientPatient withSpecialty(PatientPatientSpecialtyEnum specialty) {
        this.specialty = specialty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suffix")
    public String suffix;
    public PatientPatient withSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }
    
}
