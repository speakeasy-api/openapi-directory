"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import groupsv2_getgroupsformemberresponse as shared_groupsv2_getgroupsformemberresponse
from typing import Optional


@dataclasses.dataclass
class GroupV2GetGroupsForMemberRequest:
    
    filter: int = dataclasses.field(metadata={'path_param': { 'field_name': 'filter', 'style': 'simple', 'explode': False }})
    r"""Filter apply to list of joined groups."""  
    group_type: int = dataclasses.field(metadata={'path_param': { 'field_name': 'groupType', 'style': 'simple', 'explode': False }})
    r"""Type of group the supplied member founded."""  
    membership_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'membershipId', 'style': 'simple', 'explode': False }})
    r"""Membership ID to for which to find founded groups."""  
    membership_type: int = dataclasses.field(metadata={'path_param': { 'field_name': 'membershipType', 'style': 'simple', 'explode': False }})
    r"""Membership type of the supplied membership ID."""  
    

@dataclasses.dataclass
class GroupV2GetGroupsForMember200Wildcard:
    r"""Look at the Response property for more information about the nature of this response"""
    
    detailed_error_trace: Optional[str] = dataclasses.field(default=None)  
    error_code: Optional[int] = dataclasses.field(default=None)  
    error_status: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    message_data: Optional[dict[str, str]] = dataclasses.field(default=None)  
    response: Optional[shared_groupsv2_getgroupsformemberresponse.GroupsV2GetGroupsForMemberResponse] = dataclasses.field(default=None)  
    throttle_seconds: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GroupV2GetGroupsForMemberResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    