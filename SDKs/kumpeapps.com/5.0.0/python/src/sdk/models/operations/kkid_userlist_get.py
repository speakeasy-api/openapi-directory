"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import four_hundred_and_five as shared_four_hundred_and_five
from ..shared import four_hundred_and_twelve as shared_four_hundred_and_twelve
from ..shared import nodata as shared_nodata
from ..shared import userlist as shared_userlist
from typing import Optional


@dataclasses.dataclass
class KkidUserlistGetRequest:
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    r"""Email address of user to search"""  
    enable_allowance: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'enableAllowance', 'style': 'form', 'explode': True }})
    r"""Filter Search by enableAllowance flag"""  
    enable_chores: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'enableChores', 'style': 'form', 'explode': True }})
    r"""Filter Search by enableChores flag"""  
    is_active: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'isActive', 'style': 'form', 'explode': True }})
    r"""Filter Search by isActive flag"""  
    is_admin: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'isAdmin', 'style': 'form', 'explode': True }})
    r"""Filter Search by isAdmin flag"""  
    is_child: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'isChild', 'style': 'form', 'explode': True }})
    r"""Filter Search by isChild flag"""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'userID', 'style': 'form', 'explode': True }})
    r"""userID of user to search"""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'username', 'style': 'form', 'explode': True }})
    r"""Username of user to search"""  
    

@dataclasses.dataclass
class KkidUserlistGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    four_hundred_and_five: Optional[shared_four_hundred_and_five.FourHundredAndFive] = dataclasses.field(default=None)
    r"""Method Not Allowed- API user does not have access to use this method"""  
    four_hundred_and_twelve: Optional[shared_four_hundred_and_twelve.FourHundredAndTwelve] = dataclasses.field(default=None)
    r"""API Access Denied! Your API key is invalid, expired, or not supplied!"""  
    nodata: Optional[shared_nodata.Nodata] = dataclasses.field(default=None)
    r"""No Data Returned"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    userlist: Optional[shared_userlist.Userlist] = dataclasses.field(default=None)
    r"""search results matching criteria"""  
    