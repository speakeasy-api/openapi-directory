/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetNetworkWirelessChannelUtilizationHistoryQueryParams {
    /**
     * Filter results by AP tag to return AP channel utilization metrics for devices labeled with the given tag; either :clientId or :deviceSerial must be jointly specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=apTag")
    public String apTag;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withApTag(String apTag) {
        this.apTag = apTag;
        return this;
    }
    
    /**
     * Automatically select a data resolution based on the given timespan; this overrides the value specified by the 'resolution' parameter. The default setting is false.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=autoResolution")
    public Boolean autoResolution;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withAutoResolution(Boolean autoResolution) {
        this.autoResolution = autoResolution;
        return this;
    }
    
    /**
     * Filter results by band (either '2.4', '5' or '6').
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=band")
    public GetNetworkWirelessChannelUtilizationHistoryBandEnum band;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withBand(GetNetworkWirelessChannelUtilizationHistoryBandEnum band) {
        this.band = band;
        return this;
    }
    
    /**
     * Filter results by network client to return per-device, per-band AP channel utilization metrics inner joined by the queried client's connection history.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=clientId")
    public String clientId;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Filter results by device to return AP channel utilization metrics for the queried device; either :band or :clientId must be jointly specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=deviceSerial")
    public String deviceSerial;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withDeviceSerial(String deviceSerial) {
        this.deviceSerial = deviceSerial;
        return this;
    }
    
    /**
     * The time resolution in seconds for returned data. The valid resolutions are: 600, 1200, 3600, 14400, 86400. The default is 86400.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=resolution")
    public Long resolution;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withResolution(Long resolution) {
        this.resolution = resolution;
        return this;
    }
    
    /**
     * The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=t0")
    public String t0;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withT0(String t0) {
        this.t0 = t0;
        return this;
    }
    
    /**
     * The end of the timespan for the data. t1 can be a maximum of 31 days after t0.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=t1")
    public String t1;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withT1(String t1) {
        this.t1 = t1;
        return this;
    }
    
    /**
     * The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 7 days.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timespan")
    public Float timespan;
    public GetNetworkWirelessChannelUtilizationHistoryQueryParams withTimespan(Float timespan) {
        this.timespan = timespan;
        return this;
    }
    
}
