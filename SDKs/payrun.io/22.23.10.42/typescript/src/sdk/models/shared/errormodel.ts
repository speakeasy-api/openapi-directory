/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The error models' error category
 */
export enum ErrorModelErrorModelErrorCategoryEnum {
  General = "General",
  NotFound = "NotFound",
  NotAuthorised = "NotAuthorised",
  ValidationFailure = "ValidationFailure",
}

/**
 * The error models' errors
 */
export class ErrorModelErrorModelErrors extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Error" })
  error?: string[];
}

export class ErrorModelErrorModel extends SpeakeasyBase {
  /**
   * The error models' description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * The error models' error category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ErrorCategory" })
  errorCategory?: ErrorModelErrorModelErrorCategoryEnum;

  /**
   * The error models' errors
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Errors" })
  @Type(() => ErrorModelErrorModelErrors)
  errors?: ErrorModelErrorModelErrors;
}

/**
 * Bad Request
 */
export class ErrorModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ErrorModel" })
  @Type(() => ErrorModelErrorModel)
  errorModel?: ErrorModelErrorModel;
}
