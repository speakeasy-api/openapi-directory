<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class DomainLookupResponse
{
    /**
     * The number of days since the domain was registered. A domain age of under 90 days is generally considered to be potentially risky. A value of 0 indicates no registration date was found for this domain
     * 
     * @var int $age
     */
	#[\JMS\Serializer\Annotation\SerializedName('age')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $age;
    
    /**
     * An array of strings indicating which blocklist categories this domain is listed on. Current categories are: phishing, malware, spam, anonymizer, nefarious
     * 
     * @var array<string> $blocklists
     */
	#[\JMS\Serializer\Annotation\SerializedName('blocklists')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $blocklists;
    
    /**
     * The primary domain of the DNS provider for this domain
     * 
     * @var string $dnsProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('dns-provider')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $dnsProvider;
    
    /**
     * The primary domain name excluding any subdomains. This is also referred to as the second-level domain (SLD)
     * 
     * @var string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $domain;
    
    /**
     * The fully qualified domain name (FQDN)
     * 
     * @var string $fqdn
     */
	#[\JMS\Serializer\Annotation\SerializedName('fqdn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $fqdn;
    
    /**
     * This domain is hosting adult content such as porn, webcams, escorts, etc
     * 
     * @var bool $isAdult
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-adult')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isAdult;
    
    /**
     * Is this domain under a government or military TLD
     * 
     * @var bool $isGov
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-gov')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isGov;
    
    /**
     * Consider this domain malicious as it is currently listed on at least 1 blocklist
     * 
     * @var bool $isMalicious
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-malicious')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isMalicious;
    
    /**
     * Is this domain under an OpenNIC TLD
     * 
     * @var bool $isOpennic
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-opennic')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isOpennic;
    
    /**
     * True if this domain is unseen and is currently being processed in the background. This field only matters when the 'live' lookup setting has been explicitly disabled and indicates that not all domain data my be present yet
     * 
     * @var bool $isPending
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-pending')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isPending;
    
    /**
     * Is the FQDN a subdomain of the primary domain
     * 
     * @var bool $isSubdomain
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-subdomain')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isSubdomain;
    
    /**
     * The primary domain of the email provider for this domain. An empty value indicates the domain has no valid MX records
     * 
     * @var string $mailProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('mail-provider')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $mailProvider;
    
    /**
     * The domains estimated global traffic rank with the highest rank being 1. A value of 0 indicates the domain is currently ranked outside of the top 1M of domains
     * 
     * @var int $rank
     */
	#[\JMS\Serializer\Annotation\SerializedName('rank')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $rank;
    
    /**
     * The ISO date this domain was registered or first seen on the internet. An empty value indicates we could not reliably determine the date
     * 
     * @var string $registeredDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('registered-date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $registeredDate;
    
    /**
     * The IANA registrar ID (0 if no registrar ID was found)
     * 
     * @var int $registrarId
     */
	#[\JMS\Serializer\Annotation\SerializedName('registrar-id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $registrarId;
    
    /**
     * The name of the domain registrar owning this domain
     * 
     * @var string $registrarName
     */
	#[\JMS\Serializer\Annotation\SerializedName('registrar-name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $registrarName;
    
    /**
     * An array of objects containing details on which specific blocklist sensors have detected this domain
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\BlocklistSensor> $sensors
     */
	#[\JMS\Serializer\Annotation\SerializedName('sensors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BlocklistSensor>')]
    public array $sensors;
    
    /**
     * The top-level domain (TLD)
     * 
     * @var string $tld
     */
	#[\JMS\Serializer\Annotation\SerializedName('tld')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tld;
    
    /**
     * For a country code top-level domain (ccTLD) this will contain the associated ISO 2-letter country code
     * 
     * @var string $tldCc
     */
	#[\JMS\Serializer\Annotation\SerializedName('tld-cc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tldCc;
    
    /**
     * True if a valid domain was found. For a domain to be considered valid it must be registered and have valid DNS NS records
     * 
     * @var bool $valid
     */
	#[\JMS\Serializer\Annotation\SerializedName('valid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $valid;
    
	public function __construct()
	{
		$this->age = 0;
		$this->blocklists = [];
		$this->dnsProvider = "";
		$this->domain = "";
		$this->fqdn = "";
		$this->isAdult = false;
		$this->isGov = false;
		$this->isMalicious = false;
		$this->isOpennic = false;
		$this->isPending = false;
		$this->isSubdomain = false;
		$this->mailProvider = "";
		$this->rank = 0;
		$this->registeredDate = "";
		$this->registrarId = 0;
		$this->registrarName = "";
		$this->sensors = [];
		$this->tld = "";
		$this->tldCc = "";
		$this->valid = false;
	}
}
