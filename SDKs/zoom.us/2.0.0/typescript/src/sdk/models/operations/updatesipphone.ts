/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class UpdateSIPPhoneSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum UpdateSIPPhoneApplicationJSONTransportProtocolEnum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum UpdateSIPPhoneApplicationJSONTransportProtocol2Enum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum UpdateSIPPhoneApplicationJSONTransportProtocol3Enum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

export class UpdateSIPPhoneApplicationJSON extends SpeakeasyBase {
  /**
   * Authorization name of the user  registered for SIP Phone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorization_name" })
  authorizationName: string;

  /**
   * The name or IP address of your providerâ€™s SIP domain. (example: CDC.WEB).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain: string;

  /**
   * The password generated for the user in the SIP account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server" })
  proxyServer: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server2" })
  proxyServer2: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server3" })
  proxyServer3: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server" })
  registerServer: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server2" })
  registerServer2: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server3" })
  registerServer3: string;

  /**
   * The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registration_expire_time" })
  registrationExpireTime?: number;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol" })
  transportProtocol?: UpdateSIPPhoneApplicationJSONTransportProtocolEnum;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol2" })
  transportProtocol2?: UpdateSIPPhoneApplicationJSONTransportProtocol2Enum;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol3" })
  transportProtocol3?: UpdateSIPPhoneApplicationJSONTransportProtocol3Enum;

  /**
   * The phone number associated with the user in the SIP account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName: string;

  /**
   * The number to dial for checking voicemail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_mail" })
  voiceMail: string;
}

export class UpdateSIPPhoneRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateSIPPhoneApplicationJSON;

  /**
   * Unique Identifier of the SIP Phone. This can be retrieved from the List SIP Phones API.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=phoneId",
  })
  phoneId: string;
}

export class UpdateSIPPhoneResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `204`<br>
   *
   * @remarks
   * SIP Phone information updated successfully.
   *
   */
  @SpeakeasyMetadata()
  updateSIPPhone204ApplicationJSONObject?: Record<string, any>;
}
