/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EventDefinition - An event definition resource.
 */
public class EventDefinition {
    /**
     * A list of events that are a child of this event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("childEvents")
    public EventChild[] childEvents;

    public EventDefinition withChildEvents(EventChild[] childEvents) {
        this.childEvents = childEvents;
        return this;
    }
    
    /**
     * Description of what this event represents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public EventDefinition withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The name to display for the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public EventDefinition withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The ID of the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public EventDefinition withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The base URL for the image that represents the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageUrl")
    public String imageUrl;

    public EventDefinition withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * Indicates whether the icon image being returned is a default image, or is game-provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDefaultImageUrl")
    public Boolean isDefaultImageUrl;

    public EventDefinition withIsDefaultImageUrl(Boolean isDefaultImageUrl) {
        this.isDefaultImageUrl = isDefaultImageUrl;
        return this;
    }
    
    /**
     * Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinition`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public EventDefinition withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The visibility of event being tracked in this definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visibility")
    public EventDefinitionVisibilityEnum visibility;

    public EventDefinition withVisibility(EventDefinitionVisibilityEnum visibility) {
        this.visibility = visibility;
        return this;
    }
    
    public EventDefinition(){}
}
