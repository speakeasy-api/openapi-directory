<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class AddCustomRoutingEndpointsResponse
{
    /**
     * AccessDeniedException
     * 
     * @var mixed $accessDeniedException
     */
	
    public mixed $accessDeniedException = null;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AddCustomRoutingEndpointsResponse $addCustomRoutingEndpointsResponse
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\AddCustomRoutingEndpointsResponse $addCustomRoutingEndpointsResponse = null;
    
    /**
     * ConflictException
     * 
     * @var mixed $conflictException
     */
	
    public mixed $conflictException = null;
    
	
    public string $contentType;
    
    /**
     * EndpointAlreadyExistsException
     * 
     * @var mixed $endpointAlreadyExistsException
     */
	
    public mixed $endpointAlreadyExistsException = null;
    
    /**
     * EndpointGroupNotFoundException
     * 
     * @var mixed $endpointGroupNotFoundException
     */
	
    public mixed $endpointGroupNotFoundException = null;
    
    /**
     * InternalServiceErrorException
     * 
     * @var mixed $internalServiceErrorException
     */
	
    public mixed $internalServiceErrorException = null;
    
    /**
     * InvalidArgumentException
     * 
     * @var mixed $invalidArgumentException
     */
	
    public mixed $invalidArgumentException = null;
    
    /**
     * LimitExceededException
     * 
     * @var mixed $limitExceededException
     */
	
    public mixed $limitExceededException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
	public function __construct()
	{
		$this->accessDeniedException = null;
		$this->addCustomRoutingEndpointsResponse = null;
		$this->conflictException = null;
		$this->contentType = "";
		$this->endpointAlreadyExistsException = null;
		$this->endpointGroupNotFoundException = null;
		$this->internalServiceErrorException = null;
		$this->invalidArgumentException = null;
		$this->limitExceededException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
	}
}
