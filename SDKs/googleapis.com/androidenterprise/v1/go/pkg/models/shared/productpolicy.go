// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProductPolicyAutoUpdateModeEnum - The auto-update mode for the product.
type ProductPolicyAutoUpdateModeEnum string

const (
	ProductPolicyAutoUpdateModeEnumAutoUpdateModeUnspecified ProductPolicyAutoUpdateModeEnum = "autoUpdateModeUnspecified"
	ProductPolicyAutoUpdateModeEnumAutoUpdateDefault         ProductPolicyAutoUpdateModeEnum = "autoUpdateDefault"
	ProductPolicyAutoUpdateModeEnumAutoUpdatePostponed       ProductPolicyAutoUpdateModeEnum = "autoUpdatePostponed"
	ProductPolicyAutoUpdateModeEnumAutoUpdateHighPriority    ProductPolicyAutoUpdateModeEnum = "autoUpdateHighPriority"
)

func (e ProductPolicyAutoUpdateModeEnum) ToPointer() *ProductPolicyAutoUpdateModeEnum {
	return &e
}

func (e *ProductPolicyAutoUpdateModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "autoUpdateModeUnspecified":
		fallthrough
	case "autoUpdateDefault":
		fallthrough
	case "autoUpdatePostponed":
		fallthrough
	case "autoUpdateHighPriority":
		*e = ProductPolicyAutoUpdateModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductPolicyAutoUpdateModeEnum: %v", v)
	}
}

type ProductPolicyTracksEnum string

const (
	ProductPolicyTracksEnumAppTrackUnspecified ProductPolicyTracksEnum = "appTrackUnspecified"
	ProductPolicyTracksEnumProduction          ProductPolicyTracksEnum = "production"
	ProductPolicyTracksEnumBeta                ProductPolicyTracksEnum = "beta"
	ProductPolicyTracksEnumAlpha               ProductPolicyTracksEnum = "alpha"
)

func (e ProductPolicyTracksEnum) ToPointer() *ProductPolicyTracksEnum {
	return &e
}

func (e *ProductPolicyTracksEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "appTrackUnspecified":
		fallthrough
	case "production":
		fallthrough
	case "beta":
		fallthrough
	case "alpha":
		*e = ProductPolicyTracksEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductPolicyTracksEnum: %v", v)
	}
}

// ProductPolicy - The policy for a product.
type ProductPolicy struct {
	AutoInstallPolicy *AutoInstallPolicy `json:"autoInstallPolicy,omitempty"`
	// The auto-update mode for the product.
	AutoUpdateMode *ProductPolicyAutoUpdateModeEnum `json:"autoUpdateMode,omitempty"`
	// An authentication URL configuration for the authenticator app of an identity provider. This helps to launch the identity provider's authenticator app during the authentication happening in a private app using Android WebView. Authenticator app should already be the [default handler](https://developer.android.com/training/app-links/verify-site-associations) for the authentication url on the device.
	EnterpriseAuthenticationAppLinkConfigs []EnterpriseAuthenticationAppLinkConfig `json:"enterpriseAuthenticationAppLinkConfigs,omitempty"`
	// A managed configuration resource contains the set of managed properties defined by the app developer in the app's managed configurations schema, as well as any configuration variables defined for the user.
	ManagedConfiguration *ManagedConfiguration `json:"managedConfiguration,omitempty"`
	// The ID of the product. For example, "app:com.google.android.gm".
	ProductID *string `json:"productId,omitempty"`
	// Grants the device visibility to the specified product release track(s), identified by trackIds. The list of release tracks of a product can be obtained by calling Products.Get.
	TrackIds []string `json:"trackIds,omitempty"`
	// Deprecated. Use trackIds instead.
	Tracks []ProductPolicyTracksEnum `json:"tracks,omitempty"`
}
