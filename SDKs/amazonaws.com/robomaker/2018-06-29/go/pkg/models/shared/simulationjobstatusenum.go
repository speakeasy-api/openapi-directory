// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SimulationJobStatusEnum string

const (
	SimulationJobStatusEnumPending       SimulationJobStatusEnum = "Pending"
	SimulationJobStatusEnumPreparing     SimulationJobStatusEnum = "Preparing"
	SimulationJobStatusEnumRunning       SimulationJobStatusEnum = "Running"
	SimulationJobStatusEnumRestarting    SimulationJobStatusEnum = "Restarting"
	SimulationJobStatusEnumCompleted     SimulationJobStatusEnum = "Completed"
	SimulationJobStatusEnumFailed        SimulationJobStatusEnum = "Failed"
	SimulationJobStatusEnumRunningFailed SimulationJobStatusEnum = "RunningFailed"
	SimulationJobStatusEnumTerminating   SimulationJobStatusEnum = "Terminating"
	SimulationJobStatusEnumTerminated    SimulationJobStatusEnum = "Terminated"
	SimulationJobStatusEnumCanceled      SimulationJobStatusEnum = "Canceled"
)

func (e *SimulationJobStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "Preparing":
		fallthrough
	case "Running":
		fallthrough
	case "Restarting":
		fallthrough
	case "Completed":
		fallthrough
	case "Failed":
		fallthrough
	case "RunningFailed":
		fallthrough
	case "Terminating":
		fallthrough
	case "Terminated":
		fallthrough
	case "Canceled":
		*e = SimulationJobStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulationJobStatusEnum: %s", s)
	}
}
