"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class UsersUpdatePrefsSecurity:
    
    key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Appwrite-Key' }})  
    project: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Appwrite-Project' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsersUpdatePrefsRequestBody:
    
    prefs: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prefs') }})
    r"""Prefs key-value JSON object."""  
    

@dataclasses.dataclass
class UsersUpdatePrefsRequest:
    
    user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""User unique ID."""  
    request_body: Optional[UsersUpdatePrefsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UsersUpdatePrefsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    preferences: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Preferences"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    