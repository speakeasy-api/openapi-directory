/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EventTag - Contains properties of an event tag.
 */
public class EventTag {
    /**
     * Account ID of this event tag. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public EventTag withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Advertiser ID of this event tag. This field or the campaignId field is required on insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserId")
    public String advertiserId;

    public EventTag withAdvertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
        return this;
    }
    
    /**
     * Represents a DimensionValue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserIdDimensionValue")
    public DimensionValue advertiserIdDimensionValue;

    public EventTag withAdvertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
        this.advertiserIdDimensionValue = advertiserIdDimensionValue;
        return this;
    }
    
    /**
     * Campaign ID of this event tag. This field or the advertiserId field is required on insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignId")
    public String campaignId;

    public EventTag withCampaignId(String campaignId) {
        this.campaignId = campaignId;
        return this;
    }
    
    /**
     * Represents a DimensionValue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignIdDimensionValue")
    public DimensionValue campaignIdDimensionValue;

    public EventTag withCampaignIdDimensionValue(DimensionValue campaignIdDimensionValue) {
        this.campaignIdDimensionValue = campaignIdDimensionValue;
        return this;
    }
    
    /**
     * Whether this event tag should be automatically enabled for all of the advertiser's campaigns and ads.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabledByDefault")
    public Boolean enabledByDefault;

    public EventTag withEnabledByDefault(Boolean enabledByDefault) {
        this.enabledByDefault = enabledByDefault;
        return this;
    }
    
    /**
     * Whether to remove this event tag from ads that are trafficked through Display &amp; Video 360 to Ad Exchange. This may be useful if the event tag uses a pixel that is unapproved for Ad Exchange bids on one or more networks, such as the Google Display Network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludeFromAdxRequests")
    public Boolean excludeFromAdxRequests;

    public EventTag withExcludeFromAdxRequests(Boolean excludeFromAdxRequests) {
        this.excludeFromAdxRequests = excludeFromAdxRequests;
        return this;
    }
    
    /**
     * ID of this event tag. This is a read-only, auto-generated field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public EventTag withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#eventTag".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public EventTag withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Name of this event tag. This is a required field and must be less than 256 characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public EventTag withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Site filter type for this event tag. If no type is specified then the event tag will be applied to all sites.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("siteFilterType")
    public EventTagSiteFilterTypeEnum siteFilterType;

    public EventTag withSiteFilterType(EventTagSiteFilterTypeEnum siteFilterType) {
        this.siteFilterType = siteFilterType;
        return this;
    }
    
    /**
     * Filter list of site IDs associated with this event tag. The siteFilterType determines whether this is a allowlist or blocklist filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("siteIds")
    public String[] siteIds;

    public EventTag withSiteIds(String[] siteIds) {
        this.siteIds = siteIds;
        return this;
    }
    
    /**
     * Whether this tag is SSL-compliant or not. This is a read-only field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslCompliant")
    public Boolean sslCompliant;

    public EventTag withSslCompliant(Boolean sslCompliant) {
        this.sslCompliant = sslCompliant;
        return this;
    }
    
    /**
     * Status of this event tag. Must be ENABLED for this event tag to fire. This is a required field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public EventTagStatusEnum status;

    public EventTag withStatus(EventTagStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Subaccount ID of this event tag. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subaccountId")
    public String subaccountId;

    public EventTag withSubaccountId(String subaccountId) {
        this.subaccountId = subaccountId;
        return this;
    }
    
    /**
     * Event tag type. Can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for either impression or click tracking. This is a required field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public EventTagTypeEnum type;

    public EventTag withType(EventTagTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Payload URL for this event tag. The URL on a click-through event tag should have a landing page URL appended to the end of it. This field is required on insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public EventTag withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Number of times the landing page URL should be URL-escaped before being appended to the click-through event tag URL. Only applies to click-through event tags as specified by the event tag type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urlEscapeLevels")
    public Integer urlEscapeLevels;

    public EventTag withUrlEscapeLevels(Integer urlEscapeLevels) {
        this.urlEscapeLevels = urlEscapeLevels;
        return this;
    }
    
    public EventTag(){}
}
