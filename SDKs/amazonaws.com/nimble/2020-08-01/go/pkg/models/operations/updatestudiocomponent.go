// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateStudioComponentPathParams struct {
	// The studio component ID.
	StudioComponentID string `pathParam:"style=simple,explode=false,name=studioComponentId"`
	// The studio ID.
	StudioID string `pathParam:"style=simple,explode=false,name=studioId"`
}

type UpdateStudioComponentHeaders struct {
	XAmzAlgorithm *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
	XAmzClientToken   *string `header:"style=simple,explode=false,name=X-Amz-Client-Token"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateStudioComponentRequestBodyConfiguration - The configuration of the studio component, based on component type.
type UpdateStudioComponentRequestBodyConfiguration struct {
	ActiveDirectoryConfiguration  *shared.ActiveDirectoryConfiguration  `json:"activeDirectoryConfiguration,omitempty"`
	ComputeFarmConfiguration      *shared.ComputeFarmConfiguration      `json:"computeFarmConfiguration,omitempty"`
	LicenseServiceConfiguration   *shared.LicenseServiceConfiguration   `json:"licenseServiceConfiguration,omitempty"`
	SharedFileSystemConfiguration *shared.SharedFileSystemConfiguration `json:"sharedFileSystemConfiguration,omitempty"`
}

// UpdateStudioComponentRequestBodySubtypeEnum - The specific subtype of a studio component.
type UpdateStudioComponentRequestBodySubtypeEnum string

const (
	UpdateStudioComponentRequestBodySubtypeEnumAwsManagedMicrosoftAd UpdateStudioComponentRequestBodySubtypeEnum = "AWS_MANAGED_MICROSOFT_AD"
	UpdateStudioComponentRequestBodySubtypeEnumAmazonFsxForWindows   UpdateStudioComponentRequestBodySubtypeEnum = "AMAZON_FSX_FOR_WINDOWS"
	UpdateStudioComponentRequestBodySubtypeEnumAmazonFsxForLustre    UpdateStudioComponentRequestBodySubtypeEnum = "AMAZON_FSX_FOR_LUSTRE"
	UpdateStudioComponentRequestBodySubtypeEnumCustom                UpdateStudioComponentRequestBodySubtypeEnum = "CUSTOM"
)

func (e *UpdateStudioComponentRequestBodySubtypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS_MANAGED_MICROSOFT_AD":
		fallthrough
	case "AMAZON_FSX_FOR_WINDOWS":
		fallthrough
	case "AMAZON_FSX_FOR_LUSTRE":
		fallthrough
	case "CUSTOM":
		*e = UpdateStudioComponentRequestBodySubtypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateStudioComponentRequestBodySubtypeEnum: %s", s)
	}
}

// UpdateStudioComponentRequestBodyTypeEnum - The type of the studio component.
type UpdateStudioComponentRequestBodyTypeEnum string

const (
	UpdateStudioComponentRequestBodyTypeEnumActiveDirectory  UpdateStudioComponentRequestBodyTypeEnum = "ACTIVE_DIRECTORY"
	UpdateStudioComponentRequestBodyTypeEnumSharedFileSystem UpdateStudioComponentRequestBodyTypeEnum = "SHARED_FILE_SYSTEM"
	UpdateStudioComponentRequestBodyTypeEnumComputeFarm      UpdateStudioComponentRequestBodyTypeEnum = "COMPUTE_FARM"
	UpdateStudioComponentRequestBodyTypeEnumLicenseService   UpdateStudioComponentRequestBodyTypeEnum = "LICENSE_SERVICE"
	UpdateStudioComponentRequestBodyTypeEnumCustom           UpdateStudioComponentRequestBodyTypeEnum = "CUSTOM"
)

func (e *UpdateStudioComponentRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE_DIRECTORY":
		fallthrough
	case "SHARED_FILE_SYSTEM":
		fallthrough
	case "COMPUTE_FARM":
		fallthrough
	case "LICENSE_SERVICE":
		fallthrough
	case "CUSTOM":
		*e = UpdateStudioComponentRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateStudioComponentRequestBodyTypeEnum: %s", s)
	}
}

type UpdateStudioComponentRequestBody struct {
	// The configuration of the studio component, based on component type.
	Configuration *UpdateStudioComponentRequestBodyConfiguration `json:"configuration,omitempty"`
	// The description.
	Description *string `json:"description,omitempty"`
	// The EC2 security groups that control access to the studio component.
	Ec2SecurityGroupIds []string `json:"ec2SecurityGroupIds,omitempty"`
	// Initialization scripts for studio components.
	InitializationScripts []shared.StudioComponentInitializationScript `json:"initializationScripts,omitempty"`
	// The name for the studio component.
	Name *string `json:"name,omitempty"`
	// An IAM role attached to a Studio Component that gives the studio component access to Amazon Web Services resources at anytime while the instance is running.
	RuntimeRoleArn *string `json:"runtimeRoleArn,omitempty"`
	// Parameters for the studio component scripts.
	ScriptParameters []shared.ScriptParameterKeyValue `json:"scriptParameters,omitempty"`
	// An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to Amazon Web Services resources when the system initialization script runs.
	SecureInitializationRoleArn *string `json:"secureInitializationRoleArn,omitempty"`
	// The specific subtype of a studio component.
	Subtype *UpdateStudioComponentRequestBodySubtypeEnum `json:"subtype,omitempty"`
	// The type of the studio component.
	Type *UpdateStudioComponentRequestBodyTypeEnum `json:"type,omitempty"`
}

type UpdateStudioComponentRequest struct {
	PathParams UpdateStudioComponentPathParams
	Headers    UpdateStudioComponentHeaders
	Request    UpdateStudioComponentRequestBody `request:"mediaType=application/json"`
}

type UpdateStudioComponentResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerErrorException
	InternalServerErrorException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateStudioComponentResponse *shared.UpdateStudioComponentResponse
	// ValidationException
	ValidationException interface{}
}
