// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum - If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
type GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum string

const (
	GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnumDynamicFacetableOptionUnspecified GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum = "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnumDynamicFacetableEnabled           GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum = "DYNAMIC_FACETABLE_ENABLED"
	GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnumDynamicFacetableDisabled          GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum = "DYNAMIC_FACETABLE_DISABLED"
)

func (e *GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "DYNAMIC_FACETABLE_ENABLED":
		fallthrough
	case "DYNAMIC_FACETABLE_DISABLED":
		*e = GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum - If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
type GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum string

const (
	GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnumExactSearchableOptionUnspecified GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum = "EXACT_SEARCHABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnumExactSearchableEnabled           GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum = "EXACT_SEARCHABLE_ENABLED"
	GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnumExactSearchableDisabled          GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum = "EXACT_SEARCHABLE_DISABLED"
)

func (e *GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXACT_SEARCHABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "EXACT_SEARCHABLE_ENABLED":
		fallthrough
	case "EXACT_SEARCHABLE_DISABLED":
		*e = GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum - When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
type GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum string

const (
	GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnumIndexableOptionUnspecified GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum = "INDEXABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnumIndexableEnabled           GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum = "INDEXABLE_ENABLED"
	GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnumIndexableDisabled          GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum = "INDEXABLE_DISABLED"
)

func (e *GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INDEXABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "INDEXABLE_ENABLED":
		fallthrough
	case "INDEXABLE_DISABLED":
		*e = GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum - When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if RECOMMENDATIONS_FILTERING_ENABLED, attribute values are filterable for recommendations. This option works for categorical features only, does not work for numerical features, inventory filtering.
type GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum string

const (
	GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnumRecommendationsFilteringOptionUnspecified GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum = "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnumRecommendationsFilteringDisabled          GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum = "RECOMMENDATIONS_FILTERING_DISABLED"
	GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnumRecommendationsFilteringEnabled           GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum = "RECOMMENDATIONS_FILTERING_ENABLED"
)

func (e *GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED":
		fallthrough
	case "RECOMMENDATIONS_FILTERING_DISABLED":
		fallthrough
	case "RECOMMENDATIONS_FILTERING_ENABLED":
		*e = GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum - If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
type GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum string

const (
	GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnumRetrievableOptionUnspecified GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum = "RETRIEVABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnumRetrievableEnabled           GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum = "RETRIEVABLE_ENABLED"
	GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnumRetrievableDisabled          GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum = "RETRIEVABLE_DISABLED"
)

func (e *GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RETRIEVABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "RETRIEVABLE_ENABLED":
		fallthrough
	case "RETRIEVABLE_DISABLED":
		*e = GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum - When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
type GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum string

const (
	GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnumSearchableOptionUnspecified GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum = "SEARCHABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnumSearchableEnabled           GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum = "SEARCHABLE_ENABLED"
	GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnumSearchableDisabled          GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum = "SEARCHABLE_DISABLED"
)

func (e *GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEARCHABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "SEARCHABLE_ENABLED":
		fallthrough
	case "SEARCHABLE_DISABLED":
		*e = GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2betaCatalogAttributeInput - Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.
type GoogleCloudRetailV2betaCatalogAttributeInput struct {
	// If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
	DynamicFacetableOption *GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum `json:"dynamicFacetableOption,omitempty"`
	// If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
	ExactSearchableOption *GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum `json:"exactSearchableOption,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
	IndexableOption *GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum `json:"indexableOption,omitempty"`
	// Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable, the attribute name can contain only alpha-numeric characters and underscores. For example, an attribute named `attributes.abc_xyz` can be indexed, but an attribute named `attributes.abc-xyz` cannot be indexed. If the attribute key starts with `attributes.`, then the attribute is a custom attribute. Attributes such as `brands`, `patterns`, and `title` are built-in and called system attributes.
	Key *string `json:"key,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if RECOMMENDATIONS_FILTERING_ENABLED, attribute values are filterable for recommendations. This option works for categorical features only, does not work for numerical features, inventory filtering.
	RecommendationsFilteringOption *GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum `json:"recommendationsFilteringOption,omitempty"`
	// If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
	RetrievableOption *GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum `json:"retrievableOption,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
	SearchableOption *GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum `json:"searchableOption,omitempty"`
}

// GoogleCloudRetailV2betaCatalogAttributeTypeEnum - Output only. The type of this attribute. This is derived from the attribute in Product.attributes.
type GoogleCloudRetailV2betaCatalogAttributeTypeEnum string

const (
	GoogleCloudRetailV2betaCatalogAttributeTypeEnumUnknown   GoogleCloudRetailV2betaCatalogAttributeTypeEnum = "UNKNOWN"
	GoogleCloudRetailV2betaCatalogAttributeTypeEnumTextual   GoogleCloudRetailV2betaCatalogAttributeTypeEnum = "TEXTUAL"
	GoogleCloudRetailV2betaCatalogAttributeTypeEnumNumerical GoogleCloudRetailV2betaCatalogAttributeTypeEnum = "NUMERICAL"
)

func (e *GoogleCloudRetailV2betaCatalogAttributeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "TEXTUAL":
		fallthrough
	case "NUMERICAL":
		*e = GoogleCloudRetailV2betaCatalogAttributeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2betaCatalogAttributeTypeEnum: %s", s)
	}
}

// GoogleCloudRetailV2betaCatalogAttribute - Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.
type GoogleCloudRetailV2betaCatalogAttribute struct {
	// If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
	DynamicFacetableOption *GoogleCloudRetailV2betaCatalogAttributeDynamicFacetableOptionEnum `json:"dynamicFacetableOption,omitempty"`
	// If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
	ExactSearchableOption *GoogleCloudRetailV2betaCatalogAttributeExactSearchableOptionEnum `json:"exactSearchableOption,omitempty"`
	// Output only. Indicates whether this attribute has been used by any products. `True` if at least one Product is using this attribute in Product.attributes. Otherwise, this field is `False`. CatalogAttribute can be pre-loaded by using CatalogService.AddCatalogAttribute, CatalogService.ImportCatalogAttributes, or CatalogService.UpdateAttributesConfig APIs. This field is `False` for pre-loaded CatalogAttributes. Only pre-loaded catalog attributes that are neither in use by products nor predefined can be deleted. Catalog attributes that are either in use by products or are predefined attributes cannot be deleted; however, their configuration properties will reset to default values upon removal request. After catalog changes, it takes about 10 minutes for this field to update.
	InUse *bool `json:"inUse,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
	IndexableOption *GoogleCloudRetailV2betaCatalogAttributeIndexableOptionEnum `json:"indexableOption,omitempty"`
	// Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable, the attribute name can contain only alpha-numeric characters and underscores. For example, an attribute named `attributes.abc_xyz` can be indexed, but an attribute named `attributes.abc-xyz` cannot be indexed. If the attribute key starts with `attributes.`, then the attribute is a custom attribute. Attributes such as `brands`, `patterns`, and `title` are built-in and called system attributes.
	Key *string `json:"key,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if RECOMMENDATIONS_FILTERING_ENABLED, attribute values are filterable for recommendations. This option works for categorical features only, does not work for numerical features, inventory filtering.
	RecommendationsFilteringOption *GoogleCloudRetailV2betaCatalogAttributeRecommendationsFilteringOptionEnum `json:"recommendationsFilteringOption,omitempty"`
	// If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
	RetrievableOption *GoogleCloudRetailV2betaCatalogAttributeRetrievableOptionEnum `json:"retrievableOption,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
	SearchableOption *GoogleCloudRetailV2betaCatalogAttributeSearchableOptionEnum `json:"searchableOption,omitempty"`
	// Output only. The type of this attribute. This is derived from the attribute in Product.attributes.
	Type *GoogleCloudRetailV2betaCatalogAttributeTypeEnum `json:"type,omitempty"`
}
