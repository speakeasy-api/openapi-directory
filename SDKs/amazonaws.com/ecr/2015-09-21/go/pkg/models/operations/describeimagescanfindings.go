// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeImageScanFindingsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

// DescribeImageScanFindingsXAmzTargetEnum
type DescribeImageScanFindingsXAmzTargetEnum string

const (
	DescribeImageScanFindingsXAmzTargetEnumAmazonEc2ContainerRegistryV20150921DescribeImageScanFindings DescribeImageScanFindingsXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.DescribeImageScanFindings"
)

func (e *DescribeImageScanFindingsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerRegistry_V20150921.DescribeImageScanFindings":
		*e = DescribeImageScanFindingsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeImageScanFindingsXAmzTargetEnum: %s", s)
	}
}

type DescribeImageScanFindingsHeaders struct {
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeImageScanFindingsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeImageScanFindingsRequest struct {
	QueryParams DescribeImageScanFindingsQueryParams
	Headers     DescribeImageScanFindingsHeaders
	Request     shared.DescribeImageScanFindingsRequest `request:"mediaType=application/json"`
}

type DescribeImageScanFindingsResponse struct {
	ContentType string
	// Success
	DescribeImageScanFindingsResponse *shared.DescribeImageScanFindingsResponse
	// ImageNotFoundException
	ImageNotFoundException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// RepositoryNotFoundException
	RepositoryNotFoundException interface{}
	// ScanNotFoundException
	ScanNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
	// ValidationException
	ValidationException interface{}
}
