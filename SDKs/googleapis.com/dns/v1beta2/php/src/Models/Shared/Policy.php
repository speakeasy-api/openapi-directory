<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Policy - A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Policy
{
	#[\JMS\Serializer\Annotation\SerializedName('alternativeNameServerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PolicyAlternativeNameServerConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PolicyAlternativeNameServerConfig $alternativeNameServerConfig = null;
    
    /**
     * A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy.
     * 
     * @var ?bool $enableInboundForwarding
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableInboundForwarding')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableInboundForwarding = null;
    
    /**
     * Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.
     * 
     * @var ?bool $enableLogging
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableLogging')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableLogging = null;
    
    /**
     * Unique identifier for the resource; defined by the server (output only).
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * User-assigned name for this policy.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * List of network names specifying networks to which this policy is applied.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PolicyNetwork> $networks
     */
	#[\JMS\Serializer\Annotation\SerializedName('networks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PolicyNetwork>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $networks = null;
    
	public function __construct()
	{
		$this->alternativeNameServerConfig = null;
		$this->description = null;
		$this->enableInboundForwarding = null;
		$this->enableLogging = null;
		$this->id = null;
		$this->kind = null;
		$this->name = null;
		$this->networks = null;
	}
}
