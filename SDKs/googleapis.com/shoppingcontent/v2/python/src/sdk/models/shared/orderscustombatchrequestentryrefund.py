"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import price as shared_price
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrdersCustomBatchRequestEntryRefund:
    
    amount: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})  
    amount_pretax: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountPretax'), 'exclude': lambda f: f is None }})  
    amount_tax: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountTax'), 'exclude': lambda f: f is None }})  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""The reason for the refund. Acceptable values are: - \\"`adjustment`\\" - \\"`courtesyAdjustment`\\" - \\"`customerCanceled`\\" - \\"`customerDiscretionaryReturn`\\" - \\"`deliveredLateByCarrier`\\" - \\"`feeAdjustment`\\" - \\"`lateShipmentCredit`\\" - \\"`noInventory`\\" - \\"`other`\\" - \\"`priceError`\\" - \\"`productArrivedDamaged`\\" - \\"`productNotAsDescribed`\\" - \\"`shippingCostAdjustment`\\" - \\"`taxAdjustment`\\" - \\"`undeliverableShippingAddress`\\" - \\"`wrongProductShipped`\\" """  
    reason_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reasonText'), 'exclude': lambda f: f is None }})
    r"""The explanation of the reason."""  
    