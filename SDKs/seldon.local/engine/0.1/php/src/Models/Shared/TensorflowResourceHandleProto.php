<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TensorflowResourceHandleProto - Protocol buffer representing a handle to a tensorflow resource. Handles are not valid across executions, but can be serialized back and forth from within a single run.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TensorflowResourceHandleProto
{
    /**
     * Container in which this resource is placed.
     * 
     * @var ?string $container
     */
	#[\JMS\Serializer\Annotation\SerializedName('container')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $container = null;
    
    /**
     * Unique name for the device containing the resource.
     * 
     * @var ?string $device
     */
	#[\JMS\Serializer\Annotation\SerializedName('device')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $device = null;
    
    /**
     * Hash code for the type of the resource. Is only valid in the same device and in the same execution.
     * 
     * @var ?string $hashCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('hash_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hashCode = null;
    
    /**
     * For debug-only, the name of the type pointed to by this handle, if available.
     * 
     * @var ?string $maybeTypeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('maybe_type_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maybeTypeName = null;
    
    /**
     * Unique name of this resource.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->container = null;
		$this->device = null;
		$this->hashCode = null;
		$this->maybeTypeName = null;
		$this->name = null;
	}
}
