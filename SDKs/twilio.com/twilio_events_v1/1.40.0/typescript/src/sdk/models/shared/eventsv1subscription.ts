/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class EventsV1Subscription extends SpeakeasyBase {
  /**
   * The unique SID identifier of the Account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The date that this Subscription was created, given in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date that this Subscription was updated, given in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * A human readable description for the Subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Contains a dictionary of URL links to nested resources of this Subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * A 34 character string that uniquely identifies this Subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The SID of the sink that events selected by this subscription should be sent to. Sink must be active for the subscription to be created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sink_sid" })
  sinkSid?: string;

  /**
   * The URL of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
