/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class SegmentListModelHaljsonEmbeddedProductEmbeddedOrganizationLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "members" })
  members?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "products" })
  products?: string;
}

export class SegmentListModelHaljsonEmbeddedProductEmbeddedOrganization extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => SegmentListModelHaljsonEmbeddedProductEmbeddedOrganizationLinks)
  links?: SegmentListModelHaljsonEmbeddedProductEmbeddedOrganizationLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "organizationId" })
  organizationId?: string;
}

export class SegmentListModelHaljsonEmbeddedProductEmbedded extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  @Type(() => SegmentListModelHaljsonEmbeddedProductEmbeddedOrganization)
  organization?: SegmentListModelHaljsonEmbeddedProductEmbeddedOrganization;
}

export class SegmentListModelHaljsonEmbeddedProductLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "configs" })
  configs?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environments" })
  environments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "members" })
  members?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "permission-groups" })
  permissionGroups?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "segments" })
  segments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  self?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string;
}

export class SegmentListModelHaljsonEmbeddedProduct extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_embedded" })
  @Type(() => SegmentListModelHaljsonEmbeddedProductEmbedded)
  embedded?: SegmentListModelHaljsonEmbeddedProductEmbedded;

  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => SegmentListModelHaljsonEmbeddedProductLinks)
  links?: SegmentListModelHaljsonEmbeddedProductLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reasonRequired" })
  reasonRequired?: boolean;
}

export class SegmentListModelHaljsonEmbedded extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "product" })
  @Type(() => SegmentListModelHaljsonEmbeddedProduct)
  product?: SegmentListModelHaljsonEmbeddedProduct;
}

export class SegmentListModelHaljsonLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  self?: string;
}

export class SegmentListModelHaljson extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_embedded" })
  @Type(() => SegmentListModelHaljsonEmbedded)
  embedded?: SegmentListModelHaljsonEmbedded;

  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => SegmentListModelHaljsonLinks)
  links?: SegmentListModelHaljsonLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "creatorEmail" })
  creatorEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creatorFullName" })
  creatorFullName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdaterEmail" })
  lastUpdaterEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdaterFullName" })
  lastUpdaterFullName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "segmentId" })
  segmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage?: number;
}
