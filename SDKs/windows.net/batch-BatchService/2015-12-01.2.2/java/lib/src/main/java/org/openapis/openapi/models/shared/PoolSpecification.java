/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PoolSpecification - Specification for creating a new pool.
 */
public class PoolSpecification {
    /**
     * Gets or sets the list of application packages to be installed on each compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationPackageReferences")
    public ApplicationPackageReference[] applicationPackageReferences;

    public PoolSpecification withApplicationPackageReferences(ApplicationPackageReference[] applicationPackageReferences) {
        this.applicationPackageReferences = applicationPackageReferences;
        return this;
    }
    
    /**
     * Gets or sets a time interval for the desired AutoScale evaluation period in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoScaleEvaluationInterval")
    public String autoScaleEvaluationInterval;

    public PoolSpecification withAutoScaleEvaluationInterval(String autoScaleEvaluationInterval) {
        this.autoScaleEvaluationInterval = autoScaleEvaluationInterval;
        return this;
    }
    
    /**
     * Gets or sets the formula for the desired number of compute nodes in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoScaleFormula")
    public String autoScaleFormula;

    public PoolSpecification withAutoScaleFormula(String autoScaleFormula) {
        this.autoScaleFormula = autoScaleFormula;
        return this;
    }
    
    /**
     * Gets or sets a list of certificates to be installed on each compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificateReferences")
    public CertificateReference[] certificateReferences;

    public PoolSpecification withCertificateReferences(CertificateReference[] certificateReferences) {
        this.certificateReferences = certificateReferences;
        return this;
    }
    
    /**
     * Gets or sets the display name for the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public PoolSpecification withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Gets or sets whether the pool size should automatically adjust over time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableAutoScale")
    public Boolean enableAutoScale;

    public PoolSpecification withEnableAutoScale(Boolean enableAutoScale) {
        this.enableAutoScale = enableAutoScale;
        return this;
    }
    
    /**
     * Gets or sets whether the pool permits direct communication between nodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableInterNodeCommunication")
    public Boolean enableInterNodeCommunication;

    public PoolSpecification withEnableInterNodeCommunication(Boolean enableInterNodeCommunication) {
        this.enableInterNodeCommunication = enableInterNodeCommunication;
        return this;
    }
    
    /**
     * Gets or sets the maximum number of tasks that can run concurrently on a single compute node in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxTasksPerNode")
    public Integer maxTasksPerNode;

    public PoolSpecification withMaxTasksPerNode(Integer maxTasksPerNode) {
        this.maxTasksPerNode = maxTasksPerNode;
        return this;
    }
    
    /**
     * Gets or sets a list of name-value pairs associated with the pool as metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public MetadataItem[] metadata;

    public PoolSpecification withMetadata(MetadataItem[] metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Gets or sets the Azure Guest OS family to be installed on the virtual machines in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osFamily")
    public String osFamily;

    public PoolSpecification withOsFamily(String osFamily) {
        this.osFamily = osFamily;
        return this;
    }
    
    /**
     * Gets or sets the timeout for allocation of compute nodes to the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resizeTimeout")
    public String resizeTimeout;

    public PoolSpecification withResizeTimeout(String resizeTimeout) {
        this.resizeTimeout = resizeTimeout;
        return this;
    }
    
    /**
     * A task defined on a pool and run by compute nodes when they join the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTask")
    public StartTask startTask;

    public PoolSpecification withStartTask(StartTask startTask) {
        this.startTask = startTask;
        return this;
    }
    
    /**
     * Gets or sets the desired number of compute nodes in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetDedicated")
    public Integer targetDedicated;

    public PoolSpecification withTargetDedicated(Integer targetDedicated) {
        this.targetDedicated = targetDedicated;
        return this;
    }
    
    /**
     * Gets or sets the Azure Guest OS version to be installed on the virtual machines in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetOSVersion")
    public String targetOSVersion;

    public PoolSpecification withTargetOSVersion(String targetOSVersion) {
        this.targetOSVersion = targetOSVersion;
        return this;
    }
    
    /**
     * Specifies how tasks should be distributed across compute nodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskSchedulingPolicy")
    public TaskSchedulingPolicy taskSchedulingPolicy;

    public PoolSpecification withTaskSchedulingPolicy(TaskSchedulingPolicy taskSchedulingPolicy) {
        this.taskSchedulingPolicy = taskSchedulingPolicy;
        return this;
    }
    
    /**
     * Gets or sets the size of the virtual machines in the pool. All VMs in a pool are the same size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmSize")
    public String vmSize;

    public PoolSpecification withVmSize(String vmSize) {
        this.vmSize = vmSize;
        return this;
    }
    
    public PoolSpecification(){}
}
