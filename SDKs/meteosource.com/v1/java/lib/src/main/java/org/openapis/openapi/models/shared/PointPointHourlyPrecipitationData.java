/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PointPointHourlyPrecipitationData {
    /**
     * Total precipitation amount accumulated since last hour.
     * Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("convective")
    public Double convective;

    public PointPointHourlyPrecipitationData withConvective(Double convective) {
        this.convective = convective;
        return this;
    }
    
    /**
     * Precipitation in the surrounding of queried location. The data is 7x7 ASCII art string, queried location being in the center. Character `#` means there is precipitation, `.` means no precipitation. The distance between neighboring cells is 0.25\u00b0.
     * Unit: rainspot
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rainspot")
    public byte[] rainspot;

    public PointPointHourlyPrecipitationData withRainspot(byte[] rainspot) {
        this.rainspot = rainspot;
        return this;
    }
    
    /**
     * Total precipitation amount accumulated since last hour.
     * Units: metric = mm/h, us = inches per hour, uk = mm/h, ca = mm/h
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;

    public PointPointHourlyPrecipitationData withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    /**
     * Precipitation type, may be one of:
     * 
     * * `none`, it there is no precipitation
     * * `rain`
     * * `snow`
     * * `rain_snow`
     * * `ice pellets`
     * * `frozen rain`
     * 
     * Unit: precipitation type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public byte[] type;

    public PointPointHourlyPrecipitationData withType(byte[] type) {
        this.type = type;
        return this;
    }
    
    public PointPointHourlyPrecipitationData(){}
}
