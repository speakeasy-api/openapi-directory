"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ProductNotifierCreateSecurity:
    
    user_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'user_key' }})  
    

@dataclasses.dataclass
class ProductNotifierCreateRequest:
    
    order_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'orderId', 'style': 'simple', 'explode': False }})
    r"""ID of the ProductOrder as returned from a /product/buy call - 32 character hex value"""  
    type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'type', 'style': 'simple', 'explode': False }})
    r"""Type of the notifier - indicates the action the notifier will perform. Currently GET and POST are supported which performs an http(s) GET/POST to the supplied uri with appended notifierId= and orderId= parameters when the order processing is completed. Upon the POST request the order object is sent as a JSON body"""  
    uri: str = dataclasses.field(metadata={'path_param': { 'field_name': 'uri', 'style': 'simple', 'explode': False }})
    r"""URI of the notifier for the 'complete' action. Currently only a GET method HTTP(s) URL is supported. 1 to 250 characters long. Every slash in the URI must be replaced by a ~"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductNotifierCreateDefaultApplicationJSON:
    r"""Detailed information about the error"""
    
    code: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    tag: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag') }})  
    fault: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fault'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductNotifierCreate200ApplicationJSON:
    r"""Details of configured product order notification"""
    
    callback: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callback') }})  
    last_call_time: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastCallTime'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})  
    last_response_code: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastResponseCode') }})  
    notifier_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notifierType') }})  
    product_order_identity: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productOrderIdentity') }})  
    identity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identity'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class ProductNotifierCreateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    product_notifier_create_200_application_json_object: Optional[ProductNotifierCreate200ApplicationJSON] = dataclasses.field(default=None)
    r"""Details of configured product order notification"""  
    product_notifier_create_default_application_json_object: Optional[ProductNotifierCreateDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Detailed information about the error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    