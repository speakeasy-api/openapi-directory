// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SnapshotInput - A Filestore snapshot.
type SnapshotInput struct {
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description *string `json:"description,omitempty"`
	// Resource labels to represent user provided metadata.
	Labels map[string]string `json:"labels,omitempty"`
}

// SnapshotStateEnum - Output only. The snapshot state.
type SnapshotStateEnum string

const (
	SnapshotStateEnumStateUnspecified SnapshotStateEnum = "STATE_UNSPECIFIED"
	SnapshotStateEnumCreating         SnapshotStateEnum = "CREATING"
	SnapshotStateEnumReady            SnapshotStateEnum = "READY"
	SnapshotStateEnumDeleting         SnapshotStateEnum = "DELETING"
)

func (e *SnapshotStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "READY":
		fallthrough
	case "DELETING":
		*e = SnapshotStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SnapshotStateEnum: %s", s)
	}
}

// Snapshot - A Filestore snapshot.
type Snapshot struct {
	// Output only. The time when the snapshot was created.
	CreateTime *string `json:"createTime,omitempty"`
	// A description of the snapshot with 2048 characters or less. Requests with longer descriptions will be rejected.
	Description *string `json:"description,omitempty"`
	// Output only. The amount of bytes needed to allocate a full copy of the snapshot content
	FilesystemUsedBytes *string `json:"filesystemUsedBytes,omitempty"`
	// Resource labels to represent user provided metadata.
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. The resource name of the snapshot, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/snapshots/{snapshot_id}`.
	Name *string `json:"name,omitempty"`
	// Output only. The snapshot state.
	State *SnapshotStateEnum `json:"state,omitempty"`
}
