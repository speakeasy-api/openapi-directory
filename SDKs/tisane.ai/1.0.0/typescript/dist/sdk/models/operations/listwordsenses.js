"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListWordSensesResponse = exports.ListWordSenses200ApplicationJSON = exports.ListWordSenses200ApplicationJSONFeatures = exports.ListWordSenses200ApplicationJSONFamilies = exports.ListWordSensesRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var ListWordSensesRequest = /** @class */ (function (_super) {
    __extends(ListWordSensesRequest, _super);
    function ListWordSensesRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=Ocp-Apim-Subscription-Key",
        }),
        __metadata("design:type", String)
    ], ListWordSensesRequest.prototype, "ocpApimSubscriptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=language",
        }),
        __metadata("design:type", String)
    ], ListWordSensesRequest.prototype, "language", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=word" }),
        __metadata("design:type", String)
    ], ListWordSensesRequest.prototype, "word", void 0);
    return ListWordSensesRequest;
}(utils_1.SpeakeasyBase));
exports.ListWordSensesRequest = ListWordSensesRequest;
var ListWordSenses200ApplicationJSONFamilies = /** @class */ (function (_super) {
    __extends(ListWordSenses200ApplicationJSONFamilies, _super);
    function ListWordSenses200ApplicationJSONFamilies() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Key" }),
        __metadata("design:type", Number)
    ], ListWordSenses200ApplicationJSONFamilies.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Value" }),
        __metadata("design:type", Object)
    ], ListWordSenses200ApplicationJSONFamilies.prototype, "value", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "definition" }),
        __metadata("design:type", String)
    ], ListWordSenses200ApplicationJSONFamilies.prototype, "definition", void 0);
    return ListWordSenses200ApplicationJSONFamilies;
}(utils_1.SpeakeasyBase));
exports.ListWordSenses200ApplicationJSONFamilies = ListWordSenses200ApplicationJSONFamilies;
var ListWordSenses200ApplicationJSONFeatures = /** @class */ (function (_super) {
    __extends(ListWordSenses200ApplicationJSONFeatures, _super);
    function ListWordSenses200ApplicationJSONFeatures() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "index" }),
        __metadata("design:type", Number)
    ], ListWordSenses200ApplicationJSONFeatures.prototype, "index", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], ListWordSenses200ApplicationJSONFeatures.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], ListWordSenses200ApplicationJSONFeatures.prototype, "value", void 0);
    return ListWordSenses200ApplicationJSONFeatures;
}(utils_1.SpeakeasyBase));
exports.ListWordSenses200ApplicationJSONFeatures = ListWordSenses200ApplicationJSONFeatures;
var ListWordSenses200ApplicationJSON = /** @class */ (function (_super) {
    __extends(ListWordSenses200ApplicationJSON, _super);
    function ListWordSenses200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ListWordSenses200ApplicationJSONFamilies }),
        (0, class_transformer_1.Expose)({ name: "families" }),
        (0, class_transformer_1.Type)(function () { return ListWordSenses200ApplicationJSONFamilies; }),
        __metadata("design:type", Array)
    ], ListWordSenses200ApplicationJSON.prototype, "families", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ListWordSenses200ApplicationJSONFeatures }),
        (0, class_transformer_1.Expose)({ name: "features" }),
        (0, class_transformer_1.Type)(function () { return ListWordSenses200ApplicationJSONFeatures; }),
        __metadata("design:type", Array)
    ], ListWordSenses200ApplicationJSON.prototype, "features", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "frequency" }),
        __metadata("design:type", Number)
    ], ListWordSenses200ApplicationJSON.prototype, "frequency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isLemma" }),
        __metadata("design:type", Boolean)
    ], ListWordSenses200ApplicationJSON.prototype, "isLemma", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "legacyMapId" }),
        __metadata("design:type", Number)
    ], ListWordSenses200ApplicationJSON.prototype, "legacyMapId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lemma" }),
        __metadata("design:type", String)
    ], ListWordSenses200ApplicationJSON.prototype, "lemma", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lexemeId" }),
        __metadata("design:type", Number)
    ], ListWordSenses200ApplicationJSON.prototype, "lexemeId", void 0);
    return ListWordSenses200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.ListWordSenses200ApplicationJSON = ListWordSenses200ApplicationJSON;
var ListWordSensesResponse = /** @class */ (function (_super) {
    __extends(ListWordSensesResponse, _super);
    function ListWordSensesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListWordSensesResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ListWordSensesResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ListWordSensesResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ListWordSenses200ApplicationJSON }),
        __metadata("design:type", Array)
    ], ListWordSensesResponse.prototype, "listWordSenses200ApplicationJSONObjects", void 0);
    return ListWordSensesResponse;
}(utils_1.SpeakeasyBase));
exports.ListWordSensesResponse = ListWordSensesResponse;
