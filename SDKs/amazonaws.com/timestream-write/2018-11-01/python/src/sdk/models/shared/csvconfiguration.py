"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CsvConfiguration:
    r"""A delimited data format where the column separator can be a comma and the record separator is a newline character."""
    
    column_separator: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ColumnSeparator'), 'exclude': lambda f: f is None }})  
    escape_char: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EscapeChar'), 'exclude': lambda f: f is None }})  
    null_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NullValue'), 'exclude': lambda f: f is None }})  
    quote_char: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QuoteChar'), 'exclude': lambda f: f is None }})  
    trim_white_space: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrimWhiteSpace'), 'exclude': lambda f: f is None }})  
    