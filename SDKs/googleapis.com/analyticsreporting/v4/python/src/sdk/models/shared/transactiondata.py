"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransactionData:
    r"""Represents details collected when the visitor performs a transaction on the page."""
    
    transaction_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionId'), 'exclude': lambda f: f is None }})
    r"""The transaction ID, supplied by the e-commerce tracking method, for the purchase in the shopping cart."""  
    transaction_revenue: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionRevenue'), 'exclude': lambda f: f is None }})
    r"""The total sale revenue (excluding shipping and tax) of the transaction."""  
    transaction_shipping: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionShipping'), 'exclude': lambda f: f is None }})
    r"""Total cost of shipping."""  
    transaction_tax: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionTax'), 'exclude': lambda f: f is None }})
    r"""Total tax for the transaction."""  
    