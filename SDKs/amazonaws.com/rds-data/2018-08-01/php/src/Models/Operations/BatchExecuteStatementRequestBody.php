<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class BatchExecuteStatementRequestBody
{
    /**
     * The name of the database.
     * 
     * @var ?string $database
     */
	#[\JMS\Serializer\Annotation\SerializedName('database')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $database = null;
    
    /**
     * <p>The parameter set for the batch operation.</p> <p>The SQL statement is executed as many times as the number of parameter sets provided. To execute a SQL statement with no parameters, use one of the following options:</p> <ul> <li> <p>Specify one or more empty parameter sets.</p> </li> <li> <p>Use the <code>ExecuteStatement</code> operation instead of the <code>BatchExecuteStatement</code> operation.</p> </li> </ul> <note> <p>Array parameters are not supported.</p> </note>
     * 
     * @var ?array<array<\OpenAPI\OpenAPI\Models\Shared\SqlParameter>> $parameterSets
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameterSets')]
    #[\JMS\Serializer\Annotation\Type('array<array<OpenAPI\OpenAPI\Models\Shared\SqlParameter>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameterSets = null;
    
    /**
     * The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.
     * 
     * @var string $resourceArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('resourceArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $resourceArn;
    
    /**
     * <p>The name of the database schema.</p> <note> <p>Currently, the <code>schema</code> parameter isn't supported.</p> </note>
     * 
     * @var ?string $schema
     */
	#[\JMS\Serializer\Annotation\SerializedName('schema')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schema = null;
    
    /**
     * <p>The ARN of the secret that enables access to the DB cluster. Enter the database user name and password for the credentials in the secret.</p> <p>For information about creating the secret, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_database_secret.html">Create a database secret</a>.</p>
     * 
     * @var string $secretArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('secretArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $secretArn;
    
    /**
     * The SQL statement to run. Don't include a semicolon (;) at the end of the SQL statement.
     * 
     * @var string $sql
     */
	#[\JMS\Serializer\Annotation\SerializedName('sql')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sql;
    
    /**
     * <p>The identifier of a transaction that was started by using the <code>BeginTransaction</code> operation. Specify the transaction ID of the transaction that you want to include the SQL statement in.</p> <p>If the SQL statement is not part of a transaction, don't set this parameter.</p>
     * 
     * @var ?string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionId = null;
    
	public function __construct()
	{
		$this->database = null;
		$this->parameterSets = null;
		$this->resourceArn = "";
		$this->schema = null;
		$this->secretArn = "";
		$this->sql = "";
		$this->transactionId = null;
	}
}
