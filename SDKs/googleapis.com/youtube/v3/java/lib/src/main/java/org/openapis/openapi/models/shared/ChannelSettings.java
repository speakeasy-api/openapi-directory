/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ChannelSettings - Branding properties for the channel view.
 */
public class ChannelSettings {
    /**
     * The country of the channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public ChannelSettings withCountry(String country) {
        this.country = country;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultLanguage")
    public String defaultLanguage;

    public ChannelSettings withDefaultLanguage(String defaultLanguage) {
        this.defaultLanguage = defaultLanguage;
        return this;
    }
    
    /**
     * Which content tab users should see when viewing the channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultTab")
    public String defaultTab;

    public ChannelSettings withDefaultTab(String defaultTab) {
        this.defaultTab = defaultTab;
        return this;
    }
    
    /**
     * Specifies the channel description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ChannelSettings withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Title for the featured channels tab.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("featuredChannelsTitle")
    public String featuredChannelsTitle;

    public ChannelSettings withFeaturedChannelsTitle(String featuredChannelsTitle) {
        this.featuredChannelsTitle = featuredChannelsTitle;
        return this;
    }
    
    /**
     * The list of featured channels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("featuredChannelsUrls")
    public String[] featuredChannelsUrls;

    public ChannelSettings withFeaturedChannelsUrls(String[] featuredChannelsUrls) {
        this.featuredChannelsUrls = featuredChannelsUrls;
        return this;
    }
    
    /**
     * Lists keywords associated with the channel, comma-separated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keywords")
    public String keywords;

    public ChannelSettings withKeywords(String keywords) {
        this.keywords = keywords;
        return this;
    }
    
    /**
     * Whether user-submitted comments left on the channel page need to be approved by the channel owner to be publicly visible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("moderateComments")
    public Boolean moderateComments;

    public ChannelSettings withModerateComments(Boolean moderateComments) {
        this.moderateComments = moderateComments;
        return this;
    }
    
    /**
     * A prominent color that can be rendered on this channel page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profileColor")
    public String profileColor;

    public ChannelSettings withProfileColor(String profileColor) {
        this.profileColor = profileColor;
        return this;
    }
    
    /**
     * Whether the tab to browse the videos should be displayed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showBrowseView")
    public Boolean showBrowseView;

    public ChannelSettings withShowBrowseView(Boolean showBrowseView) {
        this.showBrowseView = showBrowseView;
        return this;
    }
    
    /**
     * Whether related channels should be proposed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showRelatedChannels")
    public Boolean showRelatedChannels;

    public ChannelSettings withShowRelatedChannels(Boolean showRelatedChannels) {
        this.showRelatedChannels = showRelatedChannels;
        return this;
    }
    
    /**
     * Specifies the channel title.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public ChannelSettings withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * The ID for a Google Analytics account to track and measure traffic to the channels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingAnalyticsAccountId")
    public String trackingAnalyticsAccountId;

    public ChannelSettings withTrackingAnalyticsAccountId(String trackingAnalyticsAccountId) {
        this.trackingAnalyticsAccountId = trackingAnalyticsAccountId;
        return this;
    }
    
    /**
     * The trailer of the channel, for users that are not subscribers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unsubscribedTrailer")
    public String unsubscribedTrailer;

    public ChannelSettings withUnsubscribedTrailer(String unsubscribedTrailer) {
        this.unsubscribedTrailer = unsubscribedTrailer;
        return this;
    }
    
    public ChannelSettings(){}
}
