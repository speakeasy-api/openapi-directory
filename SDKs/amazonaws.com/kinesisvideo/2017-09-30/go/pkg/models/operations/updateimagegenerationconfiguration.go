// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateImageGenerationConfigurationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateImageGenerationConfigurationRequestBodyImageGenerationConfiguration - The structure that contains the information required for the KVS images delivery. If null, the configuration will be deleted from the stream.
type UpdateImageGenerationConfigurationRequestBodyImageGenerationConfiguration struct {
	DestinationConfig *shared.ImageGenerationDestinationConfig `json:"DestinationConfig,omitempty"`
	Format            *shared.FormatEnum                       `json:"Format,omitempty"`
	FormatConfig      map[string]string                        `json:"FormatConfig,omitempty"`
	HeightPixels      *int64                                   `json:"HeightPixels,omitempty"`
	ImageSelectorType *shared.ImageSelectorTypeEnum            `json:"ImageSelectorType,omitempty"`
	SamplingInterval  *int64                                   `json:"SamplingInterval,omitempty"`
	Status            *shared.ConfigurationStatusEnum          `json:"Status,omitempty"`
	WidthPixels       *int64                                   `json:"WidthPixels,omitempty"`
}

type UpdateImageGenerationConfigurationRequestBody struct {
	// The structure that contains the information required for the KVS images delivery. If null, the configuration will be deleted from the stream.
	ImageGenerationConfiguration *UpdateImageGenerationConfigurationRequestBodyImageGenerationConfiguration `json:"ImageGenerationConfiguration,omitempty"`
	// The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to update the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
	StreamARN *string `json:"StreamARN,omitempty"`
	// The name of the stream from which to update the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
	StreamName *string `json:"StreamName,omitempty"`
}

type UpdateImageGenerationConfigurationRequest struct {
	Headers UpdateImageGenerationConfigurationHeaders
	Request UpdateImageGenerationConfigurationRequestBody `request:"mediaType=application/json"`
}

type UpdateImageGenerationConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// NoDataRetentionException
	NoDataRetentionException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateImageGenerationConfigurationOutput map[string]interface{}
}
