"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import button as shared_button
from ..shared import image as shared_image
from ..shared import keyvalue as shared_keyvalue
from ..shared import textparagraph as shared_textparagraph
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WidgetMarkup:
    r"""A widget is a UI element that presents texts, images, etc."""
    
    buttons: Optional[list[shared_button.Button]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buttons'), 'exclude': lambda f: f is None }})
    r"""A list of buttons. Buttons is also oneof data and only one of these fields should be set."""  
    image: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""An image that is specified by a URL and can have an onclick action."""  
    key_value: Optional[shared_keyvalue.KeyValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keyValue'), 'exclude': lambda f: f is None }})
    r"""A UI element contains a key (label) and a value (content). And this element may also contain some actions such as onclick button."""  
    text_paragraph: Optional[shared_textparagraph.TextParagraph] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textParagraph'), 'exclude': lambda f: f is None }})
    r"""A paragraph of text. Formatted text supported."""  
    