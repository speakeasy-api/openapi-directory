// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MemberRelationRelationTypeEnum - The relation between the group and the transitive member.
type MemberRelationRelationTypeEnum string

const (
	MemberRelationRelationTypeEnumRelationTypeUnspecified MemberRelationRelationTypeEnum = "RELATION_TYPE_UNSPECIFIED"
	MemberRelationRelationTypeEnumDirect                  MemberRelationRelationTypeEnum = "DIRECT"
	MemberRelationRelationTypeEnumIndirect                MemberRelationRelationTypeEnum = "INDIRECT"
	MemberRelationRelationTypeEnumDirectAndIndirect       MemberRelationRelationTypeEnum = "DIRECT_AND_INDIRECT"
)

func (e *MemberRelationRelationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RELATION_TYPE_UNSPECIFIED":
		fallthrough
	case "DIRECT":
		fallthrough
	case "INDIRECT":
		fallthrough
	case "DIRECT_AND_INDIRECT":
		*e = MemberRelationRelationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MemberRelationRelationTypeEnum: %s", s)
	}
}

// MemberRelation - Message representing a transitive membership of a group.
type MemberRelation struct {
	// Resource name for this member.
	Member *string `json:"member,omitempty"`
	// Entity key has an id and a namespace. In case of discussion forums, the id will be an email address without a namespace.
	PreferredMemberKey []EntityKey `json:"preferredMemberKey,omitempty"`
	// The relation between the group and the transitive member.
	RelationType *MemberRelationRelationTypeEnum `json:"relationType,omitempty"`
	// The membership role details (i.e name of role and expiry time).
	Roles []TransitiveMembershipRole `json:"roles,omitempty"`
}
