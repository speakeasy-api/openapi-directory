// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetVariantSetsCollectionPerPageEnum - Results per page {error_msg}
type GetVariantSetsCollectionPerPageEnum int64

const (
	GetVariantSetsCollectionPerPageEnumTwo    GetVariantSetsCollectionPerPageEnum = 2
	GetVariantSetsCollectionPerPageEnumTen    GetVariantSetsCollectionPerPageEnum = 10
	GetVariantSetsCollectionPerPageEnumTwenty GetVariantSetsCollectionPerPageEnum = 20
	GetVariantSetsCollectionPerPageEnumThirty GetVariantSetsCollectionPerPageEnum = 30
	GetVariantSetsCollectionPerPageEnumForty  GetVariantSetsCollectionPerPageEnum = 40
	GetVariantSetsCollectionPerPageEnumFifty  GetVariantSetsCollectionPerPageEnum = 50
)

func (e GetVariantSetsCollectionPerPageEnum) ToPointer() *GetVariantSetsCollectionPerPageEnum {
	return &e
}

func (e *GetVariantSetsCollectionPerPageEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 2:
		fallthrough
	case 10:
		fallthrough
	case 20:
		fallthrough
	case 30:
		fallthrough
	case 40:
		fallthrough
	case 50:
		*e = GetVariantSetsCollectionPerPageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVariantSetsCollectionPerPageEnum: %v", v)
	}
}

type GetVariantSetsCollectionRequest struct {
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page {error_msg}
	PerPage *GetVariantSetsCollectionPerPageEnum `queryParam:"style=form,explode=true,name=per_page"`
}

type GetVariantSetsCollectionResponse struct {
	ContentType string
	// Success
	PageOfVariantSets *shared.PageOfVariantSets
	StatusCode        int
	RawResponse       *http.Response
}
