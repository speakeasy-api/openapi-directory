"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import availablevendorsfilter as shared_availablevendorsfilter
from ..shared import userlist as shared_userlist
from enum import Enum
from typing import Optional

class GetAvailableVendorsWithEnum(str, Enum):
    USER = 'user'


@dataclasses.dataclass
class GetAvailableVendorsRequest:
    
    available_vendors_filter: Optional[shared_availablevendorsfilter.AvailableVendorsFilter] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    with_: Optional[list[GetAvailableVendorsWithEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with[]', 'style': 'form', 'explode': True }})
    r"""Include detailed information. Possible values 'user'. Requesting user info enrichment takes much longer."""  
    

@dataclasses.dataclass
class GetAvailableVendorsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    user_list: Optional[shared_userlist.UserList] = dataclasses.field(default=None)
    r"""User list"""  
    