"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudassuredworkloadsv1violationremediationinstructions as shared_googlecloudassuredworkloadsv1violationremediationinstructions
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudAssuredworkloadsV1ViolationRemediationRemediationTypeEnum(str, Enum):
    r"""Output only. Reemediation type based on the type of org policy values violated"""
    REMEDIATION_TYPE_UNSPECIFIED = 'REMEDIATION_TYPE_UNSPECIFIED'
    REMEDIATION_BOOLEAN_ORG_POLICY_VIOLATION = 'REMEDIATION_BOOLEAN_ORG_POLICY_VIOLATION'
    REMEDIATION_LIST_ALLOWED_VALUES_ORG_POLICY_VIOLATION = 'REMEDIATION_LIST_ALLOWED_VALUES_ORG_POLICY_VIOLATION'
    REMEDIATION_LIST_DENIED_VALUES_ORG_POLICY_VIOLATION = 'REMEDIATION_LIST_DENIED_VALUES_ORG_POLICY_VIOLATION'
    REMEDIATION_RESTRICT_CMEK_CRYPTO_KEY_PROJECTS_ORG_POLICY_VIOLATION = 'REMEDIATION_RESTRICT_CMEK_CRYPTO_KEY_PROJECTS_ORG_POLICY_VIOLATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAssuredworkloadsV1ViolationRemediation:
    r"""Represents remediation guidance to resolve compliance violation for AssuredWorkload"""
    
    compliant_values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compliantValues'), 'exclude': lambda f: f is None }})
    r"""Values that can resolve the violation For example: for list org policy violations, this will either be the list of allowed or denied values"""  
    instructions: Optional[shared_googlecloudassuredworkloadsv1violationremediationinstructions.GoogleCloudAssuredworkloadsV1ViolationRemediationInstructions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instructions'), 'exclude': lambda f: f is None }})
    r"""Instructions to remediate violation"""  
    remediation_type: Optional[GoogleCloudAssuredworkloadsV1ViolationRemediationRemediationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remediationType'), 'exclude': lambda f: f is None }})
    r"""Output only. Reemediation type based on the type of org policy values violated"""  
    