// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FileMiniV1StatusEnum - The status of the file. If the status is `deleted`, you can no longer get a link to access the contents of the file using `/files/{file_id}/temporary_link`.
type FileMiniV1StatusEnum string

const (
	FileMiniV1StatusEnumAvailable FileMiniV1StatusEnum = "available"
	FileMiniV1StatusEnumDeleted   FileMiniV1StatusEnum = "deleted"
)

func (e FileMiniV1StatusEnum) ToPointer() *FileMiniV1StatusEnum {
	return &e
}

func (e *FileMiniV1StatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "available":
		fallthrough
	case "deleted":
		*e = FileMiniV1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FileMiniV1StatusEnum: %v", v)
	}
}

// FileMiniV1TypeEnum - The type of file defined by Herald to distinguish between multiple files, such as `quote_summary` or `policy_specimen`.
type FileMiniV1TypeEnum string

const (
	FileMiniV1TypeEnumQuoteSummary       FileMiniV1TypeEnum = "quote_summary"
	FileMiniV1TypeEnumPolicySpecimen     FileMiniV1TypeEnum = "policy_specimen"
	FileMiniV1TypeEnumCyberRiskAssement  FileMiniV1TypeEnum = "cyber_risk_assement"
	FileMiniV1TypeEnumApplicationSummary FileMiniV1TypeEnum = "application_summary"
)

func (e FileMiniV1TypeEnum) ToPointer() *FileMiniV1TypeEnum {
	return &e
}

func (e *FileMiniV1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "quote_summary":
		fallthrough
	case "policy_specimen":
		fallthrough
	case "cyber_risk_assement":
		fallthrough
	case "application_summary":
		*e = FileMiniV1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FileMiniV1TypeEnum: %v", v)
	}
}

// FileMiniV1 - A mini representation of a file, used when nested within another response.
type FileMiniV1 struct {
	// id for a specific file.
	ID *string `json:"id,omitempty"`
	// The status of the file. If the status is `deleted`, you can no longer get a link to access the contents of the file using `/files/{file_id}/temporary_link`.
	Status *FileMiniV1StatusEnum `json:"status,omitempty"`
	// Text for the file that can be shown on screen.
	Text *string `json:"text,omitempty"`
	// The type of file defined by Herald to distinguish between multiple files, such as `quote_summary` or `policy_specimen`.
	Type *FileMiniV1TypeEnum `json:"type,omitempty"`
}
