<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Transcode - Represents information about the transcoded audio or video file.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Transcode
{
    /**
     * The bit rate for the audio stream of the transcoded video, or the bit rate for the transcoded audio, in kilobits per second.
     * 
     * @var ?string $audioBitRateKbps
     */
	#[\JMS\Serializer\Annotation\SerializedName('audioBitRateKbps')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $audioBitRateKbps = null;
    
    /**
     * The sample rate for the audio stream of the transcoded video, or the sample rate for the transcoded audio, in hertz.
     * 
     * @var ?string $audioSampleRateHz
     */
	#[\JMS\Serializer\Annotation\SerializedName('audioSampleRateHz')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $audioSampleRateHz = null;
    
    /**
     * The transcoding bit rate of the transcoded video, in kilobits per second.
     * 
     * @var ?string $bitRateKbps
     */
	#[\JMS\Serializer\Annotation\SerializedName('bitRateKbps')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bitRateKbps = null;
    
    /**
     * Dimensions.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Dimensions $dimensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Dimensions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Dimensions $dimensions = null;
    
    /**
     * The size of the transcoded file, in bytes.
     * 
     * @var ?string $fileSizeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileSizeBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fileSizeBytes = null;
    
    /**
     * The frame rate of the transcoded video, in frames per second.
     * 
     * @var ?float $frameRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('frameRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $frameRate = null;
    
    /**
     * The MIME type of the transcoded file.
     * 
     * @var ?string $mimeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('mimeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mimeType = null;
    
    /**
     * The name of the transcoded file.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Indicates if the transcoding was successful.
     * 
     * @var ?bool $transcoded
     */
	#[\JMS\Serializer\Annotation\SerializedName('transcoded')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $transcoded = null;
    
	public function __construct()
	{
		$this->audioBitRateKbps = null;
		$this->audioSampleRateHz = null;
		$this->bitRateKbps = null;
		$this->dimensions = null;
		$this->fileSizeBytes = null;
		$this->frameRate = null;
		$this->mimeType = null;
		$this->name = null;
		$this->transcoded = null;
	}
}
