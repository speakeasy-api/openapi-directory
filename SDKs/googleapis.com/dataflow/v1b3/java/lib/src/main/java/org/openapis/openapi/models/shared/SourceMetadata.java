/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SourceMetadata - Metadata about a Source useful for automatically optimizing and tuning the pipeline, etc.
 */
public class SourceMetadata {
    /**
     * An estimate of the total size (in bytes) of the data that would be read from this source. This estimate is in terms of external storage size, before any decompression or other processing done by the reader.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimatedSizeBytes")
    public String estimatedSizeBytes;

    public SourceMetadata withEstimatedSizeBytes(String estimatedSizeBytes) {
        this.estimatedSizeBytes = estimatedSizeBytes;
        return this;
    }
    
    /**
     * Specifies that the size of this source is known to be infinite (this is a streaming source).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("infinite")
    public Boolean infinite;

    public SourceMetadata withInfinite(Boolean infinite) {
        this.infinite = infinite;
        return this;
    }
    
    /**
     * Whether this source is known to produce key/value pairs with the (encoded) keys in lexicographically sorted order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producesSortedKeys")
    public Boolean producesSortedKeys;

    public SourceMetadata withProducesSortedKeys(Boolean producesSortedKeys) {
        this.producesSortedKeys = producesSortedKeys;
        return this;
    }
    
    public SourceMetadata(){}
}
