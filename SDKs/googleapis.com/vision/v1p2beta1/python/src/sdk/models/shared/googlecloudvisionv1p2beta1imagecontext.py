"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudvisionv1p2beta1crophintsparams as shared_googlecloudvisionv1p2beta1crophintsparams
from ..shared import googlecloudvisionv1p2beta1latlongrect as shared_googlecloudvisionv1p2beta1latlongrect
from ..shared import googlecloudvisionv1p2beta1productsearchparams as shared_googlecloudvisionv1p2beta1productsearchparams
from ..shared import googlecloudvisionv1p2beta1textdetectionparams as shared_googlecloudvisionv1p2beta1textdetectionparams
from ..shared import googlecloudvisionv1p2beta1webdetectionparams as shared_googlecloudvisionv1p2beta1webdetectionparams
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVisionV1p2beta1ImageContext:
    r"""Image context and/or feature-specific parameters."""
    
    crop_hints_params: Optional[shared_googlecloudvisionv1p2beta1crophintsparams.GoogleCloudVisionV1p2beta1CropHintsParams] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cropHintsParams'), 'exclude': lambda f: f is None }})
    r"""Parameters for crop hints annotation request."""  
    language_hints: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageHints'), 'exclude': lambda f: f is None }})
    r"""List of languages to use for TEXT_DETECTION. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Text detection returns an error if one or more of the specified languages is not one of the [supported languages](https://cloud.google.com/vision/docs/languages)."""  
    lat_long_rect: Optional[shared_googlecloudvisionv1p2beta1latlongrect.GoogleCloudVisionV1p2beta1LatLongRect] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latLongRect'), 'exclude': lambda f: f is None }})
    r"""Rectangle determined by min and max `LatLng` pairs."""  
    product_search_params: Optional[shared_googlecloudvisionv1p2beta1productsearchparams.GoogleCloudVisionV1p2beta1ProductSearchParams] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productSearchParams'), 'exclude': lambda f: f is None }})
    r"""Parameters for a product search request."""  
    text_detection_params: Optional[shared_googlecloudvisionv1p2beta1textdetectionparams.GoogleCloudVisionV1p2beta1TextDetectionParams] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textDetectionParams'), 'exclude': lambda f: f is None }})
    r"""Parameters for text detections. This is used to control TEXT_DETECTION and DOCUMENT_TEXT_DETECTION features."""  
    web_detection_params: Optional[shared_googlecloudvisionv1p2beta1webdetectionparams.GoogleCloudVisionV1p2beta1WebDetectionParams] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webDetectionParams'), 'exclude': lambda f: f is None }})
    r"""Parameters for web detection request."""  
    