/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConnectorRuntimeSetting - Contains information about the connector runtime settings that are required for flow execution.
 */
public class ConnectorRuntimeSetting {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorSuppliedValueOptions")
    public String[] connectorSuppliedValueOptions;
    public ConnectorRuntimeSetting withConnectorSuppliedValueOptions(String[] connectorSuppliedValueOptions) {
        this.connectorSuppliedValueOptions = connectorSuppliedValueOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataType")
    public String dataType;
    public ConnectorRuntimeSetting withDataType(String dataType) {
        this.dataType = dataType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ConnectorRuntimeSetting withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRequired")
    public Boolean isRequired;
    public ConnectorRuntimeSetting withIsRequired(Boolean isRequired) {
        this.isRequired = isRequired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;
    public ConnectorRuntimeSetting withKey(String key) {
        this.key = key;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;
    public ConnectorRuntimeSetting withLabel(String label) {
        this.label = label;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;
    public ConnectorRuntimeSetting withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
}
