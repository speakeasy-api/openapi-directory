/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PipeStateEnum } from "./pipestateenum";
import { RequestedPipeStateEnum } from "./requestedpipestateenum";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class UpdatePipeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrentState" })
  currentState?: PipeStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DesiredState" })
  desiredState?: RequestedPipeStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}
