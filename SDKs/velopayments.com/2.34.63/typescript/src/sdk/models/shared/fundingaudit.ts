/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FundingEvent } from "./fundingevent";
import { Expose, Transform, Type } from "class-transformer";

export class FundingAudit extends SpeakeasyBase {
  /**
   * The amount funded
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * The currency of the funding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  @SpeakeasyMetadata({ elemType: FundingEvent })
  @Expose({ name: "events" })
  @Type(() => FundingEvent)
  events?: FundingEvent[];

  @SpeakeasyMetadata()
  @Expose({ name: "fundingAccountName" })
  fundingAccountName?: string;

  /**
   * Funding type. One of the following values: ACH, WIRE, EMBEDDED, BANK_TRANSFER
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fundingType" })
  fundingType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceAccountName" })
  sourceAccountName?: string;

  /**
   * Status of the funding. One of the following values: PENDING, FAILED, CREDIT, DEBIT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Type of top up. One of the following values: AUTOMATIC, MANUAL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topupType" })
  topupType?: string;
}
