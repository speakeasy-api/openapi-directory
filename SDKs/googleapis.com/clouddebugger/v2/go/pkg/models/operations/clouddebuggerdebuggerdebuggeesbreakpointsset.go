// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ClouddebuggerDebuggerDebuggeesBreakpointsSetSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type ClouddebuggerDebuggerDebuggeesBreakpointsSetSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type ClouddebuggerDebuggerDebuggeesBreakpointsSetSecurity struct {
	Option1 *ClouddebuggerDebuggerDebuggeesBreakpointsSetSecurityOption1 `security:"option"`
	Option2 *ClouddebuggerDebuggerDebuggeesBreakpointsSetSecurityOption2 `security:"option"`
}

// ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum - The canary option set by the user upon setting breakpoint.
type ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum string

const (
	ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnumCanaryOptionUnspecified ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum = "CANARY_OPTION_UNSPECIFIED"
	ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnumCanaryOptionTryEnable   ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum = "CANARY_OPTION_TRY_ENABLE"
	ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnumCanaryOptionTryDisable  ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum = "CANARY_OPTION_TRY_DISABLE"
)

func (e ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum) ToPointer() *ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum {
	return &e
}

func (e *ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CANARY_OPTION_UNSPECIFIED":
		fallthrough
	case "CANARY_OPTION_TRY_ENABLE":
		fallthrough
	case "CANARY_OPTION_TRY_DISABLE":
		*e = ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum: %v", v)
	}
}

type ClouddebuggerDebuggerDebuggeesBreakpointsSetRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum  `queryParam:"style=form,explode=true,name=$.xgafv"`
	Breakpoint  *shared.Breakpoint `request:"mediaType=application/json"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// The canary option set by the user upon setting breakpoint.
	CanaryOption *ClouddebuggerDebuggerDebuggeesBreakpointsSetCanaryOptionEnum `queryParam:"style=form,explode=true,name=canaryOption"`
	// Required. The client version making the call. Schema: `domain/type/version` (e.g., `google.com/intellij/v1`).
	ClientVersion *string `queryParam:"style=form,explode=true,name=clientVersion"`
	// Required. ID of the debuggee where the breakpoint is to be set.
	DebuggeeID string `pathParam:"style=simple,explode=false,name=debuggeeId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type ClouddebuggerDebuggerDebuggeesBreakpointsSetResponse struct {
	ContentType string
	// Successful response
	SetBreakpointResponse *shared.SetBreakpointResponse
	StatusCode            int
	RawResponse           *http.Response
}
