/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuditEvent } from "./auditevent";
import { PaginationData } from "./paginationdata";
import { PaginationLinks } from "./paginationlinks";
import { Expose, Type } from "class-transformer";

/**
 * Container containing the `events` array.
 */
export class AuditRespEmbedded extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AuditEvent })
  @Expose({ name: "events" })
  @Type(() => AuditEvent)
  events?: AuditEvent[];
}

/**
 * OK
 */
export class AuditResp extends SpeakeasyBase {
  /**
   * Container containing the `events` array.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "_embedded" })
  @Type(() => AuditRespEmbedded)
  embedded?: AuditRespEmbedded;

  /**
   * Container containing self, next and last page links.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => PaginationLinks)
  links?: PaginationLinks;

  /**
   * Page containing results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  @Type(() => PaginationData)
  page?: PaginationData;
}
