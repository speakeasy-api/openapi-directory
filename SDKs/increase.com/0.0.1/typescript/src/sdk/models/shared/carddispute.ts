/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.
 */
export class CardDisputeCardDisputeAcceptance extends SpeakeasyBase {
  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accepted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  acceptedAt: Date;

  /**
   * The identifier of the Card Dispute that was accepted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "card_dispute_id" })
  cardDisputeId: string;

  /**
   * The identifier of the Transaction that was created to return the disputed funds to your account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;
}

/**
 * If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.
 */
export class CardDisputeCardDisputeRejection extends SpeakeasyBase {
  /**
   * The identifier of the Card Dispute that was rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "card_dispute_id" })
  cardDisputeId: string;

  /**
   * Why the Card Dispute was rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "explanation" })
  explanation: string;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rejected_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  rejectedAt: Date;
}

/**
 * The results of the Dispute investigation.
 */
export enum CardDisputeStatusEnum {
  PendingReviewing = "pending_reviewing",
  Accepted = "accepted",
  Rejected = "rejected",
}

/**
 * A constant representing the object's type. For this resource it will always be `card_dispute`.
 */
export enum CardDisputeTypeEnum {
  CardDispute = "card_dispute",
}

/**
 * If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate.
 */
export class CardDispute extends SpeakeasyBase {
  /**
   * If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acceptance" })
  @Type(() => CardDisputeCardDisputeAcceptance)
  acceptance: CardDisputeCardDisputeAcceptance;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The identifier of the Transaction that was disputed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disputed_transaction_id" })
  disputedTransactionId: string;

  /**
   * Why you disputed the Transaction in question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "explanation" })
  explanation: string;

  /**
   * The Card Dispute identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rejection" })
  @Type(() => CardDisputeCardDisputeRejection)
  rejection: CardDisputeCardDisputeRejection;

  /**
   * The results of the Dispute investigation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CardDisputeStatusEnum;

  /**
   * A constant representing the object's type. For this resource it will always be `card_dispute`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CardDisputeTypeEnum;
}
