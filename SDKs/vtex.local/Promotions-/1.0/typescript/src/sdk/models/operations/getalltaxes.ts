/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetAllTaxesRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;
}

/**
 * Limit configuration.
 */
export class GetAllTaxes200ApplicationJSONLimitConfiguration extends SpeakeasyBase {
  /**
   * Actives count.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activesCount" })
  activesCount?: number;

  /**
   * Limit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;
}

/**
 * OK
 */
export class GetAllTaxes200ApplicationJSON extends SpeakeasyBase {
  /**
   * Archived items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archivedItems" })
  archivedItems?: string[];

  /**
   * Disabled items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabledItems" })
  disabledItems?: string[];

  /**
   * Array with taxes.
   */
  @SpeakeasyMetadata({ elemType: shared.GetTaxes })
  @Expose({ name: "items" })
  @Type(() => shared.GetTaxes)
  items?: shared.GetTaxes[];

  /**
   * Limit configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitConfiguration" })
  @Type(() => GetAllTaxes200ApplicationJSONLimitConfiguration)
  limitConfiguration?: GetAllTaxes200ApplicationJSONLimitConfiguration;
}

export class GetAllTaxesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getAllTaxes200ApplicationJSONObject?: GetAllTaxes200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
