/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Release - Release represents a repository release
 */
public class Release {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assets")
    public Attachment[] assets;

    public Release withAssets(Attachment[] assets) {
        this.assets = assets;
        return this;
    }
    
    /**
     * User represents a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public User author;

    public Release withAuthor(User author) {
        this.author = author;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    public String body;

    public Release withBody(String body) {
        this.body = body;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public Release withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("draft")
    public Boolean draft;

    public Release withDraft(Boolean draft) {
        this.draft = draft;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_url")
    public String htmlUrl;

    public Release withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public Release withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Release withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prerelease")
    public Boolean prerelease;

    public Release withPrerelease(Boolean prerelease) {
        this.prerelease = prerelease;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("published_at")
    public OffsetDateTime publishedAt;

    public Release withPublishedAt(OffsetDateTime publishedAt) {
        this.publishedAt = publishedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag_name")
    public String tagName;

    public Release withTagName(String tagName) {
        this.tagName = tagName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tarball_url")
    public String tarballUrl;

    public Release withTarballUrl(String tarballUrl) {
        this.tarballUrl = tarballUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_commitish")
    public String targetCommitish;

    public Release withTargetCommitish(String targetCommitish) {
        this.targetCommitish = targetCommitish;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public Release withUrl(String url) {
        this.url = url;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zipball_url")
    public String zipballUrl;

    public Release withZipballUrl(String zipballUrl) {
        this.zipballUrl = zipballUrl;
        return this;
    }
    
    public Release(){}
}
