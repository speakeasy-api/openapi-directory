<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class UnmanagedObjectDetails
{
    /**
     * The amount of storage on the archival location used by unmanaged snapshots.
     * 
     * @var int $archiveStorage
     */
	#[\JMS\Serializer\Annotation\SerializedName('archiveStorage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $archiveStorage;
    
    /**
     * A boolean that specifies whether any of the snapshots for this object are being retained by a SLA Domain at any location.
     * 
     * 
     * 
     * @var bool $hasSnapshotsWithPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasSnapshotsWithPolicy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $hasSnapshotsWithPolicy;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Boolean that specifies whether the object is remote or local. A value of true indicates that the object is remote.
     * 
     * 
     * 
     * @var ?bool $isRemote
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRemote')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isRemote = null;
    
    /**
     * The amount of storage on the local cluster used by unmanaged snapshots.
     * 
     * @var int $localStorage
     */
	#[\JMS\Serializer\Annotation\SerializedName('localStorage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $localStorage;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The type of the unmanaged object. Valid object types are VirtualMachine, MssqlDatabase, LinuxFileset, ShareFileset, WindowsFileset, NutanixVirtualMachine, Ec2Instance and StorageArrayVolumeGroup.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectDetailsObjectTypeEnum $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectDetailsObjectTypeEnum>')]
    public UnmanagedObjectDetailsObjectTypeEnum $objectType;
    
	#[\JMS\Serializer\Annotation\SerializedName('pendingSlaDomain')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedObjectPendingSlaInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedObjectPendingSlaInfo $pendingSlaDomain = null;
    
    /**
     * Summary information of all objects on the physical path to this object.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\LocationPathPoint> $physicalLocation
     */
	#[\JMS\Serializer\Annotation\SerializedName('physicalLocation')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LocationPathPoint>')]
    public array $physicalLocation;
    
	#[\JMS\Serializer\Annotation\SerializedName('recoveryInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SnappableRecoveryInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SnappableRecoveryInfo $recoveryInfo = null;
    
    /**
     * ID assigned to an SLA Domain retention policy.
     * 
     * @var string $retentionSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $retentionSlaDomainId;
    
    /**
     * Name of an SLA Domain retention policy.
     * 
     * @var string $retentionSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $retentionSlaDomainName;
    
    /**
     * Optional field with the ID assigned to an SLA Domain by Polaris.
     * 
     * @var ?string $retentionSlaDomainPolarisManagedId
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainPolarisManagedId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $retentionSlaDomainPolarisManagedId = null;
    
    /**
     * Total number of snapshots to for the specified object.
     * 
     * @var int $snapshotCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshotCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $snapshotCount;
    
    /**
     * Unmanaged Status of this object. Protected means that this object is still protected by an SLA Policy. Unprotected means that this object has become unprotected. Relic means that Rubrik has lost contact with this object.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectDetailsUnmanagedStatusEnum $unmanagedStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('unmanagedStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectDetailsUnmanagedStatusEnum>')]
    public UnmanagedObjectDetailsUnmanagedStatusEnum $unmanagedStatus;
    
	public function __construct()
	{
		$this->archiveStorage = 0;
		$this->hasSnapshotsWithPolicy = false;
		$this->id = "";
		$this->isRemote = null;
		$this->localStorage = 0;
		$this->name = "";
		$this->objectType = \OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectDetailsObjectTypeEnum::VIRTUAL_MACHINE;
		$this->pendingSlaDomain = null;
		$this->physicalLocation = [];
		$this->recoveryInfo = null;
		$this->retentionSlaDomainId = "";
		$this->retentionSlaDomainName = "";
		$this->retentionSlaDomainPolarisManagedId = null;
		$this->snapshotCount = 0;
		$this->unmanagedStatus = \OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectDetailsUnmanagedStatusEnum::PROTECTED;
	}
}
