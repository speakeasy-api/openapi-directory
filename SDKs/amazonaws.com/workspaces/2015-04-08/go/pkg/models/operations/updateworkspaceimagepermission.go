// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateWorkspaceImagePermissionXAmzTargetEnum
type UpdateWorkspaceImagePermissionXAmzTargetEnum string

const (
	UpdateWorkspaceImagePermissionXAmzTargetEnumWorkspacesServiceUpdateWorkspaceImagePermission UpdateWorkspaceImagePermissionXAmzTargetEnum = "WorkspacesService.UpdateWorkspaceImagePermission"
)

func (e *UpdateWorkspaceImagePermissionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkspacesService.UpdateWorkspaceImagePermission":
		*e = UpdateWorkspaceImagePermissionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateWorkspaceImagePermissionXAmzTargetEnum: %s", s)
	}
}

type UpdateWorkspaceImagePermissionRequest struct {
	UpdateWorkspaceImagePermissionRequest shared.UpdateWorkspaceImagePermissionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            UpdateWorkspaceImagePermissionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateWorkspaceImagePermissionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ResourceUnavailableException
	ResourceUnavailableException interface{}
	// Success
	UpdateWorkspaceImagePermissionResult map[string]interface{}
}
