/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class PostApiV1FiltersRequestBody {
    /**
     * Array of enumerable strings `home`, `notifications`, `public`, `thread`. At least one context must be specified.
     */
    
    public PostApiV1FiltersRequestBodyContextEnum[] context;

    public PostApiV1FiltersRequestBody withContext(PostApiV1FiltersRequestBodyContextEnum[] context) {
        this.context = context;
        return this;
    }
    
    /**
     * Number of seconds from now the filter should expire. Otherwise, null for a filter that doesn't expire.
     */
    
    public Long expiresIn;

    public PostApiV1FiltersRequestBody withExpiresIn(Long expiresIn) {
        this.expiresIn = expiresIn;
        return this;
    }
    
    /**
     * Should the server irreversibly drop matching entities from home and notifications?
     */
    
    public Boolean irreversible;

    public PostApiV1FiltersRequestBody withIrreversible(Boolean irreversible) {
        this.irreversible = irreversible;
        return this;
    }
    
    /**
     * Text to be filtered.
     */
    
    public String phrase;

    public PostApiV1FiltersRequestBody withPhrase(String phrase) {
        this.phrase = phrase;
        return this;
    }
    
    /**
     * Consider word boundaries?
     */
    
    public Boolean wholeWord;

    public PostApiV1FiltersRequestBody withWholeWord(Boolean wholeWord) {
        this.wholeWord = wholeWord;
        return this;
    }
    
    public PostApiV1FiltersRequestBody(@JsonProperty("context") PostApiV1FiltersRequestBodyContextEnum[] context, @JsonProperty("phrase") String phrase) {
        this.context = context;
        this.phrase = phrase;
  }
}
