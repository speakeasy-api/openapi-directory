"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import coverageresourcetype_enum as shared_coverageresourcetype_enum
from ..shared import resourcescanmetadata as shared_resourcescanmetadata
from ..shared import scanstatus as shared_scanstatus
from ..shared import scantype_enum as shared_scantype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CoveredResource:
    r"""An object that contains details about a resource covered by Amazon Inspector."""
    
    account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId') }})  
    resource_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceId') }})  
    resource_type: shared_coverageresourcetype_enum.CoverageResourceTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceType') }})  
    scan_type: shared_scantype_enum.ScanTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scanType') }})  
    resource_metadata: Optional[shared_resourcescanmetadata.ResourceScanMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceMetadata'), 'exclude': lambda f: f is None }})  
    scan_status: Optional[shared_scanstatus.ScanStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scanStatus'), 'exclude': lambda f: f is None }})  
    