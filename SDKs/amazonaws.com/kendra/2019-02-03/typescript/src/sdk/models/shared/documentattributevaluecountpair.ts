/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DocumentAttributeValue } from "./documentattributevalue";
import { FacetResult } from "./facetresult";
import { Expose, Type } from "class-transformer";

/**
 * Provides the count of documents that match a particular attribute when doing a faceted search.
 */
export class DocumentAttributeValueCountPair extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Count" })
  count?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentAttributeValue" })
  @Type(() => DocumentAttributeValue)
  documentAttributeValue?: DocumentAttributeValue;

  @SpeakeasyMetadata({ elemType: FacetResult })
  @Expose({ name: "FacetResults" })
  @Type(() => FacetResult)
  facetResults?: FacetResult[];
}
