// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContainerServicePowerNameEnum string

const (
	ContainerServicePowerNameEnumNano   ContainerServicePowerNameEnum = "nano"
	ContainerServicePowerNameEnumMicro  ContainerServicePowerNameEnum = "micro"
	ContainerServicePowerNameEnumSmall  ContainerServicePowerNameEnum = "small"
	ContainerServicePowerNameEnumMedium ContainerServicePowerNameEnum = "medium"
	ContainerServicePowerNameEnumLarge  ContainerServicePowerNameEnum = "large"
	ContainerServicePowerNameEnumXlarge ContainerServicePowerNameEnum = "xlarge"
)

func (e ContainerServicePowerNameEnum) ToPointer() *ContainerServicePowerNameEnum {
	return &e
}

func (e *ContainerServicePowerNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nano":
		fallthrough
	case "micro":
		fallthrough
	case "small":
		fallthrough
	case "medium":
		fallthrough
	case "large":
		fallthrough
	case "xlarge":
		*e = ContainerServicePowerNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContainerServicePowerNameEnum: %v", v)
	}
}
