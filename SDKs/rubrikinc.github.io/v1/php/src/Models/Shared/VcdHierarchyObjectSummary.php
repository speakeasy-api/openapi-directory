<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VcdHierarchyObjectSummary - Details of the hierarchy object.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VcdHierarchyObjectSummary
{
    /**
     * The ID of the SLA Domain configured directly on the Rubrik object.
     * 
     * @var string $configuredSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configuredSlaDomainId;
    
    /**
     * The name of the SLA Domain configured directly on the Rubrik object.
     * 
     * @var string $configuredSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configuredSlaDomainName;
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConfiguredSlaTypeEnum $configuredSlaDomainType
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConfiguredSlaTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConfiguredSlaTypeEnum $configuredSlaDomainType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('connectionStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VcdConnectionStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VcdConnectionStatus $connectionStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('descendantCount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VcdHierarchyObjectDescendantCount')]
    public VcdHierarchyObjectDescendantCount $descendantCount;
    
    /**
     * The ID of the SLA Domain that controls the protection of the Rubrik object.
     * 
     * @var string $effectiveSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effectiveSlaDomainId;
    
    /**
     * The name of the SLA Domain that controls the protection of the Rubrik object.
     * 
     * @var string $effectiveSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effectiveSlaDomainName;
    
    /**
     * Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
     * 
     * @var ?string $effectiveSlaDomainPolarisManagedId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainPolarisManagedId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaDomainPolarisManagedId = null;
    
    /**
     * The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     * 
     * @var ?string $effectiveSlaSourceObjectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaSourceObjectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaSourceObjectId = null;
    
    /**
     * The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     * 
     * @var ?string $effectiveSlaSourceObjectName
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaSourceObjectName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaSourceObjectName = null;
    
    /**
     * attributes pertaining to each vCD hierarchy object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VcdHierarchyObjectAttributes $extendedAttributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('extendedAttributes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VcdHierarchyObjectAttributes')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VcdHierarchyObjectAttributes $extendedAttributes = null;
    
    /**
     * The ID of the Rubrik object.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * $infraPath
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ManagedHierarchyObjectAncestor> $infraPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('infraPath')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ManagedHierarchyObjectAncestor>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $infraPath = null;
    
    /**
     * IPv4 address for a vCD cluster or vCenter Server that is managed through a VIM Server.
     * 
     * @var ?string $ipAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipAddress = null;
    
    /**
     * Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
     * 
     * @var ?bool $isConfiguredSlaDomainRetentionLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isConfiguredSlaDomainRetentionLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isConfiguredSlaDomainRetentionLocked = null;
    
    /**
     * Indicates whether the managed hierarchy object is deleted.
     * 
     * @var bool $isDeleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('isDeleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isDeleted;
    
    /**
     * Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
     * 
     * @var ?bool $isEffectiveSlaDomainRetentionLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isEffectiveSlaDomainRetentionLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isEffectiveSlaDomainRetentionLocked = null;
    
    /**
     * Whether this managed object is a relic (an archived snappable with unexpired snapshots).
     * 
     * @var bool $isRelic
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRelic')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isRelic;
    
    /**
     * The name of the Rubrik object.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Types of object that can be present in the vCD hierarchy.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VcdObjectTypeEnum $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VcdObjectTypeEnum>')]
    public VcdObjectTypeEnum $objectType;
    
	#[\JMS\Serializer\Annotation\SerializedName('pendingSlaDomain')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedObjectPendingSlaInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedObjectPendingSlaInfo $pendingSlaDomain = null;
    
    /**
     * The ID of the cluster that manages the Rubrik object.
     * 
     * @var string $primaryClusterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryClusterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryClusterId;
    
    /**
     * The ID of the SLA Domain whose retention policy is in use.
     * 
     * @var ?string $retentionSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $retentionSlaDomainId = null;
    
    /**
     * The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VcdHierarchyObjectSummarySlaAssignmentEnum $slaAssignment
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaAssignment')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VcdHierarchyObjectSummarySlaAssignmentEnum>')]
    public VcdHierarchyObjectSummarySlaAssignmentEnum $slaAssignment;
    
    /**
     * The UTC time when the SLA Domain was last updated.
     * 
     * @var ?\DateTime $slaLastUpdateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaLastUpdateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $slaLastUpdateTime = null;
    
    /**
     * $slaPath
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ManagedHierarchyObjectAncestor> $slaPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaPath')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ManagedHierarchyObjectAncestor>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $slaPath = null;
    
    /**
     * ID assigned to a vCenter Server instance that is managed through a VIM Server.
     * 
     * @var ?string $vcenterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vcenterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vcenterId = null;
    
	public function __construct()
	{
		$this->configuredSlaDomainId = "";
		$this->configuredSlaDomainName = "";
		$this->configuredSlaDomainType = null;
		$this->connectionStatus = null;
		$this->descendantCount = new \OpenAPI\OpenAPI\Models\Shared\VcdHierarchyObjectDescendantCount();
		$this->effectiveSlaDomainId = "";
		$this->effectiveSlaDomainName = "";
		$this->effectiveSlaDomainPolarisManagedId = null;
		$this->effectiveSlaSourceObjectId = null;
		$this->effectiveSlaSourceObjectName = null;
		$this->extendedAttributes = null;
		$this->id = "";
		$this->infraPath = null;
		$this->ipAddress = null;
		$this->isConfiguredSlaDomainRetentionLocked = null;
		$this->isDeleted = false;
		$this->isEffectiveSlaDomainRetentionLocked = null;
		$this->isRelic = false;
		$this->name = "";
		$this->objectType = \OpenAPI\OpenAPI\Models\Shared\VcdObjectTypeEnum::CLUSTER;
		$this->pendingSlaDomain = null;
		$this->primaryClusterId = "";
		$this->retentionSlaDomainId = null;
		$this->slaAssignment = \OpenAPI\OpenAPI\Models\Shared\VcdHierarchyObjectSummarySlaAssignmentEnum::DERIVED;
		$this->slaLastUpdateTime = null;
		$this->slaPath = null;
		$this->vcenterId = null;
	}
}
