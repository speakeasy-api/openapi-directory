<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ComponentConditionProperty - Represents a conditional expression to set a component property. Use <code>ComponentConditionProperty</code> to set a property to different values conditionally, based on the value of another property.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ComponentConditionProperty
{
	#[\JMS\Serializer\Annotation\SerializedName('else')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ComponentProperty')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ComponentProperty $else = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('field')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $field = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('operand')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operand = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('operandType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operandType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('operator')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operator = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('property')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $property = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('then')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ComponentProperty')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ComponentProperty $then = null;
    
	public function __construct()
	{
		$this->else = null;
		$this->field = null;
		$this->operand = null;
		$this->operandType = null;
		$this->operator = null;
		$this->property = null;
		$this->then = null;
	}
}
