// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSpacesSpaceIDFoldersIDRequest struct {
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum string

const (
	GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnumConfidential GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum = "confidential"
	GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnumRegular      GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum = "regular"
	GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnumPublic       GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum = "public"
)

func (e GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum) ToPointer() *GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum {
	return &e
}

func (e *GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum: %v", v)
	}
}

// GetSpacesSpaceIDFoldersID200ApplicationJSON - A folder
type GetSpacesSpaceIDFoldersID200ApplicationJSON struct {
	About            *string                                               `json:"About,omitempty"`
	ArchivalDate     *string                                               `json:"ArchivalDate,omitempty"`
	Class            *string                                               `json:"Class,omitempty"`
	Home             *bool                                                 `json:"Home,omitempty"`
	ID               *string                                               `json:"Id,omitempty"`
	Keywords         []string                                              `json:"Keywords,omitempty"`
	Level            *GetSpacesSpaceIDFoldersID200ApplicationJSONLevelEnum `json:"Level,omitempty"`
	ModificationDate *string                                               `json:"ModificationDate,omitempty"`
	Name             *string                                               `json:"Name,omitempty"`
	Parent           *string                                               `json:"Parent,omitempty"`
}

type GetSpacesSpaceIDFoldersIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A folder
	GetSpacesSpaceIDFoldersID200ApplicationJSONObject *GetSpacesSpaceIDFoldersID200ApplicationJSON
}
