// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopExecutionXAmzTargetEnum
type StopExecutionXAmzTargetEnum string

const (
	StopExecutionXAmzTargetEnumAwsStepFunctionsStopExecution StopExecutionXAmzTargetEnum = "AWSStepFunctions.StopExecution"
)

func (e *StopExecutionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSStepFunctions.StopExecution":
		*e = StopExecutionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopExecutionXAmzTargetEnum: %s", s)
	}
}

type StopExecutionHeaders struct {
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StopExecutionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopExecutionRequest struct {
	Headers StopExecutionHeaders
	Request shared.StopExecutionInput `request:"mediaType=application/json"`
}

type StopExecutionResponse struct {
	ContentType string
	// ExecutionDoesNotExist
	ExecutionDoesNotExist interface{}
	// InvalidArn
	InvalidArn  interface{}
	StatusCode  int
	RawResponse *http.Response
	// Success
	StopExecutionOutput *shared.StopExecutionOutput
	// ValidationException
	ValidationException interface{}
}
