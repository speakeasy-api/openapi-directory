/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LmsNameEnum } from "./lmsnameenum";
import { Expose, Transform } from "class-transformer";

/**
 * A couple of LTI 1.x OAuth credentials
 */
export class LtiCredentials extends SpeakeasyBase {
  /**
   * OAuth 1 Consumer Key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerKey" })
  consumerKey?: string;

  /**
   * OAuth 1 Consumer Secret
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerSecret" })
  consumerSecret?: string;

  /**
   * The creation date of thse credentials
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  /**
   * Unique identifier of the user who created these credentials
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  creator?: string;

  /**
   * The unique identifier of this couple of credentials
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The last time these credentials were used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUsage" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUsage?: Date;

  /**
   * LMS name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lms" })
  lms?: LmsNameEnum;

  /**
   * Name of the couple of credentials
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The unique identifier of the Organization associated to these credentials
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization?: string;
}
