/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class VcdVappSummary {
    /**
     * ID of the parent catalog if the vApp object is a template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalogId")
    public String catalogId;

    public VcdVappSummary withCatalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }
    
    /**
     * The ID of the SLA Domain configured directly on the Rubrik object.
     */
    @JsonProperty("configuredSlaDomainId")
    public String configuredSlaDomainId;

    public VcdVappSummary withConfiguredSlaDomainId(String configuredSlaDomainId) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        return this;
    }
    
    /**
     * The name of the SLA Domain configured directly on the Rubrik object.
     */
    @JsonProperty("configuredSlaDomainName")
    public String configuredSlaDomainName;

    public VcdVappSummary withConfiguredSlaDomainName(String configuredSlaDomainName) {
        this.configuredSlaDomainName = configuredSlaDomainName;
        return this;
    }
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainType")
    public ConfiguredSlaTypeEnum configuredSlaDomainType;

    public VcdVappSummary withConfiguredSlaDomainType(ConfiguredSlaTypeEnum configuredSlaDomainType) {
        this.configuredSlaDomainType = configuredSlaDomainType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentBackupTaskInfo")
    public BackupTaskDiagnosticInfo currentBackupTaskInfo;

    public VcdVappSummary withCurrentBackupTaskInfo(BackupTaskDiagnosticInfo currentBackupTaskInfo) {
        this.currentBackupTaskInfo = currentBackupTaskInfo;
        return this;
    }
    
    /**
     * The ID of the SLA Domain that controls the protection of the Rubrik object.
     */
    @JsonProperty("effectiveSlaDomainId")
    public String effectiveSlaDomainId;

    public VcdVappSummary withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * The name of the SLA Domain that controls the protection of the Rubrik object.
     */
    @JsonProperty("effectiveSlaDomainName")
    public String effectiveSlaDomainName;

    public VcdVappSummary withEffectiveSlaDomainName(String effectiveSlaDomainName) {
        this.effectiveSlaDomainName = effectiveSlaDomainName;
        return this;
    }
    
    /**
     * Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaDomainPolarisManagedId")
    public String effectiveSlaDomainPolarisManagedId;

    public VcdVappSummary withEffectiveSlaDomainPolarisManagedId(String effectiveSlaDomainPolarisManagedId) {
        this.effectiveSlaDomainPolarisManagedId = effectiveSlaDomainPolarisManagedId;
        return this;
    }
    
    /**
     * The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaSourceObjectId")
    public String effectiveSlaSourceObjectId;

    public VcdVappSummary withEffectiveSlaSourceObjectId(String effectiveSlaSourceObjectId) {
        this.effectiveSlaSourceObjectId = effectiveSlaSourceObjectId;
        return this;
    }
    
    /**
     * The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaSourceObjectName")
    public String effectiveSlaSourceObjectName;

    public VcdVappSummary withEffectiveSlaSourceObjectName(String effectiveSlaSourceObjectName) {
        this.effectiveSlaSourceObjectName = effectiveSlaSourceObjectName;
        return this;
    }
    
    /**
     * The ID of the Rubrik object.
     */
    @JsonProperty("id")
    public String id;

    public VcdVappSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Boolean value that indicates if backup task information isincluded in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeBackupTaskInfo")
    public Boolean includeBackupTaskInfo;

    public VcdVappSummary withIncludeBackupTaskInfo(Boolean includeBackupTaskInfo) {
        this.includeBackupTaskInfo = includeBackupTaskInfo;
        return this;
    }
    
    /**
     * Brief information of all the objects in the infrastructure path to this vCD vApp object.
     */
    @JsonProperty("infraPath")
    public ManagedHierarchyObjectAncestor[] infraPath;

    public VcdVappSummary withInfraPath(ManagedHierarchyObjectAncestor[] infraPath) {
        this.infraPath = infraPath;
        return this;
    }
    
    /**
     * Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isConfiguredSlaDomainRetentionLocked")
    public Boolean isConfiguredSlaDomainRetentionLocked;

    public VcdVappSummary withIsConfiguredSlaDomainRetentionLocked(Boolean isConfiguredSlaDomainRetentionLocked) {
        this.isConfiguredSlaDomainRetentionLocked = isConfiguredSlaDomainRetentionLocked;
        return this;
    }
    
    /**
     * Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEffectiveSlaDomainRetentionLocked")
    public Boolean isEffectiveSlaDomainRetentionLocked;

    public VcdVappSummary withIsEffectiveSlaDomainRetentionLocked(Boolean isEffectiveSlaDomainRetentionLocked) {
        this.isEffectiveSlaDomainRetentionLocked = isEffectiveSlaDomainRetentionLocked;
        return this;
    }
    
    /**
     * Boolean value that indicates whether a vApp is present on the specified vCD cluster. Set to 'true' when the vApp is present and 'false' when the vApp is not present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRelic")
    public Boolean isRelic;

    public VcdVappSummary withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * A Boolean value that indicates whether the vApp object is a template. When this value is 'true,' the vApp object is a template. When this value is 'false,' the vApp object is not a template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isTemplate")
    public Boolean isTemplate;

    public VcdVappSummary withIsTemplate(Boolean isTemplate) {
        this.isTemplate = isTemplate;
        return this;
    }
    
    /**
     * The timestamp of the previous snapshot.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastSnapshotTime")
    public OffsetDateTime lastSnapshotTime;

    public VcdVappSummary withLastSnapshotTime(OffsetDateTime lastSnapshotTime) {
        this.lastSnapshotTime = lastSnapshotTime;
        return this;
    }
    
    /**
     * The name of the Rubrik object.
     */
    @JsonProperty("name")
    public String name;

    public VcdVappSummary withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * An integer that specifies the number of missed snapshots.
     */
    @JsonProperty("numMissedSnapshot")
    public Integer numMissedSnapshot;

    public VcdVappSummary withNumMissedSnapshot(Integer numMissedSnapshot) {
        this.numMissedSnapshot = numMissedSnapshot;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pendingSlaDomain")
    public ManagedObjectPendingSlaInfo pendingSlaDomain;

    public VcdVappSummary withPendingSlaDomain(ManagedObjectPendingSlaInfo pendingSlaDomain) {
        this.pendingSlaDomain = pendingSlaDomain;
        return this;
    }
    
    /**
     * The ID of the cluster that manages the Rubrik object.
     */
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public VcdVappSummary withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * The ID of the SLA Domain whose retention policy is in use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retentionSlaDomainId")
    public String retentionSlaDomainId;

    public VcdVappSummary withRetentionSlaDomainId(String retentionSlaDomainId) {
        this.retentionSlaDomainId = retentionSlaDomainId;
        return this;
    }
    
    /**
     * The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
     */
    @JsonProperty("slaAssignment")
    public VcdVappSummarySlaAssignmentEnum slaAssignment;

    public VcdVappSummary withSlaAssignment(VcdVappSummarySlaAssignmentEnum slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * The UTC time when the SLA Domain was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("slaLastUpdateTime")
    public OffsetDateTime slaLastUpdateTime;

    public VcdVappSummary withSlaLastUpdateTime(OffsetDateTime slaLastUpdateTime) {
        this.slaLastUpdateTime = slaLastUpdateTime;
        return this;
    }
    
    /**
     * ID assigned to a vCD Cluster object that contains a specified vApp object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcdClusterId")
    public String vcdClusterId;

    public VcdVappSummary withVcdClusterId(String vcdClusterId) {
        this.vcdClusterId = vcdClusterId;
        return this;
    }
    
    /**
     * Name assigned to a vCD Cluster object that contains a specified vApp object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcdClusterName")
    public String vcdClusterName;

    public VcdVappSummary withVcdClusterName(String vcdClusterName) {
        this.vcdClusterName = vcdClusterName;
        return this;
    }
    
    public VcdVappSummary(@JsonProperty("configuredSlaDomainId") String configuredSlaDomainId, @JsonProperty("configuredSlaDomainName") String configuredSlaDomainName, @JsonProperty("effectiveSlaDomainId") String effectiveSlaDomainId, @JsonProperty("effectiveSlaDomainName") String effectiveSlaDomainName, @JsonProperty("id") String id, @JsonProperty("infraPath") ManagedHierarchyObjectAncestor[] infraPath, @JsonProperty("name") String name, @JsonProperty("numMissedSnapshot") Integer numMissedSnapshot, @JsonProperty("primaryClusterId") String primaryClusterId, @JsonProperty("slaAssignment") VcdVappSummarySlaAssignmentEnum slaAssignment) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        this.configuredSlaDomainName = configuredSlaDomainName;
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        this.effectiveSlaDomainName = effectiveSlaDomainName;
        this.id = id;
        this.infraPath = infraPath;
        this.name = name;
        this.numMissedSnapshot = numMissedSnapshot;
        this.primaryClusterId = primaryClusterId;
        this.slaAssignment = slaAssignment;
  }
}
