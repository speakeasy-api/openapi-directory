"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProjectExport:
    r"""Represents information about a project export."""
    
    estimated_import_time_in_ms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('estimatedImportTimeInMS'), 'exclude': lambda f: f is None }})
    r"""Estimated time this project will take to import, can change based on network connectivity and load between
    source and destination regions.
    """  
    image_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageCount'), 'exclude': lambda f: f is None }})
    r"""Count of images that will be exported."""  
    iteration_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iterationCount'), 'exclude': lambda f: f is None }})
    r"""Count of iterations that will be exported."""  
    region_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regionCount'), 'exclude': lambda f: f is None }})
    r"""Count of regions that will be exported."""  
    tag_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tagCount'), 'exclude': lambda f: f is None }})
    r"""Count of tags that will be exported."""  
    token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token'), 'exclude': lambda f: f is None }})
    r"""Opaque token that should be passed to ImportProject to perform the import. This token grants access to import this
    project to all that have the token.
    """  
    