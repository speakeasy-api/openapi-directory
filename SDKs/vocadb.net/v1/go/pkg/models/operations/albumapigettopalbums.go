// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AlbumAPIGetTopAlbumsFieldsEnum
type AlbumAPIGetTopAlbumsFieldsEnum string

const (
	AlbumAPIGetTopAlbumsFieldsEnumNone            AlbumAPIGetTopAlbumsFieldsEnum = "None"
	AlbumAPIGetTopAlbumsFieldsEnumAdditionalNames AlbumAPIGetTopAlbumsFieldsEnum = "AdditionalNames"
	AlbumAPIGetTopAlbumsFieldsEnumArtists         AlbumAPIGetTopAlbumsFieldsEnum = "Artists"
	AlbumAPIGetTopAlbumsFieldsEnumDescription     AlbumAPIGetTopAlbumsFieldsEnum = "Description"
	AlbumAPIGetTopAlbumsFieldsEnumDiscs           AlbumAPIGetTopAlbumsFieldsEnum = "Discs"
	AlbumAPIGetTopAlbumsFieldsEnumIdentifiers     AlbumAPIGetTopAlbumsFieldsEnum = "Identifiers"
	AlbumAPIGetTopAlbumsFieldsEnumMainPicture     AlbumAPIGetTopAlbumsFieldsEnum = "MainPicture"
	AlbumAPIGetTopAlbumsFieldsEnumNames           AlbumAPIGetTopAlbumsFieldsEnum = "Names"
	AlbumAPIGetTopAlbumsFieldsEnumPVs             AlbumAPIGetTopAlbumsFieldsEnum = "PVs"
	AlbumAPIGetTopAlbumsFieldsEnumReleaseEvent    AlbumAPIGetTopAlbumsFieldsEnum = "ReleaseEvent"
	AlbumAPIGetTopAlbumsFieldsEnumTags            AlbumAPIGetTopAlbumsFieldsEnum = "Tags"
	AlbumAPIGetTopAlbumsFieldsEnumTracks          AlbumAPIGetTopAlbumsFieldsEnum = "Tracks"
	AlbumAPIGetTopAlbumsFieldsEnumWebLinks        AlbumAPIGetTopAlbumsFieldsEnum = "WebLinks"
)

func (e *AlbumAPIGetTopAlbumsFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Artists":
		fallthrough
	case "Description":
		fallthrough
	case "Discs":
		fallthrough
	case "Identifiers":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "Tags":
		fallthrough
	case "Tracks":
		fallthrough
	case "WebLinks":
		*e = AlbumAPIGetTopAlbumsFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetTopAlbumsFieldsEnum: %s", s)
	}
}

// AlbumAPIGetTopAlbumsLanguagePreferenceEnum
type AlbumAPIGetTopAlbumsLanguagePreferenceEnum string

const (
	AlbumAPIGetTopAlbumsLanguagePreferenceEnumDefault  AlbumAPIGetTopAlbumsLanguagePreferenceEnum = "Default"
	AlbumAPIGetTopAlbumsLanguagePreferenceEnumJapanese AlbumAPIGetTopAlbumsLanguagePreferenceEnum = "Japanese"
	AlbumAPIGetTopAlbumsLanguagePreferenceEnumRomaji   AlbumAPIGetTopAlbumsLanguagePreferenceEnum = "Romaji"
	AlbumAPIGetTopAlbumsLanguagePreferenceEnumEnglish  AlbumAPIGetTopAlbumsLanguagePreferenceEnum = "English"
)

func (e *AlbumAPIGetTopAlbumsLanguagePreferenceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = AlbumAPIGetTopAlbumsLanguagePreferenceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetTopAlbumsLanguagePreferenceEnum: %s", s)
	}
}

type AlbumAPIGetTopAlbumsQueryParams struct {
	Fields             *AlbumAPIGetTopAlbumsFieldsEnum             `queryParam:"style=form,explode=true,name=fields"`
	IgnoreIds          []int                                       `queryParam:"style=form,explode=true,name=ignoreIds"`
	LanguagePreference *AlbumAPIGetTopAlbumsLanguagePreferenceEnum `queryParam:"style=form,explode=true,name=languagePreference"`
}

type AlbumAPIGetTopAlbumsRequest struct {
	QueryParams AlbumAPIGetTopAlbumsQueryParams
}

type AlbumAPIGetTopAlbumsResponse struct {
	// OK
	AlbumForAPIContracts []shared.AlbumForAPIContract
	Body                 []byte
	ContentType          string
	StatusCode           int
	RawResponse          *http.Response
}
