// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostcodeToAddressesSecurity struct {
	APIKey    shared.SchemeAPIKey    `security:"scheme,type=apiKey,subtype=query"`
	UserToken shared.SchemeUserToken `security:"scheme,type=apiKey,subtype=query"`
}

type PostcodeToAddressesPathParams struct {
	Postcode string `pathParam:"style=simple,explode=false,name=postcode"`
}

type PostcodeToAddressesQueryParams struct {
	// Comma separated whitelist of address elements to return. E.g.  `filter=line_1,line_2,line_3` returns only `line_1` `line_2` and `line_3` address elements in your response
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// Only required if you are using a sublicensed key. This parameter will associate the request with your licensee
	Licensee *string `queryParam:"style=form,explode=true,name=licensee"`
	// Only available for use with the multiple residence dataset.
	// This is a 0 indexed indicator of the page of results to receive for multiple residence datasets.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
}

type PostcodeToAddressesRequest struct {
	PathParams  PostcodeToAddressesPathParams
	QueryParams PostcodeToAddressesQueryParams
	Security    PostcodeToAddressesSecurity
}

type PostcodeToAddressesResponse struct {
	// Request failed
	AddressLookupResponseSchema *shared.AddressLookupResponseSchema
	ContentType                 string
	// Bad request
	ErrorResponseSchema *shared.ErrorResponseSchema
	// Success
	PostcodeToAddressResponseSchema *shared.PostcodeToAddressResponseSchema
	StatusCode                      int
	RawResponse                     *http.Response
}
