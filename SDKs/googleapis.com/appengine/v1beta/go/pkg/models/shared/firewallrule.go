// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FirewallRuleActionEnum - The action to take on matched requests.
type FirewallRuleActionEnum string

const (
	FirewallRuleActionEnumUnspecifiedAction FirewallRuleActionEnum = "UNSPECIFIED_ACTION"
	FirewallRuleActionEnumAllow             FirewallRuleActionEnum = "ALLOW"
	FirewallRuleActionEnumDeny              FirewallRuleActionEnum = "DENY"
)

func (e *FirewallRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED_ACTION":
		fallthrough
	case "ALLOW":
		fallthrough
	case "DENY":
		*e = FirewallRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FirewallRuleActionEnum: %s", s)
	}
}

// FirewallRule - A single firewall rule that is evaluated against incoming traffic and provides an action to take on matched requests.
type FirewallRule struct {
	// The action to take on matched requests.
	Action *FirewallRuleActionEnum `json:"action,omitempty"`
	// An optional string description of this rule. This field has a maximum length of 400 characters.
	Description *string `json:"description,omitempty"`
	// A positive integer between 1, Int32.MaxValue-1 that defines the order of rule evaluation. Rules with the lowest priority are evaluated first.A default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action of this rule can be modified by the user.
	Priority *int `json:"priority,omitempty"`
	// IP address or range, defined using CIDR notation, of requests that this rule applies to. You can use the wildcard character "*" to match all IPs equivalent to "0/0" and "::/0" together. Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334. Truncation will be silently performed on addresses which are not properly truncated. For example, 1.2.3.4/24 is accepted as the same address as 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 is accepted as the same address as 2001:db8::/32.
	SourceRange *string `json:"sourceRange,omitempty"`
}
