/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudChannelV1Period } from "./googlecloudchannelv1period";
import { Expose, Type } from "class-transformer";

/**
 * Describes how a reseller will be billed.
 */
export enum GoogleCloudChannelV1RenewalSettingsPaymentPlanEnum {
  PaymentPlanUnspecified = "PAYMENT_PLAN_UNSPECIFIED",
  Commitment = "COMMITMENT",
  Flexible = "FLEXIBLE",
  Free = "FREE",
  Trial = "TRIAL",
  Offline = "OFFLINE",
}

/**
 * Renewal settings for renewable Offers.
 */
export class GoogleCloudChannelV1RenewalSettings extends SpeakeasyBase {
  /**
   * If false, the plan will be completed at the end date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableRenewal" })
  enableRenewal?: boolean;

  /**
   * Represents period in days/months/years.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentCycle" })
  @Type(() => GoogleCloudChannelV1Period)
  paymentCycle?: GoogleCloudChannelV1Period;

  /**
   * Describes how a reseller will be billed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentPlan" })
  paymentPlan?: GoogleCloudChannelV1RenewalSettingsPaymentPlanEnum;

  /**
   * If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resizeUnitCount" })
  resizeUnitCount?: boolean;
}
