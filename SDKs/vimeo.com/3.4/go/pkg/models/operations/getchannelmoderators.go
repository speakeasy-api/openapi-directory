// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetChannelModeratorsDirectionEnum - The sort direction of the results.
type GetChannelModeratorsDirectionEnum string

const (
	GetChannelModeratorsDirectionEnumAsc  GetChannelModeratorsDirectionEnum = "asc"
	GetChannelModeratorsDirectionEnumDesc GetChannelModeratorsDirectionEnum = "desc"
)

func (e *GetChannelModeratorsDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetChannelModeratorsDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelModeratorsDirectionEnum: %s", s)
	}
}

// GetChannelModeratorsSortEnum - The way to sort the results.
type GetChannelModeratorsSortEnum string

const (
	GetChannelModeratorsSortEnumAlphabetical GetChannelModeratorsSortEnum = "alphabetical"
	GetChannelModeratorsSortEnumDate         GetChannelModeratorsSortEnum = "date"
)

func (e *GetChannelModeratorsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		*e = GetChannelModeratorsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelModeratorsSortEnum: %s", s)
	}
}

type GetChannelModeratorsRequest struct {
	// The ID of the channel.
	ChannelID float64 `pathParam:"style=simple,explode=false,name=channel_id"`
	// The sort direction of the results.
	Direction *GetChannelModeratorsDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetChannelModeratorsSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetChannelModeratorsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The moderators were returned.
	Users []shared.User
}
