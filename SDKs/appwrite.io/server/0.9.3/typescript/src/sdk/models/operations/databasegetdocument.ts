/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class DatabaseGetDocumentSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-JWT",
  })
  jwt: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Key",
  })
  key: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Project",
  })
  project: string;
}

export class DatabaseGetDocumentRequest extends SpeakeasyBase {
  /**
   * Collection unique ID. You can create a new collection with validation rules using the Database service [server integration](/docs/server/database#createCollection).
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=collectionId",
  })
  collectionId: string;

  /**
   * Document unique ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=documentId",
  })
  documentId: string;
}

export class DatabaseGetDocumentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Document
   */
  @SpeakeasyMetadata()
  document?: Record<string, any>;
}
