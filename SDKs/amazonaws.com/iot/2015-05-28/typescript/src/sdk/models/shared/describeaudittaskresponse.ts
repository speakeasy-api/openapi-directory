/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AuditCheckDetails } from "./auditcheckdetails";
import { AuditTaskStatusEnum } from "./audittaskstatusenum";
import { AuditTaskTypeEnum } from "./audittasktypeenum";
import { TaskStatistics } from "./taskstatistics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeAuditTaskResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AuditCheckDetails })
  @Expose({ name: "auditDetails" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, AuditCheckDetails> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], AuditCheckDetails);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  auditDetails?: Record<string, AuditCheckDetails>;

  @SpeakeasyMetadata()
  @Expose({ name: "scheduledAuditName" })
  scheduledAuditName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taskStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  taskStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "taskStatistics" })
  @Type(() => TaskStatistics)
  taskStatistics?: TaskStatistics;

  @SpeakeasyMetadata()
  @Expose({ name: "taskStatus" })
  taskStatus?: AuditTaskStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "taskType" })
  taskType?: AuditTaskTypeEnum;
}
