/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoyaltyAccountExpiringPointDeadline } from "./loyaltyaccountexpiringpointdeadline";
import { LoyaltyAccountMapping } from "./loyaltyaccountmapping";
import { Expose, Type } from "class-transformer";

/**
 * Describes a loyalty account. For more information, see
 *
 * @remarks
 * [Manage Loyalty Accounts Using the Loyalty API](https://developer.squareup.com/docs/loyalty-api/overview).
 */
export class LoyaltyAccount extends SpeakeasyBase {
  /**
   * The available point balance in the loyalty account. If points are scheduled to expire, they are listed in the `expiring_point_deadlines` field.
   *
   * @remarks
   *
   * Your application should be able to handle loyalty accounts that have a negative point balance (`balance` is less than 0). This might occur if a seller makes a manual adjustment or as a result of a refund or exchange.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  /**
   * The timestamp when the loyalty account was created, in RFC 3339 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * The Square-assigned ID of the [customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) that is associated with the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customer_id" })
  customerId?: string;

  /**
   * The timestamp when enrollment occurred, in RFC 3339 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enrolled_at" })
  enrolledAt?: string;

  /**
   * The schedule for when points expire in the loyalty account balance. This field is present only if the account has points that are scheduled to expire.
   *
   * @remarks
   *
   * The total number of points in this field equals the number of points in the `balance` field.
   */
  @SpeakeasyMetadata({ elemType: LoyaltyAccountExpiringPointDeadline })
  @Expose({ name: "expiring_point_deadlines" })
  @Type(() => LoyaltyAccountExpiringPointDeadline)
  expiringPointDeadlines?: LoyaltyAccountExpiringPointDeadline[];

  /**
   * The Square-assigned ID of the loyalty account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The total points accrued during the lifetime of the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lifetime_points" })
  lifetimePoints?: number;

  /**
   * Represents the mapping that associates a loyalty account with a buyer.
   *
   * @remarks
   *
   * Currently, a loyalty account can only be mapped to a buyer by phone number. For more information, see
   * [Loyalty Overview](https://developer.squareup.com/docs/loyalty/overview).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mapping" })
  @Type(() => LoyaltyAccountMapping)
  mapping?: LoyaltyAccountMapping;

  /**
   * The Square-assigned ID of the [loyalty program](https://developer.squareup.com/reference/square_2021-08-18/objects/LoyaltyProgram) to which the account belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "program_id" })
  programId: string;

  /**
   * The timestamp when the loyalty account was last updated, in RFC 3339 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}
