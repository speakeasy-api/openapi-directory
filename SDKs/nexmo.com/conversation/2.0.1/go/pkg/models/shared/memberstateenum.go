// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MemberStateEnum - The state that the member is in. Possible values are `invited`, `joined`, `left`, or `unknown`
type MemberStateEnum string

const (
	MemberStateEnumInvited MemberStateEnum = "invited"
	MemberStateEnumJoined  MemberStateEnum = "joined"
	MemberStateEnumLeft    MemberStateEnum = "left"
	MemberStateEnumUnknown MemberStateEnum = "unknown"
)

func (e MemberStateEnum) ToPointer() *MemberStateEnum {
	return &e
}

func (e *MemberStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invited":
		fallthrough
	case "joined":
		fallthrough
	case "left":
		fallthrough
	case "unknown":
		*e = MemberStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MemberStateEnum: %v", v)
	}
}
