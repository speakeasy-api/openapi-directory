"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ipaddressrequest as shared_ipaddressrequest
from ..shared import resolverendpointdirection_enum as shared_resolverendpointdirection_enum
from ..shared import resolverendpointtype_enum as shared_resolverendpointtype_enum
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateResolverEndpointRequest:
    
    creator_request_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatorRequestId') }})  
    direction: shared_resolverendpointdirection_enum.ResolverEndpointDirectionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Direction') }})  
    ip_addresses: list[shared_ipaddressrequest.IPAddressRequest] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpAddresses') }})  
    security_group_ids: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityGroupIds') }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    resolver_endpoint_type: Optional[shared_resolverendpointtype_enum.ResolverEndpointTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResolverEndpointType'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    