// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateGlobalRuleConfigRuleEnum - The unique name/type of a rule.
type UpdateGlobalRuleConfigRuleEnum string

const (
	UpdateGlobalRuleConfigRuleEnumValidity      UpdateGlobalRuleConfigRuleEnum = "VALIDITY"
	UpdateGlobalRuleConfigRuleEnumCompatibility UpdateGlobalRuleConfigRuleEnum = "COMPATIBILITY"
)

func (e *UpdateGlobalRuleConfigRuleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VALIDITY":
		fallthrough
	case "COMPATIBILITY":
		*e = UpdateGlobalRuleConfigRuleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateGlobalRuleConfigRuleEnum: %s", s)
	}
}

type UpdateGlobalRuleConfigRequest struct {
	Rule1 shared.Rule `request:"mediaType=application/json"`
	// The unique name/type of a rule.
	RulePathParameter UpdateGlobalRuleConfigRuleEnum `pathParam:"style=simple,explode=false,name=rule"`
}

type UpdateGlobalRuleConfigResponse struct {
	ContentType string
	// Common response for all operations that can return a `404` error.
	Error *shared.Error
	// The global rule's configuration was successfully updated.
	Rule        *shared.Rule
	StatusCode  int
	RawResponse *http.Response
}
