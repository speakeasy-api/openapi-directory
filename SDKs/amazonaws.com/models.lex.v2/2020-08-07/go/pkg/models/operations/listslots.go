// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListSlotsPathParams struct {
	// The identifier of the bot that contains the slot.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
	// The version of the bot that contains the slot.
	BotVersion string `pathParam:"style=simple,explode=false,name=botVersion"`
	// The unique identifier of the intent that contains the slot.
	IntentID string `pathParam:"style=simple,explode=false,name=intentId"`
	// The identifier of the language and locale of the slots to list. The string must match one of the supported locales. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.
	LocaleID string `pathParam:"style=simple,explode=false,name=localeId"`
}

type ListSlotsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListSlotsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListSlotsRequestBodySortBy - Specifies attributes for sorting a list of bots.
type ListSlotsRequestBodySortBy struct {
	Attribute *shared.SlotSortAttributeEnum `json:"attribute,omitempty"`
	Order     *shared.SortOrderEnum         `json:"order,omitempty"`
}

type ListSlotsRequestBody struct {
	// Provides the specification of a filter used to limit the slots in the response to only those that match the filter specification. You can only specify one filter and only one string to filter on.
	Filters []shared.SlotFilter `json:"filters,omitempty"`
	// The maximum number of slots to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// If the response from the <code>ListSlots</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. Use that token in the <code>nextToken</code> parameter to return the next page of results.
	NextToken *string `json:"nextToken,omitempty"`
	// Specifies attributes for sorting a list of bots.
	SortBy *ListSlotsRequestBodySortBy `json:"sortBy,omitempty"`
}

type ListSlotsRequest struct {
	PathParams  ListSlotsPathParams
	QueryParams ListSlotsQueryParams
	Headers     ListSlotsHeaders
	Request     ListSlotsRequestBody `request:"mediaType=application/json"`
}

type ListSlotsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListSlotsResponse *shared.ListSlotsResponse
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
