// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DatabaseCreateCollectionSecurity struct {
	Key     shared.SchemeKey     `security:"scheme,type=apiKey,subtype=header"`
	Project shared.SchemeProject `security:"scheme,type=apiKey,subtype=header"`
}

type DatabaseCreateCollectionRequestBody struct {
	// Collection name. Max length: 128 chars.
	Name string `json:"name"`
	// An array of strings with read permissions. By default no user is granted with any read permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
	Read []string `json:"read"`
	// Array of [rule objects](/docs/rules). Each rule define a collection field name, data type and validation.
	Rules []string `json:"rules"`
	// An array of strings with write permissions. By default no user is granted with any write permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
	Write []string `json:"write"`
}

type DatabaseCreateCollectionRequest struct {
	Request  *DatabaseCreateCollectionRequestBody `request:"mediaType=application/json"`
	Security DatabaseCreateCollectionSecurity
}

type DatabaseCreateCollectionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Collection
	Collection *shared.Collection
}
