/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * OK
 */
export class User extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "administrator" })
  administrator?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "coordinateFormat" })
  coordinateFormat?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceLimit" })
  deviceLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceReadonly" })
  deviceReadonly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expirationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "limitCommands" })
  limitCommands?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "map" })
  map?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "poiLayer" })
  poiLayer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "readonly" })
  readonly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "twelveHourFormat" })
  twelveHourFormat?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "userLimit" })
  userLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "zoom" })
  zoom?: number;
}
