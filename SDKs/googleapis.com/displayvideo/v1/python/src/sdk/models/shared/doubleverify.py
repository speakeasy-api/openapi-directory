"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import doubleverifyappstarrating as shared_doubleverifyappstarrating
from ..shared import doubleverifybrandsafetycategories as shared_doubleverifybrandsafetycategories
from ..shared import doubleverifydisplayviewability as shared_doubleverifydisplayviewability
from ..shared import doubleverifyfraudinvalidtraffic as shared_doubleverifyfraudinvalidtraffic
from ..shared import doubleverifyvideoviewability as shared_doubleverifyvideoviewability
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DoubleVerifyAvoidedAgeRatingsEnum(str, Enum):
    AGE_RATING_UNSPECIFIED = 'AGE_RATING_UNSPECIFIED'
    APP_AGE_RATE_UNKNOWN = 'APP_AGE_RATE_UNKNOWN'
    APP_AGE_RATE_4_PLUS = 'APP_AGE_RATE_4_PLUS'
    APP_AGE_RATE_9_PLUS = 'APP_AGE_RATE_9_PLUS'
    APP_AGE_RATE_12_PLUS = 'APP_AGE_RATE_12_PLUS'
    APP_AGE_RATE_17_PLUS = 'APP_AGE_RATE_17_PLUS'
    APP_AGE_RATE_18_PLUS = 'APP_AGE_RATE_18_PLUS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DoubleVerify:
    r"""Details of DoubleVerify settings."""
    
    app_star_rating: Optional[shared_doubleverifyappstarrating.DoubleVerifyAppStarRating] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appStarRating'), 'exclude': lambda f: f is None }})
    r"""Details of DoubleVerify star ratings settings."""  
    avoided_age_ratings: Optional[list[DoubleVerifyAvoidedAgeRatingsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avoidedAgeRatings'), 'exclude': lambda f: f is None }})
    r"""Avoid bidding on apps with the age rating."""  
    brand_safety_categories: Optional[shared_doubleverifybrandsafetycategories.DoubleVerifyBrandSafetyCategories] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brandSafetyCategories'), 'exclude': lambda f: f is None }})
    r"""Settings for brand safety controls."""  
    custom_segment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customSegmentId'), 'exclude': lambda f: f is None }})
    r"""The custom segment ID provided by DoubleVerify. The ID must start with \\"51\\" and consist of eight digits. Custom segment ID cannot be specified along with any of the following fields: * brand_safety_categories * avoided_age_ratings * app_star_rating * fraud_invalid_traffic"""  
    display_viewability: Optional[shared_doubleverifydisplayviewability.DoubleVerifyDisplayViewability] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayViewability'), 'exclude': lambda f: f is None }})
    r"""Details of DoubleVerify display viewability settings."""  
    fraud_invalid_traffic: Optional[shared_doubleverifyfraudinvalidtraffic.DoubleVerifyFraudInvalidTraffic] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fraudInvalidTraffic'), 'exclude': lambda f: f is None }})
    r"""DoubleVerify Fraud & Invalid Traffic settings."""  
    video_viewability: Optional[shared_doubleverifyvideoviewability.DoubleVerifyVideoViewability] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoViewability'), 'exclude': lambda f: f is None }})
    r"""Details of DoubleVerify video viewability settings."""  
    