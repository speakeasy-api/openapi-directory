// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateFunctionCodeRequestBody struct {
	// The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is <code>x86_64</code>.
	Architectures []shared.ArchitectureEnum `json:"Architectures,omitempty"`
	// Set to true to validate the request parameters and access permissions without modifying the function code.
	DryRun *bool `json:"DryRun,omitempty"`
	// URI of a container image in the Amazon ECR registry. Do not use for a function defined with a .zip file archive.
	ImageURI *string `json:"ImageUri,omitempty"`
	// Set to true to publish a new version of the function after updating the code. This has the same effect as calling <a>PublishVersion</a> separately.
	Publish *bool `json:"Publish,omitempty"`
	// Update the function only if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
	RevisionID *string `json:"RevisionId,omitempty"`
	// An Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account. Use only with a function defined with a .zip file archive deployment package.
	S3Bucket *string `json:"S3Bucket,omitempty"`
	// The Amazon S3 key of the deployment package. Use only with a function defined with a .zip file archive deployment package.
	S3Key *string `json:"S3Key,omitempty"`
	// For versioned objects, the version of the deployment package object to use.
	S3ObjectVersion *string `json:"S3ObjectVersion,omitempty"`
	// The base64-encoded contents of the deployment package. Amazon Web Services SDK and CLI clients handle the encoding for you. Use only with a function defined with a .zip file archive deployment package.
	ZipFile *string `json:"ZipFile,omitempty"`
}

type UpdateFunctionCodeRequest struct {
	// <p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
	FunctionName      string                        `pathParam:"style=simple,explode=false,name=FunctionName"`
	RequestBody       UpdateFunctionCodeRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateFunctionCodeResponse struct {
	// CodeSigningConfigNotFoundException
	CodeSigningConfigNotFoundException interface{}
	// CodeStorageExceededException
	CodeStorageExceededException interface{}
	// CodeVerificationFailedException
	CodeVerificationFailedException interface{}
	ContentType                     string
	// Success
	FunctionConfiguration *shared.FunctionConfiguration
	// InvalidCodeSignatureException
	InvalidCodeSignatureException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	// ResourceConflictException
	ResourceConflictException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
