// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribePageXAmzTargetEnum
type DescribePageXAmzTargetEnum string

const (
	DescribePageXAmzTargetEnumSsmContactsDescribePage DescribePageXAmzTargetEnum = "SSMContacts.DescribePage"
)

func (e DescribePageXAmzTargetEnum) ToPointer() *DescribePageXAmzTargetEnum {
	return &e
}

func (e *DescribePageXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SSMContacts.DescribePage":
		*e = DescribePageXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribePageXAmzTargetEnum: %v", v)
	}
}

type DescribePageRequest struct {
	DescribePageRequest shared.DescribePageRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          DescribePageXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribePageResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// DataEncryptionException
	DataEncryptionException interface{}
	// Success
	DescribePageResult *shared.DescribePageResult
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
