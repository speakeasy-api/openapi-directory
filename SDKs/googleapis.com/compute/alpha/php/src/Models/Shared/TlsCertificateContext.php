<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TlsCertificateContext - [Deprecated] Defines the mechanism to obtain the client or server certificate. Defines the mechanism to obtain the client or server certificate.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TlsCertificateContext
{
    /**
     * [Deprecated] The paths to the mounted TLS Certificates and private key. The paths to the mounted TLS Certificates and private key.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TlsCertificatePaths $certificatePaths
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificatePaths')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TlsCertificatePaths')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TlsCertificatePaths $certificatePaths = null;
    
    /**
     * Defines how TLS certificates are obtained.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TlsCertificateContextCertificateSourceEnum $certificateSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateSource')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TlsCertificateContextCertificateSourceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TlsCertificateContextCertificateSourceEnum $certificateSource = null;
    
    /**
     * [Deprecated] The configuration to access the SDS server. The configuration to access the SDS server.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SdsConfig $sdsConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('sdsConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SdsConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SdsConfig $sdsConfig = null;
    
	public function __construct()
	{
		$this->certificatePaths = null;
		$this->certificateSource = null;
		$this->sdsConfig = null;
	}
}
