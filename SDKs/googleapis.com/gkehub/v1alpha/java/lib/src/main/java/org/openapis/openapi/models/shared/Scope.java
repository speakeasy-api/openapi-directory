/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Scope - Scope represents a Scope in a Fleet.
 */
public class Scope {
    /**
     * If true, all Memberships in the Fleet bind to this Scope.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allMemberships")
    public Boolean allMemberships;

    public Scope withAllMemberships(Boolean allMemberships) {
        this.allMemberships = allMemberships;
        return this;
    }
    
    /**
     * Output only. When the scope was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Scope withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. When the scope was deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteTime")
    public String deleteTime;

    public Scope withDeleteTime(String deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }
    
    /**
     * The resource name for the scope `projects/{project}/locations/{location}/scopes/{scope}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Scope withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * ScopeLifecycleState describes the state of a Scope resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ScopeLifecycleState state;

    public Scope withState(ScopeLifecycleState state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. Google-generated UUID for this resource. This is unique across all scope resources. If a scope resource is deleted and another resource with the same name is created, it gets a different uid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public Scope withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. When the scope was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Scope withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Scope(){}
}
