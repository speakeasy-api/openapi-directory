<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetV2TasksJsonRequest
{
    /**
     * Filters tasks by the account to which they are associated.
     * 
     * @var ?array<int> $accountId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=account_id')]
    public ?array $accountId = null;
    
    /**
     * Filters tasks by their current state. Valid current_states include: ['scheduled', 'completed'].
     * 
     * @var ?array<string> $currentState
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=current_state')]
    public ?array $currentState = null;
    
    /**
     * Filters tasks by idempotency key.
     * 
     * @var ?string $idempotencyKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=idempotency_key')]
    public ?string $idempotencyKey = null;
    
    /**
     * IDs of tasks to fetch.
     * 
     * @var ?array<int> $ids
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=ids')]
    public ?array $ids = null;
    
    /**
     * Whether to include total_pages and total_count in the metadata. Defaults to false
     * 
     * @var ?bool $includePagingCounts
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include_paging_counts')]
    public ?bool $includePagingCounts = null;
    
    /**
     * Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data
     * 
     * @var ?bool $limitPagingCounts
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit_paging_counts')]
    public ?bool $limitPagingCounts = null;
    
    /**
     * Filters tasks by locale of the person to which they are associated.
     * 
     * @var ?array<string> $locale
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=locale')]
    public ?array $locale = null;
    
    /**
     * The current page to fetch results from. Defaults to 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * How many records to show per page in the range [1, 100]. Defaults to 25
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * Filters tasks by the person to which they are associated.
     * 
     * @var ?array<int> $personId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=person_id')]
    public ?array $personId = null;
    
    /**
     * Key to sort on, must be one of: due_date, due_at. Defaults to due_date
     * 
     * @var ?string $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?string $sortBy = null;
    
    /**
     * Direction to sort in, must be one of: ASC, DESC. Defaults to ASC
     * 
     * @var ?string $sortDirection
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_direction')]
    public ?string $sortDirection = null;
    
    /**
     * Filters tasks by their task type. Valid task_types include: ['call', 'email', 'general'].
     * 
     * @var ?array<string> $taskType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=task_type')]
    public ?array $taskType = null;
    
    /**
     * Filters tasks by time interval. Valid time_intervals include: ['overdue', 'today', 'tomorrow', 'this_week', 'next_week'].
     * 
     * @var ?string $timeIntervalFilter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=time_interval_filter')]
    public ?string $timeIntervalFilter = null;
    
    /**
     * Filters tasks by the user to which they are assigned.
     * 
     * @var ?array<int> $userId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=user_id')]
    public ?array $userId = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->currentState = null;
		$this->idempotencyKey = null;
		$this->ids = null;
		$this->includePagingCounts = null;
		$this->limitPagingCounts = null;
		$this->locale = null;
		$this->page = null;
		$this->perPage = null;
		$this->personId = null;
		$this->sortBy = null;
		$this->sortDirection = null;
		$this->taskType = null;
		$this->timeIntervalFilter = null;
		$this->userId = null;
	}
}
