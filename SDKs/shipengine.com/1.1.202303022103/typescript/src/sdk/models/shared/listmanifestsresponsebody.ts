/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Link } from "./link";
import { OptionalLink } from "./optionallink";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Helpful links to other pages of results
 */
export class ListManifestsResponseBodyPaginationLink extends SpeakeasyBase {
  /**
   * The link to the first page of results.  This object will _always_ have an `href` field. If there are no results, then the first page will contain an empty array of items.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first" })
  @Type(() => Link)
  first: Link;

  /**
   * The link to the final page of results.  This object will _always_ have an `href` field. If there are no results, then the final page will contain an empty array of items.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last" })
  @Type(() => Link)
  last: Link;

  /**
   * The link to the next page of results.  The `href` field will only be set when the `page` is less than `pages`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  @Type(() => OptionalLink)
  next: OptionalLink;

  /**
   * The link to the previous page of results.  The `href` field will only be set when the `page` is 2 or greater.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prev" })
  @Type(() => OptionalLink)
  prev: OptionalLink;
}

/**
 * Object containing the href link to download the manifest file
 */
export class ListManifestsResponseBodyManifestManifestDownload extends SpeakeasyBase {
  /**
   * The URL of the linked resource, if any
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

/**
 * Used for combining packages into one scannable form that a carrier can use when picking up a large
 *
 * @remarks
 * number of shipments
 *
 */
export class ListManifestsResponseBodyManifest extends SpeakeasyBase {
  /**
   * A string that uniquely identifies the carrier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carrier_id" })
  carrierId?: string;

  /**
   * The date-time that the manifest was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * A string that uniquely identifies the form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "form_id" })
  formId?: string;

  /**
   * An array of the label ids used in this manifest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label_ids" })
  labelIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "manifest_download" })
  @Type(() => ListManifestsResponseBodyManifestManifestDownload)
  manifestDownload?: ListManifestsResponseBodyManifestManifestDownload;

  /**
   * A string that uniquely identifies the manifest
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manifest_id" })
  manifestId?: string;

  /**
   * The date-time that the manifests shipments will be picked up
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ship_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  shipDate?: Date;

  /**
   * The number of shipments that are included in this manifest
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipments" })
  shipments?: number;

  /**
   * A string that uniquely identifies the submission
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submission_id" })
  submissionId?: string;

  /**
   * A string that uniquely identifies the warehouse
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warehouse_id" })
  warehouseId?: string;
}

/**
 * A list manifests response body
 */
export class ListManifestsResponseBody extends SpeakeasyBase {
  /**
   * Helpful links to other pages of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => ListManifestsResponseBodyPaginationLink)
  links: ListManifestsResponseBodyPaginationLink;

  /**
   * The list of available manifests
   */
  @SpeakeasyMetadata({ elemType: ListManifestsResponseBodyManifest })
  @Expose({ name: "manifests" })
  @Type(() => ListManifestsResponseBodyManifest)
  manifests: ListManifestsResponseBodyManifest[];

  /**
   * Current page of the list manifests results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page: number;

  /**
   * Total number of pages for list manifests results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pages" })
  pages: number;

  /**
   * The total number of manifests returned
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}
