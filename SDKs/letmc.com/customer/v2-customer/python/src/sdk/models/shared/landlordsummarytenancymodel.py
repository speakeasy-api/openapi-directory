"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LandlordSummaryTenancyModel:
    r"""Landlord Summary - Landing Page."""
    
    bond: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Bond'), 'exclude': lambda f: f is None }})
    r"""Bomd"""  
    branch_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BranchID'), 'exclude': lambda f: f is None }})
    r"""The Tenancy Branch ID"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""Description."""  
    global_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalReference'), 'exclude': lambda f: f is None }})
    r"""User Friendly ID"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ID'), 'exclude': lambda f: f is None }})
    r"""ID"""  
    maintenance_jobs: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaintenanceJobs'), 'exclude': lambda f: f is None }})
    r"""Maintenance Jobs."""  
    managed_rent: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ManagedRent'), 'exclude': lambda f: f is None }})
    r"""State of the tenancy"""  
    property_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PropertyAddress'), 'exclude': lambda f: f is None }})
    r"""Display Property Address"""  
    rent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Rent'), 'exclude': lambda f: f is None }})
    r"""Rent"""  
    rent_arrears: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RentArrears'), 'exclude': lambda f: f is None }})
    r"""Rent Arrears"""  
    rent_collected: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RentCollected'), 'exclude': lambda f: f is None }})
    r"""Rent Arrears"""  
    tenancy_property: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TenancyProperty'), 'exclude': lambda f: f is None }})
    r"""Tenancy Property"""  
    tenancy_state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TenancyState'), 'exclude': lambda f: f is None }})
    r"""State of the tenancy"""  
    