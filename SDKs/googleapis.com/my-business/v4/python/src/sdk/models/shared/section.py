"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import item as shared_item
from ..shared import label as shared_label
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SectionSectionTypeEnum(str, Enum):
    r"""Optional. Type of the current price list section. Default value is FOOD."""
    SECTION_TYPE_UNSPECIFIED = 'SECTION_TYPE_UNSPECIFIED'
    FOOD = 'FOOD'
    SERVICES = 'SERVICES'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Section:
    r"""A section of the price list containing one or more items."""
    
    items: Optional[list[shared_item.Item]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})
    r"""Items that are contained within this section of the price list."""  
    labels: Optional[list[shared_label.Label]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Required. Language-tagged labels for the section. We recommend that section names and descriptions be 140 characters or less. At least one set of labels is required."""  
    section_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionId'), 'exclude': lambda f: f is None }})
    r"""Required. ID for the section. Price list, section, and item IDs cannot be duplicated within this Location."""  
    section_type: Optional[SectionSectionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionType'), 'exclude': lambda f: f is None }})
    r"""Optional. Type of the current price list section. Default value is FOOD."""  
    