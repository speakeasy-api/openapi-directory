// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoadBalancerTLSCertificateDomainStatusEnum string

const (
	LoadBalancerTLSCertificateDomainStatusEnumPendingValidation LoadBalancerTLSCertificateDomainStatusEnum = "PENDING_VALIDATION"
	LoadBalancerTLSCertificateDomainStatusEnumFailed            LoadBalancerTLSCertificateDomainStatusEnum = "FAILED"
	LoadBalancerTLSCertificateDomainStatusEnumSuccess           LoadBalancerTLSCertificateDomainStatusEnum = "SUCCESS"
)

func (e LoadBalancerTLSCertificateDomainStatusEnum) ToPointer() *LoadBalancerTLSCertificateDomainStatusEnum {
	return &e
}

func (e *LoadBalancerTLSCertificateDomainStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING_VALIDATION":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCESS":
		*e = LoadBalancerTLSCertificateDomainStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoadBalancerTLSCertificateDomainStatusEnum: %v", v)
	}
}
