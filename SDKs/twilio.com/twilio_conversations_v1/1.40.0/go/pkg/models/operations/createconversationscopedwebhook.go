// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateConversationScopedWebhookServerList = []string{
	"https://conversations.twilio.com",
}

type CreateConversationScopedWebhookSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type CreateConversationScopedWebhookPathParams struct {
	// The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.
	ConversationSid string `pathParam:"style=simple,explode=false,name=ConversationSid"`
}

type CreateConversationScopedWebhookCreateConversationScopedWebhookRequest struct {
	// The list of events, firing webhook event for this Conversation.
	ConfigurationFilters []string `form:"name=Configuration.Filters"`
	// The studio flow SID, where the webhook should be sent to.
	ConfigurationFlowSid *string                                         `form:"name=Configuration.FlowSid"`
	ConfigurationMethod  *shared.ConversationScopedWebhookEnumMethodEnum `form:"name=Configuration.Method"`
	// The message index for which and it's successors the webhook will be replayed. Not set by default
	ConfigurationReplayAfter *int64 `form:"name=Configuration.ReplayAfter"`
	// The list of keywords, firing webhook event for this Conversation.
	ConfigurationTriggers []string `form:"name=Configuration.Triggers"`
	// The absolute url the webhook request should be sent to.
	ConfigurationURL *string                                        `form:"name=Configuration.Url"`
	Target           shared.ConversationScopedWebhookEnumTargetEnum `form:"name=Target"`
}

type CreateConversationScopedWebhookRequest struct {
	PathParams CreateConversationScopedWebhookPathParams
	Request    *CreateConversationScopedWebhookCreateConversationScopedWebhookRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   CreateConversationScopedWebhookSecurity
	ServerURL  *string
}

type CreateConversationScopedWebhookResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	ConversationsV1ConversationConversationScopedWebhook *shared.ConversationsV1ConversationConversationScopedWebhook
}
