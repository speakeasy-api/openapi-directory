/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ConfigurationUpdateSummary {
    /**
     * The username of the account that changed the value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiUser")
    public String apiUser;

    public ConfigurationUpdateSummary withApiUser(String apiUser) {
        this.apiUser = apiUser;
        return this;
    }
    
    /**
     * JSON-serialized blob of metadata used to fetch information about the configuration update. For example, the upgrade version, previous state, etc.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configChangeMetadata")
    public String configChangeMetadata;

    public ConfigurationUpdateSummary withConfigChangeMetadata(String configChangeMetadata) {
        this.configChangeMetadata = configChangeMetadata;
        return this;
    }
    
    /**
     * The timestamp of the change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modifiedDateTime")
    public OffsetDateTime modifiedDateTime;

    public ConfigurationUpdateSummary withModifiedDateTime(OffsetDateTime modifiedDateTime) {
        this.modifiedDateTime = modifiedDateTime;
        return this;
    }
    
    /**
     * The name of the updated configuration option.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ConfigurationUpdateSummary withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The namespace of the updated configuration. Changes that do not begin with the string `local_` are cluster-wide changes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespace")
    public String namespace;

    public ConfigurationUpdateSummary withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }
    
    /**
     * The value of the configuration option after the update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newValue")
    public String newValue;

    public ConfigurationUpdateSummary withNewValue(String newValue) {
        this.newValue = newValue;
        return this;
    }
    
    /**
     * The updated node. For cluster-wide configuration changes, this value is `all`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeId")
    public String nodeId;

    public ConfigurationUpdateSummary withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * The original value of the configuration option.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oldValue")
    public String oldValue;

    public ConfigurationUpdateSummary withOldValue(String oldValue) {
        this.oldValue = oldValue;
        return this;
    }
    
    /**
     * The source of the change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;

    public ConfigurationUpdateSummary withSource(String source) {
        this.source = source;
        return this;
    }
    
    public ConfigurationUpdateSummary(){}
}
