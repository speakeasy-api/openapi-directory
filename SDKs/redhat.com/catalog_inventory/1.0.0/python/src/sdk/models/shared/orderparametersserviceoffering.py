"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderParametersServiceOfferingInput:
    r"""Order parameters defining the service and provider control"""
    
    provider_control_parameters: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provider_control_parameters'), 'exclude': lambda f: f is None }})
    r"""The provider specific parameters needed to provision this service. This might include namespaces, special keys"""  
    service_parameters: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_parameters'), 'exclude': lambda f: f is None }})
    r"""JSON object with provisioning parameters"""  
    