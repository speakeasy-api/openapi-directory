// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EvaluationFilterVariableEnum - <p>A list of the variables to use in searching or filtering <code>Evaluation</code>.</p> <ul> <li> <p> <code>CreatedAt</code> - Sets the search criteria to <code>Evaluation</code> creation date.</p> </li> <li> <p> <code>Status</code> - Sets the search criteria to <code>Evaluation</code> status.</p> </li> <li> <p> <code>Name</code> - Sets the search criteria to the contents of <code>Evaluation</code> <b> </b> <code>Name</code>.</p> </li> <li> <p> <code>IAMUser</code> - Sets the search criteria to the user account that invoked an evaluation.</p> </li> <li> <p> <code>MLModelId</code> - Sets the search criteria to the <code>Predictor</code> that was evaluated.</p> </li> <li> <p> <code>DataSourceId</code> - Sets the search criteria to the <code>DataSource</code> used in evaluation.</p> </li> <li> <p> <code>DataUri</code> - Sets the search criteria to the data file(s) used in evaluation. The URL can identify either a file or an Amazon Simple Storage Service (Amazon S3) bucket or directory.</p> </li> </ul>
type EvaluationFilterVariableEnum string

const (
	EvaluationFilterVariableEnumCreatedAt     EvaluationFilterVariableEnum = "CreatedAt"
	EvaluationFilterVariableEnumLastUpdatedAt EvaluationFilterVariableEnum = "LastUpdatedAt"
	EvaluationFilterVariableEnumStatus        EvaluationFilterVariableEnum = "Status"
	EvaluationFilterVariableEnumName          EvaluationFilterVariableEnum = "Name"
	EvaluationFilterVariableEnumIamUser       EvaluationFilterVariableEnum = "IAMUser"
	EvaluationFilterVariableEnumMlModelID     EvaluationFilterVariableEnum = "MLModelId"
	EvaluationFilterVariableEnumDataSourceID  EvaluationFilterVariableEnum = "DataSourceId"
	EvaluationFilterVariableEnumDataURI       EvaluationFilterVariableEnum = "DataURI"
)

func (e *EvaluationFilterVariableEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreatedAt":
		fallthrough
	case "LastUpdatedAt":
		fallthrough
	case "Status":
		fallthrough
	case "Name":
		fallthrough
	case "IAMUser":
		fallthrough
	case "MLModelId":
		fallthrough
	case "DataSourceId":
		fallthrough
	case "DataURI":
		*e = EvaluationFilterVariableEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EvaluationFilterVariableEnum: %s", s)
	}
}
