<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EventTopic
{
    /**
     * Indicates the kind of event that was executed. In most cases it's a verb. I.e. 'connected', 'created' etc...
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventTopicActionEnum $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EventTopicActionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventTopicActionEnum $action = null;
    
    /**
     * Extra arguments may be added to a topic string, it depends on the `resource_type` and the `action` what extra arguments are added.
     * 
     * @var mixed $arguments
     */
	#[\JMS\Serializer\Annotation\SerializedName('arguments')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $arguments = null;
    
    /**
     * Unique identifier for resource.
     * 
     * @var ?string $resourceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resourceId = null;
    
    /**
     * The The available event topic resources types on the API. Is written in its plural form.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventTopicResourceTypeEnum $resourceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EventTopicResourceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventTopicResourceTypeEnum $resourceType = null;
    
    /**
     * Url to the individual resource.
     * 
     * @var ?string $resourceUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resourceUrl = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->arguments = null;
		$this->resourceId = null;
		$this->resourceType = null;
		$this->resourceUrl = null;
	}
}
