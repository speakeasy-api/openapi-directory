/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MigrationJob - Represents a Database Migration Service migration job object.
 */
public class MigrationJob {
    /**
     * A conversion workspace's version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversionWorkspace")
    public ConversionWorkspaceInfo conversionWorkspace;

    public MigrationJob withConversionWorkspace(ConversionWorkspaceInfo conversionWorkspace) {
        this.conversionWorkspace = conversionWorkspace;
        return this;
    }
    
    /**
     * Output only. The timestamp when the migration job resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public MigrationJob withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Required. The resource name (URI) of the destination connection profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destination")
    public String destination;

    public MigrationJob withDestination(String destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * A message defining the database engine and provider.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationDatabase")
    public DatabaseType destinationDatabase;

    public MigrationJob withDestinationDatabase(DatabaseType destinationDatabase) {
        this.destinationDatabase = destinationDatabase;
        return this;
    }
    
    /**
     * The migration job display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public MigrationJob withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Dump flags definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dumpFlags")
    public DumpFlags dumpFlags;

    public MigrationJob withDumpFlags(DumpFlags dumpFlags) {
        this.dumpFlags = dumpFlags;
        return this;
    }
    
    /**
     * The path to the dump file in Google Cloud Storage, in the format: (gs://[BUCKET_NAME]/[OBJECT_NAME]). This field and the "dump_flags" field are mutually exclusive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dumpPath")
    public String dumpPath;

    public MigrationJob withDumpPath(String dumpPath) {
        this.dumpPath = dumpPath;
        return this;
    }
    
    /**
     * Output only. The duration of the migration job (in seconds). A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public String duration;

    public MigrationJob withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Output only. If the migration job is completed, the time when it was completed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public MigrationJob withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;

    public MigrationJob withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * This field can be used to select the entities to migrate as part of the migration job. It uses AIP-160 notation to select a subset of the entities configured on the associated conversion-workspace. This field should not be set on migration-jobs that are not associated with a conversion workspace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filter")
    public String filter;

    public MigrationJob withFilter(String filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * The resource labels for migration job to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public MigrationJob withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The name (URI) of this migration job resource, in the form of: projects/{project}/locations/{location}/migrationJobs/{migrationJob}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public MigrationJob withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The current migration job phase.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phase")
    public MigrationJobPhaseEnum phase;

    public MigrationJob withPhase(MigrationJobPhaseEnum phase) {
        this.phase = phase;
        return this;
    }
    
    /**
     * The details needed to configure a reverse SSH tunnel between the source and destination databases. These details will be used when calling the generateSshScript method (see https://cloud.google.com/database-migration/docs/reference/rest/v1/projects.locations.migrationJobs/generateSshScript) to produce the script that will help set up the reverse SSH tunnel, and to set up the VPC peering between the Cloud SQL private network and the VPC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reverseSshConnectivity")
    public ReverseSshConnectivity reverseSshConnectivity;

    public MigrationJob withReverseSshConnectivity(ReverseSshConnectivity reverseSshConnectivity) {
        this.reverseSshConnectivity = reverseSshConnectivity;
        return this;
    }
    
    /**
     * Required. The resource name (URI) of the source connection profile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;

    public MigrationJob withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * A message defining the database engine and provider.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceDatabase")
    public DatabaseType sourceDatabase;

    public MigrationJob withSourceDatabase(DatabaseType sourceDatabase) {
        this.sourceDatabase = sourceDatabase;
        return this;
    }
    
    /**
     * The current migration job state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public MigrationJobStateEnum state;

    public MigrationJob withState(MigrationJobStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The source database will allow incoming connections from the public IP of the destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("staticIpConnectivity")
    public java.util.Map<String, Object> staticIpConnectivity;

    public MigrationJob withStaticIpConnectivity(java.util.Map<String, Object> staticIpConnectivity) {
        this.staticIpConnectivity = staticIpConnectivity;
        return this;
    }
    
    /**
     * Required. The migration job type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public MigrationJobTypeEnum type;

    public MigrationJob withType(MigrationJobTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Output only. The timestamp when the migration job resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public MigrationJob withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * The details of the VPC where the source database is located in Google Cloud. We will use this information to set up the VPC peering connection between Cloud SQL and this VPC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcPeeringConnectivity")
    public VpcPeeringConnectivity vpcPeeringConnectivity;

    public MigrationJob withVpcPeeringConnectivity(VpcPeeringConnectivity vpcPeeringConnectivity) {
        this.vpcPeeringConnectivity = vpcPeeringConnectivity;
        return this;
    }
    
    public MigrationJob(){}
}
