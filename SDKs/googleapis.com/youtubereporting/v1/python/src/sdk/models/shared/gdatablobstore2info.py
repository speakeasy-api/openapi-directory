"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GdataBlobstore2Info:
    r"""gdata"""
    
    blob_generation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blobGeneration'), 'exclude': lambda f: f is None }})
    r"""gdata"""  
    blob_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blobId'), 'exclude': lambda f: f is None }})
    r"""gdata"""  
    download_read_handle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downloadReadHandle'), 'exclude': lambda f: f is None }})
    r"""gdata"""  
    read_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readToken'), 'exclude': lambda f: f is None }})
    r"""gdata"""  
    upload_metadata_container: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uploadMetadataContainer'), 'exclude': lambda f: f is None }})
    r"""gdata"""  
    