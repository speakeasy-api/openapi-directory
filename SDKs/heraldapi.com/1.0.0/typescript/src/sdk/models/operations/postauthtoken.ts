/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostAuthTokenRequestBody extends SpeakeasyBase {
  /**
   * Your Herald API key. This should have been provided to you by a member of the Herald team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_key" })
  apiKey: string;
}

/**
 * OK
 */
export class PostAuthToken200ApplicationJSON extends SpeakeasyBase {
  /**
   * An expiring access token that can be used as a bearer token for all auth-protected Herald endpoints.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access_token" })
  accessToken: string;

  /**
   * Timestamp at which the provided access token will expire, in seconds since Unix epoch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  expiresAt: number;
}

export class PostAuthTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postAuthToken200ApplicationJSONObject?: PostAuthToken200ApplicationJSON;
}
