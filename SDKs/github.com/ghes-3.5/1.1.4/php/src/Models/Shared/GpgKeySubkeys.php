<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GpgKeySubkeys
{
	#[\JMS\Serializer\Annotation\SerializedName('can_certify')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canCertify = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_encrypt_comms')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canEncryptComms = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_encrypt_storage')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canEncryptStorage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('can_sign')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canSign = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * $emails
     * 
     * @var ?array<mixed> $emails
     */
	#[\JMS\Serializer\Annotation\SerializedName('emails')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('expires_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expiresAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('key_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keyId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('primary_key_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $primaryKeyId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('public_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicKey = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('raw_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rawKey = null;
    
    /**
     * $subkeys
     * 
     * @var ?array<mixed> $subkeys
     */
	#[\JMS\Serializer\Annotation\SerializedName('subkeys')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subkeys = null;
    
	public function __construct()
	{
		$this->canCertify = null;
		$this->canEncryptComms = null;
		$this->canEncryptStorage = null;
		$this->canSign = null;
		$this->createdAt = null;
		$this->emails = null;
		$this->expiresAt = null;
		$this->id = null;
		$this->keyId = null;
		$this->primaryKeyId = null;
		$this->publicKey = null;
		$this->rawKey = null;
		$this->subkeys = null;
	}
}
