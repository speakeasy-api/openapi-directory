// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PutAPIDisplayAdsIDPathParams struct {
	// The ID of the user to unpublish.
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// PutAPIDisplayAdsIDRequestBodyDisplayToEnum - Potentially limits visitors to whom the ad is visible
type PutAPIDisplayAdsIDRequestBodyDisplayToEnum string

const (
	PutAPIDisplayAdsIDRequestBodyDisplayToEnumAll       PutAPIDisplayAdsIDRequestBodyDisplayToEnum = "all"
	PutAPIDisplayAdsIDRequestBodyDisplayToEnumLoggedIn  PutAPIDisplayAdsIDRequestBodyDisplayToEnum = "logged_in"
	PutAPIDisplayAdsIDRequestBodyDisplayToEnumLoggedOut PutAPIDisplayAdsIDRequestBodyDisplayToEnum = "logged_out"
)

func (e *PutAPIDisplayAdsIDRequestBodyDisplayToEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "logged_in":
		fallthrough
	case "logged_out":
		*e = PutAPIDisplayAdsIDRequestBodyDisplayToEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAPIDisplayAdsIDRequestBodyDisplayToEnum: %s", s)
	}
}

// PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum - Identifies which area of site layout the ad can appear in
type PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum string

const (
	PutAPIDisplayAdsIDRequestBodyPlacementAreaEnumSidebarLeft  PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum = "sidebar_left"
	PutAPIDisplayAdsIDRequestBodyPlacementAreaEnumSidebarLeft2 PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum = "sidebar_left_2"
	PutAPIDisplayAdsIDRequestBodyPlacementAreaEnumSidebarRight PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum = "sidebar_right"
	PutAPIDisplayAdsIDRequestBodyPlacementAreaEnumPostSidebar  PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum = "post_sidebar"
	PutAPIDisplayAdsIDRequestBodyPlacementAreaEnumPostComments PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum = "post_comments"
)

func (e *PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "sidebar_left":
		fallthrough
	case "sidebar_left_2":
		fallthrough
	case "sidebar_right":
		fallthrough
	case "post_sidebar":
		fallthrough
	case "post_comments":
		*e = PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum: %s", s)
	}
}

type PutAPIDisplayAdsIDRequestBody struct {
	// Ad must be both published and approved to be in rotation
	Approved *bool `json:"approved,omitempty"`
	// The text (in markdown) of the ad (required)
	BodyMarkdown string `json:"body_markdown"`
	// Identifies the user who created the ad.
	CreatorID *int64 `json:"creator_id,omitempty"`
	// Potentially limits visitors to whom the ad is visible
	DisplayTo *PutAPIDisplayAdsIDRequestBodyDisplayToEnum `json:"display_to,omitempty"`
	// For internal use, helps distinguish ads from one another
	Name string `json:"name"`
	// Identifies the organization to which the ad belongs, required for 'community' type ads
	OrganizationID *int64 `json:"organization_id,omitempty"`
	// Identifies which area of site layout the ad can appear in
	PlacementArea PutAPIDisplayAdsIDRequestBodyPlacementAreaEnum `json:"placement_area"`
	// Ad must be both published and approved to be in rotation
	Published *bool `json:"published,omitempty"`
	// Tags on which this ad can be displayed (blank is all/any tags)
	TagList *string `json:"tag_list,omitempty"`
}

type PutAPIDisplayAdsIDRequest struct {
	PathParams PutAPIDisplayAdsIDPathParams
	Request    *PutAPIDisplayAdsIDRequestBody `request:"mediaType=application/json"`
}

type PutAPIDisplayAdsIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
