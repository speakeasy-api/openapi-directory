// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HangupAllCallsResponseMessageEnum - Response message
type HangupAllCallsResponseMessageEnum string

const (
	HangupAllCallsResponseMessageEnumAllCallsHungup   HangupAllCallsResponseMessageEnum = "All Calls Hungup"
	HangupAllCallsResponseMessageEnumHangupCallFailed HangupAllCallsResponseMessageEnum = "Hangup Call Failed"
)

func (e *HangupAllCallsResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "All Calls Hungup":
		fallthrough
	case "Hangup Call Failed":
		*e = HangupAllCallsResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HangupAllCallsResponseMessageEnum: %s", s)
	}
}

// HangupAllCallsResponse - Response
type HangupAllCallsResponse struct {
	// Response message
	Message HangupAllCallsResponseMessageEnum `json:"Message"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
