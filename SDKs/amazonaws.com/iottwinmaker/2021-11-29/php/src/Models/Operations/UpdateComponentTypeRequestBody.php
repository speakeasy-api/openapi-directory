<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateComponentTypeRequestBody
{
    /**
     * The component type name.
     * 
     * @var ?string $componentTypeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('componentTypeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $componentTypeName = null;
    
    /**
     * The description of the component type.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Specifies the component type that this component type extends.
     * 
     * @var ?array<string> $extendsFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('extendsFrom')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $extendsFrom = null;
    
    /**
     * An object that maps strings to the functions in the component type. Each string in the mapping must be unique to this object.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\FunctionRequest> $functions
     */
	#[\JMS\Serializer\Annotation\SerializedName('functions')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\FunctionRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $functions = null;
    
    /**
     * A Boolean value that specifies whether an entity can have more than one component of this type.
     * 
     * @var ?bool $isSingleton
     */
	#[\JMS\Serializer\Annotation\SerializedName('isSingleton')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isSingleton = null;
    
    /**
     * An object that maps strings to the property definitions in the component type. Each string in the mapping must be unique to this object.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\PropertyDefinitionRequest> $propertyDefinitions
     */
	#[\JMS\Serializer\Annotation\SerializedName('propertyDefinitions')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\PropertyDefinitionRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $propertyDefinitions = null;
    
    /**
     * The property groups.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\PropertyGroupRequest> $propertyGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('propertyGroups')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\PropertyGroupRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $propertyGroups = null;
    
	public function __construct()
	{
		$this->componentTypeName = null;
		$this->description = null;
		$this->extendsFrom = null;
		$this->functions = null;
		$this->isSingleton = null;
		$this->propertyDefinitions = null;
		$this->propertyGroups = null;
	}
}
