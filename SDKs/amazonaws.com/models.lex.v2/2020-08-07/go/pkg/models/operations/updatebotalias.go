// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateBotAliasRequestBodyConversationLogSettings - Configures conversation logging that saves audio, text, and metadata for the conversations with your users.
type UpdateBotAliasRequestBodyConversationLogSettings struct {
	AudioLogSettings []shared.AudioLogSetting `json:"audioLogSettings,omitempty"`
	TextLogSettings  []shared.TextLogSetting  `json:"textLogSettings,omitempty"`
}

// UpdateBotAliasRequestBodySentimentAnalysisSettings - Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
type UpdateBotAliasRequestBodySentimentAnalysisSettings struct {
	DetectSentiment *bool `json:"detectSentiment,omitempty"`
}

type UpdateBotAliasRequestBody struct {
	// The new Lambda functions to use in each locale for the bot alias.
	BotAliasLocaleSettings map[string]shared.BotAliasLocaleSettings `json:"botAliasLocaleSettings,omitempty"`
	// The new name to assign to the bot alias.
	BotAliasName string `json:"botAliasName"`
	// The new bot version to assign to the bot alias.
	BotVersion *string `json:"botVersion,omitempty"`
	// Configures conversation logging that saves audio, text, and metadata for the conversations with your users.
	ConversationLogSettings *UpdateBotAliasRequestBodyConversationLogSettings `json:"conversationLogSettings,omitempty"`
	// The new description to assign to the bot alias.
	Description *string `json:"description,omitempty"`
	// Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
	SentimentAnalysisSettings *UpdateBotAliasRequestBodySentimentAnalysisSettings `json:"sentimentAnalysisSettings,omitempty"`
}

type UpdateBotAliasRequest struct {
	RequestBody       UpdateBotAliasRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The unique identifier of the bot alias.
	BotAliasID string `pathParam:"style=simple,explode=false,name=botAliasId"`
	// The identifier of the bot with the updated alias.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
}

type UpdateBotAliasResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateBotAliasResponse *shared.UpdateBotAliasResponse
	// ValidationException
	ValidationException interface{}
}
