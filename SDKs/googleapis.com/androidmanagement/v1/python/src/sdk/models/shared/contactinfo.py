"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContactInfo:
    r"""Contact details for managed Google Play enterprises."""
    
    contact_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactEmail'), 'exclude': lambda f: f is None }})
    r"""Email address for a point of contact, which will be used to send important announcements related to managed Google Play."""  
    data_protection_officer_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataProtectionOfficerEmail'), 'exclude': lambda f: f is None }})
    r"""The email of the data protection officer. The email is validated but not verified."""  
    data_protection_officer_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataProtectionOfficerName'), 'exclude': lambda f: f is None }})
    r"""The name of the data protection officer."""  
    data_protection_officer_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataProtectionOfficerPhone'), 'exclude': lambda f: f is None }})
    r"""The phone number of the data protection officer The phone number is validated but not verified."""  
    eu_representative_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('euRepresentativeEmail'), 'exclude': lambda f: f is None }})
    r"""The email of the EU representative. The email is validated but not verified."""  
    eu_representative_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('euRepresentativeName'), 'exclude': lambda f: f is None }})
    r"""The name of the EU representative."""  
    eu_representative_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('euRepresentativePhone'), 'exclude': lambda f: f is None }})
    r"""The phone number of the EU representative. The phone number is validated but not verified."""  
    